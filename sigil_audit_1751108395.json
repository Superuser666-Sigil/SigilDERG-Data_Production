[
  {
    "execution_id": "exec-73c0c258-05c6c713-1751108384",
    "timestamp": "2025-06-28T10:59:44.259722+00:00",
    "sacred_chain": {
      "input_data": "flexbuffers",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'flexbuffers' -> 'flexbuffers'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "flexbuffers",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "documentation_quality": 3.3333333333333335,
        "documentation_sources": [
          "crates_io",
          "docs_rs",
          "lib_rs"
        ],
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@1.3.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-1.3.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-1.3.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libbitflags-a8909ab656f6ef37.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "equivalent",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.1\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libequivalent-11c53fab1eb65eee.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libequivalent-11c53fab1eb65eee.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.16",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.16\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.16\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libunicode_ident-4da8d70525a17f4c.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libunicode_ident-4da8d70525a17f4c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#toml_datetime@0.6.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\toml_datetime-0.6.8\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "toml_datetime",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\toml_datetime-0.6.8\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libtoml_datetime-e3b09592f4159553.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libtoml_datetime-e3b09592f4159553.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "byteorder",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libbyteorder-9f6b13154950e555.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.20.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.20.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "once_cell",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.20.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "race",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libonce_cell-5d6c521a24bceee7.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libonce_cell-5d6c521a24bceee7.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.217",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.217\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.217\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\build\\serde-2da3335be1afeefa\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\build\\serde-2da3335be1afeefa\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.93\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.93\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\build\\proc-macro2-b8a505fc81f0b695\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\build\\proc-macro2-b8a505fc81f0b695\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-1.0.109\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-1.0.109\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "parsing",
                "printing",
                "proc-macro",
                "quote"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\build\\syn-d9bd8ef63aa4e6e9\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\build\\syn-d9bd8ef63aa4e6e9\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.217",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\build\\serde-5cc21eae0aec10d8\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\build\\proc-macro2-271692d77c62e0ef\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "syn_disable_nightly_tests"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\build\\syn-dec20418c3e27470\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hashbrown",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libhashbrown-5b97b59b5e81811e.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libhashbrown-5b97b59b5e81811e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.93\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.93\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libproc_macro2-e89a3a9d891fb81d.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libproc_macro2-e89a3a9d891fb81d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.7.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\indexmap-2.7.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "indexmap",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\indexmap-2.7.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libindexmap-0bafe9eaf1c6fa41.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libindexmap-0bafe9eaf1c6fa41.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.38\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.38\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libquote-2ccc75cb09c501ba.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libquote-2ccc75cb09c501ba.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winnow@0.5.40",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winnow-0.5.40\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "winnow",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winnow-0.5.40\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libwinnow-c71172044567a8b8.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libwinnow-c71172044567a8b8.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.217",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.217\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "serde",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.217\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libserde-1e6920f09814fe14.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro-crate@1.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro-crate-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro_crate",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro-crate-1.3.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libproc_macro_crate-740de0d49a3d19df.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libproc_macro_crate-740de0d49a3d19df.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-1.0.109\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-1.0.109\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "parsing",
                "printing",
                "proc-macro",
                "quote"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libsyn-f72f17e3770531cd.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libsyn-f72f17e3770531cd.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#toml_edit@0.19.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\toml_edit-0.19.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "toml_edit",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\toml_edit-0.19.15\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libtoml_edit-c6d58692968eff38.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libtoml_edit-c6d58692968eff38.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.98\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.98\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "derive",
                "parsing",
                "printing",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libsyn-bbfa81424b0a3d55.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libsyn-bbfa81424b0a3d55.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num_enum_derive@0.5.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num_enum_derive-0.5.11\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "num_enum_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num_enum_derive-0.5.11\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "proc-macro-crate",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\num_enum_derive-a745083762e32e09.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\num_enum_derive-a745083762e32e09.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\num_enum_derive-a745083762e32e09.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\num_enum_derive-a745083762e32e09.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num_enum@0.5.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num_enum-0.5.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_enum",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num_enum-0.5.11\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libnum_enum-531d832f611773c4.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.217",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_derive-1.0.217\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "serde_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_derive-1.0.217\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\serde_derive-5d86e7a8e27ed121.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\serde_derive-5d86e7a8e27ed121.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\serde_derive-5d86e7a8e27ed121.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\serde_derive-5d86e7a8e27ed121.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unexpected `cfg` condition name: `serialize_human_readable`\n   --> src\\builder\\ser.rs:225:14\n    |\n225 |         cfg!(serialize_human_readable)\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: found config with similar value: `feature = \"serialize_human_readable\"`\n    |\n    = help: expected names are: `docsrs`, `feature`, and `test` and 31 more\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(serialize_human_readable)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(serialize_human_readable)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "expected names are: `docsrs`, `feature`, and `test` and 31 more",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using a Cargo feature instead",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(serialize_human_readable)'] }",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or consider adding `println!(\"cargo::rustc-check-cfg=cfg(serialize_human_readable)\");` to the top of the `build.rs`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(unexpected_cfgs)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "found config with similar value",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6583,
                        "byte_start": 6559,
                        "column_end": 38,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\builder\\ser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 225,
                        "line_start": 225,
                        "suggested_replacement": "feature = \"serialize_human_readable\"",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 38,
                            "highlight_start": 14,
                            "text": "        cfg!(serialize_human_readable)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "unexpected_cfgs",
                  "explanation": null
                },
                "level": "warning",
                "message": "unexpected `cfg` condition name: `serialize_human_readable`",
                "spans": [
                  {
                    "byte_end": 6583,
                    "byte_start": 6559,
                    "column_end": 38,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 225,
                    "line_start": 225,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 14,
                        "text": "        cfg!(serialize_human_readable)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unexpected `cfg` condition name: `deserialize_human_readable`\n   --> src\\reader\\de.rs:166:14\n    |\n166 |         cfg!(deserialize_human_readable)\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: found config with similar value: `feature = \"deserialize_human_readable\"`\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(deserialize_human_readable)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(deserialize_human_readable)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using a Cargo feature instead",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(deserialize_human_readable)'] }",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or consider adding `println!(\"cargo::rustc-check-cfg=cfg(deserialize_human_readable)\");` to the top of the `build.rs`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "found config with similar value",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4679,
                        "byte_start": 4653,
                        "column_end": 40,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\reader\\de.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 166,
                        "line_start": 166,
                        "suggested_replacement": "feature = \"deserialize_human_readable\"",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 14,
                            "text": "        cfg!(deserialize_human_readable)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "unexpected_cfgs",
                  "explanation": null
                },
                "level": "warning",
                "message": "unexpected `cfg` condition name: `deserialize_human_readable`",
                "spans": [
                  {
                    "byte_end": 4679,
                    "byte_start": 4653,
                    "column_end": 40,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "src\\reader\\de.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 166,
                    "line_start": 166,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 14,
                        "text": "        cfg!(deserialize_human_readable)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unused import: `MapReaderIndexer`\n  --> src\\reader\\mod.rs:29:26\n   |\n29 | pub use map::{MapReader, MapReaderIndexer};\n   |                          ^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(unused_imports)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "remove the unused import",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 944,
                        "byte_start": 926,
                        "column_end": 42,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\reader\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 29,
                        "line_start": 29,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 24,
                            "text": "pub use map::{MapReader, MapReaderIndexer};"
                          }
                        ]
                      },
                      {
                        "byte_end": 917,
                        "byte_start": 916,
                        "column_end": 15,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\reader\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 29,
                        "line_start": 29,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 15,
                            "highlight_start": 14,
                            "text": "pub use map::{MapReader, MapReaderIndexer};"
                          }
                        ]
                      },
                      {
                        "byte_end": 945,
                        "byte_start": 944,
                        "column_end": 43,
                        "column_start": 42,
                        "expansion": null,
                        "file_name": "src\\reader\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 29,
                        "line_start": 29,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 42,
                            "text": "pub use map::{MapReader, MapReaderIndexer};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "unused_imports",
                  "explanation": null
                },
                "level": "warning",
                "message": "unused import: `MapReaderIndexer`",
                "spans": [
                  {
                    "byte_end": 944,
                    "byte_start": 928,
                    "column_end": 42,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\reader\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 29,
                    "line_start": 29,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 26,
                        "text": "pub use map::{MapReader, MapReaderIndexer};"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libflexbuffers-e60231f478b422b1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.93\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.93\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\build\\proc-macro2-b8a505fc81f0b695\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\build\\proc-macro2-b8a505fc81f0b695\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\build\\proc-macro2-271692d77c62e0ef\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.16",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.16\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.16\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libunicode_ident-4da8d70525a17f4c.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libunicode_ident-4da8d70525a17f4c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hashbrown",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libhashbrown-5b97b59b5e81811e.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libhashbrown-5b97b59b5e81811e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "equivalent",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.1\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libequivalent-11c53fab1eb65eee.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libequivalent-11c53fab1eb65eee.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#toml_datetime@0.6.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\toml_datetime-0.6.8\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "toml_datetime",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\toml_datetime-0.6.8\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libtoml_datetime-e3b09592f4159553.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libtoml_datetime-e3b09592f4159553.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-1.0.109\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-1.0.109\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "parsing",
                "printing",
                "proc-macro",
                "quote"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\build\\syn-d9bd8ef63aa4e6e9\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\build\\syn-d9bd8ef63aa4e6e9\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winnow@0.5.40",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winnow-0.5.40\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "winnow",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winnow-0.5.40\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libwinnow-c71172044567a8b8.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libwinnow-c71172044567a8b8.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.20.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.20.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "once_cell",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.20.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "race",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libonce_cell-5d6c521a24bceee7.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libonce_cell-5d6c521a24bceee7.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.217",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.217\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.217\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\build\\serde-2da3335be1afeefa\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\build\\serde-2da3335be1afeefa\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@1.3.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-1.3.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-1.3.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libbitflags-a8909ab656f6ef37.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "byteorder",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libbyteorder-9f6b13154950e555.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.93\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.93\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libproc_macro2-e89a3a9d891fb81d.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libproc_macro2-e89a3a9d891fb81d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.7.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\indexmap-2.7.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "indexmap",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\indexmap-2.7.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libindexmap-0bafe9eaf1c6fa41.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libindexmap-0bafe9eaf1c6fa41.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "syn_disable_nightly_tests"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\build\\syn-dec20418c3e27470\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.217",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\build\\serde-5cc21eae0aec10d8\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.38\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.38\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libquote-2ccc75cb09c501ba.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libquote-2ccc75cb09c501ba.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#toml_edit@0.19.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\toml_edit-0.19.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "toml_edit",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\toml_edit-0.19.15\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libtoml_edit-c6d58692968eff38.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libtoml_edit-c6d58692968eff38.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.217",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.217\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "serde",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.217\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libserde-1e6920f09814fe14.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-1.0.109\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-1.0.109\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "parsing",
                "printing",
                "proc-macro",
                "quote"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libsyn-f72f17e3770531cd.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libsyn-f72f17e3770531cd.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro-crate@1.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro-crate-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro_crate",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro-crate-1.3.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libproc_macro_crate-740de0d49a3d19df.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libproc_macro_crate-740de0d49a3d19df.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.98\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.98\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "derive",
                "parsing",
                "printing",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libsyn-bbfa81424b0a3d55.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libsyn-bbfa81424b0a3d55.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num_enum_derive@0.5.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num_enum_derive-0.5.11\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "num_enum_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num_enum_derive-0.5.11\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "proc-macro-crate",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\num_enum_derive-a745083762e32e09.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\num_enum_derive-a745083762e32e09.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\num_enum_derive-a745083762e32e09.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\num_enum_derive-a745083762e32e09.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.217",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_derive-1.0.217\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "serde_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_derive-1.0.217\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\serde_derive-5d86e7a8e27ed121.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\serde_derive-5d86e7a8e27ed121.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\serde_derive-5d86e7a8e27ed121.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\serde_derive-5d86e7a8e27ed121.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num_enum@0.5.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num_enum-0.5.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_enum",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num_enum-0.5.11\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libnum_enum-531d832f611773c4.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\builder\\ser.rs:104:26\n    |\n104 |     fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>\n    |                          ^\n105 |     where\n106 |         T: Serialize,\n    |         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n    = note: `#[warn(clippy::multiple_bound_locations)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::multiple_bound_locations)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 3109,
                    "byte_start": 3108,
                    "column_end": 27,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 104,
                    "line_start": 104,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 26,
                        "text": "    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>"
                      }
                    ]
                  },
                  {
                    "byte_end": 3187,
                    "byte_start": 3186,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 106,
                    "line_start": 106,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        T: Serialize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\builder\\ser.rs:119:22\n    |\n119 |     fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Self::Error>\n    |                      ^\n120 |     where\n121 |         T: Serialize,\n    |         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 3587,
                    "byte_start": 3586,
                    "column_end": 23,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 119,
                    "line_start": 119,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 22,
                        "text": "    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Self::Error>"
                      }
                    ]
                  },
                  {
                    "byte_end": 3663,
                    "byte_start": 3662,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 121,
                    "line_start": 121,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        T: Serialize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\builder\\ser.rs:125:24\n    |\n125 |     fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>\n    |                        ^\n126 |     where\n127 |         T: Serialize,\n    |         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 3758,
                    "byte_start": 3757,
                    "column_end": 25,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 125,
                    "line_start": 125,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 24,
                        "text": "    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>"
                      }
                    ]
                  },
                  {
                    "byte_end": 3836,
                    "byte_start": 3835,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 127,
                    "line_start": 127,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        T: Serialize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\builder\\ser.rs:138:26\n    |\n138 |     fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>\n    |                          ^\n139 |     where\n140 |         T: Serialize,\n    |         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 4106,
                    "byte_start": 4105,
                    "column_end": 27,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 138,
                    "line_start": 138,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 26,
                        "text": "    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>"
                      }
                    ]
                  },
                  {
                    "byte_end": 4184,
                    "byte_start": 4183,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 140,
                    "line_start": 140,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        T: Serialize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\builder\\ser.rs:151:24\n    |\n151 |     fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>\n    |                        ^\n152 |     where\n153 |         T: Serialize,\n    |         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 4461,
                    "byte_start": 4460,
                    "column_end": 25,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 151,
                    "line_start": 151,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 24,
                        "text": "    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>"
                      }
                    ]
                  },
                  {
                    "byte_end": 4539,
                    "byte_start": 4538,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 153,
                    "line_start": 153,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        T: Serialize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\builder\\ser.rs:164:24\n    |\n164 |     fn serialize_field<T: ?Sized>(\n    |                        ^\n...\n170 |         T: Serialize,\n    |         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 4811,
                    "byte_start": 4810,
                    "column_end": 25,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 164,
                    "line_start": 164,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 24,
                        "text": "    fn serialize_field<T: ?Sized>("
                      }
                    ]
                  },
                  {
                    "byte_end": 4939,
                    "byte_start": 4938,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 170,
                    "line_start": 170,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        T: Serialize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\builder\\ser.rs:182:24\n    |\n182 |     fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>\n    |                        ^\n183 |     where\n184 |         T: Serialize,\n    |         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 5250,
                    "byte_start": 5249,
                    "column_end": 25,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 182,
                    "line_start": 182,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 24,
                        "text": "    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>"
                      }
                    ]
                  },
                  {
                    "byte_end": 5328,
                    "byte_start": 5327,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 184,
                    "line_start": 184,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        T: Serialize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\builder\\ser.rs:196:24\n    |\n196 |     fn serialize_field<T: ?Sized>(\n    |                        ^\n...\n202 |         T: Serialize,\n    |         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 5632,
                    "byte_start": 5631,
                    "column_end": 25,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 196,
                    "line_start": 196,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 24,
                        "text": "    fn serialize_field<T: ?Sized>("
                      }
                    ]
                  },
                  {
                    "byte_end": 5760,
                    "byte_start": 5759,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 202,
                    "line_start": 202,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        T: Serialize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unexpected `cfg` condition name: `serialize_human_readable`\n   --> src\\builder\\ser.rs:225:14\n    |\n225 |         cfg!(serialize_human_readable)\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: found config with similar value: `feature = \"serialize_human_readable\"`\n    |\n    = help: expected names are: `docsrs`, `feature`, and `test` and 31 more\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(serialize_human_readable)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(serialize_human_readable)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "expected names are: `docsrs`, `feature`, and `test` and 31 more",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using a Cargo feature instead",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(serialize_human_readable)'] }",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or consider adding `println!(\"cargo::rustc-check-cfg=cfg(serialize_human_readable)\");` to the top of the `build.rs`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(unexpected_cfgs)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "found config with similar value",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6583,
                        "byte_start": 6559,
                        "column_end": 38,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\builder\\ser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 225,
                        "line_start": 225,
                        "suggested_replacement": "feature = \"serialize_human_readable\"",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 38,
                            "highlight_start": 14,
                            "text": "        cfg!(serialize_human_readable)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "unexpected_cfgs",
                  "explanation": null
                },
                "level": "warning",
                "message": "unexpected `cfg` condition name: `serialize_human_readable`",
                "spans": [
                  {
                    "byte_end": 6583,
                    "byte_start": 6559,
                    "column_end": 38,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 225,
                    "line_start": 225,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 14,
                        "text": "        cfg!(serialize_human_readable)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\builder\\ser.rs:287:23\n    |\n287 |     fn serialize_some<T: ?Sized>(self, t: &T) -> Result<Self::Ok, Self::Error>\n    |                       ^\n288 |     where\n289 |         T: Serialize,\n    |         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 8762,
                    "byte_start": 8761,
                    "column_end": 24,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 287,
                    "line_start": 287,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 23,
                        "text": "    fn serialize_some<T: ?Sized>(self, t: &T) -> Result<Self::Ok, Self::Error>"
                      }
                    ]
                  },
                  {
                    "byte_end": 8837,
                    "byte_start": 8836,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 289,
                    "line_start": 289,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        T: Serialize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\builder\\ser.rs:310:33\n    |\n310 |     fn serialize_newtype_struct<T: ?Sized>(\n    |                                 ^\n...\n316 |         T: Serialize,\n    |         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 9474,
                    "byte_start": 9473,
                    "column_end": 34,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 310,
                    "line_start": 310,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 33,
                        "text": "    fn serialize_newtype_struct<T: ?Sized>("
                      }
                    ]
                  },
                  {
                    "byte_end": 9605,
                    "byte_start": 9604,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 316,
                    "line_start": 316,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        T: Serialize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\builder\\ser.rs:320:34\n    |\n320 |     fn serialize_newtype_variant<T: ?Sized>(\n    |                                  ^\n...\n328 |         T: Serialize,\n    |         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 9694,
                    "byte_start": 9693,
                    "column_end": 35,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 320,
                    "line_start": 320,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 34,
                        "text": "    fn serialize_newtype_variant<T: ?Sized>("
                      }
                    ]
                  },
                  {
                    "byte_end": 9885,
                    "byte_start": 9884,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 328,
                    "line_start": 328,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        T: Serialize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\builder\\ser.rs:412:33\n    |\n412 |     fn serialize_newtype_struct<T: ?Sized>(\n    |                                 ^\n...\n418 |         T: Serialize,\n    |         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 12188,
                    "byte_start": 12187,
                    "column_end": 34,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 412,
                    "line_start": 412,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 33,
                        "text": "    fn serialize_newtype_struct<T: ?Sized>("
                      }
                    ]
                  },
                  {
                    "byte_end": 12307,
                    "byte_start": 12306,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 418,
                    "line_start": 418,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        T: Serialize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\builder\\ser.rs:475:34\n    |\n475 |     fn serialize_newtype_variant<T: ?Sized>(\n    |                                  ^\n...\n483 |         T: Serialize,\n    |         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 14266,
                    "byte_start": 14265,
                    "column_end": 35,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 475,
                    "line_start": 475,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 34,
                        "text": "    fn serialize_newtype_variant<T: ?Sized>("
                      }
                    ]
                  },
                  {
                    "byte_end": 14447,
                    "byte_start": 14446,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 483,
                    "line_start": 483,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        T: Serialize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\builder\\ser.rs:490:23\n    |\n490 |     fn serialize_some<T: ?Sized>(self, _value: &T) -> Result<(), Error>\n    |                       ^\n491 |     where\n492 |         T: Serialize,\n    |         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 14614,
                    "byte_start": 14613,
                    "column_end": 24,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 490,
                    "line_start": 490,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 23,
                        "text": "    fn serialize_some<T: ?Sized>(self, _value: &T) -> Result<(), Error>"
                      }
                    ]
                  },
                  {
                    "byte_end": 14682,
                    "byte_start": 14681,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\builder\\ser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 492,
                    "line_start": 492,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        T: Serialize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: empty line after doc comment\n  --> src\\flexbuffer_type.rs:36:1\n   |\n36 | / /// vectors can reduce the minimum element width and therefore bytes used.\n37 | |\n   | |_^\n...\n40 |   pub enum FlexBufferType {\n   |   ----------------------- the comment documents this enum\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n   = note: `#[warn(clippy::empty_line_after_doc_comments)]` on by default\n   = help: if the empty line is unintentional, remove it\nhelp: if the comment should document the parent module use an inner doc comment\n   |\n15 ~ //! Represents all the valid types in a flexbuffer.\n16 ~ //!\n17 ~ //! Flexbuffers supports\n18 ~ //! heterogenous maps, heterogenous vectors, typed vectors, and fixed length\n19 ~ //! typed vectors for some lengths and types. Rust types are converted into\n20 ~ //! Flexbuffers via the [Pushable](trait.Pushable.html) trait.\n21 ~ //!\n22 ~ //! For exact details see the [internals document](\n23 ~ //! https://google.github.io/flatbuffers/flatbuffers_internals.html)\n24 ~ //!\n25 ~ //! ### Notes:\n26 ~ //! * In the binary format, Each element of a `Map` or (heterogenous) `Vector`\n27 ~ //! is stored with a byte describing its FlexBufferType and BitWidth.\n28 ~ //!\n29 ~ //! * Typed vectors do not store this extra type information and fixed length\n30 ~ //! typed vectors do not store length. Whether a vector is stored as a typed\n31 ~ //! vector or fixed length typed vector is determined dymaically from the\n32 ~ //! given data.\n33 ~ //!\n34 ~ //! * Indirect numbers are stored as an offset instead of inline. Using\n35 ~ //! indirect numbers instead of their inline counterparts in maps and typed\n36 ~ //! vectors can reduce the minimum element width and therefore bytes used.\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::empty_line_after_doc_comments)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if the empty line is unintentional, remove it",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1676,
                        "byte_start": 1675,
                        "column_end": 1,
                        "column_start": 75,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 37,
                        "line_start": 36,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 75,
                            "highlight_start": 75,
                            "text": "/// vectors can reduce the minimum element width and therefore bytes used."
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if the comment should document the parent module use an inner doc comment",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 613,
                        "byte_start": 612,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 15,
                        "line_start": 15,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "/// Represents all the valid types in a flexbuffer."
                          }
                        ]
                      },
                      {
                        "byte_end": 665,
                        "byte_start": 664,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "///"
                          }
                        ]
                      },
                      {
                        "byte_end": 669,
                        "byte_start": 668,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 17,
                        "line_start": 17,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "/// Flexbuffers supports"
                          }
                        ]
                      },
                      {
                        "byte_end": 694,
                        "byte_start": 693,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 18,
                        "line_start": 18,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "/// heterogenous maps, heterogenous vectors, typed vectors, and fixed length"
                          }
                        ]
                      },
                      {
                        "byte_end": 771,
                        "byte_start": 770,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "/// typed vectors for some lengths and types. Rust types are converted into"
                          }
                        ]
                      },
                      {
                        "byte_end": 847,
                        "byte_start": 846,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 20,
                        "line_start": 20,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "/// Flexbuffers via the [Pushable](trait.Pushable.html) trait."
                          }
                        ]
                      },
                      {
                        "byte_end": 910,
                        "byte_start": 909,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 21,
                        "line_start": 21,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "///"
                          }
                        ]
                      },
                      {
                        "byte_end": 914,
                        "byte_start": 913,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 22,
                        "line_start": 22,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "/// For exact details see the [internals document]("
                          }
                        ]
                      },
                      {
                        "byte_end": 966,
                        "byte_start": 965,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 23,
                        "line_start": 23,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "/// https://google.github.io/flatbuffers/flatbuffers_internals.html)"
                          }
                        ]
                      },
                      {
                        "byte_end": 1035,
                        "byte_start": 1034,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 24,
                        "line_start": 24,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "///"
                          }
                        ]
                      },
                      {
                        "byte_end": 1039,
                        "byte_start": 1038,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 25,
                        "line_start": 25,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "/// ### Notes:"
                          }
                        ]
                      },
                      {
                        "byte_end": 1054,
                        "byte_start": 1053,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 26,
                        "line_start": 26,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "/// * In the binary format, Each element of a `Map` or (heterogenous) `Vector`"
                          }
                        ]
                      },
                      {
                        "byte_end": 1133,
                        "byte_start": 1132,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 27,
                        "line_start": 27,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "/// is stored with a byte describing its FlexBufferType and BitWidth."
                          }
                        ]
                      },
                      {
                        "byte_end": 1203,
                        "byte_start": 1202,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 28,
                        "line_start": 28,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "///"
                          }
                        ]
                      },
                      {
                        "byte_end": 1207,
                        "byte_start": 1206,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 29,
                        "line_start": 29,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "/// * Typed vectors do not store this extra type information and fixed length"
                          }
                        ]
                      },
                      {
                        "byte_end": 1285,
                        "byte_start": 1284,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 30,
                        "line_start": 30,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "/// typed vectors do not store length. Whether a vector is stored as a typed"
                          }
                        ]
                      },
                      {
                        "byte_end": 1362,
                        "byte_start": 1361,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 31,
                        "line_start": 31,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "/// vector or fixed length typed vector is determined dymaically from the"
                          }
                        ]
                      },
                      {
                        "byte_end": 1436,
                        "byte_start": 1435,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 32,
                        "line_start": 32,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "/// given data."
                          }
                        ]
                      },
                      {
                        "byte_end": 1452,
                        "byte_start": 1451,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "///"
                          }
                        ]
                      },
                      {
                        "byte_end": 1456,
                        "byte_start": 1455,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 34,
                        "line_start": 34,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "/// * Indirect numbers are stored as an offset instead of inline. Using"
                          }
                        ]
                      },
                      {
                        "byte_end": 1528,
                        "byte_start": 1527,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 35,
                        "line_start": 35,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "/// indirect numbers instead of their inline counterparts in maps and typed"
                          }
                        ]
                      },
                      {
                        "byte_end": 1604,
                        "byte_start": 1603,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 36,
                        "line_start": 36,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "/// vectors can reduce the minimum element width and therefore bytes used."
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::empty_line_after_doc_comments",
                  "explanation": null
                },
                "level": "warning",
                "message": "empty line after doc comment",
                "spans": [
                  {
                    "byte_end": 1809,
                    "byte_start": 1786,
                    "column_end": 24,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\flexbuffer_type.rs",
                    "is_primary": false,
                    "label": "the comment documents this enum",
                    "line_end": 40,
                    "line_start": 40,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "pub enum FlexBufferType {"
                      }
                    ]
                  },
                  {
                    "byte_end": 1676,
                    "byte_start": 1601,
                    "column_end": 1,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\flexbuffer_type.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 37,
                    "line_start": 36,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 75,
                        "highlight_start": 1,
                        "text": "/// vectors can reduce the minimum element width and therefore bytes used."
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unexpected `cfg` condition name: `deserialize_human_readable`\n   --> src\\reader\\de.rs:166:14\n    |\n166 |         cfg!(deserialize_human_readable)\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: found config with similar value: `feature = \"deserialize_human_readable\"`\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(deserialize_human_readable)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(deserialize_human_readable)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using a Cargo feature instead",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(deserialize_human_readable)'] }",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or consider adding `println!(\"cargo::rustc-check-cfg=cfg(deserialize_human_readable)\");` to the top of the `build.rs`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "found config with similar value",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4679,
                        "byte_start": 4653,
                        "column_end": 40,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\reader\\de.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 166,
                        "line_start": 166,
                        "suggested_replacement": "feature = \"deserialize_human_readable\"",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 14,
                            "text": "        cfg!(deserialize_human_readable)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "unexpected_cfgs",
                  "explanation": null
                },
                "level": "warning",
                "message": "unexpected `cfg` condition name: `deserialize_human_readable`",
                "spans": [
                  {
                    "byte_end": 4679,
                    "byte_start": 4653,
                    "column_end": 40,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "src\\reader\\de.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 166,
                    "line_start": 166,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 14,
                        "text": "        cfg!(deserialize_human_readable)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unused import: `MapReaderIndexer`\n  --> src\\reader\\mod.rs:29:26\n   |\n29 | pub use map::{MapReader, MapReaderIndexer};\n   |                          ^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(unused_imports)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "remove the unused import",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 944,
                        "byte_start": 926,
                        "column_end": 42,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\reader\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 29,
                        "line_start": 29,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 24,
                            "text": "pub use map::{MapReader, MapReaderIndexer};"
                          }
                        ]
                      },
                      {
                        "byte_end": 917,
                        "byte_start": 916,
                        "column_end": 15,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\reader\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 29,
                        "line_start": 29,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 15,
                            "highlight_start": 14,
                            "text": "pub use map::{MapReader, MapReaderIndexer};"
                          }
                        ]
                      },
                      {
                        "byte_end": 945,
                        "byte_start": 944,
                        "column_end": 43,
                        "column_start": 42,
                        "expansion": null,
                        "file_name": "src\\reader\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 29,
                        "line_start": 29,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 42,
                            "text": "pub use map::{MapReader, MapReaderIndexer};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "unused_imports",
                  "explanation": null
                },
                "level": "warning",
                "message": "unused import: `MapReaderIndexer`",
                "spans": [
                  {
                    "byte_end": 944,
                    "byte_start": 928,
                    "column_end": 42,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\reader\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 29,
                    "line_start": 29,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 26,
                        "text": "pub use map::{MapReader, MapReaderIndexer};"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `impl` can be derived\n  --> src\\bitwidth.rs:59:1\n   |\n59 | / impl Default for BitWidth {\n60 | |     fn default() -> Self {\n61 | |         W8\n62 | |     }\n63 | | }\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n   = note: `#[warn(clippy::derivable_impls)]` on by default\nhelp: replace the manual implementation with a derive attribute and mark the default variant\n   |\n35 + #[derive(Default)]\n36 ~ pub enum BitWidth {\n37 ~     #[default]\n38 ~     W8 = 0,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::derivable_impls)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace the manual implementation with a derive attribute and mark the default variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1558,
                        "byte_start": 1484,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 64,
                        "line_start": 59,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "impl Default for BitWidth {"
                          },
                          {
                            "highlight_end": 27,
                            "highlight_start": 1,
                            "text": "    fn default() -> Self {"
                          },
                          {
                            "highlight_end": 11,
                            "highlight_start": 1,
                            "text": "        W8"
                          },
                          {
                            "highlight_end": 6,
                            "highlight_start": 1,
                            "text": "    }"
                          },
                          {
                            "highlight_end": 2,
                            "highlight_start": 1,
                            "text": "}"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          }
                        ]
                      },
                      {
                        "byte_end": 981,
                        "byte_start": 981,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 35,
                        "line_start": 35,
                        "suggested_replacement": "#[derive(Default)]\n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub enum BitWidth {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1005,
                        "byte_start": 1005,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 36,
                        "line_start": 36,
                        "suggested_replacement": "#[default]\n    ",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "    W8 = 0,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::derivable_impls",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `impl` can be derived",
                "spans": [
                  {
                    "byte_end": 1557,
                    "byte_start": 1484,
                    "column_end": 2,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\bitwidth.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 63,
                    "line_start": 59,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "impl Default for BitWidth {"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "    fn default() -> Self {"
                      },
                      {
                        "highlight_end": 11,
                        "highlight_start": 1,
                        "text": "        W8"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric method\n  --> src\\bitwidth.rs:71:30\n   |\n71 |                 if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {\n   |                              ^^^^^^^^^^^\n...\n85 | impl_bitwidth_from!(u64, u64, u32, u16, u8);\n   | ------------------------------------------- in this macro invocation\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: `#[warn(clippy::legacy_numeric_constants)]` on by default\n   = note: this warning originates in the macro `impl_bitwidth_from` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: use the associated constant instead\n   |\n71 -                 if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {\n71 +                 if x >= $w8::MIN as $w64 && x <= $w8::max_value() as $w64 {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::legacy_numeric_constants)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1919,
                        "byte_start": 1908,
                        "column_end": 41,
                        "column_start": 30,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 1682,
                            "byte_start": 1651,
                            "column_end": 32,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 66,
                            "line_start": 66,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "macro_rules! impl_bitwidth_from {"
                              }
                            ]
                          },
                          "macro_decl_name": "impl_bitwidth_from!",
                          "span": {
                            "byte_end": 2380,
                            "byte_start": 2337,
                            "column_end": 44,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 85,
                            "line_start": 85,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 44,
                                "highlight_start": 1,
                                "text": "impl_bitwidth_from!(u64, u64, u32, u16, u8);"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 71,
                        "line_start": 71,
                        "suggested_replacement": "MIN",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 30,
                            "text": "                if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric method",
                "spans": [
                  {
                    "byte_end": 1919,
                    "byte_start": 1908,
                    "column_end": 41,
                    "column_start": 30,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 1682,
                        "byte_start": 1651,
                        "column_end": 32,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bitwidth_from {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bitwidth_from!",
                      "span": {
                        "byte_end": 2380,
                        "byte_start": 2337,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 85,
                        "line_start": 85,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "impl_bitwidth_from!(u64, u64, u32, u16, u8);"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\bitwidth.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 71,
                    "line_start": 71,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 30,
                        "text": "                if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric method\n  --> src\\bitwidth.rs:71:63\n   |\n71 |                 if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {\n   |                                                               ^^^^^^^^^^^\n...\n85 | impl_bitwidth_from!(u64, u64, u32, u16, u8);\n   | ------------------------------------------- in this macro invocation\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: this warning originates in the macro `impl_bitwidth_from` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: use the associated constant instead\n   |\n71 -                 if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {\n71 +                 if x >= $w8::min_value() as $w64 && x <= $w8::MAX as $w64 {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1952,
                        "byte_start": 1941,
                        "column_end": 74,
                        "column_start": 63,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 1682,
                            "byte_start": 1651,
                            "column_end": 32,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 66,
                            "line_start": 66,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "macro_rules! impl_bitwidth_from {"
                              }
                            ]
                          },
                          "macro_decl_name": "impl_bitwidth_from!",
                          "span": {
                            "byte_end": 2380,
                            "byte_start": 2337,
                            "column_end": 44,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 85,
                            "line_start": 85,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 44,
                                "highlight_start": 1,
                                "text": "impl_bitwidth_from!(u64, u64, u32, u16, u8);"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 71,
                        "line_start": 71,
                        "suggested_replacement": "MAX",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 74,
                            "highlight_start": 63,
                            "text": "                if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric method",
                "spans": [
                  {
                    "byte_end": 1952,
                    "byte_start": 1941,
                    "column_end": 74,
                    "column_start": 63,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 1682,
                        "byte_start": 1651,
                        "column_end": 32,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bitwidth_from {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bitwidth_from!",
                      "span": {
                        "byte_end": 2380,
                        "byte_start": 2337,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 85,
                        "line_start": 85,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "impl_bitwidth_from!(u64, u64, u32, u16, u8);"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\bitwidth.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 71,
                    "line_start": 71,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 74,
                        "highlight_start": 63,
                        "text": "                if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric method\n  --> src\\bitwidth.rs:74:31\n   |\n74 |                 if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {\n   |                               ^^^^^^^^^^^\n...\n85 | impl_bitwidth_from!(u64, u64, u32, u16, u8);\n   | ------------------------------------------- in this macro invocation\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: this warning originates in the macro `impl_bitwidth_from` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: use the associated constant instead\n   |\n74 -                 if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {\n74 +                 if x >= $w16::MIN as $w64 && x <= $w16::max_value() as $w64 {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2053,
                        "byte_start": 2042,
                        "column_end": 42,
                        "column_start": 31,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 1682,
                            "byte_start": 1651,
                            "column_end": 32,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 66,
                            "line_start": 66,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "macro_rules! impl_bitwidth_from {"
                              }
                            ]
                          },
                          "macro_decl_name": "impl_bitwidth_from!",
                          "span": {
                            "byte_end": 2380,
                            "byte_start": 2337,
                            "column_end": 44,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 85,
                            "line_start": 85,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 44,
                                "highlight_start": 1,
                                "text": "impl_bitwidth_from!(u64, u64, u32, u16, u8);"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 74,
                        "line_start": 74,
                        "suggested_replacement": "MIN",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 31,
                            "text": "                if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric method",
                "spans": [
                  {
                    "byte_end": 2053,
                    "byte_start": 2042,
                    "column_end": 42,
                    "column_start": 31,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 1682,
                        "byte_start": 1651,
                        "column_end": 32,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bitwidth_from {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bitwidth_from!",
                      "span": {
                        "byte_end": 2380,
                        "byte_start": 2337,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 85,
                        "line_start": 85,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "impl_bitwidth_from!(u64, u64, u32, u16, u8);"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\bitwidth.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 74,
                    "line_start": 74,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 31,
                        "text": "                if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric method\n  --> src\\bitwidth.rs:74:65\n   |\n74 |                 if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {\n   |                                                                 ^^^^^^^^^^^\n...\n85 | impl_bitwidth_from!(u64, u64, u32, u16, u8);\n   | ------------------------------------------- in this macro invocation\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: this warning originates in the macro `impl_bitwidth_from` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: use the associated constant instead\n   |\n74 -                 if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {\n74 +                 if x >= $w16::min_value() as $w64 && x <= $w16::MAX as $w64 {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2087,
                        "byte_start": 2076,
                        "column_end": 76,
                        "column_start": 65,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 1682,
                            "byte_start": 1651,
                            "column_end": 32,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 66,
                            "line_start": 66,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "macro_rules! impl_bitwidth_from {"
                              }
                            ]
                          },
                          "macro_decl_name": "impl_bitwidth_from!",
                          "span": {
                            "byte_end": 2380,
                            "byte_start": 2337,
                            "column_end": 44,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 85,
                            "line_start": 85,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 44,
                                "highlight_start": 1,
                                "text": "impl_bitwidth_from!(u64, u64, u32, u16, u8);"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 74,
                        "line_start": 74,
                        "suggested_replacement": "MAX",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 76,
                            "highlight_start": 65,
                            "text": "                if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric method",
                "spans": [
                  {
                    "byte_end": 2087,
                    "byte_start": 2076,
                    "column_end": 76,
                    "column_start": 65,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 1682,
                        "byte_start": 1651,
                        "column_end": 32,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bitwidth_from {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bitwidth_from!",
                      "span": {
                        "byte_end": 2380,
                        "byte_start": 2337,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 85,
                        "line_start": 85,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "impl_bitwidth_from!(u64, u64, u32, u16, u8);"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\bitwidth.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 74,
                    "line_start": 74,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 76,
                        "highlight_start": 65,
                        "text": "                if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric method\n  --> src\\bitwidth.rs:77:31\n   |\n77 |                 if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {\n   |                               ^^^^^^^^^^^\n...\n85 | impl_bitwidth_from!(u64, u64, u32, u16, u8);\n   | ------------------------------------------- in this macro invocation\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: this warning originates in the macro `impl_bitwidth_from` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: use the associated constant instead\n   |\n77 -                 if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {\n77 +                 if x >= $w32::MIN as $w64 && x <= $w32::max_value() as $w64 {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2189,
                        "byte_start": 2178,
                        "column_end": 42,
                        "column_start": 31,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 1682,
                            "byte_start": 1651,
                            "column_end": 32,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 66,
                            "line_start": 66,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "macro_rules! impl_bitwidth_from {"
                              }
                            ]
                          },
                          "macro_decl_name": "impl_bitwidth_from!",
                          "span": {
                            "byte_end": 2380,
                            "byte_start": 2337,
                            "column_end": 44,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 85,
                            "line_start": 85,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 44,
                                "highlight_start": 1,
                                "text": "impl_bitwidth_from!(u64, u64, u32, u16, u8);"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 77,
                        "line_start": 77,
                        "suggested_replacement": "MIN",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 31,
                            "text": "                if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric method",
                "spans": [
                  {
                    "byte_end": 2189,
                    "byte_start": 2178,
                    "column_end": 42,
                    "column_start": 31,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 1682,
                        "byte_start": 1651,
                        "column_end": 32,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bitwidth_from {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bitwidth_from!",
                      "span": {
                        "byte_end": 2380,
                        "byte_start": 2337,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 85,
                        "line_start": 85,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "impl_bitwidth_from!(u64, u64, u32, u16, u8);"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\bitwidth.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 77,
                    "line_start": 77,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 31,
                        "text": "                if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric method\n  --> src\\bitwidth.rs:77:65\n   |\n77 |                 if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {\n   |                                                                 ^^^^^^^^^^^\n...\n85 | impl_bitwidth_from!(u64, u64, u32, u16, u8);\n   | ------------------------------------------- in this macro invocation\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: this warning originates in the macro `impl_bitwidth_from` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: use the associated constant instead\n   |\n77 -                 if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {\n77 +                 if x >= $w32::min_value() as $w64 && x <= $w32::MAX as $w64 {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2223,
                        "byte_start": 2212,
                        "column_end": 76,
                        "column_start": 65,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 1682,
                            "byte_start": 1651,
                            "column_end": 32,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 66,
                            "line_start": 66,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "macro_rules! impl_bitwidth_from {"
                              }
                            ]
                          },
                          "macro_decl_name": "impl_bitwidth_from!",
                          "span": {
                            "byte_end": 2380,
                            "byte_start": 2337,
                            "column_end": 44,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 85,
                            "line_start": 85,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 44,
                                "highlight_start": 1,
                                "text": "impl_bitwidth_from!(u64, u64, u32, u16, u8);"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 77,
                        "line_start": 77,
                        "suggested_replacement": "MAX",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 76,
                            "highlight_start": 65,
                            "text": "                if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric method",
                "spans": [
                  {
                    "byte_end": 2223,
                    "byte_start": 2212,
                    "column_end": 76,
                    "column_start": 65,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 1682,
                        "byte_start": 1651,
                        "column_end": 32,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bitwidth_from {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bitwidth_from!",
                      "span": {
                        "byte_end": 2380,
                        "byte_start": 2337,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 85,
                        "line_start": 85,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "impl_bitwidth_from!(u64, u64, u32, u16, u8);"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\bitwidth.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 77,
                    "line_start": 77,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 76,
                        "highlight_start": 65,
                        "text": "                if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric method\n  --> src\\bitwidth.rs:71:30\n   |\n71 |                 if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {\n   |                              ^^^^^^^^^^^\n...\n86 | impl_bitwidth_from!(usize, u64, u32, u16, u8);\n   | --------------------------------------------- in this macro invocation\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: this warning originates in the macro `impl_bitwidth_from` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: use the associated constant instead\n   |\n71 -                 if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {\n71 +                 if x >= $w8::MIN as $w64 && x <= $w8::max_value() as $w64 {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1919,
                        "byte_start": 1908,
                        "column_end": 41,
                        "column_start": 30,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 1682,
                            "byte_start": 1651,
                            "column_end": 32,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 66,
                            "line_start": 66,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "macro_rules! impl_bitwidth_from {"
                              }
                            ]
                          },
                          "macro_decl_name": "impl_bitwidth_from!",
                          "span": {
                            "byte_end": 2427,
                            "byte_start": 2382,
                            "column_end": 46,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 86,
                            "line_start": 86,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 46,
                                "highlight_start": 1,
                                "text": "impl_bitwidth_from!(usize, u64, u32, u16, u8);"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 71,
                        "line_start": 71,
                        "suggested_replacement": "MIN",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 30,
                            "text": "                if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric method",
                "spans": [
                  {
                    "byte_end": 1919,
                    "byte_start": 1908,
                    "column_end": 41,
                    "column_start": 30,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 1682,
                        "byte_start": 1651,
                        "column_end": 32,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bitwidth_from {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bitwidth_from!",
                      "span": {
                        "byte_end": 2427,
                        "byte_start": 2382,
                        "column_end": 46,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 86,
                        "line_start": 86,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 1,
                            "text": "impl_bitwidth_from!(usize, u64, u32, u16, u8);"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\bitwidth.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 71,
                    "line_start": 71,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 30,
                        "text": "                if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric method\n  --> src\\bitwidth.rs:71:63\n   |\n71 |                 if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {\n   |                                                               ^^^^^^^^^^^\n...\n86 | impl_bitwidth_from!(usize, u64, u32, u16, u8);\n   | --------------------------------------------- in this macro invocation\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: this warning originates in the macro `impl_bitwidth_from` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: use the associated constant instead\n   |\n71 -                 if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {\n71 +                 if x >= $w8::min_value() as $w64 && x <= $w8::MAX as $w64 {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1952,
                        "byte_start": 1941,
                        "column_end": 74,
                        "column_start": 63,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 1682,
                            "byte_start": 1651,
                            "column_end": 32,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 66,
                            "line_start": 66,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "macro_rules! impl_bitwidth_from {"
                              }
                            ]
                          },
                          "macro_decl_name": "impl_bitwidth_from!",
                          "span": {
                            "byte_end": 2427,
                            "byte_start": 2382,
                            "column_end": 46,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 86,
                            "line_start": 86,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 46,
                                "highlight_start": 1,
                                "text": "impl_bitwidth_from!(usize, u64, u32, u16, u8);"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 71,
                        "line_start": 71,
                        "suggested_replacement": "MAX",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 74,
                            "highlight_start": 63,
                            "text": "                if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric method",
                "spans": [
                  {
                    "byte_end": 1952,
                    "byte_start": 1941,
                    "column_end": 74,
                    "column_start": 63,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 1682,
                        "byte_start": 1651,
                        "column_end": 32,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bitwidth_from {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bitwidth_from!",
                      "span": {
                        "byte_end": 2427,
                        "byte_start": 2382,
                        "column_end": 46,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 86,
                        "line_start": 86,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 1,
                            "text": "impl_bitwidth_from!(usize, u64, u32, u16, u8);"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\bitwidth.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 71,
                    "line_start": 71,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 74,
                        "highlight_start": 63,
                        "text": "                if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric method\n  --> src\\bitwidth.rs:74:31\n   |\n74 |                 if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {\n   |                               ^^^^^^^^^^^\n...\n86 | impl_bitwidth_from!(usize, u64, u32, u16, u8);\n   | --------------------------------------------- in this macro invocation\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: this warning originates in the macro `impl_bitwidth_from` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: use the associated constant instead\n   |\n74 -                 if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {\n74 +                 if x >= $w16::MIN as $w64 && x <= $w16::max_value() as $w64 {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2053,
                        "byte_start": 2042,
                        "column_end": 42,
                        "column_start": 31,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 1682,
                            "byte_start": 1651,
                            "column_end": 32,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 66,
                            "line_start": 66,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "macro_rules! impl_bitwidth_from {"
                              }
                            ]
                          },
                          "macro_decl_name": "impl_bitwidth_from!",
                          "span": {
                            "byte_end": 2427,
                            "byte_start": 2382,
                            "column_end": 46,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 86,
                            "line_start": 86,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 46,
                                "highlight_start": 1,
                                "text": "impl_bitwidth_from!(usize, u64, u32, u16, u8);"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 74,
                        "line_start": 74,
                        "suggested_replacement": "MIN",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 31,
                            "text": "                if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric method",
                "spans": [
                  {
                    "byte_end": 2053,
                    "byte_start": 2042,
                    "column_end": 42,
                    "column_start": 31,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 1682,
                        "byte_start": 1651,
                        "column_end": 32,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bitwidth_from {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bitwidth_from!",
                      "span": {
                        "byte_end": 2427,
                        "byte_start": 2382,
                        "column_end": 46,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 86,
                        "line_start": 86,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 1,
                            "text": "impl_bitwidth_from!(usize, u64, u32, u16, u8);"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\bitwidth.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 74,
                    "line_start": 74,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 31,
                        "text": "                if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric method\n  --> src\\bitwidth.rs:74:65\n   |\n74 |                 if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {\n   |                                                                 ^^^^^^^^^^^\n...\n86 | impl_bitwidth_from!(usize, u64, u32, u16, u8);\n   | --------------------------------------------- in this macro invocation\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: this warning originates in the macro `impl_bitwidth_from` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: use the associated constant instead\n   |\n74 -                 if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {\n74 +                 if x >= $w16::min_value() as $w64 && x <= $w16::MAX as $w64 {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2087,
                        "byte_start": 2076,
                        "column_end": 76,
                        "column_start": 65,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 1682,
                            "byte_start": 1651,
                            "column_end": 32,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 66,
                            "line_start": 66,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "macro_rules! impl_bitwidth_from {"
                              }
                            ]
                          },
                          "macro_decl_name": "impl_bitwidth_from!",
                          "span": {
                            "byte_end": 2427,
                            "byte_start": 2382,
                            "column_end": 46,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 86,
                            "line_start": 86,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 46,
                                "highlight_start": 1,
                                "text": "impl_bitwidth_from!(usize, u64, u32, u16, u8);"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 74,
                        "line_start": 74,
                        "suggested_replacement": "MAX",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 76,
                            "highlight_start": 65,
                            "text": "                if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric method",
                "spans": [
                  {
                    "byte_end": 2087,
                    "byte_start": 2076,
                    "column_end": 76,
                    "column_start": 65,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 1682,
                        "byte_start": 1651,
                        "column_end": 32,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bitwidth_from {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bitwidth_from!",
                      "span": {
                        "byte_end": 2427,
                        "byte_start": 2382,
                        "column_end": 46,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 86,
                        "line_start": 86,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 1,
                            "text": "impl_bitwidth_from!(usize, u64, u32, u16, u8);"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\bitwidth.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 74,
                    "line_start": 74,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 76,
                        "highlight_start": 65,
                        "text": "                if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric method\n  --> src\\bitwidth.rs:77:31\n   |\n77 |                 if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {\n   |                               ^^^^^^^^^^^\n...\n86 | impl_bitwidth_from!(usize, u64, u32, u16, u8);\n   | --------------------------------------------- in this macro invocation\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: this warning originates in the macro `impl_bitwidth_from` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: use the associated constant instead\n   |\n77 -                 if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {\n77 +                 if x >= $w32::MIN as $w64 && x <= $w32::max_value() as $w64 {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2189,
                        "byte_start": 2178,
                        "column_end": 42,
                        "column_start": 31,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 1682,
                            "byte_start": 1651,
                            "column_end": 32,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 66,
                            "line_start": 66,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "macro_rules! impl_bitwidth_from {"
                              }
                            ]
                          },
                          "macro_decl_name": "impl_bitwidth_from!",
                          "span": {
                            "byte_end": 2427,
                            "byte_start": 2382,
                            "column_end": 46,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 86,
                            "line_start": 86,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 46,
                                "highlight_start": 1,
                                "text": "impl_bitwidth_from!(usize, u64, u32, u16, u8);"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 77,
                        "line_start": 77,
                        "suggested_replacement": "MIN",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 31,
                            "text": "                if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric method",
                "spans": [
                  {
                    "byte_end": 2189,
                    "byte_start": 2178,
                    "column_end": 42,
                    "column_start": 31,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 1682,
                        "byte_start": 1651,
                        "column_end": 32,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bitwidth_from {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bitwidth_from!",
                      "span": {
                        "byte_end": 2427,
                        "byte_start": 2382,
                        "column_end": 46,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 86,
                        "line_start": 86,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 1,
                            "text": "impl_bitwidth_from!(usize, u64, u32, u16, u8);"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\bitwidth.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 77,
                    "line_start": 77,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 31,
                        "text": "                if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric method\n  --> src\\bitwidth.rs:77:65\n   |\n77 |                 if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {\n   |                                                                 ^^^^^^^^^^^\n...\n86 | impl_bitwidth_from!(usize, u64, u32, u16, u8);\n   | --------------------------------------------- in this macro invocation\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: this warning originates in the macro `impl_bitwidth_from` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: use the associated constant instead\n   |\n77 -                 if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {\n77 +                 if x >= $w32::min_value() as $w64 && x <= $w32::MAX as $w64 {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2223,
                        "byte_start": 2212,
                        "column_end": 76,
                        "column_start": 65,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 1682,
                            "byte_start": 1651,
                            "column_end": 32,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 66,
                            "line_start": 66,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "macro_rules! impl_bitwidth_from {"
                              }
                            ]
                          },
                          "macro_decl_name": "impl_bitwidth_from!",
                          "span": {
                            "byte_end": 2427,
                            "byte_start": 2382,
                            "column_end": 46,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 86,
                            "line_start": 86,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 46,
                                "highlight_start": 1,
                                "text": "impl_bitwidth_from!(usize, u64, u32, u16, u8);"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 77,
                        "line_start": 77,
                        "suggested_replacement": "MAX",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 76,
                            "highlight_start": 65,
                            "text": "                if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric method",
                "spans": [
                  {
                    "byte_end": 2223,
                    "byte_start": 2212,
                    "column_end": 76,
                    "column_start": 65,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 1682,
                        "byte_start": 1651,
                        "column_end": 32,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bitwidth_from {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bitwidth_from!",
                      "span": {
                        "byte_end": 2427,
                        "byte_start": 2382,
                        "column_end": 46,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 86,
                        "line_start": 86,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 1,
                            "text": "impl_bitwidth_from!(usize, u64, u32, u16, u8);"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\bitwidth.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 77,
                    "line_start": 77,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 76,
                        "highlight_start": 65,
                        "text": "                if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric method\n  --> src\\bitwidth.rs:71:30\n   |\n71 |                 if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {\n   |                              ^^^^^^^^^^^\n...\n87 | impl_bitwidth_from!(i64, i64, i32, i16, i8);\n   | ------------------------------------------- in this macro invocation\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: this warning originates in the macro `impl_bitwidth_from` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: use the associated constant instead\n   |\n71 -                 if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {\n71 +                 if x >= $w8::MIN as $w64 && x <= $w8::max_value() as $w64 {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1919,
                        "byte_start": 1908,
                        "column_end": 41,
                        "column_start": 30,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 1682,
                            "byte_start": 1651,
                            "column_end": 32,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 66,
                            "line_start": 66,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "macro_rules! impl_bitwidth_from {"
                              }
                            ]
                          },
                          "macro_decl_name": "impl_bitwidth_from!",
                          "span": {
                            "byte_end": 2472,
                            "byte_start": 2429,
                            "column_end": 44,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 87,
                            "line_start": 87,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 44,
                                "highlight_start": 1,
                                "text": "impl_bitwidth_from!(i64, i64, i32, i16, i8);"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 71,
                        "line_start": 71,
                        "suggested_replacement": "MIN",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 30,
                            "text": "                if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric method",
                "spans": [
                  {
                    "byte_end": 1919,
                    "byte_start": 1908,
                    "column_end": 41,
                    "column_start": 30,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 1682,
                        "byte_start": 1651,
                        "column_end": 32,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bitwidth_from {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bitwidth_from!",
                      "span": {
                        "byte_end": 2472,
                        "byte_start": 2429,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 87,
                        "line_start": 87,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "impl_bitwidth_from!(i64, i64, i32, i16, i8);"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\bitwidth.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 71,
                    "line_start": 71,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 30,
                        "text": "                if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric method\n  --> src\\bitwidth.rs:71:63\n   |\n71 |                 if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {\n   |                                                               ^^^^^^^^^^^\n...\n87 | impl_bitwidth_from!(i64, i64, i32, i16, i8);\n   | ------------------------------------------- in this macro invocation\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: this warning originates in the macro `impl_bitwidth_from` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: use the associated constant instead\n   |\n71 -                 if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {\n71 +                 if x >= $w8::min_value() as $w64 && x <= $w8::MAX as $w64 {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1952,
                        "byte_start": 1941,
                        "column_end": 74,
                        "column_start": 63,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 1682,
                            "byte_start": 1651,
                            "column_end": 32,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 66,
                            "line_start": 66,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "macro_rules! impl_bitwidth_from {"
                              }
                            ]
                          },
                          "macro_decl_name": "impl_bitwidth_from!",
                          "span": {
                            "byte_end": 2472,
                            "byte_start": 2429,
                            "column_end": 44,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 87,
                            "line_start": 87,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 44,
                                "highlight_start": 1,
                                "text": "impl_bitwidth_from!(i64, i64, i32, i16, i8);"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 71,
                        "line_start": 71,
                        "suggested_replacement": "MAX",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 74,
                            "highlight_start": 63,
                            "text": "                if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric method",
                "spans": [
                  {
                    "byte_end": 1952,
                    "byte_start": 1941,
                    "column_end": 74,
                    "column_start": 63,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 1682,
                        "byte_start": 1651,
                        "column_end": 32,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bitwidth_from {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bitwidth_from!",
                      "span": {
                        "byte_end": 2472,
                        "byte_start": 2429,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 87,
                        "line_start": 87,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "impl_bitwidth_from!(i64, i64, i32, i16, i8);"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\bitwidth.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 71,
                    "line_start": 71,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 74,
                        "highlight_start": 63,
                        "text": "                if x >= $w8::min_value() as $w64 && x <= $w8::max_value() as $w64 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric method\n  --> src\\bitwidth.rs:74:31\n   |\n74 |                 if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {\n   |                               ^^^^^^^^^^^\n...\n87 | impl_bitwidth_from!(i64, i64, i32, i16, i8);\n   | ------------------------------------------- in this macro invocation\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: this warning originates in the macro `impl_bitwidth_from` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: use the associated constant instead\n   |\n74 -                 if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {\n74 +                 if x >= $w16::MIN as $w64 && x <= $w16::max_value() as $w64 {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2053,
                        "byte_start": 2042,
                        "column_end": 42,
                        "column_start": 31,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 1682,
                            "byte_start": 1651,
                            "column_end": 32,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 66,
                            "line_start": 66,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "macro_rules! impl_bitwidth_from {"
                              }
                            ]
                          },
                          "macro_decl_name": "impl_bitwidth_from!",
                          "span": {
                            "byte_end": 2472,
                            "byte_start": 2429,
                            "column_end": 44,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 87,
                            "line_start": 87,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 44,
                                "highlight_start": 1,
                                "text": "impl_bitwidth_from!(i64, i64, i32, i16, i8);"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 74,
                        "line_start": 74,
                        "suggested_replacement": "MIN",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 31,
                            "text": "                if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric method",
                "spans": [
                  {
                    "byte_end": 2053,
                    "byte_start": 2042,
                    "column_end": 42,
                    "column_start": 31,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 1682,
                        "byte_start": 1651,
                        "column_end": 32,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bitwidth_from {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bitwidth_from!",
                      "span": {
                        "byte_end": 2472,
                        "byte_start": 2429,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 87,
                        "line_start": 87,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "impl_bitwidth_from!(i64, i64, i32, i16, i8);"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\bitwidth.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 74,
                    "line_start": 74,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 31,
                        "text": "                if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric method\n  --> src\\bitwidth.rs:74:65\n   |\n74 |                 if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {\n   |                                                                 ^^^^^^^^^^^\n...\n87 | impl_bitwidth_from!(i64, i64, i32, i16, i8);\n   | ------------------------------------------- in this macro invocation\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: this warning originates in the macro `impl_bitwidth_from` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: use the associated constant instead\n   |\n74 -                 if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {\n74 +                 if x >= $w16::min_value() as $w64 && x <= $w16::MAX as $w64 {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2087,
                        "byte_start": 2076,
                        "column_end": 76,
                        "column_start": 65,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 1682,
                            "byte_start": 1651,
                            "column_end": 32,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 66,
                            "line_start": 66,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "macro_rules! impl_bitwidth_from {"
                              }
                            ]
                          },
                          "macro_decl_name": "impl_bitwidth_from!",
                          "span": {
                            "byte_end": 2472,
                            "byte_start": 2429,
                            "column_end": 44,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 87,
                            "line_start": 87,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 44,
                                "highlight_start": 1,
                                "text": "impl_bitwidth_from!(i64, i64, i32, i16, i8);"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 74,
                        "line_start": 74,
                        "suggested_replacement": "MAX",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 76,
                            "highlight_start": 65,
                            "text": "                if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric method",
                "spans": [
                  {
                    "byte_end": 2087,
                    "byte_start": 2076,
                    "column_end": 76,
                    "column_start": 65,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 1682,
                        "byte_start": 1651,
                        "column_end": 32,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bitwidth_from {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bitwidth_from!",
                      "span": {
                        "byte_end": 2472,
                        "byte_start": 2429,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 87,
                        "line_start": 87,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "impl_bitwidth_from!(i64, i64, i32, i16, i8);"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\bitwidth.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 74,
                    "line_start": 74,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 76,
                        "highlight_start": 65,
                        "text": "                if x >= $w16::min_value() as $w64 && x <= $w16::max_value() as $w64 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric method\n  --> src\\bitwidth.rs:77:31\n   |\n77 |                 if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {\n   |                               ^^^^^^^^^^^\n...\n87 | impl_bitwidth_from!(i64, i64, i32, i16, i8);\n   | ------------------------------------------- in this macro invocation\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: this warning originates in the macro `impl_bitwidth_from` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: use the associated constant instead\n   |\n77 -                 if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {\n77 +                 if x >= $w32::MIN as $w64 && x <= $w32::max_value() as $w64 {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2189,
                        "byte_start": 2178,
                        "column_end": 42,
                        "column_start": 31,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 1682,
                            "byte_start": 1651,
                            "column_end": 32,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 66,
                            "line_start": 66,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "macro_rules! impl_bitwidth_from {"
                              }
                            ]
                          },
                          "macro_decl_name": "impl_bitwidth_from!",
                          "span": {
                            "byte_end": 2472,
                            "byte_start": 2429,
                            "column_end": 44,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 87,
                            "line_start": 87,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 44,
                                "highlight_start": 1,
                                "text": "impl_bitwidth_from!(i64, i64, i32, i16, i8);"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 77,
                        "line_start": 77,
                        "suggested_replacement": "MIN",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 31,
                            "text": "                if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric method",
                "spans": [
                  {
                    "byte_end": 2189,
                    "byte_start": 2178,
                    "column_end": 42,
                    "column_start": 31,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 1682,
                        "byte_start": 1651,
                        "column_end": 32,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bitwidth_from {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bitwidth_from!",
                      "span": {
                        "byte_end": 2472,
                        "byte_start": 2429,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 87,
                        "line_start": 87,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "impl_bitwidth_from!(i64, i64, i32, i16, i8);"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\bitwidth.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 77,
                    "line_start": 77,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 31,
                        "text": "                if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric method\n  --> src\\bitwidth.rs:77:65\n   |\n77 |                 if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {\n   |                                                                 ^^^^^^^^^^^\n...\n87 | impl_bitwidth_from!(i64, i64, i32, i16, i8);\n   | ------------------------------------------- in this macro invocation\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: this warning originates in the macro `impl_bitwidth_from` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: use the associated constant instead\n   |\n77 -                 if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {\n77 +                 if x >= $w32::min_value() as $w64 && x <= $w32::MAX as $w64 {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2223,
                        "byte_start": 2212,
                        "column_end": 76,
                        "column_start": 65,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 1682,
                            "byte_start": 1651,
                            "column_end": 32,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 66,
                            "line_start": 66,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "macro_rules! impl_bitwidth_from {"
                              }
                            ]
                          },
                          "macro_decl_name": "impl_bitwidth_from!",
                          "span": {
                            "byte_end": 2472,
                            "byte_start": 2429,
                            "column_end": 44,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\bitwidth.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 87,
                            "line_start": 87,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 44,
                                "highlight_start": 1,
                                "text": "impl_bitwidth_from!(i64, i64, i32, i16, i8);"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 77,
                        "line_start": 77,
                        "suggested_replacement": "MAX",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 76,
                            "highlight_start": 65,
                            "text": "                if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric method",
                "spans": [
                  {
                    "byte_end": 2223,
                    "byte_start": 2212,
                    "column_end": 76,
                    "column_start": 65,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 1682,
                        "byte_start": 1651,
                        "column_end": 32,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bitwidth_from {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bitwidth_from!",
                      "span": {
                        "byte_end": 2472,
                        "byte_start": 2429,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 87,
                        "line_start": 87,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "impl_bitwidth_from!(i64, i64, i32, i16, i8);"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\bitwidth.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 77,
                    "line_start": 77,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 76,
                        "highlight_start": 65,
                        "text": "                if x >= $w32::min_value() as $w64 && x <= $w32::max_value() as $w64 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src\\bitwidth.rs:110:17\n    |\n110 |     for _ in 0..alignment as usize {\n    |                 ^^^^^^^^^^^^^^^^^^ help: try: `alignment`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::unnecessary_cast)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3058,
                        "byte_start": 3040,
                        "column_end": 35,
                        "column_start": 17,
                        "expansion": null,
                        "file_name": "src\\bitwidth.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 110,
                        "line_start": 110,
                        "suggested_replacement": "alignment",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 17,
                            "text": "    for _ in 0..alignment as usize {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`usize` -> `usize`)",
                "spans": [
                  {
                    "byte_end": 3058,
                    "byte_start": 3040,
                    "column_end": 35,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\bitwidth.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 110,
                    "line_start": 110,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 17,
                        "text": "    for _ in 0..alignment as usize {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item without indentation\n  --> src\\builder\\push.rs:34:5\n   |\n34 | /// Doing so will immediately serialize the data, skipping the `Builder`'s\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\n   = note: `#[warn(clippy::doc_lazy_continuation)]` on by default\nhelp: indent this line\n   |\n34 | ///   Doing so will immediately serialize the data, skipping the `Builder`'s\n   |     ++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is supposed to be its own paragraph, add a blank line",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::doc_lazy_continuation)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "indent this line",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1365,
                        "byte_start": 1365,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\builder\\push.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 34,
                        "line_start": 34,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "/// Doing so will immediately serialize the data, skipping the `Builder`'s"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_lazy_continuation",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item without indentation",
                "spans": [
                  {
                    "byte_end": 1365,
                    "byte_start": 1365,
                    "column_end": 5,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\builder\\push.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 34,
                    "line_start": 34,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 5,
                        "highlight_start": 5,
                        "text": "/// Doing so will immediately serialize the data, skipping the `Builder`'s"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item without indentation\n  --> src\\builder\\push.rs:35:5\n   |\n35 | /// internal cache.\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n35 | ///   internal cache.\n   |     ++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is supposed to be its own paragraph, add a blank line",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "indent this line",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1440,
                        "byte_start": 1440,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\builder\\push.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 35,
                        "line_start": 35,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "/// internal cache."
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_lazy_continuation",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item without indentation",
                "spans": [
                  {
                    "byte_end": 1440,
                    "byte_start": 1440,
                    "column_end": 5,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\builder\\push.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 35,
                    "line_start": 35,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 5,
                        "highlight_start": 5,
                        "text": "/// internal cache."
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item without indentation\n   --> src\\builder\\mod.rs:114:5\n    |\n114 | /// heterogenous) values can be pushed. The vector itself is the root and is serialized\n    |     ^\n    |\n    = help: if this is supposed to be its own paragraph, add a blank line\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n    |\n114 | ///   heterogenous) values can be pushed. The vector itself is the root and is serialized\n    |     ++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is supposed to be its own paragraph, add a blank line",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "indent this line",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3946,
                        "byte_start": 3946,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\builder\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 114,
                        "line_start": 114,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "/// heterogenous) values can be pushed. The vector itself is the root and is serialized"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_lazy_continuation",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item without indentation",
                "spans": [
                  {
                    "byte_end": 3946,
                    "byte_start": 3946,
                    "column_end": 5,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\builder\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 114,
                    "line_start": 114,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 5,
                        "highlight_start": 5,
                        "text": "/// heterogenous) values can be pushed. The vector itself is the root and is serialized"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item without indentation\n   --> src\\builder\\mod.rs:115:5\n    |\n115 | /// when the `VectorBuilder` is dropped (or `end` is called).\n    |     ^\n    |\n    = help: if this is supposed to be its own paragraph, add a blank line\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n    |\n115 | ///   when the `VectorBuilder` is dropped (or `end` is called).\n    |     ++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is supposed to be its own paragraph, add a blank line",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "indent this line",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4034,
                        "byte_start": 4034,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\builder\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 115,
                        "line_start": 115,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "/// when the `VectorBuilder` is dropped (or `end` is called)."
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_lazy_continuation",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item without indentation",
                "spans": [
                  {
                    "byte_end": 4034,
                    "byte_start": 4034,
                    "column_end": 5,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\builder\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 115,
                    "line_start": 115,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 5,
                        "highlight_start": 5,
                        "text": "/// when the `VectorBuilder` is dropped (or `end` is called)."
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item without indentation\n   --> src\\builder\\mod.rs:117:5\n    |\n117 | /// every value must be pushed with an associated key. The map is serialized when the\n    |     ^\n    |\n    = help: if this is supposed to be its own paragraph, add a blank line\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n    |\n117 | ///   every value must be pushed with an associated key. The map is serialized when the\n    |     ++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is supposed to be its own paragraph, add a blank line",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "indent this line",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4183,
                        "byte_start": 4183,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\builder\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 117,
                        "line_start": 117,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "/// every value must be pushed with an associated key. The map is serialized when the"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_lazy_continuation",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item without indentation",
                "spans": [
                  {
                    "byte_end": 4183,
                    "byte_start": 4183,
                    "column_end": 5,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\builder\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 117,
                    "line_start": 117,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 5,
                        "highlight_start": 5,
                        "text": "/// every value must be pushed with an associated key. The map is serialized when the"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item without indentation\n   --> src\\builder\\mod.rs:118:5\n    |\n118 | /// `MapBuilder` is dropped (or `end` is called).\n    |     ^\n    |\n    = help: if this is supposed to be its own paragraph, add a blank line\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n    |\n118 | ///   `MapBuilder` is dropped (or `end` is called).\n    |     ++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is supposed to be its own paragraph, add a blank line",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "indent this line",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4269,
                        "byte_start": 4269,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\builder\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 118,
                        "line_start": 118,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "/// `MapBuilder` is dropped (or `end` is called)."
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_lazy_continuation",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item without indentation",
                "spans": [
                  {
                    "byte_end": 4269,
                    "byte_start": 4269,
                    "column_end": 5,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\builder\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 118,
                    "line_start": 118,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 5,
                        "highlight_start": 5,
                        "text": "/// `MapBuilder` is dropped (or `end` is called)."
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item without indentation\n  --> src\\flexbuffer_type.rs:27:5\n   |\n27 | /// is stored with a byte describing its FlexBufferType and BitWidth.\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n27 | ///   is stored with a byte describing its FlexBufferType and BitWidth.\n   |     ++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is supposed to be its own paragraph, add a blank line",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "indent this line",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1134,
                        "byte_start": 1134,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 27,
                        "line_start": 27,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "/// is stored with a byte describing its FlexBufferType and BitWidth."
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_lazy_continuation",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item without indentation",
                "spans": [
                  {
                    "byte_end": 1134,
                    "byte_start": 1134,
                    "column_end": 5,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\flexbuffer_type.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 27,
                    "line_start": 27,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 5,
                        "highlight_start": 5,
                        "text": "/// is stored with a byte describing its FlexBufferType and BitWidth."
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item without indentation\n  --> src\\flexbuffer_type.rs:30:5\n   |\n30 | /// typed vectors do not store length. Whether a vector is stored as a typed\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n30 | ///   typed vectors do not store length. Whether a vector is stored as a typed\n   |     ++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is supposed to be its own paragraph, add a blank line",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "indent this line",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1286,
                        "byte_start": 1286,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 30,
                        "line_start": 30,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "/// typed vectors do not store length. Whether a vector is stored as a typed"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_lazy_continuation",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item without indentation",
                "spans": [
                  {
                    "byte_end": 1286,
                    "byte_start": 1286,
                    "column_end": 5,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\flexbuffer_type.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 30,
                    "line_start": 30,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 5,
                        "highlight_start": 5,
                        "text": "/// typed vectors do not store length. Whether a vector is stored as a typed"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item without indentation\n  --> src\\flexbuffer_type.rs:31:5\n   |\n31 | /// vector or fixed length typed vector is determined dymaically from the\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n31 | ///   vector or fixed length typed vector is determined dymaically from the\n   |     ++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is supposed to be its own paragraph, add a blank line",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "indent this line",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1363,
                        "byte_start": 1363,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 31,
                        "line_start": 31,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "/// vector or fixed length typed vector is determined dymaically from the"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_lazy_continuation",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item without indentation",
                "spans": [
                  {
                    "byte_end": 1363,
                    "byte_start": 1363,
                    "column_end": 5,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\flexbuffer_type.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 31,
                    "line_start": 31,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 5,
                        "highlight_start": 5,
                        "text": "/// vector or fixed length typed vector is determined dymaically from the"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item without indentation\n  --> src\\flexbuffer_type.rs:32:5\n   |\n32 | /// given data.\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n32 | ///   given data.\n   |     ++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is supposed to be its own paragraph, add a blank line",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "indent this line",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1437,
                        "byte_start": 1437,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 32,
                        "line_start": 32,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "/// given data."
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_lazy_continuation",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item without indentation",
                "spans": [
                  {
                    "byte_end": 1437,
                    "byte_start": 1437,
                    "column_end": 5,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\flexbuffer_type.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 32,
                    "line_start": 32,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 5,
                        "highlight_start": 5,
                        "text": "/// given data."
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item without indentation\n  --> src\\flexbuffer_type.rs:35:5\n   |\n35 | /// indirect numbers instead of their inline counterparts in maps and typed\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n35 | ///   indirect numbers instead of their inline counterparts in maps and typed\n   |     ++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is supposed to be its own paragraph, add a blank line",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "indent this line",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1529,
                        "byte_start": 1529,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 35,
                        "line_start": 35,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "/// indirect numbers instead of their inline counterparts in maps and typed"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_lazy_continuation",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item without indentation",
                "spans": [
                  {
                    "byte_end": 1529,
                    "byte_start": 1529,
                    "column_end": 5,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\flexbuffer_type.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 35,
                    "line_start": 35,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 5,
                        "highlight_start": 5,
                        "text": "/// indirect numbers instead of their inline counterparts in maps and typed"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item without indentation\n  --> src\\flexbuffer_type.rs:36:5\n   |\n36 | /// vectors can reduce the minimum element width and therefore bytes used.\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n36 | ///   vectors can reduce the minimum element width and therefore bytes used.\n   |     ++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is supposed to be its own paragraph, add a blank line",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "indent this line",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1605,
                        "byte_start": 1605,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 36,
                        "line_start": 36,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "/// vectors can reduce the minimum element width and therefore bytes used."
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_lazy_continuation",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item without indentation",
                "spans": [
                  {
                    "byte_end": 1605,
                    "byte_start": 1605,
                    "column_end": 5,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\flexbuffer_type.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 36,
                    "line_start": 36,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 5,
                        "highlight_start": 5,
                        "text": "/// vectors can reduce the minimum element width and therefore bytes used."
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `impl` can be derived\n   --> src\\flexbuffer_type.rs:107:1\n    |\n107 | / impl Default for FlexBufferType {\n108 | |     fn default() -> Self {\n109 | |         Null\n110 | |     }\n111 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\nhelp: replace the manual implementation with a derive attribute and mark the default variant\n    |\n40  + #[derive(Default)]\n41  ~ pub enum FlexBufferType {\n42  |     /// Nulls are represented with `()` in Rust.\n43  ~     #[default]\n44  ~     Null = 0,\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace the manual implementation with a derive attribute and mark the default variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4450,
                        "byte_start": 4368,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 112,
                        "line_start": 107,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 34,
                            "highlight_start": 1,
                            "text": "impl Default for FlexBufferType {"
                          },
                          {
                            "highlight_end": 27,
                            "highlight_start": 1,
                            "text": "    fn default() -> Self {"
                          },
                          {
                            "highlight_end": 13,
                            "highlight_start": 1,
                            "text": "        Null"
                          },
                          {
                            "highlight_end": 6,
                            "highlight_start": 1,
                            "text": "    }"
                          },
                          {
                            "highlight_end": 2,
                            "highlight_start": 1,
                            "text": "}"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          }
                        ]
                      },
                      {
                        "byte_end": 1786,
                        "byte_start": 1786,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 40,
                        "line_start": 40,
                        "suggested_replacement": "#[derive(Default)]\n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub enum FlexBufferType {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1865,
                        "byte_start": 1865,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\flexbuffer_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 42,
                        "line_start": 42,
                        "suggested_replacement": "#[default]\n    ",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "    Null = 0,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::derivable_impls",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `impl` can be derived",
                "spans": [
                  {
                    "byte_end": 4449,
                    "byte_start": 4368,
                    "column_end": 2,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\flexbuffer_type.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 111,
                    "line_start": 107,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "impl Default for FlexBufferType {"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "    fn default() -> Self {"
                      },
                      {
                        "highlight_end": 13,
                        "highlight_start": 1,
                        "text": "        Null"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this bound is already specified as the supertrait of `DoubleEndedIterator`\n   --> src\\reader\\map.rs:158:15\n    |\n158 |     ) -> impl Iterator<Item = B::BufferString> + DoubleEndedIterator + ExactSizeIterator + FusedIterator\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implied_bounds_in_impls\n    = note: `#[warn(clippy::implied_bounds_in_impls)]` on by default\nhelp: try removing this bound\n    |\n158 -     ) -> impl Iterator<Item = B::BufferString> + DoubleEndedIterator + ExactSizeIterator + FusedIterator\n158 +     ) -> impl DoubleEndedIterator<Item = B::BufferString> + ExactSizeIterator + FusedIterator\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implied_bounds_in_impls",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::implied_bounds_in_impls)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try removing this bound",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5582,
                        "byte_start": 5547,
                        "column_end": 50,
                        "column_start": 15,
                        "expansion": null,
                        "file_name": "src\\reader\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 158,
                        "line_start": 158,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 50,
                            "highlight_start": 15,
                            "text": "    ) -> impl Iterator<Item = B::BufferString> + DoubleEndedIterator + ExactSizeIterator + FusedIterator"
                          }
                        ]
                      },
                      {
                        "byte_end": 5601,
                        "byte_start": 5601,
                        "column_end": 69,
                        "column_start": 69,
                        "expansion": null,
                        "file_name": "src\\reader\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 158,
                        "line_start": 158,
                        "suggested_replacement": "<Item = B::BufferString>",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 69,
                            "highlight_start": 69,
                            "text": "    ) -> impl Iterator<Item = B::BufferString> + DoubleEndedIterator + ExactSizeIterator + FusedIterator"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::implied_bounds_in_impls",
                  "explanation": null
                },
                "level": "warning",
                "message": "this bound is already specified as the supertrait of `DoubleEndedIterator`",
                "spans": [
                  {
                    "byte_end": 5579,
                    "byte_start": 5547,
                    "column_end": 47,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "src\\reader\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 158,
                    "line_start": 158,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 47,
                        "highlight_start": 15,
                        "text": "    ) -> impl Iterator<Item = B::BufferString> + DoubleEndedIterator + ExactSizeIterator + FusedIterator"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item without indentation\n   --> src\\reader\\mod.rs:142:5\n    |\n142 | /// flexbuffer type matches `T`. This is analogous to the behavior of Rust's json library, though\n    |     ^\n    |\n    = help: if this is supposed to be its own paragraph, add a blank line\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n    |\n142 | ///   flexbuffer type matches `T`. This is analogous to the behavior of Rust's json library, though\n    |     ++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is supposed to be its own paragraph, add a blank line",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "indent this line",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5050,
                        "byte_start": 5050,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\reader\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 142,
                        "line_start": 142,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "/// flexbuffer type matches `T`. This is analogous to the behavior of Rust's json library, though"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_lazy_continuation",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item without indentation",
                "spans": [
                  {
                    "byte_end": 5050,
                    "byte_start": 5050,
                    "column_end": 5,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\reader\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 142,
                    "line_start": 142,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 5,
                        "highlight_start": 5,
                        "text": "/// flexbuffer type matches `T`. This is analogous to the behavior of Rust's json library, though"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item without indentation\n   --> src\\reader\\mod.rs:143:5\n    |\n143 | /// with Result instead of Option.\n    |     ^\n    |\n    = help: if this is supposed to be its own paragraph, add a blank line\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n    |\n143 | ///   with Result instead of Option.\n    |     ++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is supposed to be its own paragraph, add a blank line",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "indent this line",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5148,
                        "byte_start": 5148,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\reader\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 143,
                        "line_start": 143,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "/// with Result instead of Option."
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_lazy_continuation",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item without indentation",
                "spans": [
                  {
                    "byte_end": 5148,
                    "byte_start": 5148,
                    "column_end": 5,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\reader\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 143,
                    "line_start": 143,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 5,
                        "highlight_start": 5,
                        "text": "/// with Result instead of Option."
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item without indentation\n   --> src\\reader\\mod.rs:145:5\n    |\n145 | /// (by casting or even parsing a string if necessary) but ultimately returns `T::default` if it\n    |     ^\n    |\n    = help: if this is supposed to be its own paragraph, add a blank line\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n    |\n145 | ///   (by casting or even parsing a string if necessary) but ultimately returns `T::default` if it\n    |     ++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is supposed to be its own paragraph, add a blank line",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "indent this line",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5261,
                        "byte_start": 5261,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\reader\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 145,
                        "line_start": 145,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "/// (by casting or even parsing a string if necessary) but ultimately returns `T::default` if it"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_lazy_continuation",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item without indentation",
                "spans": [
                  {
                    "byte_end": 5261,
                    "byte_start": 5261,
                    "column_end": 5,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\reader\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 145,
                    "line_start": 145,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 5,
                        "highlight_start": 5,
                        "text": "/// (by casting or even parsing a string if necessary) but ultimately returns `T::default` if it"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item without indentation\n   --> src\\reader\\mod.rs:146:5\n    |\n146 | /// fails. This behavior is analogous to that of flexbuffers C++.\n    |     ^\n    |\n    = help: if this is supposed to be its own paragraph, add a blank line\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n    |\n146 | ///   fails. This behavior is analogous to that of flexbuffers C++.\n    |     ++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is supposed to be its own paragraph, add a blank line",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "indent this line",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5358,
                        "byte_start": 5358,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\reader\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 146,
                        "line_start": 146,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "/// fails. This behavior is analogous to that of flexbuffers C++."
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_lazy_continuation",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item without indentation",
                "spans": [
                  {
                    "byte_end": 5358,
                    "byte_start": 5358,
                    "column_end": 5,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\reader\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 146,
                    "line_start": 146,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 5,
                        "highlight_start": 5,
                        "text": "/// fails. This behavior is analogous to that of flexbuffers C++."
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> src\\reader\\mod.rs:432:44\n    |\n432 |             BitWidth::W8 => cursor.map(|s| s[0] as u8).map(Into::into),\n    |                                            ^^^^^^^^^^ help: try: `s[0]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 15283,
                        "byte_start": 15273,
                        "column_end": 54,
                        "column_start": 44,
                        "expansion": null,
                        "file_name": "src\\reader\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 432,
                        "line_start": 432,
                        "suggested_replacement": "s[0]",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 44,
                            "text": "            BitWidth::W8 => cursor.map(|s| s[0] as u8).map(Into::into),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`u8` -> `u8`)",
                "spans": [
                  {
                    "byte_end": 15283,
                    "byte_start": 15273,
                    "column_end": 54,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "src\\reader\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 432,
                    "line_start": 432,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 44,
                        "text": "            BitWidth::W8 => cursor.map(|s| s[0] as u8).map(Into::into),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric constant\n   --> src\\reader\\mod.rs:495:44\n    |\n495 |             Float => self.as_f64().abs() > std::f64::EPSILON,\n    |                                            ^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\nhelp: use the associated constant instead\n    |\n495 -             Float => self.as_f64().abs() > std::f64::EPSILON,\n495 +             Float => self.as_f64().abs() > f64::EPSILON,\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 17908,
                        "byte_start": 17891,
                        "column_end": 61,
                        "column_start": 44,
                        "expansion": null,
                        "file_name": "src\\reader\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 495,
                        "line_start": 495,
                        "suggested_replacement": "f64::EPSILON",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 61,
                            "highlight_start": 44,
                            "text": "            Float => self.as_f64().abs() > std::f64::EPSILON,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric constant",
                "spans": [
                  {
                    "byte_end": 17908,
                    "byte_start": 17891,
                    "column_end": 61,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "src\\reader\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 495,
                    "line_start": 495,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 61,
                        "highlight_start": 44,
                        "text": "            Float => self.as_f64().abs() > std::f64::EPSILON,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxy424kvg/flexbuffers-25.2.10#flexbuffers@25.2.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flexbuffers",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxy424kvg\\flexbuffers-25.2.10\\target\\debug\\deps\\libflexbuffers-4dccc12de29b3698.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 21
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {}
          },
          "note": "Crate analysis performed."
        },
        "crate_metadata": {
          "name": "flexbuffers",
          "version": "unknown",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": "",
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "ai_enrichment": {
          "provider": "azure",
          "model": "gpt-4o",
          "readme_summary": null,
          "use_case": null,
          "score": null,
          "factual_counterfactual": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-73c0c258-05c6c713-1751108384",
      "timestamp": "2025-06-28T10:59:44.259722+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]