[
  {
    "execution_id": "exec-277089d9-e048c973-1751108768",
    "timestamp": "2025-06-28T11:06:08.069700+00:00",
    "sacred_chain": {
      "input_data": "bytes",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'bytes' -> 'bytes'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "bytes",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "documentation_quality": 3.3333333333333335,
        "documentation_sources": [
          "crates_io",
          "docs_rs",
          "lib_rs"
        ],
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpkcwbeetl/bytes-1.10.1#bytes@1.10.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytes",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\target\\debug\\deps\\libbytes-3448cc38934962c5.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpkcwbeetl/bytes-1.10.1#bytes@1.10.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytes",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: docs for unsafe trait missing `# Safety` section\n  --> src\\buf\\buf_mut.rs:30:1\n   |\n30 | pub unsafe trait BufMut {\n   | ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::missing_safety_doc)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::missing_safety_doc",
                  "explanation": null
                },
                "level": "warning",
                "message": "docs for unsafe trait missing `# Safety` section",
                "spans": [
                  {
                    "byte_end": 815,
                    "byte_start": 792,
                    "column_end": 24,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\buf\\buf_mut.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 30,
                    "line_start": 30,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "pub unsafe trait BufMut {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpkcwbeetl/bytes-1.10.1#bytes@1.10.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytes",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: struct `UninitSlice` has a public `len` method, but no `is_empty` method\n   --> src\\buf\\uninit_slice.rs:205:5\n    |\n205 |     pub fn len(&self) -> usize {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_without_is_empty\n    = note: `#[warn(clippy::len_without_is_empty)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_without_is_empty",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::len_without_is_empty)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::len_without_is_empty",
                  "explanation": null
                },
                "level": "warning",
                "message": "struct `UninitSlice` has a public `len` method, but no `is_empty` method",
                "spans": [
                  {
                    "byte_end": 6114,
                    "byte_start": 6088,
                    "column_end": 31,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\buf\\uninit_slice.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 205,
                    "line_start": 205,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 5,
                        "text": "    pub fn len(&self) -> usize {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpkcwbeetl/bytes-1.10.1#bytes@1.10.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytes",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: non-canonical implementation of `partial_cmp` on an `Ord` type\n   --> src\\bytes.rs:791:1\n    |\n791 | /  impl PartialOrd for Bytes {\n792 | |      fn partial_cmp(&self, other: &Bytes) -> Option<cmp::Ordering> {\n    | | ___________________________________________________________________-\n793 | ||         self.as_slice().partial_cmp(other.as_slice())\n794 | ||     }\n    | ||_____- help: change this to: `{ Some(self.cmp(other)) }`\n795 | |  }\n    | |__^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_canonical_partial_ord_impl\n    = note: `#[warn(clippy::non_canonical_partial_ord_impl)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_canonical_partial_ord_impl",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::non_canonical_partial_ord_impl)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 23436,
                        "byte_start": 23375,
                        "column_end": 6,
                        "column_start": 67,
                        "expansion": null,
                        "file_name": "src\\bytes.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 794,
                        "line_start": 792,
                        "suggested_replacement": "{ Some(self.cmp(other)) }",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 68,
                            "highlight_start": 67,
                            "text": "    fn partial_cmp(&self, other: &Bytes) -> Option<cmp::Ordering> {"
                          },
                          {
                            "highlight_end": 54,
                            "highlight_start": 1,
                            "text": "        self.as_slice().partial_cmp(other.as_slice())"
                          },
                          {
                            "highlight_end": 6,
                            "highlight_start": 1,
                            "text": "    }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::non_canonical_partial_ord_impl",
                  "explanation": null
                },
                "level": "warning",
                "message": "non-canonical implementation of `partial_cmp` on an `Ord` type",
                "spans": [
                  {
                    "byte_end": 23438,
                    "byte_start": 23281,
                    "column_end": 2,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\bytes.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 795,
                    "line_start": 791,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "impl PartialOrd for Bytes {"
                      },
                      {
                        "highlight_end": 68,
                        "highlight_start": 1,
                        "text": "    fn partial_cmp(&self, other: &Bytes) -> Option<cmp::Ordering> {"
                      },
                      {
                        "highlight_end": 54,
                        "highlight_start": 1,
                        "text": "        self.as_slice().partial_cmp(other.as_slice())"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpkcwbeetl/bytes-1.10.1#bytes@1.10.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytes",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: use `core::ptr::eq` when comparing raw pointers\n    --> src\\bytes.rs:1540:27\n     |\n1540 |             debug_assert!(actual as usize == ptr as usize);\n     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `core::ptr::eq(actual, ptr)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_eq\n     = note: `#[warn(clippy::ptr_eq)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_eq",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::ptr_eq)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 44669,
                        "byte_start": 44638,
                        "column_end": 58,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\bytes.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1540,
                        "line_start": 1540,
                        "suggested_replacement": "core::ptr::eq(actual, ptr)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 27,
                            "text": "            debug_assert!(actual as usize == ptr as usize);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::ptr_eq",
                  "explanation": null
                },
                "level": "warning",
                "message": "use `core::ptr::eq` when comparing raw pointers",
                "spans": [
                  {
                    "byte_end": 44669,
                    "byte_start": 44638,
                    "column_end": 58,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\bytes.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1540,
                    "line_start": 1540,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 27,
                        "text": "            debug_assert!(actual as usize == ptr as usize);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpkcwbeetl/bytes-1.10.1#bytes@1.10.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytes",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unsafe function's docs are missing a `# Safety` section\n   --> src\\bytes_mut.rs:528:5\n    |\n528 |     pub unsafe fn set_len(&mut self, len: usize) {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::missing_safety_doc",
                  "explanation": null
                },
                "level": "warning",
                "message": "unsafe function's docs are missing a `# Safety` section",
                "spans": [
                  {
                    "byte_end": 15884,
                    "byte_start": 15840,
                    "column_end": 49,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\bytes_mut.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 528,
                    "line_start": 528,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 5,
                        "text": "    pub unsafe fn set_len(&mut self, len: usize) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpkcwbeetl/bytes-1.10.1#bytes@1.10.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytes",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unneeded `return` statement\n   --> src\\bytes_mut.rs:783:9\n    |\n783 |         return true;\n    |         ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n783 -         return true;\n783 +         true\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_return)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "remove `return`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 26651,
                        "byte_start": 26640,
                        "column_end": 20,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\bytes_mut.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 783,
                        "line_start": 783,
                        "suggested_replacement": "true",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 20,
                            "highlight_start": 9,
                            "text": "        return true;"
                          }
                        ]
                      },
                      {
                        "byte_end": 26652,
                        "byte_start": 26651,
                        "column_end": 21,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "src\\bytes_mut.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 783,
                        "line_start": 783,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 21,
                            "highlight_start": 20,
                            "text": "        return true;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_return",
                  "explanation": null
                },
                "level": "warning",
                "message": "unneeded `return` statement",
                "spans": [
                  {
                    "byte_end": 26651,
                    "byte_start": 26640,
                    "column_end": 20,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\bytes_mut.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 783,
                    "line_start": 783,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 9,
                        "text": "        return true;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpkcwbeetl/bytes-1.10.1#bytes@1.10.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytes",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: manual saturating arithmetic\n   --> src\\bytes_mut.rs:989:20\n    |\n989 |         self.len = self.len.checked_sub(count).unwrap_or(0);\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `saturating_sub`: `self.len.saturating_sub(count)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_saturating_arithmetic\n    = note: `#[warn(clippy::manual_saturating_arithmetic)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_saturating_arithmetic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::manual_saturating_arithmetic)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using `saturating_sub`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 33824,
                        "byte_start": 33784,
                        "column_end": 60,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "src\\bytes_mut.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 989,
                        "line_start": 989,
                        "suggested_replacement": "self.len.saturating_sub(count)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 60,
                            "highlight_start": 20,
                            "text": "        self.len = self.len.checked_sub(count).unwrap_or(0);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_saturating_arithmetic",
                  "explanation": null
                },
                "level": "warning",
                "message": "manual saturating arithmetic",
                "spans": [
                  {
                    "byte_end": 33824,
                    "byte_start": 33784,
                    "column_end": 60,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\bytes_mut.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 989,
                    "line_start": 989,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 20,
                        "text": "        self.len = self.len.checked_sub(count).unwrap_or(0);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpkcwbeetl/bytes-1.10.1#bytes@1.10.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytes",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: non-canonical implementation of `partial_cmp` on an `Ord` type\n    --> src\\bytes_mut.rs:1285:1\n     |\n1285 | /  impl PartialOrd for BytesMut {\n1286 | |      fn partial_cmp(&self, other: &BytesMut) -> Option<cmp::Ordering> {\n     | | ______________________________________________________________________-\n1287 | ||         self.as_slice().partial_cmp(other.as_slice())\n1288 | ||     }\n     | ||_____- help: change this to: `{ Some(self.cmp(other)) }`\n1289 | |  }\n     | |__^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_canonical_partial_ord_impl\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_canonical_partial_ord_impl",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 41781,
                        "byte_start": 41720,
                        "column_end": 6,
                        "column_start": 70,
                        "expansion": null,
                        "file_name": "src\\bytes_mut.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1288,
                        "line_start": 1286,
                        "suggested_replacement": "{ Some(self.cmp(other)) }",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 71,
                            "highlight_start": 70,
                            "text": "    fn partial_cmp(&self, other: &BytesMut) -> Option<cmp::Ordering> {"
                          },
                          {
                            "highlight_end": 54,
                            "highlight_start": 1,
                            "text": "        self.as_slice().partial_cmp(other.as_slice())"
                          },
                          {
                            "highlight_end": 6,
                            "highlight_start": 1,
                            "text": "    }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::non_canonical_partial_ord_impl",
                  "explanation": null
                },
                "level": "warning",
                "message": "non-canonical implementation of `partial_cmp` on an `Ord` type",
                "spans": [
                  {
                    "byte_end": 41783,
                    "byte_start": 41620,
                    "column_end": 2,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\bytes_mut.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1289,
                    "line_start": 1285,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "impl PartialOrd for BytesMut {"
                      },
                      {
                        "highlight_end": 71,
                        "highlight_start": 1,
                        "text": "    fn partial_cmp(&self, other: &BytesMut) -> Option<cmp::Ordering> {"
                      },
                      {
                        "highlight_end": 54,
                        "highlight_start": 1,
                        "text": "        self.as_slice().partial_cmp(other.as_slice())"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpkcwbeetl/bytes-1.10.1#bytes@1.10.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytes",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting raw pointers to the same type and constness is unnecessary (`*mut bytes_mut::Shared` -> `*mut bytes_mut::Shared`)\n    --> src\\bytes_mut.rs:1722:26\n     |\n1722 |             let shared = bytes.data as *mut Shared;\n     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `bytes.data`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n     = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::unnecessary_cast)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 53065,
                        "byte_start": 53040,
                        "column_end": 51,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\bytes_mut.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1722,
                        "line_start": 1722,
                        "suggested_replacement": "bytes.data",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 26,
                            "text": "            let shared = bytes.data as *mut Shared;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting raw pointers to the same type and constness is unnecessary (`*mut bytes_mut::Shared` -> `*mut bytes_mut::Shared`)",
                "spans": [
                  {
                    "byte_end": 53065,
                    "byte_start": 53040,
                    "column_end": 51,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\bytes_mut.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1722,
                    "line_start": 1722,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 26,
                        "text": "            let shared = bytes.data as *mut Shared;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpkcwbeetl/bytes-1.10.1#bytes@1.10.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytes",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkcwbeetl\\bytes-1.10.1\\target\\debug\\deps\\libbytes-f41fa242d62ef75d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 43
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {
              "unmaintained": [
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "ansi_term",
                    "version": "0.12.1",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "d52a9bb7ec0cf484c551830a7ce27bd20d67eac647e1befb56b0be4ee39a55d2",
                    "dependencies": [
                      {
                        "name": "winapi",
                        "version": "0.3.9",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2021-0139",
                    "package": "ansi_term",
                    "title": "ansi_term is Unmaintained",
                    "description": "The maintainer has advised that this crate is deprecated and will not receive any maintenance.\n\nThe crate does not seem to have much dependencies and may or may not be ok to use as-is.\n\nLast release seems to have been three years ago.\n\n## Possible Alternative(s)\n\n The below list has not been vetted in any way and may or may not contain alternatives;\n\n - [ansiterm](https://crates.io/crates/ansiterm)\n - [anstyle](https://github.com/epage/anstyle)\n - [console](https://crates.io/crates/console)\n - [nu-ansi-term](https://crates.io/crates/nu-ansi-term)\n - [owo-colors](https://crates.io/crates/owo-colors)\n - [stylish](https://crates.io/crates/stylish)\n - [yansi](https://crates.io/crates/yansi)\n\n## Dependency Specific Migration(s)\n\n - [structopt, clap2](https://github.com/clap-rs/clap/discussions/4172)",
                    "date": "2021-08-18",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/ogham/rust-ansi-term/issues/72",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                }
              ]
            }
          },
          "note": "Crate analysis performed."
        },
        "crate_metadata": {
          "name": "bytes",
          "version": "unknown",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": "",
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "ai_enrichment": {
          "provider": "azure",
          "model": "gpt-4o",
          "readme_summary": null,
          "use_case": null,
          "score": null,
          "factual_counterfactual": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-277089d9-e048c973-1751108768",
      "timestamp": "2025-06-28T11:06:08.069700+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]