[
  {
    "execution_id": "exec-427e4b79-7a6556fb-1751261612",
    "timestamp": "2025-06-30T05:33:32.709887+00:00",
    "sacred_chain": {
      "input_data": "curl",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'curl' -> 'curl'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "curl",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/curl",
            "title": "curl v0.4.48",
            "content": {
              "raw_markdown": "#  curl v0.4.48\nRust bindings to libcurl for making HTTP requests \n  * [ Readme ](https://crates.io/crates/curl)\n  * [ 100 Versions ](https://crates.io/crates/curl/versions)\n  * [ Dependencies ](https://crates.io/crates/curl/dependencies)\n  * [ Dependents ](https://crates.io/crates/curl/reverse_dependencies)\n\n\n## Metadata\n23 days ago \n2018 edition \n[ MIT ](https://choosealicense.com/licenses/mit)\n95 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add curl\nOr add the following line to your Cargo.toml:\ncurl = \"0.4.48\"\n## Documentation\n[ docs.rs/curl ](https://docs.rs/curl)\n## Repository\n[ github.com/alexcrichton/curl-rust ](https://github.com/alexcrichton/curl-rust)\n## Owners\n## Categories\n  * [API bindings](https://crates.io/categories/api-bindings)\n  * [HTTP client](https://crates.io/categories/web-programming::http-client)\n\n\n[ Report crate ](https://crates.io/support?crate=curl&inquire=crate-violation)\n### Stats Overview\n28,220,509 Downloads all time\n100 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  curl v0.4.48\nRust bindings to libcurl for making HTTP requests \n  *  Readme \u27e81\u27e9\n  *  100 Versions \u27e82\u27e9\n  *  Dependencies \u27e83\u27e9\n  *  Dependents \u27e84\u27e9\n\n\n## Metadata\n23 days ago \n2018 edition \n MIT \u27e85\u27e9\n95 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add curl\nOr add the following line to your Cargo.toml:\ncurl = \"0.4.48\"\n## Documentation\n docs.rs/curl \u27e86\u27e9\n## Repository\n github.com/alexcrichton/curl-rust \u27e87\u27e9\n## Owners\n## Categories\n  * API bindings\u27e88\u27e9\n  * HTTP client\u27e89\u27e9\n\n\n Report crate \u27e810\u27e9\n### Stats Overview\n28,220,509 Downloads all time\n100 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/crates/curl:  Readme \n\u27e82\u27e9 https://crates.io/crates/curl/versions:  100 Versions \n\u27e83\u27e9 https://crates.io/crates/curl/dependencies:  Dependencies \n\u27e84\u27e9 https://crates.io/crates/curl/reverse_dependencies:  Dependents \n\u27e85\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e86\u27e9 https://docs.rs/curl:  docs.rs/curl \n\u27e87\u27e9 https://github.com/alexcrichton/curl-rust:  github.com/alexcrichton/curl-rust \n\u27e88\u27e9 https://crates.io/categories/api-bindings: API bindings\n\u27e89\u27e9 https://crates.io/categories/web-programming::http-client: HTTP client\n\u27e810\u27e9 https://crates.io/support?crate=curl&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1119,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "115402.610411"
          },
          "docs_rs": {
            "url": "https://docs.rs/curl",
            "title": "Crate curlCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/curl/latest/curl/all.html \"show sidebar\")\n# Crate curlCopy item path\n[Settings](https://docs.rs/curl/latest/settings.html)\n[Help](https://docs.rs/curl/latest/help.html)\nSummary[Source](https://docs.rs/curl/latest/src/curl/lib.rs.html#1-184)\nExpand description\nRust bindings to the libcurl C library\nThis crate contains bindings for an HTTP/HTTPS client which is powered by [libcurl](https://curl.haxx.se/libcurl/), the same library behind the `curl` command line tool. The API currently closely matches that of libcurl itself, except that a Rustic layer of safety is applied on top.\n## [\u00a7](https://docs.rs/curl/latest/curl/#the-easy-api)The \u201cEasy\u201d API\nThe easiest way to send a request is to use the `Easy` api which corresponds to `CURL` in libcurl. This handle supports a wide variety of options and can be used to make a single blocking request in a thread. Callbacks can be specified to deal with data as it arrives and a handle can be reused to cache connections and such.\n```\nuse std::io::{stdout, Write};\nuse curl::easy::Easy;\n// Write the contents of rust-lang.org to stdout\nlet mut easy = Easy::new();\neasy.url(\"https://www.rust-lang.org/\").unwrap();\neasy.write_function(|data| {\n  stdout().write_all(data).unwrap();\n  Ok(data.len())\n}).unwrap();\neasy.perform().unwrap();\n```\n\n## [\u00a7](https://docs.rs/curl/latest/curl/#what-about-multiple-concurrent-http-requests)What about multiple concurrent HTTP requests?\nOne option you have currently is to send multiple requests in multiple threads, but otherwise libcurl has a \u201cmulti\u201d interface for doing this operation. Initial bindings of this interface can be found in the `multi` module, but feedback is welcome!\n## [\u00a7](https://docs.rs/curl/latest/curl/#where-does-libcurl-come-from)Where does libcurl come from?\nThis crate links to the `curl-sys` crate which is in turn responsible for acquiring and linking to the libcurl library. Currently this crate will build libcurl from source if one is not already detected on the system.\nThere is a large number of releases for libcurl, all with different sets of capabilities. Robust programs may wish to inspect `Version::get()` to test what features are implemented in the linked build of libcurl at runtime.\n## [\u00a7](https://docs.rs/curl/latest/curl/#initialization)Initialization\nThe underlying libcurl library must be initialized before use and has certain requirements on how this is done. Check the documentation for [`init`](https://docs.rs/curl/latest/curl/fn.init.html \"fn curl::init\") for more details.\n## Modules[\u00a7](https://docs.rs/curl/latest/curl/#modules)\n\n[easy](https://docs.rs/curl/latest/curl/easy/index.html \"mod curl::easy\")\n    Bindings to the \u201ceasy\u201d libcurl API.\n\n[multi](https://docs.rs/curl/latest/curl/multi/index.html \"mod curl::multi\")\n    Multi - initiating multiple requests simultaneously\n## Structs[\u00a7](https://docs.rs/curl/latest/curl/#structs)\n\n[Error](https://docs.rs/curl/latest/curl/struct.Error.html \"struct curl::Error\")\n    An error returned from various \u201ceasy\u201d operations.\n\n[FormError](https://docs.rs/curl/latest/curl/struct.FormError.html \"struct curl::FormError\")\n    An error from \u201cform add\u201d operations.\n\n[MultiError](https://docs.rs/curl/latest/curl/struct.MultiError.html \"struct curl::MultiError\")\n    An error from \u201cmulti\u201d operations.\n\n[Protocols](https://docs.rs/curl/latest/curl/struct.Protocols.html \"struct curl::Protocols\")\n    An iterator over the list of protocols a version supports.\n\n[ShareError](https://docs.rs/curl/latest/curl/struct.ShareError.html \"struct curl::ShareError\")\n    An error returned from \u201cshare\u201d operations.\n\n[Version](https://docs.rs/curl/latest/curl/struct.Version.html \"struct curl::Version\")\n    Version information about libcurl and the capabilities that it supports.\n## Functions[\u00a7](https://docs.rs/curl/latest/curl/#functions)\n\n[init](https://docs.rs/curl/latest/curl/fn.init.html \"fn curl::init\")\n    Initializes the underlying libcurl library.\n",
              "markdown_with_citations": "[](https://docs.rs/curl/latest/curl/all.html \"show sidebar\")\n# Crate curlCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nRust bindings to the libcurl C library\nThis crate contains bindings for an HTTP/HTTPS client which is powered by libcurl\u27e84\u27e9, the same library behind the `curl` command line tool. The API currently closely matches that of libcurl itself, except that a Rustic layer of safety is applied on top.\n## \u00a7\u27e85\u27e9The \u201cEasy\u201d API\nThe easiest way to send a request is to use the `Easy` api which corresponds to `CURL` in libcurl. This handle supports a wide variety of options and can be used to make a single blocking request in a thread. Callbacks can be specified to deal with data as it arrives and a handle can be reused to cache connections and such.\n```\nuse std::io::{stdout, Write};\nuse curl::easy::Easy;\n// Write the contents of rust-lang.org to stdout\nlet mut easy = Easy::new();\neasy.url(\"https://www.rust-lang.org/\").unwrap();\neasy.write_function(|data| {\n  stdout().write_all(data).unwrap();\n  Ok(data.len())\n}).unwrap();\neasy.perform().unwrap();\n```\n\n## \u00a7\u27e86\u27e9What about multiple concurrent HTTP requests?\nOne option you have currently is to send multiple requests in multiple threads, but otherwise libcurl has a \u201cmulti\u201d interface for doing this operation. Initial bindings of this interface can be found in the `multi` module, but feedback is welcome!\n## \u00a7\u27e87\u27e9Where does libcurl come from?\nThis crate links to the `curl-sys` crate which is in turn responsible for acquiring and linking to the libcurl library. Currently this crate will build libcurl from source if one is not already detected on the system.\nThere is a large number of releases for libcurl, all with different sets of capabilities. Robust programs may wish to inspect `Version::get()` to test what features are implemented in the linked build of libcurl at runtime.\n## \u00a7\u27e88\u27e9Initialization\nThe underlying libcurl library must be initialized before use and has certain requirements on how this is done. Check the documentation for `init`\u27e89\u27e9 for more details.\n## Modules\u00a7\u27e810\u27e9\n\neasy\u27e811\u27e9\n    Bindings to the \u201ceasy\u201d libcurl API.\n\nmulti\u27e812\u27e9\n    Multi - initiating multiple requests simultaneously\n## Structs\u00a7\u27e813\u27e9\n\nError\u27e814\u27e9\n    An error returned from various \u201ceasy\u201d operations.\n\nFormError\u27e815\u27e9\n    An error from \u201cform add\u201d operations.\n\nMultiError\u27e816\u27e9\n    An error from \u201cmulti\u201d operations.\n\nProtocols\u27e817\u27e9\n    An iterator over the list of protocols a version supports.\n\nShareError\u27e818\u27e9\n    An error returned from \u201cshare\u201d operations.\n\nVersion\u27e819\u27e9\n    Version information about libcurl and the capabilities that it supports.\n## Functions\u00a7\u27e820\u27e9\n\ninit\u27e89\u27e9\n    Initializes the underlying libcurl library.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/curl/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/curl/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/curl/latest/src/curl/lib.rs.html#1-184: Source\n\u27e84\u27e9 https://curl.haxx.se/libcurl/: libcurl\n\u27e85\u27e9 https://docs.rs/curl/latest/curl/#the-easy-api: \u00a7\n\u27e86\u27e9 https://docs.rs/curl/latest/curl/#what-about-multiple-concurrent-http-requests: \u00a7\n\u27e87\u27e9 https://docs.rs/curl/latest/curl/#where-does-libcurl-come-from: \u00a7\n\u27e88\u27e9 https://docs.rs/curl/latest/curl/#initialization: \u00a7\n\u27e89\u27e9 https://docs.rs/curl/latest/curl/fn.init.html: fn curl::init - `init`\n\u27e810\u27e9 https://docs.rs/curl/latest/curl/#modules: \u00a7\n\u27e811\u27e9 https://docs.rs/curl/latest/curl/easy/index.html: mod curl::easy - easy\n\u27e812\u27e9 https://docs.rs/curl/latest/curl/multi/index.html: mod curl::multi - multi\n\u27e813\u27e9 https://docs.rs/curl/latest/curl/#structs: \u00a7\n\u27e814\u27e9 https://docs.rs/curl/latest/curl/struct.Error.html: struct curl::Error - Error\n\u27e815\u27e9 https://docs.rs/curl/latest/curl/struct.FormError.html: struct curl::FormError - FormError\n\u27e816\u27e9 https://docs.rs/curl/latest/curl/struct.MultiError.html: struct curl::MultiError - MultiError\n\u27e817\u27e9 https://docs.rs/curl/latest/curl/struct.Protocols.html: struct curl::Protocols - Protocols\n\u27e818\u27e9 https://docs.rs/curl/latest/curl/struct.ShareError.html: struct curl::ShareError - ShareError\n\u27e819\u27e9 https://docs.rs/curl/latest/curl/struct.Version.html: struct curl::Version - Version\n\u27e820\u27e9 https://docs.rs/curl/latest/curl/#functions: \u00a7\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 3943,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "115403.2198049"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/curl",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [96 releases](https://lib.rs/crates/curl/versions)\n0.5.0 |  ~~Jan 3, 2018~~  \n---|---  \n0.4.48 |  Jun 6, 2025   \n0.4.47 |  Sep 30, 2024   \n0.4.46 |  Feb 12, 2024   \n0.1.4 |  Dec 29, 2014   \n#**4** in [HTTP client](https://lib.rs/web-programming/http-client \"Crates to make HTTP network requests.\")\nDownload history 209281/week @ 2025-03-07 200171/week @ 2025-03-14 197736/week @ 2025-03-21 192925/week @ 2025-03-28 197559/week @ 2025-04-04 184454/week @ 2025-04-11 202550/week @ 2025-04-18 188411/week @ 2025-04-25 154370/week @ 2025-05-02 159588/week @ 2025-05-09 178397/week @ 2025-05-16 156847/week @ 2025-05-23 163885/week @ 2025-05-30 170131/week @ 2025-06-06 175474/week @ 2025-06-13 187961/week @ 2025-06-20\n**728,098** downloads per month Used in [**1,149** crates (294 directly)](https://lib.rs/crates/curl/rev)\n**MIT** license \n**7.5MB** **166K** SLoC\nC 131K SLoC // 0.2% comments  Templ 13K SLoC  M4 8K SLoC // 0.3% comments  Rust 6K SLoC // 0.1% comments  Perl 3.5K SLoC // 0.2% comments  Visual Studio Solution 1.5K SLoC  Batch 1K SLoC  Shell 1K SLoC // 0.4% comments  Automake 528 SLoC // 0.3% comments  Bitbake 481 SLoC // 0.2% comments \n# curl-rust\n[libcurl](https://curl.haxx.se/libcurl/) bindings for Rust\n[![Latest Version](https://img.shields.io/crates/v/curl.svg)](https://crates.io/crates/curl) [![Documentation](https://img.gs/czjpqfbdkz/full/https://docs.rs/curl/badge.svg)](https://docs.rs/curl) [![License](https://img.shields.io/github/license/alexcrichton/curl-rust.svg)](https://github.com/alexcrichton/curl-rust/blob/739b5fdc95107184b9fcf8df4522e6d7789e66b4/LICENSE) [![Build](https://img.gs/czjpqfbdkz/full/https://github.com/alexcrichton/curl-rust/workflows/CI/badge.svg)](https://github.com/alexcrichton/curl-rust/actions)\n## Quick Start\n```\n``use` `std`::```io`::````{`stdout`,` Write```}```;`\n`use` `curl`::```easy`::``Easy`;`\n``//` Print a web page onto stdout`\n``fn` `main`````(````)``````{`\n  `let` `mut` easy `=` `Easy`::``new`(``)``;`\n  easy`.``url``(```\"`https://www.rust-lang.org/`\"```)``.``unwrap``(``)``;`\n  easy`.``write_function``(````|``````data``|`` ```{`\n    `stdout``(``)``.``write_all``(`data`)``.``unwrap``(``)``;`\n    `Ok``(`data`.``len``(``)``)`\n  `}```)``.``unwrap``(``)``;`\n  easy`.``perform``(``)``.``unwrap``(``)``;`\n  `println!``(```\"``{}``\"```,` easy`.``response_code``(``)``.``unwrap``(``)``)``;`\n```}```\n`\n```\n```\n``use` `curl`::```easy`::``Easy`;`\n``//` Capture output into a local `Vec`.`\n``fn` `main`````(````)``````{`\n  `let` `mut` dst `=` `Vec```::``new`(``)``;`\n  `let` `mut` easy `=` `Easy`::``new`(``)``;`\n  easy`.``url``(```\"`https://www.rust-lang.org/`\"```)``.``unwrap``(``)``;`\n  `let` `mut` transfer `=` easy`.``transfer``(``)``;`\n  transfer`.``write_function``(````|``````data``|`` ```{`\n    dst`.``extend_from_slice``(`data`)``;`\n    `Ok``(`data`.``len``(``)``)`\n  `}```)``.``unwrap``(``)``;`\n  transfer`.``perform``(``)``.``unwrap``(``)``;`\n```}```\n`\n```\n\n## Post / Put requests\nThe ``put`` and ``post`` methods on ``Easy`` can configure the method of the HTTP request, and then ``read_function`` can be used to specify how data is filled in. This interface works particularly well with types that implement ``Read``.\n```\n``use` `std`::```io`::``Read`;`\n`use` `curl`::```easy`::``Easy`;`\n``fn` `main`````(````)``````{`\n  `let` `mut` data `=` ``\"`this is the body`\"```.``as_bytes``(``)``;`\n  `let` `mut` easy `=` `Easy`::``new`(``)``;`\n  easy`.``url``(```\"`http://www.example.com/upload`\"```)``.``unwrap``(``)``;`\n  easy`.``post``(``true``)``.``unwrap``(``)``;`\n  easy`.``post_field_size``(`data`.``len``(``)` `as` `u64``)``.``unwrap``(``)``;`\n  `let` `mut` transfer `=` easy`.``transfer``(``)``;`\n  transfer`.``read_function``(````|``````buf``|`` ```{`\n    `Ok``(`data`.``read``(`buf`)``.``unwrap_or``(``0``)``)`\n  `}```)``.``unwrap``(``)``;`\n  transfer`.``perform``(``)``.``unwrap``(``)``;`\n```}```\n`\n```\n\n## Custom headers\nCustom headers can be specified as part of the request:\n```\n``use` `curl`::```easy`::````{`Easy`,` List```}```;`\n``fn` `main`````(````)``````{`\n  `let` `mut` easy `=` `Easy`::``new`(``)``;`\n  easy`.``url``(```\"`http://www.example.com`\"```)``.``unwrap``(``)``;`\n  `let` `mut` list `=` `List`::``new`(``)``;`\n  list`.``append``(```\"`Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==`\"```)``.``unwrap``(``)``;`\n  easy`.``http_headers``(`list`)``.``unwrap``(``)``;`\n  easy`.``perform``(``)``.``unwrap``(``)``;`\n```}```\n`\n```\n\n## Keep alive\nThe handle can be re-used across multiple requests. Curl will attempt to keep the connections alive.\n```\n``use` `curl`::```easy`::``Easy`;`\n``fn` `main`````(````)``````{`\n  `let` `mut` handle `=` `Easy`::``new`(``)``;`\n  handle`.``url``(```\"`http://www.example.com/foo`\"```)``.``unwrap``(``)``;`\n  handle`.``perform``(``)``.``unwrap``(``)``;`\n  handle`.``url``(```\"`http://www.example.com/bar`\"```)``.``unwrap``(``)``;`\n  handle`.``perform``(``)``.``unwrap``(``)``;`\n```}```\n`\n```\n\n## Multiple requests\nThe libcurl library provides support for sending multiple requests simultaneously through the \"multi\" interface. This is currently bound in the ``multi`` module of this crate and provides the ability to execute multiple transfers simultaneously. For more information, see that module.\n## Building\nBy default, this crate will attempt to dynamically link to the system-wide libcurl and the system-wide SSL library. Some of this behavior can be customized with various Cargo features:\n  * ``ssl``: Enable SSL/TLS support using the platform-default TLS backend. On Windows this is [Schannel](https://docs.microsoft.com/en-us/windows/win32/com/schannel), on macOS [Secure Transport](https://developer.apple.com/documentation/security/secure_transport), and [OpenSSL](https://www.openssl.org/) (or equivalent) on all other platforms. Enabled by default.\n  * ``rustls`` Enable SSL/TLS support via [Rustls](https://github.com/ctz/rustls), a well-received alternative TLS backend written in Rust. Rustls is always statically linked. Disabled by default.\nNote that Rustls support is experimental within Curl itself and may have significant bugs, so we don't offer any sort of stability guarantee with this feature.\n  * ``http2``: Enable HTTP/2 support via libnghttp2. Disabled by default.\n  * ``static-curl``: Use a bundled libcurl version and statically link to it. Disabled by default.\n  * ``static-ssl``: Use a bundled OpenSSL version and statically link to it. Only applies on platforms that use OpenSSL. Disabled by default.\n  * ``spnego``: Enable SPNEGO support. Disabled by default.\n  * ``upkeep_7_62_0``: Enable curl_easy_upkeep() support, introduced in curl 7.62.0. Disabled by default.\n  * ``poll_7_68_0``: Enable curl_multi_poll()/curl_multi_wakeup() support, requires curl 7.68.0 or later. Disabled by default.\n  * ``ntlm``: Enable NTLM support in curl. Disabled by default.\n  * ``windows-static-ssl``: Enable Openssl support on Windows via the static build provided by vcpkg. Incompatible with ``ssl`` (use ``--no-default-features``). Disabled by default.\nNote that to install openssl on windows via vcpkg the following commands needs to be ran:\n```\n```git``` clone https://github.com/microsoft/vcpkg`\n``cd``` vcpkg`\n``./bootstrap-vcpkg.bat````` -`disableMetrics``\n``./vcpkg.exe``` integrate install`\n``./vcpkg.exe``` install openssl:x64-windows-static-md`\n`\n```\n\n\n\n## Version Support\nThe bindings have been developed using curl version 7.24.0. They should work with any newer version of curl and possibly with older versions, but this has not been tested.\n## Troubleshooting\n### Curl built against the NSS SSL library\nIf you encounter the following error message:\n```\n` `[``77``]` Problem with the `SSL` `CA` cert `(`path`?` access rights`?``)`\n`\n```\n\nThat means most likely, that curl was linked against ``libcurl`-`nss`.`so`` due to installed libcurl NSS development files, and that the required library ``libnsspem`.`so`` is missing. See also the curl man page: \"If curl is built against the NSS SSL library, the NSS PEM PKCS#11 module (``libnsspem`.`so``) needs to be available for this option to work properly.\"\nIn order to avoid this failure you can either\n  * install the missing library (e.g. Debian: ``nss-plugin-pem``), or\n  * remove the libcurl NSS development files (e.g. Debian: ``libcurl4-nss-dev``) and rebuild curl-rust.\n\n\n## License\nThe ``curl-rust`` crate is licensed under the MIT license, see [``LICENSE``](https://github.com/alexcrichton/curl-rust/blob/739b5fdc95107184b9fcf8df4522e6d7789e66b4/LICENSE) for more details.\n#### Dependencies\n~1\u201312MB  ~172K SLoC\n  * [curl-sys](https://lib.rs/crates/curl-sys \"0.4.77\")\n  * [libc](https://lib.rs/crates/libc \"0.2.42\")\n  * [ssl](https://lib.rs/crates/curl/features#feature-ssl \"default feature\") [openssl-probe](https://lib.rs/crates/openssl-probe \"0.1.2\") unix not mac\n  * [ssl](https://lib.rs/crates/curl/features#feature-ssl \"default feature\") [openssl-sys](https://lib.rs/crates/openssl-sys \"0.9.64\") unix not mac\n  * [schannel](https://lib.rs/crates/schannel \"0.1.13\") msvc\n  * [socket2](https://lib.rs/crates/socket2 \"0.5.0\")\n  * [windows-sys](https://lib.rs/crates/windows-sys \"0.59\")[+Win32_Foundation](https://lib.rs/crates/windows-sys/features#feature-Win32_Foundation)[+Win32\u2026LibraryLoader](https://lib.rs/crates/windows-sys/features#feature-Win32_System_LibraryLoader)[+Win32\u2026Cryptography](https://lib.rs/crates/windows-sys/features#feature-Win32_Security_Cryptography) msvc\n\n\n  * build `build.rs`\n  * dev  [anyhow](https://lib.rs/crates/anyhow \"1.0.31\")\n  * dev  [mio](https://lib.rs/crates/mio \"obsolete\") 0.6\n  * dev  [mio-extras](https://lib.rs/crates/mio-extras \"2.0.3\")\n\n\n#### [Other features](https://lib.rs/crates/curl/features)\n  * [force-system-lib-on-osx](https://lib.rs/crates/curl/features#feature-force-system-lib-on-osx)\n  * [http2](https://lib.rs/crates/curl/features#feature-http2)\n  * [mesalink](https://lib.rs/crates/curl/features#feature-mesalink)\n  * [ntlm](https://lib.rs/crates/curl/features#feature-ntlm)\n  * [poll_7_68_0](https://lib.rs/crates/curl/features#feature-poll_7_68_0)\n  * [protocol-ftp](https://lib.rs/crates/curl/features#feature-protocol-ftp)\n  * [rustls](https://lib.rs/crates/curl/features#feature-rustls)\n  * [spnego](https://lib.rs/crates/curl/features#feature-spnego)\n  * [static-curl](https://lib.rs/crates/curl/features#feature-static-curl)\n  * [static-ssl](https://lib.rs/crates/curl/features#feature-static-ssl)\n  * [upkeep_7_62_0](https://lib.rs/crates/curl/features#feature-upkeep_7_62_0)\n  * [windows-static-ssl](https://lib.rs/crates/curl/features#feature-windows-static-ssl)\n  * [zlib-ng-compat](https://lib.rs/crates/curl/features#feature-zlib-ng-compat)\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  96 releases\u27e81\u27e9\n0.5.0 |  ~~Jan 3, 2018~~  \n---|---  \n0.4.48 |  Jun 6, 2025   \n0.4.47 |  Sep 30, 2024   \n0.4.46 |  Feb 12, 2024   \n0.1.4 |  Dec 29, 2014   \n#**4** in HTTP client\u27e82\u27e9\nDownload history 209281/week @ 2025-03-07 200171/week @ 2025-03-14 197736/week @ 2025-03-21 192925/week @ 2025-03-28 197559/week @ 2025-04-04 184454/week @ 2025-04-11 202550/week @ 2025-04-18 188411/week @ 2025-04-25 154370/week @ 2025-05-02 159588/week @ 2025-05-09 178397/week @ 2025-05-16 156847/week @ 2025-05-23 163885/week @ 2025-05-30 170131/week @ 2025-06-06 175474/week @ 2025-06-13 187961/week @ 2025-06-20\n**728,098** downloads per month Used in **1,149** crates (294 directly)\u27e83\u27e9\n**MIT** license \n**7.5MB** **166K** SLoC\nC 131K SLoC // 0.2% comments  Templ 13K SLoC  M4 8K SLoC // 0.3% comments  Rust 6K SLoC // 0.1% comments  Perl 3.5K SLoC // 0.2% comments  Visual Studio Solution 1.5K SLoC  Batch 1K SLoC  Shell 1K SLoC // 0.4% comments  Automake 528 SLoC // 0.3% comments  Bitbake 481 SLoC // 0.2% comments \n# curl-rust\nlibcurl\u27e84\u27e9 bindings for Rust\n![Latest Version\u27e85\u27e9](https://crates.io/crates/curl) ![Documentation\u27e86\u27e9](https://docs.rs/curl) ![License\u27e87\u27e9](https://github.com/alexcrichton/curl-rust/blob/739b5fdc95107184b9fcf8df4522e6d7789e66b4/LICENSE) ![Build\u27e88\u27e9](https://github.com/alexcrichton/curl-rust/actions)\n## Quick Start\n```\n``use` `std`::```io`::````{`stdout`,` Write```}```;`\n`use` `curl`::```easy`::``Easy`;`\n``//` Print a web page onto stdout`\n``fn` `main`````(````)``````{`\n  `let` `mut` easy `=` `Easy`::``new`(``)``;`\n  easy`.``url``(```\"`https://www.rust-lang.org/`\"```)``.``unwrap``(``)``;`\n  easy`.``write_function``(````|``````data``|`` ```{`\n    `stdout``(``)``.``write_all``(`data`)``.``unwrap``(``)``;`\n    `Ok``(`data`.``len``(``)``)`\n  `}```)``.``unwrap``(``)``;`\n  easy`.``perform``(``)``.``unwrap``(``)``;`\n  `println!``(```\"``{}``\"```,` easy`.``response_code``(``)``.``unwrap``(``)``)``;`\n```}```\n`\n```\n```\n``use` `curl`::```easy`::``Easy`;`\n``//` Capture output into a local `Vec`.`\n``fn` `main`````(````)``````{`\n  `let` `mut` dst `=` `Vec```::``new`(``)``;`\n  `let` `mut` easy `=` `Easy`::``new`(``)``;`\n  easy`.``url``(```\"`https://www.rust-lang.org/`\"```)``.``unwrap``(``)``;`\n  `let` `mut` transfer `=` easy`.``transfer``(``)``;`\n  transfer`.``write_function``(````|``````data``|`` ```{`\n    dst`.``extend_from_slice``(`data`)``;`\n    `Ok``(`data`.``len``(``)``)`\n  `}```)``.``unwrap``(``)``;`\n  transfer`.``perform``(``)``.``unwrap``(``)``;`\n```}```\n`\n```\n\n## Post / Put requests\nThe ``put`` and ``post`` methods on ``Easy`` can configure the method of the HTTP request, and then ``read_function`` can be used to specify how data is filled in. This interface works particularly well with types that implement ``Read``.\n```\n``use` `std`::```io`::``Read`;`\n`use` `curl`::```easy`::``Easy`;`\n``fn` `main`````(````)``````{`\n  `let` `mut` data `=` ``\"`this is the body`\"```.``as_bytes``(``)``;`\n  `let` `mut` easy `=` `Easy`::``new`(``)``;`\n  easy`.``url``(```\"`http://www.example.com/upload`\"```)``.``unwrap``(``)``;`\n  easy`.``post``(``true``)``.``unwrap``(``)``;`\n  easy`.``post_field_size``(`data`.``len``(``)` `as` `u64``)``.``unwrap``(``)``;`\n  `let` `mut` transfer `=` easy`.``transfer``(``)``;`\n  transfer`.``read_function``(````|``````buf``|`` ```{`\n    `Ok``(`data`.``read``(`buf`)``.``unwrap_or``(``0``)``)`\n  `}```)``.``unwrap``(``)``;`\n  transfer`.``perform``(``)``.``unwrap``(``)``;`\n```}```\n`\n```\n\n## Custom headers\nCustom headers can be specified as part of the request:\n```\n``use` `curl`::```easy`::````{`Easy`,` List```}```;`\n``fn` `main`````(````)``````{`\n  `let` `mut` easy `=` `Easy`::``new`(``)``;`\n  easy`.``url``(```\"`http://www.example.com`\"```)``.``unwrap``(``)``;`\n  `let` `mut` list `=` `List`::``new`(``)``;`\n  list`.``append``(```\"`Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==`\"```)``.``unwrap``(``)``;`\n  easy`.``http_headers``(`list`)``.``unwrap``(``)``;`\n  easy`.``perform``(``)``.``unwrap``(``)``;`\n```}```\n`\n```\n\n## Keep alive\nThe handle can be re-used across multiple requests. Curl will attempt to keep the connections alive.\n```\n``use` `curl`::```easy`::``Easy`;`\n``fn` `main`````(````)``````{`\n  `let` `mut` handle `=` `Easy`::``new`(``)``;`\n  handle`.``url``(```\"`http://www.example.com/foo`\"```)``.``unwrap``(``)``;`\n  handle`.``perform``(``)``.``unwrap``(``)``;`\n  handle`.``url``(```\"`http://www.example.com/bar`\"```)``.``unwrap``(``)``;`\n  handle`.``perform``(``)``.``unwrap``(``)``;`\n```}```\n`\n```\n\n## Multiple requests\nThe libcurl library provides support for sending multiple requests simultaneously through the \"multi\" interface. This is currently bound in the ``multi`` module of this crate and provides the ability to execute multiple transfers simultaneously. For more information, see that module.\n## Building\nBy default, this crate will attempt to dynamically link to the system-wide libcurl and the system-wide SSL library. Some of this behavior can be customized with various Cargo features:\n  * ``ssl``: Enable SSL/TLS support using the platform-default TLS backend. On Windows this is Schannel\u27e89\u27e9, on macOS Secure Transport\u27e810\u27e9, and OpenSSL\u27e811\u27e9 (or equivalent) on all other platforms. Enabled by default.\n  * ``rustls`` Enable SSL/TLS support via Rustls\u27e812\u27e9, a well-received alternative TLS backend written in Rust. Rustls is always statically linked. Disabled by default.\nNote that Rustls support is experimental within Curl itself and may have significant bugs, so we don't offer any sort of stability guarantee with this feature.\n  * ``http2``: Enable HTTP/2 support via libnghttp2. Disabled by default.\n  * ``static-curl``: Use a bundled libcurl version and statically link to it. Disabled by default.\n  * ``static-ssl``: Use a bundled OpenSSL version and statically link to it. Only applies on platforms that use OpenSSL. Disabled by default.\n  * ``spnego``: Enable SPNEGO support. Disabled by default.\n  * ``upkeep_7_62_0``: Enable curl_easy_upkeep() support, introduced in curl 7.62.0. Disabled by default.\n  * ``poll_7_68_0``: Enable curl_multi_poll()/curl_multi_wakeup() support, requires curl 7.68.0 or later. Disabled by default.\n  * ``ntlm``: Enable NTLM support in curl. Disabled by default.\n  * ``windows-static-ssl``: Enable Openssl support on Windows via the static build provided by vcpkg. Incompatible with ``ssl`` (use ``--no-default-features``). Disabled by default.\nNote that to install openssl on windows via vcpkg the following commands needs to be ran:\n```\n```git``` clone https://github.com/microsoft/vcpkg`\n``cd``` vcpkg`\n``./bootstrap-vcpkg.bat````` -`disableMetrics``\n``./vcpkg.exe``` integrate install`\n``./vcpkg.exe``` install openssl:x64-windows-static-md`\n`\n```\n\n\n\n## Version Support\nThe bindings have been developed using curl version 7.24.0. They should work with any newer version of curl and possibly with older versions, but this has not been tested.\n## Troubleshooting\n### Curl built against the NSS SSL library\nIf you encounter the following error message:\n```\n` `[``77``]` Problem with the `SSL` `CA` cert `(`path`?` access rights`?``)`\n`\n```\n\nThat means most likely, that curl was linked against ``libcurl`-`nss`.`so`` due to installed libcurl NSS development files, and that the required library ``libnsspem`.`so`` is missing. See also the curl man page: \"If curl is built against the NSS SSL library, the NSS PEM PKCS#11 module (``libnsspem`.`so``) needs to be available for this option to work properly.\"\nIn order to avoid this failure you can either\n  * install the missing library (e.g. Debian: ``nss-plugin-pem``), or\n  * remove the libcurl NSS development files (e.g. Debian: ``libcurl4-nss-dev``) and rebuild curl-rust.\n\n\n## License\nThe ``curl-rust`` crate is licensed under the MIT license, see ``LICENSE``\u27e813\u27e9 for more details.\n#### Dependencies\n~1\u201312MB  ~172K SLoC\n  * curl-sys\u27e814\u27e9\n  * libc\u27e815\u27e9\n  * ssl\u27e816\u27e9 openssl-probe\u27e817\u27e9 unix not mac\n  * ssl\u27e816\u27e9 openssl-sys\u27e818\u27e9 unix not mac\n  * schannel\u27e819\u27e9 msvc\n  * socket2\u27e820\u27e9\n  * windows-sys\u27e821\u27e9+Win32_Foundation\u27e822\u27e9+Win32\u2026LibraryLoader\u27e823\u27e9+Win32\u2026Cryptography\u27e824\u27e9 msvc\n\n\n  * build `build.rs`\n  * dev  anyhow\u27e825\u27e9\n  * dev  mio\u27e826\u27e9 0.6\n  * dev  mio-extras\u27e827\u27e9\n\n\n#### Other features\u27e828\u27e9\n  * force-system-lib-on-osx\u27e829\u27e9\n  * http2\u27e830\u27e9\n  * mesalink\u27e831\u27e9\n  * ntlm\u27e832\u27e9\n  * poll_7_68_0\u27e833\u27e9\n  * protocol-ftp\u27e834\u27e9\n  * rustls\u27e835\u27e9\n  * spnego\u27e836\u27e9\n  * static-curl\u27e837\u27e9\n  * static-ssl\u27e838\u27e9\n  * upkeep_7_62_0\u27e839\u27e9\n  * windows-static-ssl\u27e840\u27e9\n  * zlib-ng-compat\u27e841\u27e9\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/curl/versions: 96 releases\n\u27e82\u27e9 https://lib.rs/web-programming/http-client: Crates to make HTTP network requests. - HTTP client\n\u27e83\u27e9 https://lib.rs/crates/curl/rev: **1,149** crates (294 directly)\n\u27e84\u27e9 https://curl.haxx.se/libcurl/: libcurl\n\u27e85\u27e9 https://img.shields.io/crates/v/curl.svg: ![Latest Version\n\u27e86\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/curl/badge.svg: ![Documentation\n\u27e87\u27e9 https://img.shields.io/github/license/alexcrichton/curl-rust.svg: ![License\n\u27e88\u27e9 https://img.gs/czjpqfbdkz/full/https://github.com/alexcrichton/curl-rust/workflows/CI/badge.svg: ![Build\n\u27e89\u27e9 https://docs.microsoft.com/en-us/windows/win32/com/schannel: Schannel\n\u27e810\u27e9 https://developer.apple.com/documentation/security/secure_transport: Secure Transport\n\u27e811\u27e9 https://www.openssl.org/: OpenSSL\n\u27e812\u27e9 https://github.com/ctz/rustls: Rustls\n\u27e813\u27e9 https://github.com/alexcrichton/curl-rust/blob/739b5fdc95107184b9fcf8df4522e6d7789e66b4/LICENSE: ``LICENSE``\n\u27e814\u27e9 https://lib.rs/crates/curl-sys: 0.4.77 - curl-sys\n\u27e815\u27e9 https://lib.rs/crates/libc: 0.2.42 - libc\n\u27e816\u27e9 https://lib.rs/crates/curl/features#feature-ssl: default feature - ssl\n\u27e817\u27e9 https://lib.rs/crates/openssl-probe: 0.1.2 - openssl-probe\n\u27e818\u27e9 https://lib.rs/crates/openssl-sys: 0.9.64 - openssl-sys\n\u27e819\u27e9 https://lib.rs/crates/schannel: 0.1.13 - schannel\n\u27e820\u27e9 https://lib.rs/crates/socket2: 0.5.0 - socket2\n\u27e821\u27e9 https://lib.rs/crates/windows-sys: 0.59 - windows-sys\n\u27e822\u27e9 https://lib.rs/crates/windows-sys/features#feature-Win32_Foundation: +Win32_Foundation\n\u27e823\u27e9 https://lib.rs/crates/windows-sys/features#feature-Win32_System_LibraryLoader: +Win32\u2026LibraryLoader\n\u27e824\u27e9 https://lib.rs/crates/windows-sys/features#feature-Win32_Security_Cryptography: +Win32\u2026Cryptography\n\u27e825\u27e9 https://lib.rs/crates/anyhow: 1.0.31 - anyhow\n\u27e826\u27e9 https://lib.rs/crates/mio: obsolete - mio\n\u27e827\u27e9 https://lib.rs/crates/mio-extras: 2.0.3 - mio-extras\n\u27e828\u27e9 https://lib.rs/crates/curl/features: Other features\n\u27e829\u27e9 https://lib.rs/crates/curl/features#feature-force-system-lib-on-osx: force-system-lib-on-osx\n\u27e830\u27e9 https://lib.rs/crates/curl/features#feature-http2: http2\n\u27e831\u27e9 https://lib.rs/crates/curl/features#feature-mesalink: mesalink\n\u27e832\u27e9 https://lib.rs/crates/curl/features#feature-ntlm: ntlm\n\u27e833\u27e9 https://lib.rs/crates/curl/features#feature-poll_7_68_0: poll_7_68_0\n\u27e834\u27e9 https://lib.rs/crates/curl/features#feature-protocol-ftp: protocol-ftp\n\u27e835\u27e9 https://lib.rs/crates/curl/features#feature-rustls: rustls\n\u27e836\u27e9 https://lib.rs/crates/curl/features#feature-spnego: spnego\n\u27e837\u27e9 https://lib.rs/crates/curl/features#feature-static-curl: static-curl\n\u27e838\u27e9 https://lib.rs/crates/curl/features#feature-static-ssl: static-ssl\n\u27e839\u27e9 https://lib.rs/crates/curl/features#feature-upkeep_7_62_0: upkeep_7_62_0\n\u27e840\u27e9 https://lib.rs/crates/curl/features#feature-windows-static-ssl: windows-static-ssl\n\u27e841\u27e9 https://lib.rs/crates/curl/features#feature-zlib-ng-compat: zlib-ng-compat\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 10681,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "115403.7955633"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#shlex@1.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\shlex-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "shlex",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\shlex-1.3.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libshlex-25724775bd6ea405.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libshlex-25724775bd6ea405.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.48.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.48.5\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.48.5\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\windows_x86_64_msvc-c891fe87d5045004\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\windows_x86_64_msvc-c891fe87d5045004\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "openssl-probe",
                "openssl-sys",
                "ssl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\curl-59fc370c2a846fbb\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\curl-59fc370c2a846fbb\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.48.5",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.48.5\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\windows_x86_64_msvc-6b8f76506c86e015\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.48.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.48.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.48.5\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libwindows_x86_64_msvc-0ea20938a44bbe52.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.48.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.48.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.48.5\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libwindows_targets-190fe36ef27a1046.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.153",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.153\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.153\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\libc-972af4e42671caec\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\libc-972af4e42671caec\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pkg-config@0.3.29",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pkg-config-0.3.29\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pkg_config",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pkg-config-0.3.29\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libpkg_config-f29a574bca8222ef.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libpkg_config-f29a574bca8222ef.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#vcpkg@0.2.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\vcpkg-0.2.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "vcpkg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\vcpkg-0.2.15\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libvcpkg-96871fdfe7389d02.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libvcpkg-96871fdfe7389d02.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cc@1.2.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cc-1.2.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cc-1.2.13\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libcc-214eac735e42d8c9.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libcc-214eac735e42d8c9.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.153",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "freebsd11",
                "libc_priv_mod_use",
                "libc_union",
                "libc_const_size_of",
                "libc_align",
                "libc_int128",
                "libc_core_cvoid",
                "libc_packedN",
                "libc_cfg_target_vendor",
                "libc_non_exhaustive",
                "libc_long_array",
                "libc_ptr_addr_of",
                "libc_underscore_const_names",
                "libc_const_extern_fn"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\libc-8fbcd4250b190d84\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.153",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.153\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.153\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\liblibc-9d93c3d5a3d7c873.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libz-sys@1.1.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libz-sys-1.1.15\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libz-sys-1.1.15\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "libc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\libz-sys-bff4cd55952a298d\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\libz-sys-bff4cd55952a298d\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#curl-sys@0.4.80+curl-8.12.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\curl-sys-0.4.80+curl-8.12.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\curl-sys-0.4.80+curl-8.12.1\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "openssl-sys",
                "ssl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\curl-sys-994c342684fa9585\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\curl-sys-994c342684fa9585\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.48.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.48.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.48.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_Networking",
                "Win32_Networking_WinSock",
                "Win32_System",
                "Win32_System_IO",
                "Win32_System_Threading",
                "Win32_System_WindowsProgramming",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libwindows_sys-f3eeec1ad3025990.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.59.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_Security",
                "Win32_Security_Cryptography",
                "Win32_System",
                "Win32_System_LibraryLoader",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libwindows_sys-6a793f7135602b60.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#socket2@0.5.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\socket2-0.5.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "socket2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\socket2-0.5.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libsocket2-8a183e14e11f0843.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libz-sys@1.1.15",
              "linked_libs": [
                "static=z"
              ],
              "linked_paths": [
                "native=C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\libz-sys-78415d195d0c8518\\out\\lib",
                "native=C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\libz-sys-78415d195d0c8518\\out\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\libz-sys-78415d195d0c8518\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libz-sys@1.1.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libz-sys-1.1.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libz_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libz-sys-1.1.15\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "libc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\liblibz_sys-cde3799e0f2f52b4.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.52.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_Networking",
                "Win32_Networking_WinSock",
                "Win32_Security",
                "Win32_Security_Authentication",
                "Win32_Security_Authentication_Identity",
                "Win32_Security_Credentials",
                "Win32_Security_Cryptography",
                "Win32_System",
                "Win32_System_Memory",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libwindows_sys-1584db0c25e4875d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#schannel@0.1.23",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\schannel-0.1.23\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "schannel",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\schannel-0.1.23\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libschannel-c4131b61c4bc1195.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#curl-sys@0.4.80+curl-8.12.1",
              "linked_libs": [
                "static=curl",
                "ws2_32",
                "crypt32"
              ],
              "linked_paths": [
                "native=C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\curl-sys-a7935812eca927ec\\out\\build"
              ],
              "cfgs": [
                "libcurl_vendored",
                "link_libz"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\curl-sys-a7935812eca927ec\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\curl-72de036e1e372d1c\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#curl-sys@0.4.80+curl-8.12.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\curl-sys-0.4.80+curl-8.12.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\curl-sys-0.4.80+curl-8.12.1\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "openssl-sys",
                "ssl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libcurl_sys-1acf3a1638a4d787.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "openssl-probe",
                "openssl-sys",
                "ssl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libcurl-f2892c916e6e9118.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#shlex@1.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\shlex-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "shlex",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\shlex-1.3.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libshlex-25724775bd6ea405.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libshlex-25724775bd6ea405.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cc@1.2.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cc-1.2.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cc-1.2.13\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libcc-214eac735e42d8c9.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libcc-214eac735e42d8c9.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pkg-config@0.3.29",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pkg-config-0.3.29\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pkg_config",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pkg-config-0.3.29\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libpkg_config-f29a574bca8222ef.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libpkg_config-f29a574bca8222ef.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#vcpkg@0.2.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\vcpkg-0.2.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "vcpkg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\vcpkg-0.2.15\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libvcpkg-96871fdfe7389d02.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libvcpkg-96871fdfe7389d02.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.48.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.48.5\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.48.5\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\windows_x86_64_msvc-c891fe87d5045004\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\windows_x86_64_msvc-c891fe87d5045004\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.153",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.153\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.153\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\libc-972af4e42671caec\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\libc-972af4e42671caec\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libz-sys@1.1.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libz-sys-1.1.15\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libz-sys-1.1.15\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "libc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\libz-sys-bff4cd55952a298d\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\libz-sys-bff4cd55952a298d\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.48.5",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.48.5\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\windows_x86_64_msvc-6b8f76506c86e015\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.153",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "freebsd11",
                "libc_priv_mod_use",
                "libc_union",
                "libc_const_size_of",
                "libc_align",
                "libc_int128",
                "libc_core_cvoid",
                "libc_packedN",
                "libc_cfg_target_vendor",
                "libc_non_exhaustive",
                "libc_long_array",
                "libc_ptr_addr_of",
                "libc_underscore_const_names",
                "libc_const_extern_fn"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\libc-8fbcd4250b190d84\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#curl-sys@0.4.80+curl-8.12.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\curl-sys-0.4.80+curl-8.12.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\curl-sys-0.4.80+curl-8.12.1\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "openssl-sys",
                "ssl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\curl-sys-994c342684fa9585\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\curl-sys-994c342684fa9585\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libz-sys@1.1.15",
              "linked_libs": [
                "static=z"
              ],
              "linked_paths": [
                "native=C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\libz-sys-78415d195d0c8518\\out\\lib",
                "native=C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\libz-sys-78415d195d0c8518\\out\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\libz-sys-78415d195d0c8518\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.48.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.48.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.48.5\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libwindows_x86_64_msvc-0ea20938a44bbe52.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.153",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.153\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.153\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\liblibc-9d93c3d5a3d7c873.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#curl-sys@0.4.80+curl-8.12.1",
              "linked_libs": [
                "static=curl",
                "ws2_32",
                "crypt32"
              ],
              "linked_paths": [
                "native=C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\curl-sys-a7935812eca927ec\\out\\build"
              ],
              "cfgs": [
                "libcurl_vendored",
                "link_libz"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\curl-sys-a7935812eca927ec\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.48.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.48.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.48.5\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libwindows_targets-190fe36ef27a1046.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libz-sys@1.1.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libz-sys-1.1.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libz_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libz-sys-1.1.15\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "libc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\liblibz_sys-cde3799e0f2f52b4.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.52.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_Networking",
                "Win32_Networking_WinSock",
                "Win32_Security",
                "Win32_Security_Authentication",
                "Win32_Security_Authentication_Identity",
                "Win32_Security_Credentials",
                "Win32_Security_Cryptography",
                "Win32_System",
                "Win32_System_Memory",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libwindows_sys-1584db0c25e4875d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.48.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.48.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.48.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_Networking",
                "Win32_Networking_WinSock",
                "Win32_System",
                "Win32_System_IO",
                "Win32_System_Threading",
                "Win32_System_WindowsProgramming",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libwindows_sys-f3eeec1ad3025990.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.59.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_Security",
                "Win32_Security_Cryptography",
                "Win32_System",
                "Win32_System_LibraryLoader",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libwindows_sys-6a793f7135602b60.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#schannel@0.1.23",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\schannel-0.1.23\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "schannel",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\schannel-0.1.23\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libschannel-c4131b61c4bc1195.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#socket2@0.5.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\socket2-0.5.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "socket2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\socket2-0.5.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libsocket2-8a183e14e11f0843.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#curl-sys@0.4.80+curl-8.12.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\curl-sys-0.4.80+curl-8.12.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\curl-sys-0.4.80+curl-8.12.1\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "openssl-sys",
                "ssl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libcurl_sys-1acf3a1638a4d787.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: digits of hex, binary or octal literal not in groups of equal size\n  --> build.rs:15:26\n   |\n15 |             if version < 0x1_01_00_00_0 {\n   |                          ^^^^^^^^^^^^^^ help: consider: `0x1010_0000`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n   = note: `#[warn(clippy::unusual_byte_groupings)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::unusual_byte_groupings)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 544,
                        "byte_start": 530,
                        "column_end": 40,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "build.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 15,
                        "line_start": 15,
                        "suggested_replacement": "0x1010_0000",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 26,
                            "text": "            if version < 0x1_01_00_00_0 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unusual_byte_groupings",
                  "explanation": null
                },
                "level": "warning",
                "message": "digits of hex, binary or octal literal not in groups of equal size",
                "spans": [
                  {
                    "byte_end": 544,
                    "byte_start": 530,
                    "column_end": 40,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "build.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 15,
                    "line_start": 15,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 26,
                        "text": "            if version < 0x1_01_00_00_0 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "openssl-probe",
                "openssl-sys",
                "ssl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\curl-a64eb968478966fc\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\curl-a64eb968478966fc\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\build\\curl-5269a12cb65c64d5\\out"
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\easy\\form.rs:161:17\n    |\n161 |     pub fn file<P: ?Sized>(&mut self, file: &'data P) -> &mut Self\n    |                 ^\n162 |     where\n163 |         P: AsRef<Path>,\n    |         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n    = note: `#[warn(clippy::multiple_bound_locations)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::multiple_bound_locations)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 4904,
                    "byte_start": 4903,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\easy\\form.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 161,
                    "line_start": 161,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 18,
                        "highlight_start": 17,
                        "text": "    pub fn file<P: ?Sized>(&mut self, file: &'data P) -> &mut Self"
                      }
                    ]
                  },
                  {
                    "byte_end": 4973,
                    "byte_start": 4972,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\easy\\form.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 163,
                    "line_start": 163,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        P: AsRef<Path>,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\easy\\form.rs:213:21\n    |\n213 |     pub fn filename<P: ?Sized>(&mut self, name: &'data P) -> &mut Self\n    |                     ^\n214 |     where\n215 |         P: AsRef<Path>,\n    |         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 6607,
                    "byte_start": 6606,
                    "column_end": 22,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\easy\\form.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 213,
                    "line_start": 213,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 22,
                        "highlight_start": 21,
                        "text": "    pub fn filename<P: ?Sized>(&mut self, name: &'data P) -> &mut Self"
                      }
                    ]
                  },
                  {
                    "byte_end": 6676,
                    "byte_start": 6675,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\easy\\form.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 215,
                    "line_start": 215,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        P: AsRef<Path>,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\easy\\form.rs:246:19\n    |\n246 |     pub fn buffer<P: ?Sized>(&mut self, name: &'data P, data: Vec<u8>) -> &mut Self\n    |                   ^\n247 |     where\n248 |         P: AsRef<Path>,\n    |         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 7651,
                    "byte_start": 7650,
                    "column_end": 20,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "src\\easy\\form.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 246,
                    "line_start": 246,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 19,
                        "text": "    pub fn buffer<P: ?Sized>(&mut self, name: &'data P, data: Vec<u8>) -> &mut Self"
                      }
                    ]
                  },
                  {
                    "byte_end": 7735,
                    "byte_start": 7734,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\easy\\form.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 248,
                    "line_start": 248,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        P: AsRef<Path>,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this can be `std::io::Error::other(_)`\n   --> src\\error.rs:597:9\n    |\n597 |         io::Error::new(io::ErrorKind::Other, e)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#io_other_error\n    = note: `#[warn(clippy::io_other_error)]` on by default\nhelp: use `std::io::Error::other`\n    |\n597 -         io::Error::new(io::ErrorKind::Other, e)\n597 +         io::Error::other(e)\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#io_other_error",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::io_other_error)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `std::io::Error::other`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 19683,
                        "byte_start": 19680,
                        "column_end": 23,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "src\\error.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 597,
                        "line_start": 597,
                        "suggested_replacement": "other",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 20,
                            "text": "        io::Error::new(io::ErrorKind::Other, e)"
                          }
                        ]
                      },
                      {
                        "byte_end": 19706,
                        "byte_start": 19684,
                        "column_end": 46,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\error.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 597,
                        "line_start": 597,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 24,
                            "text": "        io::Error::new(io::ErrorKind::Other, e)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::io_other_error",
                  "explanation": null
                },
                "level": "warning",
                "message": "this can be `std::io::Error::other(_)`",
                "spans": [
                  {
                    "byte_end": 19708,
                    "byte_start": 19669,
                    "column_end": 48,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\error.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 597,
                    "line_start": 597,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 9,
                        "text": "        io::Error::new(io::ErrorKind::Other, e)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this can be `std::io::Error::other(_)`\n   --> src\\error.rs:603:9\n    |\n603 |         io::Error::new(io::ErrorKind::Other, e)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#io_other_error\nhelp: use `std::io::Error::other`\n    |\n603 -         io::Error::new(io::ErrorKind::Other, e)\n603 +         io::Error::other(e)\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#io_other_error",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `std::io::Error::other`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 19820,
                        "byte_start": 19817,
                        "column_end": 23,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "src\\error.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 603,
                        "line_start": 603,
                        "suggested_replacement": "other",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 20,
                            "text": "        io::Error::new(io::ErrorKind::Other, e)"
                          }
                        ]
                      },
                      {
                        "byte_end": 19843,
                        "byte_start": 19821,
                        "column_end": 46,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\error.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 603,
                        "line_start": 603,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 24,
                            "text": "        io::Error::new(io::ErrorKind::Other, e)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::io_other_error",
                  "explanation": null
                },
                "level": "warning",
                "message": "this can be `std::io::Error::other(_)`",
                "spans": [
                  {
                    "byte_end": 19845,
                    "byte_start": 19806,
                    "column_end": 48,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\error.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 603,
                    "line_start": 603,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 9,
                        "text": "        io::Error::new(io::ErrorKind::Other, e)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this can be `std::io::Error::other(_)`\n   --> src\\error.rs:609:9\n    |\n609 |         io::Error::new(io::ErrorKind::Other, e)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#io_other_error\nhelp: use `std::io::Error::other`\n    |\n609 -         io::Error::new(io::ErrorKind::Other, e)\n609 +         io::Error::other(e)\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#io_other_error",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `std::io::Error::other`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 19957,
                        "byte_start": 19954,
                        "column_end": 23,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "src\\error.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 609,
                        "line_start": 609,
                        "suggested_replacement": "other",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 20,
                            "text": "        io::Error::new(io::ErrorKind::Other, e)"
                          }
                        ]
                      },
                      {
                        "byte_end": 19980,
                        "byte_start": 19958,
                        "column_end": 46,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\error.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 609,
                        "line_start": 609,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 24,
                            "text": "        io::Error::new(io::ErrorKind::Other, e)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::io_other_error",
                  "explanation": null
                },
                "level": "warning",
                "message": "this can be `std::io::Error::other(_)`",
                "spans": [
                  {
                    "byte_end": 19982,
                    "byte_start": 19943,
                    "column_end": 48,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\error.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 609,
                    "line_start": 609,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 9,
                        "text": "        io::Error::new(io::ErrorKind::Other, e)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this can be `std::io::Error::other(_)`\n   --> src\\error.rs:615:9\n    |\n615 |         io::Error::new(io::ErrorKind::Other, e)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#io_other_error\nhelp: use `std::io::Error::other`\n    |\n615 -         io::Error::new(io::ErrorKind::Other, e)\n615 +         io::Error::other(e)\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#io_other_error",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `std::io::Error::other`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20092,
                        "byte_start": 20089,
                        "column_end": 23,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "src\\error.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 615,
                        "line_start": 615,
                        "suggested_replacement": "other",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 20,
                            "text": "        io::Error::new(io::ErrorKind::Other, e)"
                          }
                        ]
                      },
                      {
                        "byte_end": 20115,
                        "byte_start": 20093,
                        "column_end": 46,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\error.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 615,
                        "line_start": 615,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 24,
                            "text": "        io::Error::new(io::ErrorKind::Other, e)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::io_other_error",
                  "explanation": null
                },
                "level": "warning",
                "message": "this can be `std::io::Error::other(_)`",
                "spans": [
                  {
                    "byte_end": 20117,
                    "byte_start": 20078,
                    "column_end": 48,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\error.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 615,
                    "line_start": 615,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 9,
                        "text": "        io::Error::new(io::ErrorKind::Other, e)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n  --> src\\version.rs:50:18\n   |\n50 |         unsafe { (*self.inner).version_num as u32 }\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*self.inner).version_num`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n   = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::unnecessary_cast)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1505,
                        "byte_start": 1473,
                        "column_end": 50,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\version.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 50,
                        "line_start": 50,
                        "suggested_replacement": "(*self.inner).version_num",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 50,
                            "highlight_start": 18,
                            "text": "        unsafe { (*self.inner).version_num as u32 }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`u32` -> `u32`)",
                "spans": [
                  {
                    "byte_end": 1505,
                    "byte_start": 1473,
                    "column_end": 50,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "src\\version.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 50,
                    "line_start": 50,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 50,
                        "highlight_start": 18,
                        "text": "        unsafe { (*self.inner).version_num as u32 }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\version.rs:443:43\n    |\n443 |             f.field(\"iconv_version_num\", &format!(\"{:x}\", s));\n    |                                           ^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n    = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n    |\n443 -             f.field(\"iconv_version_num\", &format!(\"{:x}\", s));\n443 +             f.field(\"iconv_version_num\", &format!(\"{s:x}\"));\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::uninlined_format_args)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 14541,
                        "byte_start": 14541,
                        "column_end": 53,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "src\\version.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 443,
                        "line_start": 443,
                        "suggested_replacement": "s",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 53,
                            "text": "            f.field(\"iconv_version_num\", &format!(\"{:x}\", s));"
                          }
                        ]
                      },
                      {
                        "byte_end": 14548,
                        "byte_start": 14545,
                        "column_end": 60,
                        "column_start": 57,
                        "expansion": null,
                        "file_name": "src\\version.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 443,
                        "line_start": 443,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 60,
                            "highlight_start": 57,
                            "text": "            f.field(\"iconv_version_num\", &format!(\"{:x}\", s));"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 14549,
                    "byte_start": 14531,
                    "column_end": 61,
                    "column_start": 43,
                    "expansion": null,
                    "file_name": "src\\version.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 443,
                    "line_start": 443,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 61,
                        "highlight_start": 43,
                        "text": "            f.field(\"iconv_version_num\", &format!(\"{:x}\", s));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\version.rs:449:44\n    |\n449 |             f.field(\"brotli_version_num\", &format!(\"{:x}\", s));\n    |                                            ^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n449 -             f.field(\"brotli_version_num\", &format!(\"{:x}\", s));\n449 +             f.field(\"brotli_version_num\", &format!(\"{s:x}\"));\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 14770,
                        "byte_start": 14770,
                        "column_end": 54,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\version.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 449,
                        "line_start": 449,
                        "suggested_replacement": "s",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 54,
                            "text": "            f.field(\"brotli_version_num\", &format!(\"{:x}\", s));"
                          }
                        ]
                      },
                      {
                        "byte_end": 14777,
                        "byte_start": 14774,
                        "column_end": 61,
                        "column_start": 58,
                        "expansion": null,
                        "file_name": "src\\version.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 449,
                        "line_start": 449,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 61,
                            "highlight_start": 58,
                            "text": "            f.field(\"brotli_version_num\", &format!(\"{:x}\", s));"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 14778,
                    "byte_start": 14760,
                    "column_end": 62,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "src\\version.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 449,
                    "line_start": 449,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 62,
                        "highlight_start": 44,
                        "text": "            f.field(\"brotli_version_num\", &format!(\"{:x}\", s));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\version.rs:455:45\n    |\n455 |             f.field(\"nghttp2_version_num\", &format!(\"{:x}\", s));\n    |                                             ^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n455 -             f.field(\"nghttp2_version_num\", &format!(\"{:x}\", s));\n455 +             f.field(\"nghttp2_version_num\", &format!(\"{s:x}\"));\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 15001,
                        "byte_start": 15001,
                        "column_end": 55,
                        "column_start": 55,
                        "expansion": null,
                        "file_name": "src\\version.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 455,
                        "line_start": 455,
                        "suggested_replacement": "s",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 55,
                            "highlight_start": 55,
                            "text": "            f.field(\"nghttp2_version_num\", &format!(\"{:x}\", s));"
                          }
                        ]
                      },
                      {
                        "byte_end": 15008,
                        "byte_start": 15005,
                        "column_end": 62,
                        "column_start": 59,
                        "expansion": null,
                        "file_name": "src\\version.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 455,
                        "line_start": 455,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 62,
                            "highlight_start": 59,
                            "text": "            f.field(\"nghttp2_version_num\", &format!(\"{:x}\", s));"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 15009,
                    "byte_start": 14991,
                    "column_end": 63,
                    "column_start": 45,
                    "expansion": null,
                    "file_name": "src\\version.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 455,
                    "line_start": 455,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 63,
                        "highlight_start": 45,
                        "text": "            f.field(\"nghttp2_version_num\", &format!(\"{:x}\", s));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\version.rs:464:38\n    |\n464 |             f.field(\"zstd_ver_num\", &format!(\"{:x}\", s));\n    |                                      ^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n464 -             f.field(\"zstd_ver_num\", &format!(\"{:x}\", s));\n464 +             f.field(\"zstd_ver_num\", &format!(\"{s:x}\"));\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 15318,
                        "byte_start": 15318,
                        "column_end": 48,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\version.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 464,
                        "line_start": 464,
                        "suggested_replacement": "s",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 48,
                            "text": "            f.field(\"zstd_ver_num\", &format!(\"{:x}\", s));"
                          }
                        ]
                      },
                      {
                        "byte_end": 15325,
                        "byte_start": 15322,
                        "column_end": 55,
                        "column_start": 52,
                        "expansion": null,
                        "file_name": "src\\version.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 464,
                        "line_start": 464,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 55,
                            "highlight_start": 52,
                            "text": "            f.field(\"zstd_ver_num\", &format!(\"{:x}\", s));"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 15326,
                    "byte_start": 15308,
                    "column_end": 56,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\version.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 464,
                    "line_start": 464,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 38,
                        "text": "            f.field(\"zstd_ver_num\", &format!(\"{:x}\", s));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: you should consider adding a `Default` implementation for `Form`\n  --> src\\easy\\form.rs:35:5\n   |\n35 | /     pub fn new() -> Form {\n36 | |         Form {\n37 | |             head: ptr::null_mut(),\n38 | |             tail: ptr::null_mut(),\n...  |\n43 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n33 + impl Default for Form {\n34 +     fn default() -> Self {\n35 +         Self::new()\n36 +     }\n37 + }\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::new_without_default)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try adding this",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 754,
                        "byte_start": 754,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\easy\\form.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "impl Default for Form {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "impl Form {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::new_without_default",
                  "explanation": null
                },
                "level": "warning",
                "message": "you should consider adding a `Default` implementation for `Form`",
                "spans": [
                  {
                    "byte_end": 1061,
                    "byte_start": 839,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\easy\\form.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 43,
                    "line_start": 35,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 5,
                        "text": "    pub fn new() -> Form {"
                      },
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "        Form {"
                      },
                      {
                        "highlight_end": 35,
                        "highlight_start": 1,
                        "text": "            head: ptr::null_mut(),"
                      },
                      {
                        "highlight_end": 35,
                        "highlight_start": 1,
                        "text": "            tail: ptr::null_mut(),"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "            headers: Vec::new(),"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "            buffers: Vec::new(),"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "            strings: Vec::new(),"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: very complex type used. Consider factoring parts into `type` definitions\n   --> src\\easy\\handle.rs:107:12\n    |\n107 |     write: Option<Box<dyn FnMut(&[u8]) -> Result<usize, WriteError> + 'a>>,\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity\n    = note: `#[warn(clippy::type_complexity)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::type_complexity)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::type_complexity",
                  "explanation": null
                },
                "level": "warning",
                "message": "very complex type used. Consider factoring parts into `type` definitions",
                "spans": [
                  {
                    "byte_end": 3283,
                    "byte_start": 3220,
                    "column_end": 75,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\easy\\handle.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 107,
                    "line_start": 107,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 75,
                        "highlight_start": 12,
                        "text": "    write: Option<Box<dyn FnMut(&[u8]) -> Result<usize, WriteError> + 'a>>,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: very complex type used. Consider factoring parts into `type` definitions\n   --> src\\easy\\handle.rs:108:11\n    |\n108 |     read: Option<Box<dyn FnMut(&mut [u8]) -> Result<usize, ReadError> + 'a>>,\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::type_complexity",
                  "explanation": null
                },
                "level": "warning",
                "message": "very complex type used. Consider factoring parts into `type` definitions",
                "spans": [
                  {
                    "byte_end": 3361,
                    "byte_start": 3295,
                    "column_end": 77,
                    "column_start": 11,
                    "expansion": null,
                    "file_name": "src\\easy\\handle.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 108,
                    "line_start": 108,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 77,
                        "highlight_start": 11,
                        "text": "    read: Option<Box<dyn FnMut(&mut [u8]) -> Result<usize, ReadError> + 'a>>,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: very complex type used. Consider factoring parts into `type` definitions\n   --> src\\easy\\handle.rs:110:12\n    |\n110 |     debug: Option<Box<dyn FnMut(InfoType, &[u8]) + 'a>>,\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::type_complexity",
                  "explanation": null
                },
                "level": "warning",
                "message": "very complex type used. Consider factoring parts into `type` definitions",
                "spans": [
                  {
                    "byte_end": 3481,
                    "byte_start": 3437,
                    "column_end": 56,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\easy\\handle.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 110,
                    "line_start": 110,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 12,
                        "text": "    debug: Option<Box<dyn FnMut(InfoType, &[u8]) + 'a>>,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: very complex type used. Consider factoring parts into `type` definitions\n   --> src\\easy\\handle.rs:111:13\n    |\n111 |     header: Option<Box<dyn FnMut(&[u8]) -> bool + 'a>>,\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::type_complexity",
                  "explanation": null
                },
                "level": "warning",
                "message": "very complex type used. Consider factoring parts into `type` definitions",
                "spans": [
                  {
                    "byte_end": 3537,
                    "byte_start": 3495,
                    "column_end": 55,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\easy\\handle.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 111,
                    "line_start": 111,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 55,
                        "highlight_start": 13,
                        "text": "    header: Option<Box<dyn FnMut(&[u8]) -> bool + 'a>>,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: very complex type used. Consider factoring parts into `type` definitions\n   --> src\\easy\\handle.rs:112:15\n    |\n112 |     progress: Option<Box<dyn FnMut(f64, f64, f64, f64) -> bool + 'a>>,\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::type_complexity",
                  "explanation": null
                },
                "level": "warning",
                "message": "very complex type used. Consider factoring parts into `type` definitions",
                "spans": [
                  {
                    "byte_end": 3608,
                    "byte_start": 3553,
                    "column_end": 70,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "src\\easy\\handle.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 112,
                    "line_start": 112,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 70,
                        "highlight_start": 15,
                        "text": "    progress: Option<Box<dyn FnMut(f64, f64, f64, f64) -> bool + 'a>>,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: very complex type used. Consider factoring parts into `type` definitions\n   --> src\\easy\\handle.rs:113:14\n    |\n113 |     ssl_ctx: Option<Box<dyn FnMut(*mut c_void) -> Result<(), Error> + 'a>>,\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::type_complexity",
                  "explanation": null
                },
                "level": "warning",
                "message": "very complex type used. Consider factoring parts into `type` definitions",
                "spans": [
                  {
                    "byte_end": 3684,
                    "byte_start": 3623,
                    "column_end": 75,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "src\\easy\\handle.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 113,
                    "line_start": 113,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 75,
                        "highlight_start": 14,
                        "text": "    ssl_ctx: Option<Box<dyn FnMut(*mut c_void) -> Result<(), Error> + 'a>>,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: you should consider adding a `Default` implementation for `Easy`\n   --> src\\easy\\handle.rs:124:5\n    |\n124 | /     pub fn new() -> Easy {\n125 | |         Easy {\n126 | |             inner: Easy2::new(EasyData {\n127 | |                 running: Cell::new(false),\n...   |\n132 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n116 + impl Default for Easy {\n117 +     fn default() -> Self {\n118 +         Self::new()\n119 +     }\n120 + }\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try adding this",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3689,
                        "byte_start": 3689,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\easy\\handle.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 116,
                        "line_start": 116,
                        "suggested_replacement": "impl Default for Easy {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "impl Easy {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::new_without_default",
                  "explanation": null
                },
                "level": "warning",
                "message": "you should consider adding a `Default` implementation for `Easy`",
                "spans": [
                  {
                    "byte_end": 4329,
                    "byte_start": 4077,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\easy\\handle.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 132,
                    "line_start": 124,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 5,
                        "text": "    pub fn new() -> Easy {"
                      },
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "        Easy {"
                      },
                      {
                        "highlight_end": 41,
                        "highlight_start": 1,
                        "text": "            inner: Easy2::new(EasyData {"
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "                running: Cell::new(false),"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                owned: Callbacks::default(),"
                      },
                      {
                        "highlight_end": 54,
                        "highlight_start": 1,
                        "text": "                borrowed: Cell::new(ptr::null_mut()),"
                      },
                      {
                        "highlight_end": 16,
                        "highlight_start": 1,
                        "text": "            }),"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\easy\\handler.rs:312:10\n    |\n312 |     drop(write!(out, \"{} \", prefix));\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n312 -     drop(write!(out, \"{} \", prefix));\n312 +     drop(write!(out, \"{prefix} \"));\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 14070,
                        "byte_start": 14070,
                        "column_end": 24,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\easy\\handler.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 312,
                        "line_start": 312,
                        "suggested_replacement": "prefix",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 24,
                            "text": "    drop(write!(out, \"{} \", prefix));"
                          }
                        ]
                      },
                      {
                        "byte_end": 14081,
                        "byte_start": 14073,
                        "column_end": 35,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\easy\\handler.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 312,
                        "line_start": 312,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 27,
                            "text": "    drop(write!(out, \"{} \", prefix));"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 14082,
                    "byte_start": 14056,
                    "column_end": 36,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\easy\\handler.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 312,
                    "line_start": 312,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 10,
                        "text": "    drop(write!(out, \"{} \", prefix));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`f64` -> `f64`)\n    --> src\\easy\\handler.rs:2854:22\n     |\n2854 |             .map(|r| r as f64)\n     |                      ^^^^^^^^ help: try: `r`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 121818,
                        "byte_start": 121810,
                        "column_end": 30,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\easy\\handler.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2854,
                        "line_start": 2854,
                        "suggested_replacement": "r",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 22,
                            "text": "            .map(|r| r as f64)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`f64` -> `f64`)",
                "spans": [
                  {
                    "byte_end": 121818,
                    "byte_start": 121810,
                    "column_end": 30,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\easy\\handler.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 2854,
                    "line_start": 2854,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 22,
                        "text": "            .map(|r| r as f64)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`f64` -> `f64`)\n    --> src\\easy\\handler.rs:2865:22\n     |\n2865 |             .map(|r| r as f64)\n     |                      ^^^^^^^^ help: try: `r`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 122202,
                        "byte_start": 122194,
                        "column_end": 30,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\easy\\handler.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2865,
                        "line_start": 2865,
                        "suggested_replacement": "r",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 22,
                            "text": "            .map(|r| r as f64)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`f64` -> `f64`)",
                "spans": [
                  {
                    "byte_end": 122202,
                    "byte_start": 122194,
                    "column_end": 30,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\easy\\handler.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 2865,
                    "line_start": 2865,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 22,
                        "text": "            .map(|r| r as f64)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`f64` -> `f64`)\n    --> src\\easy\\handler.rs:2877:22\n     |\n2877 |             .map(|r| r as f64)\n     |                      ^^^^^^^^ help: try: `r`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 122680,
                        "byte_start": 122672,
                        "column_end": 30,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\easy\\handler.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2877,
                        "line_start": 2877,
                        "suggested_replacement": "r",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 22,
                            "text": "            .map(|r| r as f64)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`f64` -> `f64`)",
                "spans": [
                  {
                    "byte_end": 122680,
                    "byte_start": 122672,
                    "column_end": 30,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\easy\\handler.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 2877,
                    "line_start": 2877,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 22,
                        "text": "            .map(|r| r as f64)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`i32` -> `i32`)\n    --> src\\easy\\handler.rs:3062:22\n     |\n3062 |             .map(|c| c as i32)\n     |                      ^^^^^^^^ help: try: `c`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 130355,
                        "byte_start": 130347,
                        "column_end": 30,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\easy\\handler.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3062,
                        "line_start": 3062,
                        "suggested_replacement": "c",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 22,
                            "text": "            .map(|c| c as i32)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`i32` -> `i32`)",
                "spans": [
                  {
                    "byte_end": 130355,
                    "byte_start": 130347,
                    "column_end": 30,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\easy\\handler.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3062,
                    "line_start": 3062,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 22,
                        "text": "            .map(|c| c as i32)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: you should consider adding a `Default` implementation for `Auth`\n    --> src\\easy\\handler.rs:3701:5\n     |\n3701 | /     pub fn new() -> Auth {\n3702 | |         Auth { bits: 0 }\n3703 | |     }\n     | |_____^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n     |\n3696 + impl Default for Auth {\n3697 +     fn default() -> Self {\n3698 +         Self::new()\n3699 +     }\n3700 + }\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try adding this",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 152228,
                        "byte_start": 152228,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\easy\\handler.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3696,
                        "line_start": 3696,
                        "suggested_replacement": "impl Default for Auth {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "impl Auth {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::new_without_default",
                  "explanation": null
                },
                "level": "warning",
                "message": "you should consider adding a `Default` implementation for `Auth`",
                "spans": [
                  {
                    "byte_end": 152511,
                    "byte_start": 152458,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\easy\\handler.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3703,
                    "line_start": 3701,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 5,
                        "text": "    pub fn new() -> Auth {"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "        Auth { bits: 0 }"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: you should consider adding a `Default` implementation for `SslOpt`\n    --> src\\easy\\handler.rs:3829:5\n     |\n3829 | /     pub fn new() -> SslOpt {\n3830 | |         SslOpt { bits: 0 }\n3831 | |     }\n     | |_____^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n     |\n3827 + impl Default for SslOpt {\n3828 +     fn default() -> Self {\n3829 +         Self::new()\n3830 +     }\n3831 + }\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try adding this",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 157591,
                        "byte_start": 157591,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\easy\\handler.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3827,
                        "line_start": 3827,
                        "suggested_replacement": "impl Default for SslOpt {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "impl SslOpt {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::new_without_default",
                  "explanation": null
                },
                "level": "warning",
                "message": "you should consider adding a `Default` implementation for `SslOpt`",
                "spans": [
                  {
                    "byte_end": 157708,
                    "byte_start": 157651,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\easy\\handler.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3831,
                    "line_start": 3829,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 5,
                        "text": "    pub fn new() -> SslOpt {"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "        SslOpt { bits: 0 }"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: you should consider adding a `Default` implementation for `PostRedirections`\n    --> src\\easy\\handler.rs:3926:5\n     |\n3926 | /     pub fn new() -> PostRedirections {\n3927 | |         PostRedirections { bits: 0 }\n3928 | |     }\n     | |_____^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n     |\n3924 + impl Default for PostRedirections {\n3925 +     fn default() -> Self {\n3926 +         Self::new()\n3927 +     }\n3928 + }\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try adding this",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 161623,
                        "byte_start": 161623,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\easy\\handler.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3924,
                        "line_start": 3924,
                        "suggested_replacement": "impl Default for PostRedirections {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "impl PostRedirections {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::new_without_default",
                  "explanation": null
                },
                "level": "warning",
                "message": "you should consider adding a `Default` implementation for `PostRedirections`",
                "spans": [
                  {
                    "byte_end": 161795,
                    "byte_start": 161718,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\easy\\handler.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3928,
                    "line_start": 3926,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 5,
                        "text": "    pub fn new() -> PostRedirections {"
                      },
                      {
                        "highlight_end": 37,
                        "highlight_start": 1,
                        "text": "        PostRedirections { bits: 0 }"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: you should consider adding a `Default` implementation for `List`\n  --> src\\easy\\list.rs:31:5\n   |\n31 | /     pub fn new() -> List {\n32 | |         List {\n33 | |             raw: ptr::null_mut(),\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n29 + impl Default for List {\n30 +     fn default() -> Self {\n31 +         Self::new()\n32 +     }\n33 + }\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try adding this",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 478,
                        "byte_start": 478,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\easy\\list.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 29,
                        "line_start": 29,
                        "suggested_replacement": "impl Default for List {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "impl List {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::new_without_default",
                  "explanation": null
                },
                "level": "warning",
                "message": "you should consider adding a `Default` implementation for `List`",
                "spans": [
                  {
                    "byte_end": 626,
                    "byte_start": 539,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\easy\\list.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 35,
                    "line_start": 31,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 5,
                        "text": "    pub fn new() -> List {"
                      },
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "        List {"
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "            raw: ptr::null_mut(),"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute used without annotations\n  --> src\\easy\\windows.rs:61:28\n   |\n61 |             d2i_X509: mem::transmute(d2i_X509),\n   |                            ^^^^^^^^^ help: consider adding missing annotations: `transmute::<*const libc::c_void, unsafe extern \"C\" fn(*mut *mut easy::windows::win::X509, *mut *const u8, i32) -> *mut easy::windows::win::X509>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n   = note: `#[warn(clippy::missing_transmute_annotations)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::missing_transmute_annotations)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider adding missing annotations",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2047,
                        "byte_start": 2038,
                        "column_end": 37,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "src\\easy\\windows.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 61,
                        "line_start": 61,
                        "suggested_replacement": "transmute::<*const libc::c_void, unsafe extern \"C\" fn(*mut *mut easy::windows::win::X509, *mut *const u8, i32) -> *mut easy::windows::win::X509>",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 37,
                            "highlight_start": 28,
                            "text": "            d2i_X509: mem::transmute(d2i_X509),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::missing_transmute_annotations",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute used without annotations",
                "spans": [
                  {
                    "byte_end": 2047,
                    "byte_start": 2038,
                    "column_end": 37,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\easy\\windows.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 61,
                    "line_start": 61,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 28,
                        "text": "            d2i_X509: mem::transmute(d2i_X509),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute used without annotations\n  --> src\\easy\\windows.rs:62:29\n   |\n62 |             X509_free: mem::transmute(X509_free),\n   |                             ^^^^^^^^^ help: consider adding missing annotations: `transmute::<*const libc::c_void, unsafe extern \"C\" fn(*mut easy::windows::win::X509)>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider adding missing annotations",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2096,
                        "byte_start": 2087,
                        "column_end": 38,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\easy\\windows.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 62,
                        "line_start": 62,
                        "suggested_replacement": "transmute::<*const libc::c_void, unsafe extern \"C\" fn(*mut easy::windows::win::X509)>",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 38,
                            "highlight_start": 29,
                            "text": "            X509_free: mem::transmute(X509_free),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::missing_transmute_annotations",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute used without annotations",
                "spans": [
                  {
                    "byte_end": 2096,
                    "byte_start": 2087,
                    "column_end": 38,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\easy\\windows.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 62,
                    "line_start": 62,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 29,
                        "text": "            X509_free: mem::transmute(X509_free),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute used without annotations\n  --> src\\easy\\windows.rs:63:39\n   |\n63 |             X509_STORE_add_cert: mem::transmute(X509_STORE_add_cert),\n   |                                       ^^^^^^^^^ help: consider adding missing annotations: `transmute::<*const libc::c_void, unsafe extern \"C\" fn(*mut easy::windows::win::X509_STORE, *mut easy::windows::win::X509) -> i32>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider adding missing annotations",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2156,
                        "byte_start": 2147,
                        "column_end": 48,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\easy\\windows.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 63,
                        "line_start": 63,
                        "suggested_replacement": "transmute::<*const libc::c_void, unsafe extern \"C\" fn(*mut easy::windows::win::X509_STORE, *mut easy::windows::win::X509) -> i32>",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 39,
                            "text": "            X509_STORE_add_cert: mem::transmute(X509_STORE_add_cert),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::missing_transmute_annotations",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute used without annotations",
                "spans": [
                  {
                    "byte_end": 2156,
                    "byte_start": 2147,
                    "column_end": 48,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "src\\easy\\windows.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 63,
                    "line_start": 63,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 39,
                        "text": "            X509_STORE_add_cert: mem::transmute(X509_STORE_add_cert),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute used without annotations\n  --> src\\easy\\windows.rs:64:42\n   |\n64 |             SSL_CTX_get_cert_store: mem::transmute(SSL_CTX_get_cert_store),\n   |                                          ^^^^^^^^^ help: consider adding missing annotations: `transmute::<*const libc::c_void, unsafe extern \"C\" fn(*const easy::windows::win::SSL_CTX) -> *mut easy::windows::win::X509_STORE>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider adding missing annotations",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2229,
                        "byte_start": 2220,
                        "column_end": 51,
                        "column_start": 42,
                        "expansion": null,
                        "file_name": "src\\easy\\windows.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 64,
                        "line_start": 64,
                        "suggested_replacement": "transmute::<*const libc::c_void, unsafe extern \"C\" fn(*const easy::windows::win::SSL_CTX) -> *mut easy::windows::win::X509_STORE>",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 42,
                            "text": "            SSL_CTX_get_cert_store: mem::transmute(SSL_CTX_get_cert_store),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::missing_transmute_annotations",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute used without annotations",
                "spans": [
                  {
                    "byte_end": 2229,
                    "byte_start": 2220,
                    "column_end": 51,
                    "column_start": 42,
                    "expansion": null,
                    "file_name": "src\\easy\\windows.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 64,
                    "line_start": 64,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 42,
                        "text": "            SSL_CTX_get_cert_store: mem::transmute(SSL_CTX_get_cert_store),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: you should consider adding a `Default` implementation for `Multi`\n   --> src\\multi.rs:128:5\n    |\n128 | /     pub fn new() -> Multi {\n129 | |         unsafe {\n130 | |             crate::init();\n131 | |             let ptr = curl_sys::curl_multi_init();\n...   |\n141 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n125 + impl Default for Multi {\n126 +     fn default() -> Self {\n127 +         Self::new()\n128 +     }\n129 + }\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try adding this",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3965,
                        "byte_start": 3965,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\multi.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 125,
                        "line_start": 125,
                        "suggested_replacement": "impl Default for Multi {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "impl Multi {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::new_without_default",
                  "explanation": null
                },
                "level": "warning",
                "message": "you should consider adding a `Default` implementation for `Multi`",
                "spans": [
                  {
                    "byte_end": 4506,
                    "byte_start": 4082,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\multi.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 141,
                    "line_start": 128,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 5,
                        "text": "    pub fn new() -> Multi {"
                      },
                      {
                        "highlight_end": 17,
                        "highlight_start": 1,
                        "text": "        unsafe {"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "            crate::init();"
                      },
                      {
                        "highlight_end": 51,
                        "highlight_start": 1,
                        "text": "            let ptr = curl_sys::curl_multi_init();"
                      },
                      {
                        "highlight_end": 37,
                        "highlight_start": 1,
                        "text": "            assert!(!ptr.is_null());"
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "            Multi {"
                      },
                      {
                        "highlight_end": 57,
                        "highlight_start": 1,
                        "text": "                raw: Arc::new(RawMulti { handle: ptr }),"
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "                data: Box::new(MultiData {"
                      },
                      {
                        "highlight_end": 52,
                        "highlight_start": 1,
                        "text": "                    socket: Box::new(|_, _, _| ()),"
                      },
                      {
                        "highlight_end": 47,
                        "highlight_start": 1,
                        "text": "                    timer: Box::new(|_| true),"
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "                }),"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            }"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of an `Arc` that is not `Send` and `Sync`\n   --> src\\multi.rs:134:22\n    |\n134 |                 raw: Arc::new(RawMulti { handle: ptr }),\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `Arc<RawMulti>` is not `Send` and `Sync` as `RawMulti` is neither `Send` nor `Sync`\n    = help: if the `Arc` will not used be across threads replace it with an `Rc`\n    = help: otherwise make `RawMulti` `Send` and `Sync` or consider a wrapper type such as `Mutex`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arc_with_non_send_sync\n    = note: `#[warn(clippy::arc_with_non_send_sync)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`Arc<RawMulti>` is not `Send` and `Sync` as `RawMulti` is neither `Send` nor `Sync`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if the `Arc` will not used be across threads replace it with an `Rc`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "otherwise make `RawMulti` `Send` and `Sync` or consider a wrapper type such as `Mutex`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arc_with_non_send_sync",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::arc_with_non_send_sync)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::arc_with_non_send_sync",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of an `Arc` that is not `Send` and `Sync`",
                "spans": [
                  {
                    "byte_end": 4313,
                    "byte_start": 4279,
                    "column_end": 56,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\multi.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 134,
                    "line_start": 134,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 22,
                        "text": "                raw: Arc::new(RawMulti { handle: ptr }),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: you should consider adding a `Default` implementation for `Events`\n    --> src\\multi.rs:1158:5\n     |\n1158 | /     pub fn new() -> Events {\n1159 | |         Events { bits: 0 }\n1160 | |     }\n     | |_____^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n     |\n1156 + impl Default for Events {\n1157 +     fn default() -> Self {\n1158 +         Self::new()\n1159 +     }\n1160 + }\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try adding this",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 43473,
                        "byte_start": 43473,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\multi.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1156,
                        "line_start": 1156,
                        "suggested_replacement": "impl Default for Events {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "impl Events {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::new_without_default",
                  "explanation": null
                },
                "level": "warning",
                "message": "you should consider adding a `Default` implementation for `Events`",
                "spans": [
                  {
                    "byte_end": 43592,
                    "byte_start": 43535,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\multi.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1160,
                    "line_start": 1158,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 5,
                        "text": "    pub fn new() -> Events {"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "        Events { bits: 0 }"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: you should consider adding a `Default` implementation for `WaitFd`\n    --> src\\multi.rs:1233:5\n     |\n1233 | /     pub fn new() -> WaitFd {\n1234 | |         WaitFd {\n1235 | |             inner: curl_sys::curl_waitfd {\n1236 | |                 fd: 0,\n...    |\n1241 | |     }\n     | |_____^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n     |\n1231 + impl Default for WaitFd {\n1232 +     fn default() -> Self {\n1233 +         Self::new()\n1234 +     }\n1235 + }\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try adding this",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 45844,
                        "byte_start": 45844,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\multi.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1231,
                        "line_start": 1231,
                        "suggested_replacement": "impl Default for WaitFd {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "impl WaitFd {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::new_without_default",
                  "explanation": null
                },
                "level": "warning",
                "message": "you should consider adding a `Default` implementation for `WaitFd`",
                "spans": [
                  {
                    "byte_end": 46101,
                    "byte_start": 45908,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\multi.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1241,
                    "line_start": 1233,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 5,
                        "text": "    pub fn new() -> WaitFd {"
                      },
                      {
                        "highlight_end": 17,
                        "highlight_start": 1,
                        "text": "        WaitFd {"
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "            inner: curl_sys::curl_waitfd {"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                fd: 0,"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                events: 0,"
                      },
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "                revents: 0,"
                      },
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "            },"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmprf9h4mwv/curl-0.4.48#curl@0.4.48",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "curl",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "openssl-probe",
                "openssl-sys",
                "ssl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmprf9h4mwv\\curl-0.4.48\\target\\debug\\deps\\libcurl-22d1c321a1798db0.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 126
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": true,
              "count": 1,
              "list": [
                {
                  "advisory": {
                    "id": "RUSTSEC-2025-0009",
                    "package": "ring",
                    "title": "Some AES functions may panic when overflow checking is enabled.",
                    "description": "`ring::aead::quic::HeaderProtectionKey::new_mask()` may panic when overflow\nchecking is enabled. In the QUIC protocol, an attacker can induce this panic by\nsending a specially-crafted packet. Even unintentionally it is likely to occur\nin 1 out of every 2**32 packets sent and/or received.\n\nOn 64-bit targets operations using `ring::aead::{AES_128_GCM, AES_256_GCM}` may\npanic when overflow checking is enabled, when encrypting/decrypting approximately\n68,719,476,700 bytes (about 64 gigabytes) of data in a single chunk. Protocols\nlike TLS and SSH are not affected by this because those protocols break large\namounts of data into small chunks. Similarly, most applications will not\nattempt to encrypt/decrypt 64GB of data in one chunk.\n\nOverflow checking is not enabled in release mode by default, but\n`RUSTFLAGS=\"-C overflow-checks\"` or `overflow-checks = true` in the Cargo.toml\nprofile can override this. Overflow checking is usually enabled by default in\ndebug mode.",
                    "date": "2025-03-06",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "denial-of-service"
                    ],
                    "keywords": [],
                    "cvss": null,
                    "informational": null,
                    "references": [],
                    "source": null,
                    "url": "https://github.com/briansmith/ring/blob/main/RELEASES.md#version-01712-2025-03-05",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=0.17.12"
                    ],
                    "unaffected": []
                  },
                  "affected": null,
                  "package": {
                    "name": "ring",
                    "version": "0.17.7",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "688c63d65483050968b2a8937f7995f443e27041a0f7700aa59b0822aedebb74",
                    "dependencies": [
                      {
                        "name": "cc",
                        "version": "1.2.13",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "getrandom",
                        "version": "0.2.12",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.153",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "spin",
                        "version": "0.9.8",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "untrusted",
                        "version": "0.9.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "windows-sys",
                        "version": "0.48.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  }
                }
              ]
            },
            "warnings": {
              "unmaintained": [
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "net2",
                    "version": "0.2.39",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "b13b648036a2339d06de780866fbdfda0dde886de7b3af2ddeba8b14f4ee34ac",
                    "dependencies": [
                      {
                        "name": "cfg-if",
                        "version": "0.1.10",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.153",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "winapi",
                        "version": "0.3.9",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2020-0016",
                    "package": "net2",
                    "title": "`net2` crate has been deprecated; use `socket2` instead",
                    "description": "The [`net2`](https://crates.io/crates/net2) crate has been deprecated\nand users are encouraged to considered [`socket2`](https://crates.io/crates/socket2) instead.",
                    "date": "2020-05-01",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/deprecrated/net2-rs/commit/3350e3819adf151709047e93f25583a5df681091",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                },
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "paste",
                    "version": "1.0.15",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a",
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2024-0436",
                    "package": "paste",
                    "title": "paste - no longer maintained",
                    "description": "The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \nthat this project is not longer maintained as well as archived the repository",
                    "date": "2024-10-07",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/dtolnay/paste",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                }
              ]
            }
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "curl",
          "version": "0.4.48",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/curl/latest/curl/all.html \"show sidebar\")\n# Crate curlCopy item path\n[Settings](https://docs.rs/curl/latest/settings.html)\n[Help](https://docs.rs/curl/latest/help.html)\nSummary[Source](https://docs.rs/curl/latest/src/curl/lib.rs.html#1-184)\nExpand description\nRust bindings to the libcurl C library\nThis crate contains bindings for an HTTP/HTTPS client which is powered by [libcurl](https://curl.haxx.se/libcurl/), the same library behind the `curl` command line tool. The API currently closely matches that of libcurl itself, except that a Rustic layer of safety is applied on top.\n## [\u00a7](https://docs.rs/curl/latest/curl/#the-easy-api)The \u201cEasy\u201d API\nThe easiest way to send a request is to use the `Easy` api which corresponds to `CURL` in libcurl. This handle supports a wide variety of options and can be used to make a single blocking request in a thread. Callbacks can be specified to deal with data as it arrives and a handle can be reused to cache connections and such.\n```\nuse std::io::{stdout, Write};\nuse curl::easy::Easy;\n// Write the contents of rust-lang.org to stdout\nlet mut easy = Easy::new();\neasy.url(\"https://www.rust-lang.org/\").unwrap();\neasy.write_function(|data| {\n  stdout().write_all(data).unwrap();\n  Ok(data.len())\n}).unwrap();\neasy.perform().unwrap();\n```\n\n## [\u00a7](https://docs.rs/curl/latest/curl/#what-about-multiple-concurrent-http-requests)What about multiple concurrent HTTP requests?\nOne option you have currently is to send multiple requests in multiple threads, but otherwise libcurl has a \u201cmulti\u201d interface for doing this operation. Initial bindings of this interface can be found in the `multi` module, but feedback is welcome!\n## [\u00a7](https://docs.rs/curl/latest/curl/#where-does-libcurl-come-from)Where does libcurl come from?\nThis crate links to the `curl-sys` crate which is in turn responsible for acquiring and linking to the libcurl library. Currently this crate will build libcurl from source if one is not already detected on the system.\nThere is a large number of releases for libcurl, all with different sets of capabilities. Robust programs may wish to inspect `Version::get()` to test what features are implemented in the linked build of libcurl at runtime.\n## [\u00a7](https://docs.rs/curl/latest/curl/#initialization)Initialization\nThe underlying libcurl library must be initialized before use and has certain requirements on how this is done. Check the documentation for [`init`](https://docs.rs/curl/latest/curl/fn.init.html \"fn curl::init\") for more details.\n## Modules[\u00a7](https://docs.rs/curl/latest/curl/#modules)\n\n[easy](https://docs.rs/curl/latest/curl/easy/index.html \"mod curl::easy\")\n    Bindings to the \u201ceasy\u201d libcurl API.\n\n[multi](https://docs.rs/curl/latest/curl/multi/index.html \"mod curl::multi\")\n    Multi - initiating multiple requests simultaneously\n## Structs[\u00a7](https://docs.rs/curl/latest/curl/#structs)\n\n[Error](https://docs.rs/curl/latest/curl/struct.Error.html \"struct curl::Error\")\n    An error returned from various \u201ceasy\u201d operations.\n\n[FormError](https://docs.rs/curl/latest/curl/struct.FormError.html \"struct curl::FormError\")\n    An error from \u201cform add\u201d operations.\n\n[MultiError](https://docs.rs/curl/latest/curl/struct.MultiError.html \"struct curl::MultiError\")\n    An error from \u201cmulti\u201d operations.\n\n[Protocols](https://docs.rs/curl/latest/curl/struct.Protocols.html \"struct curl::Protocols\")\n    An iterator over the list of protocols a version supports.\n\n[ShareError](https://docs.rs/curl/latest/curl/struct.ShareError.html \"struct curl::ShareError\")\n    An error returned from \u201cshare\u201d operations.\n\n[Version](https://docs.rs/curl/latest/curl/struct.Version.html \"struct curl::Version\")\n    Version information about libcurl and the capabilities that it supports.\n## Functions[\u00a7](https://docs.rs/curl/latest/curl/#functions)\n\n[init](https://docs.rs/curl/latest/curl/fn.init.html \"fn curl::init\")\n    Initializes the underlying libcurl library.\n",
            "markdown_with_citations": "[](https://docs.rs/curl/latest/curl/all.html \"show sidebar\")\n# Crate curlCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nRust bindings to the libcurl C library\nThis crate contains bindings for an HTTP/HTTPS client which is powered by libcurl\u27e84\u27e9, the same library behind the `curl` command line tool. The API currently closely matches that of libcurl itself, except that a Rustic layer of safety is applied on top.\n## \u00a7\u27e85\u27e9The \u201cEasy\u201d API\nThe easiest way to send a request is to use the `Easy` api which corresponds to `CURL` in libcurl. This handle supports a wide variety of options and can be used to make a single blocking request in a thread. Callbacks can be specified to deal with data as it arrives and a handle can be reused to cache connections and such.\n```\nuse std::io::{stdout, Write};\nuse curl::easy::Easy;\n// Write the contents of rust-lang.org to stdout\nlet mut easy = Easy::new();\neasy.url(\"https://www.rust-lang.org/\").unwrap();\neasy.write_function(|data| {\n  stdout().write_all(data).unwrap();\n  Ok(data.len())\n}).unwrap();\neasy.perform().unwrap();\n```\n\n## \u00a7\u27e86\u27e9What about multiple concurrent HTTP requests?\nOne option you have currently is to send multiple requests in multiple threads, but otherwise libcurl has a \u201cmulti\u201d interface for doing this operation. Initial bindings of this interface can be found in the `multi` module, but feedback is welcome!\n## \u00a7\u27e87\u27e9Where does libcurl come from?\nThis crate links to the `curl-sys` crate which is in turn responsible for acquiring and linking to the libcurl library. Currently this crate will build libcurl from source if one is not already detected on the system.\nThere is a large number of releases for libcurl, all with different sets of capabilities. Robust programs may wish to inspect `Version::get()` to test what features are implemented in the linked build of libcurl at runtime.\n## \u00a7\u27e88\u27e9Initialization\nThe underlying libcurl library must be initialized before use and has certain requirements on how this is done. Check the documentation for `init`\u27e89\u27e9 for more details.\n## Modules\u00a7\u27e810\u27e9\n\neasy\u27e811\u27e9\n    Bindings to the \u201ceasy\u201d libcurl API.\n\nmulti\u27e812\u27e9\n    Multi - initiating multiple requests simultaneously\n## Structs\u00a7\u27e813\u27e9\n\nError\u27e814\u27e9\n    An error returned from various \u201ceasy\u201d operations.\n\nFormError\u27e815\u27e9\n    An error from \u201cform add\u201d operations.\n\nMultiError\u27e816\u27e9\n    An error from \u201cmulti\u201d operations.\n\nProtocols\u27e817\u27e9\n    An iterator over the list of protocols a version supports.\n\nShareError\u27e818\u27e9\n    An error returned from \u201cshare\u201d operations.\n\nVersion\u27e819\u27e9\n    Version information about libcurl and the capabilities that it supports.\n## Functions\u00a7\u27e820\u27e9\n\ninit\u27e89\u27e9\n    Initializes the underlying libcurl library.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/curl/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/curl/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/curl/latest/src/curl/lib.rs.html#1-184: Source\n\u27e84\u27e9 https://curl.haxx.se/libcurl/: libcurl\n\u27e85\u27e9 https://docs.rs/curl/latest/curl/#the-easy-api: \u00a7\n\u27e86\u27e9 https://docs.rs/curl/latest/curl/#what-about-multiple-concurrent-http-requests: \u00a7\n\u27e87\u27e9 https://docs.rs/curl/latest/curl/#where-does-libcurl-come-from: \u00a7\n\u27e88\u27e9 https://docs.rs/curl/latest/curl/#initialization: \u00a7\n\u27e89\u27e9 https://docs.rs/curl/latest/curl/fn.init.html: fn curl::init - `init`\n\u27e810\u27e9 https://docs.rs/curl/latest/curl/#modules: \u00a7\n\u27e811\u27e9 https://docs.rs/curl/latest/curl/easy/index.html: mod curl::easy - easy\n\u27e812\u27e9 https://docs.rs/curl/latest/curl/multi/index.html: mod curl::multi - multi\n\u27e813\u27e9 https://docs.rs/curl/latest/curl/#structs: \u00a7\n\u27e814\u27e9 https://docs.rs/curl/latest/curl/struct.Error.html: struct curl::Error - Error\n\u27e815\u27e9 https://docs.rs/curl/latest/curl/struct.FormError.html: struct curl::FormError - FormError\n\u27e816\u27e9 https://docs.rs/curl/latest/curl/struct.MultiError.html: struct curl::MultiError - MultiError\n\u27e817\u27e9 https://docs.rs/curl/latest/curl/struct.Protocols.html: struct curl::Protocols - Protocols\n\u27e818\u27e9 https://docs.rs/curl/latest/curl/struct.ShareError.html: struct curl::ShareError - ShareError\n\u27e819\u27e9 https://docs.rs/curl/latest/curl/struct.Version.html: struct curl::Version - Version\n\u27e820\u27e9 https://docs.rs/curl/latest/curl/#functions: \u00a7\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "curl",
          "version": "0.4.48",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/curl/latest/curl/all.html \"show sidebar\")\n# Crate curlCopy item path\n[Settings](https://docs.rs/curl/latest/settings.html)\n[Help](https://docs.rs/curl/latest/help.html)\nSummary[Source](https://docs.rs/curl/latest/src/curl/lib.rs.html#1-184)\nExpand description\nRust bindings to the libcurl C library\nThis crate contains bindings for an HTTP/HTTPS client which is powered by [libcurl](https://curl.haxx.se/libcurl/), the same library behind the `curl` command line tool. The API currently closely matches that of libcurl itself, except that a Rustic layer of safety is applied on top.\n## [\u00a7](https://docs.rs/curl/latest/curl/#the-easy-api)The \u201cEasy\u201d API\nThe easiest way to send a request is to use the `Easy` api which corresponds to `CURL` in libcurl. This handle supports a wide variety of options and can be used to make a single blocking request in a thread. Callbacks can be specified to deal with data as it arrives and a handle can be reused to cache connections and such.\n```\nuse std::io::{stdout, Write};\nuse curl::easy::Easy;\n// Write the contents of rust-lang.org to stdout\nlet mut easy = Easy::new();\neasy.url(\"https://www.rust-lang.org/\").unwrap();\neasy.write_function(|data| {\n  stdout().write_all(data).unwrap();\n  Ok(data.len())\n}).unwrap();\neasy.perform().unwrap();\n```\n\n## [\u00a7](https://docs.rs/curl/latest/curl/#what-about-multiple-concurrent-http-requests)What about multiple concurrent HTTP requests?\nOne option you have currently is to send multiple requests in multiple threads, but otherwise libcurl has a \u201cmulti\u201d interface for doing this operation. Initial bindings of this interface can be found in the `multi` module, but feedback is welcome!\n## [\u00a7](https://docs.rs/curl/latest/curl/#where-does-libcurl-come-from)Where does libcurl come from?\nThis crate links to the `curl-sys` crate which is in turn responsible for acquiring and linking to the libcurl library. Currently this crate will build libcurl from source if one is not already detected on the system.\nThere is a large number of releases for libcurl, all with different sets of capabilities. Robust programs may wish to inspect `Version::get()` to test what features are implemented in the linked build of libcurl at runtime.\n## [\u00a7](https://docs.rs/curl/latest/curl/#initialization)Initialization\nThe underlying libcurl library must be initialized before use and has certain requirements on how this is done. Check the documentation for [`init`](https://docs.rs/curl/latest/curl/fn.init.html \"fn curl::init\") for more details.\n## Modules[\u00a7](https://docs.rs/curl/latest/curl/#modules)\n\n[easy](https://docs.rs/curl/latest/curl/easy/index.html \"mod curl::easy\")\n    Bindings to the \u201ceasy\u201d libcurl API.\n\n[multi](https://docs.rs/curl/latest/curl/multi/index.html \"mod curl::multi\")\n    Multi - initiating multiple requests simultaneously\n## Structs[\u00a7](https://docs.rs/curl/latest/curl/#structs)\n\n[Error](https://docs.rs/curl/latest/curl/struct.Error.html \"struct curl::Error\")\n    An error returned from various \u201ceasy\u201d operations.\n\n[FormError](https://docs.rs/curl/latest/curl/struct.FormError.html \"struct curl::FormError\")\n    An error from \u201cform add\u201d operations.\n\n[MultiError](https://docs.rs/curl/latest/curl/struct.MultiError.html \"struct curl::MultiError\")\n    An error from \u201cmulti\u201d operations.\n\n[Protocols](https://docs.rs/curl/latest/curl/struct.Protocols.html \"struct curl::Protocols\")\n    An iterator over the list of protocols a version supports.\n\n[ShareError](https://docs.rs/curl/latest/curl/struct.ShareError.html \"struct curl::ShareError\")\n    An error returned from \u201cshare\u201d operations.\n\n[Version](https://docs.rs/curl/latest/curl/struct.Version.html \"struct curl::Version\")\n    Version information about libcurl and the capabilities that it supports.\n## Functions[\u00a7](https://docs.rs/curl/latest/curl/#functions)\n\n[init](https://docs.rs/curl/latest/curl/fn.init.html \"fn curl::init\")\n    Initializes the underlying libcurl library.\n",
            "markdown_with_citations": "[](https://docs.rs/curl/latest/curl/all.html \"show sidebar\")\n# Crate curlCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nRust bindings to the libcurl C library\nThis crate contains bindings for an HTTP/HTTPS client which is powered by libcurl\u27e84\u27e9, the same library behind the `curl` command line tool. The API currently closely matches that of libcurl itself, except that a Rustic layer of safety is applied on top.\n## \u00a7\u27e85\u27e9The \u201cEasy\u201d API\nThe easiest way to send a request is to use the `Easy` api which corresponds to `CURL` in libcurl. This handle supports a wide variety of options and can be used to make a single blocking request in a thread. Callbacks can be specified to deal with data as it arrives and a handle can be reused to cache connections and such.\n```\nuse std::io::{stdout, Write};\nuse curl::easy::Easy;\n// Write the contents of rust-lang.org to stdout\nlet mut easy = Easy::new();\neasy.url(\"https://www.rust-lang.org/\").unwrap();\neasy.write_function(|data| {\n  stdout().write_all(data).unwrap();\n  Ok(data.len())\n}).unwrap();\neasy.perform().unwrap();\n```\n\n## \u00a7\u27e86\u27e9What about multiple concurrent HTTP requests?\nOne option you have currently is to send multiple requests in multiple threads, but otherwise libcurl has a \u201cmulti\u201d interface for doing this operation. Initial bindings of this interface can be found in the `multi` module, but feedback is welcome!\n## \u00a7\u27e87\u27e9Where does libcurl come from?\nThis crate links to the `curl-sys` crate which is in turn responsible for acquiring and linking to the libcurl library. Currently this crate will build libcurl from source if one is not already detected on the system.\nThere is a large number of releases for libcurl, all with different sets of capabilities. Robust programs may wish to inspect `Version::get()` to test what features are implemented in the linked build of libcurl at runtime.\n## \u00a7\u27e88\u27e9Initialization\nThe underlying libcurl library must be initialized before use and has certain requirements on how this is done. Check the documentation for `init`\u27e89\u27e9 for more details.\n## Modules\u00a7\u27e810\u27e9\n\neasy\u27e811\u27e9\n    Bindings to the \u201ceasy\u201d libcurl API.\n\nmulti\u27e812\u27e9\n    Multi - initiating multiple requests simultaneously\n## Structs\u00a7\u27e813\u27e9\n\nError\u27e814\u27e9\n    An error returned from various \u201ceasy\u201d operations.\n\nFormError\u27e815\u27e9\n    An error from \u201cform add\u201d operations.\n\nMultiError\u27e816\u27e9\n    An error from \u201cmulti\u201d operations.\n\nProtocols\u27e817\u27e9\n    An iterator over the list of protocols a version supports.\n\nShareError\u27e818\u27e9\n    An error returned from \u201cshare\u201d operations.\n\nVersion\u27e819\u27e9\n    Version information about libcurl and the capabilities that it supports.\n## Functions\u00a7\u27e820\u27e9\n\ninit\u27e89\u27e9\n    Initializes the underlying libcurl library.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/curl/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/curl/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/curl/latest/src/curl/lib.rs.html#1-184: Source\n\u27e84\u27e9 https://curl.haxx.se/libcurl/: libcurl\n\u27e85\u27e9 https://docs.rs/curl/latest/curl/#the-easy-api: \u00a7\n\u27e86\u27e9 https://docs.rs/curl/latest/curl/#what-about-multiple-concurrent-http-requests: \u00a7\n\u27e87\u27e9 https://docs.rs/curl/latest/curl/#where-does-libcurl-come-from: \u00a7\n\u27e88\u27e9 https://docs.rs/curl/latest/curl/#initialization: \u00a7\n\u27e89\u27e9 https://docs.rs/curl/latest/curl/fn.init.html: fn curl::init - `init`\n\u27e810\u27e9 https://docs.rs/curl/latest/curl/#modules: \u00a7\n\u27e811\u27e9 https://docs.rs/curl/latest/curl/easy/index.html: mod curl::easy - easy\n\u27e812\u27e9 https://docs.rs/curl/latest/curl/multi/index.html: mod curl::multi - multi\n\u27e813\u27e9 https://docs.rs/curl/latest/curl/#structs: \u00a7\n\u27e814\u27e9 https://docs.rs/curl/latest/curl/struct.Error.html: struct curl::Error - Error\n\u27e815\u27e9 https://docs.rs/curl/latest/curl/struct.FormError.html: struct curl::FormError - FormError\n\u27e816\u27e9 https://docs.rs/curl/latest/curl/struct.MultiError.html: struct curl::MultiError - MultiError\n\u27e817\u27e9 https://docs.rs/curl/latest/curl/struct.Protocols.html: struct curl::Protocols - Protocols\n\u27e818\u27e9 https://docs.rs/curl/latest/curl/struct.ShareError.html: struct curl::ShareError - ShareError\n\u27e819\u27e9 https://docs.rs/curl/latest/curl/struct.Version.html: struct curl::Version - Version\n\u27e820\u27e9 https://docs.rs/curl/latest/curl/#functions: \u00a7\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `curl` crate provides Rust bindings to the `libcurl` C library, enabling HTTP/HTTPS client functionality with a safe and ergonomic API. It supports both the \"Easy\" API for single blocking requests and the \"Multi\" API for concurrent requests, along with customizable callbacks for handling data. The crate automatically links to or builds `libcurl` and offers runtime inspection of supported features via `Version::get()`.",
          "feature_summary": null,
          "use_case": "Networking",
          "score": 7.0,
          "factual_counterfactual": "### Pair 1: Easy API  \n\u2705 Factual: The `curl` crate provides an \"Easy\" API that allows users to perform single blocking HTTP/HTTPS requests using a reusable handle, which can cache connections to improve performance.  \n\u274c Counterfactual: The \"Easy\" API in the `curl` crate automatically handles concurrent requests without requiring additional threads or the \"multi\" interface.  \n\n---\n\n### Pair 2: Concurrent Requests  \n\u2705 Factual: The `curl` crate supports multiple concurrent HTTP requests through libcurl's \"multi\" interface, which is exposed via the `multi` module, allowing users to manage multiple requests simultaneously.  \n\u274c Counterfactual: The `curl` crate does not support concurrent HTTP requests and requires users to manage each request sequentially using the \"Easy\" API.  \n\n---\n\n### Pair 3: libcurl Initialization  \n\u2705 Factual: The `curl` crate relies on the `curl-sys` crate to link to the libcurl library, and if libcurl is not detected on the system, it will build libcurl from source during the crate's compilation.  \n\u274c Counterfactual: The `curl` crate automatically installs libcurl as a system-wide dependency, bypassing the need to build it from source or use the `curl-sys` crate.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-427e4b79-7a6556fb-1751261612",
      "timestamp": "2025-06-30T05:33:32.709887+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]