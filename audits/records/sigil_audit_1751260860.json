[
  {
    "execution_id": "exec-f58161f1-74c5bc6d-1751260853",
    "timestamp": "2025-06-30T05:20:53.945642+00:00",
    "sacred_chain": {
      "input_data": "smallvec",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'smallvec' -> 'smallvec'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "smallvec",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/smallvec",
            "title": "smallvec v1.15.1",
            "content": {
              "raw_markdown": "#  smallvec v1.15.1\n'Small vector' optimization: store up to a small number of items on the stack \n  * [ #no_std ](https://crates.io/keywords/no_std)\n  * [ #small ](https://crates.io/keywords/small)\n  * [ #stack ](https://crates.io/keywords/stack)\n  * [ #vec ](https://crates.io/keywords/vec)\n  * [ #vector ](https://crates.io/keywords/vector)\n\n\n  * [ Readme ](https://crates.io/crates/smallvec)\n  * [ 75 Versions ](https://crates.io/crates/smallvec/versions)\n  * [ Dependencies ](https://crates.io/crates/smallvec/dependencies)\n  * [ Dependents ](https://crates.io/crates/smallvec/reverse_dependencies)\n\n\n## Metadata\n24 days ago \n2018 edition \n[ MIT ](https://choosealicense.com/licenses/mit) OR [ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0)\n37.2 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add smallvec\nOr add the following line to your Cargo.toml:\nsmallvec = \"1.15.1\"\n## Documentation\n[ docs.rs/smallvec ](https://docs.rs/smallvec/)\n## Repository\n[ github.com/servo/rust-smallvec ](https://github.com/servo/rust-smallvec)\n## Owners\n## Categories\n  * [Data structures](https://crates.io/categories/data-structures)\n\n\n[ Report crate ](https://crates.io/support?crate=smallvec&inquire=crate-violation)\n### Stats Overview\n443,207,409 Downloads all time\n75 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  smallvec v1.15.1\n'Small vector' optimization: store up to a small number of items on the stack \n  *  #no_std \u27e81\u27e9\n  *  #small \u27e82\u27e9\n  *  #stack \u27e83\u27e9\n  *  #vec \u27e84\u27e9\n  *  #vector \u27e85\u27e9\n\n\n  *  Readme \u27e86\u27e9\n  *  75 Versions \u27e87\u27e9\n  *  Dependencies \u27e88\u27e9\n  *  Dependents \u27e89\u27e9\n\n\n## Metadata\n24 days ago \n2018 edition \n MIT \u27e810\u27e9 OR  Apache-2.0 \u27e811\u27e9\n37.2 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add smallvec\nOr add the following line to your Cargo.toml:\nsmallvec = \"1.15.1\"\n## Documentation\n docs.rs/smallvec \u27e812\u27e9\n## Repository\n github.com/servo/rust-smallvec \u27e813\u27e9\n## Owners\n## Categories\n  * Data structures\u27e814\u27e9\n\n\n Report crate \u27e815\u27e9\n### Stats Overview\n443,207,409 Downloads all time\n75 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/no_std:  #no_std \n\u27e82\u27e9 https://crates.io/keywords/small:  #small \n\u27e83\u27e9 https://crates.io/keywords/stack:  #stack \n\u27e84\u27e9 https://crates.io/keywords/vec:  #vec \n\u27e85\u27e9 https://crates.io/keywords/vector:  #vector \n\u27e86\u27e9 https://crates.io/crates/smallvec:  Readme \n\u27e87\u27e9 https://crates.io/crates/smallvec/versions:  75 Versions \n\u27e88\u27e9 https://crates.io/crates/smallvec/dependencies:  Dependencies \n\u27e89\u27e9 https://crates.io/crates/smallvec/reverse_dependencies:  Dependents \n\u27e810\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e811\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e812\u27e9 https://docs.rs/smallvec/:  docs.rs/smallvec \n\u27e813\u27e9 https://github.com/servo/rust-smallvec:  github.com/servo/rust-smallvec \n\u27e814\u27e9 https://crates.io/categories/data-structures: Data structures\n\u27e815\u27e9 https://crates.io/support?crate=smallvec&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1425,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "114643.4727525"
          },
          "docs_rs": {
            "url": "https://docs.rs/smallvec",
            "title": "Crate smallvecCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/smallvec/latest/smallvec/all.html \"show sidebar\")\n# Crate smallvecCopy item path\n[Settings](https://docs.rs/smallvec/latest/settings.html)\n[Help](https://docs.rs/smallvec/latest/help.html)\nSummary[Source](https://docs.rs/smallvec/latest/src/smallvec/lib.rs.html#7-2605)\nExpand description\nSmall vectors in various sizes. These store a certain number of elements inline, and fall back to the heap for larger allocations. This can be a useful optimization for improving cache locality and reducing allocator traffic for workloads that fit within the inline buffer.\n### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#no_std-support)`no_std` support\nBy default, `smallvec` does not depend on `std`. However, the optional `write` feature implements the `std::io::Write` trait for vectors of `u8`. When this feature is enabled, `smallvec` depends on `std`.\n### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#optional-features)Optional features\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#serde)`serde`\nWhen this optional dependency is enabled, `SmallVec` implements the `serde::Serialize` and `serde::Deserialize` traits.\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#write)`write`\nWhen this feature is enabled, `SmallVec<[u8; _]>` implements the `std::io::Write` trait. This feature is not compatible with `#![no_std]` programs.\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#union)`union`\n**This feature requires Rust 1.49.**\nWhen the `union` feature is enabled `smallvec` will track its state (inline or spilled) without the use of an enum tag, reducing the size of the `smallvec` by one machine word. This means that there is potentially no space overhead compared to `Vec`. Note that `smallvec` can still be larger than `Vec` if the inline buffer is larger than two machine words.\nTo use this feature add `features = [\"union\"]` in the `smallvec` section of Cargo.toml. Note that this feature requires Rust 1.49.\nTracking issue: [rust-lang/rust#55149](https://github.com/rust-lang/rust/issues/55149)\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#const_generics)`const_generics`\n**This feature requires Rust 1.51.**\nWhen this feature is enabled, `SmallVec` works with any arrays of any size, not just a fixed list of sizes.\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#const_new)`const_new`\n**This feature requires Rust 1.51.**\nThis feature exposes the functions [`SmallVec::new_const`](https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html#method.new_const \"associated function smallvec::SmallVec::new_const\"), [`SmallVec::from_const`](https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html#method.from_const \"associated function smallvec::SmallVec::from_const\"), and [`smallvec_inline`](https://docs.rs/smallvec/latest/smallvec/macro.smallvec_inline.html \"macro smallvec::smallvec_inline\") which enables the `SmallVec` to be initialized from a const context. For details, see the [Rust Reference](https://doc.rust-lang.org/reference/const_eval.html#const-functions).\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#drain_filter)`drain_filter`\n**This feature is unstable.** It may change to match the unstable `drain_filter` method in libstd.\nEnables the `drain_filter` method, which produces an iterator that calls a user-provided closure to determine which elements of the vector to remove and yield from the iterator.\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#drain_keep_rest)`drain_keep_rest`\n**This feature is unstable.** It may change to match the unstable `drain_keep_rest` method in libstd.\nEnables the `DrainFilter::keep_rest` method.\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#specialization)`specialization`\n**This feature is unstable and requires a nightly build of the Rust toolchain.**\nWhen this feature is enabled, `SmallVec::from(slice)` has improved performance for slices of `Copy` types. (Without this feature, you can use `SmallVec::from_slice` to get optimal performance for `Copy` types.)\nTracking issue: [rust-lang/rust#31844](https://github.com/rust-lang/rust/issues/31844)\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#may_dangle)`may_dangle`\n**This feature is unstable and requires a nightly build of the Rust toolchain.**\nThis feature makes the Rust compiler less strict about use of vectors that contain borrowed references. For details, see the [Rustonomicon](https://doc.rust-lang.org/1.42.0/nomicon/dropck.html#an-escape-hatch).\nTracking issue: [rust-lang/rust#34761](https://github.com/rust-lang/rust/issues/34761)\n## Macros[\u00a7](https://docs.rs/smallvec/latest/smallvec/#macros)\n\n[smallvec](https://docs.rs/smallvec/latest/smallvec/macro.smallvec.html \"macro smallvec::smallvec\")\n    Creates a [`SmallVec`](https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html \"struct smallvec::SmallVec\") containing the arguments.\n\n[smallvec_inline](https://docs.rs/smallvec/latest/smallvec/macro.smallvec_inline.html \"macro smallvec::smallvec_inline\")`const_new`\n    Creates an inline [`SmallVec`](https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html \"struct smallvec::SmallVec\") containing the arguments. This macro is enabled by the feature `const_new`.\n## Structs[\u00a7](https://docs.rs/smallvec/latest/smallvec/#structs)\n\n[Drain](https://docs.rs/smallvec/latest/smallvec/struct.Drain.html \"struct smallvec::Drain\")\n    An iterator that removes the items from a `SmallVec` and yields them by value.\n\n[DrainFilter](https://docs.rs/smallvec/latest/smallvec/struct.DrainFilter.html \"struct smallvec::DrainFilter\")\n    An iterator which uses a closure to determine if an element should be removed.\n\n[IntoIter](https://docs.rs/smallvec/latest/smallvec/struct.IntoIter.html \"struct smallvec::IntoIter\")\n    An iterator that consumes a `SmallVec` and yields its items by value.\n\n[SmallVec](https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html \"struct smallvec::SmallVec\")\n    A `Vec`-like container that can store a small number of elements inline.\n## Enums[\u00a7](https://docs.rs/smallvec/latest/smallvec/#enums)\n\n[CollectionAllocErr](https://docs.rs/smallvec/latest/smallvec/enum.CollectionAllocErr.html \"enum smallvec::CollectionAllocErr\")\n    Error type for APIs with fallible heap allocation\n## Traits[\u00a7](https://docs.rs/smallvec/latest/smallvec/#traits)\n\n[Array](https://docs.rs/smallvec/latest/smallvec/trait.Array.html \"trait smallvec::Array\")\n    Types that can be used as the backing store for a [`SmallVec`](https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html \"struct smallvec::SmallVec\").\n\n[ToSmallVec](https://docs.rs/smallvec/latest/smallvec/trait.ToSmallVec.html \"trait smallvec::ToSmallVec\")\n    Convenience trait for constructing a `SmallVec`\n",
              "markdown_with_citations": "[](https://docs.rs/smallvec/latest/smallvec/all.html \"show sidebar\")\n# Crate smallvecCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nSmall vectors in various sizes. These store a certain number of elements inline, and fall back to the heap for larger allocations. This can be a useful optimization for improving cache locality and reducing allocator traffic for workloads that fit within the inline buffer.\n### \u00a7\u27e84\u27e9`no_std` support\nBy default, `smallvec` does not depend on `std`. However, the optional `write` feature implements the `std::io::Write` trait for vectors of `u8`. When this feature is enabled, `smallvec` depends on `std`.\n### \u00a7\u27e85\u27e9Optional features\n#### \u00a7\u27e86\u27e9`serde`\nWhen this optional dependency is enabled, `SmallVec` implements the `serde::Serialize` and `serde::Deserialize` traits.\n#### \u00a7\u27e87\u27e9`write`\nWhen this feature is enabled, `SmallVec<[u8; _]>` implements the `std::io::Write` trait. This feature is not compatible with `#![no_std]` programs.\n#### \u00a7\u27e88\u27e9`union`\n**This feature requires Rust 1.49.**\nWhen the `union` feature is enabled `smallvec` will track its state (inline or spilled) without the use of an enum tag, reducing the size of the `smallvec` by one machine word. This means that there is potentially no space overhead compared to `Vec`. Note that `smallvec` can still be larger than `Vec` if the inline buffer is larger than two machine words.\nTo use this feature add `features = [\"union\"]` in the `smallvec` section of Cargo.toml. Note that this feature requires Rust 1.49.\nTracking issue: rust-lang/rust#55149\u27e89\u27e9\n#### \u00a7\u27e810\u27e9`const_generics`\n**This feature requires Rust 1.51.**\nWhen this feature is enabled, `SmallVec` works with any arrays of any size, not just a fixed list of sizes.\n#### \u00a7\u27e811\u27e9`const_new`\n**This feature requires Rust 1.51.**\nThis feature exposes the functions `SmallVec::new_const`\u27e812\u27e9, `SmallVec::from_const`\u27e813\u27e9, and `smallvec_inline`\u27e814\u27e9 which enables the `SmallVec` to be initialized from a const context. For details, see the Rust Reference\u27e815\u27e9.\n#### \u00a7\u27e816\u27e9`drain_filter`\n**This feature is unstable.** It may change to match the unstable `drain_filter` method in libstd.\nEnables the `drain_filter` method, which produces an iterator that calls a user-provided closure to determine which elements of the vector to remove and yield from the iterator.\n#### \u00a7\u27e817\u27e9`drain_keep_rest`\n**This feature is unstable.** It may change to match the unstable `drain_keep_rest` method in libstd.\nEnables the `DrainFilter::keep_rest` method.\n#### \u00a7\u27e818\u27e9`specialization`\n**This feature is unstable and requires a nightly build of the Rust toolchain.**\nWhen this feature is enabled, `SmallVec::from(slice)` has improved performance for slices of `Copy` types. (Without this feature, you can use `SmallVec::from_slice` to get optimal performance for `Copy` types.)\nTracking issue: rust-lang/rust#31844\u27e819\u27e9\n#### \u00a7\u27e820\u27e9`may_dangle`\n**This feature is unstable and requires a nightly build of the Rust toolchain.**\nThis feature makes the Rust compiler less strict about use of vectors that contain borrowed references. For details, see the Rustonomicon\u27e821\u27e9.\nTracking issue: rust-lang/rust#34761\u27e822\u27e9\n## Macros\u00a7\u27e823\u27e9\n\nsmallvec\u27e824\u27e9\n    Creates a `SmallVec`\u27e825\u27e9 containing the arguments.\n\nsmallvec_inline\u27e814\u27e9`const_new`\n    Creates an inline `SmallVec`\u27e825\u27e9 containing the arguments. This macro is enabled by the feature `const_new`.\n## Structs\u00a7\u27e826\u27e9\n\nDrain\u27e827\u27e9\n    An iterator that removes the items from a `SmallVec` and yields them by value.\n\nDrainFilter\u27e828\u27e9\n    An iterator which uses a closure to determine if an element should be removed.\n\nIntoIter\u27e829\u27e9\n    An iterator that consumes a `SmallVec` and yields its items by value.\n\nSmallVec\u27e825\u27e9\n    A `Vec`-like container that can store a small number of elements inline.\n## Enums\u00a7\u27e830\u27e9\n\nCollectionAllocErr\u27e831\u27e9\n    Error type for APIs with fallible heap allocation\n## Traits\u00a7\u27e832\u27e9\n\nArray\u27e833\u27e9\n    Types that can be used as the backing store for a `SmallVec`\u27e825\u27e9.\n\nToSmallVec\u27e834\u27e9\n    Convenience trait for constructing a `SmallVec`\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/smallvec/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/smallvec/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/smallvec/latest/src/smallvec/lib.rs.html#7-2605: Source\n\u27e84\u27e9 https://docs.rs/smallvec/latest/smallvec/#no_std-support: \u00a7\n\u27e85\u27e9 https://docs.rs/smallvec/latest/smallvec/#optional-features: \u00a7\n\u27e86\u27e9 https://docs.rs/smallvec/latest/smallvec/#serde: \u00a7\n\u27e87\u27e9 https://docs.rs/smallvec/latest/smallvec/#write: \u00a7\n\u27e88\u27e9 https://docs.rs/smallvec/latest/smallvec/#union: \u00a7\n\u27e89\u27e9 https://github.com/rust-lang/rust/issues/55149: rust-lang/rust#55149\n\u27e810\u27e9 https://docs.rs/smallvec/latest/smallvec/#const_generics: \u00a7\n\u27e811\u27e9 https://docs.rs/smallvec/latest/smallvec/#const_new: \u00a7\n\u27e812\u27e9 https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html#method.new_const: associated function smallvec::SmallVec::new_const - `SmallVec::new_const`\n\u27e813\u27e9 https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html#method.from_const: associated function smallvec::SmallVec::from_const - `SmallVec::from_const`\n\u27e814\u27e9 https://docs.rs/smallvec/latest/smallvec/macro.smallvec_inline.html: macro smallvec::smallvec_inline - `smallvec_inline`\n\u27e815\u27e9 https://doc.rust-lang.org/reference/const_eval.html#const-functions: Rust Reference\n\u27e816\u27e9 https://docs.rs/smallvec/latest/smallvec/#drain_filter: \u00a7\n\u27e817\u27e9 https://docs.rs/smallvec/latest/smallvec/#drain_keep_rest: \u00a7\n\u27e818\u27e9 https://docs.rs/smallvec/latest/smallvec/#specialization: \u00a7\n\u27e819\u27e9 https://github.com/rust-lang/rust/issues/31844: rust-lang/rust#31844\n\u27e820\u27e9 https://docs.rs/smallvec/latest/smallvec/#may_dangle: \u00a7\n\u27e821\u27e9 https://doc.rust-lang.org/1.42.0/nomicon/dropck.html#an-escape-hatch: Rustonomicon\n\u27e822\u27e9 https://github.com/rust-lang/rust/issues/34761: rust-lang/rust#34761\n\u27e823\u27e9 https://docs.rs/smallvec/latest/smallvec/#macros: \u00a7\n\u27e824\u27e9 https://docs.rs/smallvec/latest/smallvec/macro.smallvec.html: macro smallvec::smallvec - smallvec\n\u27e825\u27e9 https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html: struct smallvec::SmallVec - `SmallVec`\n\u27e826\u27e9 https://docs.rs/smallvec/latest/smallvec/#structs: \u00a7\n\u27e827\u27e9 https://docs.rs/smallvec/latest/smallvec/struct.Drain.html: struct smallvec::Drain - Drain\n\u27e828\u27e9 https://docs.rs/smallvec/latest/smallvec/struct.DrainFilter.html: struct smallvec::DrainFilter - DrainFilter\n\u27e829\u27e9 https://docs.rs/smallvec/latest/smallvec/struct.IntoIter.html: struct smallvec::IntoIter - IntoIter\n\u27e830\u27e9 https://docs.rs/smallvec/latest/smallvec/#enums: \u00a7\n\u27e831\u27e9 https://docs.rs/smallvec/latest/smallvec/enum.CollectionAllocErr.html: enum smallvec::CollectionAllocErr - CollectionAllocErr\n\u27e832\u27e9 https://docs.rs/smallvec/latest/smallvec/#traits: \u00a7\n\u27e833\u27e9 https://docs.rs/smallvec/latest/smallvec/trait.Array.html: trait smallvec::Array - Array\n\u27e834\u27e9 https://docs.rs/smallvec/latest/smallvec/trait.ToSmallVec.html: trait smallvec::ToSmallVec - ToSmallVec\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 6683,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "114644.3636324"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/smallvec",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [55 releases](https://lib.rs/crates/smallvec/versions) (24 stable)\n2.0.0-alpha.11 |  Mar 20, 2025   \n---|---  \n2.0.0-alpha.9 |  Dec 17, 2024   \n2.0.0-alpha.7 |  Jul 27, 2024   \n2.0.0-alpha.5 |  Mar 23, 2024   \n0.1.5 |  Jun 30, 2015   \n#**4** in [Data structures](https://lib.rs/data-structures \"Rust implementations of particular ways of organizing data suited for specific purposes.\")\nDownload history 4472008/week @ 2025-03-10 4855364/week @ 2025-03-17 4832985/week @ 2025-03-24 4547050/week @ 2025-03-31 5046646/week @ 2025-04-07 4671251/week @ 2025-04-14 4430472/week @ 2025-04-21 4523488/week @ 2025-04-28 4559626/week @ 2025-05-05 4717353/week @ 2025-05-12 4684705/week @ 2025-05-19 4105234/week @ 2025-05-26 4455957/week @ 2025-06-02 4997515/week @ 2025-06-09 5524381/week @ 2025-06-16 4901465/week @ 2025-06-23\n**20,136,157** downloads per month Used in [**61,326** crates (1,878 directly)](https://lib.rs/crates/smallvec/rev)\n**MIT/Apache**\n110KB  2.5K  SLoC\n# rust-smallvec\n> **\u26a0\ufe0f Note:** This is the code for smallvec 2.0, which is not yet ready for release. For details about the changes in version 2.0, please see [#183](https://github.com/servo/rust-smallvec/issues/183), [#240](https://github.com/servo/rust-smallvec/issues/240), and [#284](https://github.com/servo/rust-smallvec/issues/284).\n> The source code for the latest smallvec 1.x.y release can be found on the [v1 branch](https://github.com/servo/rust-smallvec/tree/v1). Bug fixes for smallvec 1 should be based on that branch, while new feature development should go on the v2 branch.\n## About smallvec\n[Documentation](https://docs.rs/smallvec/)\n[Release notes](https://github.com/servo/rust-smallvec/releases)\n\"Small vector\" optimization for Rust: store up to a small number of items on the stack\n## Example\n```\n``use` `smallvec`::````{`SmallVec`,` smallvec```}```;`\n  \n``//` This SmallVec can hold up to 4 items on the stack:`\n`let` `mut` v`:` `SmallVec`<``i32`, 4`>`` `=` `smallvec!``[``1``,` `2``,` `3``,` `4``]``;`\n``//` It will automatically move its contents to the heap if`\n``//` contains more than four items:`\nv`.``push``(``5``)``;`\n``//` SmallVec points to a slice, so you can use normal slice`\n``//` indexing and other methods to access its contents:`\nv`[``0``]` `=` v`[``1``]` `+` v`[``2``]``;`\nv`.``sort``(``)``;`\n`\n```\n\n#### Dependencies\n~210KB \n  * [ optional ](https://lib.rs/crates/smallvec/features#feature-bytes \"bytes is optional feature\") [bytes](https://lib.rs/crates/bytes \"1\")\n  * [ optional ](https://lib.rs/crates/smallvec/features#feature-malloc_size_of \"malloc_size_of is optional feature\") [malloc_size_of](https://lib.rs/crates/malloc_size_of \"0.1.1\")\n  * [ optional ](https://lib.rs/crates/smallvec/features#feature-serde \"serde is optional feature\") [serde](https://lib.rs/crates/serde \"1\")\n\n\n  * dev  [bincode](https://lib.rs/crates/bincode \"1.0.1\")\n\n\n#### [Other features](https://lib.rs/crates/smallvec/features)\n  * [extract_if](https://lib.rs/crates/smallvec/features#feature-extract_if)\n  * [may_dangle](https://lib.rs/crates/smallvec/features#feature-may_dangle)\n  * [specialization](https://lib.rs/crates/smallvec/features#feature-specialization)\n  * [std](https://lib.rs/crates/smallvec/features#feature-std)\n\n\n  *[SLoC]: Lines of code, excluding comments\n",
              "markdown_with_citations": "###  55 releases\u27e81\u27e9 (24 stable)\n2.0.0-alpha.11 |  Mar 20, 2025   \n---|---  \n2.0.0-alpha.9 |  Dec 17, 2024   \n2.0.0-alpha.7 |  Jul 27, 2024   \n2.0.0-alpha.5 |  Mar 23, 2024   \n0.1.5 |  Jun 30, 2015   \n#**4** in Data structures\u27e82\u27e9\nDownload history 4472008/week @ 2025-03-10 4855364/week @ 2025-03-17 4832985/week @ 2025-03-24 4547050/week @ 2025-03-31 5046646/week @ 2025-04-07 4671251/week @ 2025-04-14 4430472/week @ 2025-04-21 4523488/week @ 2025-04-28 4559626/week @ 2025-05-05 4717353/week @ 2025-05-12 4684705/week @ 2025-05-19 4105234/week @ 2025-05-26 4455957/week @ 2025-06-02 4997515/week @ 2025-06-09 5524381/week @ 2025-06-16 4901465/week @ 2025-06-23\n**20,136,157** downloads per month Used in **61,326** crates (1,878 directly)\u27e83\u27e9\n**MIT/Apache**\n110KB  2.5K  SLoC\n# rust-smallvec\n> **\u26a0\ufe0f Note:** This is the code for smallvec 2.0, which is not yet ready for release. For details about the changes in version 2.0, please see #183\u27e84\u27e9, #240\u27e85\u27e9, and #284\u27e86\u27e9.\n> The source code for the latest smallvec 1.x.y release can be found on the v1 branch\u27e87\u27e9. Bug fixes for smallvec 1 should be based on that branch, while new feature development should go on the v2 branch.\n## About smallvec\nDocumentation\u27e88\u27e9\nRelease notes\u27e89\u27e9\n\"Small vector\" optimization for Rust: store up to a small number of items on the stack\n## Example\n```\n``use` `smallvec`::````{`SmallVec`,` smallvec```}```;`\n  \n``//` This SmallVec can hold up to 4 items on the stack:`\n`let` `mut` v`:` `SmallVec`<``i32`, 4`>`` `=` `smallvec!``[``1``,` `2``,` `3``,` `4``]``;`\n``//` It will automatically move its contents to the heap if`\n``//` contains more than four items:`\nv`.``push``(``5``)``;`\n``//` SmallVec points to a slice, so you can use normal slice`\n``//` indexing and other methods to access its contents:`\nv`[``0``]` `=` v`[``1``]` `+` v`[``2``]``;`\nv`.``sort``(``)``;`\n`\n```\n\n#### Dependencies\n~210KB \n  *  optional \u27e810\u27e9 bytes\u27e811\u27e9\n  *  optional \u27e812\u27e9 malloc_size_of\u27e813\u27e9\n  *  optional \u27e814\u27e9 serde\u27e815\u27e9\n\n\n  * dev  bincode\u27e816\u27e9\n\n\n#### Other features\u27e817\u27e9\n  * extract_if\u27e818\u27e9\n  * may_dangle\u27e819\u27e9\n  * specialization\u27e820\u27e9\n  * std\u27e821\u27e9\n\n\n  *[SLoC]: Lines of code, excluding comments\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/smallvec/versions: 55 releases\n\u27e82\u27e9 https://lib.rs/data-structures: Rust implementations of particular ways of organizing data suited for specific purposes. - Data structures\n\u27e83\u27e9 https://lib.rs/crates/smallvec/rev: **61,326** crates (1,878 directly)\n\u27e84\u27e9 https://github.com/servo/rust-smallvec/issues/183: #183\n\u27e85\u27e9 https://github.com/servo/rust-smallvec/issues/240: #240\n\u27e86\u27e9 https://github.com/servo/rust-smallvec/issues/284: #284\n\u27e87\u27e9 https://github.com/servo/rust-smallvec/tree/v1: v1 branch\n\u27e88\u27e9 https://docs.rs/smallvec/: Documentation\n\u27e89\u27e9 https://github.com/servo/rust-smallvec/releases: Release notes\n\u27e810\u27e9 https://lib.rs/crates/smallvec/features#feature-bytes: bytes is optional feature -  optional \n\u27e811\u27e9 https://lib.rs/crates/bytes: 1 - bytes\n\u27e812\u27e9 https://lib.rs/crates/smallvec/features#feature-malloc_size_of: malloc_size_of is optional feature -  optional \n\u27e813\u27e9 https://lib.rs/crates/malloc_size_of: 0.1.1 - malloc_size_of\n\u27e814\u27e9 https://lib.rs/crates/smallvec/features#feature-serde: serde is optional feature -  optional \n\u27e815\u27e9 https://lib.rs/crates/serde: 1 - serde\n\u27e816\u27e9 https://lib.rs/crates/bincode: 1.0.1 - bincode\n\u27e817\u27e9 https://lib.rs/crates/smallvec/features: Other features\n\u27e818\u27e9 https://lib.rs/crates/smallvec/features#feature-extract_if: extract_if\n\u27e819\u27e9 https://lib.rs/crates/smallvec/features#feature-may_dangle: may_dangle\n\u27e820\u27e9 https://lib.rs/crates/smallvec/features#feature-specialization: specialization\n\u27e821\u27e9 https://lib.rs/crates/smallvec/features#feature-std: std\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 3278,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "114645.0231884"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpf4cnbc79/smallvec-2.0.0-alpha.11#smallvec@2.0.0-alpha.11",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpf4cnbc79\\smallvec-2.0.0-alpha.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpf4cnbc79\\smallvec-2.0.0-alpha.11\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpf4cnbc79\\smallvec-2.0.0-alpha.11\\target\\debug\\deps\\libsmallvec-c8b0888b32092aea.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpf4cnbc79/smallvec-2.0.0-alpha.11#smallvec@2.0.0-alpha.11",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpf4cnbc79\\smallvec-2.0.0-alpha.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpf4cnbc79\\smallvec-2.0.0-alpha.11\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpf4cnbc79\\smallvec-2.0.0-alpha.11\\target\\debug\\deps\\libsmallvec-52530bfec8aa5e26.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 10
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {}
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "smallvec",
          "version": "2.0.0-alpha.11",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/smallvec/latest/smallvec/all.html \"show sidebar\")\n# Crate smallvecCopy item path\n[Settings](https://docs.rs/smallvec/latest/settings.html)\n[Help](https://docs.rs/smallvec/latest/help.html)\nSummary[Source](https://docs.rs/smallvec/latest/src/smallvec/lib.rs.html#7-2605)\nExpand description\nSmall vectors in various sizes. These store a certain number of elements inline, and fall back to the heap for larger allocations. This can be a useful optimization for improving cache locality and reducing allocator traffic for workloads that fit within the inline buffer.\n### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#no_std-support)`no_std` support\nBy default, `smallvec` does not depend on `std`. However, the optional `write` feature implements the `std::io::Write` trait for vectors of `u8`. When this feature is enabled, `smallvec` depends on `std`.\n### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#optional-features)Optional features\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#serde)`serde`\nWhen this optional dependency is enabled, `SmallVec` implements the `serde::Serialize` and `serde::Deserialize` traits.\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#write)`write`\nWhen this feature is enabled, `SmallVec<[u8; _]>` implements the `std::io::Write` trait. This feature is not compatible with `#![no_std]` programs.\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#union)`union`\n**This feature requires Rust 1.49.**\nWhen the `union` feature is enabled `smallvec` will track its state (inline or spilled) without the use of an enum tag, reducing the size of the `smallvec` by one machine word. This means that there is potentially no space overhead compared to `Vec`. Note that `smallvec` can still be larger than `Vec` if the inline buffer is larger than two machine words.\nTo use this feature add `features = [\"union\"]` in the `smallvec` section of Cargo.toml. Note that this feature requires Rust 1.49.\nTracking issue: [rust-lang/rust#55149](https://github.com/rust-lang/rust/issues/55149)\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#const_generics)`const_generics`\n**This feature requires Rust 1.51.**\nWhen this feature is enabled, `SmallVec` works with any arrays of any size, not just a fixed list of sizes.\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#const_new)`const_new`\n**This feature requires Rust 1.51.**\nThis feature exposes the functions [`SmallVec::new_const`](https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html#method.new_const \"associated function smallvec::SmallVec::new_const\"), [`SmallVec::from_const`](https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html#method.from_const \"associated function smallvec::SmallVec::from_const\"), and [`smallvec_inline`](https://docs.rs/smallvec/latest/smallvec/macro.smallvec_inline.html \"macro smallvec::smallvec_inline\") which enables the `SmallVec` to be initialized from a const context. For details, see the [Rust Reference](https://doc.rust-lang.org/reference/const_eval.html#const-functions).\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#drain_filter)`drain_filter`\n**This feature is unstable.** It may change to match the unstable `drain_filter` method in libstd.\nEnables the `drain_filter` method, which produces an iterator that calls a user-provided closure to determine which elements of the vector to remove and yield from the iterator.\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#drain_keep_rest)`drain_keep_rest`\n**This feature is unstable.** It may change to match the unstable `drain_keep_rest` method in libstd.\nEnables the `DrainFilter::keep_rest` method.\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#specialization)`specialization`\n**This feature is unstable and requires a nightly build of the Rust toolchain.**\nWhen this feature is enabled, `SmallVec::from(slice)` has improved performance for slices of `Copy` types. (Without this feature, you can use `SmallVec::from_slice` to get optimal performance for `Copy` types.)\nTracking issue: [rust-lang/rust#31844](https://github.com/rust-lang/rust/issues/31844)\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#may_dangle)`may_dangle`\n**This feature is unstable and requires a nightly build of the Rust toolchain.**\nThis feature makes the Rust compiler less strict about use of vectors that contain borrowed references. For details, see the [Rustonomicon](https://doc.rust-lang.org/1.42.0/nomicon/dropck.html#an-escape-hatch).\nTracking issue: [rust-lang/rust#34761](https://github.com/rust-lang/rust/issues/34761)\n## Macros[\u00a7](https://docs.rs/smallvec/latest/smallvec/#macros)\n\n[smallvec](https://docs.rs/smallvec/latest/smallvec/macro.smallvec.html \"macro smallvec::smallvec\")\n    Creates a [`SmallVec`](https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html \"struct smallvec::SmallVec\") containing the arguments.\n\n[smallvec_inline](https://docs.rs/smallvec/latest/smallvec/macro.smallvec_inline.html \"macro smallvec::smallvec_inline\")`const_new`\n    Creates an inline [`SmallVec`](https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html \"struct smallvec::SmallVec\") containing the arguments. This macro is enabled by the feature `const_new`.\n## Structs[\u00a7](https://docs.rs/smallvec/latest/smallvec/#structs)\n\n[Drain](https://docs.rs/smallvec/latest/smallvec/struct.Drain.html \"struct smallvec::Drain\")\n    An iterator that removes the items from a `SmallVec` and yields them by value.\n\n[DrainFilter](https://docs.rs/smallvec/latest/smallvec/struct.DrainFilter.html \"struct smallvec::DrainFilter\")\n    An iterator which uses a closure to determine if an element should be removed.\n\n[IntoIter](https://docs.rs/smallvec/latest/smallvec/struct.IntoIter.html \"struct smallvec::IntoIter\")\n    An iterator that consumes a `SmallVec` and yields its items by value.\n\n[SmallVec](https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html \"struct smallvec::SmallVec\")\n    A `Vec`-like container that can store a small number of elements inline.\n## Enums[\u00a7](https://docs.rs/smallvec/latest/smallvec/#enums)\n\n[CollectionAllocErr](https://docs.rs/smallvec/latest/smallvec/enum.CollectionAllocErr.html \"enum smallvec::CollectionAllocErr\")\n    Error type for APIs with fallible heap allocation\n## Traits[\u00a7](https://docs.rs/smallvec/latest/smallvec/#traits)\n\n[Array](https://docs.rs/smallvec/latest/smallvec/trait.Array.html \"trait smallvec::Array\")\n    Types that can be used as the backing store for a [`SmallVec`](https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html \"struct smallvec::SmallVec\").\n\n[ToSmallVec](https://docs.rs/smallvec/latest/smallvec/trait.ToSmallVec.html \"trait smallvec::ToSmallVec\")\n    Convenience trait for constructing a `SmallVec`\n",
            "markdown_with_citations": "[](https://docs.rs/smallvec/latest/smallvec/all.html \"show sidebar\")\n# Crate smallvecCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nSmall vectors in various sizes. These store a certain number of elements inline, and fall back to the heap for larger allocations. This can be a useful optimization for improving cache locality and reducing allocator traffic for workloads that fit within the inline buffer.\n### \u00a7\u27e84\u27e9`no_std` support\nBy default, `smallvec` does not depend on `std`. However, the optional `write` feature implements the `std::io::Write` trait for vectors of `u8`. When this feature is enabled, `smallvec` depends on `std`.\n### \u00a7\u27e85\u27e9Optional features\n#### \u00a7\u27e86\u27e9`serde`\nWhen this optional dependency is enabled, `SmallVec` implements the `serde::Serialize` and `serde::Deserialize` traits.\n#### \u00a7\u27e87\u27e9`write`\nWhen this feature is enabled, `SmallVec<[u8; _]>` implements the `std::io::Write` trait. This feature is not compatible with `#![no_std]` programs.\n#### \u00a7\u27e88\u27e9`union`\n**This feature requires Rust 1.49.**\nWhen the `union` feature is enabled `smallvec` will track its state (inline or spilled) without the use of an enum tag, reducing the size of the `smallvec` by one machine word. This means that there is potentially no space overhead compared to `Vec`. Note that `smallvec` can still be larger than `Vec` if the inline buffer is larger than two machine words.\nTo use this feature add `features = [\"union\"]` in the `smallvec` section of Cargo.toml. Note that this feature requires Rust 1.49.\nTracking issue: rust-lang/rust#55149\u27e89\u27e9\n#### \u00a7\u27e810\u27e9`const_generics`\n**This feature requires Rust 1.51.**\nWhen this feature is enabled, `SmallVec` works with any arrays of any size, not just a fixed list of sizes.\n#### \u00a7\u27e811\u27e9`const_new`\n**This feature requires Rust 1.51.**\nThis feature exposes the functions `SmallVec::new_const`\u27e812\u27e9, `SmallVec::from_const`\u27e813\u27e9, and `smallvec_inline`\u27e814\u27e9 which enables the `SmallVec` to be initialized from a const context. For details, see the Rust Reference\u27e815\u27e9.\n#### \u00a7\u27e816\u27e9`drain_filter`\n**This feature is unstable.** It may change to match the unstable `drain_filter` method in libstd.\nEnables the `drain_filter` method, which produces an iterator that calls a user-provided closure to determine which elements of the vector to remove and yield from the iterator.\n#### \u00a7\u27e817\u27e9`drain_keep_rest`\n**This feature is unstable.** It may change to match the unstable `drain_keep_rest` method in libstd.\nEnables the `DrainFilter::keep_rest` method.\n#### \u00a7\u27e818\u27e9`specialization`\n**This feature is unstable and requires a nightly build of the Rust toolchain.**\nWhen this feature is enabled, `SmallVec::from(slice)` has improved performance for slices of `Copy` types. (Without this feature, you can use `SmallVec::from_slice` to get optimal performance for `Copy` types.)\nTracking issue: rust-lang/rust#31844\u27e819\u27e9\n#### \u00a7\u27e820\u27e9`may_dangle`\n**This feature is unstable and requires a nightly build of the Rust toolchain.**\nThis feature makes the Rust compiler less strict about use of vectors that contain borrowed references. For details, see the Rustonomicon\u27e821\u27e9.\nTracking issue: rust-lang/rust#34761\u27e822\u27e9\n## Macros\u00a7\u27e823\u27e9\n\nsmallvec\u27e824\u27e9\n    Creates a `SmallVec`\u27e825\u27e9 containing the arguments.\n\nsmallvec_inline\u27e814\u27e9`const_new`\n    Creates an inline `SmallVec`\u27e825\u27e9 containing the arguments. This macro is enabled by the feature `const_new`.\n## Structs\u00a7\u27e826\u27e9\n\nDrain\u27e827\u27e9\n    An iterator that removes the items from a `SmallVec` and yields them by value.\n\nDrainFilter\u27e828\u27e9\n    An iterator which uses a closure to determine if an element should be removed.\n\nIntoIter\u27e829\u27e9\n    An iterator that consumes a `SmallVec` and yields its items by value.\n\nSmallVec\u27e825\u27e9\n    A `Vec`-like container that can store a small number of elements inline.\n## Enums\u00a7\u27e830\u27e9\n\nCollectionAllocErr\u27e831\u27e9\n    Error type for APIs with fallible heap allocation\n## Traits\u00a7\u27e832\u27e9\n\nArray\u27e833\u27e9\n    Types that can be used as the backing store for a `SmallVec`\u27e825\u27e9.\n\nToSmallVec\u27e834\u27e9\n    Convenience trait for constructing a `SmallVec`\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/smallvec/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/smallvec/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/smallvec/latest/src/smallvec/lib.rs.html#7-2605: Source\n\u27e84\u27e9 https://docs.rs/smallvec/latest/smallvec/#no_std-support: \u00a7\n\u27e85\u27e9 https://docs.rs/smallvec/latest/smallvec/#optional-features: \u00a7\n\u27e86\u27e9 https://docs.rs/smallvec/latest/smallvec/#serde: \u00a7\n\u27e87\u27e9 https://docs.rs/smallvec/latest/smallvec/#write: \u00a7\n\u27e88\u27e9 https://docs.rs/smallvec/latest/smallvec/#union: \u00a7\n\u27e89\u27e9 https://github.com/rust-lang/rust/issues/55149: rust-lang/rust#55149\n\u27e810\u27e9 https://docs.rs/smallvec/latest/smallvec/#const_generics: \u00a7\n\u27e811\u27e9 https://docs.rs/smallvec/latest/smallvec/#const_new: \u00a7\n\u27e812\u27e9 https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html#method.new_const: associated function smallvec::SmallVec::new_const - `SmallVec::new_const`\n\u27e813\u27e9 https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html#method.from_const: associated function smallvec::SmallVec::from_const - `SmallVec::from_const`\n\u27e814\u27e9 https://docs.rs/smallvec/latest/smallvec/macro.smallvec_inline.html: macro smallvec::smallvec_inline - `smallvec_inline`\n\u27e815\u27e9 https://doc.rust-lang.org/reference/const_eval.html#const-functions: Rust Reference\n\u27e816\u27e9 https://docs.rs/smallvec/latest/smallvec/#drain_filter: \u00a7\n\u27e817\u27e9 https://docs.rs/smallvec/latest/smallvec/#drain_keep_rest: \u00a7\n\u27e818\u27e9 https://docs.rs/smallvec/latest/smallvec/#specialization: \u00a7\n\u27e819\u27e9 https://github.com/rust-lang/rust/issues/31844: rust-lang/rust#31844\n\u27e820\u27e9 https://docs.rs/smallvec/latest/smallvec/#may_dangle: \u00a7\n\u27e821\u27e9 https://doc.rust-lang.org/1.42.0/nomicon/dropck.html#an-escape-hatch: Rustonomicon\n\u27e822\u27e9 https://github.com/rust-lang/rust/issues/34761: rust-lang/rust#34761\n\u27e823\u27e9 https://docs.rs/smallvec/latest/smallvec/#macros: \u00a7\n\u27e824\u27e9 https://docs.rs/smallvec/latest/smallvec/macro.smallvec.html: macro smallvec::smallvec - smallvec\n\u27e825\u27e9 https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html: struct smallvec::SmallVec - `SmallVec`\n\u27e826\u27e9 https://docs.rs/smallvec/latest/smallvec/#structs: \u00a7\n\u27e827\u27e9 https://docs.rs/smallvec/latest/smallvec/struct.Drain.html: struct smallvec::Drain - Drain\n\u27e828\u27e9 https://docs.rs/smallvec/latest/smallvec/struct.DrainFilter.html: struct smallvec::DrainFilter - DrainFilter\n\u27e829\u27e9 https://docs.rs/smallvec/latest/smallvec/struct.IntoIter.html: struct smallvec::IntoIter - IntoIter\n\u27e830\u27e9 https://docs.rs/smallvec/latest/smallvec/#enums: \u00a7\n\u27e831\u27e9 https://docs.rs/smallvec/latest/smallvec/enum.CollectionAllocErr.html: enum smallvec::CollectionAllocErr - CollectionAllocErr\n\u27e832\u27e9 https://docs.rs/smallvec/latest/smallvec/#traits: \u00a7\n\u27e833\u27e9 https://docs.rs/smallvec/latest/smallvec/trait.Array.html: trait smallvec::Array - Array\n\u27e834\u27e9 https://docs.rs/smallvec/latest/smallvec/trait.ToSmallVec.html: trait smallvec::ToSmallVec - ToSmallVec\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "smallvec",
          "version": "2.0.0-alpha.11",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/smallvec/latest/smallvec/all.html \"show sidebar\")\n# Crate smallvecCopy item path\n[Settings](https://docs.rs/smallvec/latest/settings.html)\n[Help](https://docs.rs/smallvec/latest/help.html)\nSummary[Source](https://docs.rs/smallvec/latest/src/smallvec/lib.rs.html#7-2605)\nExpand description\nSmall vectors in various sizes. These store a certain number of elements inline, and fall back to the heap for larger allocations. This can be a useful optimization for improving cache locality and reducing allocator traffic for workloads that fit within the inline buffer.\n### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#no_std-support)`no_std` support\nBy default, `smallvec` does not depend on `std`. However, the optional `write` feature implements the `std::io::Write` trait for vectors of `u8`. When this feature is enabled, `smallvec` depends on `std`.\n### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#optional-features)Optional features\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#serde)`serde`\nWhen this optional dependency is enabled, `SmallVec` implements the `serde::Serialize` and `serde::Deserialize` traits.\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#write)`write`\nWhen this feature is enabled, `SmallVec<[u8; _]>` implements the `std::io::Write` trait. This feature is not compatible with `#![no_std]` programs.\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#union)`union`\n**This feature requires Rust 1.49.**\nWhen the `union` feature is enabled `smallvec` will track its state (inline or spilled) without the use of an enum tag, reducing the size of the `smallvec` by one machine word. This means that there is potentially no space overhead compared to `Vec`. Note that `smallvec` can still be larger than `Vec` if the inline buffer is larger than two machine words.\nTo use this feature add `features = [\"union\"]` in the `smallvec` section of Cargo.toml. Note that this feature requires Rust 1.49.\nTracking issue: [rust-lang/rust#55149](https://github.com/rust-lang/rust/issues/55149)\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#const_generics)`const_generics`\n**This feature requires Rust 1.51.**\nWhen this feature is enabled, `SmallVec` works with any arrays of any size, not just a fixed list of sizes.\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#const_new)`const_new`\n**This feature requires Rust 1.51.**\nThis feature exposes the functions [`SmallVec::new_const`](https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html#method.new_const \"associated function smallvec::SmallVec::new_const\"), [`SmallVec::from_const`](https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html#method.from_const \"associated function smallvec::SmallVec::from_const\"), and [`smallvec_inline`](https://docs.rs/smallvec/latest/smallvec/macro.smallvec_inline.html \"macro smallvec::smallvec_inline\") which enables the `SmallVec` to be initialized from a const context. For details, see the [Rust Reference](https://doc.rust-lang.org/reference/const_eval.html#const-functions).\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#drain_filter)`drain_filter`\n**This feature is unstable.** It may change to match the unstable `drain_filter` method in libstd.\nEnables the `drain_filter` method, which produces an iterator that calls a user-provided closure to determine which elements of the vector to remove and yield from the iterator.\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#drain_keep_rest)`drain_keep_rest`\n**This feature is unstable.** It may change to match the unstable `drain_keep_rest` method in libstd.\nEnables the `DrainFilter::keep_rest` method.\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#specialization)`specialization`\n**This feature is unstable and requires a nightly build of the Rust toolchain.**\nWhen this feature is enabled, `SmallVec::from(slice)` has improved performance for slices of `Copy` types. (Without this feature, you can use `SmallVec::from_slice` to get optimal performance for `Copy` types.)\nTracking issue: [rust-lang/rust#31844](https://github.com/rust-lang/rust/issues/31844)\n#### [\u00a7](https://docs.rs/smallvec/latest/smallvec/#may_dangle)`may_dangle`\n**This feature is unstable and requires a nightly build of the Rust toolchain.**\nThis feature makes the Rust compiler less strict about use of vectors that contain borrowed references. For details, see the [Rustonomicon](https://doc.rust-lang.org/1.42.0/nomicon/dropck.html#an-escape-hatch).\nTracking issue: [rust-lang/rust#34761](https://github.com/rust-lang/rust/issues/34761)\n## Macros[\u00a7](https://docs.rs/smallvec/latest/smallvec/#macros)\n\n[smallvec](https://docs.rs/smallvec/latest/smallvec/macro.smallvec.html \"macro smallvec::smallvec\")\n    Creates a [`SmallVec`](https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html \"struct smallvec::SmallVec\") containing the arguments.\n\n[smallvec_inline](https://docs.rs/smallvec/latest/smallvec/macro.smallvec_inline.html \"macro smallvec::smallvec_inline\")`const_new`\n    Creates an inline [`SmallVec`](https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html \"struct smallvec::SmallVec\") containing the arguments. This macro is enabled by the feature `const_new`.\n## Structs[\u00a7](https://docs.rs/smallvec/latest/smallvec/#structs)\n\n[Drain](https://docs.rs/smallvec/latest/smallvec/struct.Drain.html \"struct smallvec::Drain\")\n    An iterator that removes the items from a `SmallVec` and yields them by value.\n\n[DrainFilter](https://docs.rs/smallvec/latest/smallvec/struct.DrainFilter.html \"struct smallvec::DrainFilter\")\n    An iterator which uses a closure to determine if an element should be removed.\n\n[IntoIter](https://docs.rs/smallvec/latest/smallvec/struct.IntoIter.html \"struct smallvec::IntoIter\")\n    An iterator that consumes a `SmallVec` and yields its items by value.\n\n[SmallVec](https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html \"struct smallvec::SmallVec\")\n    A `Vec`-like container that can store a small number of elements inline.\n## Enums[\u00a7](https://docs.rs/smallvec/latest/smallvec/#enums)\n\n[CollectionAllocErr](https://docs.rs/smallvec/latest/smallvec/enum.CollectionAllocErr.html \"enum smallvec::CollectionAllocErr\")\n    Error type for APIs with fallible heap allocation\n## Traits[\u00a7](https://docs.rs/smallvec/latest/smallvec/#traits)\n\n[Array](https://docs.rs/smallvec/latest/smallvec/trait.Array.html \"trait smallvec::Array\")\n    Types that can be used as the backing store for a [`SmallVec`](https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html \"struct smallvec::SmallVec\").\n\n[ToSmallVec](https://docs.rs/smallvec/latest/smallvec/trait.ToSmallVec.html \"trait smallvec::ToSmallVec\")\n    Convenience trait for constructing a `SmallVec`\n",
            "markdown_with_citations": "[](https://docs.rs/smallvec/latest/smallvec/all.html \"show sidebar\")\n# Crate smallvecCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nSmall vectors in various sizes. These store a certain number of elements inline, and fall back to the heap for larger allocations. This can be a useful optimization for improving cache locality and reducing allocator traffic for workloads that fit within the inline buffer.\n### \u00a7\u27e84\u27e9`no_std` support\nBy default, `smallvec` does not depend on `std`. However, the optional `write` feature implements the `std::io::Write` trait for vectors of `u8`. When this feature is enabled, `smallvec` depends on `std`.\n### \u00a7\u27e85\u27e9Optional features\n#### \u00a7\u27e86\u27e9`serde`\nWhen this optional dependency is enabled, `SmallVec` implements the `serde::Serialize` and `serde::Deserialize` traits.\n#### \u00a7\u27e87\u27e9`write`\nWhen this feature is enabled, `SmallVec<[u8; _]>` implements the `std::io::Write` trait. This feature is not compatible with `#![no_std]` programs.\n#### \u00a7\u27e88\u27e9`union`\n**This feature requires Rust 1.49.**\nWhen the `union` feature is enabled `smallvec` will track its state (inline or spilled) without the use of an enum tag, reducing the size of the `smallvec` by one machine word. This means that there is potentially no space overhead compared to `Vec`. Note that `smallvec` can still be larger than `Vec` if the inline buffer is larger than two machine words.\nTo use this feature add `features = [\"union\"]` in the `smallvec` section of Cargo.toml. Note that this feature requires Rust 1.49.\nTracking issue: rust-lang/rust#55149\u27e89\u27e9\n#### \u00a7\u27e810\u27e9`const_generics`\n**This feature requires Rust 1.51.**\nWhen this feature is enabled, `SmallVec` works with any arrays of any size, not just a fixed list of sizes.\n#### \u00a7\u27e811\u27e9`const_new`\n**This feature requires Rust 1.51.**\nThis feature exposes the functions `SmallVec::new_const`\u27e812\u27e9, `SmallVec::from_const`\u27e813\u27e9, and `smallvec_inline`\u27e814\u27e9 which enables the `SmallVec` to be initialized from a const context. For details, see the Rust Reference\u27e815\u27e9.\n#### \u00a7\u27e816\u27e9`drain_filter`\n**This feature is unstable.** It may change to match the unstable `drain_filter` method in libstd.\nEnables the `drain_filter` method, which produces an iterator that calls a user-provided closure to determine which elements of the vector to remove and yield from the iterator.\n#### \u00a7\u27e817\u27e9`drain_keep_rest`\n**This feature is unstable.** It may change to match the unstable `drain_keep_rest` method in libstd.\nEnables the `DrainFilter::keep_rest` method.\n#### \u00a7\u27e818\u27e9`specialization`\n**This feature is unstable and requires a nightly build of the Rust toolchain.**\nWhen this feature is enabled, `SmallVec::from(slice)` has improved performance for slices of `Copy` types. (Without this feature, you can use `SmallVec::from_slice` to get optimal performance for `Copy` types.)\nTracking issue: rust-lang/rust#31844\u27e819\u27e9\n#### \u00a7\u27e820\u27e9`may_dangle`\n**This feature is unstable and requires a nightly build of the Rust toolchain.**\nThis feature makes the Rust compiler less strict about use of vectors that contain borrowed references. For details, see the Rustonomicon\u27e821\u27e9.\nTracking issue: rust-lang/rust#34761\u27e822\u27e9\n## Macros\u00a7\u27e823\u27e9\n\nsmallvec\u27e824\u27e9\n    Creates a `SmallVec`\u27e825\u27e9 containing the arguments.\n\nsmallvec_inline\u27e814\u27e9`const_new`\n    Creates an inline `SmallVec`\u27e825\u27e9 containing the arguments. This macro is enabled by the feature `const_new`.\n## Structs\u00a7\u27e826\u27e9\n\nDrain\u27e827\u27e9\n    An iterator that removes the items from a `SmallVec` and yields them by value.\n\nDrainFilter\u27e828\u27e9\n    An iterator which uses a closure to determine if an element should be removed.\n\nIntoIter\u27e829\u27e9\n    An iterator that consumes a `SmallVec` and yields its items by value.\n\nSmallVec\u27e825\u27e9\n    A `Vec`-like container that can store a small number of elements inline.\n## Enums\u00a7\u27e830\u27e9\n\nCollectionAllocErr\u27e831\u27e9\n    Error type for APIs with fallible heap allocation\n## Traits\u00a7\u27e832\u27e9\n\nArray\u27e833\u27e9\n    Types that can be used as the backing store for a `SmallVec`\u27e825\u27e9.\n\nToSmallVec\u27e834\u27e9\n    Convenience trait for constructing a `SmallVec`\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/smallvec/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/smallvec/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/smallvec/latest/src/smallvec/lib.rs.html#7-2605: Source\n\u27e84\u27e9 https://docs.rs/smallvec/latest/smallvec/#no_std-support: \u00a7\n\u27e85\u27e9 https://docs.rs/smallvec/latest/smallvec/#optional-features: \u00a7\n\u27e86\u27e9 https://docs.rs/smallvec/latest/smallvec/#serde: \u00a7\n\u27e87\u27e9 https://docs.rs/smallvec/latest/smallvec/#write: \u00a7\n\u27e88\u27e9 https://docs.rs/smallvec/latest/smallvec/#union: \u00a7\n\u27e89\u27e9 https://github.com/rust-lang/rust/issues/55149: rust-lang/rust#55149\n\u27e810\u27e9 https://docs.rs/smallvec/latest/smallvec/#const_generics: \u00a7\n\u27e811\u27e9 https://docs.rs/smallvec/latest/smallvec/#const_new: \u00a7\n\u27e812\u27e9 https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html#method.new_const: associated function smallvec::SmallVec::new_const - `SmallVec::new_const`\n\u27e813\u27e9 https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html#method.from_const: associated function smallvec::SmallVec::from_const - `SmallVec::from_const`\n\u27e814\u27e9 https://docs.rs/smallvec/latest/smallvec/macro.smallvec_inline.html: macro smallvec::smallvec_inline - `smallvec_inline`\n\u27e815\u27e9 https://doc.rust-lang.org/reference/const_eval.html#const-functions: Rust Reference\n\u27e816\u27e9 https://docs.rs/smallvec/latest/smallvec/#drain_filter: \u00a7\n\u27e817\u27e9 https://docs.rs/smallvec/latest/smallvec/#drain_keep_rest: \u00a7\n\u27e818\u27e9 https://docs.rs/smallvec/latest/smallvec/#specialization: \u00a7\n\u27e819\u27e9 https://github.com/rust-lang/rust/issues/31844: rust-lang/rust#31844\n\u27e820\u27e9 https://docs.rs/smallvec/latest/smallvec/#may_dangle: \u00a7\n\u27e821\u27e9 https://doc.rust-lang.org/1.42.0/nomicon/dropck.html#an-escape-hatch: Rustonomicon\n\u27e822\u27e9 https://github.com/rust-lang/rust/issues/34761: rust-lang/rust#34761\n\u27e823\u27e9 https://docs.rs/smallvec/latest/smallvec/#macros: \u00a7\n\u27e824\u27e9 https://docs.rs/smallvec/latest/smallvec/macro.smallvec.html: macro smallvec::smallvec - smallvec\n\u27e825\u27e9 https://docs.rs/smallvec/latest/smallvec/struct.SmallVec.html: struct smallvec::SmallVec - `SmallVec`\n\u27e826\u27e9 https://docs.rs/smallvec/latest/smallvec/#structs: \u00a7\n\u27e827\u27e9 https://docs.rs/smallvec/latest/smallvec/struct.Drain.html: struct smallvec::Drain - Drain\n\u27e828\u27e9 https://docs.rs/smallvec/latest/smallvec/struct.DrainFilter.html: struct smallvec::DrainFilter - DrainFilter\n\u27e829\u27e9 https://docs.rs/smallvec/latest/smallvec/struct.IntoIter.html: struct smallvec::IntoIter - IntoIter\n\u27e830\u27e9 https://docs.rs/smallvec/latest/smallvec/#enums: \u00a7\n\u27e831\u27e9 https://docs.rs/smallvec/latest/smallvec/enum.CollectionAllocErr.html: enum smallvec::CollectionAllocErr - CollectionAllocErr\n\u27e832\u27e9 https://docs.rs/smallvec/latest/smallvec/#traits: \u00a7\n\u27e833\u27e9 https://docs.rs/smallvec/latest/smallvec/trait.Array.html: trait smallvec::Array - Array\n\u27e834\u27e9 https://docs.rs/smallvec/latest/smallvec/trait.ToSmallVec.html: trait smallvec::ToSmallVec - ToSmallVec\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `smallvec` crate provides a `Vec`-like container optimized for storing a small number of elements inline, falling back to heap allocation for larger sizes. It supports `no_std` environments and offers optional features like `serde` integration, `std::io::Write` for `u8` vectors, and advanced capabilities such as `const_generics` for flexible array sizes and `union` for reduced memory overhead. Additional unstable features include `drain_filter`, `specialization`, and `may_dangle` for enhanced functionality in nightly Rust builds.",
          "feature_summary": null,
          "use_case": "Utilities",
          "score": 6.0,
          "factual_counterfactual": "### Pair 1: `no_std` Support\n\u2705 **Factual:** The `smallvec` crate supports `no_std` environments by default, but enabling the `write` feature introduces a dependency on `std`, making it incompatible with `no_std` programs.  \n\u274c **Counterfactual:** The `smallvec` crate always requires the `std` library, even when used in `no_std` environments.\n\n---\n\n### Pair 2: Inline Buffer Optimization\n\u2705 **Factual:** `SmallVec` stores a certain number of elements inline to optimize cache locality and reduce heap allocations, falling back to heap storage only when the inline buffer is exceeded.  \n\u274c **Counterfactual:** `SmallVec` always allocates memory on the heap, regardless of the number of elements stored.\n\n---\n\n### Pair 3: `union` Feature\n\u2705 **Factual:** The `union` feature in `smallvec` reduces the size of `SmallVec` by eliminating the enum tag used to track its state, but requires Rust 1.49 or later.  \n\u274c **Counterfactual:** The `union` feature increases the size of `SmallVec` by adding additional metadata for state tracking, making it larger than `Vec` in all cases.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-f58161f1-74c5bc6d-1751260853",
      "timestamp": "2025-06-30T05:20:53.945642+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]