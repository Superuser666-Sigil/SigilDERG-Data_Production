[
  {
    "execution_id": "exec-f5f69168-29598d30-1751264554",
    "timestamp": "2025-06-30T06:22:34.887807+00:00",
    "sacred_chain": {
      "input_data": "rsa",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'rsa' -> 'rsa'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "rsa",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/rsa",
            "title": "rsa v0.9.8",
            "content": {
              "raw_markdown": "#  rsa v0.9.8\nPure Rust RSA implementation \n  * [ #crypto ](https://crates.io/keywords/crypto)\n  * [ #encryption ](https://crates.io/keywords/encryption)\n  * [ #rsa ](https://crates.io/keywords/rsa)\n  * [ #security ](https://crates.io/keywords/security)\n\n\n  * [ Readme ](https://crates.io/crates/rsa)\n  * [ 45 Versions ](https://crates.io/crates/rsa/versions)\n  * [ Dependencies ](https://crates.io/crates/rsa/dependencies)\n  * [ Dependents ](https://crates.io/crates/rsa/reverse_dependencies)\n\n\n## Metadata\n4 months ago \nv1.65.0 \n[ MIT ](https://choosealicense.com/licenses/mit) OR [ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0)\n83.7 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add rsa\nOr add the following line to your Cargo.toml:\nrsa = \"0.9.8\"\n## Documentation\n[ docs.rs/rsa ](https://docs.rs/rsa)\n## Repository\n[ github.com/RustCrypto/RSA ](https://github.com/RustCrypto/RSA)\n## Owners\n## Categories\n  * [Cryptography](https://crates.io/categories/cryptography)\n\n\n[ Report crate ](https://crates.io/support?crate=rsa&inquire=crate-violation)\n### Stats Overview\n72,845,717 Downloads all time\n45 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  rsa v0.9.8\nPure Rust RSA implementation \n  *  #crypto \u27e81\u27e9\n  *  #encryption \u27e82\u27e9\n  *  #rsa \u27e83\u27e9\n  *  #security \u27e84\u27e9\n\n\n  *  Readme \u27e85\u27e9\n  *  45 Versions \u27e86\u27e9\n  *  Dependencies \u27e87\u27e9\n  *  Dependents \u27e88\u27e9\n\n\n## Metadata\n4 months ago \nv1.65.0 \n MIT \u27e89\u27e9 OR  Apache-2.0 \u27e810\u27e9\n83.7 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add rsa\nOr add the following line to your Cargo.toml:\nrsa = \"0.9.8\"\n## Documentation\n docs.rs/rsa \u27e811\u27e9\n## Repository\n github.com/RustCrypto/RSA \u27e812\u27e9\n## Owners\n## Categories\n  * Cryptography\u27e813\u27e9\n\n\n Report crate \u27e814\u27e9\n### Stats Overview\n72,845,717 Downloads all time\n45 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/crypto:  #crypto \n\u27e82\u27e9 https://crates.io/keywords/encryption:  #encryption \n\u27e83\u27e9 https://crates.io/keywords/rsa:  #rsa \n\u27e84\u27e9 https://crates.io/keywords/security:  #security \n\u27e85\u27e9 https://crates.io/crates/rsa:  Readme \n\u27e86\u27e9 https://crates.io/crates/rsa/versions:  45 Versions \n\u27e87\u27e9 https://crates.io/crates/rsa/dependencies:  Dependencies \n\u27e88\u27e9 https://crates.io/crates/rsa/reverse_dependencies:  Dependents \n\u27e89\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e810\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e811\u27e9 https://docs.rs/rsa:  docs.rs/rsa \n\u27e812\u27e9 https://github.com/RustCrypto/RSA:  github.com/RustCrypto/RSA \n\u27e813\u27e9 https://crates.io/categories/cryptography: Cryptography\n\u27e814\u27e9 https://crates.io/support?crate=rsa&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1267,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "118344.3085069"
          },
          "docs_rs": {
            "url": "https://docs.rs/rsa",
            "title": "Crate rsaCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/rsa/latest/rsa/all.html \"show sidebar\")\n# Crate rsaCopy item path\n[Settings](https://docs.rs/rsa/latest/settings.html)\n[Help](https://docs.rs/rsa/latest/help.html)\nSummary[Source](https://docs.rs/rsa/latest/src/rsa/lib.rs.html#1-255)\nExpand description\n## [\u00a7](https://docs.rs/rsa/latest/rsa/#rustcrypto-rsa)[RustCrypto](https://github.com/RustCrypto/): RSA\n[![crates.io](https://buildstats.info/crate/rsa)](https://crates.io/crates/rsa) [![Documentation](https://docs.rs/rsa/badge.svg)](https://docs.rs/rsa) [![Build Status](https://github.com/rustcrypto/RSA/workflows/CI/badge.svg)](https://github.com/RustCrypto/RSA/actions?query=workflow%3ACI+branch%3Amaster) [![dependency status](https://deps.rs/repo/github/RustCrypto/RSA/status.svg)](https://deps.rs/repo/github/RustCrypto/RSA) ![MSRV](https://img.shields.io/badge/rustc-1.65+-blue.svg) [![Project Chat](https://img.shields.io/badge/zulip-join_chat-blue.svg)](https://rustcrypto.zulipchat.com/#narrow/stream/260047-RSA)\nA portable RSA implementation in pure Rust.\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#example)Example\n```\nuse rsa::{Pkcs1v15Encrypt, RsaPrivateKey, RsaPublicKey};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet priv_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet pub_key = RsaPublicKey::from(&priv_key);\n// Encrypt\nlet data = b\"hello world\";\nlet enc_data = pub_key.encrypt(&mut rng, Pkcs1v15Encrypt, &data[..]).expect(\"failed to encrypt\");\nassert_ne!(&data[..], &enc_data[..]);\n// Decrypt\nlet dec_data = priv_key.decrypt(Pkcs1v15Encrypt, &enc_data).expect(\"failed to decrypt\");\nassert_eq!(&data[..], &dec_data[..]);\n```\n\n> **Note:** If you encounter unusually slow key generation time while using `RsaPrivateKey::new` you can try to compile in release mode or add the following to your `Cargo.toml`. Key generation is much faster when building with higher optimization levels, but this will increase the compile time a bit.\n> ```\n[profile.debug]\nopt-level = 3\n```\n\n> If you don\u2019t want to turn on optimizations for all dependencies, you can only optimize the `num-bigint-dig` dependency. This should give most of the speedups.\n> ```\n[profile.dev.package.num-bigint-dig]\nopt-level = 3\n```\n\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#status)Status\nCurrently at Phase 1 (v) \ud83d\udea7\nThere will be three phases before `1.0` \ud83d\udea2 can be released.\n  1. \ud83d\udea7 Make it work \n     * Prime generation \u2705\n     * Key generation \u2705\n     * PKCS1v1.5: Encryption & Decryption \u2705\n     * PKCS1v1.5: Sign & Verify \u2705\n     * PKCS1v1.5 (session key): Encryption & Decryption\n     * OAEP: Encryption & Decryption\n     * PSS: Sign & Verify\n     * Key import & export\n  2. \ud83d\ude80 Make it fast \n     * Benchmarks \u2705\n     * compare to other implementations \ud83d\udea7\n     * optimize \ud83d\udea7\n  3. \ud83d\udd10 Make it secure \n     * Fuzz testing\n     * Security Audits\n\n\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#security-warning)\u26a0\ufe0fSecurity Warning\nThis crate has received one [security audit by Include Security](https://www.opentech.fund/results/security-safety-audits/deltachat/), with only one minor finding which has since been addressed.\nSee the [open security issues](https://github.com/RustCrypto/RSA/issues?q=is%3Aissue+is%3Aopen+label%3Asecurity) on our issue tracker for other known problems.\n~~Notably the implementation of[modular exponentiation is not constant time](https://github.com/RustCrypto/RSA/issues/19), but timing variability is masked using [random blinding](https://en.wikipedia.org/wiki/Blinding_\\(cryptography\\)), a commonly used technique.~~ This crate is vulnerable to the [Marvin Attack](https://people.redhat.com/~hkario/marvin/) which could enable private key recovery by a network attacker (see [RUSTSEC-2023-0071](https://rustsec.org/advisories/RUSTSEC-2023-0071.html)).\nYou can follow our work on mitigating this issue in [#390](https://github.com/RustCrypto/RSA/issues/390).\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#minimum-supported-rust-version-msrv)Minimum Supported Rust Version (MSRV)\nAll crates in this repository support Rust 1.65 or higher.\nIn the future MSRV can be changed, but it will be done with a minor version bump.\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#license)License\nLicensed under either of\n  * [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0)\n  * [MIT license](http://opensource.org/licenses/MIT)\n\n\nat your option.\n#### [\u00a7](https://docs.rs/rsa/latest/rsa/#contribution)Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n## [\u00a7](https://docs.rs/rsa/latest/rsa/#supported-algorithms)Supported algorithms\nThis crate supports several schemes described in [RFC8017](https://datatracker.ietf.org/doc/html/rfc8017#section-8.1):\n  * [OAEP encryption scheme](https://docs.rs/rsa/latest/rsa/#oaep-encryption)\n  * [PKCS#1 v1.5 encryption scheme](https://docs.rs/rsa/latest/rsa/#pkcs1-v15-encryption)\n  * [PKCS#1 v1.5 signature scheme](https://docs.rs/rsa/latest/rsa/#pkcs1-v15-signatures)\n  * [PSS signature scheme](https://docs.rs/rsa/latest/rsa/#pss-signatures)\n\n\nThese schemes are described below.\n## [\u00a7](https://docs.rs/rsa/latest/rsa/#usage)Usage\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#oaep-encryption)OAEP encryption\nNote: requires `sha2` feature of `rsa` crate is enabled.\n```\nuse rsa::{RsaPrivateKey, RsaPublicKey, Oaep, sha2::Sha256};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet public_key = RsaPublicKey::from(&private_key);\n// Encrypt\nlet data = b\"hello world\";\nlet padding = Oaep::new::<Sha256>();\nlet enc_data = public_key.encrypt(&mut rng, padding, &data[..]).expect(\"failed to encrypt\");\nassert_ne!(&data[..], &enc_data[..]);\n// Decrypt\nlet padding = Oaep::new::<Sha256>();\nlet dec_data = private_key.decrypt(padding, &enc_data).expect(\"failed to decrypt\");\nassert_eq!(&data[..], &dec_data[..]);\n```\n\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#pkcs1-v15-encryption)PKCS#1 v1.5 encryption\n```\nuse rsa::{RsaPrivateKey, RsaPublicKey, Pkcs1v15Encrypt};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet public_key = RsaPublicKey::from(&private_key);\n// Encrypt\nlet data = b\"hello world\";\nlet enc_data = public_key.encrypt(&mut rng, Pkcs1v15Encrypt, &data[..]).expect(\"failed to encrypt\");\nassert_ne!(&data[..], &enc_data[..]);\n// Decrypt\nlet dec_data = private_key.decrypt(Pkcs1v15Encrypt, &enc_data).expect(\"failed to decrypt\");\nassert_eq!(&data[..], &dec_data[..]);\n```\n\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#pkcs1-v15-signatures)PKCS#1 v1.5 signatures\nNote: requires `sha2` feature of `rsa` crate is enabled.\n```\nuse rsa::RsaPrivateKey;\nuse rsa::pkcs1v15::{SigningKey, VerifyingKey};\nuse rsa::signature::{Keypair, RandomizedSigner, SignatureEncoding, Verifier};\nuse rsa::sha2::{Digest, Sha256};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet signing_key = SigningKey::<Sha256>::new(private_key);\nlet verifying_key = signing_key.verifying_key();\n// Sign\nlet data = b\"hello world\";\nlet signature = signing_key.sign_with_rng(&mut rng, data);\nassert_ne!(signature.to_bytes().as_ref(), data.as_slice());\n// Verify\nverifying_key.verify(data, &signature).expect(\"failed to verify\");\n```\n\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#pss-signatures)PSS signatures\nNote: requires `sha2` feature of `rsa` crate is enabled.\n```\nuse rsa::RsaPrivateKey;\nuse rsa::pss::{BlindedSigningKey, VerifyingKey};\nuse rsa::signature::{Keypair,RandomizedSigner, SignatureEncoding, Verifier};\nuse rsa::sha2::{Digest, Sha256};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet signing_key = BlindedSigningKey::<Sha256>::new(private_key);\nlet verifying_key = signing_key.verifying_key();\n// Sign\nlet data = b\"hello world\";\nlet signature = signing_key.sign_with_rng(&mut rng, data);\nassert_ne!(signature.to_bytes().as_ref(), data);\n// Verify\nverifying_key.verify(data, &signature).expect(\"failed to verify\");\n```\n\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#pkcs1-rsa-key-encoding)PKCS#1 RSA Key Encoding\nPKCS#1 supports a legacy format for encoding RSA keys as binary (DER) or text (PEM) data.\nYou can recognize PEM encoded PKCS#1 keys because they have \u201cRSA * KEY\u201d in the type label, e.g.:\n```\n-----BEGIN RSA PRIVATE KEY-----\n```\n\nMost modern applications use the newer PKCS#8 format instead (see below).\nThe following traits can be used to decode/encode [`RsaPrivateKey`](https://docs.rs/rsa/latest/rsa/struct.RsaPrivateKey.html \"struct rsa::RsaPrivateKey\") and [`RsaPublicKey`](https://docs.rs/rsa/latest/rsa/struct.RsaPublicKey.html \"struct rsa::RsaPublicKey\") as PKCS#1. Note that [`pkcs1`](https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/index.html \"mod pkcs1\") is re-exported from the toplevel of the `rsa` crate:\n  * [`pkcs1::DecodeRsaPrivateKey`](https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.DecodeRsaPrivateKey.html \"trait pkcs1::traits::DecodeRsaPrivateKey\"): decode RSA private keys from PKCS#1\n  * [`pkcs1::EncodeRsaPrivateKey`](https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.EncodeRsaPrivateKey.html \"trait pkcs1::traits::EncodeRsaPrivateKey\"): encode RSA private keys to PKCS#1\n  * [`pkcs1::DecodeRsaPublicKey`](https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.DecodeRsaPublicKey.html \"trait pkcs1::traits::DecodeRsaPublicKey\"): decode RSA public keys from PKCS#1\n  * [`pkcs1::EncodeRsaPublicKey`](https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.EncodeRsaPublicKey.html \"trait pkcs1::traits::EncodeRsaPublicKey\"): encode RSA public keys to PKCS#1\n\n\n#### [\u00a7](https://docs.rs/rsa/latest/rsa/#example-1)Example\n```\nuse rsa::{RsaPublicKey, pkcs1::DecodeRsaPublicKey};\nlet pem = \"-----BEGIN RSA PUBLIC KEY-----\nMIIBCgKCAQEAtsQsUV8QpqrygsY+2+JCQ6Fw8/omM71IM2N/R8pPbzbgOl0p78MZ\nGsgPOQ2HSznjD0FPzsH8oO2B5Uftws04LHb2HJAYlz25+lN5cqfHAfa3fgmC38Ff\nwBkn7l582UtPWZ/wcBOnyCgb3yLcvJrXyrt8QxHJgvWO23ITrUVYszImbXQ67YGS\n0YhMrbixRzmo2tpm3JcIBtnHrEUMsT0NfFdfsZhTT8YbxBvA8FdODgEwx7u/vf3J\n9qbi4+Kv8cvqyJuleIRSjVXPsIMnoejIn04APPKIjpMyQdnWlby7rNyQtE4+CV+j\ncFjqJbE/Xilcvqxt6DirjFCvYeKYl1uHLwIDAQAB\n-----END RSA PUBLIC KEY-----\";\nlet public_key = RsaPublicKey::from_pkcs1_pem(pem)?;\n```\n\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#pkcs8-rsa-key-encoding)PKCS#8 RSA Key Encoding\nPKCS#8 is a private key format with support for multiple algorithms. Like PKCS#1, it can be encoded as binary (DER) or text (PEM).\nYou can recognize PEM encoded PKCS#8 keys because they _don\u2019t_ have an algorithm name in the type label, e.g.:\n```\n-----BEGIN PRIVATE KEY-----\n```\n\nThe following traits can be used to decode/encode [`RsaPrivateKey`](https://docs.rs/rsa/latest/rsa/struct.RsaPrivateKey.html \"struct rsa::RsaPrivateKey\") and [`RsaPublicKey`](https://docs.rs/rsa/latest/rsa/struct.RsaPublicKey.html \"struct rsa::RsaPublicKey\") as PKCS#8. Note that [`pkcs8`](https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/index.html \"mod pkcs8\") is re-exported from the toplevel of the `rsa` crate:\n  * [`pkcs8::DecodePrivateKey`](https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/traits/trait.DecodePrivateKey.html \"trait pkcs8::traits::DecodePrivateKey\"): decode private keys from PKCS#8\n  * [`pkcs8::EncodePrivateKey`](https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/traits/trait.EncodePrivateKey.html \"trait pkcs8::traits::EncodePrivateKey\"): encode private keys to PKCS#8\n  * [`pkcs8::DecodePublicKey`](https://docs.rs/pkcs8/latest/pkcs8/trait.DecodePublicKey.html): decode public keys from PKCS#8\n  * [`pkcs8::EncodePublicKey`](https://docs.rs/pkcs8/latest/pkcs8/trait.EncodePublicKey.html): encode public keys to PKCS#8\n\n\n#### [\u00a7](https://docs.rs/rsa/latest/rsa/#example-2)Example\n```\nuse rsa::{RsaPublicKey, pkcs8::DecodePublicKey};\nlet pem = \"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtsQsUV8QpqrygsY+2+JC\nQ6Fw8/omM71IM2N/R8pPbzbgOl0p78MZGsgPOQ2HSznjD0FPzsH8oO2B5Uftws04\nLHb2HJAYlz25+lN5cqfHAfa3fgmC38FfwBkn7l582UtPWZ/wcBOnyCgb3yLcvJrX\nyrt8QxHJgvWO23ITrUVYszImbXQ67YGS0YhMrbixRzmo2tpm3JcIBtnHrEUMsT0N\nfFdfsZhTT8YbxBvA8FdODgEwx7u/vf3J9qbi4+Kv8cvqyJuleIRSjVXPsIMnoejI\nn04APPKIjpMyQdnWlby7rNyQtE4+CV+jcFjqJbE/Xilcvqxt6DirjFCvYeKYl1uH\nLwIDAQAB\n-----END PUBLIC KEY-----\";\nlet public_key = RsaPublicKey::from_public_key_pem(pem)?;\n```\n\n## Re-exports[\u00a7](https://docs.rs/rsa/latest/rsa/#reexports)\n\n`pub use crate::errors::Error[](https://docs.rs/rsa/latest/rsa/errors/enum.Error.html \"enum rsa::errors::Error\");`\n\n\n`pub use crate::errors::Result[](https://docs.rs/rsa/latest/rsa/errors/type.Result.html \"type rsa::errors::Result\");`\n\n\n`pub use crate::oaep::Oaep[](https://docs.rs/rsa/latest/rsa/oaep/struct.Oaep.html \"struct rsa::oaep::Oaep\");`\n\n\n`pub use crate::pkcs1v15::Pkcs1v15Encrypt[](https://docs.rs/rsa/latest/rsa/pkcs1v15/struct.Pkcs1v15Encrypt.html \"struct rsa::pkcs1v15::Pkcs1v15Encrypt\");`\n\n\n`pub use crate::pkcs1v15::Pkcs1v15Sign[](https://docs.rs/rsa/latest/rsa/pkcs1v15/struct.Pkcs1v15Sign.html \"struct rsa::pkcs1v15::Pkcs1v15Sign\");`\n\n\n`pub use crate::pss::Pss[](https://docs.rs/rsa/latest/rsa/pss/struct.Pss.html \"struct rsa::pss::Pss\");`\n\n\n`pub use rand_core[](https://docs.rs/rand_core/0.6.4/x86_64-unknown-linux-gnu/rand_core/index.html \"mod rand_core\");`\n\n\n`pub use signature[](https://docs.rs/signature/2.2.0/x86_64-unknown-linux-gnu/signature/index.html \"mod signature\");`\n\n\n`pub use pkcs1[](https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/index.html \"mod pkcs1\");`\n\n\n`pub use pkcs8[](https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/index.html \"mod pkcs8\");`\n\n\n`pub use sha2[](https://docs.rs/sha2/0.10.9/x86_64-unknown-linux-gnu/sha2/index.html \"mod sha2\");``sha2`\n\n## Modules[\u00a7](https://docs.rs/rsa/latest/rsa/#modules)\n\n[errors](https://docs.rs/rsa/latest/rsa/errors/index.html \"mod rsa::errors\")\n    Error types.\n\n[hazmat](https://docs.rs/rsa/latest/rsa/hazmat/index.html \"mod rsa::hazmat\")`hazmat`\n    \u26a0\ufe0f Low-level \u201chazmat\u201d RSA functions.\n\n[oaep](https://docs.rs/rsa/latest/rsa/oaep/index.html \"mod rsa::oaep\")\n    Encryption and Decryption using [OAEP padding](https://datatracker.ietf.org/doc/html/rfc8017#section-7.1).\n\n[pkcs1v15](https://docs.rs/rsa/latest/rsa/pkcs1v15/index.html \"mod rsa::pkcs1v15\")\n    PKCS#1 v1.5 support as described in [RFC8017 \u00a7 8.2](https://datatracker.ietf.org/doc/html/rfc8017#section-8.2).\n\n[pss](https://docs.rs/rsa/latest/rsa/pss/index.html \"mod rsa::pss\")\n    Support for the [Probabilistic Signature Scheme](https://en.wikipedia.org/wiki/Probabilistic_signature_scheme) (PSS) a.k.a. RSASSA-PSS.\n\n[traits](https://docs.rs/rsa/latest/rsa/traits/index.html \"mod rsa::traits\")\n    RSA-related trait definitions.\n## Structs[\u00a7](https://docs.rs/rsa/latest/rsa/#structs)\n\n[BigUint](https://docs.rs/rsa/latest/rsa/struct.BigUint.html \"struct rsa::BigUint\")\n    A big unsigned integer type.\n\n[CrtValue](https://docs.rs/rsa/latest/rsa/struct.CrtValue.html \"struct rsa::CrtValue\")\n    Contains the precomputed Chinese remainder theorem values.\n\n[RsaPrivateKey](https://docs.rs/rsa/latest/rsa/struct.RsaPrivateKey.html \"struct rsa::RsaPrivateKey\")\n    Represents a whole RSA key, public and private parts.\n\n[RsaPublicKey](https://docs.rs/rsa/latest/rsa/struct.RsaPublicKey.html \"struct rsa::RsaPublicKey\")\n    Represents the public part of an RSA key.\n",
              "markdown_with_citations": "[](https://docs.rs/rsa/latest/rsa/all.html \"show sidebar\")\n# Crate rsaCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9RustCrypto\u27e85\u27e9: RSA\n![crates.io\u27e86\u27e9](https://crates.io/crates/rsa) ![Documentation\u27e87\u27e9](https://docs.rs/rsa) ![Build Status\u27e88\u27e9](https://github.com/RustCrypto/RSA/actions?query=workflow%3ACI+branch%3Amaster) ![dependency status\u27e89\u27e9](https://deps.rs/repo/github/RustCrypto/RSA) ![MSRV\u27e810\u27e9] ![Project Chat\u27e811\u27e9](https://rustcrypto.zulipchat.com/#narrow/stream/260047-RSA)\nA portable RSA implementation in pure Rust.\n### \u00a7\u27e812\u27e9Example\n```\nuse rsa::{Pkcs1v15Encrypt, RsaPrivateKey, RsaPublicKey};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet priv_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet pub_key = RsaPublicKey::from(&priv_key);\n// Encrypt\nlet data = b\"hello world\";\nlet enc_data = pub_key.encrypt(&mut rng, Pkcs1v15Encrypt, &data[..]).expect(\"failed to encrypt\");\nassert_ne!(&data[..], &enc_data[..]);\n// Decrypt\nlet dec_data = priv_key.decrypt(Pkcs1v15Encrypt, &enc_data).expect(\"failed to decrypt\");\nassert_eq!(&data[..], &dec_data[..]);\n```\n\n> **Note:** If you encounter unusually slow key generation time while using `RsaPrivateKey::new` you can try to compile in release mode or add the following to your `Cargo.toml`. Key generation is much faster when building with higher optimization levels, but this will increase the compile time a bit.\n> ```\n[profile.debug]\nopt-level = 3\n```\n\n> If you don\u2019t want to turn on optimizations for all dependencies, you can only optimize the `num-bigint-dig` dependency. This should give most of the speedups.\n> ```\n[profile.dev.package.num-bigint-dig]\nopt-level = 3\n```\n\n### \u00a7\u27e813\u27e9Status\nCurrently at Phase 1 (v) \ud83d\udea7\nThere will be three phases before `1.0` \ud83d\udea2 can be released.\n  1. \ud83d\udea7 Make it work \n     * Prime generation \u2705\n     * Key generation \u2705\n     * PKCS1v1.5: Encryption & Decryption \u2705\n     * PKCS1v1.5: Sign & Verify \u2705\n     * PKCS1v1.5 (session key): Encryption & Decryption\n     * OAEP: Encryption & Decryption\n     * PSS: Sign & Verify\n     * Key import & export\n  2. \ud83d\ude80 Make it fast \n     * Benchmarks \u2705\n     * compare to other implementations \ud83d\udea7\n     * optimize \ud83d\udea7\n  3. \ud83d\udd10 Make it secure \n     * Fuzz testing\n     * Security Audits\n\n\n### \u00a7\u27e814\u27e9\u26a0\ufe0fSecurity Warning\nThis crate has received one security audit by Include Security\u27e815\u27e9, with only one minor finding which has since been addressed.\nSee the open security issues\u27e816\u27e9 on our issue tracker for other known problems.\n~~Notably the implementation ofmodular exponentiation is not constant time\u27e817\u27e9, but timing variability is masked using random blinding\u27e818\u27e9), a commonly used technique.~~ This crate is vulnerable to the Marvin Attack\u27e819\u27e9 which could enable private key recovery by a network attacker (see RUSTSEC-2023-0071\u27e820\u27e9).\nYou can follow our work on mitigating this issue in #390\u27e821\u27e9.\n### \u00a7\u27e822\u27e9Minimum Supported Rust Version (MSRV)\nAll crates in this repository support Rust 1.65 or higher.\nIn the future MSRV can be changed, but it will be done with a minor version bump.\n### \u00a7\u27e823\u27e9License\nLicensed under either of\n  * Apache License, Version 2.0\u27e824\u27e9\n  * MIT license\u27e825\u27e9\n\n\nat your option.\n#### \u00a7\u27e826\u27e9Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n## \u00a7\u27e827\u27e9Supported algorithms\nThis crate supports several schemes described in RFC8017\u27e828\u27e9:\n  * OAEP encryption scheme\u27e829\u27e9\n  * PKCS#1 v1.5 encryption scheme\u27e830\u27e9\n  * PKCS#1 v1.5 signature scheme\u27e831\u27e9\n  * PSS signature scheme\u27e832\u27e9\n\n\nThese schemes are described below.\n## \u00a7\u27e833\u27e9Usage\n### \u00a7\u27e829\u27e9OAEP encryption\nNote: requires `sha2` feature of `rsa` crate is enabled.\n```\nuse rsa::{RsaPrivateKey, RsaPublicKey, Oaep, sha2::Sha256};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet public_key = RsaPublicKey::from(&private_key);\n// Encrypt\nlet data = b\"hello world\";\nlet padding = Oaep::new::<Sha256>();\nlet enc_data = public_key.encrypt(&mut rng, padding, &data[..]).expect(\"failed to encrypt\");\nassert_ne!(&data[..], &enc_data[..]);\n// Decrypt\nlet padding = Oaep::new::<Sha256>();\nlet dec_data = private_key.decrypt(padding, &enc_data).expect(\"failed to decrypt\");\nassert_eq!(&data[..], &dec_data[..]);\n```\n\n### \u00a7\u27e830\u27e9PKCS#1 v1.5 encryption\n```\nuse rsa::{RsaPrivateKey, RsaPublicKey, Pkcs1v15Encrypt};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet public_key = RsaPublicKey::from(&private_key);\n// Encrypt\nlet data = b\"hello world\";\nlet enc_data = public_key.encrypt(&mut rng, Pkcs1v15Encrypt, &data[..]).expect(\"failed to encrypt\");\nassert_ne!(&data[..], &enc_data[..]);\n// Decrypt\nlet dec_data = private_key.decrypt(Pkcs1v15Encrypt, &enc_data).expect(\"failed to decrypt\");\nassert_eq!(&data[..], &dec_data[..]);\n```\n\n### \u00a7\u27e831\u27e9PKCS#1 v1.5 signatures\nNote: requires `sha2` feature of `rsa` crate is enabled.\n```\nuse rsa::RsaPrivateKey;\nuse rsa::pkcs1v15::{SigningKey, VerifyingKey};\nuse rsa::signature::{Keypair, RandomizedSigner, SignatureEncoding, Verifier};\nuse rsa::sha2::{Digest, Sha256};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet signing_key = SigningKey::<Sha256>::new(private_key);\nlet verifying_key = signing_key.verifying_key();\n// Sign\nlet data = b\"hello world\";\nlet signature = signing_key.sign_with_rng(&mut rng, data);\nassert_ne!(signature.to_bytes().as_ref(), data.as_slice());\n// Verify\nverifying_key.verify(data, &signature).expect(\"failed to verify\");\n```\n\n### \u00a7\u27e832\u27e9PSS signatures\nNote: requires `sha2` feature of `rsa` crate is enabled.\n```\nuse rsa::RsaPrivateKey;\nuse rsa::pss::{BlindedSigningKey, VerifyingKey};\nuse rsa::signature::{Keypair,RandomizedSigner, SignatureEncoding, Verifier};\nuse rsa::sha2::{Digest, Sha256};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet signing_key = BlindedSigningKey::<Sha256>::new(private_key);\nlet verifying_key = signing_key.verifying_key();\n// Sign\nlet data = b\"hello world\";\nlet signature = signing_key.sign_with_rng(&mut rng, data);\nassert_ne!(signature.to_bytes().as_ref(), data);\n// Verify\nverifying_key.verify(data, &signature).expect(\"failed to verify\");\n```\n\n### \u00a7\u27e834\u27e9PKCS#1 RSA Key Encoding\nPKCS#1 supports a legacy format for encoding RSA keys as binary (DER) or text (PEM) data.\nYou can recognize PEM encoded PKCS#1 keys because they have \u201cRSA * KEY\u201d in the type label, e.g.:\n```\n-----BEGIN RSA PRIVATE KEY-----\n```\n\nMost modern applications use the newer PKCS#8 format instead (see below).\nThe following traits can be used to decode/encode `RsaPrivateKey`\u27e835\u27e9 and `RsaPublicKey`\u27e836\u27e9 as PKCS#1. Note that `pkcs1`\u27e837\u27e9 is re-exported from the toplevel of the `rsa` crate:\n  * `pkcs1::DecodeRsaPrivateKey`\u27e838\u27e9: decode RSA private keys from PKCS#1\n  * `pkcs1::EncodeRsaPrivateKey`\u27e839\u27e9: encode RSA private keys to PKCS#1\n  * `pkcs1::DecodeRsaPublicKey`\u27e840\u27e9: decode RSA public keys from PKCS#1\n  * `pkcs1::EncodeRsaPublicKey`\u27e841\u27e9: encode RSA public keys to PKCS#1\n\n\n#### \u00a7\u27e842\u27e9Example\n```\nuse rsa::{RsaPublicKey, pkcs1::DecodeRsaPublicKey};\nlet pem = \"-----BEGIN RSA PUBLIC KEY-----\nMIIBCgKCAQEAtsQsUV8QpqrygsY+2+JCQ6Fw8/omM71IM2N/R8pPbzbgOl0p78MZ\nGsgPOQ2HSznjD0FPzsH8oO2B5Uftws04LHb2HJAYlz25+lN5cqfHAfa3fgmC38Ff\nwBkn7l582UtPWZ/wcBOnyCgb3yLcvJrXyrt8QxHJgvWO23ITrUVYszImbXQ67YGS\n0YhMrbixRzmo2tpm3JcIBtnHrEUMsT0NfFdfsZhTT8YbxBvA8FdODgEwx7u/vf3J\n9qbi4+Kv8cvqyJuleIRSjVXPsIMnoejIn04APPKIjpMyQdnWlby7rNyQtE4+CV+j\ncFjqJbE/Xilcvqxt6DirjFCvYeKYl1uHLwIDAQAB\n-----END RSA PUBLIC KEY-----\";\nlet public_key = RsaPublicKey::from_pkcs1_pem(pem)?;\n```\n\n### \u00a7\u27e843\u27e9PKCS#8 RSA Key Encoding\nPKCS#8 is a private key format with support for multiple algorithms. Like PKCS#1, it can be encoded as binary (DER) or text (PEM).\nYou can recognize PEM encoded PKCS#8 keys because they _don\u2019t_ have an algorithm name in the type label, e.g.:\n```\n-----BEGIN PRIVATE KEY-----\n```\n\nThe following traits can be used to decode/encode `RsaPrivateKey`\u27e835\u27e9 and `RsaPublicKey`\u27e836\u27e9 as PKCS#8. Note that `pkcs8`\u27e844\u27e9 is re-exported from the toplevel of the `rsa` crate:\n  * `pkcs8::DecodePrivateKey`\u27e845\u27e9: decode private keys from PKCS#8\n  * `pkcs8::EncodePrivateKey`\u27e846\u27e9: encode private keys to PKCS#8\n  * `pkcs8::DecodePublicKey`\u27e847\u27e9: decode public keys from PKCS#8\n  * `pkcs8::EncodePublicKey`\u27e848\u27e9: encode public keys to PKCS#8\n\n\n#### \u00a7\u27e849\u27e9Example\n```\nuse rsa::{RsaPublicKey, pkcs8::DecodePublicKey};\nlet pem = \"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtsQsUV8QpqrygsY+2+JC\nQ6Fw8/omM71IM2N/R8pPbzbgOl0p78MZGsgPOQ2HSznjD0FPzsH8oO2B5Uftws04\nLHb2HJAYlz25+lN5cqfHAfa3fgmC38FfwBkn7l582UtPWZ/wcBOnyCgb3yLcvJrX\nyrt8QxHJgvWO23ITrUVYszImbXQ67YGS0YhMrbixRzmo2tpm3JcIBtnHrEUMsT0N\nfFdfsZhTT8YbxBvA8FdODgEwx7u/vf3J9qbi4+Kv8cvqyJuleIRSjVXPsIMnoejI\nn04APPKIjpMyQdnWlby7rNyQtE4+CV+jcFjqJbE/Xilcvqxt6DirjFCvYeKYl1uH\nLwIDAQAB\n-----END PUBLIC KEY-----\";\nlet public_key = RsaPublicKey::from_public_key_pem(pem)?;\n```\n\n## Re-exports\u00a7\u27e850\u27e9\n\n`pub use crate::errors::Error[](https://docs.rs/rsa/latest/rsa/errors/enum.Error.html \"enum rsa::errors::Error\");`\n\n\n`pub use crate::errors::Result[](https://docs.rs/rsa/latest/rsa/errors/type.Result.html \"type rsa::errors::Result\");`\n\n\n`pub use crate::oaep::Oaep[](https://docs.rs/rsa/latest/rsa/oaep/struct.Oaep.html \"struct rsa::oaep::Oaep\");`\n\n\n`pub use crate::pkcs1v15::Pkcs1v15Encrypt[](https://docs.rs/rsa/latest/rsa/pkcs1v15/struct.Pkcs1v15Encrypt.html \"struct rsa::pkcs1v15::Pkcs1v15Encrypt\");`\n\n\n`pub use crate::pkcs1v15::Pkcs1v15Sign[](https://docs.rs/rsa/latest/rsa/pkcs1v15/struct.Pkcs1v15Sign.html \"struct rsa::pkcs1v15::Pkcs1v15Sign\");`\n\n\n`pub use crate::pss::Pss[](https://docs.rs/rsa/latest/rsa/pss/struct.Pss.html \"struct rsa::pss::Pss\");`\n\n\n`pub use rand_core[](https://docs.rs/rand_core/0.6.4/x86_64-unknown-linux-gnu/rand_core/index.html \"mod rand_core\");`\n\n\n`pub use signature[](https://docs.rs/signature/2.2.0/x86_64-unknown-linux-gnu/signature/index.html \"mod signature\");`\n\n\n`pub use pkcs1[](https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/index.html \"mod pkcs1\");`\n\n\n`pub use pkcs8[](https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/index.html \"mod pkcs8\");`\n\n\n`pub use sha2[](https://docs.rs/sha2/0.10.9/x86_64-unknown-linux-gnu/sha2/index.html \"mod sha2\");``sha2`\n\n## Modules\u00a7\u27e851\u27e9\n\nerrors\u27e852\u27e9\n    Error types.\n\nhazmat\u27e853\u27e9`hazmat`\n    \u26a0\ufe0f Low-level \u201chazmat\u201d RSA functions.\n\noaep\u27e854\u27e9\n    Encryption and Decryption using OAEP padding\u27e855\u27e9.\n\npkcs1v15\u27e856\u27e9\n    PKCS#1 v1.5 support as described in RFC8017 \u00a7 8.2\u27e857\u27e9.\n\npss\u27e858\u27e9\n    Support for the Probabilistic Signature Scheme\u27e859\u27e9 (PSS) a.k.a. RSASSA-PSS.\n\ntraits\u27e860\u27e9\n    RSA-related trait definitions.\n## Structs\u00a7\u27e861\u27e9\n\nBigUint\u27e862\u27e9\n    A big unsigned integer type.\n\nCrtValue\u27e863\u27e9\n    Contains the precomputed Chinese remainder theorem values.\n\nRsaPrivateKey\u27e835\u27e9\n    Represents a whole RSA key, public and private parts.\n\nRsaPublicKey\u27e836\u27e9\n    Represents the public part of an RSA key.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/rsa/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/rsa/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/rsa/latest/src/rsa/lib.rs.html#1-255: Source\n\u27e84\u27e9 https://docs.rs/rsa/latest/rsa/#rustcrypto-rsa: \u00a7\n\u27e85\u27e9 https://github.com/RustCrypto/: RustCrypto\n\u27e86\u27e9 https://buildstats.info/crate/rsa: ![crates.io\n\u27e87\u27e9 https://docs.rs/rsa/badge.svg: ![Documentation\n\u27e88\u27e9 https://github.com/rustcrypto/RSA/workflows/CI/badge.svg: ![Build Status\n\u27e89\u27e9 https://deps.rs/repo/github/RustCrypto/RSA/status.svg: ![dependency status\n\u27e810\u27e9 https://img.shields.io/badge/rustc-1.65+-blue.svg: MSRV\n\u27e811\u27e9 https://img.shields.io/badge/zulip-join_chat-blue.svg: ![Project Chat\n\u27e812\u27e9 https://docs.rs/rsa/latest/rsa/#example: \u00a7\n\u27e813\u27e9 https://docs.rs/rsa/latest/rsa/#status: \u00a7\n\u27e814\u27e9 https://docs.rs/rsa/latest/rsa/#security-warning: \u00a7\n\u27e815\u27e9 https://www.opentech.fund/results/security-safety-audits/deltachat/: security audit by Include Security\n\u27e816\u27e9 https://github.com/RustCrypto/RSA/issues?q=is%3Aissue+is%3Aopen+label%3Asecurity: open security issues\n\u27e817\u27e9 https://github.com/RustCrypto/RSA/issues/19: modular exponentiation is not constant time\n\u27e818\u27e9 https://en.wikipedia.org/wiki/Blinding_\\(cryptography\\: random blinding\n\u27e819\u27e9 https://people.redhat.com/~hkario/marvin/: Marvin Attack\n\u27e820\u27e9 https://rustsec.org/advisories/RUSTSEC-2023-0071.html: RUSTSEC-2023-0071\n\u27e821\u27e9 https://github.com/RustCrypto/RSA/issues/390: #390\n\u27e822\u27e9 https://docs.rs/rsa/latest/rsa/#minimum-supported-rust-version-msrv: \u00a7\n\u27e823\u27e9 https://docs.rs/rsa/latest/rsa/#license: \u00a7\n\u27e824\u27e9 http://www.apache.org/licenses/LICENSE-2.0: Apache License, Version 2.0\n\u27e825\u27e9 http://opensource.org/licenses/MIT: MIT license\n\u27e826\u27e9 https://docs.rs/rsa/latest/rsa/#contribution: \u00a7\n\u27e827\u27e9 https://docs.rs/rsa/latest/rsa/#supported-algorithms: \u00a7\n\u27e828\u27e9 https://datatracker.ietf.org/doc/html/rfc8017#section-8.1: RFC8017\n\u27e829\u27e9 https://docs.rs/rsa/latest/rsa/#oaep-encryption: OAEP encryption scheme\n\u27e830\u27e9 https://docs.rs/rsa/latest/rsa/#pkcs1-v15-encryption: PKCS#1 v1.5 encryption scheme\n\u27e831\u27e9 https://docs.rs/rsa/latest/rsa/#pkcs1-v15-signatures: PKCS#1 v1.5 signature scheme\n\u27e832\u27e9 https://docs.rs/rsa/latest/rsa/#pss-signatures: PSS signature scheme\n\u27e833\u27e9 https://docs.rs/rsa/latest/rsa/#usage: \u00a7\n\u27e834\u27e9 https://docs.rs/rsa/latest/rsa/#pkcs1-rsa-key-encoding: \u00a7\n\u27e835\u27e9 https://docs.rs/rsa/latest/rsa/struct.RsaPrivateKey.html: struct rsa::RsaPrivateKey - `RsaPrivateKey`\n\u27e836\u27e9 https://docs.rs/rsa/latest/rsa/struct.RsaPublicKey.html: struct rsa::RsaPublicKey - `RsaPublicKey`\n\u27e837\u27e9 https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/index.html: mod pkcs1 - `pkcs1`\n\u27e838\u27e9 https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.DecodeRsaPrivateKey.html: trait pkcs1::traits::DecodeRsaPrivateKey - `pkcs1::DecodeRsaPrivateKey`\n\u27e839\u27e9 https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.EncodeRsaPrivateKey.html: trait pkcs1::traits::EncodeRsaPrivateKey - `pkcs1::EncodeRsaPrivateKey`\n\u27e840\u27e9 https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.DecodeRsaPublicKey.html: trait pkcs1::traits::DecodeRsaPublicKey - `pkcs1::DecodeRsaPublicKey`\n\u27e841\u27e9 https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.EncodeRsaPublicKey.html: trait pkcs1::traits::EncodeRsaPublicKey - `pkcs1::EncodeRsaPublicKey`\n\u27e842\u27e9 https://docs.rs/rsa/latest/rsa/#example-1: \u00a7\n\u27e843\u27e9 https://docs.rs/rsa/latest/rsa/#pkcs8-rsa-key-encoding: \u00a7\n\u27e844\u27e9 https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/index.html: mod pkcs8 - `pkcs8`\n\u27e845\u27e9 https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/traits/trait.DecodePrivateKey.html: trait pkcs8::traits::DecodePrivateKey - `pkcs8::DecodePrivateKey`\n\u27e846\u27e9 https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/traits/trait.EncodePrivateKey.html: trait pkcs8::traits::EncodePrivateKey - `pkcs8::EncodePrivateKey`\n\u27e847\u27e9 https://docs.rs/pkcs8/latest/pkcs8/trait.DecodePublicKey.html: `pkcs8::DecodePublicKey`\n\u27e848\u27e9 https://docs.rs/pkcs8/latest/pkcs8/trait.EncodePublicKey.html: `pkcs8::EncodePublicKey`\n\u27e849\u27e9 https://docs.rs/rsa/latest/rsa/#example-2: \u00a7\n\u27e850\u27e9 https://docs.rs/rsa/latest/rsa/#reexports: \u00a7\n\u27e851\u27e9 https://docs.rs/rsa/latest/rsa/#modules: \u00a7\n\u27e852\u27e9 https://docs.rs/rsa/latest/rsa/errors/index.html: mod rsa::errors - errors\n\u27e853\u27e9 https://docs.rs/rsa/latest/rsa/hazmat/index.html: mod rsa::hazmat - hazmat\n\u27e854\u27e9 https://docs.rs/rsa/latest/rsa/oaep/index.html: mod rsa::oaep - oaep\n\u27e855\u27e9 https://datatracker.ietf.org/doc/html/rfc8017#section-7.1: OAEP padding\n\u27e856\u27e9 https://docs.rs/rsa/latest/rsa/pkcs1v15/index.html: mod rsa::pkcs1v15 - pkcs1v15\n\u27e857\u27e9 https://datatracker.ietf.org/doc/html/rfc8017#section-8.2: RFC8017 \u00a7 8.2\n\u27e858\u27e9 https://docs.rs/rsa/latest/rsa/pss/index.html: mod rsa::pss - pss\n\u27e859\u27e9 https://en.wikipedia.org/wiki/Probabilistic_signature_scheme: Probabilistic Signature Scheme\n\u27e860\u27e9 https://docs.rs/rsa/latest/rsa/traits/index.html: mod rsa::traits - traits\n\u27e861\u27e9 https://docs.rs/rsa/latest/rsa/#structs: \u00a7\n\u27e862\u27e9 https://docs.rs/rsa/latest/rsa/struct.BigUint.html: struct rsa::BigUint - BigUint\n\u27e863\u27e9 https://docs.rs/rsa/latest/rsa/struct.CrtValue.html: struct rsa::CrtValue - CrtValue\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 15697,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "118345.3046957"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/rsa",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [44 releases](https://lib.rs/crates/rsa/versions)\n[ new 0.10.0-rc.1 ](https://github.com/rustcrypto/rsa/blob/HEAD/CHANGELOG.md) |  Jun 21, 2025   \n---|---  \n0.10.0-pre.4 |  Feb 14, 2025   \n0.10.0-pre.3 |  Oct 8, 2024   \n0.10.0-pre.2 |  Jul 28, 2024   \n0.0.0 |  Jul 24, 2018   \n[\u26a0\ufe0f Issues reported](https://rustsec.org/advisories/RUSTSEC-2023-0071)\n#**7** in [Cryptography](https://lib.rs/cryptography \"Algorithms intended for securing data.\")\nDownload history 2084117/week @ 2025-03-07 1739684/week @ 2025-03-14 2970924/week @ 2025-03-21 1334749/week @ 2025-03-28 1471754/week @ 2025-04-04 1237209/week @ 2025-04-11 958562/week @ 2025-04-18 935900/week @ 2025-04-25 1024394/week @ 2025-05-02 1067943/week @ 2025-05-09 1041989/week @ 2025-05-16 940298/week @ 2025-05-23 1009103/week @ 2025-05-30 957653/week @ 2025-06-06 991176/week @ 2025-06-13 1060894/week @ 2025-06-20\n**4,200,951** downloads per month Used in [**2,062** crates (428 directly)](https://lib.rs/crates/rsa/rev)\n**MIT/Apache**\n250KB  5.5K  SLoC\n# [RustCrypto](https://github.com/RustCrypto/): RSA\n[![crates.io](https://img.shields.io/crates/v/rsa?logo=rust)](https://crates.io/crates/rsa) [![Documentation](https://img.gs/czjpqfbdkz/full/https://docs.rs/rsa/badge.svg)](https://docs.rs/rsa) [![Build Status](https://img.gs/czjpqfbdkz/full/https://github.com/RustCrypto/RSA/actions/workflows/ci.yml/badge.svg)](https://github.com/RustCrypto/RSA/actions/workflows/ci.yml) [![Dependency Status](https://img.gs/czjpqfbdkz/full/https://deps.rs/repo/github/RustCrypto/RSA/status.svg)](https://deps.rs/repo/github/RustCrypto/RSA) ![Apache2/MIT licensed](https://img.shields.io/badge/license-Apache2.0/MIT-blue.svg) ![MSRV](https://img.shields.io/badge/rustc-1.85+-blue.svg) [![Project Chat](https://img.shields.io/badge/zulip-join_chat-blue.svg)](https://rustcrypto.zulipchat.com/#narrow/stream/260047-RSA)\nA portable RSA implementation in pure Rust.\n## Example\n```\n``use` `rsa`::````{`Pkcs1v15Encrypt`,` RsaPrivateKey`,` RsaPublicKey```}```;`\n`let` `mut` rng `=` `rand`::``thread_rng`(``)``;`\n`let` bits `=` `2048``;`\n`let` priv_key `=` `RsaPrivateKey`::``new`(``&``mut` rng`,` bits`)``.``expect``(```\"`failed to generate a key`\"```)``;`\n`let` pub_key `=` `RsaPublicKey`::``from`(``&`priv_key`)``;`\n``//` Encrypt`\n`let` data `=` ``b``\"`hello world`\"```;`\n`let` enc_data `=` pub_key`.``encrypt``(``&``mut` rng`,` Pkcs1v15Encrypt`,` `&`data`[``..``]``)``.``expect``(```\"`failed to encrypt`\"```)``;`\n`assert_ne!``(``&`data`[``..``]``,` `&`enc_data`[``..``]``)``;`\n``//` Decrypt`\n`let` dec_data `=` priv_key`.``decrypt``(`Pkcs1v15Encrypt`,` `&`enc_data`)``.``expect``(```\"`failed to decrypt`\"```)``;`\n`assert_eq!``(``&`data`[``..``]``,` `&`dec_data`[``..``]``)``;`\n`\n```\n\n> **Note:** If you encounter unusually slow key generation time while using ```RsaPrivateKey`::``new`` you can try to compile in release mode or add the following to your ``Cargo.toml``. Key generation is much faster when building with higher optimization levels, but this will increase the compile time a bit.\n> ```\n```[``profile.debug``]`\n`opt-level ``=` `3`\n``\n```\n\n## Status\nCurrently at Phase 1 (v) \ud83d\udea7\nThere will be three phases before ```1.``0``` \ud83d\udea2 can be released.\n  1. \ud83d\udea7 Make it work \n     * Prime generation \u2705\n     * Key generation \u2705\n     * PKCS1v1.5: Encryption & Decryption \u2705\n     * PKCS1v1.5: Sign & Verify \u2705\n     * PKCS1v1.5 (session key): Encryption & Decryption\n     * OAEP: Encryption & Decryption\n     * PSS: Sign & Verify\n     * Key import & export\n  2. \ud83d\ude80 Make it fast \n     * Benchmarks \u2705\n     * compare to other implementations \ud83d\udea7\n     * optimize \ud83d\udea7\n  3. \ud83d\udd10 Make it secure \n     * Fuzz testing\n     * Security Audits\n\n\n## \u26a0\ufe0fSecurity Warning\nThis crate has received one [security audit by Include Security](https://public.opentech.fund/documents/1907_OTF_DeltaChat_RPGP_RustRSA_GB_Report_v1.pdf), with only one minor finding which has since been addressed.\nSee the [open security issues](https://github.com/RustCrypto/RSA/issues?q=is%3Aissue+is%3Aopen+label%3Asecurity) on our issue tracker for other known problems.\n~~Notably the implementation of[modular exponentiation is not constant time](https://github.com/RustCrypto/RSA/issues/19), but timing variability is masked using [random blinding](https://en.wikipedia.org/wiki/Blinding_\\(cryptography\\)), a commonly used technique.~~ This crate is vulnerable to the [Marvin Attack](https://people.redhat.com/~hkario/marvin/) which could enable private key recovery by a network attacker (see [RUSTSEC-2023-0071](https://rustsec.org/advisories/RUSTSEC-2023-0071.html)).\nYou can follow our work on mitigating this issue in [#390](https://github.com/RustCrypto/RSA/issues/390).\n## Minimum Supported Rust Version (MSRV)\nThis crate supports Rust 1.85 or higher.\nIn the future MSRV can be changed, but it will be done with a minor version bump.\n## License\nLicensed under either of\n  * [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0)\n  * [MIT license](http://opensource.org/licenses/MIT)\n\n\nat your option.\n### Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n#### Dependencies\n~4.5MB  ~92K SLoC\n  * [const-oid](https://lib.rs/crates/const-oid \"new\") 0.10\n  * [crypto-bigint](https://lib.rs/crates/crypto-bigint \"new\") 0.7.0-pre.5[+zeroize](https://lib.rs/crates/crypto-bigint/features#feature-zeroize)[+alloc](https://lib.rs/crates/crypto-bigint/features#feature-alloc)\n  * [crypto-primes](https://lib.rs/crates/crypto-primes \"new\") 0.7.0-pre.1\n  * [digest](https://lib.rs/crates/digest \"new\") 0.11.0-rc.0[+alloc](https://lib.rs/crates/digest/features#feature-alloc)[+oid](https://lib.rs/crates/digest/features#feature-oid)\n  * [pkcs1](https://lib.rs/crates/pkcs1 \"new\") 0.8.0-rc.2[+alloc](https://lib.rs/crates/pkcs1/features#feature-alloc)[+pkcs8](https://lib.rs/crates/pkcs1/features#feature-pkcs8)\n  * [pkcs8](https://lib.rs/crates/pkcs8 \"new\") 0.11.0-rc.4[+alloc](https://lib.rs/crates/pkcs8/features#feature-alloc)\n  * [rand_core](https://lib.rs/crates/rand_core \"new\") 0.9\n  * [signature](https://lib.rs/crates/signature \"new\") 3.0.0-rc.1[+alloc](https://lib.rs/crates/signature/features#feature-alloc)[+digest](https://lib.rs/crates/signature/features#feature-digest)[+rand_core](https://lib.rs/crates/signature/features#feature-rand_core)\n  * [spki](https://lib.rs/crates/spki \"new\") 0.8.0-rc.2[+alloc](https://lib.rs/crates/spki/features#feature-alloc)\n  * [subtle](https://lib.rs/crates/subtle \"2.6.1\")\n  * [zeroize](https://lib.rs/crates/zeroize \"1.5\")[+alloc](https://lib.rs/crates/zeroize/features#feature-alloc)\n  * [serde?](https://lib.rs/crates/rsa/features#feature-serde \"optional feature\") [serde](https://lib.rs/crates/serde \"1.0.184\")[+derive](https://lib.rs/crates/serde/features#feature-derive)\n  * [serde?](https://lib.rs/crates/rsa/features#feature-serde \"optional feature\") [serdect](https://lib.rs/crates/serdect \"new\") 0.3\n  * [ optional ](https://lib.rs/crates/rsa/features#feature-sha1 \"sha1 is optional feature\") [sha1](https://lib.rs/crates/sha1 \"new\") 0.11.0-rc.0[+oid](https://lib.rs/crates/sha1/features#feature-oid)\n  * [ optional ](https://lib.rs/crates/rsa/features#feature-sha2 \"sha2 is optional feature\") [sha2](https://lib.rs/crates/sha2 \"new\") 0.11.0-rc.0[+oid](https://lib.rs/crates/sha2/features#feature-oid)\n\n\n  * dev  [base64ct](https://lib.rs/crates/base64ct \"1\")[+alloc](https://lib.rs/crates/base64ct/features#feature-alloc)\n  * dev  [hex](https://lib.rs/crates/hex \"0.4.3\")[+serde](https://lib.rs/crates/hex/features#feature-serde)\n  * dev  [hex-literal](https://lib.rs/crates/hex-literal \"new\") 1.0\n  * dev  [proptest](https://lib.rs/crates/proptest \"1\")\n  * dev  [rand](https://lib.rs/crates/rand \"new\") 0.9\n  * dev  [rand_chacha](https://lib.rs/crates/rand_chacha \"new\") 0.9\n  * dev  [rand_xorshift](https://lib.rs/crates/rand_xorshift \"new\") 0.4\n  * dev  [serde_json](https://lib.rs/crates/serde_json \"1.0.138\")\n  * dev  [serde_test](https://lib.rs/crates/serde_test \"1.0.89\")\n  * dev  [sha3](https://lib.rs/crates/sha3 \"new\") 0.11.0-rc.0[+oid](https://lib.rs/crates/sha3/features#feature-oid)\n\n\n#### [Other features](https://lib.rs/crates/rsa/features)\n  * [hazmat](https://lib.rs/crates/rsa/features#feature-hazmat)\n  * [os_rng](https://lib.rs/crates/rsa/features#feature-os_rng)\n  * [pem](https://lib.rs/crates/rsa/features#feature-pem)\n  * [pkcs5](https://lib.rs/crates/rsa/features#feature-pkcs5)\n  * [std](https://lib.rs/crates/rsa/features#feature-std)\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  44 releases\u27e81\u27e9\n new 0.10.0-rc.1 \u27e82\u27e9 |  Jun 21, 2025   \n---|---  \n0.10.0-pre.4 |  Feb 14, 2025   \n0.10.0-pre.3 |  Oct 8, 2024   \n0.10.0-pre.2 |  Jul 28, 2024   \n0.0.0 |  Jul 24, 2018   \n\u26a0\ufe0f Issues reported\u27e83\u27e9\n#**7** in Cryptography\u27e84\u27e9\nDownload history 2084117/week @ 2025-03-07 1739684/week @ 2025-03-14 2970924/week @ 2025-03-21 1334749/week @ 2025-03-28 1471754/week @ 2025-04-04 1237209/week @ 2025-04-11 958562/week @ 2025-04-18 935900/week @ 2025-04-25 1024394/week @ 2025-05-02 1067943/week @ 2025-05-09 1041989/week @ 2025-05-16 940298/week @ 2025-05-23 1009103/week @ 2025-05-30 957653/week @ 2025-06-06 991176/week @ 2025-06-13 1060894/week @ 2025-06-20\n**4,200,951** downloads per month Used in **2,062** crates (428 directly)\u27e85\u27e9\n**MIT/Apache**\n250KB  5.5K  SLoC\n# RustCrypto\u27e86\u27e9: RSA\n![crates.io\u27e87\u27e9](https://crates.io/crates/rsa) ![Documentation\u27e88\u27e9](https://docs.rs/rsa) ![Build Status\u27e89\u27e9](https://github.com/RustCrypto/RSA/actions/workflows/ci.yml) ![Dependency Status\u27e810\u27e9](https://deps.rs/repo/github/RustCrypto/RSA) ![Apache2/MIT licensed\u27e811\u27e9] ![MSRV\u27e812\u27e9] ![Project Chat\u27e813\u27e9](https://rustcrypto.zulipchat.com/#narrow/stream/260047-RSA)\nA portable RSA implementation in pure Rust.\n## Example\n```\n``use` `rsa`::````{`Pkcs1v15Encrypt`,` RsaPrivateKey`,` RsaPublicKey```}```;`\n`let` `mut` rng `=` `rand`::``thread_rng`(``)``;`\n`let` bits `=` `2048``;`\n`let` priv_key `=` `RsaPrivateKey`::``new`(``&``mut` rng`,` bits`)``.``expect``(```\"`failed to generate a key`\"```)``;`\n`let` pub_key `=` `RsaPublicKey`::``from`(``&`priv_key`)``;`\n``//` Encrypt`\n`let` data `=` ``b``\"`hello world`\"```;`\n`let` enc_data `=` pub_key`.``encrypt``(``&``mut` rng`,` Pkcs1v15Encrypt`,` `&`data`[``..``]``)``.``expect``(```\"`failed to encrypt`\"```)``;`\n`assert_ne!``(``&`data`[``..``]``,` `&`enc_data`[``..``]``)``;`\n``//` Decrypt`\n`let` dec_data `=` priv_key`.``decrypt``(`Pkcs1v15Encrypt`,` `&`enc_data`)``.``expect``(```\"`failed to decrypt`\"```)``;`\n`assert_eq!``(``&`data`[``..``]``,` `&`dec_data`[``..``]``)``;`\n`\n```\n\n> **Note:** If you encounter unusually slow key generation time while using ```RsaPrivateKey`::``new`` you can try to compile in release mode or add the following to your ``Cargo.toml``. Key generation is much faster when building with higher optimization levels, but this will increase the compile time a bit.\n> ```\n```[``profile.debug``]`\n`opt-level ``=` `3`\n``\n```\n\n## Status\nCurrently at Phase 1 (v) \ud83d\udea7\nThere will be three phases before ```1.``0``` \ud83d\udea2 can be released.\n  1. \ud83d\udea7 Make it work \n     * Prime generation \u2705\n     * Key generation \u2705\n     * PKCS1v1.5: Encryption & Decryption \u2705\n     * PKCS1v1.5: Sign & Verify \u2705\n     * PKCS1v1.5 (session key): Encryption & Decryption\n     * OAEP: Encryption & Decryption\n     * PSS: Sign & Verify\n     * Key import & export\n  2. \ud83d\ude80 Make it fast \n     * Benchmarks \u2705\n     * compare to other implementations \ud83d\udea7\n     * optimize \ud83d\udea7\n  3. \ud83d\udd10 Make it secure \n     * Fuzz testing\n     * Security Audits\n\n\n## \u26a0\ufe0fSecurity Warning\nThis crate has received one security audit by Include Security\u27e814\u27e9, with only one minor finding which has since been addressed.\nSee the open security issues\u27e815\u27e9 on our issue tracker for other known problems.\n~~Notably the implementation ofmodular exponentiation is not constant time\u27e816\u27e9, but timing variability is masked using random blinding\u27e817\u27e9), a commonly used technique.~~ This crate is vulnerable to the Marvin Attack\u27e818\u27e9 which could enable private key recovery by a network attacker (see RUSTSEC-2023-0071\u27e819\u27e9).\nYou can follow our work on mitigating this issue in #390\u27e820\u27e9.\n## Minimum Supported Rust Version (MSRV)\nThis crate supports Rust 1.85 or higher.\nIn the future MSRV can be changed, but it will be done with a minor version bump.\n## License\nLicensed under either of\n  * Apache License, Version 2.0\u27e821\u27e9\n  * MIT license\u27e822\u27e9\n\n\nat your option.\n### Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n#### Dependencies\n~4.5MB  ~92K SLoC\n  * const-oid\u27e823\u27e9 0.10\n  * crypto-bigint\u27e824\u27e9 0.7.0-pre.5+zeroize\u27e825\u27e9+alloc\u27e826\u27e9\n  * crypto-primes\u27e827\u27e9 0.7.0-pre.1\n  * digest\u27e828\u27e9 0.11.0-rc.0+alloc\u27e829\u27e9+oid\u27e830\u27e9\n  * pkcs1\u27e831\u27e9 0.8.0-rc.2+alloc\u27e832\u27e9+pkcs8\u27e833\u27e9\n  * pkcs8\u27e834\u27e9 0.11.0-rc.4+alloc\u27e835\u27e9\n  * rand_core\u27e836\u27e9 0.9\n  * signature\u27e837\u27e9 3.0.0-rc.1+alloc\u27e838\u27e9+digest\u27e839\u27e9+rand_core\u27e840\u27e9\n  * spki\u27e841\u27e9 0.8.0-rc.2+alloc\u27e842\u27e9\n  * subtle\u27e843\u27e9\n  * zeroize\u27e844\u27e9+alloc\u27e845\u27e9\n  * serde?\u27e846\u27e9 serde\u27e847\u27e9+derive\u27e848\u27e9\n  * serde?\u27e846\u27e9 serdect\u27e849\u27e9 0.3\n  *  optional \u27e850\u27e9 sha1\u27e851\u27e9 0.11.0-rc.0+oid\u27e852\u27e9\n  *  optional \u27e853\u27e9 sha2\u27e854\u27e9 0.11.0-rc.0+oid\u27e855\u27e9\n\n\n  * dev  base64ct\u27e856\u27e9+alloc\u27e857\u27e9\n  * dev  hex\u27e858\u27e9+serde\u27e859\u27e9\n  * dev  hex-literal\u27e860\u27e9 1.0\n  * dev  proptest\u27e861\u27e9\n  * dev  rand\u27e862\u27e9 0.9\n  * dev  rand_chacha\u27e863\u27e9 0.9\n  * dev  rand_xorshift\u27e864\u27e9 0.4\n  * dev  serde_json\u27e865\u27e9\n  * dev  serde_test\u27e866\u27e9\n  * dev  sha3\u27e867\u27e9 0.11.0-rc.0+oid\u27e868\u27e9\n\n\n#### Other features\u27e869\u27e9\n  * hazmat\u27e870\u27e9\n  * os_rng\u27e871\u27e9\n  * pem\u27e872\u27e9\n  * pkcs5\u27e873\u27e9\n  * std\u27e874\u27e9\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/rsa/versions: 44 releases\n\u27e82\u27e9 https://github.com/rustcrypto/rsa/blob/HEAD/CHANGELOG.md:  new 0.10.0-rc.1 \n\u27e83\u27e9 https://rustsec.org/advisories/RUSTSEC-2023-0071: \u26a0\ufe0f Issues reported\n\u27e84\u27e9 https://lib.rs/cryptography: Algorithms intended for securing data. - Cryptography\n\u27e85\u27e9 https://lib.rs/crates/rsa/rev: **2,062** crates (428 directly)\n\u27e86\u27e9 https://github.com/RustCrypto/: RustCrypto\n\u27e87\u27e9 https://img.shields.io/crates/v/rsa?logo=rust: ![crates.io\n\u27e88\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/rsa/badge.svg: ![Documentation\n\u27e89\u27e9 https://img.gs/czjpqfbdkz/full/https://github.com/RustCrypto/RSA/actions/workflows/ci.yml/badge.svg: ![Build Status\n\u27e810\u27e9 https://img.gs/czjpqfbdkz/full/https://deps.rs/repo/github/RustCrypto/RSA/status.svg: ![Dependency Status\n\u27e811\u27e9 https://img.shields.io/badge/license-Apache2.0/MIT-blue.svg: Apache2/MIT licensed\n\u27e812\u27e9 https://img.shields.io/badge/rustc-1.85+-blue.svg: MSRV\n\u27e813\u27e9 https://img.shields.io/badge/zulip-join_chat-blue.svg: ![Project Chat\n\u27e814\u27e9 https://public.opentech.fund/documents/1907_OTF_DeltaChat_RPGP_RustRSA_GB_Report_v1.pdf: security audit by Include Security\n\u27e815\u27e9 https://github.com/RustCrypto/RSA/issues?q=is%3Aissue+is%3Aopen+label%3Asecurity: open security issues\n\u27e816\u27e9 https://github.com/RustCrypto/RSA/issues/19: modular exponentiation is not constant time\n\u27e817\u27e9 https://en.wikipedia.org/wiki/Blinding_\\(cryptography\\: random blinding\n\u27e818\u27e9 https://people.redhat.com/~hkario/marvin/: Marvin Attack\n\u27e819\u27e9 https://rustsec.org/advisories/RUSTSEC-2023-0071.html: RUSTSEC-2023-0071\n\u27e820\u27e9 https://github.com/RustCrypto/RSA/issues/390: #390\n\u27e821\u27e9 http://www.apache.org/licenses/LICENSE-2.0: Apache License, Version 2.0\n\u27e822\u27e9 http://opensource.org/licenses/MIT: MIT license\n\u27e823\u27e9 https://lib.rs/crates/const-oid: new - const-oid\n\u27e824\u27e9 https://lib.rs/crates/crypto-bigint: new - crypto-bigint\n\u27e825\u27e9 https://lib.rs/crates/crypto-bigint/features#feature-zeroize: +zeroize\n\u27e826\u27e9 https://lib.rs/crates/crypto-bigint/features#feature-alloc: +alloc\n\u27e827\u27e9 https://lib.rs/crates/crypto-primes: new - crypto-primes\n\u27e828\u27e9 https://lib.rs/crates/digest: new - digest\n\u27e829\u27e9 https://lib.rs/crates/digest/features#feature-alloc: +alloc\n\u27e830\u27e9 https://lib.rs/crates/digest/features#feature-oid: +oid\n\u27e831\u27e9 https://lib.rs/crates/pkcs1: new - pkcs1\n\u27e832\u27e9 https://lib.rs/crates/pkcs1/features#feature-alloc: +alloc\n\u27e833\u27e9 https://lib.rs/crates/pkcs1/features#feature-pkcs8: +pkcs8\n\u27e834\u27e9 https://lib.rs/crates/pkcs8: new - pkcs8\n\u27e835\u27e9 https://lib.rs/crates/pkcs8/features#feature-alloc: +alloc\n\u27e836\u27e9 https://lib.rs/crates/rand_core: new - rand_core\n\u27e837\u27e9 https://lib.rs/crates/signature: new - signature\n\u27e838\u27e9 https://lib.rs/crates/signature/features#feature-alloc: +alloc\n\u27e839\u27e9 https://lib.rs/crates/signature/features#feature-digest: +digest\n\u27e840\u27e9 https://lib.rs/crates/signature/features#feature-rand_core: +rand_core\n\u27e841\u27e9 https://lib.rs/crates/spki: new - spki\n\u27e842\u27e9 https://lib.rs/crates/spki/features#feature-alloc: +alloc\n\u27e843\u27e9 https://lib.rs/crates/subtle: 2.6.1 - subtle\n\u27e844\u27e9 https://lib.rs/crates/zeroize: 1.5 - zeroize\n\u27e845\u27e9 https://lib.rs/crates/zeroize/features#feature-alloc: +alloc\n\u27e846\u27e9 https://lib.rs/crates/rsa/features#feature-serde: optional feature - serde?\n\u27e847\u27e9 https://lib.rs/crates/serde: 1.0.184 - serde\n\u27e848\u27e9 https://lib.rs/crates/serde/features#feature-derive: +derive\n\u27e849\u27e9 https://lib.rs/crates/serdect: new - serdect\n\u27e850\u27e9 https://lib.rs/crates/rsa/features#feature-sha1: sha1 is optional feature -  optional \n\u27e851\u27e9 https://lib.rs/crates/sha1: new - sha1\n\u27e852\u27e9 https://lib.rs/crates/sha1/features#feature-oid: +oid\n\u27e853\u27e9 https://lib.rs/crates/rsa/features#feature-sha2: sha2 is optional feature -  optional \n\u27e854\u27e9 https://lib.rs/crates/sha2: new - sha2\n\u27e855\u27e9 https://lib.rs/crates/sha2/features#feature-oid: +oid\n\u27e856\u27e9 https://lib.rs/crates/base64ct: 1 - base64ct\n\u27e857\u27e9 https://lib.rs/crates/base64ct/features#feature-alloc: +alloc\n\u27e858\u27e9 https://lib.rs/crates/hex: 0.4.3 - hex\n\u27e859\u27e9 https://lib.rs/crates/hex/features#feature-serde: +serde\n\u27e860\u27e9 https://lib.rs/crates/hex-literal: new - hex-literal\n\u27e861\u27e9 https://lib.rs/crates/proptest: 1 - proptest\n\u27e862\u27e9 https://lib.rs/crates/rand: new - rand\n\u27e863\u27e9 https://lib.rs/crates/rand_chacha: new - rand_chacha\n\u27e864\u27e9 https://lib.rs/crates/rand_xorshift: new - rand_xorshift\n\u27e865\u27e9 https://lib.rs/crates/serde_json: 1.0.138 - serde_json\n\u27e866\u27e9 https://lib.rs/crates/serde_test: 1.0.89 - serde_test\n\u27e867\u27e9 https://lib.rs/crates/sha3: new - sha3\n\u27e868\u27e9 https://lib.rs/crates/sha3/features#feature-oid: +oid\n\u27e869\u27e9 https://lib.rs/crates/rsa/features: Other features\n\u27e870\u27e9 https://lib.rs/crates/rsa/features#feature-hazmat: hazmat\n\u27e871\u27e9 https://lib.rs/crates/rsa/features#feature-os_rng: os_rng\n\u27e872\u27e9 https://lib.rs/crates/rsa/features#feature-pem: pem\n\u27e873\u27e9 https://lib.rs/crates/rsa/features#feature-pkcs5: pkcs5\n\u27e874\u27e9 https://lib.rs/crates/rsa/features#feature-std: std\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 8670,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "118346.004737"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\subtle-2.6.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "subtle",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\subtle-2.6.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libsubtle-3e5989aaec266978.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zeroize-1.8.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zeroize",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zeroize-1.8.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libzeroize-1b5901ad56444a68.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#const-oid@0.10.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\const-oid-0.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "const_oid",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\const-oid-0.10.1\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libconst_oid-21790a9ead3f37e6.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.9.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rand_core-0.9.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rand_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rand_core-0.9.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\librand_core-24e55d8054f3a6c7.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#base64ct@1.7.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64ct-1.7.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "base64ct",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64ct-1.7.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libbase64ct-86ea2568123c60f0.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.18.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.18.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.18.0\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "const-generics"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\build\\typenum-75aafb45fe2a7a07\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\build\\typenum-75aafb45fe2a7a07\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.15\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.15\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "arch"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\build\\libm-ae33a59786decc15\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\build\\libm-ae33a59786decc15\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.18.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\build\\typenum-f7ce07b0a016b906\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pem-rfc7468@1.0.0-rc.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pem-rfc7468-1.0.0-rc.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pem_rfc7468",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pem-rfc7468-1.0.0-rc.3\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libpem_rfc7468-55f2139cf56765f6.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.15",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "arch_enabled",
                "optimizations_enabled"
              ],
              "env": [
                [
                  "CFG_CARGO_FEATURES",
                  "[\"arch\"]"
                ],
                [
                  "CFG_OPT_LEVEL",
                  "2"
                ],
                [
                  "CFG_TARGET_FEATURES",
                  "[\"cmpxchg16b\", \"fxsr\", \"sse\", \"sse2\", \"sse3\"]"
                ]
              ],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\build\\libm-8c05e698d9eb88fa\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\build\\num-traits-0320d5188ea002e4\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\build\\num-traits-0320d5188ea002e4\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_total_cmp"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\build\\num-traits-fd81b39a5d506937\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.18.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.18.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "typenum",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.18.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "const-generics"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libtypenum-033e044c84173ebf.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_traits",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libnum_traits-5eae05e347535af1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hybrid-array@0.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hybrid-array-0.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hybrid_array",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hybrid-array-0.3.1\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libhybrid_array-18bd7de37583b361.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#der@0.8.0-rc.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\der-0.8.0-rc.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "der",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\der-0.8.0-rc.3\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "oid",
                "pem",
                "std",
                "zeroize"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libder-5be46da522ddd1c9.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#spki@0.8.0-rc.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\spki-0.8.0-rc.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "spki",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\spki-0.8.0-rc.2\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "pem",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libspki-ffd5badce6e32e95.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pkcs8@0.11.0-rc.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pkcs8-0.11.0-rc.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pkcs8",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pkcs8-0.11.0-rc.4\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "pem",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libpkcs8-6c0f43cbe519e63d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libm",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.15\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "arch"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\liblibm-0bf48ec46eae68ec.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.2.0-rc.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crypto-common-0.2.0-rc.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crypto_common",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crypto-common-0.2.0-rc.3\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libcrypto_common-9a90ba6d3fb24fc8.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pkcs1@0.8.0-rc.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pkcs1-0.8.0-rc.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pkcs1",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pkcs1-0.8.0-rc.2\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "pem",
                "pkcs8",
                "std",
                "zeroize"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libpkcs1-ec0d692c84c0fd1b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#digest@0.11.0-rc.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\digest-0.11.0-rc.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "digest",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\digest-0.11.0-rc.0\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "const-oid",
                "oid"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libdigest-be0d7d1fc368509e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#signature@3.0.0-rc.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\signature-3.0.0-rc.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "signature",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\signature-3.0.0-rc.1\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "digest",
                "rand_core"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libsignature-0a3f2b4a7d825ccf.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crypto-bigint@0.7.0-pre.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crypto-bigint-0.7.0-pre.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crypto_bigint",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crypto-bigint-0.7.0-pre.5\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "rand",
                "rand_core",
                "zeroize"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libcrypto_bigint-87368c6448545384.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crypto-primes@0.7.0-pre.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crypto-primes-0.7.0-pre.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crypto_primes",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crypto-primes-0.7.0-pre.1\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libcrypto_primes-01398cd6567b04fa.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp_9yp8spw/rsa-0.10.0-rc.1#rsa@0.10.0-rc.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rsa",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "pem",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\librsa-25008ffb15580d21.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zeroize-1.8.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zeroize",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zeroize-1.8.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libzeroize-1b5901ad56444a68.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.18.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.18.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.18.0\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "const-generics"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\build\\typenum-75aafb45fe2a7a07\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\build\\typenum-75aafb45fe2a7a07\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#const-oid@0.10.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\const-oid-0.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "const_oid",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\const-oid-0.10.1\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libconst_oid-21790a9ead3f37e6.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#base64ct@1.7.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64ct-1.7.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "base64ct",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64ct-1.7.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libbase64ct-86ea2568123c60f0.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.15\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.15\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "arch"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\build\\libm-ae33a59786decc15\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\build\\libm-ae33a59786decc15\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.9.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rand_core-0.9.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rand_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rand_core-0.9.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\librand_core-24e55d8054f3a6c7.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\subtle-2.6.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "subtle",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\subtle-2.6.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libsubtle-3e5989aaec266978.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.18.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\build\\typenum-f7ce07b0a016b906\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pem-rfc7468@1.0.0-rc.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pem-rfc7468-1.0.0-rc.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pem_rfc7468",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pem-rfc7468-1.0.0-rc.3\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libpem_rfc7468-55f2139cf56765f6.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\build\\num-traits-0320d5188ea002e4\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\build\\num-traits-0320d5188ea002e4\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.15",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "arch_enabled",
                "optimizations_enabled"
              ],
              "env": [
                [
                  "CFG_CARGO_FEATURES",
                  "[\"arch\"]"
                ],
                [
                  "CFG_OPT_LEVEL",
                  "2"
                ],
                [
                  "CFG_TARGET_FEATURES",
                  "[\"cmpxchg16b\", \"fxsr\", \"sse\", \"sse2\", \"sse3\"]"
                ]
              ],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\build\\libm-8c05e698d9eb88fa\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.18.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.18.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "typenum",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.18.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "const-generics"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libtypenum-033e044c84173ebf.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#der@0.8.0-rc.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\der-0.8.0-rc.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "der",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\der-0.8.0-rc.3\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "oid",
                "pem",
                "std",
                "zeroize"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libder-5be46da522ddd1c9.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_total_cmp"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\build\\num-traits-fd81b39a5d506937\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libm",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.15\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "arch"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\liblibm-0bf48ec46eae68ec.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hybrid-array@0.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hybrid-array-0.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hybrid_array",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hybrid-array-0.3.1\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libhybrid_array-18bd7de37583b361.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#spki@0.8.0-rc.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\spki-0.8.0-rc.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "spki",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\spki-0.8.0-rc.2\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "pem",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libspki-ffd5badce6e32e95.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_traits",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libnum_traits-5eae05e347535af1.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.2.0-rc.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crypto-common-0.2.0-rc.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crypto_common",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crypto-common-0.2.0-rc.3\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libcrypto_common-9a90ba6d3fb24fc8.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pkcs8@0.11.0-rc.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pkcs8-0.11.0-rc.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pkcs8",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pkcs8-0.11.0-rc.4\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "pem",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libpkcs8-6c0f43cbe519e63d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crypto-bigint@0.7.0-pre.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crypto-bigint-0.7.0-pre.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crypto_bigint",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crypto-bigint-0.7.0-pre.5\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "rand",
                "rand_core",
                "zeroize"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libcrypto_bigint-87368c6448545384.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#digest@0.11.0-rc.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\digest-0.11.0-rc.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "digest",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\digest-0.11.0-rc.0\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "const-oid",
                "oid"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libdigest-be0d7d1fc368509e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pkcs1@0.8.0-rc.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pkcs1-0.8.0-rc.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pkcs1",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pkcs1-0.8.0-rc.2\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "pem",
                "pkcs8",
                "std",
                "zeroize"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libpkcs1-ec0d692c84c0fd1b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crypto-primes@0.7.0-pre.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crypto-primes-0.7.0-pre.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crypto_primes",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crypto-primes-0.7.0-pre.1\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libcrypto_primes-01398cd6567b04fa.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#signature@3.0.0-rc.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\signature-3.0.0-rc.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "signature",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\signature-3.0.0-rc.1\\src\\lib.rs",
                "edition": "2024",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "digest",
                "rand_core"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\libsignature-0a3f2b4a7d825ccf.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp_9yp8spw/rsa-0.10.0-rc.1#rsa@0.10.0-rc.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rsa",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\errors.rs:98:34\n   |\n98 |             Error::Pkcs1(err) => write!(f, \"{}\", err),\n   |                                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n   = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n   |\n98 -             Error::Pkcs1(err) => write!(f, \"{}\", err),\n98 +             Error::Pkcs1(err) => write!(f, \"{err}\"),\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::uninlined_format_args)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2692,
                        "byte_start": 2692,
                        "column_end": 46,
                        "column_start": 46,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 98,
                        "line_start": 98,
                        "suggested_replacement": "err",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 46,
                            "text": "            Error::Pkcs1(err) => write!(f, \"{}\", err),"
                          }
                        ]
                      },
                      {
                        "byte_end": 2699,
                        "byte_start": 2694,
                        "column_end": 53,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 98,
                        "line_start": 98,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 48,
                            "text": "            Error::Pkcs1(err) => write!(f, \"{}\", err),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 2700,
                    "byte_start": 2680,
                    "column_end": 54,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\errors.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 98,
                    "line_start": 98,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 34,
                        "text": "            Error::Pkcs1(err) => write!(f, \"{}\", err),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp_9yp8spw/rsa-0.10.0-rc.1#rsa@0.10.0-rc.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rsa",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\errors.rs:99:34\n   |\n99 |             Error::Pkcs8(err) => write!(f, \"{}\", err),\n   |                                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n99 -             Error::Pkcs8(err) => write!(f, \"{}\", err),\n99 +             Error::Pkcs8(err) => write!(f, \"{err}\"),\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2747,
                        "byte_start": 2747,
                        "column_end": 46,
                        "column_start": 46,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 99,
                        "line_start": 99,
                        "suggested_replacement": "err",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 46,
                            "text": "            Error::Pkcs8(err) => write!(f, \"{}\", err),"
                          }
                        ]
                      },
                      {
                        "byte_end": 2754,
                        "byte_start": 2749,
                        "column_end": 53,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 99,
                        "line_start": 99,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 48,
                            "text": "            Error::Pkcs8(err) => write!(f, \"{}\", err),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 2755,
                    "byte_start": 2735,
                    "column_end": 54,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\errors.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 99,
                    "line_start": 99,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 34,
                        "text": "            Error::Pkcs8(err) => write!(f, \"{}\", err),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp_9yp8spw/rsa-0.10.0-rc.1#rsa@0.10.0-rc.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rsa",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\errors.rs:104:35\n    |\n104 |             Error::Decode(err) => write!(f, \"{:?}\", err),\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n104 -             Error::Decode(err) => write!(f, \"{:?}\", err),\n104 +             Error::Decode(err) => write!(f, \"{err:?}\"),\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3071,
                        "byte_start": 3071,
                        "column_end": 47,
                        "column_start": 47,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 104,
                        "line_start": 104,
                        "suggested_replacement": "err",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 47,
                            "text": "            Error::Decode(err) => write!(f, \"{:?}\", err),"
                          }
                        ]
                      },
                      {
                        "byte_end": 3080,
                        "byte_start": 3075,
                        "column_end": 56,
                        "column_start": 51,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 104,
                        "line_start": 104,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 56,
                            "highlight_start": 51,
                            "text": "            Error::Decode(err) => write!(f, \"{:?}\", err),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 3081,
                    "byte_start": 3059,
                    "column_end": 57,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\errors.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 104,
                    "line_start": 104,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 35,
                        "text": "            Error::Decode(err) => write!(f, \"{:?}\", err),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp_9yp8spw/rsa-0.10.0-rc.1#rsa@0.10.0-rc.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rsa",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\pkcs1v15\\signature.rs:52:13\n   |\n52 |             write!(f, \"{:02x}\", byte)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n52 -             write!(f, \"{:02x}\", byte)?;\n52 +             write!(f, \"{byte:02x}\")?;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1415,
                        "byte_start": 1415,
                        "column_end": 25,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\pkcs1v15\\signature.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 52,
                        "line_start": 52,
                        "suggested_replacement": "byte",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 25,
                            "highlight_start": 25,
                            "text": "            write!(f, \"{:02x}\", byte)?;"
                          }
                        ]
                      },
                      {
                        "byte_end": 1427,
                        "byte_start": 1421,
                        "column_end": 37,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\pkcs1v15\\signature.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 52,
                        "line_start": 52,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 37,
                            "highlight_start": 31,
                            "text": "            write!(f, \"{:02x}\", byte)?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1428,
                    "byte_start": 1403,
                    "column_end": 38,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\pkcs1v15\\signature.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 52,
                    "line_start": 52,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 13,
                        "text": "            write!(f, \"{:02x}\", byte)?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp_9yp8spw/rsa-0.10.0-rc.1#rsa@0.10.0-rc.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rsa",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\pkcs1v15\\signature.rs:61:13\n   |\n61 |             write!(f, \"{:02X}\", byte)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n61 -             write!(f, \"{:02X}\", byte)?;\n61 +             write!(f, \"{byte:02X}\")?;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1628,
                        "byte_start": 1628,
                        "column_end": 25,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\pkcs1v15\\signature.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 61,
                        "line_start": 61,
                        "suggested_replacement": "byte",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 25,
                            "highlight_start": 25,
                            "text": "            write!(f, \"{:02X}\", byte)?;"
                          }
                        ]
                      },
                      {
                        "byte_end": 1640,
                        "byte_start": 1634,
                        "column_end": 37,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\pkcs1v15\\signature.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 61,
                        "line_start": 61,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 37,
                            "highlight_start": 31,
                            "text": "            write!(f, \"{:02X}\", byte)?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1641,
                    "byte_start": 1616,
                    "column_end": 38,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\pkcs1v15\\signature.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 61,
                    "line_start": 61,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 13,
                        "text": "            write!(f, \"{:02X}\", byte)?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp_9yp8spw/rsa-0.10.0-rc.1#rsa@0.10.0-rc.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rsa",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\pkcs1v15\\signature.rs:69:9\n   |\n69 |         write!(f, \"{:X}\", self)\n   |         ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n69 -         write!(f, \"{:X}\", self)\n69 +         write!(f, \"{self:X}\")\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1791,
                        "byte_start": 1791,
                        "column_end": 21,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\pkcs1v15\\signature.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 69,
                        "line_start": 69,
                        "suggested_replacement": "self",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 21,
                            "highlight_start": 21,
                            "text": "        write!(f, \"{:X}\", self)"
                          }
                        ]
                      },
                      {
                        "byte_end": 1801,
                        "byte_start": 1795,
                        "column_end": 31,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\pkcs1v15\\signature.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 69,
                        "line_start": 69,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 31,
                            "highlight_start": 25,
                            "text": "        write!(f, \"{:X}\", self)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1802,
                    "byte_start": 1779,
                    "column_end": 32,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\pkcs1v15\\signature.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 69,
                    "line_start": 69,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 9,
                        "text": "        write!(f, \"{:X}\", self)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp_9yp8spw/rsa-0.10.0-rc.1#rsa@0.10.0-rc.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rsa",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\pss\\signature.rs:63:9\n   |\n63 |         write!(f, \"{:X}\", self)\n   |         ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n63 -         write!(f, \"{:X}\", self)\n63 +         write!(f, \"{self:X}\")\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1635,
                        "byte_start": 1635,
                        "column_end": 21,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\pss\\signature.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 63,
                        "line_start": 63,
                        "suggested_replacement": "self",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 21,
                            "highlight_start": 21,
                            "text": "        write!(f, \"{:X}\", self)"
                          }
                        ]
                      },
                      {
                        "byte_end": 1645,
                        "byte_start": 1639,
                        "column_end": 31,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\pss\\signature.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 63,
                        "line_start": 63,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 31,
                            "highlight_start": 25,
                            "text": "        write!(f, \"{:X}\", self)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1646,
                    "byte_start": 1623,
                    "column_end": 32,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\pss\\signature.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 63,
                    "line_start": 63,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 9,
                        "text": "        write!(f, \"{:X}\", self)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp_9yp8spw/rsa-0.10.0-rc.1#rsa@0.10.0-rc.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rsa",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "2",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "pem",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp_9yp8spw\\rsa-0.10.0-rc.1\\target\\debug\\deps\\librsa-997f055f98f6ff68.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 103
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": true,
              "count": 1,
              "list": [
                {
                  "advisory": {
                    "id": "RUSTSEC-2023-0071",
                    "package": "rsa",
                    "title": "Marvin Attack: potential key recovery through timing sidechannels",
                    "description": "### Impact\nDue to a non-constant-time implementation, information about the private key is leaked through timing information which is observable over the network. An attacker may be able to use that information to recover the key.\n\n### Patches\nNo patch is yet available, however work is underway to migrate to a fully constant-time implementation.\n\n### Workarounds\nThe only currently available workaround is to avoid using the `rsa` crate in settings where attackers are able to observe timing information, e.g. local use on a non-compromised computer is fine.\n\n### References\nThis vulnerability was discovered as part of the \"[Marvin Attack]\", which revealed several implementations of RSA including OpenSSL had not properly mitigated timing sidechannel attacks.\n\n[Marvin Attack]: https://people.redhat.com/~hkario/marvin/",
                    "date": "2023-11-22",
                    "aliases": [
                      "CVE-2023-49092",
                      "GHSA-c38w-74pg-36hr",
                      "GHSA-4grx-2x9w-596c"
                    ],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "crypto-failure"
                    ],
                    "keywords": [
                      "cryptography"
                    ],
                    "cvss": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
                    "informational": null,
                    "references": [
                      "https://people.redhat.com/~hkario/marvin/"
                    ],
                    "source": null,
                    "url": "https://github.com/RustCrypto/RSA/issues/19#issuecomment-1822995643",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  },
                  "affected": null,
                  "package": {
                    "name": "rsa",
                    "version": "0.10.0-rc.1",
                    "source": null,
                    "checksum": null,
                    "dependencies": [
                      {
                        "name": "base64ct",
                        "version": "1.7.3",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "const-oid",
                        "version": "0.10.1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "crypto-bigint",
                        "version": "0.7.0-pre.5",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "crypto-primes",
                        "version": "0.7.0-pre.1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "digest",
                        "version": "0.11.0-rc.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "hex",
                        "version": "0.4.3",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "hex-literal",
                        "version": "1.0.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "pkcs1",
                        "version": "0.8.0-rc.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "pkcs8",
                        "version": "0.11.0-rc.4",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "proptest",
                        "version": "1.6.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "rand",
                        "version": "0.9.1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "rand_chacha",
                        "version": "0.9.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "rand_core",
                        "version": "0.9.3",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "rand_xorshift",
                        "version": "0.4.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "serde",
                        "version": "1.0.219",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "serde_json",
                        "version": "1.0.140",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "serde_test",
                        "version": "1.0.177",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "serdect",
                        "version": "0.3.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "sha1",
                        "version": "0.11.0-rc.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "sha2",
                        "version": "0.11.0-rc.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "sha3",
                        "version": "0.11.0-rc.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "signature",
                        "version": "3.0.0-rc.1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "spki",
                        "version": "0.8.0-rc.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "subtle",
                        "version": "2.6.1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "zeroize",
                        "version": "1.8.1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  }
                }
              ]
            },
            "warnings": {}
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "rsa",
          "version": "0.10.0-rc.1",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/rsa/latest/rsa/all.html \"show sidebar\")\n# Crate rsaCopy item path\n[Settings](https://docs.rs/rsa/latest/settings.html)\n[Help](https://docs.rs/rsa/latest/help.html)\nSummary[Source](https://docs.rs/rsa/latest/src/rsa/lib.rs.html#1-255)\nExpand description\n## [\u00a7](https://docs.rs/rsa/latest/rsa/#rustcrypto-rsa)[RustCrypto](https://github.com/RustCrypto/): RSA\n[![crates.io](https://buildstats.info/crate/rsa)](https://crates.io/crates/rsa) [![Documentation](https://docs.rs/rsa/badge.svg)](https://docs.rs/rsa) [![Build Status](https://github.com/rustcrypto/RSA/workflows/CI/badge.svg)](https://github.com/RustCrypto/RSA/actions?query=workflow%3ACI+branch%3Amaster) [![dependency status](https://deps.rs/repo/github/RustCrypto/RSA/status.svg)](https://deps.rs/repo/github/RustCrypto/RSA) ![MSRV](https://img.shields.io/badge/rustc-1.65+-blue.svg) [![Project Chat](https://img.shields.io/badge/zulip-join_chat-blue.svg)](https://rustcrypto.zulipchat.com/#narrow/stream/260047-RSA)\nA portable RSA implementation in pure Rust.\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#example)Example\n```\nuse rsa::{Pkcs1v15Encrypt, RsaPrivateKey, RsaPublicKey};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet priv_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet pub_key = RsaPublicKey::from(&priv_key);\n// Encrypt\nlet data = b\"hello world\";\nlet enc_data = pub_key.encrypt(&mut rng, Pkcs1v15Encrypt, &data[..]).expect(\"failed to encrypt\");\nassert_ne!(&data[..], &enc_data[..]);\n// Decrypt\nlet dec_data = priv_key.decrypt(Pkcs1v15Encrypt, &enc_data).expect(\"failed to decrypt\");\nassert_eq!(&data[..], &dec_data[..]);\n```\n\n> **Note:** If you encounter unusually slow key generation time while using `RsaPrivateKey::new` you can try to compile in release mode or add the following to your `Cargo.toml`. Key generation is much faster when building with higher optimization levels, but this will increase the compile time a bit.\n> ```\n[profile.debug]\nopt-level = 3\n```\n\n> If you don\u2019t want to turn on optimizations for all dependencies, you can only optimize the `num-bigint-dig` dependency. This should give most of the speedups.\n> ```\n[profile.dev.package.num-bigint-dig]\nopt-level = 3\n```\n\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#status)Status\nCurrently at Phase 1 (v) \ud83d\udea7\nThere will be three phases before `1.0` \ud83d\udea2 can be released.\n  1. \ud83d\udea7 Make it work \n     * Prime generation \u2705\n     * Key generation \u2705\n     * PKCS1v1.5: Encryption & Decryption \u2705\n     * PKCS1v1.5: Sign & Verify \u2705\n     * PKCS1v1.5 (session key): Encryption & Decryption\n     * OAEP: Encryption & Decryption\n     * PSS: Sign & Verify\n     * Key import & export\n  2. \ud83d\ude80 Make it fast \n     * Benchmarks \u2705\n     * compare to other implementations \ud83d\udea7\n     * optimize \ud83d\udea7\n  3. \ud83d\udd10 Make it secure \n     * Fuzz testing\n     * Security Audits\n\n\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#security-warning)\u26a0\ufe0fSecurity Warning\nThis crate has received one [security audit by Include Security](https://www.opentech.fund/results/security-safety-audits/deltachat/), with only one minor finding which has since been addressed.\nSee the [open security issues](https://github.com/RustCrypto/RSA/issues?q=is%3Aissue+is%3Aopen+label%3Asecurity) on our issue tracker for other known problems.\n~~Notably the implementation of[modular exponentiation is not constant time](https://github.com/RustCrypto/RSA/issues/19), but timing variability is masked using [random blinding](https://en.wikipedia.org/wiki/Blinding_\\(cryptography\\)), a commonly used technique.~~ This crate is vulnerable to the [Marvin Attack](https://people.redhat.com/~hkario/marvin/) which could enable private key recovery by a network attacker (see [RUSTSEC-2023-0071](https://rustsec.org/advisories/RUSTSEC-2023-0071.html)).\nYou can follow our work on mitigating this issue in [#390](https://github.com/RustCrypto/RSA/issues/390).\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#minimum-supported-rust-version-msrv)Minimum Supported Rust Version (MSRV)\nAll crates in this repository support Rust 1.65 or higher.\nIn the future MSRV can be changed, but it will be done with a minor version bump.\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#license)License\nLicensed under either of\n  * [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0)\n  * [MIT license](http://opensource.org/licenses/MIT)\n\n\nat your option.\n#### [\u00a7](https://docs.rs/rsa/latest/rsa/#contribution)Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n## [\u00a7](https://docs.rs/rsa/latest/rsa/#supported-algorithms)Supported algorithms\nThis crate supports several schemes described in [RFC8017](https://datatracker.ietf.org/doc/html/rfc8017#section-8.1):\n  * [OAEP encryption scheme](https://docs.rs/rsa/latest/rsa/#oaep-encryption)\n  * [PKCS#1 v1.5 encryption scheme](https://docs.rs/rsa/latest/rsa/#pkcs1-v15-encryption)\n  * [PKCS#1 v1.5 signature scheme](https://docs.rs/rsa/latest/rsa/#pkcs1-v15-signatures)\n  * [PSS signature scheme](https://docs.rs/rsa/latest/rsa/#pss-signatures)\n\n\nThese schemes are described below.\n## [\u00a7](https://docs.rs/rsa/latest/rsa/#usage)Usage\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#oaep-encryption)OAEP encryption\nNote: requires `sha2` feature of `rsa` crate is enabled.\n```\nuse rsa::{RsaPrivateKey, RsaPublicKey, Oaep, sha2::Sha256};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet public_key = RsaPublicKey::from(&private_key);\n// Encrypt\nlet data = b\"hello world\";\nlet padding = Oaep::new::<Sha256>();\nlet enc_data = public_key.encrypt(&mut rng, padding, &data[..]).expect(\"failed to encrypt\");\nassert_ne!(&data[..], &enc_data[..]);\n// Decrypt\nlet padding = Oaep::new::<Sha256>();\nlet dec_data = private_key.decrypt(padding, &enc_data).expect(\"failed to decrypt\");\nassert_eq!(&data[..], &dec_data[..]);\n```\n\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#pkcs1-v15-encryption)PKCS#1 v1.5 encryption\n```\nuse rsa::{RsaPrivateKey, RsaPublicKey, Pkcs1v15Encrypt};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet public_key = RsaPublicKey::from(&private_key);\n// Encrypt\nlet data = b\"hello world\";\nlet enc_data = public_key.encrypt(&mut rng, Pkcs1v15Encrypt, &data[..]).expect(\"failed to encrypt\");\nassert_ne!(&data[..], &enc_data[..]);\n// Decrypt\nlet dec_data = private_key.decrypt(Pkcs1v15Encrypt, &enc_data).expect(\"failed to decrypt\");\nassert_eq!(&data[..], &dec_data[..]);\n```\n\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#pkcs1-v15-signatures)PKCS#1 v1.5 signatures\nNote: requires `sha2` feature of `rsa` crate is enabled.\n```\nuse rsa::RsaPrivateKey;\nuse rsa::pkcs1v15::{SigningKey, VerifyingKey};\nuse rsa::signature::{Keypair, RandomizedSigner, SignatureEncoding, Verifier};\nuse rsa::sha2::{Digest, Sha256};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet signing_key = SigningKey::<Sha256>::new(private_key);\nlet verifying_key = signing_key.verifying_key();\n// Sign\nlet data = b\"hello world\";\nlet signature = signing_key.sign_with_rng(&mut rng, data);\nassert_ne!(signature.to_bytes().as_ref(), data.as_slice());\n// Verify\nverifying_key.verify(data, &signature).expect(\"failed to verify\");\n```\n\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#pss-signatures)PSS signatures\nNote: requires `sha2` feature of `rsa` crate is enabled.\n```\nuse rsa::RsaPrivateKey;\nuse rsa::pss::{BlindedSigningKey, VerifyingKey};\nuse rsa::signature::{Keypair,RandomizedSigner, SignatureEncoding, Verifier};\nuse rsa::sha2::{Digest, Sha256};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet signing_key = BlindedSigningKey::<Sha256>::new(private_key);\nlet verifying_key = signing_key.verifying_key();\n// Sign\nlet data = b\"hello world\";\nlet signature = signing_key.sign_with_rng(&mut rng, data);\nassert_ne!(signature.to_bytes().as_ref(), data);\n// Verify\nverifying_key.verify(data, &signature).expect(\"failed to verify\");\n```\n\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#pkcs1-rsa-key-encoding)PKCS#1 RSA Key Encoding\nPKCS#1 supports a legacy format for encoding RSA keys as binary (DER) or text (PEM) data.\nYou can recognize PEM encoded PKCS#1 keys because they have \u201cRSA * KEY\u201d in the type label, e.g.:\n```\n-----BEGIN RSA PRIVATE KEY-----\n```\n\nMost modern applications use the newer PKCS#8 format instead (see below).\nThe following traits can be used to decode/encode [`RsaPrivateKey`](https://docs.rs/rsa/latest/rsa/struct.RsaPrivateKey.html \"struct rsa::RsaPrivateKey\") and [`RsaPublicKey`](https://docs.rs/rsa/latest/rsa/struct.RsaPublicKey.html \"struct rsa::RsaPublicKey\") as PKCS#1. Note that [`pkcs1`](https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/index.html \"mod pkcs1\") is re-exported from the toplevel of the `rsa` crate:\n  * [`pkcs1::DecodeRsaPrivateKey`](https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.DecodeRsaPrivateKey.html \"trait pkcs1::traits::DecodeRsaPrivateKey\"): decode RSA private keys from PKCS#1\n  * [`pkcs1::EncodeRsaPrivateKey`](https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.EncodeRsaPrivateKey.html \"trait pkcs1::traits::EncodeRsaPrivateKey\"): encode RSA private keys to PKCS#1\n  * [`pkcs1::DecodeRsaPublicKey`](https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.DecodeRsaPublicKey.html \"trait pkcs1::traits::DecodeRsaPublicKey\"): decode RSA public keys from PKCS#1\n  * [`pkcs1::EncodeRsaPublicKey`](https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.EncodeRsaPublicKey.html \"trait pkcs1::traits::EncodeRsaPublicKey\"): encode RSA public keys to PKCS#1\n\n\n#### [\u00a7](https://docs.rs/rsa/latest/rsa/#example-1)Example\n```\nuse rsa::{RsaPublicKey, pkcs1::DecodeRsaPublicKey};\nlet pem = \"-----BEGIN RSA PUBLIC KEY-----\nMIIBCgKCAQEAtsQsUV8QpqrygsY+2+JCQ6Fw8/omM71IM2N/R8pPbzbgOl0p78MZ\nGsgPOQ2HSznjD0FPzsH8oO2B5Uftws04LHb2HJAYlz25+lN5cqfHAfa3fgmC38Ff\nwBkn7l582UtPWZ/wcBOnyCgb3yLcvJrXyrt8QxHJgvWO23ITrUVYszImbXQ67YGS\n0YhMrbixRzmo2tpm3JcIBtnHrEUMsT0NfFdfsZhTT8YbxBvA8FdODgEwx7u/vf3J\n9qbi4+Kv8cvqyJuleIRSjVXPsIMnoejIn04APPKIjpMyQdnWlby7rNyQtE4+CV+j\ncFjqJbE/Xilcvqxt6DirjFCvYeKYl1uHLwIDAQAB\n-----END RSA PUBLIC KEY-----\";\nlet public_key = RsaPublicKey::from_pkcs1_pem(pem)?;\n```\n\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#pkcs8-rsa-key-encoding)PKCS#8 RSA Key Encoding\nPKCS#8 is a private key format with support for multiple algorithms. Like PKCS#1, it can be encoded as binary (DER) or text (PEM).\nYou can recognize PEM encoded PKCS#8 keys because they _don\u2019t_ have an algorithm name in the type label, e.g.:\n```\n-----BEGIN PRIVATE KEY-----\n```\n\nThe following traits can be used to decode/encode [`RsaPrivateKey`](https://docs.rs/rsa/latest/rsa/struct.RsaPrivateKey.html \"struct rsa::RsaPrivateKey\") and [`RsaPublicKey`](https://docs.rs/rsa/latest/rsa/struct.RsaPublicKey.html \"struct rsa::RsaPublicKey\") as PKCS#8. Note that [`pkcs8`](https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/index.html \"mod pkcs8\") is re-exported from the toplevel of the `rsa` crate:\n  * [`pkcs8::DecodePrivateKey`](https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/traits/trait.DecodePrivateKey.html \"trait pkcs8::traits::DecodePrivateKey\"): decode private keys from PKCS#8\n  * [`pkcs8::EncodePrivateKey`](https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/traits/trait.EncodePrivateKey.html \"trait pkcs8::traits::EncodePrivateKey\"): encode private keys to PKCS#8\n  * [`pkcs8::DecodePublicKey`](https://docs.rs/pkcs8/latest/pkcs8/trait.DecodePublicKey.html): decode public keys from PKCS#8\n  * [`pkcs8::EncodePublicKey`](https://docs.rs/pkcs8/latest/pkcs8/trait.EncodePublicKey.html): encode public keys to PKCS#8\n\n\n#### [\u00a7](https://docs.rs/rsa/latest/rsa/#example-2)Example\n```\nuse rsa::{RsaPublicKey, pkcs8::DecodePublicKey};\nlet pem = \"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtsQsUV8QpqrygsY+2+JC\nQ6Fw8/omM71IM2N/R8pPbzbgOl0p78MZGsgPOQ2HSznjD0FPzsH8oO2B5Uftws04\nLHb2HJAYlz25+lN5cqfHAfa3fgmC38FfwBkn7l582UtPWZ/wcBOnyCgb3yLcvJrX\nyrt8QxHJgvWO23ITrUVYszImbXQ67YGS0YhMrbixRzmo2tpm3JcIBtnHrEUMsT0N\nfFdfsZhTT8YbxBvA8FdODgEwx7u/vf3J9qbi4+Kv8cvqyJuleIRSjVXPsIMnoejI\nn04APPKIjpMyQdnWlby7rNyQtE4+CV+jcFjqJbE/Xilcvqxt6DirjFCvYeKYl1uH\nLwIDAQAB\n-----END PUBLIC KEY-----\";\nlet public_key = RsaPublicKey::from_public_key_pem(pem)?;\n```\n\n## Re-exports[\u00a7](https://docs.rs/rsa/latest/rsa/#reexports)\n\n`pub use crate::errors::Error[](https://docs.rs/rsa/latest/rsa/errors/enum.Error.html \"enum rsa::errors::Error\");`\n\n\n`pub use crate::errors::Result[](https://docs.rs/rsa/latest/rsa/errors/type.Result.html \"type rsa::errors::Result\");`\n\n\n`pub use crate::oaep::Oaep[](https://docs.rs/rsa/latest/rsa/oaep/struct.Oaep.html \"struct rsa::oaep::Oaep\");`\n\n\n`pub use crate::pkcs1v15::Pkcs1v15Encrypt[](https://docs.rs/rsa/latest/rsa/pkcs1v15/struct.Pkcs1v15Encrypt.html \"struct rsa::pkcs1v15::Pkcs1v15Encrypt\");`\n\n\n`pub use crate::pkcs1v15::Pkcs1v15Sign[](https://docs.rs/rsa/latest/rsa/pkcs1v15/struct.Pkcs1v15Sign.html \"struct rsa::pkcs1v15::Pkcs1v15Sign\");`\n\n\n`pub use crate::pss::Pss[](https://docs.rs/rsa/latest/rsa/pss/struct.Pss.html \"struct rsa::pss::Pss\");`\n\n\n`pub use rand_core[](https://docs.rs/rand_core/0.6.4/x86_64-unknown-linux-gnu/rand_core/index.html \"mod rand_core\");`\n\n\n`pub use signature[](https://docs.rs/signature/2.2.0/x86_64-unknown-linux-gnu/signature/index.html \"mod signature\");`\n\n\n`pub use pkcs1[](https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/index.html \"mod pkcs1\");`\n\n\n`pub use pkcs8[](https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/index.html \"mod pkcs8\");`\n\n\n`pub use sha2[](https://docs.rs/sha2/0.10.9/x86_64-unknown-linux-gnu/sha2/index.html \"mod sha2\");``sha2`\n\n## Modules[\u00a7](https://docs.rs/rsa/latest/rsa/#modules)\n\n[errors](https://docs.rs/rsa/latest/rsa/errors/index.html \"mod rsa::errors\")\n    Error types.\n\n[hazmat](https://docs.rs/rsa/latest/rsa/hazmat/index.html \"mod rsa::hazmat\")`hazmat`\n    \u26a0\ufe0f Low-level \u201chazmat\u201d RSA functions.\n\n[oaep](https://docs.rs/rsa/latest/rsa/oaep/index.html \"mod rsa::oaep\")\n    Encryption and Decryption using [OAEP padding](https://datatracker.ietf.org/doc/html/rfc8017#section-7.1).\n\n[pkcs1v15](https://docs.rs/rsa/latest/rsa/pkcs1v15/index.html \"mod rsa::pkcs1v15\")\n    PKCS#1 v1.5 support as described in [RFC8017 \u00a7 8.2](https://datatracker.ietf.org/doc/html/rfc8017#section-8.2).\n\n[pss](https://docs.rs/rsa/latest/rsa/pss/index.html \"mod rsa::pss\")\n    Support for the [Probabilistic Signature Scheme](https://en.wikipedia.org/wiki/Probabilistic_signature_scheme) (PSS) a.k.a. RSASSA-PSS.\n\n[traits](https://docs.rs/rsa/latest/rsa/traits/index.html \"mod rsa::traits\")\n    RSA-related trait definitions.\n## Structs[\u00a7](https://docs.rs/rsa/latest/rsa/#structs)\n\n[BigUint](https://docs.rs/rsa/latest/rsa/struct.BigUint.html \"struct rsa::BigUint\")\n    A big unsigned integer type.\n\n[CrtValue](https://docs.rs/rsa/latest/rsa/struct.CrtValue.html \"struct rsa::CrtValue\")\n    Contains the precomputed Chinese remainder theorem values.\n\n[RsaPrivateKey](https://docs.rs/rsa/latest/rsa/struct.RsaPrivateKey.html \"struct rsa::RsaPrivateKey\")\n    Represents a whole RSA key, public and private parts.\n\n[RsaPublicKey](https://docs.rs/rsa/latest/rsa/struct.RsaPublicKey.html \"struct rsa::RsaPublicKey\")\n    Represents the public part of an RSA key.\n",
            "markdown_with_citations": "[](https://docs.rs/rsa/latest/rsa/all.html \"show sidebar\")\n# Crate rsaCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9RustCrypto\u27e85\u27e9: RSA\n![crates.io\u27e86\u27e9](https://crates.io/crates/rsa) ![Documentation\u27e87\u27e9](https://docs.rs/rsa) ![Build Status\u27e88\u27e9](https://github.com/RustCrypto/RSA/actions?query=workflow%3ACI+branch%3Amaster) ![dependency status\u27e89\u27e9](https://deps.rs/repo/github/RustCrypto/RSA) ![MSRV\u27e810\u27e9] ![Project Chat\u27e811\u27e9](https://rustcrypto.zulipchat.com/#narrow/stream/260047-RSA)\nA portable RSA implementation in pure Rust.\n### \u00a7\u27e812\u27e9Example\n```\nuse rsa::{Pkcs1v15Encrypt, RsaPrivateKey, RsaPublicKey};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet priv_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet pub_key = RsaPublicKey::from(&priv_key);\n// Encrypt\nlet data = b\"hello world\";\nlet enc_data = pub_key.encrypt(&mut rng, Pkcs1v15Encrypt, &data[..]).expect(\"failed to encrypt\");\nassert_ne!(&data[..], &enc_data[..]);\n// Decrypt\nlet dec_data = priv_key.decrypt(Pkcs1v15Encrypt, &enc_data).expect(\"failed to decrypt\");\nassert_eq!(&data[..], &dec_data[..]);\n```\n\n> **Note:** If you encounter unusually slow key generation time while using `RsaPrivateKey::new` you can try to compile in release mode or add the following to your `Cargo.toml`. Key generation is much faster when building with higher optimization levels, but this will increase the compile time a bit.\n> ```\n[profile.debug]\nopt-level = 3\n```\n\n> If you don\u2019t want to turn on optimizations for all dependencies, you can only optimize the `num-bigint-dig` dependency. This should give most of the speedups.\n> ```\n[profile.dev.package.num-bigint-dig]\nopt-level = 3\n```\n\n### \u00a7\u27e813\u27e9Status\nCurrently at Phase 1 (v) \ud83d\udea7\nThere will be three phases before `1.0` \ud83d\udea2 can be released.\n  1. \ud83d\udea7 Make it work \n     * Prime generation \u2705\n     * Key generation \u2705\n     * PKCS1v1.5: Encryption & Decryption \u2705\n     * PKCS1v1.5: Sign & Verify \u2705\n     * PKCS1v1.5 (session key): Encryption & Decryption\n     * OAEP: Encryption & Decryption\n     * PSS: Sign & Verify\n     * Key import & export\n  2. \ud83d\ude80 Make it fast \n     * Benchmarks \u2705\n     * compare to other implementations \ud83d\udea7\n     * optimize \ud83d\udea7\n  3. \ud83d\udd10 Make it secure \n     * Fuzz testing\n     * Security Audits\n\n\n### \u00a7\u27e814\u27e9\u26a0\ufe0fSecurity Warning\nThis crate has received one security audit by Include Security\u27e815\u27e9, with only one minor finding which has since been addressed.\nSee the open security issues\u27e816\u27e9 on our issue tracker for other known problems.\n~~Notably the implementation ofmodular exponentiation is not constant time\u27e817\u27e9, but timing variability is masked using random blinding\u27e818\u27e9), a commonly used technique.~~ This crate is vulnerable to the Marvin Attack\u27e819\u27e9 which could enable private key recovery by a network attacker (see RUSTSEC-2023-0071\u27e820\u27e9).\nYou can follow our work on mitigating this issue in #390\u27e821\u27e9.\n### \u00a7\u27e822\u27e9Minimum Supported Rust Version (MSRV)\nAll crates in this repository support Rust 1.65 or higher.\nIn the future MSRV can be changed, but it will be done with a minor version bump.\n### \u00a7\u27e823\u27e9License\nLicensed under either of\n  * Apache License, Version 2.0\u27e824\u27e9\n  * MIT license\u27e825\u27e9\n\n\nat your option.\n#### \u00a7\u27e826\u27e9Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n## \u00a7\u27e827\u27e9Supported algorithms\nThis crate supports several schemes described in RFC8017\u27e828\u27e9:\n  * OAEP encryption scheme\u27e829\u27e9\n  * PKCS#1 v1.5 encryption scheme\u27e830\u27e9\n  * PKCS#1 v1.5 signature scheme\u27e831\u27e9\n  * PSS signature scheme\u27e832\u27e9\n\n\nThese schemes are described below.\n## \u00a7\u27e833\u27e9Usage\n### \u00a7\u27e829\u27e9OAEP encryption\nNote: requires `sha2` feature of `rsa` crate is enabled.\n```\nuse rsa::{RsaPrivateKey, RsaPublicKey, Oaep, sha2::Sha256};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet public_key = RsaPublicKey::from(&private_key);\n// Encrypt\nlet data = b\"hello world\";\nlet padding = Oaep::new::<Sha256>();\nlet enc_data = public_key.encrypt(&mut rng, padding, &data[..]).expect(\"failed to encrypt\");\nassert_ne!(&data[..], &enc_data[..]);\n// Decrypt\nlet padding = Oaep::new::<Sha256>();\nlet dec_data = private_key.decrypt(padding, &enc_data).expect(\"failed to decrypt\");\nassert_eq!(&data[..], &dec_data[..]);\n```\n\n### \u00a7\u27e830\u27e9PKCS#1 v1.5 encryption\n```\nuse rsa::{RsaPrivateKey, RsaPublicKey, Pkcs1v15Encrypt};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet public_key = RsaPublicKey::from(&private_key);\n// Encrypt\nlet data = b\"hello world\";\nlet enc_data = public_key.encrypt(&mut rng, Pkcs1v15Encrypt, &data[..]).expect(\"failed to encrypt\");\nassert_ne!(&data[..], &enc_data[..]);\n// Decrypt\nlet dec_data = private_key.decrypt(Pkcs1v15Encrypt, &enc_data).expect(\"failed to decrypt\");\nassert_eq!(&data[..], &dec_data[..]);\n```\n\n### \u00a7\u27e831\u27e9PKCS#1 v1.5 signatures\nNote: requires `sha2` feature of `rsa` crate is enabled.\n```\nuse rsa::RsaPrivateKey;\nuse rsa::pkcs1v15::{SigningKey, VerifyingKey};\nuse rsa::signature::{Keypair, RandomizedSigner, SignatureEncoding, Verifier};\nuse rsa::sha2::{Digest, Sha256};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet signing_key = SigningKey::<Sha256>::new(private_key);\nlet verifying_key = signing_key.verifying_key();\n// Sign\nlet data = b\"hello world\";\nlet signature = signing_key.sign_with_rng(&mut rng, data);\nassert_ne!(signature.to_bytes().as_ref(), data.as_slice());\n// Verify\nverifying_key.verify(data, &signature).expect(\"failed to verify\");\n```\n\n### \u00a7\u27e832\u27e9PSS signatures\nNote: requires `sha2` feature of `rsa` crate is enabled.\n```\nuse rsa::RsaPrivateKey;\nuse rsa::pss::{BlindedSigningKey, VerifyingKey};\nuse rsa::signature::{Keypair,RandomizedSigner, SignatureEncoding, Verifier};\nuse rsa::sha2::{Digest, Sha256};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet signing_key = BlindedSigningKey::<Sha256>::new(private_key);\nlet verifying_key = signing_key.verifying_key();\n// Sign\nlet data = b\"hello world\";\nlet signature = signing_key.sign_with_rng(&mut rng, data);\nassert_ne!(signature.to_bytes().as_ref(), data);\n// Verify\nverifying_key.verify(data, &signature).expect(\"failed to verify\");\n```\n\n### \u00a7\u27e834\u27e9PKCS#1 RSA Key Encoding\nPKCS#1 supports a legacy format for encoding RSA keys as binary (DER) or text (PEM) data.\nYou can recognize PEM encoded PKCS#1 keys because they have \u201cRSA * KEY\u201d in the type label, e.g.:\n```\n-----BEGIN RSA PRIVATE KEY-----\n```\n\nMost modern applications use the newer PKCS#8 format instead (see below).\nThe following traits can be used to decode/encode `RsaPrivateKey`\u27e835\u27e9 and `RsaPublicKey`\u27e836\u27e9 as PKCS#1. Note that `pkcs1`\u27e837\u27e9 is re-exported from the toplevel of the `rsa` crate:\n  * `pkcs1::DecodeRsaPrivateKey`\u27e838\u27e9: decode RSA private keys from PKCS#1\n  * `pkcs1::EncodeRsaPrivateKey`\u27e839\u27e9: encode RSA private keys to PKCS#1\n  * `pkcs1::DecodeRsaPublicKey`\u27e840\u27e9: decode RSA public keys from PKCS#1\n  * `pkcs1::EncodeRsaPublicKey`\u27e841\u27e9: encode RSA public keys to PKCS#1\n\n\n#### \u00a7\u27e842\u27e9Example\n```\nuse rsa::{RsaPublicKey, pkcs1::DecodeRsaPublicKey};\nlet pem = \"-----BEGIN RSA PUBLIC KEY-----\nMIIBCgKCAQEAtsQsUV8QpqrygsY+2+JCQ6Fw8/omM71IM2N/R8pPbzbgOl0p78MZ\nGsgPOQ2HSznjD0FPzsH8oO2B5Uftws04LHb2HJAYlz25+lN5cqfHAfa3fgmC38Ff\nwBkn7l582UtPWZ/wcBOnyCgb3yLcvJrXyrt8QxHJgvWO23ITrUVYszImbXQ67YGS\n0YhMrbixRzmo2tpm3JcIBtnHrEUMsT0NfFdfsZhTT8YbxBvA8FdODgEwx7u/vf3J\n9qbi4+Kv8cvqyJuleIRSjVXPsIMnoejIn04APPKIjpMyQdnWlby7rNyQtE4+CV+j\ncFjqJbE/Xilcvqxt6DirjFCvYeKYl1uHLwIDAQAB\n-----END RSA PUBLIC KEY-----\";\nlet public_key = RsaPublicKey::from_pkcs1_pem(pem)?;\n```\n\n### \u00a7\u27e843\u27e9PKCS#8 RSA Key Encoding\nPKCS#8 is a private key format with support for multiple algorithms. Like PKCS#1, it can be encoded as binary (DER) or text (PEM).\nYou can recognize PEM encoded PKCS#8 keys because they _don\u2019t_ have an algorithm name in the type label, e.g.:\n```\n-----BEGIN PRIVATE KEY-----\n```\n\nThe following traits can be used to decode/encode `RsaPrivateKey`\u27e835\u27e9 and `RsaPublicKey`\u27e836\u27e9 as PKCS#8. Note that `pkcs8`\u27e844\u27e9 is re-exported from the toplevel of the `rsa` crate:\n  * `pkcs8::DecodePrivateKey`\u27e845\u27e9: decode private keys from PKCS#8\n  * `pkcs8::EncodePrivateKey`\u27e846\u27e9: encode private keys to PKCS#8\n  * `pkcs8::DecodePublicKey`\u27e847\u27e9: decode public keys from PKCS#8\n  * `pkcs8::EncodePublicKey`\u27e848\u27e9: encode public keys to PKCS#8\n\n\n#### \u00a7\u27e849\u27e9Example\n```\nuse rsa::{RsaPublicKey, pkcs8::DecodePublicKey};\nlet pem = \"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtsQsUV8QpqrygsY+2+JC\nQ6Fw8/omM71IM2N/R8pPbzbgOl0p78MZGsgPOQ2HSznjD0FPzsH8oO2B5Uftws04\nLHb2HJAYlz25+lN5cqfHAfa3fgmC38FfwBkn7l582UtPWZ/wcBOnyCgb3yLcvJrX\nyrt8QxHJgvWO23ITrUVYszImbXQ67YGS0YhMrbixRzmo2tpm3JcIBtnHrEUMsT0N\nfFdfsZhTT8YbxBvA8FdODgEwx7u/vf3J9qbi4+Kv8cvqyJuleIRSjVXPsIMnoejI\nn04APPKIjpMyQdnWlby7rNyQtE4+CV+jcFjqJbE/Xilcvqxt6DirjFCvYeKYl1uH\nLwIDAQAB\n-----END PUBLIC KEY-----\";\nlet public_key = RsaPublicKey::from_public_key_pem(pem)?;\n```\n\n## Re-exports\u00a7\u27e850\u27e9\n\n`pub use crate::errors::Error[](https://docs.rs/rsa/latest/rsa/errors/enum.Error.html \"enum rsa::errors::Error\");`\n\n\n`pub use crate::errors::Result[](https://docs.rs/rsa/latest/rsa/errors/type.Result.html \"type rsa::errors::Result\");`\n\n\n`pub use crate::oaep::Oaep[](https://docs.rs/rsa/latest/rsa/oaep/struct.Oaep.html \"struct rsa::oaep::Oaep\");`\n\n\n`pub use crate::pkcs1v15::Pkcs1v15Encrypt[](https://docs.rs/rsa/latest/rsa/pkcs1v15/struct.Pkcs1v15Encrypt.html \"struct rsa::pkcs1v15::Pkcs1v15Encrypt\");`\n\n\n`pub use crate::pkcs1v15::Pkcs1v15Sign[](https://docs.rs/rsa/latest/rsa/pkcs1v15/struct.Pkcs1v15Sign.html \"struct rsa::pkcs1v15::Pkcs1v15Sign\");`\n\n\n`pub use crate::pss::Pss[](https://docs.rs/rsa/latest/rsa/pss/struct.Pss.html \"struct rsa::pss::Pss\");`\n\n\n`pub use rand_core[](https://docs.rs/rand_core/0.6.4/x86_64-unknown-linux-gnu/rand_core/index.html \"mod rand_core\");`\n\n\n`pub use signature[](https://docs.rs/signature/2.2.0/x86_64-unknown-linux-gnu/signature/index.html \"mod signature\");`\n\n\n`pub use pkcs1[](https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/index.html \"mod pkcs1\");`\n\n\n`pub use pkcs8[](https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/index.html \"mod pkcs8\");`\n\n\n`pub use sha2[](https://docs.rs/sha2/0.10.9/x86_64-unknown-linux-gnu/sha2/index.html \"mod sha2\");``sha2`\n\n## Modules\u00a7\u27e851\u27e9\n\nerrors\u27e852\u27e9\n    Error types.\n\nhazmat\u27e853\u27e9`hazmat`\n    \u26a0\ufe0f Low-level \u201chazmat\u201d RSA functions.\n\noaep\u27e854\u27e9\n    Encryption and Decryption using OAEP padding\u27e855\u27e9.\n\npkcs1v15\u27e856\u27e9\n    PKCS#1 v1.5 support as described in RFC8017 \u00a7 8.2\u27e857\u27e9.\n\npss\u27e858\u27e9\n    Support for the Probabilistic Signature Scheme\u27e859\u27e9 (PSS) a.k.a. RSASSA-PSS.\n\ntraits\u27e860\u27e9\n    RSA-related trait definitions.\n## Structs\u00a7\u27e861\u27e9\n\nBigUint\u27e862\u27e9\n    A big unsigned integer type.\n\nCrtValue\u27e863\u27e9\n    Contains the precomputed Chinese remainder theorem values.\n\nRsaPrivateKey\u27e835\u27e9\n    Represents a whole RSA key, public and private parts.\n\nRsaPublicKey\u27e836\u27e9\n    Represents the public part of an RSA key.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/rsa/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/rsa/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/rsa/latest/src/rsa/lib.rs.html#1-255: Source\n\u27e84\u27e9 https://docs.rs/rsa/latest/rsa/#rustcrypto-rsa: \u00a7\n\u27e85\u27e9 https://github.com/RustCrypto/: RustCrypto\n\u27e86\u27e9 https://buildstats.info/crate/rsa: ![crates.io\n\u27e87\u27e9 https://docs.rs/rsa/badge.svg: ![Documentation\n\u27e88\u27e9 https://github.com/rustcrypto/RSA/workflows/CI/badge.svg: ![Build Status\n\u27e89\u27e9 https://deps.rs/repo/github/RustCrypto/RSA/status.svg: ![dependency status\n\u27e810\u27e9 https://img.shields.io/badge/rustc-1.65+-blue.svg: MSRV\n\u27e811\u27e9 https://img.shields.io/badge/zulip-join_chat-blue.svg: ![Project Chat\n\u27e812\u27e9 https://docs.rs/rsa/latest/rsa/#example: \u00a7\n\u27e813\u27e9 https://docs.rs/rsa/latest/rsa/#status: \u00a7\n\u27e814\u27e9 https://docs.rs/rsa/latest/rsa/#security-warning: \u00a7\n\u27e815\u27e9 https://www.opentech.fund/results/security-safety-audits/deltachat/: security audit by Include Security\n\u27e816\u27e9 https://github.com/RustCrypto/RSA/issues?q=is%3Aissue+is%3Aopen+label%3Asecurity: open security issues\n\u27e817\u27e9 https://github.com/RustCrypto/RSA/issues/19: modular exponentiation is not constant time\n\u27e818\u27e9 https://en.wikipedia.org/wiki/Blinding_\\(cryptography\\: random blinding\n\u27e819\u27e9 https://people.redhat.com/~hkario/marvin/: Marvin Attack\n\u27e820\u27e9 https://rustsec.org/advisories/RUSTSEC-2023-0071.html: RUSTSEC-2023-0071\n\u27e821\u27e9 https://github.com/RustCrypto/RSA/issues/390: #390\n\u27e822\u27e9 https://docs.rs/rsa/latest/rsa/#minimum-supported-rust-version-msrv: \u00a7\n\u27e823\u27e9 https://docs.rs/rsa/latest/rsa/#license: \u00a7\n\u27e824\u27e9 http://www.apache.org/licenses/LICENSE-2.0: Apache License, Version 2.0\n\u27e825\u27e9 http://opensource.org/licenses/MIT: MIT license\n\u27e826\u27e9 https://docs.rs/rsa/latest/rsa/#contribution: \u00a7\n\u27e827\u27e9 https://docs.rs/rsa/latest/rsa/#supported-algorithms: \u00a7\n\u27e828\u27e9 https://datatracker.ietf.org/doc/html/rfc8017#section-8.1: RFC8017\n\u27e829\u27e9 https://docs.rs/rsa/latest/rsa/#oaep-encryption: OAEP encryption scheme\n\u27e830\u27e9 https://docs.rs/rsa/latest/rsa/#pkcs1-v15-encryption: PKCS#1 v1.5 encryption scheme\n\u27e831\u27e9 https://docs.rs/rsa/latest/rsa/#pkcs1-v15-signatures: PKCS#1 v1.5 signature scheme\n\u27e832\u27e9 https://docs.rs/rsa/latest/rsa/#pss-signatures: PSS signature scheme\n\u27e833\u27e9 https://docs.rs/rsa/latest/rsa/#usage: \u00a7\n\u27e834\u27e9 https://docs.rs/rsa/latest/rsa/#pkcs1-rsa-key-encoding: \u00a7\n\u27e835\u27e9 https://docs.rs/rsa/latest/rsa/struct.RsaPrivateKey.html: struct rsa::RsaPrivateKey - `RsaPrivateKey`\n\u27e836\u27e9 https://docs.rs/rsa/latest/rsa/struct.RsaPublicKey.html: struct rsa::RsaPublicKey - `RsaPublicKey`\n\u27e837\u27e9 https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/index.html: mod pkcs1 - `pkcs1`\n\u27e838\u27e9 https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.DecodeRsaPrivateKey.html: trait pkcs1::traits::DecodeRsaPrivateKey - `pkcs1::DecodeRsaPrivateKey`\n\u27e839\u27e9 https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.EncodeRsaPrivateKey.html: trait pkcs1::traits::EncodeRsaPrivateKey - `pkcs1::EncodeRsaPrivateKey`\n\u27e840\u27e9 https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.DecodeRsaPublicKey.html: trait pkcs1::traits::DecodeRsaPublicKey - `pkcs1::DecodeRsaPublicKey`\n\u27e841\u27e9 https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.EncodeRsaPublicKey.html: trait pkcs1::traits::EncodeRsaPublicKey - `pkcs1::EncodeRsaPublicKey`\n\u27e842\u27e9 https://docs.rs/rsa/latest/rsa/#example-1: \u00a7\n\u27e843\u27e9 https://docs.rs/rsa/latest/rsa/#pkcs8-rsa-key-encoding: \u00a7\n\u27e844\u27e9 https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/index.html: mod pkcs8 - `pkcs8`\n\u27e845\u27e9 https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/traits/trait.DecodePrivateKey.html: trait pkcs8::traits::DecodePrivateKey - `pkcs8::DecodePrivateKey`\n\u27e846\u27e9 https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/traits/trait.EncodePrivateKey.html: trait pkcs8::traits::EncodePrivateKey - `pkcs8::EncodePrivateKey`\n\u27e847\u27e9 https://docs.rs/pkcs8/latest/pkcs8/trait.DecodePublicKey.html: `pkcs8::DecodePublicKey`\n\u27e848\u27e9 https://docs.rs/pkcs8/latest/pkcs8/trait.EncodePublicKey.html: `pkcs8::EncodePublicKey`\n\u27e849\u27e9 https://docs.rs/rsa/latest/rsa/#example-2: \u00a7\n\u27e850\u27e9 https://docs.rs/rsa/latest/rsa/#reexports: \u00a7\n\u27e851\u27e9 https://docs.rs/rsa/latest/rsa/#modules: \u00a7\n\u27e852\u27e9 https://docs.rs/rsa/latest/rsa/errors/index.html: mod rsa::errors - errors\n\u27e853\u27e9 https://docs.rs/rsa/latest/rsa/hazmat/index.html: mod rsa::hazmat - hazmat\n\u27e854\u27e9 https://docs.rs/rsa/latest/rsa/oaep/index.html: mod rsa::oaep - oaep\n\u27e855\u27e9 https://datatracker.ietf.org/doc/html/rfc8017#section-7.1: OAEP padding\n\u27e856\u27e9 https://docs.rs/rsa/latest/rsa/pkcs1v15/index.html: mod rsa::pkcs1v15 - pkcs1v15\n\u27e857\u27e9 https://datatracker.ietf.org/doc/html/rfc8017#section-8.2: RFC8017 \u00a7 8.2\n\u27e858\u27e9 https://docs.rs/rsa/latest/rsa/pss/index.html: mod rsa::pss - pss\n\u27e859\u27e9 https://en.wikipedia.org/wiki/Probabilistic_signature_scheme: Probabilistic Signature Scheme\n\u27e860\u27e9 https://docs.rs/rsa/latest/rsa/traits/index.html: mod rsa::traits - traits\n\u27e861\u27e9 https://docs.rs/rsa/latest/rsa/#structs: \u00a7\n\u27e862\u27e9 https://docs.rs/rsa/latest/rsa/struct.BigUint.html: struct rsa::BigUint - BigUint\n\u27e863\u27e9 https://docs.rs/rsa/latest/rsa/struct.CrtValue.html: struct rsa::CrtValue - CrtValue\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "rsa",
          "version": "0.10.0-rc.1",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/rsa/latest/rsa/all.html \"show sidebar\")\n# Crate rsaCopy item path\n[Settings](https://docs.rs/rsa/latest/settings.html)\n[Help](https://docs.rs/rsa/latest/help.html)\nSummary[Source](https://docs.rs/rsa/latest/src/rsa/lib.rs.html#1-255)\nExpand description\n## [\u00a7](https://docs.rs/rsa/latest/rsa/#rustcrypto-rsa)[RustCrypto](https://github.com/RustCrypto/): RSA\n[![crates.io](https://buildstats.info/crate/rsa)](https://crates.io/crates/rsa) [![Documentation](https://docs.rs/rsa/badge.svg)](https://docs.rs/rsa) [![Build Status](https://github.com/rustcrypto/RSA/workflows/CI/badge.svg)](https://github.com/RustCrypto/RSA/actions?query=workflow%3ACI+branch%3Amaster) [![dependency status](https://deps.rs/repo/github/RustCrypto/RSA/status.svg)](https://deps.rs/repo/github/RustCrypto/RSA) ![MSRV](https://img.shields.io/badge/rustc-1.65+-blue.svg) [![Project Chat](https://img.shields.io/badge/zulip-join_chat-blue.svg)](https://rustcrypto.zulipchat.com/#narrow/stream/260047-RSA)\nA portable RSA implementation in pure Rust.\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#example)Example\n```\nuse rsa::{Pkcs1v15Encrypt, RsaPrivateKey, RsaPublicKey};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet priv_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet pub_key = RsaPublicKey::from(&priv_key);\n// Encrypt\nlet data = b\"hello world\";\nlet enc_data = pub_key.encrypt(&mut rng, Pkcs1v15Encrypt, &data[..]).expect(\"failed to encrypt\");\nassert_ne!(&data[..], &enc_data[..]);\n// Decrypt\nlet dec_data = priv_key.decrypt(Pkcs1v15Encrypt, &enc_data).expect(\"failed to decrypt\");\nassert_eq!(&data[..], &dec_data[..]);\n```\n\n> **Note:** If you encounter unusually slow key generation time while using `RsaPrivateKey::new` you can try to compile in release mode or add the following to your `Cargo.toml`. Key generation is much faster when building with higher optimization levels, but this will increase the compile time a bit.\n> ```\n[profile.debug]\nopt-level = 3\n```\n\n> If you don\u2019t want to turn on optimizations for all dependencies, you can only optimize the `num-bigint-dig` dependency. This should give most of the speedups.\n> ```\n[profile.dev.package.num-bigint-dig]\nopt-level = 3\n```\n\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#status)Status\nCurrently at Phase 1 (v) \ud83d\udea7\nThere will be three phases before `1.0` \ud83d\udea2 can be released.\n  1. \ud83d\udea7 Make it work \n     * Prime generation \u2705\n     * Key generation \u2705\n     * PKCS1v1.5: Encryption & Decryption \u2705\n     * PKCS1v1.5: Sign & Verify \u2705\n     * PKCS1v1.5 (session key): Encryption & Decryption\n     * OAEP: Encryption & Decryption\n     * PSS: Sign & Verify\n     * Key import & export\n  2. \ud83d\ude80 Make it fast \n     * Benchmarks \u2705\n     * compare to other implementations \ud83d\udea7\n     * optimize \ud83d\udea7\n  3. \ud83d\udd10 Make it secure \n     * Fuzz testing\n     * Security Audits\n\n\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#security-warning)\u26a0\ufe0fSecurity Warning\nThis crate has received one [security audit by Include Security](https://www.opentech.fund/results/security-safety-audits/deltachat/), with only one minor finding which has since been addressed.\nSee the [open security issues](https://github.com/RustCrypto/RSA/issues?q=is%3Aissue+is%3Aopen+label%3Asecurity) on our issue tracker for other known problems.\n~~Notably the implementation of[modular exponentiation is not constant time](https://github.com/RustCrypto/RSA/issues/19), but timing variability is masked using [random blinding](https://en.wikipedia.org/wiki/Blinding_\\(cryptography\\)), a commonly used technique.~~ This crate is vulnerable to the [Marvin Attack](https://people.redhat.com/~hkario/marvin/) which could enable private key recovery by a network attacker (see [RUSTSEC-2023-0071](https://rustsec.org/advisories/RUSTSEC-2023-0071.html)).\nYou can follow our work on mitigating this issue in [#390](https://github.com/RustCrypto/RSA/issues/390).\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#minimum-supported-rust-version-msrv)Minimum Supported Rust Version (MSRV)\nAll crates in this repository support Rust 1.65 or higher.\nIn the future MSRV can be changed, but it will be done with a minor version bump.\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#license)License\nLicensed under either of\n  * [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0)\n  * [MIT license](http://opensource.org/licenses/MIT)\n\n\nat your option.\n#### [\u00a7](https://docs.rs/rsa/latest/rsa/#contribution)Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n## [\u00a7](https://docs.rs/rsa/latest/rsa/#supported-algorithms)Supported algorithms\nThis crate supports several schemes described in [RFC8017](https://datatracker.ietf.org/doc/html/rfc8017#section-8.1):\n  * [OAEP encryption scheme](https://docs.rs/rsa/latest/rsa/#oaep-encryption)\n  * [PKCS#1 v1.5 encryption scheme](https://docs.rs/rsa/latest/rsa/#pkcs1-v15-encryption)\n  * [PKCS#1 v1.5 signature scheme](https://docs.rs/rsa/latest/rsa/#pkcs1-v15-signatures)\n  * [PSS signature scheme](https://docs.rs/rsa/latest/rsa/#pss-signatures)\n\n\nThese schemes are described below.\n## [\u00a7](https://docs.rs/rsa/latest/rsa/#usage)Usage\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#oaep-encryption)OAEP encryption\nNote: requires `sha2` feature of `rsa` crate is enabled.\n```\nuse rsa::{RsaPrivateKey, RsaPublicKey, Oaep, sha2::Sha256};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet public_key = RsaPublicKey::from(&private_key);\n// Encrypt\nlet data = b\"hello world\";\nlet padding = Oaep::new::<Sha256>();\nlet enc_data = public_key.encrypt(&mut rng, padding, &data[..]).expect(\"failed to encrypt\");\nassert_ne!(&data[..], &enc_data[..]);\n// Decrypt\nlet padding = Oaep::new::<Sha256>();\nlet dec_data = private_key.decrypt(padding, &enc_data).expect(\"failed to decrypt\");\nassert_eq!(&data[..], &dec_data[..]);\n```\n\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#pkcs1-v15-encryption)PKCS#1 v1.5 encryption\n```\nuse rsa::{RsaPrivateKey, RsaPublicKey, Pkcs1v15Encrypt};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet public_key = RsaPublicKey::from(&private_key);\n// Encrypt\nlet data = b\"hello world\";\nlet enc_data = public_key.encrypt(&mut rng, Pkcs1v15Encrypt, &data[..]).expect(\"failed to encrypt\");\nassert_ne!(&data[..], &enc_data[..]);\n// Decrypt\nlet dec_data = private_key.decrypt(Pkcs1v15Encrypt, &enc_data).expect(\"failed to decrypt\");\nassert_eq!(&data[..], &dec_data[..]);\n```\n\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#pkcs1-v15-signatures)PKCS#1 v1.5 signatures\nNote: requires `sha2` feature of `rsa` crate is enabled.\n```\nuse rsa::RsaPrivateKey;\nuse rsa::pkcs1v15::{SigningKey, VerifyingKey};\nuse rsa::signature::{Keypair, RandomizedSigner, SignatureEncoding, Verifier};\nuse rsa::sha2::{Digest, Sha256};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet signing_key = SigningKey::<Sha256>::new(private_key);\nlet verifying_key = signing_key.verifying_key();\n// Sign\nlet data = b\"hello world\";\nlet signature = signing_key.sign_with_rng(&mut rng, data);\nassert_ne!(signature.to_bytes().as_ref(), data.as_slice());\n// Verify\nverifying_key.verify(data, &signature).expect(\"failed to verify\");\n```\n\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#pss-signatures)PSS signatures\nNote: requires `sha2` feature of `rsa` crate is enabled.\n```\nuse rsa::RsaPrivateKey;\nuse rsa::pss::{BlindedSigningKey, VerifyingKey};\nuse rsa::signature::{Keypair,RandomizedSigner, SignatureEncoding, Verifier};\nuse rsa::sha2::{Digest, Sha256};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet signing_key = BlindedSigningKey::<Sha256>::new(private_key);\nlet verifying_key = signing_key.verifying_key();\n// Sign\nlet data = b\"hello world\";\nlet signature = signing_key.sign_with_rng(&mut rng, data);\nassert_ne!(signature.to_bytes().as_ref(), data);\n// Verify\nverifying_key.verify(data, &signature).expect(\"failed to verify\");\n```\n\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#pkcs1-rsa-key-encoding)PKCS#1 RSA Key Encoding\nPKCS#1 supports a legacy format for encoding RSA keys as binary (DER) or text (PEM) data.\nYou can recognize PEM encoded PKCS#1 keys because they have \u201cRSA * KEY\u201d in the type label, e.g.:\n```\n-----BEGIN RSA PRIVATE KEY-----\n```\n\nMost modern applications use the newer PKCS#8 format instead (see below).\nThe following traits can be used to decode/encode [`RsaPrivateKey`](https://docs.rs/rsa/latest/rsa/struct.RsaPrivateKey.html \"struct rsa::RsaPrivateKey\") and [`RsaPublicKey`](https://docs.rs/rsa/latest/rsa/struct.RsaPublicKey.html \"struct rsa::RsaPublicKey\") as PKCS#1. Note that [`pkcs1`](https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/index.html \"mod pkcs1\") is re-exported from the toplevel of the `rsa` crate:\n  * [`pkcs1::DecodeRsaPrivateKey`](https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.DecodeRsaPrivateKey.html \"trait pkcs1::traits::DecodeRsaPrivateKey\"): decode RSA private keys from PKCS#1\n  * [`pkcs1::EncodeRsaPrivateKey`](https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.EncodeRsaPrivateKey.html \"trait pkcs1::traits::EncodeRsaPrivateKey\"): encode RSA private keys to PKCS#1\n  * [`pkcs1::DecodeRsaPublicKey`](https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.DecodeRsaPublicKey.html \"trait pkcs1::traits::DecodeRsaPublicKey\"): decode RSA public keys from PKCS#1\n  * [`pkcs1::EncodeRsaPublicKey`](https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.EncodeRsaPublicKey.html \"trait pkcs1::traits::EncodeRsaPublicKey\"): encode RSA public keys to PKCS#1\n\n\n#### [\u00a7](https://docs.rs/rsa/latest/rsa/#example-1)Example\n```\nuse rsa::{RsaPublicKey, pkcs1::DecodeRsaPublicKey};\nlet pem = \"-----BEGIN RSA PUBLIC KEY-----\nMIIBCgKCAQEAtsQsUV8QpqrygsY+2+JCQ6Fw8/omM71IM2N/R8pPbzbgOl0p78MZ\nGsgPOQ2HSznjD0FPzsH8oO2B5Uftws04LHb2HJAYlz25+lN5cqfHAfa3fgmC38Ff\nwBkn7l582UtPWZ/wcBOnyCgb3yLcvJrXyrt8QxHJgvWO23ITrUVYszImbXQ67YGS\n0YhMrbixRzmo2tpm3JcIBtnHrEUMsT0NfFdfsZhTT8YbxBvA8FdODgEwx7u/vf3J\n9qbi4+Kv8cvqyJuleIRSjVXPsIMnoejIn04APPKIjpMyQdnWlby7rNyQtE4+CV+j\ncFjqJbE/Xilcvqxt6DirjFCvYeKYl1uHLwIDAQAB\n-----END RSA PUBLIC KEY-----\";\nlet public_key = RsaPublicKey::from_pkcs1_pem(pem)?;\n```\n\n### [\u00a7](https://docs.rs/rsa/latest/rsa/#pkcs8-rsa-key-encoding)PKCS#8 RSA Key Encoding\nPKCS#8 is a private key format with support for multiple algorithms. Like PKCS#1, it can be encoded as binary (DER) or text (PEM).\nYou can recognize PEM encoded PKCS#8 keys because they _don\u2019t_ have an algorithm name in the type label, e.g.:\n```\n-----BEGIN PRIVATE KEY-----\n```\n\nThe following traits can be used to decode/encode [`RsaPrivateKey`](https://docs.rs/rsa/latest/rsa/struct.RsaPrivateKey.html \"struct rsa::RsaPrivateKey\") and [`RsaPublicKey`](https://docs.rs/rsa/latest/rsa/struct.RsaPublicKey.html \"struct rsa::RsaPublicKey\") as PKCS#8. Note that [`pkcs8`](https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/index.html \"mod pkcs8\") is re-exported from the toplevel of the `rsa` crate:\n  * [`pkcs8::DecodePrivateKey`](https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/traits/trait.DecodePrivateKey.html \"trait pkcs8::traits::DecodePrivateKey\"): decode private keys from PKCS#8\n  * [`pkcs8::EncodePrivateKey`](https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/traits/trait.EncodePrivateKey.html \"trait pkcs8::traits::EncodePrivateKey\"): encode private keys to PKCS#8\n  * [`pkcs8::DecodePublicKey`](https://docs.rs/pkcs8/latest/pkcs8/trait.DecodePublicKey.html): decode public keys from PKCS#8\n  * [`pkcs8::EncodePublicKey`](https://docs.rs/pkcs8/latest/pkcs8/trait.EncodePublicKey.html): encode public keys to PKCS#8\n\n\n#### [\u00a7](https://docs.rs/rsa/latest/rsa/#example-2)Example\n```\nuse rsa::{RsaPublicKey, pkcs8::DecodePublicKey};\nlet pem = \"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtsQsUV8QpqrygsY+2+JC\nQ6Fw8/omM71IM2N/R8pPbzbgOl0p78MZGsgPOQ2HSznjD0FPzsH8oO2B5Uftws04\nLHb2HJAYlz25+lN5cqfHAfa3fgmC38FfwBkn7l582UtPWZ/wcBOnyCgb3yLcvJrX\nyrt8QxHJgvWO23ITrUVYszImbXQ67YGS0YhMrbixRzmo2tpm3JcIBtnHrEUMsT0N\nfFdfsZhTT8YbxBvA8FdODgEwx7u/vf3J9qbi4+Kv8cvqyJuleIRSjVXPsIMnoejI\nn04APPKIjpMyQdnWlby7rNyQtE4+CV+jcFjqJbE/Xilcvqxt6DirjFCvYeKYl1uH\nLwIDAQAB\n-----END PUBLIC KEY-----\";\nlet public_key = RsaPublicKey::from_public_key_pem(pem)?;\n```\n\n## Re-exports[\u00a7](https://docs.rs/rsa/latest/rsa/#reexports)\n\n`pub use crate::errors::Error[](https://docs.rs/rsa/latest/rsa/errors/enum.Error.html \"enum rsa::errors::Error\");`\n\n\n`pub use crate::errors::Result[](https://docs.rs/rsa/latest/rsa/errors/type.Result.html \"type rsa::errors::Result\");`\n\n\n`pub use crate::oaep::Oaep[](https://docs.rs/rsa/latest/rsa/oaep/struct.Oaep.html \"struct rsa::oaep::Oaep\");`\n\n\n`pub use crate::pkcs1v15::Pkcs1v15Encrypt[](https://docs.rs/rsa/latest/rsa/pkcs1v15/struct.Pkcs1v15Encrypt.html \"struct rsa::pkcs1v15::Pkcs1v15Encrypt\");`\n\n\n`pub use crate::pkcs1v15::Pkcs1v15Sign[](https://docs.rs/rsa/latest/rsa/pkcs1v15/struct.Pkcs1v15Sign.html \"struct rsa::pkcs1v15::Pkcs1v15Sign\");`\n\n\n`pub use crate::pss::Pss[](https://docs.rs/rsa/latest/rsa/pss/struct.Pss.html \"struct rsa::pss::Pss\");`\n\n\n`pub use rand_core[](https://docs.rs/rand_core/0.6.4/x86_64-unknown-linux-gnu/rand_core/index.html \"mod rand_core\");`\n\n\n`pub use signature[](https://docs.rs/signature/2.2.0/x86_64-unknown-linux-gnu/signature/index.html \"mod signature\");`\n\n\n`pub use pkcs1[](https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/index.html \"mod pkcs1\");`\n\n\n`pub use pkcs8[](https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/index.html \"mod pkcs8\");`\n\n\n`pub use sha2[](https://docs.rs/sha2/0.10.9/x86_64-unknown-linux-gnu/sha2/index.html \"mod sha2\");``sha2`\n\n## Modules[\u00a7](https://docs.rs/rsa/latest/rsa/#modules)\n\n[errors](https://docs.rs/rsa/latest/rsa/errors/index.html \"mod rsa::errors\")\n    Error types.\n\n[hazmat](https://docs.rs/rsa/latest/rsa/hazmat/index.html \"mod rsa::hazmat\")`hazmat`\n    \u26a0\ufe0f Low-level \u201chazmat\u201d RSA functions.\n\n[oaep](https://docs.rs/rsa/latest/rsa/oaep/index.html \"mod rsa::oaep\")\n    Encryption and Decryption using [OAEP padding](https://datatracker.ietf.org/doc/html/rfc8017#section-7.1).\n\n[pkcs1v15](https://docs.rs/rsa/latest/rsa/pkcs1v15/index.html \"mod rsa::pkcs1v15\")\n    PKCS#1 v1.5 support as described in [RFC8017 \u00a7 8.2](https://datatracker.ietf.org/doc/html/rfc8017#section-8.2).\n\n[pss](https://docs.rs/rsa/latest/rsa/pss/index.html \"mod rsa::pss\")\n    Support for the [Probabilistic Signature Scheme](https://en.wikipedia.org/wiki/Probabilistic_signature_scheme) (PSS) a.k.a. RSASSA-PSS.\n\n[traits](https://docs.rs/rsa/latest/rsa/traits/index.html \"mod rsa::traits\")\n    RSA-related trait definitions.\n## Structs[\u00a7](https://docs.rs/rsa/latest/rsa/#structs)\n\n[BigUint](https://docs.rs/rsa/latest/rsa/struct.BigUint.html \"struct rsa::BigUint\")\n    A big unsigned integer type.\n\n[CrtValue](https://docs.rs/rsa/latest/rsa/struct.CrtValue.html \"struct rsa::CrtValue\")\n    Contains the precomputed Chinese remainder theorem values.\n\n[RsaPrivateKey](https://docs.rs/rsa/latest/rsa/struct.RsaPrivateKey.html \"struct rsa::RsaPrivateKey\")\n    Represents a whole RSA key, public and private parts.\n\n[RsaPublicKey](https://docs.rs/rsa/latest/rsa/struct.RsaPublicKey.html \"struct rsa::RsaPublicKey\")\n    Represents the public part of an RSA key.\n",
            "markdown_with_citations": "[](https://docs.rs/rsa/latest/rsa/all.html \"show sidebar\")\n# Crate rsaCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9RustCrypto\u27e85\u27e9: RSA\n![crates.io\u27e86\u27e9](https://crates.io/crates/rsa) ![Documentation\u27e87\u27e9](https://docs.rs/rsa) ![Build Status\u27e88\u27e9](https://github.com/RustCrypto/RSA/actions?query=workflow%3ACI+branch%3Amaster) ![dependency status\u27e89\u27e9](https://deps.rs/repo/github/RustCrypto/RSA) ![MSRV\u27e810\u27e9] ![Project Chat\u27e811\u27e9](https://rustcrypto.zulipchat.com/#narrow/stream/260047-RSA)\nA portable RSA implementation in pure Rust.\n### \u00a7\u27e812\u27e9Example\n```\nuse rsa::{Pkcs1v15Encrypt, RsaPrivateKey, RsaPublicKey};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet priv_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet pub_key = RsaPublicKey::from(&priv_key);\n// Encrypt\nlet data = b\"hello world\";\nlet enc_data = pub_key.encrypt(&mut rng, Pkcs1v15Encrypt, &data[..]).expect(\"failed to encrypt\");\nassert_ne!(&data[..], &enc_data[..]);\n// Decrypt\nlet dec_data = priv_key.decrypt(Pkcs1v15Encrypt, &enc_data).expect(\"failed to decrypt\");\nassert_eq!(&data[..], &dec_data[..]);\n```\n\n> **Note:** If you encounter unusually slow key generation time while using `RsaPrivateKey::new` you can try to compile in release mode or add the following to your `Cargo.toml`. Key generation is much faster when building with higher optimization levels, but this will increase the compile time a bit.\n> ```\n[profile.debug]\nopt-level = 3\n```\n\n> If you don\u2019t want to turn on optimizations for all dependencies, you can only optimize the `num-bigint-dig` dependency. This should give most of the speedups.\n> ```\n[profile.dev.package.num-bigint-dig]\nopt-level = 3\n```\n\n### \u00a7\u27e813\u27e9Status\nCurrently at Phase 1 (v) \ud83d\udea7\nThere will be three phases before `1.0` \ud83d\udea2 can be released.\n  1. \ud83d\udea7 Make it work \n     * Prime generation \u2705\n     * Key generation \u2705\n     * PKCS1v1.5: Encryption & Decryption \u2705\n     * PKCS1v1.5: Sign & Verify \u2705\n     * PKCS1v1.5 (session key): Encryption & Decryption\n     * OAEP: Encryption & Decryption\n     * PSS: Sign & Verify\n     * Key import & export\n  2. \ud83d\ude80 Make it fast \n     * Benchmarks \u2705\n     * compare to other implementations \ud83d\udea7\n     * optimize \ud83d\udea7\n  3. \ud83d\udd10 Make it secure \n     * Fuzz testing\n     * Security Audits\n\n\n### \u00a7\u27e814\u27e9\u26a0\ufe0fSecurity Warning\nThis crate has received one security audit by Include Security\u27e815\u27e9, with only one minor finding which has since been addressed.\nSee the open security issues\u27e816\u27e9 on our issue tracker for other known problems.\n~~Notably the implementation ofmodular exponentiation is not constant time\u27e817\u27e9, but timing variability is masked using random blinding\u27e818\u27e9), a commonly used technique.~~ This crate is vulnerable to the Marvin Attack\u27e819\u27e9 which could enable private key recovery by a network attacker (see RUSTSEC-2023-0071\u27e820\u27e9).\nYou can follow our work on mitigating this issue in #390\u27e821\u27e9.\n### \u00a7\u27e822\u27e9Minimum Supported Rust Version (MSRV)\nAll crates in this repository support Rust 1.65 or higher.\nIn the future MSRV can be changed, but it will be done with a minor version bump.\n### \u00a7\u27e823\u27e9License\nLicensed under either of\n  * Apache License, Version 2.0\u27e824\u27e9\n  * MIT license\u27e825\u27e9\n\n\nat your option.\n#### \u00a7\u27e826\u27e9Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n## \u00a7\u27e827\u27e9Supported algorithms\nThis crate supports several schemes described in RFC8017\u27e828\u27e9:\n  * OAEP encryption scheme\u27e829\u27e9\n  * PKCS#1 v1.5 encryption scheme\u27e830\u27e9\n  * PKCS#1 v1.5 signature scheme\u27e831\u27e9\n  * PSS signature scheme\u27e832\u27e9\n\n\nThese schemes are described below.\n## \u00a7\u27e833\u27e9Usage\n### \u00a7\u27e829\u27e9OAEP encryption\nNote: requires `sha2` feature of `rsa` crate is enabled.\n```\nuse rsa::{RsaPrivateKey, RsaPublicKey, Oaep, sha2::Sha256};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet public_key = RsaPublicKey::from(&private_key);\n// Encrypt\nlet data = b\"hello world\";\nlet padding = Oaep::new::<Sha256>();\nlet enc_data = public_key.encrypt(&mut rng, padding, &data[..]).expect(\"failed to encrypt\");\nassert_ne!(&data[..], &enc_data[..]);\n// Decrypt\nlet padding = Oaep::new::<Sha256>();\nlet dec_data = private_key.decrypt(padding, &enc_data).expect(\"failed to decrypt\");\nassert_eq!(&data[..], &dec_data[..]);\n```\n\n### \u00a7\u27e830\u27e9PKCS#1 v1.5 encryption\n```\nuse rsa::{RsaPrivateKey, RsaPublicKey, Pkcs1v15Encrypt};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet public_key = RsaPublicKey::from(&private_key);\n// Encrypt\nlet data = b\"hello world\";\nlet enc_data = public_key.encrypt(&mut rng, Pkcs1v15Encrypt, &data[..]).expect(\"failed to encrypt\");\nassert_ne!(&data[..], &enc_data[..]);\n// Decrypt\nlet dec_data = private_key.decrypt(Pkcs1v15Encrypt, &enc_data).expect(\"failed to decrypt\");\nassert_eq!(&data[..], &dec_data[..]);\n```\n\n### \u00a7\u27e831\u27e9PKCS#1 v1.5 signatures\nNote: requires `sha2` feature of `rsa` crate is enabled.\n```\nuse rsa::RsaPrivateKey;\nuse rsa::pkcs1v15::{SigningKey, VerifyingKey};\nuse rsa::signature::{Keypair, RandomizedSigner, SignatureEncoding, Verifier};\nuse rsa::sha2::{Digest, Sha256};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet signing_key = SigningKey::<Sha256>::new(private_key);\nlet verifying_key = signing_key.verifying_key();\n// Sign\nlet data = b\"hello world\";\nlet signature = signing_key.sign_with_rng(&mut rng, data);\nassert_ne!(signature.to_bytes().as_ref(), data.as_slice());\n// Verify\nverifying_key.verify(data, &signature).expect(\"failed to verify\");\n```\n\n### \u00a7\u27e832\u27e9PSS signatures\nNote: requires `sha2` feature of `rsa` crate is enabled.\n```\nuse rsa::RsaPrivateKey;\nuse rsa::pss::{BlindedSigningKey, VerifyingKey};\nuse rsa::signature::{Keypair,RandomizedSigner, SignatureEncoding, Verifier};\nuse rsa::sha2::{Digest, Sha256};\nlet mut rng = rand::thread_rng(); // rand@0.8\nlet bits = 2048;\nlet private_key = RsaPrivateKey::new(&mut rng, bits).expect(\"failed to generate a key\");\nlet signing_key = BlindedSigningKey::<Sha256>::new(private_key);\nlet verifying_key = signing_key.verifying_key();\n// Sign\nlet data = b\"hello world\";\nlet signature = signing_key.sign_with_rng(&mut rng, data);\nassert_ne!(signature.to_bytes().as_ref(), data);\n// Verify\nverifying_key.verify(data, &signature).expect(\"failed to verify\");\n```\n\n### \u00a7\u27e834\u27e9PKCS#1 RSA Key Encoding\nPKCS#1 supports a legacy format for encoding RSA keys as binary (DER) or text (PEM) data.\nYou can recognize PEM encoded PKCS#1 keys because they have \u201cRSA * KEY\u201d in the type label, e.g.:\n```\n-----BEGIN RSA PRIVATE KEY-----\n```\n\nMost modern applications use the newer PKCS#8 format instead (see below).\nThe following traits can be used to decode/encode `RsaPrivateKey`\u27e835\u27e9 and `RsaPublicKey`\u27e836\u27e9 as PKCS#1. Note that `pkcs1`\u27e837\u27e9 is re-exported from the toplevel of the `rsa` crate:\n  * `pkcs1::DecodeRsaPrivateKey`\u27e838\u27e9: decode RSA private keys from PKCS#1\n  * `pkcs1::EncodeRsaPrivateKey`\u27e839\u27e9: encode RSA private keys to PKCS#1\n  * `pkcs1::DecodeRsaPublicKey`\u27e840\u27e9: decode RSA public keys from PKCS#1\n  * `pkcs1::EncodeRsaPublicKey`\u27e841\u27e9: encode RSA public keys to PKCS#1\n\n\n#### \u00a7\u27e842\u27e9Example\n```\nuse rsa::{RsaPublicKey, pkcs1::DecodeRsaPublicKey};\nlet pem = \"-----BEGIN RSA PUBLIC KEY-----\nMIIBCgKCAQEAtsQsUV8QpqrygsY+2+JCQ6Fw8/omM71IM2N/R8pPbzbgOl0p78MZ\nGsgPOQ2HSznjD0FPzsH8oO2B5Uftws04LHb2HJAYlz25+lN5cqfHAfa3fgmC38Ff\nwBkn7l582UtPWZ/wcBOnyCgb3yLcvJrXyrt8QxHJgvWO23ITrUVYszImbXQ67YGS\n0YhMrbixRzmo2tpm3JcIBtnHrEUMsT0NfFdfsZhTT8YbxBvA8FdODgEwx7u/vf3J\n9qbi4+Kv8cvqyJuleIRSjVXPsIMnoejIn04APPKIjpMyQdnWlby7rNyQtE4+CV+j\ncFjqJbE/Xilcvqxt6DirjFCvYeKYl1uHLwIDAQAB\n-----END RSA PUBLIC KEY-----\";\nlet public_key = RsaPublicKey::from_pkcs1_pem(pem)?;\n```\n\n### \u00a7\u27e843\u27e9PKCS#8 RSA Key Encoding\nPKCS#8 is a private key format with support for multiple algorithms. Like PKCS#1, it can be encoded as binary (DER) or text (PEM).\nYou can recognize PEM encoded PKCS#8 keys because they _don\u2019t_ have an algorithm name in the type label, e.g.:\n```\n-----BEGIN PRIVATE KEY-----\n```\n\nThe following traits can be used to decode/encode `RsaPrivateKey`\u27e835\u27e9 and `RsaPublicKey`\u27e836\u27e9 as PKCS#8. Note that `pkcs8`\u27e844\u27e9 is re-exported from the toplevel of the `rsa` crate:\n  * `pkcs8::DecodePrivateKey`\u27e845\u27e9: decode private keys from PKCS#8\n  * `pkcs8::EncodePrivateKey`\u27e846\u27e9: encode private keys to PKCS#8\n  * `pkcs8::DecodePublicKey`\u27e847\u27e9: decode public keys from PKCS#8\n  * `pkcs8::EncodePublicKey`\u27e848\u27e9: encode public keys to PKCS#8\n\n\n#### \u00a7\u27e849\u27e9Example\n```\nuse rsa::{RsaPublicKey, pkcs8::DecodePublicKey};\nlet pem = \"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtsQsUV8QpqrygsY+2+JC\nQ6Fw8/omM71IM2N/R8pPbzbgOl0p78MZGsgPOQ2HSznjD0FPzsH8oO2B5Uftws04\nLHb2HJAYlz25+lN5cqfHAfa3fgmC38FfwBkn7l582UtPWZ/wcBOnyCgb3yLcvJrX\nyrt8QxHJgvWO23ITrUVYszImbXQ67YGS0YhMrbixRzmo2tpm3JcIBtnHrEUMsT0N\nfFdfsZhTT8YbxBvA8FdODgEwx7u/vf3J9qbi4+Kv8cvqyJuleIRSjVXPsIMnoejI\nn04APPKIjpMyQdnWlby7rNyQtE4+CV+jcFjqJbE/Xilcvqxt6DirjFCvYeKYl1uH\nLwIDAQAB\n-----END PUBLIC KEY-----\";\nlet public_key = RsaPublicKey::from_public_key_pem(pem)?;\n```\n\n## Re-exports\u00a7\u27e850\u27e9\n\n`pub use crate::errors::Error[](https://docs.rs/rsa/latest/rsa/errors/enum.Error.html \"enum rsa::errors::Error\");`\n\n\n`pub use crate::errors::Result[](https://docs.rs/rsa/latest/rsa/errors/type.Result.html \"type rsa::errors::Result\");`\n\n\n`pub use crate::oaep::Oaep[](https://docs.rs/rsa/latest/rsa/oaep/struct.Oaep.html \"struct rsa::oaep::Oaep\");`\n\n\n`pub use crate::pkcs1v15::Pkcs1v15Encrypt[](https://docs.rs/rsa/latest/rsa/pkcs1v15/struct.Pkcs1v15Encrypt.html \"struct rsa::pkcs1v15::Pkcs1v15Encrypt\");`\n\n\n`pub use crate::pkcs1v15::Pkcs1v15Sign[](https://docs.rs/rsa/latest/rsa/pkcs1v15/struct.Pkcs1v15Sign.html \"struct rsa::pkcs1v15::Pkcs1v15Sign\");`\n\n\n`pub use crate::pss::Pss[](https://docs.rs/rsa/latest/rsa/pss/struct.Pss.html \"struct rsa::pss::Pss\");`\n\n\n`pub use rand_core[](https://docs.rs/rand_core/0.6.4/x86_64-unknown-linux-gnu/rand_core/index.html \"mod rand_core\");`\n\n\n`pub use signature[](https://docs.rs/signature/2.2.0/x86_64-unknown-linux-gnu/signature/index.html \"mod signature\");`\n\n\n`pub use pkcs1[](https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/index.html \"mod pkcs1\");`\n\n\n`pub use pkcs8[](https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/index.html \"mod pkcs8\");`\n\n\n`pub use sha2[](https://docs.rs/sha2/0.10.9/x86_64-unknown-linux-gnu/sha2/index.html \"mod sha2\");``sha2`\n\n## Modules\u00a7\u27e851\u27e9\n\nerrors\u27e852\u27e9\n    Error types.\n\nhazmat\u27e853\u27e9`hazmat`\n    \u26a0\ufe0f Low-level \u201chazmat\u201d RSA functions.\n\noaep\u27e854\u27e9\n    Encryption and Decryption using OAEP padding\u27e855\u27e9.\n\npkcs1v15\u27e856\u27e9\n    PKCS#1 v1.5 support as described in RFC8017 \u00a7 8.2\u27e857\u27e9.\n\npss\u27e858\u27e9\n    Support for the Probabilistic Signature Scheme\u27e859\u27e9 (PSS) a.k.a. RSASSA-PSS.\n\ntraits\u27e860\u27e9\n    RSA-related trait definitions.\n## Structs\u00a7\u27e861\u27e9\n\nBigUint\u27e862\u27e9\n    A big unsigned integer type.\n\nCrtValue\u27e863\u27e9\n    Contains the precomputed Chinese remainder theorem values.\n\nRsaPrivateKey\u27e835\u27e9\n    Represents a whole RSA key, public and private parts.\n\nRsaPublicKey\u27e836\u27e9\n    Represents the public part of an RSA key.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/rsa/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/rsa/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/rsa/latest/src/rsa/lib.rs.html#1-255: Source\n\u27e84\u27e9 https://docs.rs/rsa/latest/rsa/#rustcrypto-rsa: \u00a7\n\u27e85\u27e9 https://github.com/RustCrypto/: RustCrypto\n\u27e86\u27e9 https://buildstats.info/crate/rsa: ![crates.io\n\u27e87\u27e9 https://docs.rs/rsa/badge.svg: ![Documentation\n\u27e88\u27e9 https://github.com/rustcrypto/RSA/workflows/CI/badge.svg: ![Build Status\n\u27e89\u27e9 https://deps.rs/repo/github/RustCrypto/RSA/status.svg: ![dependency status\n\u27e810\u27e9 https://img.shields.io/badge/rustc-1.65+-blue.svg: MSRV\n\u27e811\u27e9 https://img.shields.io/badge/zulip-join_chat-blue.svg: ![Project Chat\n\u27e812\u27e9 https://docs.rs/rsa/latest/rsa/#example: \u00a7\n\u27e813\u27e9 https://docs.rs/rsa/latest/rsa/#status: \u00a7\n\u27e814\u27e9 https://docs.rs/rsa/latest/rsa/#security-warning: \u00a7\n\u27e815\u27e9 https://www.opentech.fund/results/security-safety-audits/deltachat/: security audit by Include Security\n\u27e816\u27e9 https://github.com/RustCrypto/RSA/issues?q=is%3Aissue+is%3Aopen+label%3Asecurity: open security issues\n\u27e817\u27e9 https://github.com/RustCrypto/RSA/issues/19: modular exponentiation is not constant time\n\u27e818\u27e9 https://en.wikipedia.org/wiki/Blinding_\\(cryptography\\: random blinding\n\u27e819\u27e9 https://people.redhat.com/~hkario/marvin/: Marvin Attack\n\u27e820\u27e9 https://rustsec.org/advisories/RUSTSEC-2023-0071.html: RUSTSEC-2023-0071\n\u27e821\u27e9 https://github.com/RustCrypto/RSA/issues/390: #390\n\u27e822\u27e9 https://docs.rs/rsa/latest/rsa/#minimum-supported-rust-version-msrv: \u00a7\n\u27e823\u27e9 https://docs.rs/rsa/latest/rsa/#license: \u00a7\n\u27e824\u27e9 http://www.apache.org/licenses/LICENSE-2.0: Apache License, Version 2.0\n\u27e825\u27e9 http://opensource.org/licenses/MIT: MIT license\n\u27e826\u27e9 https://docs.rs/rsa/latest/rsa/#contribution: \u00a7\n\u27e827\u27e9 https://docs.rs/rsa/latest/rsa/#supported-algorithms: \u00a7\n\u27e828\u27e9 https://datatracker.ietf.org/doc/html/rfc8017#section-8.1: RFC8017\n\u27e829\u27e9 https://docs.rs/rsa/latest/rsa/#oaep-encryption: OAEP encryption scheme\n\u27e830\u27e9 https://docs.rs/rsa/latest/rsa/#pkcs1-v15-encryption: PKCS#1 v1.5 encryption scheme\n\u27e831\u27e9 https://docs.rs/rsa/latest/rsa/#pkcs1-v15-signatures: PKCS#1 v1.5 signature scheme\n\u27e832\u27e9 https://docs.rs/rsa/latest/rsa/#pss-signatures: PSS signature scheme\n\u27e833\u27e9 https://docs.rs/rsa/latest/rsa/#usage: \u00a7\n\u27e834\u27e9 https://docs.rs/rsa/latest/rsa/#pkcs1-rsa-key-encoding: \u00a7\n\u27e835\u27e9 https://docs.rs/rsa/latest/rsa/struct.RsaPrivateKey.html: struct rsa::RsaPrivateKey - `RsaPrivateKey`\n\u27e836\u27e9 https://docs.rs/rsa/latest/rsa/struct.RsaPublicKey.html: struct rsa::RsaPublicKey - `RsaPublicKey`\n\u27e837\u27e9 https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/index.html: mod pkcs1 - `pkcs1`\n\u27e838\u27e9 https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.DecodeRsaPrivateKey.html: trait pkcs1::traits::DecodeRsaPrivateKey - `pkcs1::DecodeRsaPrivateKey`\n\u27e839\u27e9 https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.EncodeRsaPrivateKey.html: trait pkcs1::traits::EncodeRsaPrivateKey - `pkcs1::EncodeRsaPrivateKey`\n\u27e840\u27e9 https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.DecodeRsaPublicKey.html: trait pkcs1::traits::DecodeRsaPublicKey - `pkcs1::DecodeRsaPublicKey`\n\u27e841\u27e9 https://docs.rs/pkcs1/0.7.5/x86_64-unknown-linux-gnu/pkcs1/traits/trait.EncodeRsaPublicKey.html: trait pkcs1::traits::EncodeRsaPublicKey - `pkcs1::EncodeRsaPublicKey`\n\u27e842\u27e9 https://docs.rs/rsa/latest/rsa/#example-1: \u00a7\n\u27e843\u27e9 https://docs.rs/rsa/latest/rsa/#pkcs8-rsa-key-encoding: \u00a7\n\u27e844\u27e9 https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/index.html: mod pkcs8 - `pkcs8`\n\u27e845\u27e9 https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/traits/trait.DecodePrivateKey.html: trait pkcs8::traits::DecodePrivateKey - `pkcs8::DecodePrivateKey`\n\u27e846\u27e9 https://docs.rs/pkcs8/0.10.2/x86_64-unknown-linux-gnu/pkcs8/traits/trait.EncodePrivateKey.html: trait pkcs8::traits::EncodePrivateKey - `pkcs8::EncodePrivateKey`\n\u27e847\u27e9 https://docs.rs/pkcs8/latest/pkcs8/trait.DecodePublicKey.html: `pkcs8::DecodePublicKey`\n\u27e848\u27e9 https://docs.rs/pkcs8/latest/pkcs8/trait.EncodePublicKey.html: `pkcs8::EncodePublicKey`\n\u27e849\u27e9 https://docs.rs/rsa/latest/rsa/#example-2: \u00a7\n\u27e850\u27e9 https://docs.rs/rsa/latest/rsa/#reexports: \u00a7\n\u27e851\u27e9 https://docs.rs/rsa/latest/rsa/#modules: \u00a7\n\u27e852\u27e9 https://docs.rs/rsa/latest/rsa/errors/index.html: mod rsa::errors - errors\n\u27e853\u27e9 https://docs.rs/rsa/latest/rsa/hazmat/index.html: mod rsa::hazmat - hazmat\n\u27e854\u27e9 https://docs.rs/rsa/latest/rsa/oaep/index.html: mod rsa::oaep - oaep\n\u27e855\u27e9 https://datatracker.ietf.org/doc/html/rfc8017#section-7.1: OAEP padding\n\u27e856\u27e9 https://docs.rs/rsa/latest/rsa/pkcs1v15/index.html: mod rsa::pkcs1v15 - pkcs1v15\n\u27e857\u27e9 https://datatracker.ietf.org/doc/html/rfc8017#section-8.2: RFC8017 \u00a7 8.2\n\u27e858\u27e9 https://docs.rs/rsa/latest/rsa/pss/index.html: mod rsa::pss - pss\n\u27e859\u27e9 https://en.wikipedia.org/wiki/Probabilistic_signature_scheme: Probabilistic Signature Scheme\n\u27e860\u27e9 https://docs.rs/rsa/latest/rsa/traits/index.html: mod rsa::traits - traits\n\u27e861\u27e9 https://docs.rs/rsa/latest/rsa/#structs: \u00a7\n\u27e862\u27e9 https://docs.rs/rsa/latest/rsa/struct.BigUint.html: struct rsa::BigUint - BigUint\n\u27e863\u27e9 https://docs.rs/rsa/latest/rsa/struct.CrtValue.html: struct rsa::CrtValue - CrtValue\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `rsa` crate provides a pure Rust implementation of the RSA cryptographic algorithm, supporting key generation, encryption, decryption, signing, and verification using schemes like PKCS#1 v1.5, OAEP, and PSS as defined in RFC 8017. It includes features for importing/exporting keys in PEM format, customizable optimization levels for faster key generation, and compatibility with Rust 1.65+. While it has undergone a security audit, it is currently vulnerable to the Marvin Attack, with mitigation efforts in progress.",
          "feature_summary": null,
          "use_case": "Cryptography",
          "score": 6.5,
          "factual_counterfactual": "### Pair 1: Key Generation\n\u2705 Factual: The `rsa` crate supports generating RSA private keys with customizable key sizes, such as 2048 bits, using the `RsaPrivateKey::new` function. Key generation performance can be improved by enabling higher optimization levels in the build profile.  \n\u274c Counterfactual: The `rsa` crate only supports fixed key sizes of 1024 bits for RSA private key generation and does not allow customization of key sizes.\n\n---\n\n### Pair 2: Encryption and Decryption\n\u2705 Factual: The `rsa` crate provides support for PKCS1v1.5 encryption and decryption, allowing users to securely encrypt and decrypt data using RSA public and private keys.  \n\u274c Counterfactual: The `rsa` crate exclusively supports OAEP encryption and decryption and does not implement PKCS1v1.5 encryption.\n\n---\n\n### Pair 3: Security Features\n\u2705 Factual: The `rsa` crate mitigates timing attacks during modular exponentiation by using random blinding, a commonly used cryptographic technique. However, it is vulnerable to the Marvin Attack, as noted in advisory RUSTSEC-2023-0071.  \n\u274c Counterfactual: The `rsa` crate performs modular exponentiation in constant time and is fully immune to timing attacks without requiring any additional mitigation techniques.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-f5f69168-29598d30-1751264554",
      "timestamp": "2025-06-30T06:22:34.887807+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]