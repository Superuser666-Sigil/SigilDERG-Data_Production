[
  {
    "execution_id": "exec-36c495a1-bb618b5f-1751263844",
    "timestamp": "2025-06-30T06:10:44.968054+00:00",
    "sacred_chain": {
      "input_data": "proc-macro-crate",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'proc-macro-crate' -> 'proc-macro-crate'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "proc-macro-crate",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/proc-macro-crate",
            "title": "proc-macro-crate v3.3.0",
            "content": {
              "raw_markdown": "#  proc-macro-crate v3.3.0\nReplacement for crate (macro_rules keyword) in proc-macros \n  * [ #crate ](https://crates.io/keywords/crate)\n  * [ #macro ](https://crates.io/keywords/macro)\n  * [ #macro-rules ](https://crates.io/keywords/macro-rules)\n  * [ #proc-macro ](https://crates.io/keywords/proc-macro)\n\n\n  * [ Readme ](https://crates.io/crates/proc-macro-crate)\n  * [ 22 Versions ](https://crates.io/crates/proc-macro-crate/versions)\n  * [ Dependencies ](https://crates.io/crates/proc-macro-crate/dependencies)\n  * [ Dependents ](https://crates.io/crates/proc-macro-crate/reverse_dependencies)\n\n\n## Metadata\n4 months ago \nv1.67.0 \n[ MIT ](https://choosealicense.com/licenses/mit) OR [ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0)\n12.1 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add proc-macro-crate\nOr add the following line to your Cargo.toml:\nproc-macro-crate = \"3.3.0\"\n## Documentation\n[ docs.rs/proc-macro-crate ](https://docs.rs/proc-macro-crate)\n## Repository\n[ github.com/bkchr/proc-macro-crate ](https://github.com/bkchr/proc-macro-crate)\n## Owners\n## Categories\n  * [Procedural macro helpers](https://crates.io/categories/development-tools::procedural-macro-helpers)\n\n\n[ Report crate ](https://crates.io/support?crate=proc-macro-crate&inquire=crate-violation)\n### Stats Overview\n189,390,545 Downloads all time\n22 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  proc-macro-crate v3.3.0\nReplacement for crate (macro_rules keyword) in proc-macros \n  *  #crate \u27e81\u27e9\n  *  #macro \u27e82\u27e9\n  *  #macro-rules \u27e83\u27e9\n  *  #proc-macro \u27e84\u27e9\n\n\n  *  Readme \u27e85\u27e9\n  *  22 Versions \u27e86\u27e9\n  *  Dependencies \u27e87\u27e9\n  *  Dependents \u27e88\u27e9\n\n\n## Metadata\n4 months ago \nv1.67.0 \n MIT \u27e89\u27e9 OR  Apache-2.0 \u27e810\u27e9\n12.1 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add proc-macro-crate\nOr add the following line to your Cargo.toml:\nproc-macro-crate = \"3.3.0\"\n## Documentation\n docs.rs/proc-macro-crate \u27e811\u27e9\n## Repository\n github.com/bkchr/proc-macro-crate \u27e812\u27e9\n## Owners\n## Categories\n  * Procedural macro helpers\u27e813\u27e9\n\n\n Report crate \u27e814\u27e9\n### Stats Overview\n189,390,545 Downloads all time\n22 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/crate:  #crate \n\u27e82\u27e9 https://crates.io/keywords/macro:  #macro \n\u27e83\u27e9 https://crates.io/keywords/macro-rules:  #macro-rules \n\u27e84\u27e9 https://crates.io/keywords/proc-macro:  #proc-macro \n\u27e85\u27e9 https://crates.io/crates/proc-macro-crate:  Readme \n\u27e86\u27e9 https://crates.io/crates/proc-macro-crate/versions:  22 Versions \n\u27e87\u27e9 https://crates.io/crates/proc-macro-crate/dependencies:  Dependencies \n\u27e88\u27e9 https://crates.io/crates/proc-macro-crate/reverse_dependencies:  Dependents \n\u27e89\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e810\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e811\u27e9 https://docs.rs/proc-macro-crate:  docs.rs/proc-macro-crate \n\u27e812\u27e9 https://github.com/bkchr/proc-macro-crate:  github.com/bkchr/proc-macro-crate \n\u27e813\u27e9 https://crates.io/categories/development-tools::procedural-macro-helpers: Procedural macro helpers\n\u27e814\u27e9 https://crates.io/support?crate=proc-macro-crate&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1495,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "117634.2686046"
          },
          "docs_rs": {
            "url": "https://docs.rs/proc-macro-crate",
            "title": "Crate proc_macro_crateCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/all.html \"show sidebar\")\n# Crate proc_macro_crateCopy item path\n[Settings](https://docs.rs/proc-macro-crate/latest/settings.html)\n[Help](https://docs.rs/proc-macro-crate/latest/help.html)\nSummary[Source](https://docs.rs/proc-macro-crate/latest/src/proc_macro_crate/lib.rs.html#1-577)\nExpand description\n[![](https://docs.rs/proc-macro-crate/badge.svg)](https://docs.rs/proc-macro-crate/) [![](https://img.shields.io/crates/v/proc-macro-crate.svg)](https://crates.io/crates/proc-macro-crate) [![](https://img.shields.io/crates/d/proc-macro-crate.png)](https://crates.io/crates/proc-macro-crate) [![Build Status](https://travis-ci.org/bkchr/proc-macro-crate.png?branch=master)](https://travis-ci.org/bkchr/proc-macro-crate)\nProviding support for `$crate` in procedural macros.\n  * [Introduction](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#introduction)\n  * [Example](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#example)\n  * [License](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#license)\n\n\n### [\u00a7](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#introduction)Introduction\nIn `macro_rules!` `$crate` is used to get the path of the crate where a macro is declared in. In procedural macros there is currently no easy way to get this path. A common hack is to import the desired crate with a know name and use this. However, with rust edition 2018 and dropping `extern crate` declarations from `lib.rs`, people start to rename crates in `Cargo.toml` directly. However, this breaks importing the crate, as the proc-macro developer does not know the renamed name of the crate that should be imported.\nThis crate provides a way to get the name of a crate, even if it renamed in `Cargo.toml`. For this purpose a single function `crate_name` is provided. This function needs to be called in the context of a proc-macro with the name of the desired crate. `CARGO_MANIFEST_DIR` will be used to find the current active `Cargo.toml` and this `Cargo.toml` is searched for the desired crate.\n### [\u00a7](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#example)Example\n```\nuse quote::quote;\nuse syn::Ident;\nuse proc_macro2::Span;\nuse proc_macro_crate::{crate_name, FoundCrate};\nfn import_my_crate() {\n  let found_crate = crate_name(\"my-crate\").expect(\"my-crate is present in `Cargo.toml`\");\n  match found_crate {\n    FoundCrate::Itself => quote!( crate::Something ),\n    FoundCrate::Name(name) => {\n      let ident = Ident::new(&name, Span::call_site());\n      quote!( #ident::Something )\n    }\n  };\n}\n\n```\n\n### [\u00a7](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#edge-cases)Edge cases\nThere are multiple edge cases when it comes to determining the correct crate. If you for example import a crate as its own dependency, like this:\n```\n[package]\nname = \"my_crate\"\n[dev-dependencies]\nmy_crate = { version = \"0.1\", features = [ \"test-feature\" ] }\n```\n\nThe crate will return `FoundCrate::Itself` and you will not be able to find the other instance of your crate in `dev-dependencies`. Other similar cases are when one crate is imported multiple times:\n```\n[package]\nname = \"my_crate\"\n[dependencies]\nsome-crate = { version = \"0.5\" }\nsome-crate-old = { package = \"some-crate\", version = \"0.1\" }\n```\n\nWhen searching for `some-crate` in this `Cargo.toml` it will return `FoundCrate::Name(\"some_old_crate\")`, aka the last definition of the crate in the `Cargo.toml`.\n### [\u00a7](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#license)License\nLicensed under either of\n  * [Apache License, Version 2.0](https://www.apache.org/licenses/LICENSE-2.0)\n  * [MIT license](https://opensource.org/licenses/MIT)\n\n\nat your option.\n## Enums[\u00a7](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#enums)\n\n[Error](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/enum.Error.html \"enum proc_macro_crate::Error\")\n    Error type used by this crate.\n\n[FoundCrate](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/enum.FoundCrate.html \"enum proc_macro_crate::FoundCrate\")\n    The crate as found by [`crate_name`](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/fn.crate_name.html \"fn proc_macro_crate::crate_name\").\n## Functions[\u00a7](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#functions)\n\n[crate_name](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/fn.crate_name.html \"fn proc_macro_crate::crate_name\")\n    Find the crate name for the given `orig_name` in the current `Cargo.toml`.\n",
              "markdown_with_citations": "[](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/all.html \"show sidebar\")\n# Crate proc_macro_crateCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n![\u27e84\u27e9](https://docs.rs/proc-macro-crate/) ![\u27e85\u27e9](https://crates.io/crates/proc-macro-crate) ![\u27e86\u27e9](https://crates.io/crates/proc-macro-crate) ![Build Status\u27e87\u27e9](https://travis-ci.org/bkchr/proc-macro-crate)\nProviding support for `$crate` in procedural macros.\n  * Introduction\u27e88\u27e9\n  * Example\u27e89\u27e9\n  * License\u27e810\u27e9\n\n\n### \u00a7\u27e88\u27e9Introduction\nIn `macro_rules!` `$crate` is used to get the path of the crate where a macro is declared in. In procedural macros there is currently no easy way to get this path. A common hack is to import the desired crate with a know name and use this. However, with rust edition 2018 and dropping `extern crate` declarations from `lib.rs`, people start to rename crates in `Cargo.toml` directly. However, this breaks importing the crate, as the proc-macro developer does not know the renamed name of the crate that should be imported.\nThis crate provides a way to get the name of a crate, even if it renamed in `Cargo.toml`. For this purpose a single function `crate_name` is provided. This function needs to be called in the context of a proc-macro with the name of the desired crate. `CARGO_MANIFEST_DIR` will be used to find the current active `Cargo.toml` and this `Cargo.toml` is searched for the desired crate.\n### \u00a7\u27e89\u27e9Example\n```\nuse quote::quote;\nuse syn::Ident;\nuse proc_macro2::Span;\nuse proc_macro_crate::{crate_name, FoundCrate};\nfn import_my_crate() {\n  let found_crate = crate_name(\"my-crate\").expect(\"my-crate is present in `Cargo.toml`\");\n  match found_crate {\n    FoundCrate::Itself => quote!( crate::Something ),\n    FoundCrate::Name(name) => {\n      let ident = Ident::new(&name, Span::call_site());\n      quote!( #ident::Something )\n    }\n  };\n}\n\n```\n\n### \u00a7\u27e811\u27e9Edge cases\nThere are multiple edge cases when it comes to determining the correct crate. If you for example import a crate as its own dependency, like this:\n```\n[package]\nname = \"my_crate\"\n[dev-dependencies]\nmy_crate = { version = \"0.1\", features = [ \"test-feature\" ] }\n```\n\nThe crate will return `FoundCrate::Itself` and you will not be able to find the other instance of your crate in `dev-dependencies`. Other similar cases are when one crate is imported multiple times:\n```\n[package]\nname = \"my_crate\"\n[dependencies]\nsome-crate = { version = \"0.5\" }\nsome-crate-old = { package = \"some-crate\", version = \"0.1\" }\n```\n\nWhen searching for `some-crate` in this `Cargo.toml` it will return `FoundCrate::Name(\"some_old_crate\")`, aka the last definition of the crate in the `Cargo.toml`.\n### \u00a7\u27e810\u27e9License\nLicensed under either of\n  * Apache License, Version 2.0\u27e812\u27e9\n  * MIT license\u27e813\u27e9\n\n\nat your option.\n## Enums\u00a7\u27e814\u27e9\n\nError\u27e815\u27e9\n    Error type used by this crate.\n\nFoundCrate\u27e816\u27e9\n    The crate as found by `crate_name`\u27e817\u27e9.\n## Functions\u00a7\u27e818\u27e9\n\ncrate_name\u27e817\u27e9\n    Find the crate name for the given `orig_name` in the current `Cargo.toml`.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/proc-macro-crate/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/proc-macro-crate/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/proc-macro-crate/latest/src/proc_macro_crate/lib.rs.html#1-577: Source\n\u27e84\u27e9 https://docs.rs/proc-macro-crate/badge.svg: ![\n\u27e85\u27e9 https://img.shields.io/crates/v/proc-macro-crate.svg: ![\n\u27e86\u27e9 https://img.shields.io/crates/d/proc-macro-crate.png: ![\n\u27e87\u27e9 https://travis-ci.org/bkchr/proc-macro-crate.png?branch=master: ![Build Status\n\u27e88\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#introduction: Introduction\n\u27e89\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#example: Example\n\u27e810\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#license: License\n\u27e811\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#edge-cases: \u00a7\n\u27e812\u27e9 https://www.apache.org/licenses/LICENSE-2.0: Apache License, Version 2.0\n\u27e813\u27e9 https://opensource.org/licenses/MIT: MIT license\n\u27e814\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#enums: \u00a7\n\u27e815\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/enum.Error.html: enum proc_macro_crate::Error - Error\n\u27e816\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/enum.FoundCrate.html: enum proc_macro_crate::FoundCrate - FoundCrate\n\u27e817\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/fn.crate_name.html: fn proc_macro_crate::crate_name - `crate_name`\n\u27e818\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#functions: \u00a7\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 4525,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "117635.0706108"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/proc-macro-crate",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [19 releases](https://lib.rs/crates/proc-macro-crate/versions) (stable)\n3.3.0 |  Mar 6, 2025   \n---|---  \n3.2.0 |  Aug 27, 2024   \n3.1.0 |  Jan 17, 2024   \n2.0.2 |  Jan 29, 2024   \n0.1.3 |  Feb 11, 2019   \n#**5** in [Procedural macros](https://lib.rs/development-tools/procedural-macro-helpers \"Crates to help you write procedural macros in Rust.\n\")\nDownload history 2497304/week @ 2025-03-06 2526401/week @ 2025-03-13 2480858/week @ 2025-03-20 2399793/week @ 2025-03-27 2434450/week @ 2025-04-03 2414283/week @ 2025-04-10 2233951/week @ 2025-04-17 2352760/week @ 2025-04-24 2138619/week @ 2025-05-01 2316327/week @ 2025-05-08 2395322/week @ 2025-05-15 2232358/week @ 2025-05-22 2344717/week @ 2025-05-29 2417036/week @ 2025-06-05 2654301/week @ 2025-06-12 2430530/week @ 2025-06-19\n**10,300,030** downloads per month Used in [**10,231** crates (358 directly)](https://lib.rs/crates/proc-macro-crate/rev)\n**MIT/Apache**\n24KB  389 lines\n# proc-macro-crate\n[![](https://img.gs/czjpqfbdkz/full/https://docs.rs/proc-macro-crate/badge.svg)](https://docs.rs/proc-macro-crate/) [![](https://img.shields.io/crates/v/proc-macro-crate.svg)](https://crates.io/crates/proc-macro-crate) [![](https://img.shields.io/crates/d/proc-macro-crate.png)](https://crates.io/crates/proc-macro-crate) [![Build Status](https://img.gs/czjpqfbdkz/full/https://travis-ci.org/bkchr/proc-macro-crate.png?branch=master)](https://travis-ci.org/bkchr/proc-macro-crate)\nProviding support for ```$crate``` in procedural macros.\n  * [Introduction](https://lib.rs/crates/proc-macro-crate#readme-introduction)\n  * [Example](https://lib.rs/crates/proc-macro-crate#readme-example)\n  * [License](https://lib.rs/crates/proc-macro-crate#readme-license)\n\n\n### Introduction\nIn ``macro_rules!`` ```$crate``` is used to get the path of the crate where a macro is declared in. In procedural macros there is currently no easy way to get this path. A common hack is to import the desired crate with a know name and use this. However, with rust edition 2018 and dropping ```extern` `crate``` declarations from ``lib.rs``, people start to rename crates in ``Cargo.toml`` directly. However, this breaks importing the crate, as the proc-macro developer does not know the renamed name of the crate that should be imported.\nThis crate provides a way to get the name of a crate, even if it renamed in ``Cargo.toml``. For this purpose a single function ``crate_name`` is provided. This function needs to be called in the context of a proc-macro with the name of the desired crate. ``CARGO_MANIFEST_DIR`` will be used to find the current active ``Cargo.toml`` and this ``Cargo.toml`` is searched for the desired crate.\n### Example\n```\n``use` `quote`::``quote`;`\n`use` `syn`::``Ident`;`\n`use` `proc_macro2`::``Span`;`\n`use` `proc_macro_crate`::````{`crate_name`,` FoundCrate```}```;`\n``fn` `import_my_crate`````(````)``````{`\n  `let` found_crate `=` `crate_name``(```\"`my-crate`\"```)``.``expect``(```\"`my-crate is present in `Cargo.toml``\"```)``;`\n  `match` found_crate `{`\n    `FoundCrate`::``Itself `=>` `quote!``(` `crate```::``Something `)``,`\n    `FoundCrate`::``Name`(`name`)` `=>` `{`\n      `let` ident `=` `Ident`::``new`(``&`name`,` `Span`::``call_site`(``)``)``;`\n      `quote!``(` `#``ident`::``Something `)`\n    `}`\n  `}``;`\n```}```\n`\n```\n\n### Edge cases\nThere are multiple edge cases when it comes to determining the correct crate. If you for example import a crate as its own dependency, like this:\n```\n```[``package``]`\n`name ``=` ``\"`my_crate`\"``\n```[``dev-dependencies``]`\n`my_crate = { version = \"0.1\", features ``=` ``[` ``\"`test-feature`\"`` `]`` }\n``\n```\n\nThe crate will return ```FoundCrate`::``Itself`` and you will not be able to find the other instance of your crate in ``dev-dependencies``. Other similar cases are when one crate is imported multiple times:\n```\n```[``package``]`\n`name ``=` ``\"`my_crate`\"``\n```[``dependencies``]`\n`some-crate = { version ``=` ``\"`0.5`\"`` }\n`some-crate-old = { package = \"some-crate\", version ``=` ``\"`0.1`\"`` }\n``\n```\n\nWhen searching for ``some-crate`` in this ``Cargo.toml`` it will return ```FoundCrate`::``Name`(```\"`some_old_crate`\"```)```, aka the last definition of the crate in the ``Cargo.toml``.\n### License\nLicensed under either of\n  * [Apache License, Version 2.0](https://www.apache.org/licenses/LICENSE-2.0)\n  * [MIT license](https://opensource.org/licenses/MIT)\n\n\nat your option.\nLicense: MIT OR Apache-2.0\n#### Dependencies\n~2MB  ~49K SLoC\n  * [toml_edit](https://lib.rs/crates/toml_edit \"0.22.24\")[+parse](https://lib.rs/crates/toml_edit/features#feature-parse)\n\n\n  * dev  [proc-macro2](https://lib.rs/crates/proc-macro2 \"1.0.94\")\n  * dev  [quote](https://lib.rs/crates/quote \"1.0.39\")\n  * dev  [syn](https://lib.rs/crates/syn \"2.0.99\")\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  19 releases\u27e81\u27e9 (stable)\n3.3.0 |  Mar 6, 2025   \n---|---  \n3.2.0 |  Aug 27, 2024   \n3.1.0 |  Jan 17, 2024   \n2.0.2 |  Jan 29, 2024   \n0.1.3 |  Feb 11, 2019   \n#**5** in Procedural macros\u27e82\u27e9\nDownload history 2497304/week @ 2025-03-06 2526401/week @ 2025-03-13 2480858/week @ 2025-03-20 2399793/week @ 2025-03-27 2434450/week @ 2025-04-03 2414283/week @ 2025-04-10 2233951/week @ 2025-04-17 2352760/week @ 2025-04-24 2138619/week @ 2025-05-01 2316327/week @ 2025-05-08 2395322/week @ 2025-05-15 2232358/week @ 2025-05-22 2344717/week @ 2025-05-29 2417036/week @ 2025-06-05 2654301/week @ 2025-06-12 2430530/week @ 2025-06-19\n**10,300,030** downloads per month Used in **10,231** crates (358 directly)\u27e83\u27e9\n**MIT/Apache**\n24KB  389 lines\n# proc-macro-crate\n![\u27e84\u27e9](https://docs.rs/proc-macro-crate/) ![\u27e85\u27e9](https://crates.io/crates/proc-macro-crate) ![\u27e86\u27e9](https://crates.io/crates/proc-macro-crate) ![Build Status\u27e87\u27e9](https://travis-ci.org/bkchr/proc-macro-crate)\nProviding support for ```$crate``` in procedural macros.\n  * Introduction\u27e88\u27e9\n  * Example\u27e89\u27e9\n  * License\u27e810\u27e9\n\n\n### Introduction\nIn ``macro_rules!`` ```$crate``` is used to get the path of the crate where a macro is declared in. In procedural macros there is currently no easy way to get this path. A common hack is to import the desired crate with a know name and use this. However, with rust edition 2018 and dropping ```extern` `crate``` declarations from ``lib.rs``, people start to rename crates in ``Cargo.toml`` directly. However, this breaks importing the crate, as the proc-macro developer does not know the renamed name of the crate that should be imported.\nThis crate provides a way to get the name of a crate, even if it renamed in ``Cargo.toml``. For this purpose a single function ``crate_name`` is provided. This function needs to be called in the context of a proc-macro with the name of the desired crate. ``CARGO_MANIFEST_DIR`` will be used to find the current active ``Cargo.toml`` and this ``Cargo.toml`` is searched for the desired crate.\n### Example\n```\n``use` `quote`::``quote`;`\n`use` `syn`::``Ident`;`\n`use` `proc_macro2`::``Span`;`\n`use` `proc_macro_crate`::````{`crate_name`,` FoundCrate```}```;`\n``fn` `import_my_crate`````(````)``````{`\n  `let` found_crate `=` `crate_name``(```\"`my-crate`\"```)``.``expect``(```\"`my-crate is present in `Cargo.toml``\"```)``;`\n  `match` found_crate `{`\n    `FoundCrate`::``Itself `=>` `quote!``(` `crate```::``Something `)``,`\n    `FoundCrate`::``Name`(`name`)` `=>` `{`\n      `let` ident `=` `Ident`::``new`(``&`name`,` `Span`::``call_site`(``)``)``;`\n      `quote!``(` `#``ident`::``Something `)`\n    `}`\n  `}``;`\n```}```\n`\n```\n\n### Edge cases\nThere are multiple edge cases when it comes to determining the correct crate. If you for example import a crate as its own dependency, like this:\n```\n```[``package``]`\n`name ``=` ``\"`my_crate`\"``\n```[``dev-dependencies``]`\n`my_crate = { version = \"0.1\", features ``=` ``[` ``\"`test-feature`\"`` `]`` }\n``\n```\n\nThe crate will return ```FoundCrate`::``Itself`` and you will not be able to find the other instance of your crate in ``dev-dependencies``. Other similar cases are when one crate is imported multiple times:\n```\n```[``package``]`\n`name ``=` ``\"`my_crate`\"``\n```[``dependencies``]`\n`some-crate = { version ``=` ``\"`0.5`\"`` }\n`some-crate-old = { package = \"some-crate\", version ``=` ``\"`0.1`\"`` }\n``\n```\n\nWhen searching for ``some-crate`` in this ``Cargo.toml`` it will return ```FoundCrate`::``Name`(```\"`some_old_crate`\"```)```, aka the last definition of the crate in the ``Cargo.toml``.\n### License\nLicensed under either of\n  * Apache License, Version 2.0\u27e811\u27e9\n  * MIT license\u27e812\u27e9\n\n\nat your option.\nLicense: MIT OR Apache-2.0\n#### Dependencies\n~2MB  ~49K SLoC\n  * toml_edit\u27e813\u27e9+parse\u27e814\u27e9\n\n\n  * dev  proc-macro2\u27e815\u27e9\n  * dev  quote\u27e816\u27e9\n  * dev  syn\u27e817\u27e9\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/proc-macro-crate/versions: 19 releases\n\u27e82\u27e9 https://lib.rs/development-tools/procedural-macro-helpers: Crates to help you write procedural macros in Rust.\n - Procedural macros\n\u27e83\u27e9 https://lib.rs/crates/proc-macro-crate/rev: **10,231** crates (358 directly)\n\u27e84\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/proc-macro-crate/badge.svg: ![\n\u27e85\u27e9 https://img.shields.io/crates/v/proc-macro-crate.svg: ![\n\u27e86\u27e9 https://img.shields.io/crates/d/proc-macro-crate.png: ![\n\u27e87\u27e9 https://img.gs/czjpqfbdkz/full/https://travis-ci.org/bkchr/proc-macro-crate.png?branch=master: ![Build Status\n\u27e88\u27e9 https://lib.rs/crates/proc-macro-crate#readme-introduction: Introduction\n\u27e89\u27e9 https://lib.rs/crates/proc-macro-crate#readme-example: Example\n\u27e810\u27e9 https://lib.rs/crates/proc-macro-crate#readme-license: License\n\u27e811\u27e9 https://www.apache.org/licenses/LICENSE-2.0: Apache License, Version 2.0\n\u27e812\u27e9 https://opensource.org/licenses/MIT: MIT license\n\u27e813\u27e9 https://lib.rs/crates/toml_edit: 0.22.24 - toml_edit\n\u27e814\u27e9 https://lib.rs/crates/toml_edit/features#feature-parse: +parse\n\u27e815\u27e9 https://lib.rs/crates/proc-macro2: 1.0.94 - proc-macro2\n\u27e816\u27e9 https://lib.rs/crates/quote: 1.0.39 - quote\n\u27e817\u27e9 https://lib.rs/crates/syn: 2.0.99 - syn\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 4803,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "117636.0776162"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "equivalent",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.1\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\target\\debug\\deps\\libequivalent-1ddcc1c34f146777.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#toml_datetime@0.6.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\toml_datetime-0.6.8\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "toml_datetime",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\toml_datetime-0.6.8\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\target\\debug\\deps\\libtoml_datetime-eef6e7c1a22b7f5d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hashbrown",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\target\\debug\\deps\\libhashbrown-89ab50377b31b71f.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.7.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\indexmap-2.7.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "indexmap",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\indexmap-2.7.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\target\\debug\\deps\\libindexmap-d8af3401f798be75.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winnow@0.7.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winnow-0.7.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "winnow",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winnow-0.7.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\target\\debug\\deps\\libwinnow-5cf96330a77b4481.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#toml_edit@0.22.24",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\toml_edit-0.22.24\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "toml_edit",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\toml_edit-0.22.24\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "parse"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\target\\debug\\deps\\libtoml_edit-3557ddd7fa487f6f.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpkxxu_xmp/proc-macro-crate-3.3.0#proc-macro-crate@3.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro_crate",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\target\\debug\\deps\\libproc_macro_crate-b93a46aa1420d600.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "equivalent",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.1\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\target\\debug\\deps\\libequivalent-1ddcc1c34f146777.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hashbrown",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\target\\debug\\deps\\libhashbrown-89ab50377b31b71f.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#toml_datetime@0.6.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\toml_datetime-0.6.8\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "toml_datetime",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\toml_datetime-0.6.8\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\target\\debug\\deps\\libtoml_datetime-eef6e7c1a22b7f5d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winnow@0.7.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winnow-0.7.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "winnow",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winnow-0.7.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\target\\debug\\deps\\libwinnow-5cf96330a77b4481.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.7.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\indexmap-2.7.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "indexmap",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\indexmap-2.7.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\target\\debug\\deps\\libindexmap-d8af3401f798be75.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#toml_edit@0.22.24",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\toml_edit-0.22.24\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "toml_edit",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\toml_edit-0.22.24\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "parse"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\target\\debug\\deps\\libtoml_edit-3557ddd7fa487f6f.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpkxxu_xmp/proc-macro-crate-3.3.0#proc-macro-crate@3.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro_crate",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item without indentation\n   --> src\\lib.rs:179:5\n    |\n179 | /// the renamed name.\n    |     ^\n    |\n    = help: if this is supposed to be its own paragraph, add a blank line\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\n    = note: `#[warn(clippy::doc_lazy_continuation)]` on by default\nhelp: indent this line\n    |\n179 | ///   the renamed name.\n    |     ++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is supposed to be its own paragraph, add a blank line",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::doc_lazy_continuation)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "indent this line",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6010,
                        "byte_start": 6010,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 179,
                        "line_start": 179,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "/// the renamed name."
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_lazy_continuation",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item without indentation",
                "spans": [
                  {
                    "byte_end": 6010,
                    "byte_start": 6010,
                    "column_end": 5,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 179,
                    "line_start": 179,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 5,
                        "highlight_start": 5,
                        "text": "/// the renamed name."
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpkxxu_xmp/proc-macro-crate-3.3.0#proc-macro-crate@3.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro_crate",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\lib.rs:197:62\n    |\n197 |             let workspace_manifest_ts = cargo_toml_timestamp(&workspace_manifest_path)?;\n    |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `workspace_manifest_path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_borrow)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6951,
                        "byte_start": 6927,
                        "column_end": 86,
                        "column_start": 62,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 197,
                        "line_start": 197,
                        "suggested_replacement": "workspace_manifest_path",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 86,
                            "highlight_start": 62,
                            "text": "            let workspace_manifest_ts = cargo_toml_timestamp(&workspace_manifest_path)?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 6951,
                    "byte_start": 6927,
                    "column_end": 86,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 197,
                    "line_start": 197,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 86,
                        "highlight_start": 62,
                        "text": "            let workspace_manifest_ts = cargo_toml_timestamp(&workspace_manifest_path)?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpkxxu_xmp/proc-macro-crate-3.3.0#proc-macro-crate@3.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro_crate",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\lib.rs:205:21\n    |\n205 |                     &workspace_manifest_path,\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `workspace_manifest_path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7290,
                        "byte_start": 7266,
                        "column_end": 45,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 205,
                        "line_start": 205,
                        "suggested_replacement": "workspace_manifest_path",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 21,
                            "text": "                    &workspace_manifest_path,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 7290,
                    "byte_start": 7266,
                    "column_end": 45,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 205,
                    "line_start": 205,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 45,
                        "highlight_start": 21,
                        "text": "                    &workspace_manifest_path,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpkxxu_xmp/proc-macro-crate-3.3.0#proc-macro-crate@3.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro_crate",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the borrowed expression implements the required traits\n   --> src\\lib.rs:248:15\n    |\n248 |         .args(&[\"--workspace\", \"--message-format=plain\"])\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `[\"--workspace\", \"--message-format=plain\"]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n    = note: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_borrows_for_generic_args)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8824,
                        "byte_start": 8782,
                        "column_end": 57,
                        "column_start": 15,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 248,
                        "line_start": 248,
                        "suggested_replacement": "[\"--workspace\", \"--message-format=plain\"]",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 57,
                            "highlight_start": 15,
                            "text": "        .args(&[\"--workspace\", \"--message-format=plain\"])"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrows_for_generic_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "the borrowed expression implements the required traits",
                "spans": [
                  {
                    "byte_end": 8824,
                    "byte_start": 8782,
                    "column_end": 57,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 248,
                    "line_start": 248,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 15,
                        "text": "        .args(&[\"--workspace\", \"--message-format=plain\"])"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpkxxu_xmp/proc-macro-crate-3.3.0#proc-macro-crate@3.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro_crate",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: called `map(..).flatten()` on `Iterator`\n   --> src\\lib.rs:311:10\n    |\n311 |           .map(|t| t.iter())\n    |  __________^\n312 | |         .flatten()\n    | |__________________^ help: try replacing `map` with `flat_map` and remove the `.flatten()`: `flat_map(|t| t.iter())`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_flatten\n    = note: `#[warn(clippy::map_flatten)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_flatten",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::map_flatten)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try replacing `map` with `flat_map` and remove the `.flatten()`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10870,
                        "byte_start": 10834,
                        "column_end": 19,
                        "column_start": 10,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 312,
                        "line_start": 311,
                        "suggested_replacement": "flat_map(|t| t.iter())",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 10,
                            "text": "        .map(|t| t.iter())"
                          },
                          {
                            "highlight_end": 19,
                            "highlight_start": 1,
                            "text": "        .flatten()"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::map_flatten",
                  "explanation": null
                },
                "level": "warning",
                "message": "called `map(..).flatten()` on `Iterator`",
                "spans": [
                  {
                    "byte_end": 10870,
                    "byte_start": 10834,
                    "column_end": 19,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 312,
                    "line_start": 311,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 10,
                        "text": "        .map(|t| t.iter())"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "        .flatten()"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpkxxu_xmp/proc-macro-crate-3.3.0#proc-macro-crate@3.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro_crate",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\lib.rs:309:29\n    |\n309 |     Ok(workspace_dep_tables(&workspace_toml)\n    |                             ^^^^^^^^^^^^^^^ help: change this to: `workspace_toml`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10802,
                        "byte_start": 10787,
                        "column_end": 44,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 309,
                        "line_start": 309,
                        "suggested_replacement": "workspace_toml",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 29,
                            "text": "    Ok(workspace_dep_tables(&workspace_toml)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 10802,
                    "byte_start": 10787,
                    "column_end": 44,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 309,
                    "line_start": 309,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 44,
                        "highlight_start": 29,
                        "text": "    Ok(workspace_dep_tables(&workspace_toml)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpkxxu_xmp/proc-macro-crate-3.3.0#proc-macro-crate@3.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro_crate",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: called `map(..).flatten()` on `Iterator`\n   --> src\\lib.rs:360:20\n    |\n360 |         dep_tables.map(|t| t.iter()).flatten().filter_map(move |(dep_name, dep_value)| {\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try replacing `map` with `flat_map` and remove the `.flatten()`: `flat_map(|t| t.iter())`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_flatten\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_flatten",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try replacing `map` with `flat_map` and remove the `.flatten()`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12712,
                        "byte_start": 12685,
                        "column_end": 47,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 360,
                        "line_start": 360,
                        "suggested_replacement": "flat_map(|t| t.iter())",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 20,
                            "text": "        dep_tables.map(|t| t.iter()).flatten().filter_map(move |(dep_name, dep_value)| {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::map_flatten",
                  "explanation": null
                },
                "level": "warning",
                "message": "called `map(..).flatten()` on `Iterator`",
                "spans": [
                  {
                    "byte_end": 12712,
                    "byte_start": 12685,
                    "column_end": 47,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 360,
                    "line_start": 360,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 47,
                        "highlight_start": 20,
                        "text": "        dep_tables.map(|t| t.iter()).flatten().filter_map(move |(dep_name, dep_value)| {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpkxxu_xmp/proc-macro-crate-3.3.0#proc-macro-crate@3.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro_crate",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpkxxu_xmp\\proc-macro-crate-3.3.0\\target\\debug\\deps\\libproc_macro_crate-1c0e2f008c15aaa1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 12
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {}
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "proc-macro-crate",
          "version": "3.3.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/all.html \"show sidebar\")\n# Crate proc_macro_crateCopy item path\n[Settings](https://docs.rs/proc-macro-crate/latest/settings.html)\n[Help](https://docs.rs/proc-macro-crate/latest/help.html)\nSummary[Source](https://docs.rs/proc-macro-crate/latest/src/proc_macro_crate/lib.rs.html#1-577)\nExpand description\n[![](https://docs.rs/proc-macro-crate/badge.svg)](https://docs.rs/proc-macro-crate/) [![](https://img.shields.io/crates/v/proc-macro-crate.svg)](https://crates.io/crates/proc-macro-crate) [![](https://img.shields.io/crates/d/proc-macro-crate.png)](https://crates.io/crates/proc-macro-crate) [![Build Status](https://travis-ci.org/bkchr/proc-macro-crate.png?branch=master)](https://travis-ci.org/bkchr/proc-macro-crate)\nProviding support for `$crate` in procedural macros.\n  * [Introduction](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#introduction)\n  * [Example](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#example)\n  * [License](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#license)\n\n\n### [\u00a7](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#introduction)Introduction\nIn `macro_rules!` `$crate` is used to get the path of the crate where a macro is declared in. In procedural macros there is currently no easy way to get this path. A common hack is to import the desired crate with a know name and use this. However, with rust edition 2018 and dropping `extern crate` declarations from `lib.rs`, people start to rename crates in `Cargo.toml` directly. However, this breaks importing the crate, as the proc-macro developer does not know the renamed name of the crate that should be imported.\nThis crate provides a way to get the name of a crate, even if it renamed in `Cargo.toml`. For this purpose a single function `crate_name` is provided. This function needs to be called in the context of a proc-macro with the name of the desired crate. `CARGO_MANIFEST_DIR` will be used to find the current active `Cargo.toml` and this `Cargo.toml` is searched for the desired crate.\n### [\u00a7](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#example)Example\n```\nuse quote::quote;\nuse syn::Ident;\nuse proc_macro2::Span;\nuse proc_macro_crate::{crate_name, FoundCrate};\nfn import_my_crate() {\n  let found_crate = crate_name(\"my-crate\").expect(\"my-crate is present in `Cargo.toml`\");\n  match found_crate {\n    FoundCrate::Itself => quote!( crate::Something ),\n    FoundCrate::Name(name) => {\n      let ident = Ident::new(&name, Span::call_site());\n      quote!( #ident::Something )\n    }\n  };\n}\n\n```\n\n### [\u00a7](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#edge-cases)Edge cases\nThere are multiple edge cases when it comes to determining the correct crate. If you for example import a crate as its own dependency, like this:\n```\n[package]\nname = \"my_crate\"\n[dev-dependencies]\nmy_crate = { version = \"0.1\", features = [ \"test-feature\" ] }\n```\n\nThe crate will return `FoundCrate::Itself` and you will not be able to find the other instance of your crate in `dev-dependencies`. Other similar cases are when one crate is imported multiple times:\n```\n[package]\nname = \"my_crate\"\n[dependencies]\nsome-crate = { version = \"0.5\" }\nsome-crate-old = { package = \"some-crate\", version = \"0.1\" }\n```\n\nWhen searching for `some-crate` in this `Cargo.toml` it will return `FoundCrate::Name(\"some_old_crate\")`, aka the last definition of the crate in the `Cargo.toml`.\n### [\u00a7](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#license)License\nLicensed under either of\n  * [Apache License, Version 2.0](https://www.apache.org/licenses/LICENSE-2.0)\n  * [MIT license](https://opensource.org/licenses/MIT)\n\n\nat your option.\n## Enums[\u00a7](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#enums)\n\n[Error](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/enum.Error.html \"enum proc_macro_crate::Error\")\n    Error type used by this crate.\n\n[FoundCrate](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/enum.FoundCrate.html \"enum proc_macro_crate::FoundCrate\")\n    The crate as found by [`crate_name`](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/fn.crate_name.html \"fn proc_macro_crate::crate_name\").\n## Functions[\u00a7](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#functions)\n\n[crate_name](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/fn.crate_name.html \"fn proc_macro_crate::crate_name\")\n    Find the crate name for the given `orig_name` in the current `Cargo.toml`.\n",
            "markdown_with_citations": "[](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/all.html \"show sidebar\")\n# Crate proc_macro_crateCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n![\u27e84\u27e9](https://docs.rs/proc-macro-crate/) ![\u27e85\u27e9](https://crates.io/crates/proc-macro-crate) ![\u27e86\u27e9](https://crates.io/crates/proc-macro-crate) ![Build Status\u27e87\u27e9](https://travis-ci.org/bkchr/proc-macro-crate)\nProviding support for `$crate` in procedural macros.\n  * Introduction\u27e88\u27e9\n  * Example\u27e89\u27e9\n  * License\u27e810\u27e9\n\n\n### \u00a7\u27e88\u27e9Introduction\nIn `macro_rules!` `$crate` is used to get the path of the crate where a macro is declared in. In procedural macros there is currently no easy way to get this path. A common hack is to import the desired crate with a know name and use this. However, with rust edition 2018 and dropping `extern crate` declarations from `lib.rs`, people start to rename crates in `Cargo.toml` directly. However, this breaks importing the crate, as the proc-macro developer does not know the renamed name of the crate that should be imported.\nThis crate provides a way to get the name of a crate, even if it renamed in `Cargo.toml`. For this purpose a single function `crate_name` is provided. This function needs to be called in the context of a proc-macro with the name of the desired crate. `CARGO_MANIFEST_DIR` will be used to find the current active `Cargo.toml` and this `Cargo.toml` is searched for the desired crate.\n### \u00a7\u27e89\u27e9Example\n```\nuse quote::quote;\nuse syn::Ident;\nuse proc_macro2::Span;\nuse proc_macro_crate::{crate_name, FoundCrate};\nfn import_my_crate() {\n  let found_crate = crate_name(\"my-crate\").expect(\"my-crate is present in `Cargo.toml`\");\n  match found_crate {\n    FoundCrate::Itself => quote!( crate::Something ),\n    FoundCrate::Name(name) => {\n      let ident = Ident::new(&name, Span::call_site());\n      quote!( #ident::Something )\n    }\n  };\n}\n\n```\n\n### \u00a7\u27e811\u27e9Edge cases\nThere are multiple edge cases when it comes to determining the correct crate. If you for example import a crate as its own dependency, like this:\n```\n[package]\nname = \"my_crate\"\n[dev-dependencies]\nmy_crate = { version = \"0.1\", features = [ \"test-feature\" ] }\n```\n\nThe crate will return `FoundCrate::Itself` and you will not be able to find the other instance of your crate in `dev-dependencies`. Other similar cases are when one crate is imported multiple times:\n```\n[package]\nname = \"my_crate\"\n[dependencies]\nsome-crate = { version = \"0.5\" }\nsome-crate-old = { package = \"some-crate\", version = \"0.1\" }\n```\n\nWhen searching for `some-crate` in this `Cargo.toml` it will return `FoundCrate::Name(\"some_old_crate\")`, aka the last definition of the crate in the `Cargo.toml`.\n### \u00a7\u27e810\u27e9License\nLicensed under either of\n  * Apache License, Version 2.0\u27e812\u27e9\n  * MIT license\u27e813\u27e9\n\n\nat your option.\n## Enums\u00a7\u27e814\u27e9\n\nError\u27e815\u27e9\n    Error type used by this crate.\n\nFoundCrate\u27e816\u27e9\n    The crate as found by `crate_name`\u27e817\u27e9.\n## Functions\u00a7\u27e818\u27e9\n\ncrate_name\u27e817\u27e9\n    Find the crate name for the given `orig_name` in the current `Cargo.toml`.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/proc-macro-crate/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/proc-macro-crate/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/proc-macro-crate/latest/src/proc_macro_crate/lib.rs.html#1-577: Source\n\u27e84\u27e9 https://docs.rs/proc-macro-crate/badge.svg: ![\n\u27e85\u27e9 https://img.shields.io/crates/v/proc-macro-crate.svg: ![\n\u27e86\u27e9 https://img.shields.io/crates/d/proc-macro-crate.png: ![\n\u27e87\u27e9 https://travis-ci.org/bkchr/proc-macro-crate.png?branch=master: ![Build Status\n\u27e88\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#introduction: Introduction\n\u27e89\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#example: Example\n\u27e810\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#license: License\n\u27e811\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#edge-cases: \u00a7\n\u27e812\u27e9 https://www.apache.org/licenses/LICENSE-2.0: Apache License, Version 2.0\n\u27e813\u27e9 https://opensource.org/licenses/MIT: MIT license\n\u27e814\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#enums: \u00a7\n\u27e815\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/enum.Error.html: enum proc_macro_crate::Error - Error\n\u27e816\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/enum.FoundCrate.html: enum proc_macro_crate::FoundCrate - FoundCrate\n\u27e817\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/fn.crate_name.html: fn proc_macro_crate::crate_name - `crate_name`\n\u27e818\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#functions: \u00a7\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "proc-macro-crate",
          "version": "3.3.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/all.html \"show sidebar\")\n# Crate proc_macro_crateCopy item path\n[Settings](https://docs.rs/proc-macro-crate/latest/settings.html)\n[Help](https://docs.rs/proc-macro-crate/latest/help.html)\nSummary[Source](https://docs.rs/proc-macro-crate/latest/src/proc_macro_crate/lib.rs.html#1-577)\nExpand description\n[![](https://docs.rs/proc-macro-crate/badge.svg)](https://docs.rs/proc-macro-crate/) [![](https://img.shields.io/crates/v/proc-macro-crate.svg)](https://crates.io/crates/proc-macro-crate) [![](https://img.shields.io/crates/d/proc-macro-crate.png)](https://crates.io/crates/proc-macro-crate) [![Build Status](https://travis-ci.org/bkchr/proc-macro-crate.png?branch=master)](https://travis-ci.org/bkchr/proc-macro-crate)\nProviding support for `$crate` in procedural macros.\n  * [Introduction](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#introduction)\n  * [Example](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#example)\n  * [License](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#license)\n\n\n### [\u00a7](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#introduction)Introduction\nIn `macro_rules!` `$crate` is used to get the path of the crate where a macro is declared in. In procedural macros there is currently no easy way to get this path. A common hack is to import the desired crate with a know name and use this. However, with rust edition 2018 and dropping `extern crate` declarations from `lib.rs`, people start to rename crates in `Cargo.toml` directly. However, this breaks importing the crate, as the proc-macro developer does not know the renamed name of the crate that should be imported.\nThis crate provides a way to get the name of a crate, even if it renamed in `Cargo.toml`. For this purpose a single function `crate_name` is provided. This function needs to be called in the context of a proc-macro with the name of the desired crate. `CARGO_MANIFEST_DIR` will be used to find the current active `Cargo.toml` and this `Cargo.toml` is searched for the desired crate.\n### [\u00a7](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#example)Example\n```\nuse quote::quote;\nuse syn::Ident;\nuse proc_macro2::Span;\nuse proc_macro_crate::{crate_name, FoundCrate};\nfn import_my_crate() {\n  let found_crate = crate_name(\"my-crate\").expect(\"my-crate is present in `Cargo.toml`\");\n  match found_crate {\n    FoundCrate::Itself => quote!( crate::Something ),\n    FoundCrate::Name(name) => {\n      let ident = Ident::new(&name, Span::call_site());\n      quote!( #ident::Something )\n    }\n  };\n}\n\n```\n\n### [\u00a7](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#edge-cases)Edge cases\nThere are multiple edge cases when it comes to determining the correct crate. If you for example import a crate as its own dependency, like this:\n```\n[package]\nname = \"my_crate\"\n[dev-dependencies]\nmy_crate = { version = \"0.1\", features = [ \"test-feature\" ] }\n```\n\nThe crate will return `FoundCrate::Itself` and you will not be able to find the other instance of your crate in `dev-dependencies`. Other similar cases are when one crate is imported multiple times:\n```\n[package]\nname = \"my_crate\"\n[dependencies]\nsome-crate = { version = \"0.5\" }\nsome-crate-old = { package = \"some-crate\", version = \"0.1\" }\n```\n\nWhen searching for `some-crate` in this `Cargo.toml` it will return `FoundCrate::Name(\"some_old_crate\")`, aka the last definition of the crate in the `Cargo.toml`.\n### [\u00a7](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#license)License\nLicensed under either of\n  * [Apache License, Version 2.0](https://www.apache.org/licenses/LICENSE-2.0)\n  * [MIT license](https://opensource.org/licenses/MIT)\n\n\nat your option.\n## Enums[\u00a7](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#enums)\n\n[Error](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/enum.Error.html \"enum proc_macro_crate::Error\")\n    Error type used by this crate.\n\n[FoundCrate](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/enum.FoundCrate.html \"enum proc_macro_crate::FoundCrate\")\n    The crate as found by [`crate_name`](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/fn.crate_name.html \"fn proc_macro_crate::crate_name\").\n## Functions[\u00a7](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#functions)\n\n[crate_name](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/fn.crate_name.html \"fn proc_macro_crate::crate_name\")\n    Find the crate name for the given `orig_name` in the current `Cargo.toml`.\n",
            "markdown_with_citations": "[](https://docs.rs/proc-macro-crate/latest/proc_macro_crate/all.html \"show sidebar\")\n# Crate proc_macro_crateCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n![\u27e84\u27e9](https://docs.rs/proc-macro-crate/) ![\u27e85\u27e9](https://crates.io/crates/proc-macro-crate) ![\u27e86\u27e9](https://crates.io/crates/proc-macro-crate) ![Build Status\u27e87\u27e9](https://travis-ci.org/bkchr/proc-macro-crate)\nProviding support for `$crate` in procedural macros.\n  * Introduction\u27e88\u27e9\n  * Example\u27e89\u27e9\n  * License\u27e810\u27e9\n\n\n### \u00a7\u27e88\u27e9Introduction\nIn `macro_rules!` `$crate` is used to get the path of the crate where a macro is declared in. In procedural macros there is currently no easy way to get this path. A common hack is to import the desired crate with a know name and use this. However, with rust edition 2018 and dropping `extern crate` declarations from `lib.rs`, people start to rename crates in `Cargo.toml` directly. However, this breaks importing the crate, as the proc-macro developer does not know the renamed name of the crate that should be imported.\nThis crate provides a way to get the name of a crate, even if it renamed in `Cargo.toml`. For this purpose a single function `crate_name` is provided. This function needs to be called in the context of a proc-macro with the name of the desired crate. `CARGO_MANIFEST_DIR` will be used to find the current active `Cargo.toml` and this `Cargo.toml` is searched for the desired crate.\n### \u00a7\u27e89\u27e9Example\n```\nuse quote::quote;\nuse syn::Ident;\nuse proc_macro2::Span;\nuse proc_macro_crate::{crate_name, FoundCrate};\nfn import_my_crate() {\n  let found_crate = crate_name(\"my-crate\").expect(\"my-crate is present in `Cargo.toml`\");\n  match found_crate {\n    FoundCrate::Itself => quote!( crate::Something ),\n    FoundCrate::Name(name) => {\n      let ident = Ident::new(&name, Span::call_site());\n      quote!( #ident::Something )\n    }\n  };\n}\n\n```\n\n### \u00a7\u27e811\u27e9Edge cases\nThere are multiple edge cases when it comes to determining the correct crate. If you for example import a crate as its own dependency, like this:\n```\n[package]\nname = \"my_crate\"\n[dev-dependencies]\nmy_crate = { version = \"0.1\", features = [ \"test-feature\" ] }\n```\n\nThe crate will return `FoundCrate::Itself` and you will not be able to find the other instance of your crate in `dev-dependencies`. Other similar cases are when one crate is imported multiple times:\n```\n[package]\nname = \"my_crate\"\n[dependencies]\nsome-crate = { version = \"0.5\" }\nsome-crate-old = { package = \"some-crate\", version = \"0.1\" }\n```\n\nWhen searching for `some-crate` in this `Cargo.toml` it will return `FoundCrate::Name(\"some_old_crate\")`, aka the last definition of the crate in the `Cargo.toml`.\n### \u00a7\u27e810\u27e9License\nLicensed under either of\n  * Apache License, Version 2.0\u27e812\u27e9\n  * MIT license\u27e813\u27e9\n\n\nat your option.\n## Enums\u00a7\u27e814\u27e9\n\nError\u27e815\u27e9\n    Error type used by this crate.\n\nFoundCrate\u27e816\u27e9\n    The crate as found by `crate_name`\u27e817\u27e9.\n## Functions\u00a7\u27e818\u27e9\n\ncrate_name\u27e817\u27e9\n    Find the crate name for the given `orig_name` in the current `Cargo.toml`.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/proc-macro-crate/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/proc-macro-crate/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/proc-macro-crate/latest/src/proc_macro_crate/lib.rs.html#1-577: Source\n\u27e84\u27e9 https://docs.rs/proc-macro-crate/badge.svg: ![\n\u27e85\u27e9 https://img.shields.io/crates/v/proc-macro-crate.svg: ![\n\u27e86\u27e9 https://img.shields.io/crates/d/proc-macro-crate.png: ![\n\u27e87\u27e9 https://travis-ci.org/bkchr/proc-macro-crate.png?branch=master: ![Build Status\n\u27e88\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#introduction: Introduction\n\u27e89\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#example: Example\n\u27e810\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#license: License\n\u27e811\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#edge-cases: \u00a7\n\u27e812\u27e9 https://www.apache.org/licenses/LICENSE-2.0: Apache License, Version 2.0\n\u27e813\u27e9 https://opensource.org/licenses/MIT: MIT license\n\u27e814\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#enums: \u00a7\n\u27e815\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/enum.Error.html: enum proc_macro_crate::Error - Error\n\u27e816\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/enum.FoundCrate.html: enum proc_macro_crate::FoundCrate - FoundCrate\n\u27e817\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/fn.crate_name.html: fn proc_macro_crate::crate_name - `crate_name`\n\u27e818\u27e9 https://docs.rs/proc-macro-crate/latest/proc_macro_crate/#functions: \u00a7\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `proc-macro-crate` crate enables procedural macros to reliably determine the name of a crate, even if it has been renamed in `Cargo.toml`. It provides the `crate_name` function, which uses the `CARGO_MANIFEST_DIR` environment variable to locate the active `Cargo.toml` and identify the desired crate. This simplifies handling edge cases like self-dependencies or multiple versions of the same crate, ensuring compatibility with Rust 2018 edition conventions.",
          "feature_summary": null,
          "use_case": "DevTools",
          "score": 6.5,
          "factual_counterfactual": "### Pair 1: Crate Name Resolution\n\u2705 Factual: The `proc-macro-crate` crate allows procedural macros to resolve the name of a crate, even if it has been renamed in `Cargo.toml`. This is achieved using the `crate_name` function, which searches the active `Cargo.toml` for the specified crate name.  \n\u274c Counterfactual: The `proc-macro-crate` crate automatically resolves all instances of a crate in `Cargo.toml`, including multiple versions or dev-dependencies, without any ambiguity.\n\n---\n\n### Pair 2: Handling Edge Cases\n\u2705 Factual: When a crate is imported as both a dependency and a dev-dependency with different configurations, `proc-macro-crate` will return `FoundCrate::Itself` for the main crate and cannot distinguish between the dev-dependency instance.  \n\u274c Counterfactual: The `proc-macro-crate` crate can differentiate between the main crate and its dev-dependency instance, allowing macros to target specific versions or configurations.\n\n---\n\n### Pair 3: Integration with Rust 2018 Edition\n\u2705 Factual: The `proc-macro-crate` crate is particularly useful in Rust 2018 Edition, where `extern crate` declarations are no longer required, and crates can be renamed directly in `Cargo.toml`. This makes traditional methods of resolving crate names unreliable.  \n\u274c Counterfactual: The `proc-macro-crate` crate",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-36c495a1-bb618b5f-1751263844",
      "timestamp": "2025-06-30T06:10:44.968054+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]