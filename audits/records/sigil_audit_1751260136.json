[
  {
    "execution_id": "exec-d3b95606-ac34d1c6-1751260131",
    "timestamp": "2025-06-30T05:08:51.068054+00:00",
    "sacred_chain": {
      "input_data": "pico-args",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'pico-args' -> 'pico-args'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "pico-args",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/pico-args",
            "title": "pico-args v0.5.0",
            "content": {
              "raw_markdown": "#  pico-args v0.5.0\nAn ultra simple CLI arguments parser. \n  * [ #cli ](https://crates.io/keywords/cli)\n  * [ #args ](https://crates.io/keywords/args)\n\n\n  * [ Readme ](https://crates.io/crates/pico-args)\n  * [ 11 Versions ](https://crates.io/crates/pico-args/versions)\n  * [ Dependencies ](https://crates.io/crates/pico-args/dependencies)\n  * [ Dependents ](https://crates.io/crates/pico-args/reverse_dependencies)\n\n\n## Metadata\nabout 3 years ago \n2018 edition \n[ MIT ](https://choosealicense.com/licenses/mit)\n11.3 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add pico-args\nOr add the following line to your Cargo.toml:\npico-args = \"0.5.0\"\n## Documentation\n[ docs.rs/pico-args ](https://docs.rs/pico-args/)\n## Repository\n[ github.com/RazrFalcon/pico-args ](https://github.com/RazrFalcon/pico-args)\n## Owners\n[ Report crate ](https://crates.io/support?crate=pico-args&inquire=crate-violation)\n### Stats Overview\n23,955,905 Downloads all time\n11 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  pico-args v0.5.0\nAn ultra simple CLI arguments parser. \n  *  #cli \u27e81\u27e9\n  *  #args \u27e82\u27e9\n\n\n  *  Readme \u27e83\u27e9\n  *  11 Versions \u27e84\u27e9\n  *  Dependencies \u27e85\u27e9\n  *  Dependents \u27e86\u27e9\n\n\n## Metadata\nabout 3 years ago \n2018 edition \n MIT \u27e87\u27e9\n11.3 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add pico-args\nOr add the following line to your Cargo.toml:\npico-args = \"0.5.0\"\n## Documentation\n docs.rs/pico-args \u27e88\u27e9\n## Repository\n github.com/RazrFalcon/pico-args \u27e89\u27e9\n## Owners\n Report crate \u27e810\u27e9\n### Stats Overview\n23,955,905 Downloads all time\n11 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/cli:  #cli \n\u27e82\u27e9 https://crates.io/keywords/args:  #args \n\u27e83\u27e9 https://crates.io/crates/pico-args:  Readme \n\u27e84\u27e9 https://crates.io/crates/pico-args/versions:  11 Versions \n\u27e85\u27e9 https://crates.io/crates/pico-args/dependencies:  Dependencies \n\u27e86\u27e9 https://crates.io/crates/pico-args/reverse_dependencies:  Dependents \n\u27e87\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e88\u27e9 https://docs.rs/pico-args/:  docs.rs/pico-args \n\u27e89\u27e9 https://github.com/RazrFalcon/pico-args:  github.com/RazrFalcon/pico-args \n\u27e810\u27e9 https://crates.io/support?crate=pico-args&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1097,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "113921.0887528"
          },
          "docs_rs": {
            "url": "https://docs.rs/pico-args",
            "title": "Crate pico_argsCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/pico-args/latest/pico_args/all.html \"show sidebar\")\n# Crate pico_argsCopy item path\n[Settings](https://docs.rs/pico-args/latest/settings.html)\n[Help](https://docs.rs/pico-args/latest/help.html)\nSummary[Source](https://docs.rs/pico-args/latest/src/pico_args/lib.rs.html#1-808)\nExpand description\nAn ultra simple CLI arguments parser.\nIf you think that this library doesn\u2019t support some feature, it\u2019s probably intentional.\n  * No help generation\n  * Only flags, options, free arguments and subcommands are supported\n  * No combined flags (like `-vvv` or `-abc`)\n  * Options can be separated by a space, `=` or nothing. See build features\n  * Arguments can be in any order\n  * Non UTF-8 arguments are supported\n\n\n### [\u00a7](https://docs.rs/pico-args/latest/pico_args/#build-features)Build features\n  * `eq-separator`\nAllows parsing arguments separated by `=` This feature adds about 1KiB to the resulting binary\n  * `short-space-opt`\nMakes the space between short keys and their values optional (e.g. `-w10`) If `eq-separator` is enabled, then it takes precedence and the \u2018=\u2019 is not included. If `eq-separator` is disabled, then `-K=value` gives an error instead of returning `\"=value\"`. The optional space is only applicable for short keys because `--keyvalue` would be ambiguous\n  * `combined-flags` Allows combination of flags, e.g. `-abc` instead of `-a -b -c`. If `short-space-opt` or `eq-separator` are enabled, you must parse flags after values, to prevent ambiguities.\n\n\n## Structs[\u00a7](https://docs.rs/pico-args/latest/pico_args/#structs)\n\n[Arguments](https://docs.rs/pico-args/latest/pico_args/struct.Arguments.html \"struct pico_args::Arguments\")\n    An arguments parser.\n## Enums[\u00a7](https://docs.rs/pico-args/latest/pico_args/#enums)\n\n[Error](https://docs.rs/pico-args/latest/pico_args/enum.Error.html \"enum pico_args::Error\")\n    A list of possible errors.\n",
              "markdown_with_citations": "[](https://docs.rs/pico-args/latest/pico_args/all.html \"show sidebar\")\n# Crate pico_argsCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nAn ultra simple CLI arguments parser.\nIf you think that this library doesn\u2019t support some feature, it\u2019s probably intentional.\n  * No help generation\n  * Only flags, options, free arguments and subcommands are supported\n  * No combined flags (like `-vvv` or `-abc`)\n  * Options can be separated by a space, `=` or nothing. See build features\n  * Arguments can be in any order\n  * Non UTF-8 arguments are supported\n\n\n### \u00a7\u27e84\u27e9Build features\n  * `eq-separator`\nAllows parsing arguments separated by `=` This feature adds about 1KiB to the resulting binary\n  * `short-space-opt`\nMakes the space between short keys and their values optional (e.g. `-w10`) If `eq-separator` is enabled, then it takes precedence and the \u2018=\u2019 is not included. If `eq-separator` is disabled, then `-K=value` gives an error instead of returning `\"=value\"`. The optional space is only applicable for short keys because `--keyvalue` would be ambiguous\n  * `combined-flags` Allows combination of flags, e.g. `-abc` instead of `-a -b -c`. If `short-space-opt` or `eq-separator` are enabled, you must parse flags after values, to prevent ambiguities.\n\n\n## Structs\u00a7\u27e85\u27e9\n\nArguments\u27e86\u27e9\n    An arguments parser.\n## Enums\u00a7\u27e87\u27e9\n\nError\u27e88\u27e9\n    A list of possible errors.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/pico-args/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/pico-args/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/pico-args/latest/src/pico_args/lib.rs.html#1-808: Source\n\u27e84\u27e9 https://docs.rs/pico-args/latest/pico_args/#build-features: \u00a7\n\u27e85\u27e9 https://docs.rs/pico-args/latest/pico_args/#structs: \u00a7\n\u27e86\u27e9 https://docs.rs/pico-args/latest/pico_args/struct.Arguments.html: struct pico_args::Arguments - Arguments\n\u27e87\u27e9 https://docs.rs/pico-args/latest/pico_args/#enums: \u00a7\n\u27e88\u27e9 https://docs.rs/pico-args/latest/pico_args/enum.Error.html: enum pico_args::Error - Error\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1880,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "113921.7686996"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/pico-args",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [11 releases](https://lib.rs/crates/pico-args/versions)\n0.5.0 |  Jun 4, 2022   \n---|---  \n0.4.2 |  Jun 3, 2021   \n0.4.1 |  May 3, 2021   \n0.4.0 |  Jan 3, 2021   \n0.2.0 |  Jul 26, 2019   \n#**66** in [Command-line interface](https://lib.rs/command-line-interface \"Crates to help create command line interfaces, such as argument parsers, line-editing, or output coloring and formatting.\")\nDownload history 283710/week @ 2025-03-08 298954/week @ 2025-03-15 293793/week @ 2025-03-22 293576/week @ 2025-03-29 332896/week @ 2025-04-05 395485/week @ 2025-04-12 345564/week @ 2025-04-19 334086/week @ 2025-04-26 381005/week @ 2025-05-03 370485/week @ 2025-05-10 366517/week @ 2025-05-17 329168/week @ 2025-05-24 308847/week @ 2025-05-31 336667/week @ 2025-06-07 359306/week @ 2025-06-14 335499/week @ 2025-06-21\n**1,396,232** downloads per month Used in [**993** crates (160 directly)](https://lib.rs/crates/pico-args/rev)\n**MIT** license \n31KB  666 lines\n# pico-args\n![Build Status](https://img.gs/czjpqfbdkz/full/https://github.com/RazrFalcon/pico-args/workflows/Rust/badge.svg) [![Crates.io](https://img.shields.io/crates/v/pico-args.svg)](https://crates.io/crates/pico-args) [![Documentation](https://img.gs/czjpqfbdkz/full/https://docs.rs/pico-args/badge.svg)](https://docs.rs/pico-args) [![Rust 1.32+](https://img.shields.io/badge/rust-1.31+-orange.svg)](https://www.rust-lang.org) ![](https://img.shields.io/badge/unsafe-forbidden-brightgreen.svg)\nAn ultra simple CLI arguments parser.\nIf you think that this library doesn't support some feature, it's probably intentional.\n  * No help generation\n  * Only flags, options, free arguments and subcommands are supported\n  * Options can be separated by a space, ```=``` or nothing. See build features\n  * Arguments can be in any order\n  * Non UTF-8 arguments are supported\n\n\n## Build features\n  * ``eq-separator``\nAllows parsing arguments separated by ```=``` This feature adds about 1KiB to the resulting binary\n  * ``short-space-opt``\nMakes the space between short keys and their values optional (e.g. ```-`w10``) If ``eq-separator`` is enabled, then it takes precedence and the '=' is not included. If ``eq-separator`` is disabled, then ```-`K`=`value`` gives an error instead of returning ````\"`=value`\"````. The optional space is only applicable for short keys because ``--keyvalue`` would be ambiguous\n  * ``combined-flags``\nAllows combination of flags, e.g. ```-`abc`` instead of ```-`a `-`b `-`c`` If ``short-space-opt`` or ``eq-separator`` are enabled, you must parse flags after values, to prevent ambiguities\n\n\n## Limitations\nThe main fundamental limitation of ``pico-args`` is that it parses arguments in an arbitrary order. This is because we have a sort of \"steaming\" API and we don't know all the keys/arguments beforehand. This could lead to some unexpected behaviors. Specifically, let's say you have a following arguments:\n```\n`--arg1 --arg2 value\n`\n```\n\nIf your parser tries to parse ``--arg1`` as key-value first, than its value would be ``--arg2`` and not ``value``, because the parser simply takes the \"next\" argument. A properer parser would knew that ``--arg2`` is a key and will return an error, since the value is missing.\nIf your parser tries to parse ``--arg2`` as a flag first and then ``--arg1`` as key-value, than its value would be ``value``, because ``--arg2`` was already removed by the parser and the arguments list looks like ``--arg1 value`` to the parser.\nIf such behavior is unacceptable to your application, then you have to use a more high-level arguments parsing library.\n## Alternatives\nThe core idea of ``pico-args`` is to provide some \"sugar\" for arguments parsing without a lot of overhead (binary or compilation time wise). There are no point in comparing parsing features since ``pico-args`` supports only the bare minimum. [Here](https://github.com/rust-cli/argparse-benchmarks-rs) is a great comparison of various arguments parsing libraries.\n## License\nMIT\n#### No runtime deps\n#### [Features](https://lib.rs/crates/pico-args/features)\n  * [combined-flags](https://lib.rs/crates/pico-args/features#feature-combined-flags)\n  * [eq-separator](https://lib.rs/crates/pico-args/features#feature-eq-separator)\n  * [short-space-opt](https://lib.rs/crates/pico-args/features#feature-short-space-opt)\n\n\n",
              "markdown_with_citations": "###  11 releases\u27e81\u27e9\n0.5.0 |  Jun 4, 2022   \n---|---  \n0.4.2 |  Jun 3, 2021   \n0.4.1 |  May 3, 2021   \n0.4.0 |  Jan 3, 2021   \n0.2.0 |  Jul 26, 2019   \n#**66** in Command-line interface\u27e82\u27e9\nDownload history 283710/week @ 2025-03-08 298954/week @ 2025-03-15 293793/week @ 2025-03-22 293576/week @ 2025-03-29 332896/week @ 2025-04-05 395485/week @ 2025-04-12 345564/week @ 2025-04-19 334086/week @ 2025-04-26 381005/week @ 2025-05-03 370485/week @ 2025-05-10 366517/week @ 2025-05-17 329168/week @ 2025-05-24 308847/week @ 2025-05-31 336667/week @ 2025-06-07 359306/week @ 2025-06-14 335499/week @ 2025-06-21\n**1,396,232** downloads per month Used in **993** crates (160 directly)\u27e83\u27e9\n**MIT** license \n31KB  666 lines\n# pico-args\n![Build Status\u27e84\u27e9] ![Crates.io\u27e85\u27e9](https://crates.io/crates/pico-args) ![Documentation\u27e86\u27e9](https://docs.rs/pico-args) ![Rust 1.32+\u27e87\u27e9](https://www.rust-lang.org) ![](https://img.shields.io/badge/unsafe-forbidden-brightgreen.svg)\nAn ultra simple CLI arguments parser.\nIf you think that this library doesn't support some feature, it's probably intentional.\n  * No help generation\n  * Only flags, options, free arguments and subcommands are supported\n  * Options can be separated by a space, ```=``` or nothing. See build features\n  * Arguments can be in any order\n  * Non UTF-8 arguments are supported\n\n\n## Build features\n  * ``eq-separator``\nAllows parsing arguments separated by ```=``` This feature adds about 1KiB to the resulting binary\n  * ``short-space-opt``\nMakes the space between short keys and their values optional (e.g. ```-`w10``) If ``eq-separator`` is enabled, then it takes precedence and the '=' is not included. If ``eq-separator`` is disabled, then ```-`K`=`value`` gives an error instead of returning ````\"`=value`\"````. The optional space is only applicable for short keys because ``--keyvalue`` would be ambiguous\n  * ``combined-flags``\nAllows combination of flags, e.g. ```-`abc`` instead of ```-`a `-`b `-`c`` If ``short-space-opt`` or ``eq-separator`` are enabled, you must parse flags after values, to prevent ambiguities\n\n\n## Limitations\nThe main fundamental limitation of ``pico-args`` is that it parses arguments in an arbitrary order. This is because we have a sort of \"steaming\" API and we don't know all the keys/arguments beforehand. This could lead to some unexpected behaviors. Specifically, let's say you have a following arguments:\n```\n`--arg1 --arg2 value\n`\n```\n\nIf your parser tries to parse ``--arg1`` as key-value first, than its value would be ``--arg2`` and not ``value``, because the parser simply takes the \"next\" argument. A properer parser would knew that ``--arg2`` is a key and will return an error, since the value is missing.\nIf your parser tries to parse ``--arg2`` as a flag first and then ``--arg1`` as key-value, than its value would be ``value``, because ``--arg2`` was already removed by the parser and the arguments list looks like ``--arg1 value`` to the parser.\nIf such behavior is unacceptable to your application, then you have to use a more high-level arguments parsing library.\n## Alternatives\nThe core idea of ``pico-args`` is to provide some \"sugar\" for arguments parsing without a lot of overhead (binary or compilation time wise). There are no point in comparing parsing features since ``pico-args`` supports only the bare minimum. Here\u27e88\u27e9 is a great comparison of various arguments parsing libraries.\n## License\nMIT\n#### No runtime deps\n#### Features\u27e89\u27e9\n  * combined-flags\u27e810\u27e9\n  * eq-separator\u27e811\u27e9\n  * short-space-opt\u27e812\u27e9\n\n\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/pico-args/versions: 11 releases\n\u27e82\u27e9 https://lib.rs/command-line-interface: Crates to help create command line interfaces, such as argument parsers, line-editing, or output coloring and formatting. - Command-line interface\n\u27e83\u27e9 https://lib.rs/crates/pico-args/rev: **993** crates (160 directly)\n\u27e84\u27e9 https://img.gs/czjpqfbdkz/full/https://github.com/RazrFalcon/pico-args/workflows/Rust/badge.svg: Build Status\n\u27e85\u27e9 https://img.shields.io/crates/v/pico-args.svg: ![Crates.io\n\u27e86\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/pico-args/badge.svg: ![Documentation\n\u27e87\u27e9 https://img.shields.io/badge/rust-1.31+-orange.svg: ![Rust 1.32+\n\u27e88\u27e9 https://github.com/rust-cli/argparse-benchmarks-rs: Here\n\u27e89\u27e9 https://lib.rs/crates/pico-args/features: Features\n\u27e810\u27e9 https://lib.rs/crates/pico-args/features#feature-combined-flags: combined-flags\n\u27e811\u27e9 https://lib.rs/crates/pico-args/features#feature-eq-separator: eq-separator\n\u27e812\u27e9 https://lib.rs/crates/pico-args/features#feature-short-space-opt: short-space-opt\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 4294,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "113922.1378902"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpsnwjt622/pico-args-0.5.0#pico-args@0.5.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpsnwjt622\\pico-args-0.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pico_args",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpsnwjt622\\pico-args-0.5.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpsnwjt622\\pico-args-0.5.0\\target\\debug\\deps\\libpico_args-3b7f29e6ea493264.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpsnwjt622/pico-args-0.5.0#pico-args@0.5.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpsnwjt622\\pico-args-0.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pico_args",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpsnwjt622\\pico-args-0.5.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\lib.rs:82:17\n   |\n82 |                 write!(f, \"the '{}' option doesn't have an associated value\", key)\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n   = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n   |\n82 -                 write!(f, \"the '{}' option doesn't have an associated value\", key)\n82 +                 write!(f, \"the '{key}' option doesn't have an associated value\")\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::uninlined_format_args)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2627,
                        "byte_start": 2627,
                        "column_end": 34,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 82,
                        "line_start": 82,
                        "suggested_replacement": "key",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 34,
                            "highlight_start": 34,
                            "text": "                write!(f, \"the '{}' option doesn't have an associated value\", key)"
                          }
                        ]
                      },
                      {
                        "byte_end": 2675,
                        "byte_start": 2670,
                        "column_end": 82,
                        "column_start": 77,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 82,
                        "line_start": 82,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 82,
                            "highlight_start": 77,
                            "text": "                write!(f, \"the '{}' option doesn't have an associated value\", key)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 2676,
                    "byte_start": 2610,
                    "column_end": 83,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 82,
                    "line_start": 82,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 83,
                        "highlight_start": 17,
                        "text": "                write!(f, \"the '{}' option doesn't have an associated value\", key)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpsnwjt622/pico-args-0.5.0#pico-args@0.5.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpsnwjt622\\pico-args-0.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pico_args",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpsnwjt622\\pico-args-0.5.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\lib.rs:85:17\n   |\n85 |                 write!(f, \"failed to parse '{}': {}\", value, cause)\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n85 -                 write!(f, \"failed to parse '{}': {}\", value, cause)\n85 +                 write!(f, \"failed to parse '{value}': {cause}\")\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2803,
                        "byte_start": 2803,
                        "column_end": 46,
                        "column_start": 46,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 85,
                        "line_start": 85,
                        "suggested_replacement": "value",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 46,
                            "text": "                write!(f, \"failed to parse '{}': {}\", value, cause)"
                          }
                        ]
                      },
                      {
                        "byte_end": 2808,
                        "byte_start": 2808,
                        "column_end": 51,
                        "column_start": 51,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 85,
                        "line_start": 85,
                        "suggested_replacement": "cause",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 51,
                            "text": "                write!(f, \"failed to parse '{}': {}\", value, cause)"
                          }
                        ]
                      },
                      {
                        "byte_end": 2817,
                        "byte_start": 2810,
                        "column_end": 60,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 85,
                        "line_start": 85,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 60,
                            "highlight_start": 53,
                            "text": "                write!(f, \"failed to parse '{}': {}\", value, cause)"
                          }
                        ]
                      },
                      {
                        "byte_end": 2824,
                        "byte_start": 2817,
                        "column_end": 67,
                        "column_start": 60,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 85,
                        "line_start": 85,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 67,
                            "highlight_start": 60,
                            "text": "                write!(f, \"failed to parse '{}': {}\", value, cause)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 2825,
                    "byte_start": 2774,
                    "column_end": 68,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 85,
                    "line_start": 85,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 68,
                        "highlight_start": 17,
                        "text": "                write!(f, \"failed to parse '{}': {}\", value, cause)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpsnwjt622/pico-args-0.5.0#pico-args@0.5.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpsnwjt622\\pico-args-0.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pico_args",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpsnwjt622\\pico-args-0.5.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\lib.rs:88:17\n   |\n88 |                 write!(f, \"failed to parse a binary argument: {}\", cause)\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n88 -                 write!(f, \"failed to parse a binary argument: {}\", cause)\n88 +                 write!(f, \"failed to parse a binary argument: {cause}\")\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2959,
                        "byte_start": 2959,
                        "column_end": 64,
                        "column_start": 64,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "cause",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 64,
                            "highlight_start": 64,
                            "text": "                write!(f, \"failed to parse a binary argument: {}\", cause)"
                          }
                        ]
                      },
                      {
                        "byte_end": 2968,
                        "byte_start": 2961,
                        "column_end": 73,
                        "column_start": 66,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 73,
                            "highlight_start": 66,
                            "text": "                write!(f, \"failed to parse a binary argument: {}\", cause)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 2969,
                    "byte_start": 2912,
                    "column_end": 74,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 88,
                    "line_start": 88,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 74,
                        "highlight_start": 17,
                        "text": "                write!(f, \"failed to parse a binary argument: {}\", cause)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpsnwjt622/pico-args-0.5.0#pico-args@0.5.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpsnwjt622\\pico-args-0.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pico_args",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpsnwjt622\\pico-args-0.5.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\lib.rs:649:21\n    |\n649 |             match f(&value) {\n    |                     ^^^^^^ help: change this to: `value`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_borrow)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 21841,
                        "byte_start": 21835,
                        "column_end": 27,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 649,
                        "line_start": 649,
                        "suggested_replacement": "value",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 21,
                            "text": "            match f(&value) {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 21841,
                    "byte_start": 21835,
                    "column_end": 27,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 649,
                    "line_start": 649,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 21,
                        "text": "            match f(&value) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpsnwjt622/pico-args-0.5.0#pico-args@0.5.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpsnwjt622\\pico-args-0.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pico_args",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpsnwjt622\\pico-args-0.5.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary closure used to substitute value for `Option::None`\n   --> src\\lib.rs:754:5\n    |\n754 |     text.to_str().ok_or_else(|| Error::NonUtf8Argument)\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\nhelp: use `ok_or` instead\n    |\n754 -     text.to_str().ok_or_else(|| Error::NonUtf8Argument)\n754 +     text.to_str().ok_or(Error::NonUtf8Argument)\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::unnecessary_lazy_evaluations)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `ok_or` instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 24941,
                        "byte_start": 24904,
                        "column_end": 56,
                        "column_start": 19,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 754,
                        "line_start": 754,
                        "suggested_replacement": "ok_or(Error::NonUtf8Argument)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 56,
                            "highlight_start": 19,
                            "text": "    text.to_str().ok_or_else(|| Error::NonUtf8Argument)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_lazy_evaluations",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary closure used to substitute value for `Option::None`",
                "spans": [
                  {
                    "byte_end": 24941,
                    "byte_start": 24890,
                    "column_end": 56,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 754,
                    "line_start": 754,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 5,
                        "text": "    text.to_str().ok_or_else(|| Error::NonUtf8Argument)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpsnwjt622/pico-args-0.5.0#pico-args@0.5.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpsnwjt622\\pico-args-0.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pico_args",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpsnwjt622\\pico-args-0.5.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpsnwjt622\\pico-args-0.5.0\\target\\debug\\deps\\libpico_args-970d04a45144baef.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 1
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {}
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "pico-args",
          "version": "0.5.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/pico-args/latest/pico_args/all.html \"show sidebar\")\n# Crate pico_argsCopy item path\n[Settings](https://docs.rs/pico-args/latest/settings.html)\n[Help](https://docs.rs/pico-args/latest/help.html)\nSummary[Source](https://docs.rs/pico-args/latest/src/pico_args/lib.rs.html#1-808)\nExpand description\nAn ultra simple CLI arguments parser.\nIf you think that this library doesn\u2019t support some feature, it\u2019s probably intentional.\n  * No help generation\n  * Only flags, options, free arguments and subcommands are supported\n  * No combined flags (like `-vvv` or `-abc`)\n  * Options can be separated by a space, `=` or nothing. See build features\n  * Arguments can be in any order\n  * Non UTF-8 arguments are supported\n\n\n### [\u00a7](https://docs.rs/pico-args/latest/pico_args/#build-features)Build features\n  * `eq-separator`\nAllows parsing arguments separated by `=` This feature adds about 1KiB to the resulting binary\n  * `short-space-opt`\nMakes the space between short keys and their values optional (e.g. `-w10`) If `eq-separator` is enabled, then it takes precedence and the \u2018=\u2019 is not included. If `eq-separator` is disabled, then `-K=value` gives an error instead of returning `\"=value\"`. The optional space is only applicable for short keys because `--keyvalue` would be ambiguous\n  * `combined-flags` Allows combination of flags, e.g. `-abc` instead of `-a -b -c`. If `short-space-opt` or `eq-separator` are enabled, you must parse flags after values, to prevent ambiguities.\n\n\n## Structs[\u00a7](https://docs.rs/pico-args/latest/pico_args/#structs)\n\n[Arguments](https://docs.rs/pico-args/latest/pico_args/struct.Arguments.html \"struct pico_args::Arguments\")\n    An arguments parser.\n## Enums[\u00a7](https://docs.rs/pico-args/latest/pico_args/#enums)\n\n[Error](https://docs.rs/pico-args/latest/pico_args/enum.Error.html \"enum pico_args::Error\")\n    A list of possible errors.\n",
            "markdown_with_citations": "[](https://docs.rs/pico-args/latest/pico_args/all.html \"show sidebar\")\n# Crate pico_argsCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nAn ultra simple CLI arguments parser.\nIf you think that this library doesn\u2019t support some feature, it\u2019s probably intentional.\n  * No help generation\n  * Only flags, options, free arguments and subcommands are supported\n  * No combined flags (like `-vvv` or `-abc`)\n  * Options can be separated by a space, `=` or nothing. See build features\n  * Arguments can be in any order\n  * Non UTF-8 arguments are supported\n\n\n### \u00a7\u27e84\u27e9Build features\n  * `eq-separator`\nAllows parsing arguments separated by `=` This feature adds about 1KiB to the resulting binary\n  * `short-space-opt`\nMakes the space between short keys and their values optional (e.g. `-w10`) If `eq-separator` is enabled, then it takes precedence and the \u2018=\u2019 is not included. If `eq-separator` is disabled, then `-K=value` gives an error instead of returning `\"=value\"`. The optional space is only applicable for short keys because `--keyvalue` would be ambiguous\n  * `combined-flags` Allows combination of flags, e.g. `-abc` instead of `-a -b -c`. If `short-space-opt` or `eq-separator` are enabled, you must parse flags after values, to prevent ambiguities.\n\n\n## Structs\u00a7\u27e85\u27e9\n\nArguments\u27e86\u27e9\n    An arguments parser.\n## Enums\u00a7\u27e87\u27e9\n\nError\u27e88\u27e9\n    A list of possible errors.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/pico-args/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/pico-args/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/pico-args/latest/src/pico_args/lib.rs.html#1-808: Source\n\u27e84\u27e9 https://docs.rs/pico-args/latest/pico_args/#build-features: \u00a7\n\u27e85\u27e9 https://docs.rs/pico-args/latest/pico_args/#structs: \u00a7\n\u27e86\u27e9 https://docs.rs/pico-args/latest/pico_args/struct.Arguments.html: struct pico_args::Arguments - Arguments\n\u27e87\u27e9 https://docs.rs/pico-args/latest/pico_args/#enums: \u00a7\n\u27e88\u27e9 https://docs.rs/pico-args/latest/pico_args/enum.Error.html: enum pico_args::Error - Error\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "pico-args",
          "version": "0.5.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/pico-args/latest/pico_args/all.html \"show sidebar\")\n# Crate pico_argsCopy item path\n[Settings](https://docs.rs/pico-args/latest/settings.html)\n[Help](https://docs.rs/pico-args/latest/help.html)\nSummary[Source](https://docs.rs/pico-args/latest/src/pico_args/lib.rs.html#1-808)\nExpand description\nAn ultra simple CLI arguments parser.\nIf you think that this library doesn\u2019t support some feature, it\u2019s probably intentional.\n  * No help generation\n  * Only flags, options, free arguments and subcommands are supported\n  * No combined flags (like `-vvv` or `-abc`)\n  * Options can be separated by a space, `=` or nothing. See build features\n  * Arguments can be in any order\n  * Non UTF-8 arguments are supported\n\n\n### [\u00a7](https://docs.rs/pico-args/latest/pico_args/#build-features)Build features\n  * `eq-separator`\nAllows parsing arguments separated by `=` This feature adds about 1KiB to the resulting binary\n  * `short-space-opt`\nMakes the space between short keys and their values optional (e.g. `-w10`) If `eq-separator` is enabled, then it takes precedence and the \u2018=\u2019 is not included. If `eq-separator` is disabled, then `-K=value` gives an error instead of returning `\"=value\"`. The optional space is only applicable for short keys because `--keyvalue` would be ambiguous\n  * `combined-flags` Allows combination of flags, e.g. `-abc` instead of `-a -b -c`. If `short-space-opt` or `eq-separator` are enabled, you must parse flags after values, to prevent ambiguities.\n\n\n## Structs[\u00a7](https://docs.rs/pico-args/latest/pico_args/#structs)\n\n[Arguments](https://docs.rs/pico-args/latest/pico_args/struct.Arguments.html \"struct pico_args::Arguments\")\n    An arguments parser.\n## Enums[\u00a7](https://docs.rs/pico-args/latest/pico_args/#enums)\n\n[Error](https://docs.rs/pico-args/latest/pico_args/enum.Error.html \"enum pico_args::Error\")\n    A list of possible errors.\n",
            "markdown_with_citations": "[](https://docs.rs/pico-args/latest/pico_args/all.html \"show sidebar\")\n# Crate pico_argsCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nAn ultra simple CLI arguments parser.\nIf you think that this library doesn\u2019t support some feature, it\u2019s probably intentional.\n  * No help generation\n  * Only flags, options, free arguments and subcommands are supported\n  * No combined flags (like `-vvv` or `-abc`)\n  * Options can be separated by a space, `=` or nothing. See build features\n  * Arguments can be in any order\n  * Non UTF-8 arguments are supported\n\n\n### \u00a7\u27e84\u27e9Build features\n  * `eq-separator`\nAllows parsing arguments separated by `=` This feature adds about 1KiB to the resulting binary\n  * `short-space-opt`\nMakes the space between short keys and their values optional (e.g. `-w10`) If `eq-separator` is enabled, then it takes precedence and the \u2018=\u2019 is not included. If `eq-separator` is disabled, then `-K=value` gives an error instead of returning `\"=value\"`. The optional space is only applicable for short keys because `--keyvalue` would be ambiguous\n  * `combined-flags` Allows combination of flags, e.g. `-abc` instead of `-a -b -c`. If `short-space-opt` or `eq-separator` are enabled, you must parse flags after values, to prevent ambiguities.\n\n\n## Structs\u00a7\u27e85\u27e9\n\nArguments\u27e86\u27e9\n    An arguments parser.\n## Enums\u00a7\u27e87\u27e9\n\nError\u27e88\u27e9\n    A list of possible errors.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/pico-args/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/pico-args/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/pico-args/latest/src/pico_args/lib.rs.html#1-808: Source\n\u27e84\u27e9 https://docs.rs/pico-args/latest/pico_args/#build-features: \u00a7\n\u27e85\u27e9 https://docs.rs/pico-args/latest/pico_args/#structs: \u00a7\n\u27e86\u27e9 https://docs.rs/pico-args/latest/pico_args/struct.Arguments.html: struct pico_args::Arguments - Arguments\n\u27e87\u27e9 https://docs.rs/pico-args/latest/pico_args/#enums: \u00a7\n\u27e88\u27e9 https://docs.rs/pico-args/latest/pico_args/enum.Error.html: enum pico_args::Error - Error\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `pico-args` crate is a minimalistic and efficient CLI argument parser for Rust, designed to handle flags, options, free arguments, and subcommands with simplicity. It supports non-UTF-8 arguments, flexible argument ordering, and optional build features like `eq-separator`, `short-space-opt`, and `combined-flags` for enhanced parsing capabilities. Notably, it avoids features like help generation and combined flags by default, prioritizing small binary size and straightforward functionality.",
          "feature_summary": null,
          "use_case": "Utilities",
          "score": 6.0,
          "factual_counterfactual": "### Pair 1: Parsing Features  \n\u2705 Factual: The `pico-args` crate supports parsing arguments in any order, allowing flexibility in CLI input.  \n\u274c Counterfactual: The `pico-args` crate enforces strict ordering of arguments, requiring flags and options to appear in a predefined sequence.  \n\n---\n\n### Pair 2: Build Features  \n\u2705 Factual: The `eq-separator` feature in `pico-args` enables parsing arguments separated by `=` and adds approximately 1KiB to the resulting binary size.  \n\u274c Counterfactual: The `eq-separator` feature is enabled by default and does not affect the binary size.  \n\n---\n\n### Pair 3: Combined Flags  \n\u2705 Factual: The `combined-flags` feature allows combining multiple flags (e.g., `-abc` instead of `-a -b -c`) but must be explicitly enabled.  \n\u274c Counterfactual: The `combined-flags` feature is always enabled and supports combining flags without any ambiguity, regardless of other build features.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-d3b95606-ac34d1c6-1751260131",
      "timestamp": "2025-06-30T05:08:51.068054+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]