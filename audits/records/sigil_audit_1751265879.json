[
  {
    "execution_id": "exec-6105d6cc-c5fb7e11-1751265848",
    "timestamp": "2025-06-30T06:44:08.895126+00:00",
    "sacred_chain": {
      "input_data": "image",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'image' -> 'image'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "image",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/image",
            "title": "image v0.25.6",
            "content": {
              "raw_markdown": "#  image v0.25.6\nImaging library. Provides basic image processing and encoders/decoders for common image formats. \n  * [ Readme ](https://crates.io/crates/image)\n  * [ 114 Versions ](https://crates.io/crates/image/versions)\n  * [ Dependencies ](https://crates.io/crates/image/dependencies)\n  * [ Dependents ](https://crates.io/crates/image/reverse_dependencies)\n\n\n## Metadata\n3 months ago \nv1.70.0 \n[ MIT ](https://choosealicense.com/licenses/mit) OR [ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0)\n237 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add image\nOr add the following line to your Cargo.toml:\nimage = \"0.25.6\"\n## Documentation\n[ docs.rs/image ](https://docs.rs/image)\n## Repository\n[ github.com/image-rs/image ](https://github.com/image-rs/image)\n## Owners\n## Categories\n  * [Encoding](https://crates.io/categories/multimedia::encoding)\n  * [Encoding](https://crates.io/categories/encoding)\n  * [Images](https://crates.io/categories/multimedia::images)\n\n\n[ Report crate ](https://crates.io/support?crate=image&inquire=crate-violation)\n### Stats Overview\n62,972,126 Downloads all time\n114 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  image v0.25.6\nImaging library. Provides basic image processing and encoders/decoders for common image formats. \n  *  Readme \u27e81\u27e9\n  *  114 Versions \u27e82\u27e9\n  *  Dependencies \u27e83\u27e9\n  *  Dependents \u27e84\u27e9\n\n\n## Metadata\n3 months ago \nv1.70.0 \n MIT \u27e85\u27e9 OR  Apache-2.0 \u27e86\u27e9\n237 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add image\nOr add the following line to your Cargo.toml:\nimage = \"0.25.6\"\n## Documentation\n docs.rs/image \u27e87\u27e9\n## Repository\n github.com/image-rs/image \u27e88\u27e9\n## Owners\n## Categories\n  * Encoding\u27e89\u27e9\n  * Encoding\u27e810\u27e9\n  * Images\u27e811\u27e9\n\n\n Report crate \u27e812\u27e9\n### Stats Overview\n62,972,126 Downloads all time\n114 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/crates/image:  Readme \n\u27e82\u27e9 https://crates.io/crates/image/versions:  114 Versions \n\u27e83\u27e9 https://crates.io/crates/image/dependencies:  Dependencies \n\u27e84\u27e9 https://crates.io/crates/image/reverse_dependencies:  Dependents \n\u27e85\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e86\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e87\u27e9 https://docs.rs/image:  docs.rs/image \n\u27e88\u27e9 https://github.com/image-rs/image:  github.com/image-rs/image \n\u27e89\u27e9 https://crates.io/categories/multimedia::encoding: Encoding\n\u27e810\u27e9 https://crates.io/categories/encoding: Encoding\n\u27e811\u27e9 https://crates.io/categories/multimedia::images: Images\n\u27e812\u27e9 https://crates.io/support?crate=image&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1266,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "119638.927383"
          },
          "docs_rs": {
            "url": "https://docs.rs/image",
            "title": "Crate imageCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/image/latest/image/all.html \"show sidebar\")\n# Crate imageCopy item path\n[Settings](https://docs.rs/image/latest/settings.html)\n[Help](https://docs.rs/image/latest/help.html)\nSummary[Source](https://docs.rs/image/latest/src/image/lib.rs.html#1-336)\nExpand description\n## [\u00a7](https://docs.rs/image/latest/image/#overview)Overview\nThis crate provides native rust implementations of image encoding and decoding as well as some basic image manipulation functions. Additional documentation can currently also be found in the [README.md file which is most easily viewed on github](https://github.com/image-rs/image/blob/main/README.md).\nThere are two core problems for which this library provides solutions: a unified interface for image encodings and simple generic buffers for their content. It\u2019s possible to use either feature without the other. The focus is on a small and stable set of common operations that can be supplemented by other specialized crates. The library also prefers safe solutions with few dependencies.\n## [\u00a7](https://docs.rs/image/latest/image/#high-level-api)High level API\nLoad images using [`ImageReader`](https://docs.rs/image/latest/image/struct.ImageReader.html \"struct image::ImageReader\"):\n```\nuse std::io::Cursor;\nuse image::ImageReader;\nlet img = ImageReader::open(\"myimage.png\")?.decode()?;\nlet img2 = ImageReader::new(Cursor::new(bytes)).with_guessed_format()?.decode()?;\n```\n\nAnd save them using [`save`](https://docs.rs/image/latest/image/enum.DynamicImage.html#method.save) or [`write_to`](https://docs.rs/image/latest/image/enum.DynamicImage.html#method.write_to) methods:\n```\nimg.save(\"empty.jpg\")?;\nlet mut bytes: Vec<u8> = Vec::new();\nimg2.write_to(&mut Cursor::new(&mut bytes), image::ImageFormat::Png)?;\n```\n\nWith default features, the crate includes support for [many common image formats](https://docs.rs/image/latest/image/codecs/index.html#supported-formats).\n## [\u00a7](https://docs.rs/image/latest/image/#image-buffers)Image buffers\nThe two main types for storing images:\n  * [`ImageBuffer`](https://docs.rs/image/latest/image/struct.ImageBuffer.html) which holds statically typed image contents.\n  * [`DynamicImage`](https://docs.rs/image/latest/image/enum.DynamicImage.html) which is an enum over the supported `ImageBuffer` formats and supports conversions between them.\n\n\nAs well as a few more specialized options:\n  * [`GenericImage`](https://docs.rs/image/latest/image/trait.GenericImage.html) trait for a mutable image buffer.\n  * [`GenericImageView`](https://docs.rs/image/latest/image/trait.GenericImageView.html) trait for read only references to a `GenericImage`.\n  * [`flat`](https://docs.rs/image/latest/image/flat/index.html) module containing types for interoperability with generic channel matrices and foreign interfaces.\n\n\n## [\u00a7](https://docs.rs/image/latest/image/#low-level-encodingdecoding-api)Low level encoding/decoding API\nImplementations of [`ImageEncoder`](https://docs.rs/image/latest/image/trait.ImageEncoder.html) provides low level control over encoding:\n```\nlet encoder = JpegEncoder::new_with_quality(&mut writer, 95);\nimg.write_with_encoder(encoder)?;\n```\n\nWhile [`ImageDecoder`](https://docs.rs/image/latest/image/trait.ImageDecoder.html) and [`ImageDecoderRect`](https://docs.rs/image/latest/image/trait.ImageDecoderRect.html) give access to more advanced decoding options:\n```\nlet decoder = PngDecoder::new(&mut reader)?;\nlet icc = decoder.icc_profile();\nlet img = DynamicImage::from_decoder(decoder)?;\n```\n\n## Re-exports[\u00a7](https://docs.rs/image/latest/image/#reexports)\n\n`pub use crate::error::ImageError[](https://docs.rs/image/latest/image/error/enum.ImageError.html \"enum image::error::ImageError\");`\n\n\n`pub use crate::error::ImageResult[](https://docs.rs/image/latest/image/error/type.ImageResult.html \"type image::error::ImageResult\");`\n\n\n`pub use crate::flat::FlatSamples[](https://docs.rs/image/latest/image/flat/struct.FlatSamples.html \"struct image::flat::FlatSamples\");`\n\n## Modules[\u00a7](https://docs.rs/image/latest/image/#modules)\n\n[buffer](https://docs.rs/image/latest/image/buffer/index.html \"mod image::buffer\")\n    Iterators and other auxiliary structure for the `ImageBuffer` type.\n\n[codecs](https://docs.rs/image/latest/image/codecs/index.html \"mod image::codecs\")\n    Encoding and decoding for various image file formats.\n\n[error](https://docs.rs/image/latest/image/error/index.html \"mod image::error\")\n    Contains detailed error representation.\n\n[flat](https://docs.rs/image/latest/image/flat/index.html \"mod image::flat\")\n    Image representations for ffi.\n\n[imageops](https://docs.rs/image/latest/image/imageops/index.html \"mod image::imageops\")\n    Image Processing Functions\n\n[io](https://docs.rs/image/latest/image/io/index.html \"mod image::io\")\n    deprecated io module the original io module has been renamed to `image_reader`\n\n[math](https://docs.rs/image/latest/image/math/index.html \"mod image::math\")\n    Mathematical helper functions and types.\n\n[metadata](https://docs.rs/image/latest/image/metadata/index.html \"mod image::metadata\")\n    Types describing image metadata\n## Structs[\u00a7](https://docs.rs/image/latest/image/#structs)\n\n[Delay](https://docs.rs/image/latest/image/struct.Delay.html \"struct image::Delay\")\n    The delay of a frame relative to the previous one.\n\n[Frame](https://docs.rs/image/latest/image/struct.Frame.html \"struct image::Frame\")\n    A single animation frame\n\n[Frames](https://docs.rs/image/latest/image/struct.Frames.html \"struct image::Frames\")\n    An implementation dependent iterator, reading the frames as requested\n\n[ImageBuffer](https://docs.rs/image/latest/image/struct.ImageBuffer.html \"struct image::ImageBuffer\")\n    Generic image buffer\n\n[ImageReader](https://docs.rs/image/latest/image/struct.ImageReader.html \"struct image::ImageReader\")\n    A multi-format image reader.\n\n[LimitSupport](https://docs.rs/image/latest/image/struct.LimitSupport.html \"struct image::LimitSupport\")\n    Set of supported strict limits for a decoder.\n\n[Limits](https://docs.rs/image/latest/image/struct.Limits.html \"struct image::Limits\")\n    Resource limits for decoding.\n\n[Luma](https://docs.rs/image/latest/image/struct.Luma.html \"struct image::Luma\")\n    Grayscale colors.\n\n[LumaA](https://docs.rs/image/latest/image/struct.LumaA.html \"struct image::LumaA\")\n    Grayscale colors + alpha channel\n\n[Pixels](https://docs.rs/image/latest/image/struct.Pixels.html \"struct image::Pixels\")\n    Immutable pixel iterator\n\n[Rgb](https://docs.rs/image/latest/image/struct.Rgb.html \"struct image::Rgb\")\n    RGB colors.\n\n[Rgba](https://docs.rs/image/latest/image/struct.Rgba.html \"struct image::Rgba\")\n    RGB colors + alpha channel\n\n[SubImage](https://docs.rs/image/latest/image/struct.SubImage.html \"struct image::SubImage\")\n    A View into another image\n## Enums[\u00a7](https://docs.rs/image/latest/image/#enums)\n\n[ColorType](https://docs.rs/image/latest/image/enum.ColorType.html \"enum image::ColorType\")\n    An enumeration over supported color types and bit depths\n\n[DynamicImage](https://docs.rs/image/latest/image/enum.DynamicImage.html \"enum image::DynamicImage\")\n    A Dynamic Image\n\n[ExtendedColorType](https://docs.rs/image/latest/image/enum.ExtendedColorType.html \"enum image::ExtendedColorType\")\n    An enumeration of color types encountered in image formats.\n\n[ImageFormat](https://docs.rs/image/latest/image/enum.ImageFormat.html \"enum image::ImageFormat\")\n    An enumeration of supported image formats. Not all formats support both encoding and decoding.\n## Traits[\u00a7](https://docs.rs/image/latest/image/#traits)\n\n[AnimationDecoder](https://docs.rs/image/latest/image/trait.AnimationDecoder.html \"trait image::AnimationDecoder\")\n    `AnimationDecoder` trait\n\n[EncodableLayout](https://docs.rs/image/latest/image/trait.EncodableLayout.html \"trait image::EncodableLayout\")\n    Types which are safe to treat as an immutable byte slice in a pixel layout for image encoding.\n\n[GenericImage](https://docs.rs/image/latest/image/trait.GenericImage.html \"trait image::GenericImage\")\n    A trait for manipulating images.\n\n[GenericImageView](https://docs.rs/image/latest/image/trait.GenericImageView.html \"trait image::GenericImageView\")\n    Trait to inspect an image.\n\n[ImageDecoder](https://docs.rs/image/latest/image/trait.ImageDecoder.html \"trait image::ImageDecoder\")\n    The trait that all decoders implement\n\n[ImageDecoderRect](https://docs.rs/image/latest/image/trait.ImageDecoderRect.html \"trait image::ImageDecoderRect\")\n    Specialized image decoding not be supported by all formats\n\n[ImageEncoder](https://docs.rs/image/latest/image/trait.ImageEncoder.html \"trait image::ImageEncoder\")\n    The trait all encoders implement\n\n[Pixel](https://docs.rs/image/latest/image/trait.Pixel.html \"trait image::Pixel\")\n    A generalized pixel.\n\n[PixelWithColorType](https://docs.rs/image/latest/image/trait.PixelWithColorType.html \"trait image::PixelWithColorType\")\n    The pixel with an associated `ColorType`. Not all possible pixels represent one of the predefined `ColorType`s.\n\n[Primitive](https://docs.rs/image/latest/image/trait.Primitive.html \"trait image::Primitive\")\n    The type of each channel in a pixel. For example, this can be `u8`, `u16`, `f32`.\n## Functions[\u00a7](https://docs.rs/image/latest/image/#functions)\n\n[guess_format](https://docs.rs/image/latest/image/fn.guess_format.html \"fn image::guess_format\")\n    Guess image format from memory block\n\n[image_dimensions](https://docs.rs/image/latest/image/fn.image_dimensions.html \"fn image::image_dimensions\")\n    Read a tuple containing the (width, height) of the image located at the specified path. This is faster than fully loading the image and then getting its dimensions.\n\n[load](https://docs.rs/image/latest/image/fn.load.html \"fn image::load\")\n    Create a new image from a Reader.\n\n[load_from_memory](https://docs.rs/image/latest/image/fn.load_from_memory.html \"fn image::load_from_memory\")\n    Create a new image from a byte slice\n\n[load_from_memory_with_format](https://docs.rs/image/latest/image/fn.load_from_memory_with_format.html \"fn image::load_from_memory_with_format\")\n    Create a new image from a byte slice\n\n[open](https://docs.rs/image/latest/image/fn.open.html \"fn image::open\")\n    Open the image located at the path specified. The image\u2019s format is determined from the path\u2019s file extension.\n\n[save_buffer](https://docs.rs/image/latest/image/fn.save_buffer.html \"fn image::save_buffer\")\n    Saves the supplied buffer to a file at the path specified.\n\n[save_buffer_with_format](https://docs.rs/image/latest/image/fn.save_buffer_with_format.html \"fn image::save_buffer_with_format\")\n    Saves the supplied buffer to a file at the path specified in the specified format.\n\n[write_buffer_with_format](https://docs.rs/image/latest/image/fn.write_buffer_with_format.html \"fn image::write_buffer_with_format\")\n    Writes the supplied buffer to a writer in the specified format.\n## Type Aliases[\u00a7](https://docs.rs/image/latest/image/#types)\n\n[GrayAlphaImage](https://docs.rs/image/latest/image/type.GrayAlphaImage.html \"type image::GrayAlphaImage\")\n    Sendable grayscale + alpha channel image buffer\n\n[GrayImage](https://docs.rs/image/latest/image/type.GrayImage.html \"type image::GrayImage\")\n    Sendable grayscale image buffer\n\n[Rgb32FImage](https://docs.rs/image/latest/image/type.Rgb32FImage.html \"type image::Rgb32FImage\")\n    An image buffer for 32-bit float RGB pixels, where the backing container is a flattened vector of floats.\n\n[RgbImage](https://docs.rs/image/latest/image/type.RgbImage.html \"type image::RgbImage\")\n    Sendable Rgb image buffer\n\n[Rgba32FImage](https://docs.rs/image/latest/image/type.Rgba32FImage.html \"type image::Rgba32FImage\")\n    An image buffer for 32-bit float RGBA pixels, where the backing container is a flattened vector of floats.\n\n[RgbaImage](https://docs.rs/image/latest/image/type.RgbaImage.html \"type image::RgbaImage\")\n    Sendable Rgb + alpha channel image buffer\n",
              "markdown_with_citations": "[](https://docs.rs/image/latest/image/all.html \"show sidebar\")\n# Crate imageCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9Overview\nThis crate provides native rust implementations of image encoding and decoding as well as some basic image manipulation functions. Additional documentation can currently also be found in the README.md file which is most easily viewed on github\u27e85\u27e9.\nThere are two core problems for which this library provides solutions: a unified interface for image encodings and simple generic buffers for their content. It\u2019s possible to use either feature without the other. The focus is on a small and stable set of common operations that can be supplemented by other specialized crates. The library also prefers safe solutions with few dependencies.\n## \u00a7\u27e86\u27e9High level API\nLoad images using `ImageReader`\u27e87\u27e9:\n```\nuse std::io::Cursor;\nuse image::ImageReader;\nlet img = ImageReader::open(\"myimage.png\")?.decode()?;\nlet img2 = ImageReader::new(Cursor::new(bytes)).with_guessed_format()?.decode()?;\n```\n\nAnd save them using `save`\u27e88\u27e9 or `write_to`\u27e89\u27e9 methods:\n```\nimg.save(\"empty.jpg\")?;\nlet mut bytes: Vec<u8> = Vec::new();\nimg2.write_to(&mut Cursor::new(&mut bytes), image::ImageFormat::Png)?;\n```\n\nWith default features, the crate includes support for many common image formats\u27e810\u27e9.\n## \u00a7\u27e811\u27e9Image buffers\nThe two main types for storing images:\n  * `ImageBuffer`\u27e812\u27e9 which holds statically typed image contents.\n  * `DynamicImage`\u27e813\u27e9 which is an enum over the supported `ImageBuffer` formats and supports conversions between them.\n\n\nAs well as a few more specialized options:\n  * `GenericImage`\u27e814\u27e9 trait for a mutable image buffer.\n  * `GenericImageView`\u27e815\u27e9 trait for read only references to a `GenericImage`.\n  * `flat`\u27e816\u27e9 module containing types for interoperability with generic channel matrices and foreign interfaces.\n\n\n## \u00a7\u27e817\u27e9Low level encoding/decoding API\nImplementations of `ImageEncoder`\u27e818\u27e9 provides low level control over encoding:\n```\nlet encoder = JpegEncoder::new_with_quality(&mut writer, 95);\nimg.write_with_encoder(encoder)?;\n```\n\nWhile `ImageDecoder`\u27e819\u27e9 and `ImageDecoderRect`\u27e820\u27e9 give access to more advanced decoding options:\n```\nlet decoder = PngDecoder::new(&mut reader)?;\nlet icc = decoder.icc_profile();\nlet img = DynamicImage::from_decoder(decoder)?;\n```\n\n## Re-exports\u00a7\u27e821\u27e9\n\n`pub use crate::error::ImageError[](https://docs.rs/image/latest/image/error/enum.ImageError.html \"enum image::error::ImageError\");`\n\n\n`pub use crate::error::ImageResult[](https://docs.rs/image/latest/image/error/type.ImageResult.html \"type image::error::ImageResult\");`\n\n\n`pub use crate::flat::FlatSamples[](https://docs.rs/image/latest/image/flat/struct.FlatSamples.html \"struct image::flat::FlatSamples\");`\n\n## Modules\u00a7\u27e822\u27e9\n\nbuffer\u27e823\u27e9\n    Iterators and other auxiliary structure for the `ImageBuffer` type.\n\ncodecs\u27e824\u27e9\n    Encoding and decoding for various image file formats.\n\nerror\u27e825\u27e9\n    Contains detailed error representation.\n\nflat\u27e816\u27e9\n    Image representations for ffi.\n\nimageops\u27e826\u27e9\n    Image Processing Functions\n\nio\u27e827\u27e9\n    deprecated io module the original io module has been renamed to `image_reader`\n\nmath\u27e828\u27e9\n    Mathematical helper functions and types.\n\nmetadata\u27e829\u27e9\n    Types describing image metadata\n## Structs\u00a7\u27e830\u27e9\n\nDelay\u27e831\u27e9\n    The delay of a frame relative to the previous one.\n\nFrame\u27e832\u27e9\n    A single animation frame\n\nFrames\u27e833\u27e9\n    An implementation dependent iterator, reading the frames as requested\n\nImageBuffer\u27e812\u27e9\n    Generic image buffer\n\nImageReader\u27e87\u27e9\n    A multi-format image reader.\n\nLimitSupport\u27e834\u27e9\n    Set of supported strict limits for a decoder.\n\nLimits\u27e835\u27e9\n    Resource limits for decoding.\n\nLuma\u27e836\u27e9\n    Grayscale colors.\n\nLumaA\u27e837\u27e9\n    Grayscale colors + alpha channel\n\nPixels\u27e838\u27e9\n    Immutable pixel iterator\n\nRgb\u27e839\u27e9\n    RGB colors.\n\nRgba\u27e840\u27e9\n    RGB colors + alpha channel\n\nSubImage\u27e841\u27e9\n    A View into another image\n## Enums\u00a7\u27e842\u27e9\n\nColorType\u27e843\u27e9\n    An enumeration over supported color types and bit depths\n\nDynamicImage\u27e813\u27e9\n    A Dynamic Image\n\nExtendedColorType\u27e844\u27e9\n    An enumeration of color types encountered in image formats.\n\nImageFormat\u27e845\u27e9\n    An enumeration of supported image formats. Not all formats support both encoding and decoding.\n## Traits\u00a7\u27e846\u27e9\n\nAnimationDecoder\u27e847\u27e9\n    `AnimationDecoder` trait\n\nEncodableLayout\u27e848\u27e9\n    Types which are safe to treat as an immutable byte slice in a pixel layout for image encoding.\n\nGenericImage\u27e814\u27e9\n    A trait for manipulating images.\n\nGenericImageView\u27e815\u27e9\n    Trait to inspect an image.\n\nImageDecoder\u27e819\u27e9\n    The trait that all decoders implement\n\nImageDecoderRect\u27e820\u27e9\n    Specialized image decoding not be supported by all formats\n\nImageEncoder\u27e818\u27e9\n    The trait all encoders implement\n\nPixel\u27e849\u27e9\n    A generalized pixel.\n\nPixelWithColorType\u27e850\u27e9\n    The pixel with an associated `ColorType`. Not all possible pixels represent one of the predefined `ColorType`s.\n\nPrimitive\u27e851\u27e9\n    The type of each channel in a pixel. For example, this can be `u8`, `u16`, `f32`.\n## Functions\u00a7\u27e852\u27e9\n\nguess_format\u27e853\u27e9\n    Guess image format from memory block\n\nimage_dimensions\u27e854\u27e9\n    Read a tuple containing the (width, height) of the image located at the specified path. This is faster than fully loading the image and then getting its dimensions.\n\nload\u27e855\u27e9\n    Create a new image from a Reader.\n\nload_from_memory\u27e856\u27e9\n    Create a new image from a byte slice\n\nload_from_memory_with_format\u27e857\u27e9\n    Create a new image from a byte slice\n\nopen\u27e858\u27e9\n    Open the image located at the path specified. The image\u2019s format is determined from the path\u2019s file extension.\n\nsave_buffer\u27e859\u27e9\n    Saves the supplied buffer to a file at the path specified.\n\nsave_buffer_with_format\u27e860\u27e9\n    Saves the supplied buffer to a file at the path specified in the specified format.\n\nwrite_buffer_with_format\u27e861\u27e9\n    Writes the supplied buffer to a writer in the specified format.\n## Type Aliases\u00a7\u27e862\u27e9\n\nGrayAlphaImage\u27e863\u27e9\n    Sendable grayscale + alpha channel image buffer\n\nGrayImage\u27e864\u27e9\n    Sendable grayscale image buffer\n\nRgb32FImage\u27e865\u27e9\n    An image buffer for 32-bit float RGB pixels, where the backing container is a flattened vector of floats.\n\nRgbImage\u27e866\u27e9\n    Sendable Rgb image buffer\n\nRgba32FImage\u27e867\u27e9\n    An image buffer for 32-bit float RGBA pixels, where the backing container is a flattened vector of floats.\n\nRgbaImage\u27e868\u27e9\n    Sendable Rgb + alpha channel image buffer\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/image/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/image/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/image/latest/src/image/lib.rs.html#1-336: Source\n\u27e84\u27e9 https://docs.rs/image/latest/image/#overview: \u00a7\n\u27e85\u27e9 https://github.com/image-rs/image/blob/main/README.md: README.md file which is most easily viewed on github\n\u27e86\u27e9 https://docs.rs/image/latest/image/#high-level-api: \u00a7\n\u27e87\u27e9 https://docs.rs/image/latest/image/struct.ImageReader.html: struct image::ImageReader - `ImageReader`\n\u27e88\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html#method.save: `save`\n\u27e89\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html#method.write_to: `write_to`\n\u27e810\u27e9 https://docs.rs/image/latest/image/codecs/index.html#supported-formats: many common image formats\n\u27e811\u27e9 https://docs.rs/image/latest/image/#image-buffers: \u00a7\n\u27e812\u27e9 https://docs.rs/image/latest/image/struct.ImageBuffer.html: `ImageBuffer`\n\u27e813\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html: `DynamicImage`\n\u27e814\u27e9 https://docs.rs/image/latest/image/trait.GenericImage.html: `GenericImage`\n\u27e815\u27e9 https://docs.rs/image/latest/image/trait.GenericImageView.html: `GenericImageView`\n\u27e816\u27e9 https://docs.rs/image/latest/image/flat/index.html: `flat`\n\u27e817\u27e9 https://docs.rs/image/latest/image/#low-level-encodingdecoding-api: \u00a7\n\u27e818\u27e9 https://docs.rs/image/latest/image/trait.ImageEncoder.html: `ImageEncoder`\n\u27e819\u27e9 https://docs.rs/image/latest/image/trait.ImageDecoder.html: `ImageDecoder`\n\u27e820\u27e9 https://docs.rs/image/latest/image/trait.ImageDecoderRect.html: `ImageDecoderRect`\n\u27e821\u27e9 https://docs.rs/image/latest/image/#reexports: \u00a7\n\u27e822\u27e9 https://docs.rs/image/latest/image/#modules: \u00a7\n\u27e823\u27e9 https://docs.rs/image/latest/image/buffer/index.html: mod image::buffer - buffer\n\u27e824\u27e9 https://docs.rs/image/latest/image/codecs/index.html: mod image::codecs - codecs\n\u27e825\u27e9 https://docs.rs/image/latest/image/error/index.html: mod image::error - error\n\u27e826\u27e9 https://docs.rs/image/latest/image/imageops/index.html: mod image::imageops - imageops\n\u27e827\u27e9 https://docs.rs/image/latest/image/io/index.html: mod image::io - io\n\u27e828\u27e9 https://docs.rs/image/latest/image/math/index.html: mod image::math - math\n\u27e829\u27e9 https://docs.rs/image/latest/image/metadata/index.html: mod image::metadata - metadata\n\u27e830\u27e9 https://docs.rs/image/latest/image/#structs: \u00a7\n\u27e831\u27e9 https://docs.rs/image/latest/image/struct.Delay.html: struct image::Delay - Delay\n\u27e832\u27e9 https://docs.rs/image/latest/image/struct.Frame.html: struct image::Frame - Frame\n\u27e833\u27e9 https://docs.rs/image/latest/image/struct.Frames.html: struct image::Frames - Frames\n\u27e834\u27e9 https://docs.rs/image/latest/image/struct.LimitSupport.html: struct image::LimitSupport - LimitSupport\n\u27e835\u27e9 https://docs.rs/image/latest/image/struct.Limits.html: struct image::Limits - Limits\n\u27e836\u27e9 https://docs.rs/image/latest/image/struct.Luma.html: struct image::Luma - Luma\n\u27e837\u27e9 https://docs.rs/image/latest/image/struct.LumaA.html: struct image::LumaA - LumaA\n\u27e838\u27e9 https://docs.rs/image/latest/image/struct.Pixels.html: struct image::Pixels - Pixels\n\u27e839\u27e9 https://docs.rs/image/latest/image/struct.Rgb.html: struct image::Rgb - Rgb\n\u27e840\u27e9 https://docs.rs/image/latest/image/struct.Rgba.html: struct image::Rgba - Rgba\n\u27e841\u27e9 https://docs.rs/image/latest/image/struct.SubImage.html: struct image::SubImage - SubImage\n\u27e842\u27e9 https://docs.rs/image/latest/image/#enums: \u00a7\n\u27e843\u27e9 https://docs.rs/image/latest/image/enum.ColorType.html: enum image::ColorType - ColorType\n\u27e844\u27e9 https://docs.rs/image/latest/image/enum.ExtendedColorType.html: enum image::ExtendedColorType - ExtendedColorType\n\u27e845\u27e9 https://docs.rs/image/latest/image/enum.ImageFormat.html: enum image::ImageFormat - ImageFormat\n\u27e846\u27e9 https://docs.rs/image/latest/image/#traits: \u00a7\n\u27e847\u27e9 https://docs.rs/image/latest/image/trait.AnimationDecoder.html: trait image::AnimationDecoder - AnimationDecoder\n\u27e848\u27e9 https://docs.rs/image/latest/image/trait.EncodableLayout.html: trait image::EncodableLayout - EncodableLayout\n\u27e849\u27e9 https://docs.rs/image/latest/image/trait.Pixel.html: trait image::Pixel - Pixel\n\u27e850\u27e9 https://docs.rs/image/latest/image/trait.PixelWithColorType.html: trait image::PixelWithColorType - PixelWithColorType\n\u27e851\u27e9 https://docs.rs/image/latest/image/trait.Primitive.html: trait image::Primitive - Primitive\n\u27e852\u27e9 https://docs.rs/image/latest/image/#functions: \u00a7\n\u27e853\u27e9 https://docs.rs/image/latest/image/fn.guess_format.html: fn image::guess_format - guess_format\n\u27e854\u27e9 https://docs.rs/image/latest/image/fn.image_dimensions.html: fn image::image_dimensions - image_dimensions\n\u27e855\u27e9 https://docs.rs/image/latest/image/fn.load.html: fn image::load - load\n\u27e856\u27e9 https://docs.rs/image/latest/image/fn.load_from_memory.html: fn image::load_from_memory - load_from_memory\n\u27e857\u27e9 https://docs.rs/image/latest/image/fn.load_from_memory_with_format.html: fn image::load_from_memory_with_format - load_from_memory_with_format\n\u27e858\u27e9 https://docs.rs/image/latest/image/fn.open.html: fn image::open - open\n\u27e859\u27e9 https://docs.rs/image/latest/image/fn.save_buffer.html: fn image::save_buffer - save_buffer\n\u27e860\u27e9 https://docs.rs/image/latest/image/fn.save_buffer_with_format.html: fn image::save_buffer_with_format - save_buffer_with_format\n\u27e861\u27e9 https://docs.rs/image/latest/image/fn.write_buffer_with_format.html: fn image::write_buffer_with_format - write_buffer_with_format\n\u27e862\u27e9 https://docs.rs/image/latest/image/#types: \u00a7\n\u27e863\u27e9 https://docs.rs/image/latest/image/type.GrayAlphaImage.html: type image::GrayAlphaImage - GrayAlphaImage\n\u27e864\u27e9 https://docs.rs/image/latest/image/type.GrayImage.html: type image::GrayImage - GrayImage\n\u27e865\u27e9 https://docs.rs/image/latest/image/type.Rgb32FImage.html: type image::Rgb32FImage - Rgb32FImage\n\u27e866\u27e9 https://docs.rs/image/latest/image/type.RgbImage.html: type image::RgbImage - RgbImage\n\u27e867\u27e9 https://docs.rs/image/latest/image/type.Rgba32FImage.html: type image::Rgba32FImage - Rgba32FImage\n\u27e868\u27e9 https://docs.rs/image/latest/image/type.RgbaImage.html: type image::RgbaImage - RgbaImage\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 11926,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "119639.5796689"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/image",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [112 releases](https://lib.rs/crates/image/versions)\n0.25.6 |  Mar 25, 2025   \n---|---  \n0.25.5 |  Nov 5, 2024   \n0.25.4 |  Oct 17, 2024   \n0.25.2 |  Jul 21, 2024   \n0.2.0-alpha.2 |  Nov 22, 2014   \n#**2** in [Images](https://lib.rs/multimedia/images \"Image codecs, and crates that process pixels or generate graphics.\n\")\nDownload history 868229/week @ 2025-02-24 1202000/week @ 2025-03-03 1167629/week @ 2025-03-10 1388678/week @ 2025-03-17 1527860/week @ 2025-03-24 1020834/week @ 2025-03-31 1012733/week @ 2025-04-07 815629/week @ 2025-04-14 803283/week @ 2025-04-21 798312/week @ 2025-04-28 831438/week @ 2025-05-05 792414/week @ 2025-05-12 780217/week @ 2025-05-19 677674/week @ 2025-05-26 763694/week @ 2025-06-02 729542/week @ 2025-06-09\n**3,001,916** downloads per month Used in [**6,084** crates (3,098 directly)](https://lib.rs/crates/image/rev)\n**MIT/Apache**\n1MB  **22K** SLoC\n# Image\n[![crates.io](https://img.shields.io/crates/v/image.svg)](https://crates.io/crates/image) [![Documentation](https://img.gs/czjpqfbdkz/full/https://docs.rs/image/badge.svg)](https://docs.rs/image) [![Build Status](https://img.gs/czjpqfbdkz/full/https://github.com/image-rs/image/workflows/Rust%20CI/badge.svg)](https://github.com/image-rs/image/actions) [![Gitter](https://img.gs/czjpqfbdkz/full/https://badges.gitter.im/image-rs/image.svg)](https://gitter.im/image-rs/image?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\nMaintainers: [@HeroicKatora](https://github.com/HeroicKatora), [@fintelia](https://github.com/fintelia)\n[How to contribute](https://github.com/image-rs/organization/blob/master/CONTRIBUTING.md)\n## An Image Processing Library\nThis crate provides basic image processing functions and methods for converting to and from various image formats.\nAll image processing functions provided operate on types that implement the ``GenericImageView`` and ``GenericImage`` traits and return an ``ImageBuffer``.\n## High level API\nLoad images using [``ImageReader``](https://docs.rs/image/latest/image/?search=ImageReader \"`ImageReader`\"):\n```\n``use` `std`::```io`::``Cursor`;`\n`use` `image`::``ImageReader`;`\n`let` img `=` `ImageReader`::``open`(```\"`myimage.png`\"```)``?``.``decode``(``)``?``;`\n`let` img2 `=` `ImageReader`::``new`(``Cursor`::``new`(`bytes`)``)``.``with_guessed_format``(``)``?``.``decode``(``)``?``;`\n`\n```\n\nAnd save them using [``save``](https://lib.rs/save \"`save`\") or [``write_to``](https://docs.rs/image/latest/image/?search=write_to \"`write_to`\") methods:\n```\n`img`.``save``(```\"`empty.jpg`\"```)``?``;`\n`let` `mut` bytes`:` ``Vec``<``u8``>`` `=` `Vec```::``new`(``)``;`\nimg2`.``write_to``(``&``mut` `Cursor`::``new`(``&``mut` bytes`)``,` `image`::```ImageFormat`::``Png`)``?``;`\n`\n```\n\n## Supported Image Formats\nWith default features enabled, ``image`` provides implementations of many common image format encoders and decoders.\nFormat | Decoding | Encoding  \n---|---|---  \nAVIF | Yes * | Yes (lossy only)  \nBMP | Yes | Yes  \nDDS | Yes | ---  \nFarbfeld | Yes | Yes  \nGIF | Yes | Yes  \nHDR | Yes | Yes  \nICO | Yes | Yes  \nJPEG | Yes | Yes  \nEXR | Yes | Yes  \nPNG | Yes | Yes  \nPNM | Yes | Yes  \nQOI | Yes | Yes  \nTGA | Yes | Yes  \nTIFF | Yes | Yes  \nWebP | Yes | Yes (lossless only)  \n  * * Requires the ``avif-native`` feature, uses the libdav1d C library.\n\n\n## Image Types\nThis crate provides a number of different types for representing images. Individual pixels within images are indexed with (0,0) at the top left corner.\n### [``ImageBuffer``](https://docs.rs/image/*/image/struct.ImageBuffer.html)\nAn image parameterised by its Pixel type, represented by a width and height and a vector of pixels. It provides direct access to its pixels and implements the ``GenericImageView`` and ``GenericImage`` traits.\n### [``DynamicImage``](https://docs.rs/image/*/image/enum.DynamicImage.html)\nA ``DynamicImage`` is an enumeration over all supported ```ImageBuffer`<`P`>```` types. Its exact image type is determined at runtime. It is the type returned when opening an image. For convenience ``DynamicImage`` reimplements all image processing functions.\n### The [``GenericImageView``](https://docs.rs/image/*/image/trait.GenericImageView.html) and [``GenericImage``](https://docs.rs/image/*/image/trait.GenericImage.html) Traits\nTraits that provide methods for inspecting (``GenericImageView``) and manipulating (``GenericImage``) images, parameterised over the image's pixel type.\n### [``SubImage``](https://docs.rs/image/*/image/struct.SubImage.html)\nA view into another image, delimited by the coordinates of a rectangle. The coordinates given set the position of the top left corner of the rectangle. This is used to perform image processing functions on a subregion of an image.\n## The [``ImageDecoder``](https://docs.rs/image/*/image/trait.ImageDecoder.html) and [``ImageDecoderRect``](https://docs.rs/image/*/image/trait.ImageDecoderRect.html) Traits\nAll image format decoders implement the ``ImageDecoder`` trait which provide basic methods for getting image metadata and decoding images. Some formats additionally provide ``ImageDecoderRect`` implementations which allow for decoding only part of an image at once.\nThe most important methods for decoders are...\n  * **dimensions** : Return a tuple containing the width and height of the image.\n  * **color_type** : Return the color type of the image data produced by this decoder.\n  * **read_image** : Decode the entire image into a slice of bytes.\n\n\n## Pixels\n``image`` provides the following pixel types:\n  * **Rgb** : RGB pixel\n  * **Rgba** : RGB with alpha (RGBA pixel)\n  * **Luma** : Grayscale pixel\n  * **LumaA** : Grayscale with alpha\n\n\nAll pixels are parameterised by their component type.\n## Image Processing Functions\nThese are the functions defined in the [``imageops``](https://docs.rs/image/latest/image/imageops/index.html) module. All functions operate on types that implement the [``GenericImage``](https://docs.rs/image/latest/image/trait.GenericImage.html) trait. Note that some of the functions are very slow in debug mode. Make sure to use release mode if you experience any performance issues.\n  * [**blur**](https://docs.rs/image/latest/image/enum.DynamicImage.html#method.blur): Performs a Gaussian blur on the supplied image.\n  * [**brighten**](https://docs.rs/image/latest/image/enum.DynamicImage.html#method.brighten): Brighten the supplied image.\n  * [**huerotate**](https://docs.rs/image/latest/image/enum.DynamicImage.html#method.huerotate): Hue rotate the supplied image by degrees.\n  * [**contrast**](https://docs.rs/image/latest/image/enum.DynamicImage.html#method.adjust_contrast): Adjust the contrast of the supplied image.\n  * [**crop**](https://docs.rs/image/latest/image/enum.DynamicImage.html#method.crop): Return a mutable view into an image.\n  * [**filter3x3**](https://docs.rs/image/latest/image/enum.DynamicImage.html#method.filter3x3): Perform a 3x3 box filter on the supplied image.\n  * [**flip_horizontal**](https://docs.rs/image/latest/image/enum.DynamicImage.html#method.fliph): Flip an image horizontally.\n  * [**flip_vertical**](https://docs.rs/image/latest/image/enum.DynamicImage.html#method.flipv): Flip an image vertically.\n  * [**grayscale**](https://docs.rs/image/latest/image/enum.DynamicImage.html#method.grayscale): Convert the supplied image to grayscale.\n  * [**invert**](https://docs.rs/image/latest/image/enum.DynamicImage.html#method.invert): Invert each pixel within the supplied image This function operates in place.\n  * [**resize**](https://docs.rs/image/latest/image/enum.DynamicImage.html#method.resize): Resize the supplied image to the specified dimensions.\n  * [**rotate180**](https://docs.rs/image/latest/image/enum.DynamicImage.html#method.rotate180): Rotate an image 180 degrees clockwise.\n  * [**rotate270**](https://docs.rs/image/latest/image/enum.DynamicImage.html#method.rotate270): Rotate an image 270 degrees clockwise.\n  * [**rotate90**](https://docs.rs/image/latest/image/enum.DynamicImage.html#method.rotate90): Rotate an image 90 degrees clockwise.\n  * [**unsharpen**](https://docs.rs/image/latest/image/enum.DynamicImage.html#method.unsharpen): Performs an unsharpen mask on the supplied image.\n\n\nFor more options, see the [``imageproc``](https://lib.rs/crates/imageproc) crate.\n## Examples\n### Opening and Saving Images\n``image`` provides the [``open``](https://docs.rs/image/latest/image/fn.open.html) function for opening images from a path. The image format is determined from the path's file extension. An ``io`` module provides a reader which offer some more control.\n```\n``use` `image`::``GenericImageView`;`\n``//` Use the open function to load an image from a Path.`\n``//` `open` returns a `DynamicImage` on success.`\n`let` img `=` `image`::``open`(```\"`tests/images/jpg/progressive/cat.jpg`\"```)``.``unwrap``(``)``;`\n``//` The dimensions method returns the images width and height.`\n`println!``(```\"`dimensions `{:?}``\"```,` img`.``dimensions``(``)``)``;`\n``//` The color method returns the image's `ColorType`.`\n`println!``(```\"``{:?}``\"```,` img`.``color``(``)``)``;`\n``//` Write the contents of this image to the Writer in PNG format.`\nimg`.``save``(```\"`test.png`\"```)``.``unwrap``(``)``;`\n`\n```\n\n### Generating Fractals\n```\n```//!` An example of generating julia fractals.`\n`let` imgx `=` `800``;`\n`let` imgy `=` `800``;`\n`let` scalex `=` `3.``0` `/` imgx `as` `f32``;`\n`let` scaley `=` `3.``0` `/` imgy `as` `f32``;`\n``//` Create a new ImgBuf with width: imgx and height: imgy`\n`let` `mut` imgbuf `=` `image`::```ImageBuffer`::``new`(`imgx`,` imgy`)``;`\n``//` Iterate over the coordinates and pixels of the image`\n`for` `(`x`,` y`,` pixel`)` `in` imgbuf`.``enumerate_pixels_mut``(``)` ``{`\n  `let` r `=` `(``0.``3` `*` x `as` `f32``)` `as` `u8``;`\n  `let` b `=` `(``0.``3` `*` y `as` `f32``)` `as` `u8``;`\n  `*`pixel `=` `image`::``Rgb`(``[`r`,` `0``,` b`]``)``;`\n```}``\n``//` A redundant loop to demonstrate reading image data`\n`for` x `in` `0``..`imgx ``{`\n  `for` y `in` `0``..`imgy `{`\n    `let` cx `=` y `as` `f32` `*` scalex `-` `1.``5``;`\n    `let` cy `=` x `as` `f32` `*` scaley `-` `1.``5``;`\n    `let` c `=` `num_complex`::```Complex`::``new`(``-``0.``4``,` `0.``6``)``;`\n    `let` `mut` z `=` `num_complex`::```Complex`::``new`(`cx`,` cy`)``;`\n    `let` `mut` i `=` `0``;`\n    `while` i `<` `255` `&&` z`.``norm``(``)` `<=` `2.``0` `{`\n      z `=` z `*` z `+` c`;`\n      i `+=` `1``;`\n    `}`\n    `let` pixel `=` imgbuf`.``get_pixel_mut``(`x`,` y`)``;`\n    `let` `image`::``Rgb`(`data`)` `=` `*`pixel`;`\n    `*`pixel `=` `image`::``Rgb`(``[`data`[``0``]``,` i `as` `u8``,` data`[``2``]``]``)``;`\n  `}`\n```}``\n``//` Save the image as \u201cfractal.png\u201d, the format is deduced from the path`\nimgbuf`.``save``(```\"`fractal.png`\"```)``.``unwrap``(``)``;`\n`\n```\n\nExample output:\n![A Julia Fractal, c: -0.4 + 0.6i](https://img.gs/czjpqfbdkz/500/https://raw.githubusercontent.com/image-rs/image/f337e27aadaae8b86484429bc6020fef8a019c95/examples/fractal.png)\n### Writing raw buffers\nIf the high level interface is not needed because the image was obtained by other means, ``image`` provides the function [``save_buffer``](https://docs.rs/image/latest/image/fn.save_buffer.html) to save a buffer to a file.\n```\n``let` buffer`:` `&``[``u8``]` `=` `unimplemented!``(``)``;` ``//` Generate the image data`\n``//` Save the buffer as \"image.png\"`\n`image`::``save_buffer`(```\"`image.png`\"```,` buffer`,` `800``,` `600``,` `image`::```ExtendedColorType`::``Rgb8`)``.``unwrap``(``)`\n`\n```\n\n#### Dependencies\n~1.5\u20136MB  ~115K SLoC\n  * [bytemuck](https://lib.rs/crates/bytemuck \"1.8.0\")[+extern_crate_alloc](https://lib.rs/crates/bytemuck/features#feature-extern_crate_alloc)\n  * [byteorder-lite](https://lib.rs/crates/byteorder-lite \"0.1.0\")\n  * [color_quant?](https://lib.rs/crates/image/features#feature-color_quant \"optional feature\") [gif](https://lib.rs/crates/image/features#feature-gif \"default feature\") [color_quant](https://lib.rs/crates/color_quant \"1.1\")\n  * [gif](https://lib.rs/crates/image/features#feature-gif \"default feature\") [gif](https://lib.rs/crates/gif \"new\") 0.13.1\n  * [avif-native?](https://lib.rs/crates/image/features#feature-avif-native \"optional feature\") [dav1d](https://lib.rs/crates/dav1d \"0.10.3\")\n  * [avif-native?](https://lib.rs/crates/image/features#feature-avif-native \"optional feature\") [mp4parse](https://lib.rs/crates/mp4parse \"0.17.0\")\n  * [ default ](https://lib.rs/crates/image/features#feature-exr \"exr enabled by default feature\") [exr](https://lib.rs/crates/exr \"1.5.0\")\n  * [webp](https://lib.rs/crates/image/features#feature-webp \"default feature\") [image-webp](https://lib.rs/crates/image-webp \"0.2.0\")\n  * [num-traits](https://lib.rs/crates/num-traits \"0.2.0\")\n  * [ default ](https://lib.rs/crates/image/features#feature-png \"png enabled by default feature\") [png](https://lib.rs/crates/png \"0.17.11\")\n  * [ default ](https://lib.rs/crates/image/features#feature-qoi \"qoi enabled by default feature\") [qoi](https://lib.rs/crates/qoi \"0.4\")\n  * [avif](https://lib.rs/crates/image/features#feature-avif \"default feature\") [nasm?](https://lib.rs/crates/image/features#feature-nasm \"optional feature\") [rayon](https://lib.rs/crates/image/features#feature-rayon \"default feature\") [ravif](https://lib.rs/crates/ravif \"0.11.11\")\n  * [avif](https://lib.rs/crates/image/features#feature-avif \"default feature\") [rgb](https://lib.rs/crates/rgb \"0.8.48\")\n  * [rayon](https://lib.rs/crates/image/features#feature-rayon \"default feature\") [rayon](https://lib.rs/crates/rayon \"1.7.0\")\n  * [ optional ](https://lib.rs/crates/image/features#feature-serde \"serde is optional feature\") [serde](https://lib.rs/crates/serde \"1.0.214\")[+derive](https://lib.rs/crates/serde/features#feature-derive)\n  * [ default ](https://lib.rs/crates/image/features#feature-tiff \"tiff enabled by default feature\") [tiff](https://lib.rs/crates/tiff \"new\") 0.9\n  * [jpeg](https://lib.rs/crates/image/features#feature-jpeg \"default feature\") [zune-core](https://lib.rs/crates/zune-core \"0.4.12\")\n  * [jpeg](https://lib.rs/crates/image/features#feature-jpeg \"default feature\") [zune-jpeg](https://lib.rs/crates/zune-jpeg \"0.4.13\")\n\n\n  * dev  [crc32fast](https://lib.rs/crates/crc32fast \"1.2.0\")\n  * dev  [criterion](https://lib.rs/crates/criterion \"outdated\") 0.5\n  * dev  [glob](https://lib.rs/crates/glob \"0.3\")\n  * dev  [num-complex](https://lib.rs/crates/num-complex \"0.4\")\n  * dev  [quickcheck](https://lib.rs/crates/quickcheck \"new\") 1.0\n\n\n#### [Other features](https://lib.rs/crates/image/features)\n  * [benchmarks](https://lib.rs/crates/image/features#feature-benchmarks)\n  * [bmp](https://lib.rs/crates/image/features#feature-bmp)\n  * [dds](https://lib.rs/crates/image/features#feature-dds)\n  * [default-formats](https://lib.rs/crates/image/features#feature-default-formats)\n  * [ff](https://lib.rs/crates/image/features#feature-ff)\n  * [hdr](https://lib.rs/crates/image/features#feature-hdr)\n  * [ico](https://lib.rs/crates/image/features#feature-ico)\n  * [pnm](https://lib.rs/crates/image/features#feature-pnm)\n  * [tga](https://lib.rs/crates/image/features#feature-tga)\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  112 releases\u27e81\u27e9\n0.25.6 |  Mar 25, 2025   \n---|---  \n0.25.5 |  Nov 5, 2024   \n0.25.4 |  Oct 17, 2024   \n0.25.2 |  Jul 21, 2024   \n0.2.0-alpha.2 |  Nov 22, 2014   \n#**2** in Images\u27e82\u27e9\nDownload history 868229/week @ 2025-02-24 1202000/week @ 2025-03-03 1167629/week @ 2025-03-10 1388678/week @ 2025-03-17 1527860/week @ 2025-03-24 1020834/week @ 2025-03-31 1012733/week @ 2025-04-07 815629/week @ 2025-04-14 803283/week @ 2025-04-21 798312/week @ 2025-04-28 831438/week @ 2025-05-05 792414/week @ 2025-05-12 780217/week @ 2025-05-19 677674/week @ 2025-05-26 763694/week @ 2025-06-02 729542/week @ 2025-06-09\n**3,001,916** downloads per month Used in **6,084** crates (3,098 directly)\u27e83\u27e9\n**MIT/Apache**\n1MB  **22K** SLoC\n# Image\n![crates.io\u27e84\u27e9](https://crates.io/crates/image) ![Documentation\u27e85\u27e9](https://docs.rs/image) ![Build Status\u27e86\u27e9](https://github.com/image-rs/image/actions) ![Gitter\u27e87\u27e9](https://gitter.im/image-rs/image?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\nMaintainers: @HeroicKatora\u27e88\u27e9, @fintelia\u27e89\u27e9\nHow to contribute\u27e810\u27e9\n## An Image Processing Library\nThis crate provides basic image processing functions and methods for converting to and from various image formats.\nAll image processing functions provided operate on types that implement the ``GenericImageView`` and ``GenericImage`` traits and return an ``ImageBuffer``.\n## High level API\nLoad images using ``ImageReader``\u27e811\u27e9:\n```\n``use` `std`::```io`::``Cursor`;`\n`use` `image`::``ImageReader`;`\n`let` img `=` `ImageReader`::``open`(```\"`myimage.png`\"```)``?``.``decode``(``)``?``;`\n`let` img2 `=` `ImageReader`::``new`(``Cursor`::``new`(`bytes`)``)``.``with_guessed_format``(``)``?``.``decode``(``)``?``;`\n`\n```\n\nAnd save them using ``save``\u27e812\u27e9 or ``write_to``\u27e813\u27e9 methods:\n```\n`img`.``save``(```\"`empty.jpg`\"```)``?``;`\n`let` `mut` bytes`:` ``Vec``<``u8``>`` `=` `Vec```::``new`(``)``;`\nimg2`.``write_to``(``&``mut` `Cursor`::``new`(``&``mut` bytes`)``,` `image`::```ImageFormat`::``Png`)``?``;`\n`\n```\n\n## Supported Image Formats\nWith default features enabled, ``image`` provides implementations of many common image format encoders and decoders.\nFormat | Decoding | Encoding  \n---|---|---  \nAVIF | Yes * | Yes (lossy only)  \nBMP | Yes | Yes  \nDDS | Yes | ---  \nFarbfeld | Yes | Yes  \nGIF | Yes | Yes  \nHDR | Yes | Yes  \nICO | Yes | Yes  \nJPEG | Yes | Yes  \nEXR | Yes | Yes  \nPNG | Yes | Yes  \nPNM | Yes | Yes  \nQOI | Yes | Yes  \nTGA | Yes | Yes  \nTIFF | Yes | Yes  \nWebP | Yes | Yes (lossless only)  \n  * * Requires the ``avif-native`` feature, uses the libdav1d C library.\n\n\n## Image Types\nThis crate provides a number of different types for representing images. Individual pixels within images are indexed with (0,0) at the top left corner.\n### ``ImageBuffer``\u27e814\u27e9\nAn image parameterised by its Pixel type, represented by a width and height and a vector of pixels. It provides direct access to its pixels and implements the ``GenericImageView`` and ``GenericImage`` traits.\n### ``DynamicImage``\u27e815\u27e9\nA ``DynamicImage`` is an enumeration over all supported ```ImageBuffer`<`P`>```` types. Its exact image type is determined at runtime. It is the type returned when opening an image. For convenience ``DynamicImage`` reimplements all image processing functions.\n### The ``GenericImageView``\u27e816\u27e9 and ``GenericImage``\u27e817\u27e9 Traits\nTraits that provide methods for inspecting (``GenericImageView``) and manipulating (``GenericImage``) images, parameterised over the image's pixel type.\n### ``SubImage``\u27e818\u27e9\nA view into another image, delimited by the coordinates of a rectangle. The coordinates given set the position of the top left corner of the rectangle. This is used to perform image processing functions on a subregion of an image.\n## The ``ImageDecoder``\u27e819\u27e9 and ``ImageDecoderRect``\u27e820\u27e9 Traits\nAll image format decoders implement the ``ImageDecoder`` trait which provide basic methods for getting image metadata and decoding images. Some formats additionally provide ``ImageDecoderRect`` implementations which allow for decoding only part of an image at once.\nThe most important methods for decoders are...\n  * **dimensions** : Return a tuple containing the width and height of the image.\n  * **color_type** : Return the color type of the image data produced by this decoder.\n  * **read_image** : Decode the entire image into a slice of bytes.\n\n\n## Pixels\n``image`` provides the following pixel types:\n  * **Rgb** : RGB pixel\n  * **Rgba** : RGB with alpha (RGBA pixel)\n  * **Luma** : Grayscale pixel\n  * **LumaA** : Grayscale with alpha\n\n\nAll pixels are parameterised by their component type.\n## Image Processing Functions\nThese are the functions defined in the ``imageops``\u27e821\u27e9 module. All functions operate on types that implement the ``GenericImage``\u27e822\u27e9 trait. Note that some of the functions are very slow in debug mode. Make sure to use release mode if you experience any performance issues.\n  * **blur**\u27e823\u27e9: Performs a Gaussian blur on the supplied image.\n  * **brighten**\u27e824\u27e9: Brighten the supplied image.\n  * **huerotate**\u27e825\u27e9: Hue rotate the supplied image by degrees.\n  * **contrast**\u27e826\u27e9: Adjust the contrast of the supplied image.\n  * **crop**\u27e827\u27e9: Return a mutable view into an image.\n  * **filter3x3**\u27e828\u27e9: Perform a 3x3 box filter on the supplied image.\n  * **flip_horizontal**\u27e829\u27e9: Flip an image horizontally.\n  * **flip_vertical**\u27e830\u27e9: Flip an image vertically.\n  * **grayscale**\u27e831\u27e9: Convert the supplied image to grayscale.\n  * **invert**\u27e832\u27e9: Invert each pixel within the supplied image This function operates in place.\n  * **resize**\u27e833\u27e9: Resize the supplied image to the specified dimensions.\n  * **rotate180**\u27e834\u27e9: Rotate an image 180 degrees clockwise.\n  * **rotate270**\u27e835\u27e9: Rotate an image 270 degrees clockwise.\n  * **rotate90**\u27e836\u27e9: Rotate an image 90 degrees clockwise.\n  * **unsharpen**\u27e837\u27e9: Performs an unsharpen mask on the supplied image.\n\n\nFor more options, see the ``imageproc``\u27e838\u27e9 crate.\n## Examples\n### Opening and Saving Images\n``image`` provides the ``open``\u27e839\u27e9 function for opening images from a path. The image format is determined from the path's file extension. An ``io`` module provides a reader which offer some more control.\n```\n``use` `image`::``GenericImageView`;`\n``//` Use the open function to load an image from a Path.`\n``//` `open` returns a `DynamicImage` on success.`\n`let` img `=` `image`::``open`(```\"`tests/images/jpg/progressive/cat.jpg`\"```)``.``unwrap``(``)``;`\n``//` The dimensions method returns the images width and height.`\n`println!``(```\"`dimensions `{:?}``\"```,` img`.``dimensions``(``)``)``;`\n``//` The color method returns the image's `ColorType`.`\n`println!``(```\"``{:?}``\"```,` img`.``color``(``)``)``;`\n``//` Write the contents of this image to the Writer in PNG format.`\nimg`.``save``(```\"`test.png`\"```)``.``unwrap``(``)``;`\n`\n```\n\n### Generating Fractals\n```\n```//!` An example of generating julia fractals.`\n`let` imgx `=` `800``;`\n`let` imgy `=` `800``;`\n`let` scalex `=` `3.``0` `/` imgx `as` `f32``;`\n`let` scaley `=` `3.``0` `/` imgy `as` `f32``;`\n``//` Create a new ImgBuf with width: imgx and height: imgy`\n`let` `mut` imgbuf `=` `image`::```ImageBuffer`::``new`(`imgx`,` imgy`)``;`\n``//` Iterate over the coordinates and pixels of the image`\n`for` `(`x`,` y`,` pixel`)` `in` imgbuf`.``enumerate_pixels_mut``(``)` ``{`\n  `let` r `=` `(``0.``3` `*` x `as` `f32``)` `as` `u8``;`\n  `let` b `=` `(``0.``3` `*` y `as` `f32``)` `as` `u8``;`\n  `*`pixel `=` `image`::``Rgb`(``[`r`,` `0``,` b`]``)``;`\n```}``\n``//` A redundant loop to demonstrate reading image data`\n`for` x `in` `0``..`imgx ``{`\n  `for` y `in` `0``..`imgy `{`\n    `let` cx `=` y `as` `f32` `*` scalex `-` `1.``5``;`\n    `let` cy `=` x `as` `f32` `*` scaley `-` `1.``5``;`\n    `let` c `=` `num_complex`::```Complex`::``new`(``-``0.``4``,` `0.``6``)``;`\n    `let` `mut` z `=` `num_complex`::```Complex`::``new`(`cx`,` cy`)``;`\n    `let` `mut` i `=` `0``;`\n    `while` i `<` `255` `&&` z`.``norm``(``)` `<=` `2.``0` `{`\n      z `=` z `*` z `+` c`;`\n      i `+=` `1``;`\n    `}`\n    `let` pixel `=` imgbuf`.``get_pixel_mut``(`x`,` y`)``;`\n    `let` `image`::``Rgb`(`data`)` `=` `*`pixel`;`\n    `*`pixel `=` `image`::``Rgb`(``[`data`[``0``]``,` i `as` `u8``,` data`[``2``]``]``)``;`\n  `}`\n```}``\n``//` Save the image as \u201cfractal.png\u201d, the format is deduced from the path`\nimgbuf`.``save``(```\"`fractal.png`\"```)``.``unwrap``(``)``;`\n`\n```\n\nExample output:\n![A Julia Fractal, c: -0.4 + 0.6i\u27e840\u27e9]\n### Writing raw buffers\nIf the high level interface is not needed because the image was obtained by other means, ``image`` provides the function ``save_buffer``\u27e841\u27e9 to save a buffer to a file.\n```\n``let` buffer`:` `&``[``u8``]` `=` `unimplemented!``(``)``;` ``//` Generate the image data`\n``//` Save the buffer as \"image.png\"`\n`image`::``save_buffer`(```\"`image.png`\"```,` buffer`,` `800``,` `600``,` `image`::```ExtendedColorType`::``Rgb8`)``.``unwrap``(``)`\n`\n```\n\n#### Dependencies\n~1.5\u20136MB  ~115K SLoC\n  * bytemuck\u27e842\u27e9+extern_crate_alloc\u27e843\u27e9\n  * byteorder-lite\u27e844\u27e9\n  * color_quant?\u27e845\u27e9 gif\u27e846\u27e9 color_quant\u27e847\u27e9\n  * gif\u27e846\u27e9 gif\u27e848\u27e9 0.13.1\n  * avif-native?\u27e849\u27e9 dav1d\u27e850\u27e9\n  * avif-native?\u27e849\u27e9 mp4parse\u27e851\u27e9\n  *  default \u27e852\u27e9 exr\u27e853\u27e9\n  * webp\u27e854\u27e9 image-webp\u27e855\u27e9\n  * num-traits\u27e856\u27e9\n  *  default \u27e857\u27e9 png\u27e858\u27e9\n  *  default \u27e859\u27e9 qoi\u27e860\u27e9\n  * avif\u27e861\u27e9 nasm?\u27e862\u27e9 rayon\u27e863\u27e9 ravif\u27e864\u27e9\n  * avif\u27e861\u27e9 rgb\u27e865\u27e9\n  * rayon\u27e863\u27e9 rayon\u27e866\u27e9\n  *  optional \u27e867\u27e9 serde\u27e868\u27e9+derive\u27e869\u27e9\n  *  default \u27e870\u27e9 tiff\u27e871\u27e9 0.9\n  * jpeg\u27e872\u27e9 zune-core\u27e873\u27e9\n  * jpeg\u27e872\u27e9 zune-jpeg\u27e874\u27e9\n\n\n  * dev  crc32fast\u27e875\u27e9\n  * dev  criterion\u27e876\u27e9 0.5\n  * dev  glob\u27e877\u27e9\n  * dev  num-complex\u27e878\u27e9\n  * dev  quickcheck\u27e879\u27e9 1.0\n\n\n#### Other features\u27e880\u27e9\n  * benchmarks\u27e881\u27e9\n  * bmp\u27e882\u27e9\n  * dds\u27e883\u27e9\n  * default-formats\u27e884\u27e9\n  * ff\u27e885\u27e9\n  * hdr\u27e886\u27e9\n  * ico\u27e887\u27e9\n  * pnm\u27e888\u27e9\n  * tga\u27e889\u27e9\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/image/versions: 112 releases\n\u27e82\u27e9 https://lib.rs/multimedia/images: Image codecs, and crates that process pixels or generate graphics.\n - Images\n\u27e83\u27e9 https://lib.rs/crates/image/rev: **6,084** crates (3,098 directly)\n\u27e84\u27e9 https://img.shields.io/crates/v/image.svg: ![crates.io\n\u27e85\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/image/badge.svg: ![Documentation\n\u27e86\u27e9 https://img.gs/czjpqfbdkz/full/https://github.com/image-rs/image/workflows/Rust%20CI/badge.svg: ![Build Status\n\u27e87\u27e9 https://img.gs/czjpqfbdkz/full/https://badges.gitter.im/image-rs/image.svg: ![Gitter\n\u27e88\u27e9 https://github.com/HeroicKatora: @HeroicKatora\n\u27e89\u27e9 https://github.com/fintelia: @fintelia\n\u27e810\u27e9 https://github.com/image-rs/organization/blob/master/CONTRIBUTING.md: How to contribute\n\u27e811\u27e9 https://docs.rs/image/latest/image/?search=ImageReader: `ImageReader` - ``ImageReader``\n\u27e812\u27e9 https://lib.rs/save: `save` - ``save``\n\u27e813\u27e9 https://docs.rs/image/latest/image/?search=write_to: `write_to` - ``write_to``\n\u27e814\u27e9 https://docs.rs/image/*/image/struct.ImageBuffer.html: ``ImageBuffer``\n\u27e815\u27e9 https://docs.rs/image/*/image/enum.DynamicImage.html: ``DynamicImage``\n\u27e816\u27e9 https://docs.rs/image/*/image/trait.GenericImageView.html: ``GenericImageView``\n\u27e817\u27e9 https://docs.rs/image/*/image/trait.GenericImage.html: ``GenericImage``\n\u27e818\u27e9 https://docs.rs/image/*/image/struct.SubImage.html: ``SubImage``\n\u27e819\u27e9 https://docs.rs/image/*/image/trait.ImageDecoder.html: ``ImageDecoder``\n\u27e820\u27e9 https://docs.rs/image/*/image/trait.ImageDecoderRect.html: ``ImageDecoderRect``\n\u27e821\u27e9 https://docs.rs/image/latest/image/imageops/index.html: ``imageops``\n\u27e822\u27e9 https://docs.rs/image/latest/image/trait.GenericImage.html: ``GenericImage``\n\u27e823\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html#method.blur: **blur**\n\u27e824\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html#method.brighten: **brighten**\n\u27e825\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html#method.huerotate: **huerotate**\n\u27e826\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html#method.adjust_contrast: **contrast**\n\u27e827\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html#method.crop: **crop**\n\u27e828\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html#method.filter3x3: **filter3x3**\n\u27e829\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html#method.fliph: **flip_horizontal**\n\u27e830\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html#method.flipv: **flip_vertical**\n\u27e831\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html#method.grayscale: **grayscale**\n\u27e832\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html#method.invert: **invert**\n\u27e833\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html#method.resize: **resize**\n\u27e834\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html#method.rotate180: **rotate180**\n\u27e835\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html#method.rotate270: **rotate270**\n\u27e836\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html#method.rotate90: **rotate90**\n\u27e837\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html#method.unsharpen: **unsharpen**\n\u27e838\u27e9 https://lib.rs/crates/imageproc: ``imageproc``\n\u27e839\u27e9 https://docs.rs/image/latest/image/fn.open.html: ``open``\n\u27e840\u27e9 https://img.gs/czjpqfbdkz/500/https://raw.githubusercontent.com/image-rs/image/f337e27aadaae8b86484429bc6020fef8a019c95/examples/fractal.png: A Julia Fractal, c: -0.4 + 0.6i\n\u27e841\u27e9 https://docs.rs/image/latest/image/fn.save_buffer.html: ``save_buffer``\n\u27e842\u27e9 https://lib.rs/crates/bytemuck: 1.8.0 - bytemuck\n\u27e843\u27e9 https://lib.rs/crates/bytemuck/features#feature-extern_crate_alloc: +extern_crate_alloc\n\u27e844\u27e9 https://lib.rs/crates/byteorder-lite: 0.1.0 - byteorder-lite\n\u27e845\u27e9 https://lib.rs/crates/image/features#feature-color_quant: optional feature - color_quant?\n\u27e846\u27e9 https://lib.rs/crates/image/features#feature-gif: default feature - gif\n\u27e847\u27e9 https://lib.rs/crates/color_quant: 1.1 - color_quant\n\u27e848\u27e9 https://lib.rs/crates/gif: new - gif\n\u27e849\u27e9 https://lib.rs/crates/image/features#feature-avif-native: optional feature - avif-native?\n\u27e850\u27e9 https://lib.rs/crates/dav1d: 0.10.3 - dav1d\n\u27e851\u27e9 https://lib.rs/crates/mp4parse: 0.17.0 - mp4parse\n\u27e852\u27e9 https://lib.rs/crates/image/features#feature-exr: exr enabled by default feature -  default \n\u27e853\u27e9 https://lib.rs/crates/exr: 1.5.0 - exr\n\u27e854\u27e9 https://lib.rs/crates/image/features#feature-webp: default feature - webp\n\u27e855\u27e9 https://lib.rs/crates/image-webp: 0.2.0 - image-webp\n\u27e856\u27e9 https://lib.rs/crates/num-traits: 0.2.0 - num-traits\n\u27e857\u27e9 https://lib.rs/crates/image/features#feature-png: png enabled by default feature -  default \n\u27e858\u27e9 https://lib.rs/crates/png: 0.17.11 - png\n\u27e859\u27e9 https://lib.rs/crates/image/features#feature-qoi: qoi enabled by default feature -  default \n\u27e860\u27e9 https://lib.rs/crates/qoi: 0.4 - qoi\n\u27e861\u27e9 https://lib.rs/crates/image/features#feature-avif: default feature - avif\n\u27e862\u27e9 https://lib.rs/crates/image/features#feature-nasm: optional feature - nasm?\n\u27e863\u27e9 https://lib.rs/crates/image/features#feature-rayon: default feature - rayon\n\u27e864\u27e9 https://lib.rs/crates/ravif: 0.11.11 - ravif\n\u27e865\u27e9 https://lib.rs/crates/rgb: 0.8.48 - rgb\n\u27e866\u27e9 https://lib.rs/crates/rayon: 1.7.0 - rayon\n\u27e867\u27e9 https://lib.rs/crates/image/features#feature-serde: serde is optional feature -  optional \n\u27e868\u27e9 https://lib.rs/crates/serde: 1.0.214 - serde\n\u27e869\u27e9 https://lib.rs/crates/serde/features#feature-derive: +derive\n\u27e870\u27e9 https://lib.rs/crates/image/features#feature-tiff: tiff enabled by default feature -  default \n\u27e871\u27e9 https://lib.rs/crates/tiff: new - tiff\n\u27e872\u27e9 https://lib.rs/crates/image/features#feature-jpeg: default feature - jpeg\n\u27e873\u27e9 https://lib.rs/crates/zune-core: 0.4.12 - zune-core\n\u27e874\u27e9 https://lib.rs/crates/zune-jpeg: 0.4.13 - zune-jpeg\n\u27e875\u27e9 https://lib.rs/crates/crc32fast: 1.2.0 - crc32fast\n\u27e876\u27e9 https://lib.rs/crates/criterion: outdated - criterion\n\u27e877\u27e9 https://lib.rs/crates/glob: 0.3 - glob\n\u27e878\u27e9 https://lib.rs/crates/num-complex: 0.4 - num-complex\n\u27e879\u27e9 https://lib.rs/crates/quickcheck: new - quickcheck\n\u27e880\u27e9 https://lib.rs/crates/image/features: Other features\n\u27e881\u27e9 https://lib.rs/crates/image/features#feature-benchmarks: benchmarks\n\u27e882\u27e9 https://lib.rs/crates/image/features#feature-bmp: bmp\n\u27e883\u27e9 https://lib.rs/crates/image/features#feature-dds: dds\n\u27e884\u27e9 https://lib.rs/crates/image/features#feature-default-formats: default-formats\n\u27e885\u27e9 https://lib.rs/crates/image/features#feature-ff: ff\n\u27e886\u27e9 https://lib.rs/crates/image/features#feature-hdr: hdr\n\u27e887\u27e9 https://lib.rs/crates/image/features#feature-ico: ico\n\u27e888\u27e9 https://lib.rs/crates/image/features#feature-pnm: pnm\n\u27e889\u27e9 https://lib.rs/crates/image/features#feature-tga: tga\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 15128,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "119640.0453663"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#adler2@2.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\adler2-2.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "adler2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\adler2-2.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libadler2-fd0b97f5f75249cc.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#aligned-vec@0.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\aligned-vec-0.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "aligned_vec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\aligned-vec-0.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libaligned_vec-8cb9d4a31ff7ecc7.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#minimal-lexical@0.2.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\minimal-lexical-0.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "minimal_lexical",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\minimal-lexical-0.2.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libminimal_lexical-3589603f810c89fa.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#either@1.15.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\either-1.15.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "either",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\either-1.15.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std",
                "use_std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libeither-049424fd275d6495.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#simd-adler32@0.3.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\simd-adler32-0.3.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "simd_adler32",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\simd-adler32-0.3.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "const-generics",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libsimd_adler32-4311a5d2a2ce109e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#arrayvec@0.7.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\arrayvec-0.7.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "arrayvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\arrayvec-0.7.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libarrayvec-f08323366d84704d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\liblog-1786323f854c511b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crc32fast@1.4.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crc32fast-1.4.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crc32fast",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crc32fast-1.4.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libcrc32fast-6f26f1a08de28b99.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quick-error@2.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quick-error-2.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quick_error",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quick-error-2.0.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libquick_error-be81f69cd219483e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#built@0.7.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\built-0.7.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "built",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\built-0.7.7\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libbuilt-1e5f2ab3a7575c01.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libbuilt-1e5f2ab3a7575c01.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#imgref@1.11.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\imgref-1.11.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "imgref",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\imgref-1.11.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "deprecated"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libimgref-02572836510dd2b0.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.21.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "once_cell",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.21.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "race",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libonce_cell-4cc8073b21e483a2.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#new_debug_unreachable@1.0.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\new_debug_unreachable-1.0.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "debug_unreachable",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\new_debug_unreachable-1.0.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libdebug_unreachable-29eb7b97d1c2ce78.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#weezl@0.1.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\weezl-0.1.8\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "weezl",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\weezl-0.1.8\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libweezl-ef95f59d3e5a869c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.69\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.69\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\thiserror-95fbe3009cb3c929\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\thiserror-95fbe3009cb3c929\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\paste-1.0.15\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\paste-1.0.15\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\paste-6d6b8744b3b7eee8\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\paste-6d6b8744b3b7eee8\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.94",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\proc-macro2-e1ee9ee3dd80fd20\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\proc-macro2-e1ee9ee3dd80fd20\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-core-1.12.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-core-1.12.1\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\rayon-core-8a97615c96d19aa8\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\rayon-core-8a97615c96d19aa8\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\crossbeam-utils-eac37113d2f8721b\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\crossbeam-utils-eac37113d2f8721b\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.97",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\anyhow-1.0.97\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\anyhow-1.0.97\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\anyhow-dc6378c5b8ea71da\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\anyhow-dc6378c5b8ea71da\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\memchr-2.7.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "memchr",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\memchr-2.7.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libmemchr-1582e0d0cb00c2d8.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.171",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\libc-6e895cdbcd5e4ab4\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\libc-6e895cdbcd5e4ab4\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#miniz_oxide@0.8.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\miniz_oxide-0.8.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "miniz_oxide",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\miniz_oxide-0.8.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "simd",
                "simd-adler32",
                "with-alloc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libminiz_oxide-9cc2de51fd8ed39b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#loop9@0.1.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\loop9-0.1.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "loop9",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\loop9-0.1.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libloop9-3fba201ced975361.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\crossbeam-utils-a76aac2ae9866593\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "i128",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\num-traits-569953c59c382d03\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\num-traits-569953c59c382d03\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#noop_proc_macro@0.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\noop_proc_macro-0.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "noop_proc_macro",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\noop_proc_macro-0.3.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\noop_proc_macro-090460ff2226a590.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\noop_proc_macro-090460ff2226a590.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\noop_proc_macro-090460ff2226a590.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\noop_proc_macro-090460ff2226a590.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\rayon-core-a8f7ad3b36b987dc\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitstream-io@2.6.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitstream-io-2.6.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitstream_io",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitstream-io-2.6.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libbitstream_io-31f950a8443426f3.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\paste-aa068a1285d656ea\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rav1e@0.7.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rav1e-0.7.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rav1e-0.7.1\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "threading"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\rav1e-57253f5c3a831e67\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\rav1e-57253f5c3a831e67\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#avif-serialize@0.8.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\avif-serialize-0.8.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "avif_serialize",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\avif-serialize-0.8.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libavif_serialize-19482741537b4a0b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\thiserror-f340d441dc92b089\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.94",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\proc-macro2-26ba5a0b8e9c4cd4\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.171",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "freebsd11",
                "libc_const_extern_fn"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\libc-21243236bad9ad17\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.97",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "std_backtrace"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\anyhow-edc35d931dd26ec7\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@1.3.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-1.3.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-1.3.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libbitflags-e7afb5616860f76a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_total_cmp"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\num-traits-18e263932a2d500f\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.171",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\liblibc-380a503941dbe08d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rav1e@0.7.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [
                [
                  "PROFILE",
                  "debug"
                ],
                [
                  "CARGO_CFG_TARGET_FEATURE",
                  "cmpxchg16b,fxsr,sse,sse2,sse3"
                ],
                [
                  "CARGO_ENCODED_RUSTFLAGS",
                  ""
                ]
              ],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\rav1e-3cc6f2d488f3026d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bytemuck@1.22.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytemuck-1.22.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytemuck",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytemuck-1.22.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "extern_crate_alloc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libbytemuck-db44f47727073425.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fdeflate@0.3.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fdeflate-0.3.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fdeflate",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fdeflate-0.3.7\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libfdeflate-f77bfaef0a7c3b02.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#flate2@1.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\flate2-1.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flate2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\flate2-1.1.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "any_impl",
                "default",
                "miniz_oxide",
                "rust_backend"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libflate2-a82f8a3215c74d4a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#half@2.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\half-2.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "half",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\half-2.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libhalf-7e77c57081e5f78c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zune-inflate@0.2.54",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zune-inflate-0.2.54\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zune_inflate",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zune-inflate-0.2.54\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "simd-adler32",
                "zlib"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libzune_inflate-8d22a1b7810286c3.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lebe@0.5.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lebe-0.5.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lebe",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lebe-0.5.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\liblebe-8fb95b602aad7482.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bit_field@0.10.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bit_field-0.10.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bit_field",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bit_field-0.10.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libbit_field-bdca8879dd2df9c6.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#color_quant@1.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\color_quant-1.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "color_quant",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\color_quant-1.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libcolor_quant-050185710bef5484.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_utils",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libcrossbeam_utils-bb4ad7bf8162756c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.97",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\anyhow-1.0.97\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "anyhow",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\anyhow-1.0.97\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libanyhow-22768441e07517a3.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.14.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.14.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.14.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libsmallvec-845cc1424f0e09d2.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zune-core@0.4.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zune-core-0.4.12\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zune_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zune-core-0.4.12\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libzune_core-78fd3266a3ccbe64.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#byteorder-lite@0.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-lite-0.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "byteorder_lite",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-lite-0.1.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libbyteorder_lite-340e52b9803e9185.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\paste-1.0.15\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "paste",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\paste-1.0.15\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\paste-cb904e5b1edfca26.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\paste-cb904e5b1edfca26.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\paste-cb904e5b1edfca26.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\paste-cb904e5b1edfca26.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#qoi@0.4.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\qoi-0.4.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "qoi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\qoi-0.4.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": false,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libqoi-00c9d8b2ca8b1b78.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.94",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libproc_macro2-fdce389236429c42.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libproc_macro2-fdce389236429c42.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gif@0.13.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gif-0.13.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gif",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gif-0.13.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "color_quant",
                "default",
                "raii_no_panic",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libgif-695a3db212f9177a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-epoch@0.9.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-epoch-0.9.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_epoch",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-epoch-0.9.18\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libcrossbeam_epoch-3bbc16071692da97.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rgb@0.8.50",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rgb-0.8.50\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rgb",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rgb-0.8.50\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\librgb-513a520256fe6853.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libquote-c266fdd689430737.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libquote-c266fdd689430737.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#jpeg-decoder@0.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\jpeg-decoder-0.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "jpeg_decoder",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\jpeg-decoder-0.3.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libjpeg_decoder-28d3533706975c74.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_traits",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "i128",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libnum_traits-9fccf2d073dfaced.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#itertools@0.12.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\itertools-0.12.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "itertools",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\itertools-0.12.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "use_alloc",
                "use_std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libitertools-499012b8ecb5dbe2.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-deque@0.8.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-deque-0.8.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_deque",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-deque-0.8.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libcrossbeam_deque-be98454bdfe2e624.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-integer@0.1.46",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-integer-0.1.46\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_integer",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-integer-0.1.46\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "i128",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libnum_integer-ff5a28ff269dc09f.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#v_frame@0.3.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\v_frame-0.3.8\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "v_frame",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\v_frame-0.3.8\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libv_frame-4c8a28e3986eb4cc.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#png@0.17.16",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\png-0.17.16\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "png",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\png-0.17.16\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libpng-252dc0cd3bfb324b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#simd_helpers@0.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\simd_helpers-0.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "simd_helpers",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\simd_helpers-0.1.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\simd_helpers-9da9a7fd965cf870.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\simd_helpers-9da9a7fd965cf870.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\simd_helpers-9da9a7fd965cf870.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\simd_helpers-9da9a7fd965cf870.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#nom@7.1.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nom-7.1.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nom",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nom-7.1.3\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libnom-43b6428a61930fcd.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zune-jpeg@0.4.14",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zune-jpeg-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zune_jpeg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zune-jpeg-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "neon",
                "std",
                "x86"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libzune_jpeg-4da8a2aebe8ee932.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-core-1.12.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rayon_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-core-1.12.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\librayon_core-f61f619dc8e10838.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#image-webp@0.2.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\image-webp-0.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "image_webp",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\image-webp-0.2.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libimage_webp-97fc93f2dbb2f120.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tiff@0.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tiff-0.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tiff",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tiff-0.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libtiff-41ce4ab850a69fc5.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-bigint@0.4.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-bigint-0.4.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_bigint",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-bigint-0.4.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libnum_bigint-3f5c74ec760c1f67.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-rational@0.4.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-rational-0.4.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_rational",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-rational-0.4.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "num-bigint",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libnum_rational-cc4eed5d83f1c597.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#av1-grain@0.2.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\av1-grain-0.2.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "av1_grain",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\av1-grain-0.2.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "create",
                "default",
                "diff",
                "estimate",
                "nom",
                "num-rational",
                "parse",
                "v_frame"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libav1_grain-82c0e6fa850a2614.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rayon@1.10.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-1.10.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rayon",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-1.10.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\librayon-3d1cd6a0265939bf.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#maybe-rayon@0.1.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\maybe-rayon-0.1.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "maybe_rayon",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\maybe-rayon-0.1.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "rayon",
                "threads"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libmaybe_rayon-cdc56f1bec091d27.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.100",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.100\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.100\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "extra-traits",
                "full",
                "parsing",
                "printing",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libsyn-a45e7e3ee26a5857.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libsyn-a45e7e3ee26a5857.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#exr@1.73.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\exr-1.73.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "exr",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\exr-1.73.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libexr-2545e746197e6dd0.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#profiling-procmacros@1.0.16",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\profiling-procmacros-1.0.16\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "profiling_procmacros",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\profiling-procmacros-1.0.16\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\profiling_procmacros-caad82180b5d39f9.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\profiling_procmacros-caad82180b5d39f9.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\profiling_procmacros-caad82180b5d39f9.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\profiling_procmacros-caad82180b5d39f9.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#arg_enum_proc_macro@0.3.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\arg_enum_proc_macro-0.3.4\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "arg_enum_proc_macro",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\arg_enum_proc_macro-0.3.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\arg_enum_proc_macro-8202e4e11ef6037f.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\arg_enum_proc_macro-8202e4e11ef6037f.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\arg_enum_proc_macro-8202e4e11ef6037f.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\arg_enum_proc_macro-8202e4e11ef6037f.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#profiling@1.0.16",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\profiling-1.0.16\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "profiling",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\profiling-1.0.16\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "procmacros",
                "profiling-procmacros"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libprofiling-2b6aea1017e1b275.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-derive@0.4.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-derive-0.4.2\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "num_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-derive-0.4.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\num_derive-eee0bd8de4215de9.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\num_derive-eee0bd8de4215de9.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\num_derive-eee0bd8de4215de9.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\num_derive-eee0bd8de4215de9.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@1.0.69",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-1.0.69\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "thiserror_impl",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-1.0.69\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\thiserror_impl-26b705be6134c43e.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\thiserror_impl-26b705be6134c43e.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\thiserror_impl-26b705be6134c43e.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\thiserror_impl-26b705be6134c43e.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.69\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "thiserror",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.69\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libthiserror-114892cac0065cdf.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rav1e@0.7.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rav1e-0.7.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rav1e",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rav1e-0.7.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "threading"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\librav1e-52b0756b4e632783.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ravif@0.11.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ravif-0.11.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ravif",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ravif-0.11.11\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "threading"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libravif-5bc5551273dc0ee4.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpfib2y9q3/image-0.25.6#image@0.25.6",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "image",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "avif",
                "bmp",
                "dds",
                "default",
                "default-formats",
                "exr",
                "ff",
                "gif",
                "hdr",
                "ico",
                "jpeg",
                "png",
                "pnm",
                "qoi",
                "rayon",
                "tga",
                "tiff",
                "webp"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libimage-5e47a8d01b6124a1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.94",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\proc-macro2-e1ee9ee3dd80fd20\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\proc-macro2-e1ee9ee3dd80fd20\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.94",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\proc-macro2-26ba5a0b8e9c4cd4\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\crossbeam-utils-eac37113d2f8721b\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\crossbeam-utils-eac37113d2f8721b\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-core-1.12.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-core-1.12.1\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\rayon-core-8a97615c96d19aa8\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\rayon-core-8a97615c96d19aa8\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#simd-adler32@0.3.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\simd-adler32-0.3.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "simd_adler32",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\simd-adler32-0.3.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "const-generics",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libsimd_adler32-4311a5d2a2ce109e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.97",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\anyhow-1.0.97\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\anyhow-1.0.97\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\anyhow-dc6378c5b8ea71da\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\anyhow-dc6378c5b8ea71da\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#adler2@2.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\adler2-2.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "adler2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\adler2-2.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libadler2-fd0b97f5f75249cc.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#either@1.15.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\either-1.15.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "either",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\either-1.15.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std",
                "use_std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libeither-049424fd275d6495.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#aligned-vec@0.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\aligned-vec-0.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "aligned_vec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\aligned-vec-0.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libaligned_vec-8cb9d4a31ff7ecc7.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.69\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.69\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\thiserror-95fbe3009cb3c929\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\thiserror-95fbe3009cb3c929\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#built@0.7.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\built-0.7.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "built",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\built-0.7.7\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libbuilt-1e5f2ab3a7575c01.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libbuilt-1e5f2ab3a7575c01.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#minimal-lexical@0.2.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\minimal-lexical-0.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "minimal_lexical",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\minimal-lexical-0.2.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libminimal_lexical-3589603f810c89fa.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.171",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\libc-6e895cdbcd5e4ab4\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\libc-6e895cdbcd5e4ab4\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\paste-1.0.15\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\paste-1.0.15\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\paste-6d6b8744b3b7eee8\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\paste-6d6b8744b3b7eee8\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.94",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libproc_macro2-fdce389236429c42.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libproc_macro2-fdce389236429c42.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "i128",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\num-traits-569953c59c382d03\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\num-traits-569953c59c382d03\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\crossbeam-utils-a76aac2ae9866593\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\rayon-core-a8f7ad3b36b987dc\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#miniz_oxide@0.8.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\miniz_oxide-0.8.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "miniz_oxide",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\miniz_oxide-0.8.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "simd",
                "simd-adler32",
                "with-alloc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libminiz_oxide-9cc2de51fd8ed39b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.97",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "std_backtrace"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\anyhow-edc35d931dd26ec7\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\memchr-2.7.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "memchr",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\memchr-2.7.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libmemchr-1582e0d0cb00c2d8.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#arrayvec@0.7.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\arrayvec-0.7.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "arrayvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\arrayvec-0.7.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libarrayvec-f08323366d84704d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\thiserror-f340d441dc92b089\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crc32fast@1.4.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crc32fast-1.4.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crc32fast",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crc32fast-1.4.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libcrc32fast-6f26f1a08de28b99.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rav1e@0.7.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rav1e-0.7.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rav1e-0.7.1\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "threading"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\rav1e-57253f5c3a831e67\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\rav1e-57253f5c3a831e67\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\paste-aa068a1285d656ea\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.171",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "freebsd11",
                "libc_const_extern_fn"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\libc-21243236bad9ad17\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\liblog-1786323f854c511b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#itertools@0.12.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\itertools-0.12.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "itertools",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\itertools-0.12.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "use_alloc",
                "use_std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libitertools-499012b8ecb5dbe2.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.21.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "once_cell",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.21.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "race",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libonce_cell-4cc8073b21e483a2.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libquote-c266fdd689430737.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libquote-c266fdd689430737.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_total_cmp"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\num-traits-18e263932a2d500f\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_utils",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libcrossbeam_utils-bb4ad7bf8162756c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#nom@7.1.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nom-7.1.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nom",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nom-7.1.3\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libnom-43b6428a61930fcd.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.97",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\anyhow-1.0.97\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "anyhow",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\anyhow-1.0.97\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libanyhow-22768441e07517a3.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\paste-1.0.15\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "paste",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\paste-1.0.15\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\paste-cb904e5b1edfca26.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\paste-cb904e5b1edfca26.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\paste-cb904e5b1edfca26.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\paste-cb904e5b1edfca26.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rav1e@0.7.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [
                [
                  "PROFILE",
                  "debug"
                ],
                [
                  "CARGO_CFG_TARGET_FEATURE",
                  "cmpxchg16b,fxsr,sse,sse2,sse3"
                ],
                [
                  "CARGO_ENCODED_RUSTFLAGS",
                  ""
                ]
              ],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\build\\rav1e-3cc6f2d488f3026d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#flate2@1.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\flate2-1.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flate2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\flate2-1.1.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "any_impl",
                "default",
                "miniz_oxide",
                "rust_backend"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libflate2-a82f8a3215c74d4a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.171",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\liblibc-380a503941dbe08d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#imgref@1.11.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\imgref-1.11.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "imgref",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\imgref-1.11.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "deprecated"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libimgref-02572836510dd2b0.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#new_debug_unreachable@1.0.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\new_debug_unreachable-1.0.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "debug_unreachable",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\new_debug_unreachable-1.0.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libdebug_unreachable-29eb7b97d1c2ce78.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quick-error@2.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quick-error-2.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quick_error",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quick-error-2.0.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libquick_error-be81f69cd219483e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#weezl@0.1.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\weezl-0.1.8\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "weezl",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\weezl-0.1.8\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libweezl-ef95f59d3e5a869c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitstream-io@2.6.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitstream-io-2.6.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitstream_io",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitstream-io-2.6.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libbitstream_io-31f950a8443426f3.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#noop_proc_macro@0.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\noop_proc_macro-0.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "noop_proc_macro",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\noop_proc_macro-0.3.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\noop_proc_macro-090460ff2226a590.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\noop_proc_macro-090460ff2226a590.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\noop_proc_macro-090460ff2226a590.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\noop_proc_macro-090460ff2226a590.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#avif-serialize@0.8.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\avif-serialize-0.8.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "avif_serialize",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\avif-serialize-0.8.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libavif_serialize-19482741537b4a0b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.100",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.100\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.100\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "extra-traits",
                "full",
                "parsing",
                "printing",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libsyn-a45e7e3ee26a5857.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libsyn-a45e7e3ee26a5857.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_traits",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "i128",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libnum_traits-9fccf2d073dfaced.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-epoch@0.9.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-epoch-0.9.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_epoch",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-epoch-0.9.18\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libcrossbeam_epoch-3bbc16071692da97.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#simd_helpers@0.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\simd_helpers-0.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "simd_helpers",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\simd_helpers-0.1.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\simd_helpers-9da9a7fd965cf870.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\simd_helpers-9da9a7fd965cf870.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\simd_helpers-9da9a7fd965cf870.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\simd_helpers-9da9a7fd965cf870.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#loop9@0.1.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\loop9-0.1.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "loop9",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\loop9-0.1.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libloop9-3fba201ced975361.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fdeflate@0.3.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fdeflate-0.3.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fdeflate",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fdeflate-0.3.7\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libfdeflate-f77bfaef0a7c3b02.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zune-inflate@0.2.54",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zune-inflate-0.2.54\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zune_inflate",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zune-inflate-0.2.54\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "simd-adler32",
                "zlib"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libzune_inflate-8d22a1b7810286c3.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#half@2.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\half-2.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "half",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\half-2.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libhalf-7e77c57081e5f78c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bit_field@0.10.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bit_field-0.10.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bit_field",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bit_field-0.10.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libbit_field-bdca8879dd2df9c6.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lebe@0.5.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lebe-0.5.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lebe",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lebe-0.5.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\liblebe-8fb95b602aad7482.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#jpeg-decoder@0.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\jpeg-decoder-0.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "jpeg_decoder",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\jpeg-decoder-0.3.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libjpeg_decoder-28d3533706975c74.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@1.3.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-1.3.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-1.3.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libbitflags-e7afb5616860f76a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bytemuck@1.22.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytemuck-1.22.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytemuck",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytemuck-1.22.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "extern_crate_alloc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libbytemuck-db44f47727073425.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rgb@0.8.50",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rgb-0.8.50\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rgb",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rgb-0.8.50\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\librgb-513a520256fe6853.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#byteorder-lite@0.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-lite-0.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "byteorder_lite",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-lite-0.1.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libbyteorder_lite-340e52b9803e9185.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.14.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.14.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.14.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libsmallvec-845cc1424f0e09d2.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-deque@0.8.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-deque-0.8.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_deque",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-deque-0.8.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libcrossbeam_deque-be98454bdfe2e624.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-integer@0.1.46",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-integer-0.1.46\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_integer",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-integer-0.1.46\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "i128",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libnum_integer-ff5a28ff269dc09f.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@1.0.69",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-1.0.69\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "thiserror_impl",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-1.0.69\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\thiserror_impl-26b705be6134c43e.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\thiserror_impl-26b705be6134c43e.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\thiserror_impl-26b705be6134c43e.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\thiserror_impl-26b705be6134c43e.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#v_frame@0.3.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\v_frame-0.3.8\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "v_frame",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\v_frame-0.3.8\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libv_frame-4c8a28e3986eb4cc.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#profiling-procmacros@1.0.16",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\profiling-procmacros-1.0.16\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "profiling_procmacros",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\profiling-procmacros-1.0.16\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\profiling_procmacros-caad82180b5d39f9.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\profiling_procmacros-caad82180b5d39f9.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\profiling_procmacros-caad82180b5d39f9.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\profiling_procmacros-caad82180b5d39f9.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#arg_enum_proc_macro@0.3.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\arg_enum_proc_macro-0.3.4\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "arg_enum_proc_macro",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\arg_enum_proc_macro-0.3.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\arg_enum_proc_macro-8202e4e11ef6037f.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\arg_enum_proc_macro-8202e4e11ef6037f.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\arg_enum_proc_macro-8202e4e11ef6037f.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\arg_enum_proc_macro-8202e4e11ef6037f.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-derive@0.4.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-derive-0.4.2\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "num_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-derive-0.4.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\num_derive-eee0bd8de4215de9.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\num_derive-eee0bd8de4215de9.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\num_derive-eee0bd8de4215de9.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\num_derive-eee0bd8de4215de9.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zune-core@0.4.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zune-core-0.4.12\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zune_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zune-core-0.4.12\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libzune_core-78fd3266a3ccbe64.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#color_quant@1.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\color_quant-1.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "color_quant",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\color_quant-1.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libcolor_quant-050185710bef5484.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tiff@0.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tiff-0.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tiff",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tiff-0.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libtiff-41ce4ab850a69fc5.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#qoi@0.4.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\qoi-0.4.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "qoi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\qoi-0.4.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": false,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libqoi-00c9d8b2ca8b1b78.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#png@0.17.16",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\png-0.17.16\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "png",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\png-0.17.16\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libpng-252dc0cd3bfb324b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#image-webp@0.2.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\image-webp-0.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "image_webp",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\image-webp-0.2.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libimage_webp-97fc93f2dbb2f120.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-core-1.12.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rayon_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-core-1.12.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\librayon_core-f61f619dc8e10838.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-bigint@0.4.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-bigint-0.4.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_bigint",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-bigint-0.4.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libnum_bigint-3f5c74ec760c1f67.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.69\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "thiserror",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.69\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libthiserror-114892cac0065cdf.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#profiling@1.0.16",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\profiling-1.0.16\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "profiling",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\profiling-1.0.16\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "procmacros",
                "profiling-procmacros"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libprofiling-2b6aea1017e1b275.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gif@0.13.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gif-0.13.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gif",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gif-0.13.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "color_quant",
                "default",
                "raii_no_panic",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libgif-695a3db212f9177a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zune-jpeg@0.4.14",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zune-jpeg-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zune_jpeg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zune-jpeg-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "neon",
                "std",
                "x86"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libzune_jpeg-4da8a2aebe8ee932.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rayon@1.10.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-1.10.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rayon",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-1.10.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\librayon-3d1cd6a0265939bf.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-rational@0.4.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-rational-0.4.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_rational",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-rational-0.4.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "num-bigint",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libnum_rational-cc4eed5d83f1c597.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#exr@1.73.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\exr-1.73.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "exr",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\exr-1.73.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libexr-2545e746197e6dd0.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#maybe-rayon@0.1.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\maybe-rayon-0.1.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "maybe_rayon",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\maybe-rayon-0.1.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "rayon",
                "threads"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libmaybe_rayon-cdc56f1bec091d27.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#av1-grain@0.2.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\av1-grain-0.2.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "av1_grain",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\av1-grain-0.2.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "create",
                "default",
                "diff",
                "estimate",
                "nom",
                "num-rational",
                "parse",
                "v_frame"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libav1_grain-82c0e6fa850a2614.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rav1e@0.7.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rav1e-0.7.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rav1e",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rav1e-0.7.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "threading"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\librav1e-52b0756b4e632783.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ravif@0.11.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ravif-0.11.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ravif",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ravif-0.11.11\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "threading"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libravif-5bc5551273dc0ee4.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpfib2y9q3/image-0.25.6#image@0.25.6",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "image",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "avif",
                "bmp",
                "dds",
                "default",
                "default-formats",
                "exr",
                "ff",
                "gif",
                "hdr",
                "ico",
                "jpeg",
                "png",
                "pnm",
                "qoi",
                "rayon",
                "tga",
                "tiff",
                "webp"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpfib2y9q3\\image-0.25.6\\target\\debug\\deps\\libimage-d1e3505acd441e0b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 174
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {
              "unmaintained": [
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "paste",
                    "version": "1.0.15",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a",
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2024-0436",
                    "package": "paste",
                    "title": "paste - no longer maintained",
                    "description": "The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \nthat this project is not longer maintained as well as archived the repository",
                    "date": "2024-10-07",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/dtolnay/paste",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                }
              ]
            }
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "image",
          "version": "0.25.6",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/image/latest/image/all.html \"show sidebar\")\n# Crate imageCopy item path\n[Settings](https://docs.rs/image/latest/settings.html)\n[Help](https://docs.rs/image/latest/help.html)\nSummary[Source](https://docs.rs/image/latest/src/image/lib.rs.html#1-336)\nExpand description\n## [\u00a7](https://docs.rs/image/latest/image/#overview)Overview\nThis crate provides native rust implementations of image encoding and decoding as well as some basic image manipulation functions. Additional documentation can currently also be found in the [README.md file which is most easily viewed on github](https://github.com/image-rs/image/blob/main/README.md).\nThere are two core problems for which this library provides solutions: a unified interface for image encodings and simple generic buffers for their content. It\u2019s possible to use either feature without the other. The focus is on a small and stable set of common operations that can be supplemented by other specialized crates. The library also prefers safe solutions with few dependencies.\n## [\u00a7](https://docs.rs/image/latest/image/#high-level-api)High level API\nLoad images using [`ImageReader`](https://docs.rs/image/latest/image/struct.ImageReader.html \"struct image::ImageReader\"):\n```\nuse std::io::Cursor;\nuse image::ImageReader;\nlet img = ImageReader::open(\"myimage.png\")?.decode()?;\nlet img2 = ImageReader::new(Cursor::new(bytes)).with_guessed_format()?.decode()?;\n```\n\nAnd save them using [`save`](https://docs.rs/image/latest/image/enum.DynamicImage.html#method.save) or [`write_to`](https://docs.rs/image/latest/image/enum.DynamicImage.html#method.write_to) methods:\n```\nimg.save(\"empty.jpg\")?;\nlet mut bytes: Vec<u8> = Vec::new();\nimg2.write_to(&mut Cursor::new(&mut bytes), image::ImageFormat::Png)?;\n```\n\nWith default features, the crate includes support for [many common image formats](https://docs.rs/image/latest/image/codecs/index.html#supported-formats).\n## [\u00a7](https://docs.rs/image/latest/image/#image-buffers)Image buffers\nThe two main types for storing images:\n  * [`ImageBuffer`](https://docs.rs/image/latest/image/struct.ImageBuffer.html) which holds statically typed image contents.\n  * [`DynamicImage`](https://docs.rs/image/latest/image/enum.DynamicImage.html) which is an enum over the supported `ImageBuffer` formats and supports conversions between them.\n\n\nAs well as a few more specialized options:\n  * [`GenericImage`](https://docs.rs/image/latest/image/trait.GenericImage.html) trait for a mutable image buffer.\n  * [`GenericImageView`](https://docs.rs/image/latest/image/trait.GenericImageView.html) trait for read only references to a `GenericImage`.\n  * [`flat`](https://docs.rs/image/latest/image/flat/index.html) module containing types for interoperability with generic channel matrices and foreign interfaces.\n\n\n## [\u00a7](https://docs.rs/image/latest/image/#low-level-encodingdecoding-api)Low level encoding/decoding API\nImplementations of [`ImageEncoder`](https://docs.rs/image/latest/image/trait.ImageEncoder.html) provides low level control over encoding:\n```\nlet encoder = JpegEncoder::new_with_quality(&mut writer, 95);\nimg.write_with_encoder(encoder)?;\n```\n\nWhile [`ImageDecoder`](https://docs.rs/image/latest/image/trait.ImageDecoder.html) and [`ImageDecoderRect`](https://docs.rs/image/latest/image/trait.ImageDecoderRect.html) give access to more advanced decoding options:\n```\nlet decoder = PngDecoder::new(&mut reader)?;\nlet icc = decoder.icc_profile();\nlet img = DynamicImage::from_decoder(decoder)?;\n```\n\n## Re-exports[\u00a7](https://docs.rs/image/latest/image/#reexports)\n\n`pub use crate::error::ImageError[](https://docs.rs/image/latest/image/error/enum.ImageError.html \"enum image::error::ImageError\");`\n\n\n`pub use crate::error::ImageResult[](https://docs.rs/image/latest/image/error/type.ImageResult.html \"type image::error::ImageResult\");`\n\n\n`pub use crate::flat::FlatSamples[](https://docs.rs/image/latest/image/flat/struct.FlatSamples.html \"struct image::flat::FlatSamples\");`\n\n## Modules[\u00a7](https://docs.rs/image/latest/image/#modules)\n\n[buffer](https://docs.rs/image/latest/image/buffer/index.html \"mod image::buffer\")\n    Iterators and other auxiliary structure for the `ImageBuffer` type.\n\n[codecs](https://docs.rs/image/latest/image/codecs/index.html \"mod image::codecs\")\n    Encoding and decoding for various image file formats.\n\n[error](https://docs.rs/image/latest/image/error/index.html \"mod image::error\")\n    Contains detailed error representation.\n\n[flat](https://docs.rs/image/latest/image/flat/index.html \"mod image::flat\")\n    Image representations for ffi.\n\n[imageops](https://docs.rs/image/latest/image/imageops/index.html \"mod image::imageops\")\n    Image Processing Functions\n\n[io](https://docs.rs/image/latest/image/io/index.html \"mod image::io\")\n    deprecated io module the original io module has been renamed to `image_reader`\n\n[math](https://docs.rs/image/latest/image/math/index.html \"mod image::math\")\n    Mathematical helper functions and types.\n\n[metadata](https://docs.rs/image/latest/image/metadata/index.html \"mod image::metadata\")\n    Types describing image metadata\n## Structs[\u00a7](https://docs.rs/image/latest/image/#structs)\n\n[Delay](https://docs.rs/image/latest/image/struct.Delay.html \"struct image::Delay\")\n    The delay of a frame relative to the previous one.\n\n[Frame](https://docs.rs/image/latest/image/struct.Frame.html \"struct image::Frame\")\n    A single animation frame\n\n[Frames](https://docs.rs/image/latest/image/struct.Frames.html \"struct image::Frames\")\n    An implementation dependent iterator, reading the frames as requested\n\n[ImageBuffer](https://docs.rs/image/latest/image/struct.ImageBuffer.html \"struct image::ImageBuffer\")\n    Generic image buffer\n\n[ImageReader](https://docs.rs/image/latest/image/struct.ImageReader.html \"struct image::ImageReader\")\n    A multi-format image reader.\n\n[LimitSupport](https://docs.rs/image/latest/image/struct.LimitSupport.html \"struct image::LimitSupport\")\n    Set of supported strict limits for a decoder.\n\n[Limits](https://docs.rs/image/latest/image/struct.Limits.html \"struct image::Limits\")\n    Resource limits for decoding.\n\n[Luma](https://docs.rs/image/latest/image/struct.Luma.html \"struct image::Luma\")\n    Grayscale colors.\n\n[LumaA](https://docs.rs/image/latest/image/struct.LumaA.html \"struct image::LumaA\")\n    Grayscale colors + alpha channel\n\n[Pixels](https://docs.rs/image/latest/image/struct.Pixels.html \"struct image::Pixels\")\n    Immutable pixel iterator\n\n[Rgb](https://docs.rs/image/latest/image/struct.Rgb.html \"struct image::Rgb\")\n    RGB colors.\n\n[Rgba](https://docs.rs/image/latest/image/struct.Rgba.html \"struct image::Rgba\")\n    RGB colors + alpha channel\n\n[SubImage](https://docs.rs/image/latest/image/struct.SubImage.html \"struct image::SubImage\")\n    A View into another image\n## Enums[\u00a7](https://docs.rs/image/latest/image/#enums)\n\n[ColorType](https://docs.rs/image/latest/image/enum.ColorType.html \"enum image::ColorType\")\n    An enumeration over supported color types and bit depths\n\n[DynamicImage](https://docs.rs/image/latest/image/enum.DynamicImage.html \"enum image::DynamicImage\")\n    A Dynamic Image\n\n[ExtendedColorType](https://docs.rs/image/latest/image/enum.ExtendedColorType.html \"enum image::ExtendedColorType\")\n    An enumeration of color types encountered in image formats.\n\n[ImageFormat](https://docs.rs/image/latest/image/enum.ImageFormat.html \"enum image::ImageFormat\")\n    An enumeration of supported image formats. Not all formats support both encoding and decoding.\n## Traits[\u00a7](https://docs.rs/image/latest/image/#traits)\n\n[AnimationDecoder](https://docs.rs/image/latest/image/trait.AnimationDecoder.html \"trait image::AnimationDecoder\")\n    `AnimationDecoder` trait\n\n[EncodableLayout](https://docs.rs/image/latest/image/trait.EncodableLayout.html \"trait image::EncodableLayout\")\n    Types which are safe to treat as an immutable byte slice in a pixel layout for image encoding.\n\n[GenericImage](https://docs.rs/image/latest/image/trait.GenericImage.html \"trait image::GenericImage\")\n    A trait for manipulating images.\n\n[GenericImageView](https://docs.rs/image/latest/image/trait.GenericImageView.html \"trait image::GenericImageView\")\n    Trait to inspect an image.\n\n[ImageDecoder](https://docs.rs/image/latest/image/trait.ImageDecoder.html \"trait image::ImageDecoder\")\n    The trait that all decoders implement\n\n[ImageDecoderRect](https://docs.rs/image/latest/image/trait.ImageDecoderRect.html \"trait image::ImageDecoderRect\")\n    Specialized image decoding not be supported by all formats\n\n[ImageEncoder](https://docs.rs/image/latest/image/trait.ImageEncoder.html \"trait image::ImageEncoder\")\n    The trait all encoders implement\n\n[Pixel](https://docs.rs/image/latest/image/trait.Pixel.html \"trait image::Pixel\")\n    A generalized pixel.\n\n[PixelWithColorType](https://docs.rs/image/latest/image/trait.PixelWithColorType.html \"trait image::PixelWithColorType\")\n    The pixel with an associated `ColorType`. Not all possible pixels represent one of the predefined `ColorType`s.\n\n[Primitive](https://docs.rs/image/latest/image/trait.Primitive.html \"trait image::Primitive\")\n    The type of each channel in a pixel. For example, this can be `u8`, `u16`, `f32`.\n## Functions[\u00a7](https://docs.rs/image/latest/image/#functions)\n\n[guess_format](https://docs.rs/image/latest/image/fn.guess_format.html \"fn image::guess_format\")\n    Guess image format from memory block\n\n[image_dimensions](https://docs.rs/image/latest/image/fn.image_dimensions.html \"fn image::image_dimensions\")\n    Read a tuple containing the (width, height) of the image located at the specified path. This is faster than fully loading the image and then getting its dimensions.\n\n[load](https://docs.rs/image/latest/image/fn.load.html \"fn image::load\")\n    Create a new image from a Reader.\n\n[load_from_memory](https://docs.rs/image/latest/image/fn.load_from_memory.html \"fn image::load_from_memory\")\n    Create a new image from a byte slice\n\n[load_from_memory_with_format](https://docs.rs/image/latest/image/fn.load_from_memory_with_format.html \"fn image::load_from_memory_with_format\")\n    Create a new image from a byte slice\n\n[open](https://docs.rs/image/latest/image/fn.open.html \"fn image::open\")\n    Open the image located at the path specified. The image\u2019s format is determined from the path\u2019s file extension.\n\n[save_buffer](https://docs.rs/image/latest/image/fn.save_buffer.html \"fn image::save_buffer\")\n    Saves the supplied buffer to a file at the path specified.\n\n[save_buffer_with_format](https://docs.rs/image/latest/image/fn.save_buffer_with_format.html \"fn image::save_buffer_with_format\")\n    Saves the supplied buffer to a file at the path specified in the specified format.\n\n[write_buffer_with_format](https://docs.rs/image/latest/image/fn.write_buffer_with_format.html \"fn image::write_buffer_with_format\")\n    Writes the supplied buffer to a writer in the specified format.\n## Type Aliases[\u00a7](https://docs.rs/image/latest/image/#types)\n\n[GrayAlphaImage](https://docs.rs/image/latest/image/type.GrayAlphaImage.html \"type image::GrayAlphaImage\")\n    Sendable grayscale + alpha channel image buffer\n\n[GrayImage](https://docs.rs/image/latest/image/type.GrayImage.html \"type image::GrayImage\")\n    Sendable grayscale image buffer\n\n[Rgb32FImage](https://docs.rs/image/latest/image/type.Rgb32FImage.html \"type image::Rgb32FImage\")\n    An image buffer for 32-bit float RGB pixels, where the backing container is a flattened vector of floats.\n\n[RgbImage](https://docs.rs/image/latest/image/type.RgbImage.html \"type image::RgbImage\")\n    Sendable Rgb image buffer\n\n[Rgba32FImage](https://docs.rs/image/latest/image/type.Rgba32FImage.html \"type image::Rgba32FImage\")\n    An image buffer for 32-bit float RGBA pixels, where the backing container is a flattened vector of floats.\n\n[RgbaImage](https://docs.rs/image/latest/image/type.RgbaImage.html \"type image::RgbaImage\")\n    Sendable Rgb + alpha channel image buffer\n",
            "markdown_with_citations": "[](https://docs.rs/image/latest/image/all.html \"show sidebar\")\n# Crate imageCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9Overview\nThis crate provides native rust implementations of image encoding and decoding as well as some basic image manipulation functions. Additional documentation can currently also be found in the README.md file which is most easily viewed on github\u27e85\u27e9.\nThere are two core problems for which this library provides solutions: a unified interface for image encodings and simple generic buffers for their content. It\u2019s possible to use either feature without the other. The focus is on a small and stable set of common operations that can be supplemented by other specialized crates. The library also prefers safe solutions with few dependencies.\n## \u00a7\u27e86\u27e9High level API\nLoad images using `ImageReader`\u27e87\u27e9:\n```\nuse std::io::Cursor;\nuse image::ImageReader;\nlet img = ImageReader::open(\"myimage.png\")?.decode()?;\nlet img2 = ImageReader::new(Cursor::new(bytes)).with_guessed_format()?.decode()?;\n```\n\nAnd save them using `save`\u27e88\u27e9 or `write_to`\u27e89\u27e9 methods:\n```\nimg.save(\"empty.jpg\")?;\nlet mut bytes: Vec<u8> = Vec::new();\nimg2.write_to(&mut Cursor::new(&mut bytes), image::ImageFormat::Png)?;\n```\n\nWith default features, the crate includes support for many common image formats\u27e810\u27e9.\n## \u00a7\u27e811\u27e9Image buffers\nThe two main types for storing images:\n  * `ImageBuffer`\u27e812\u27e9 which holds statically typed image contents.\n  * `DynamicImage`\u27e813\u27e9 which is an enum over the supported `ImageBuffer` formats and supports conversions between them.\n\n\nAs well as a few more specialized options:\n  * `GenericImage`\u27e814\u27e9 trait for a mutable image buffer.\n  * `GenericImageView`\u27e815\u27e9 trait for read only references to a `GenericImage`.\n  * `flat`\u27e816\u27e9 module containing types for interoperability with generic channel matrices and foreign interfaces.\n\n\n## \u00a7\u27e817\u27e9Low level encoding/decoding API\nImplementations of `ImageEncoder`\u27e818\u27e9 provides low level control over encoding:\n```\nlet encoder = JpegEncoder::new_with_quality(&mut writer, 95);\nimg.write_with_encoder(encoder)?;\n```\n\nWhile `ImageDecoder`\u27e819\u27e9 and `ImageDecoderRect`\u27e820\u27e9 give access to more advanced decoding options:\n```\nlet decoder = PngDecoder::new(&mut reader)?;\nlet icc = decoder.icc_profile();\nlet img = DynamicImage::from_decoder(decoder)?;\n```\n\n## Re-exports\u00a7\u27e821\u27e9\n\n`pub use crate::error::ImageError[](https://docs.rs/image/latest/image/error/enum.ImageError.html \"enum image::error::ImageError\");`\n\n\n`pub use crate::error::ImageResult[](https://docs.rs/image/latest/image/error/type.ImageResult.html \"type image::error::ImageResult\");`\n\n\n`pub use crate::flat::FlatSamples[](https://docs.rs/image/latest/image/flat/struct.FlatSamples.html \"struct image::flat::FlatSamples\");`\n\n## Modules\u00a7\u27e822\u27e9\n\nbuffer\u27e823\u27e9\n    Iterators and other auxiliary structure for the `ImageBuffer` type.\n\ncodecs\u27e824\u27e9\n    Encoding and decoding for various image file formats.\n\nerror\u27e825\u27e9\n    Contains detailed error representation.\n\nflat\u27e816\u27e9\n    Image representations for ffi.\n\nimageops\u27e826\u27e9\n    Image Processing Functions\n\nio\u27e827\u27e9\n    deprecated io module the original io module has been renamed to `image_reader`\n\nmath\u27e828\u27e9\n    Mathematical helper functions and types.\n\nmetadata\u27e829\u27e9\n    Types describing image metadata\n## Structs\u00a7\u27e830\u27e9\n\nDelay\u27e831\u27e9\n    The delay of a frame relative to the previous one.\n\nFrame\u27e832\u27e9\n    A single animation frame\n\nFrames\u27e833\u27e9\n    An implementation dependent iterator, reading the frames as requested\n\nImageBuffer\u27e812\u27e9\n    Generic image buffer\n\nImageReader\u27e87\u27e9\n    A multi-format image reader.\n\nLimitSupport\u27e834\u27e9\n    Set of supported strict limits for a decoder.\n\nLimits\u27e835\u27e9\n    Resource limits for decoding.\n\nLuma\u27e836\u27e9\n    Grayscale colors.\n\nLumaA\u27e837\u27e9\n    Grayscale colors + alpha channel\n\nPixels\u27e838\u27e9\n    Immutable pixel iterator\n\nRgb\u27e839\u27e9\n    RGB colors.\n\nRgba\u27e840\u27e9\n    RGB colors + alpha channel\n\nSubImage\u27e841\u27e9\n    A View into another image\n## Enums\u00a7\u27e842\u27e9\n\nColorType\u27e843\u27e9\n    An enumeration over supported color types and bit depths\n\nDynamicImage\u27e813\u27e9\n    A Dynamic Image\n\nExtendedColorType\u27e844\u27e9\n    An enumeration of color types encountered in image formats.\n\nImageFormat\u27e845\u27e9\n    An enumeration of supported image formats. Not all formats support both encoding and decoding.\n## Traits\u00a7\u27e846\u27e9\n\nAnimationDecoder\u27e847\u27e9\n    `AnimationDecoder` trait\n\nEncodableLayout\u27e848\u27e9\n    Types which are safe to treat as an immutable byte slice in a pixel layout for image encoding.\n\nGenericImage\u27e814\u27e9\n    A trait for manipulating images.\n\nGenericImageView\u27e815\u27e9\n    Trait to inspect an image.\n\nImageDecoder\u27e819\u27e9\n    The trait that all decoders implement\n\nImageDecoderRect\u27e820\u27e9\n    Specialized image decoding not be supported by all formats\n\nImageEncoder\u27e818\u27e9\n    The trait all encoders implement\n\nPixel\u27e849\u27e9\n    A generalized pixel.\n\nPixelWithColorType\u27e850\u27e9\n    The pixel with an associated `ColorType`. Not all possible pixels represent one of the predefined `ColorType`s.\n\nPrimitive\u27e851\u27e9\n    The type of each channel in a pixel. For example, this can be `u8`, `u16`, `f32`.\n## Functions\u00a7\u27e852\u27e9\n\nguess_format\u27e853\u27e9\n    Guess image format from memory block\n\nimage_dimensions\u27e854\u27e9\n    Read a tuple containing the (width, height) of the image located at the specified path. This is faster than fully loading the image and then getting its dimensions.\n\nload\u27e855\u27e9\n    Create a new image from a Reader.\n\nload_from_memory\u27e856\u27e9\n    Create a new image from a byte slice\n\nload_from_memory_with_format\u27e857\u27e9\n    Create a new image from a byte slice\n\nopen\u27e858\u27e9\n    Open the image located at the path specified. The image\u2019s format is determined from the path\u2019s file extension.\n\nsave_buffer\u27e859\u27e9\n    Saves the supplied buffer to a file at the path specified.\n\nsave_buffer_with_format\u27e860\u27e9\n    Saves the supplied buffer to a file at the path specified in the specified format.\n\nwrite_buffer_with_format\u27e861\u27e9\n    Writes the supplied buffer to a writer in the specified format.\n## Type Aliases\u00a7\u27e862\u27e9\n\nGrayAlphaImage\u27e863\u27e9\n    Sendable grayscale + alpha channel image buffer\n\nGrayImage\u27e864\u27e9\n    Sendable grayscale image buffer\n\nRgb32FImage\u27e865\u27e9\n    An image buffer for 32-bit float RGB pixels, where the backing container is a flattened vector of floats.\n\nRgbImage\u27e866\u27e9\n    Sendable Rgb image buffer\n\nRgba32FImage\u27e867\u27e9\n    An image buffer for 32-bit float RGBA pixels, where the backing container is a flattened vector of floats.\n\nRgbaImage\u27e868\u27e9\n    Sendable Rgb + alpha channel image buffer\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/image/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/image/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/image/latest/src/image/lib.rs.html#1-336: Source\n\u27e84\u27e9 https://docs.rs/image/latest/image/#overview: \u00a7\n\u27e85\u27e9 https://github.com/image-rs/image/blob/main/README.md: README.md file which is most easily viewed on github\n\u27e86\u27e9 https://docs.rs/image/latest/image/#high-level-api: \u00a7\n\u27e87\u27e9 https://docs.rs/image/latest/image/struct.ImageReader.html: struct image::ImageReader - `ImageReader`\n\u27e88\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html#method.save: `save`\n\u27e89\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html#method.write_to: `write_to`\n\u27e810\u27e9 https://docs.rs/image/latest/image/codecs/index.html#supported-formats: many common image formats\n\u27e811\u27e9 https://docs.rs/image/latest/image/#image-buffers: \u00a7\n\u27e812\u27e9 https://docs.rs/image/latest/image/struct.ImageBuffer.html: `ImageBuffer`\n\u27e813\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html: `DynamicImage`\n\u27e814\u27e9 https://docs.rs/image/latest/image/trait.GenericImage.html: `GenericImage`\n\u27e815\u27e9 https://docs.rs/image/latest/image/trait.GenericImageView.html: `GenericImageView`\n\u27e816\u27e9 https://docs.rs/image/latest/image/flat/index.html: `flat`\n\u27e817\u27e9 https://docs.rs/image/latest/image/#low-level-encodingdecoding-api: \u00a7\n\u27e818\u27e9 https://docs.rs/image/latest/image/trait.ImageEncoder.html: `ImageEncoder`\n\u27e819\u27e9 https://docs.rs/image/latest/image/trait.ImageDecoder.html: `ImageDecoder`\n\u27e820\u27e9 https://docs.rs/image/latest/image/trait.ImageDecoderRect.html: `ImageDecoderRect`\n\u27e821\u27e9 https://docs.rs/image/latest/image/#reexports: \u00a7\n\u27e822\u27e9 https://docs.rs/image/latest/image/#modules: \u00a7\n\u27e823\u27e9 https://docs.rs/image/latest/image/buffer/index.html: mod image::buffer - buffer\n\u27e824\u27e9 https://docs.rs/image/latest/image/codecs/index.html: mod image::codecs - codecs\n\u27e825\u27e9 https://docs.rs/image/latest/image/error/index.html: mod image::error - error\n\u27e826\u27e9 https://docs.rs/image/latest/image/imageops/index.html: mod image::imageops - imageops\n\u27e827\u27e9 https://docs.rs/image/latest/image/io/index.html: mod image::io - io\n\u27e828\u27e9 https://docs.rs/image/latest/image/math/index.html: mod image::math - math\n\u27e829\u27e9 https://docs.rs/image/latest/image/metadata/index.html: mod image::metadata - metadata\n\u27e830\u27e9 https://docs.rs/image/latest/image/#structs: \u00a7\n\u27e831\u27e9 https://docs.rs/image/latest/image/struct.Delay.html: struct image::Delay - Delay\n\u27e832\u27e9 https://docs.rs/image/latest/image/struct.Frame.html: struct image::Frame - Frame\n\u27e833\u27e9 https://docs.rs/image/latest/image/struct.Frames.html: struct image::Frames - Frames\n\u27e834\u27e9 https://docs.rs/image/latest/image/struct.LimitSupport.html: struct image::LimitSupport - LimitSupport\n\u27e835\u27e9 https://docs.rs/image/latest/image/struct.Limits.html: struct image::Limits - Limits\n\u27e836\u27e9 https://docs.rs/image/latest/image/struct.Luma.html: struct image::Luma - Luma\n\u27e837\u27e9 https://docs.rs/image/latest/image/struct.LumaA.html: struct image::LumaA - LumaA\n\u27e838\u27e9 https://docs.rs/image/latest/image/struct.Pixels.html: struct image::Pixels - Pixels\n\u27e839\u27e9 https://docs.rs/image/latest/image/struct.Rgb.html: struct image::Rgb - Rgb\n\u27e840\u27e9 https://docs.rs/image/latest/image/struct.Rgba.html: struct image::Rgba - Rgba\n\u27e841\u27e9 https://docs.rs/image/latest/image/struct.SubImage.html: struct image::SubImage - SubImage\n\u27e842\u27e9 https://docs.rs/image/latest/image/#enums: \u00a7\n\u27e843\u27e9 https://docs.rs/image/latest/image/enum.ColorType.html: enum image::ColorType - ColorType\n\u27e844\u27e9 https://docs.rs/image/latest/image/enum.ExtendedColorType.html: enum image::ExtendedColorType - ExtendedColorType\n\u27e845\u27e9 https://docs.rs/image/latest/image/enum.ImageFormat.html: enum image::ImageFormat - ImageFormat\n\u27e846\u27e9 https://docs.rs/image/latest/image/#traits: \u00a7\n\u27e847\u27e9 https://docs.rs/image/latest/image/trait.AnimationDecoder.html: trait image::AnimationDecoder - AnimationDecoder\n\u27e848\u27e9 https://docs.rs/image/latest/image/trait.EncodableLayout.html: trait image::EncodableLayout - EncodableLayout\n\u27e849\u27e9 https://docs.rs/image/latest/image/trait.Pixel.html: trait image::Pixel - Pixel\n\u27e850\u27e9 https://docs.rs/image/latest/image/trait.PixelWithColorType.html: trait image::PixelWithColorType - PixelWithColorType\n\u27e851\u27e9 https://docs.rs/image/latest/image/trait.Primitive.html: trait image::Primitive - Primitive\n\u27e852\u27e9 https://docs.rs/image/latest/image/#functions: \u00a7\n\u27e853\u27e9 https://docs.rs/image/latest/image/fn.guess_format.html: fn image::guess_format - guess_format\n\u27e854\u27e9 https://docs.rs/image/latest/image/fn.image_dimensions.html: fn image::image_dimensions - image_dimensions\n\u27e855\u27e9 https://docs.rs/image/latest/image/fn.load.html: fn image::load - load\n\u27e856\u27e9 https://docs.rs/image/latest/image/fn.load_from_memory.html: fn image::load_from_memory - load_from_memory\n\u27e857\u27e9 https://docs.rs/image/latest/image/fn.load_from_memory_with_format.html: fn image::load_from_memory_with_format - load_from_memory_with_format\n\u27e858\u27e9 https://docs.rs/image/latest/image/fn.open.html: fn image::open - open\n\u27e859\u27e9 https://docs.rs/image/latest/image/fn.save_buffer.html: fn image::save_buffer - save_buffer\n\u27e860\u27e9 https://docs.rs/image/latest/image/fn.save_buffer_with_format.html: fn image::save_buffer_with_format - save_buffer_with_format\n\u27e861\u27e9 https://docs.rs/image/latest/image/fn.write_buffer_with_format.html: fn image::write_buffer_with_format - write_buffer_with_format\n\u27e862\u27e9 https://docs.rs/image/latest/image/#types: \u00a7\n\u27e863\u27e9 https://docs.rs/image/latest/image/type.GrayAlphaImage.html: type image::GrayAlphaImage - GrayAlphaImage\n\u27e864\u27e9 https://docs.rs/image/latest/image/type.GrayImage.html: type image::GrayImage - GrayImage\n\u27e865\u27e9 https://docs.rs/image/latest/image/type.Rgb32FImage.html: type image::Rgb32FImage - Rgb32FImage\n\u27e866\u27e9 https://docs.rs/image/latest/image/type.RgbImage.html: type image::RgbImage - RgbImage\n\u27e867\u27e9 https://docs.rs/image/latest/image/type.Rgba32FImage.html: type image::Rgba32FImage - Rgba32FImage\n\u27e868\u27e9 https://docs.rs/image/latest/image/type.RgbaImage.html: type image::RgbaImage - RgbaImage\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "image",
          "version": "0.25.6",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/image/latest/image/all.html \"show sidebar\")\n# Crate imageCopy item path\n[Settings](https://docs.rs/image/latest/settings.html)\n[Help](https://docs.rs/image/latest/help.html)\nSummary[Source](https://docs.rs/image/latest/src/image/lib.rs.html#1-336)\nExpand description\n## [\u00a7](https://docs.rs/image/latest/image/#overview)Overview\nThis crate provides native rust implementations of image encoding and decoding as well as some basic image manipulation functions. Additional documentation can currently also be found in the [README.md file which is most easily viewed on github](https://github.com/image-rs/image/blob/main/README.md).\nThere are two core problems for which this library provides solutions: a unified interface for image encodings and simple generic buffers for their content. It\u2019s possible to use either feature without the other. The focus is on a small and stable set of common operations that can be supplemented by other specialized crates. The library also prefers safe solutions with few dependencies.\n## [\u00a7](https://docs.rs/image/latest/image/#high-level-api)High level API\nLoad images using [`ImageReader`](https://docs.rs/image/latest/image/struct.ImageReader.html \"struct image::ImageReader\"):\n```\nuse std::io::Cursor;\nuse image::ImageReader;\nlet img = ImageReader::open(\"myimage.png\")?.decode()?;\nlet img2 = ImageReader::new(Cursor::new(bytes)).with_guessed_format()?.decode()?;\n```\n\nAnd save them using [`save`](https://docs.rs/image/latest/image/enum.DynamicImage.html#method.save) or [`write_to`](https://docs.rs/image/latest/image/enum.DynamicImage.html#method.write_to) methods:\n```\nimg.save(\"empty.jpg\")?;\nlet mut bytes: Vec<u8> = Vec::new();\nimg2.write_to(&mut Cursor::new(&mut bytes), image::ImageFormat::Png)?;\n```\n\nWith default features, the crate includes support for [many common image formats](https://docs.rs/image/latest/image/codecs/index.html#supported-formats).\n## [\u00a7](https://docs.rs/image/latest/image/#image-buffers)Image buffers\nThe two main types for storing images:\n  * [`ImageBuffer`](https://docs.rs/image/latest/image/struct.ImageBuffer.html) which holds statically typed image contents.\n  * [`DynamicImage`](https://docs.rs/image/latest/image/enum.DynamicImage.html) which is an enum over the supported `ImageBuffer` formats and supports conversions between them.\n\n\nAs well as a few more specialized options:\n  * [`GenericImage`](https://docs.rs/image/latest/image/trait.GenericImage.html) trait for a mutable image buffer.\n  * [`GenericImageView`](https://docs.rs/image/latest/image/trait.GenericImageView.html) trait for read only references to a `GenericImage`.\n  * [`flat`](https://docs.rs/image/latest/image/flat/index.html) module containing types for interoperability with generic channel matrices and foreign interfaces.\n\n\n## [\u00a7](https://docs.rs/image/latest/image/#low-level-encodingdecoding-api)Low level encoding/decoding API\nImplementations of [`ImageEncoder`](https://docs.rs/image/latest/image/trait.ImageEncoder.html) provides low level control over encoding:\n```\nlet encoder = JpegEncoder::new_with_quality(&mut writer, 95);\nimg.write_with_encoder(encoder)?;\n```\n\nWhile [`ImageDecoder`](https://docs.rs/image/latest/image/trait.ImageDecoder.html) and [`ImageDecoderRect`](https://docs.rs/image/latest/image/trait.ImageDecoderRect.html) give access to more advanced decoding options:\n```\nlet decoder = PngDecoder::new(&mut reader)?;\nlet icc = decoder.icc_profile();\nlet img = DynamicImage::from_decoder(decoder)?;\n```\n\n## Re-exports[\u00a7](https://docs.rs/image/latest/image/#reexports)\n\n`pub use crate::error::ImageError[](https://docs.rs/image/latest/image/error/enum.ImageError.html \"enum image::error::ImageError\");`\n\n\n`pub use crate::error::ImageResult[](https://docs.rs/image/latest/image/error/type.ImageResult.html \"type image::error::ImageResult\");`\n\n\n`pub use crate::flat::FlatSamples[](https://docs.rs/image/latest/image/flat/struct.FlatSamples.html \"struct image::flat::FlatSamples\");`\n\n## Modules[\u00a7](https://docs.rs/image/latest/image/#modules)\n\n[buffer](https://docs.rs/image/latest/image/buffer/index.html \"mod image::buffer\")\n    Iterators and other auxiliary structure for the `ImageBuffer` type.\n\n[codecs](https://docs.rs/image/latest/image/codecs/index.html \"mod image::codecs\")\n    Encoding and decoding for various image file formats.\n\n[error](https://docs.rs/image/latest/image/error/index.html \"mod image::error\")\n    Contains detailed error representation.\n\n[flat](https://docs.rs/image/latest/image/flat/index.html \"mod image::flat\")\n    Image representations for ffi.\n\n[imageops](https://docs.rs/image/latest/image/imageops/index.html \"mod image::imageops\")\n    Image Processing Functions\n\n[io](https://docs.rs/image/latest/image/io/index.html \"mod image::io\")\n    deprecated io module the original io module has been renamed to `image_reader`\n\n[math](https://docs.rs/image/latest/image/math/index.html \"mod image::math\")\n    Mathematical helper functions and types.\n\n[metadata](https://docs.rs/image/latest/image/metadata/index.html \"mod image::metadata\")\n    Types describing image metadata\n## Structs[\u00a7](https://docs.rs/image/latest/image/#structs)\n\n[Delay](https://docs.rs/image/latest/image/struct.Delay.html \"struct image::Delay\")\n    The delay of a frame relative to the previous one.\n\n[Frame](https://docs.rs/image/latest/image/struct.Frame.html \"struct image::Frame\")\n    A single animation frame\n\n[Frames](https://docs.rs/image/latest/image/struct.Frames.html \"struct image::Frames\")\n    An implementation dependent iterator, reading the frames as requested\n\n[ImageBuffer](https://docs.rs/image/latest/image/struct.ImageBuffer.html \"struct image::ImageBuffer\")\n    Generic image buffer\n\n[ImageReader](https://docs.rs/image/latest/image/struct.ImageReader.html \"struct image::ImageReader\")\n    A multi-format image reader.\n\n[LimitSupport](https://docs.rs/image/latest/image/struct.LimitSupport.html \"struct image::LimitSupport\")\n    Set of supported strict limits for a decoder.\n\n[Limits](https://docs.rs/image/latest/image/struct.Limits.html \"struct image::Limits\")\n    Resource limits for decoding.\n\n[Luma](https://docs.rs/image/latest/image/struct.Luma.html \"struct image::Luma\")\n    Grayscale colors.\n\n[LumaA](https://docs.rs/image/latest/image/struct.LumaA.html \"struct image::LumaA\")\n    Grayscale colors + alpha channel\n\n[Pixels](https://docs.rs/image/latest/image/struct.Pixels.html \"struct image::Pixels\")\n    Immutable pixel iterator\n\n[Rgb](https://docs.rs/image/latest/image/struct.Rgb.html \"struct image::Rgb\")\n    RGB colors.\n\n[Rgba](https://docs.rs/image/latest/image/struct.Rgba.html \"struct image::Rgba\")\n    RGB colors + alpha channel\n\n[SubImage](https://docs.rs/image/latest/image/struct.SubImage.html \"struct image::SubImage\")\n    A View into another image\n## Enums[\u00a7](https://docs.rs/image/latest/image/#enums)\n\n[ColorType](https://docs.rs/image/latest/image/enum.ColorType.html \"enum image::ColorType\")\n    An enumeration over supported color types and bit depths\n\n[DynamicImage](https://docs.rs/image/latest/image/enum.DynamicImage.html \"enum image::DynamicImage\")\n    A Dynamic Image\n\n[ExtendedColorType](https://docs.rs/image/latest/image/enum.ExtendedColorType.html \"enum image::ExtendedColorType\")\n    An enumeration of color types encountered in image formats.\n\n[ImageFormat](https://docs.rs/image/latest/image/enum.ImageFormat.html \"enum image::ImageFormat\")\n    An enumeration of supported image formats. Not all formats support both encoding and decoding.\n## Traits[\u00a7](https://docs.rs/image/latest/image/#traits)\n\n[AnimationDecoder](https://docs.rs/image/latest/image/trait.AnimationDecoder.html \"trait image::AnimationDecoder\")\n    `AnimationDecoder` trait\n\n[EncodableLayout](https://docs.rs/image/latest/image/trait.EncodableLayout.html \"trait image::EncodableLayout\")\n    Types which are safe to treat as an immutable byte slice in a pixel layout for image encoding.\n\n[GenericImage](https://docs.rs/image/latest/image/trait.GenericImage.html \"trait image::GenericImage\")\n    A trait for manipulating images.\n\n[GenericImageView](https://docs.rs/image/latest/image/trait.GenericImageView.html \"trait image::GenericImageView\")\n    Trait to inspect an image.\n\n[ImageDecoder](https://docs.rs/image/latest/image/trait.ImageDecoder.html \"trait image::ImageDecoder\")\n    The trait that all decoders implement\n\n[ImageDecoderRect](https://docs.rs/image/latest/image/trait.ImageDecoderRect.html \"trait image::ImageDecoderRect\")\n    Specialized image decoding not be supported by all formats\n\n[ImageEncoder](https://docs.rs/image/latest/image/trait.ImageEncoder.html \"trait image::ImageEncoder\")\n    The trait all encoders implement\n\n[Pixel](https://docs.rs/image/latest/image/trait.Pixel.html \"trait image::Pixel\")\n    A generalized pixel.\n\n[PixelWithColorType](https://docs.rs/image/latest/image/trait.PixelWithColorType.html \"trait image::PixelWithColorType\")\n    The pixel with an associated `ColorType`. Not all possible pixels represent one of the predefined `ColorType`s.\n\n[Primitive](https://docs.rs/image/latest/image/trait.Primitive.html \"trait image::Primitive\")\n    The type of each channel in a pixel. For example, this can be `u8`, `u16`, `f32`.\n## Functions[\u00a7](https://docs.rs/image/latest/image/#functions)\n\n[guess_format](https://docs.rs/image/latest/image/fn.guess_format.html \"fn image::guess_format\")\n    Guess image format from memory block\n\n[image_dimensions](https://docs.rs/image/latest/image/fn.image_dimensions.html \"fn image::image_dimensions\")\n    Read a tuple containing the (width, height) of the image located at the specified path. This is faster than fully loading the image and then getting its dimensions.\n\n[load](https://docs.rs/image/latest/image/fn.load.html \"fn image::load\")\n    Create a new image from a Reader.\n\n[load_from_memory](https://docs.rs/image/latest/image/fn.load_from_memory.html \"fn image::load_from_memory\")\n    Create a new image from a byte slice\n\n[load_from_memory_with_format](https://docs.rs/image/latest/image/fn.load_from_memory_with_format.html \"fn image::load_from_memory_with_format\")\n    Create a new image from a byte slice\n\n[open](https://docs.rs/image/latest/image/fn.open.html \"fn image::open\")\n    Open the image located at the path specified. The image\u2019s format is determined from the path\u2019s file extension.\n\n[save_buffer](https://docs.rs/image/latest/image/fn.save_buffer.html \"fn image::save_buffer\")\n    Saves the supplied buffer to a file at the path specified.\n\n[save_buffer_with_format](https://docs.rs/image/latest/image/fn.save_buffer_with_format.html \"fn image::save_buffer_with_format\")\n    Saves the supplied buffer to a file at the path specified in the specified format.\n\n[write_buffer_with_format](https://docs.rs/image/latest/image/fn.write_buffer_with_format.html \"fn image::write_buffer_with_format\")\n    Writes the supplied buffer to a writer in the specified format.\n## Type Aliases[\u00a7](https://docs.rs/image/latest/image/#types)\n\n[GrayAlphaImage](https://docs.rs/image/latest/image/type.GrayAlphaImage.html \"type image::GrayAlphaImage\")\n    Sendable grayscale + alpha channel image buffer\n\n[GrayImage](https://docs.rs/image/latest/image/type.GrayImage.html \"type image::GrayImage\")\n    Sendable grayscale image buffer\n\n[Rgb32FImage](https://docs.rs/image/latest/image/type.Rgb32FImage.html \"type image::Rgb32FImage\")\n    An image buffer for 32-bit float RGB pixels, where the backing container is a flattened vector of floats.\n\n[RgbImage](https://docs.rs/image/latest/image/type.RgbImage.html \"type image::RgbImage\")\n    Sendable Rgb image buffer\n\n[Rgba32FImage](https://docs.rs/image/latest/image/type.Rgba32FImage.html \"type image::Rgba32FImage\")\n    An image buffer for 32-bit float RGBA pixels, where the backing container is a flattened vector of floats.\n\n[RgbaImage](https://docs.rs/image/latest/image/type.RgbaImage.html \"type image::RgbaImage\")\n    Sendable Rgb + alpha channel image buffer\n",
            "markdown_with_citations": "[](https://docs.rs/image/latest/image/all.html \"show sidebar\")\n# Crate imageCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9Overview\nThis crate provides native rust implementations of image encoding and decoding as well as some basic image manipulation functions. Additional documentation can currently also be found in the README.md file which is most easily viewed on github\u27e85\u27e9.\nThere are two core problems for which this library provides solutions: a unified interface for image encodings and simple generic buffers for their content. It\u2019s possible to use either feature without the other. The focus is on a small and stable set of common operations that can be supplemented by other specialized crates. The library also prefers safe solutions with few dependencies.\n## \u00a7\u27e86\u27e9High level API\nLoad images using `ImageReader`\u27e87\u27e9:\n```\nuse std::io::Cursor;\nuse image::ImageReader;\nlet img = ImageReader::open(\"myimage.png\")?.decode()?;\nlet img2 = ImageReader::new(Cursor::new(bytes)).with_guessed_format()?.decode()?;\n```\n\nAnd save them using `save`\u27e88\u27e9 or `write_to`\u27e89\u27e9 methods:\n```\nimg.save(\"empty.jpg\")?;\nlet mut bytes: Vec<u8> = Vec::new();\nimg2.write_to(&mut Cursor::new(&mut bytes), image::ImageFormat::Png)?;\n```\n\nWith default features, the crate includes support for many common image formats\u27e810\u27e9.\n## \u00a7\u27e811\u27e9Image buffers\nThe two main types for storing images:\n  * `ImageBuffer`\u27e812\u27e9 which holds statically typed image contents.\n  * `DynamicImage`\u27e813\u27e9 which is an enum over the supported `ImageBuffer` formats and supports conversions between them.\n\n\nAs well as a few more specialized options:\n  * `GenericImage`\u27e814\u27e9 trait for a mutable image buffer.\n  * `GenericImageView`\u27e815\u27e9 trait for read only references to a `GenericImage`.\n  * `flat`\u27e816\u27e9 module containing types for interoperability with generic channel matrices and foreign interfaces.\n\n\n## \u00a7\u27e817\u27e9Low level encoding/decoding API\nImplementations of `ImageEncoder`\u27e818\u27e9 provides low level control over encoding:\n```\nlet encoder = JpegEncoder::new_with_quality(&mut writer, 95);\nimg.write_with_encoder(encoder)?;\n```\n\nWhile `ImageDecoder`\u27e819\u27e9 and `ImageDecoderRect`\u27e820\u27e9 give access to more advanced decoding options:\n```\nlet decoder = PngDecoder::new(&mut reader)?;\nlet icc = decoder.icc_profile();\nlet img = DynamicImage::from_decoder(decoder)?;\n```\n\n## Re-exports\u00a7\u27e821\u27e9\n\n`pub use crate::error::ImageError[](https://docs.rs/image/latest/image/error/enum.ImageError.html \"enum image::error::ImageError\");`\n\n\n`pub use crate::error::ImageResult[](https://docs.rs/image/latest/image/error/type.ImageResult.html \"type image::error::ImageResult\");`\n\n\n`pub use crate::flat::FlatSamples[](https://docs.rs/image/latest/image/flat/struct.FlatSamples.html \"struct image::flat::FlatSamples\");`\n\n## Modules\u00a7\u27e822\u27e9\n\nbuffer\u27e823\u27e9\n    Iterators and other auxiliary structure for the `ImageBuffer` type.\n\ncodecs\u27e824\u27e9\n    Encoding and decoding for various image file formats.\n\nerror\u27e825\u27e9\n    Contains detailed error representation.\n\nflat\u27e816\u27e9\n    Image representations for ffi.\n\nimageops\u27e826\u27e9\n    Image Processing Functions\n\nio\u27e827\u27e9\n    deprecated io module the original io module has been renamed to `image_reader`\n\nmath\u27e828\u27e9\n    Mathematical helper functions and types.\n\nmetadata\u27e829\u27e9\n    Types describing image metadata\n## Structs\u00a7\u27e830\u27e9\n\nDelay\u27e831\u27e9\n    The delay of a frame relative to the previous one.\n\nFrame\u27e832\u27e9\n    A single animation frame\n\nFrames\u27e833\u27e9\n    An implementation dependent iterator, reading the frames as requested\n\nImageBuffer\u27e812\u27e9\n    Generic image buffer\n\nImageReader\u27e87\u27e9\n    A multi-format image reader.\n\nLimitSupport\u27e834\u27e9\n    Set of supported strict limits for a decoder.\n\nLimits\u27e835\u27e9\n    Resource limits for decoding.\n\nLuma\u27e836\u27e9\n    Grayscale colors.\n\nLumaA\u27e837\u27e9\n    Grayscale colors + alpha channel\n\nPixels\u27e838\u27e9\n    Immutable pixel iterator\n\nRgb\u27e839\u27e9\n    RGB colors.\n\nRgba\u27e840\u27e9\n    RGB colors + alpha channel\n\nSubImage\u27e841\u27e9\n    A View into another image\n## Enums\u00a7\u27e842\u27e9\n\nColorType\u27e843\u27e9\n    An enumeration over supported color types and bit depths\n\nDynamicImage\u27e813\u27e9\n    A Dynamic Image\n\nExtendedColorType\u27e844\u27e9\n    An enumeration of color types encountered in image formats.\n\nImageFormat\u27e845\u27e9\n    An enumeration of supported image formats. Not all formats support both encoding and decoding.\n## Traits\u00a7\u27e846\u27e9\n\nAnimationDecoder\u27e847\u27e9\n    `AnimationDecoder` trait\n\nEncodableLayout\u27e848\u27e9\n    Types which are safe to treat as an immutable byte slice in a pixel layout for image encoding.\n\nGenericImage\u27e814\u27e9\n    A trait for manipulating images.\n\nGenericImageView\u27e815\u27e9\n    Trait to inspect an image.\n\nImageDecoder\u27e819\u27e9\n    The trait that all decoders implement\n\nImageDecoderRect\u27e820\u27e9\n    Specialized image decoding not be supported by all formats\n\nImageEncoder\u27e818\u27e9\n    The trait all encoders implement\n\nPixel\u27e849\u27e9\n    A generalized pixel.\n\nPixelWithColorType\u27e850\u27e9\n    The pixel with an associated `ColorType`. Not all possible pixels represent one of the predefined `ColorType`s.\n\nPrimitive\u27e851\u27e9\n    The type of each channel in a pixel. For example, this can be `u8`, `u16`, `f32`.\n## Functions\u00a7\u27e852\u27e9\n\nguess_format\u27e853\u27e9\n    Guess image format from memory block\n\nimage_dimensions\u27e854\u27e9\n    Read a tuple containing the (width, height) of the image located at the specified path. This is faster than fully loading the image and then getting its dimensions.\n\nload\u27e855\u27e9\n    Create a new image from a Reader.\n\nload_from_memory\u27e856\u27e9\n    Create a new image from a byte slice\n\nload_from_memory_with_format\u27e857\u27e9\n    Create a new image from a byte slice\n\nopen\u27e858\u27e9\n    Open the image located at the path specified. The image\u2019s format is determined from the path\u2019s file extension.\n\nsave_buffer\u27e859\u27e9\n    Saves the supplied buffer to a file at the path specified.\n\nsave_buffer_with_format\u27e860\u27e9\n    Saves the supplied buffer to a file at the path specified in the specified format.\n\nwrite_buffer_with_format\u27e861\u27e9\n    Writes the supplied buffer to a writer in the specified format.\n## Type Aliases\u00a7\u27e862\u27e9\n\nGrayAlphaImage\u27e863\u27e9\n    Sendable grayscale + alpha channel image buffer\n\nGrayImage\u27e864\u27e9\n    Sendable grayscale image buffer\n\nRgb32FImage\u27e865\u27e9\n    An image buffer for 32-bit float RGB pixels, where the backing container is a flattened vector of floats.\n\nRgbImage\u27e866\u27e9\n    Sendable Rgb image buffer\n\nRgba32FImage\u27e867\u27e9\n    An image buffer for 32-bit float RGBA pixels, where the backing container is a flattened vector of floats.\n\nRgbaImage\u27e868\u27e9\n    Sendable Rgb + alpha channel image buffer\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/image/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/image/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/image/latest/src/image/lib.rs.html#1-336: Source\n\u27e84\u27e9 https://docs.rs/image/latest/image/#overview: \u00a7\n\u27e85\u27e9 https://github.com/image-rs/image/blob/main/README.md: README.md file which is most easily viewed on github\n\u27e86\u27e9 https://docs.rs/image/latest/image/#high-level-api: \u00a7\n\u27e87\u27e9 https://docs.rs/image/latest/image/struct.ImageReader.html: struct image::ImageReader - `ImageReader`\n\u27e88\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html#method.save: `save`\n\u27e89\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html#method.write_to: `write_to`\n\u27e810\u27e9 https://docs.rs/image/latest/image/codecs/index.html#supported-formats: many common image formats\n\u27e811\u27e9 https://docs.rs/image/latest/image/#image-buffers: \u00a7\n\u27e812\u27e9 https://docs.rs/image/latest/image/struct.ImageBuffer.html: `ImageBuffer`\n\u27e813\u27e9 https://docs.rs/image/latest/image/enum.DynamicImage.html: `DynamicImage`\n\u27e814\u27e9 https://docs.rs/image/latest/image/trait.GenericImage.html: `GenericImage`\n\u27e815\u27e9 https://docs.rs/image/latest/image/trait.GenericImageView.html: `GenericImageView`\n\u27e816\u27e9 https://docs.rs/image/latest/image/flat/index.html: `flat`\n\u27e817\u27e9 https://docs.rs/image/latest/image/#low-level-encodingdecoding-api: \u00a7\n\u27e818\u27e9 https://docs.rs/image/latest/image/trait.ImageEncoder.html: `ImageEncoder`\n\u27e819\u27e9 https://docs.rs/image/latest/image/trait.ImageDecoder.html: `ImageDecoder`\n\u27e820\u27e9 https://docs.rs/image/latest/image/trait.ImageDecoderRect.html: `ImageDecoderRect`\n\u27e821\u27e9 https://docs.rs/image/latest/image/#reexports: \u00a7\n\u27e822\u27e9 https://docs.rs/image/latest/image/#modules: \u00a7\n\u27e823\u27e9 https://docs.rs/image/latest/image/buffer/index.html: mod image::buffer - buffer\n\u27e824\u27e9 https://docs.rs/image/latest/image/codecs/index.html: mod image::codecs - codecs\n\u27e825\u27e9 https://docs.rs/image/latest/image/error/index.html: mod image::error - error\n\u27e826\u27e9 https://docs.rs/image/latest/image/imageops/index.html: mod image::imageops - imageops\n\u27e827\u27e9 https://docs.rs/image/latest/image/io/index.html: mod image::io - io\n\u27e828\u27e9 https://docs.rs/image/latest/image/math/index.html: mod image::math - math\n\u27e829\u27e9 https://docs.rs/image/latest/image/metadata/index.html: mod image::metadata - metadata\n\u27e830\u27e9 https://docs.rs/image/latest/image/#structs: \u00a7\n\u27e831\u27e9 https://docs.rs/image/latest/image/struct.Delay.html: struct image::Delay - Delay\n\u27e832\u27e9 https://docs.rs/image/latest/image/struct.Frame.html: struct image::Frame - Frame\n\u27e833\u27e9 https://docs.rs/image/latest/image/struct.Frames.html: struct image::Frames - Frames\n\u27e834\u27e9 https://docs.rs/image/latest/image/struct.LimitSupport.html: struct image::LimitSupport - LimitSupport\n\u27e835\u27e9 https://docs.rs/image/latest/image/struct.Limits.html: struct image::Limits - Limits\n\u27e836\u27e9 https://docs.rs/image/latest/image/struct.Luma.html: struct image::Luma - Luma\n\u27e837\u27e9 https://docs.rs/image/latest/image/struct.LumaA.html: struct image::LumaA - LumaA\n\u27e838\u27e9 https://docs.rs/image/latest/image/struct.Pixels.html: struct image::Pixels - Pixels\n\u27e839\u27e9 https://docs.rs/image/latest/image/struct.Rgb.html: struct image::Rgb - Rgb\n\u27e840\u27e9 https://docs.rs/image/latest/image/struct.Rgba.html: struct image::Rgba - Rgba\n\u27e841\u27e9 https://docs.rs/image/latest/image/struct.SubImage.html: struct image::SubImage - SubImage\n\u27e842\u27e9 https://docs.rs/image/latest/image/#enums: \u00a7\n\u27e843\u27e9 https://docs.rs/image/latest/image/enum.ColorType.html: enum image::ColorType - ColorType\n\u27e844\u27e9 https://docs.rs/image/latest/image/enum.ExtendedColorType.html: enum image::ExtendedColorType - ExtendedColorType\n\u27e845\u27e9 https://docs.rs/image/latest/image/enum.ImageFormat.html: enum image::ImageFormat - ImageFormat\n\u27e846\u27e9 https://docs.rs/image/latest/image/#traits: \u00a7\n\u27e847\u27e9 https://docs.rs/image/latest/image/trait.AnimationDecoder.html: trait image::AnimationDecoder - AnimationDecoder\n\u27e848\u27e9 https://docs.rs/image/latest/image/trait.EncodableLayout.html: trait image::EncodableLayout - EncodableLayout\n\u27e849\u27e9 https://docs.rs/image/latest/image/trait.Pixel.html: trait image::Pixel - Pixel\n\u27e850\u27e9 https://docs.rs/image/latest/image/trait.PixelWithColorType.html: trait image::PixelWithColorType - PixelWithColorType\n\u27e851\u27e9 https://docs.rs/image/latest/image/trait.Primitive.html: trait image::Primitive - Primitive\n\u27e852\u27e9 https://docs.rs/image/latest/image/#functions: \u00a7\n\u27e853\u27e9 https://docs.rs/image/latest/image/fn.guess_format.html: fn image::guess_format - guess_format\n\u27e854\u27e9 https://docs.rs/image/latest/image/fn.image_dimensions.html: fn image::image_dimensions - image_dimensions\n\u27e855\u27e9 https://docs.rs/image/latest/image/fn.load.html: fn image::load - load\n\u27e856\u27e9 https://docs.rs/image/latest/image/fn.load_from_memory.html: fn image::load_from_memory - load_from_memory\n\u27e857\u27e9 https://docs.rs/image/latest/image/fn.load_from_memory_with_format.html: fn image::load_from_memory_with_format - load_from_memory_with_format\n\u27e858\u27e9 https://docs.rs/image/latest/image/fn.open.html: fn image::open - open\n\u27e859\u27e9 https://docs.rs/image/latest/image/fn.save_buffer.html: fn image::save_buffer - save_buffer\n\u27e860\u27e9 https://docs.rs/image/latest/image/fn.save_buffer_with_format.html: fn image::save_buffer_with_format - save_buffer_with_format\n\u27e861\u27e9 https://docs.rs/image/latest/image/fn.write_buffer_with_format.html: fn image::write_buffer_with_format - write_buffer_with_format\n\u27e862\u27e9 https://docs.rs/image/latest/image/#types: \u00a7\n\u27e863\u27e9 https://docs.rs/image/latest/image/type.GrayAlphaImage.html: type image::GrayAlphaImage - GrayAlphaImage\n\u27e864\u27e9 https://docs.rs/image/latest/image/type.GrayImage.html: type image::GrayImage - GrayImage\n\u27e865\u27e9 https://docs.rs/image/latest/image/type.Rgb32FImage.html: type image::Rgb32FImage - Rgb32FImage\n\u27e866\u27e9 https://docs.rs/image/latest/image/type.RgbImage.html: type image::RgbImage - RgbImage\n\u27e867\u27e9 https://docs.rs/image/latest/image/type.Rgba32FImage.html: type image::Rgba32FImage - Rgba32FImage\n\u27e868\u27e9 https://docs.rs/image/latest/image/type.RgbaImage.html: type image::RgbaImage - RgbaImage\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `image` crate provides native Rust implementations for image encoding, decoding, and manipulation, supporting many common formats. It offers high-level APIs for easy image loading and saving, as well as low-level control through traits like `ImageEncoder` and `ImageDecoder`. Additionally, it includes versatile image buffer types (`ImageBuffer`, `DynamicImage`) and utilities for processing, metadata handling, and interoperability with external systems.",
          "feature_summary": null,
          "use_case": "Utilities",
          "score": 8.5,
          "factual_counterfactual": "### Pair 1: Image Encoding and Decoding  \n\u2705 **Factual**: The `image` crate supports encoding and decoding for many common image formats, including PNG, JPEG, BMP, GIF, and TIFF, through its `ImageReader` and `DynamicImage` APIs.  \n\u274c **Counterfactual**: The `image` crate natively supports encoding and decoding for vector image formats like SVG and EPS, alongside raster formats.  \n\n---\n\n### Pair 2: Image Manipulation  \n\u2705 **Factual**: The `image` crate provides basic image manipulation functions, such as resizing, cropping, and rotating, through the `imageops` module.  \n\u274c **Counterfactual**: The `image` crate includes advanced image manipulation capabilities, such as AI-based image enhancement and object detection, as part of its core functionality.  \n\n---\n\n### Pair 3: Performance and Safety  \n\u2705 **Factual**: The `image` crate prioritizes safe solutions with minimal dependencies, ensuring compatibility with Rust's safety guarantees and performance optimizations.  \n\u274c **Counterfactual**: The `image` crate sacrifices safety features in favor of performance, relying heavily on unsafe code to achieve faster image processing.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-6105d6cc-c5fb7e11-1751265848",
      "timestamp": "2025-06-30T06:44:08.895126+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]