[
  {
    "execution_id": "exec-50221f01-cb76abf4-1751260143",
    "timestamp": "2025-06-30T05:09:03.091769+00:00",
    "sacred_chain": {
      "input_data": "crossterm",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'crossterm' -> 'crossterm'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "crossterm",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/crossterm",
            "title": "crossterm v0.29.0",
            "content": {
              "raw_markdown": "#  crossterm v0.29.0\nA crossplatform terminal library for manipulating terminals. \n  * [ #cli ](https://crates.io/keywords/cli)\n  * [ #color ](https://crates.io/keywords/color)\n  * [ #event ](https://crates.io/keywords/event)\n  * [ #input ](https://crates.io/keywords/input)\n  * [ #terminal ](https://crates.io/keywords/terminal)\n\n\n  * [ Readme ](https://crates.io/crates/crossterm)\n  * [ 70 Versions ](https://crates.io/crates/crossterm/versions)\n  * [ Dependencies ](https://crates.io/crates/crossterm/dependencies)\n  * [ Dependents ](https://crates.io/crates/crossterm/reverse_dependencies)\n\n\n## Metadata\n3 months ago \nv1.63.0 \n[ MIT ](https://choosealicense.com/licenses/mit)\n133 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add crossterm\nOr add the following line to your Cargo.toml:\ncrossterm = \"0.29.0\"\n## Documentation\n[ docs.rs/crossterm ](https://docs.rs/crossterm/)\n## Repository\n[ github.com/crossterm-rs/crossterm ](https://github.com/crossterm-rs/crossterm)\n## Owners\n## Categories\n  * [Command line utilities](https://crates.io/categories/command-line-utilities)\n  * [Command-line interface](https://crates.io/categories/command-line-interface)\n\n\n[ Report crate ](https://crates.io/support?crate=crossterm&inquire=crate-violation)\n### Stats Overview\n51,984,398 Downloads all time\n70 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  crossterm v0.29.0\nA crossplatform terminal library for manipulating terminals. \n  *  #cli \u27e81\u27e9\n  *  #color \u27e82\u27e9\n  *  #event \u27e83\u27e9\n  *  #input \u27e84\u27e9\n  *  #terminal \u27e85\u27e9\n\n\n  *  Readme \u27e86\u27e9\n  *  70 Versions \u27e87\u27e9\n  *  Dependencies \u27e88\u27e9\n  *  Dependents \u27e89\u27e9\n\n\n## Metadata\n3 months ago \nv1.63.0 \n MIT \u27e810\u27e9\n133 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add crossterm\nOr add the following line to your Cargo.toml:\ncrossterm = \"0.29.0\"\n## Documentation\n docs.rs/crossterm \u27e811\u27e9\n## Repository\n github.com/crossterm-rs/crossterm \u27e812\u27e9\n## Owners\n## Categories\n  * Command line utilities\u27e813\u27e9\n  * Command-line interface\u27e814\u27e9\n\n\n Report crate \u27e815\u27e9\n### Stats Overview\n51,984,398 Downloads all time\n70 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/cli:  #cli \n\u27e82\u27e9 https://crates.io/keywords/color:  #color \n\u27e83\u27e9 https://crates.io/keywords/event:  #event \n\u27e84\u27e9 https://crates.io/keywords/input:  #input \n\u27e85\u27e9 https://crates.io/keywords/terminal:  #terminal \n\u27e86\u27e9 https://crates.io/crates/crossterm:  Readme \n\u27e87\u27e9 https://crates.io/crates/crossterm/versions:  70 Versions \n\u27e88\u27e9 https://crates.io/crates/crossterm/dependencies:  Dependencies \n\u27e89\u27e9 https://crates.io/crates/crossterm/reverse_dependencies:  Dependents \n\u27e810\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e811\u27e9 https://docs.rs/crossterm/:  docs.rs/crossterm \n\u27e812\u27e9 https://github.com/crossterm-rs/crossterm:  github.com/crossterm-rs/crossterm \n\u27e813\u27e9 https://crates.io/categories/command-line-utilities: Command line utilities\n\u27e814\u27e9 https://crates.io/categories/command-line-interface: Command-line interface\n\u27e815\u27e9 https://crates.io/support?crate=crossterm&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1450,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "113933.0001004"
          },
          "docs_rs": {
            "url": "https://docs.rs/crossterm",
            "title": "Crate crosstermCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/crossterm/latest/crossterm/all.html \"show sidebar\")\n# Crate crosstermCopy item path\n[Settings](https://docs.rs/crossterm/latest/settings.html)\n[Help](https://docs.rs/crossterm/latest/help.html)\nSummary[Source](https://docs.rs/crossterm/latest/src/crossterm/lib.rs.html#1-263)\nExpand description\n## [\u00a7](https://docs.rs/crossterm/latest/crossterm/#cross-platform-terminal-manipulation-library)Cross-platform Terminal Manipulation Library\nCrossterm is a pure-rust, terminal manipulation library that makes it possible to write cross-platform text-based interfaces.\nThis crate supports all UNIX and Windows terminals down to Windows 7 (not all terminals are tested see [Tested Terminals](https://github.com/crossterm-rs/crossterm#tested-terminals) for more info).\n### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#command-api)Command API\nThe command API makes the use of `crossterm` much easier and offers more control over when and how a command is executed. A command is just an action you can perform on the terminal e.g. cursor movement.\nThe command API offers:\n  * Better Performance.\n  * Complete control over when to flush.\n  * Complete control over where the ANSI escape commands are executed to.\n  * Way easier and nicer API.\n\n\nThere are two ways to use the API command:\n  * Functions can execute commands on types that implement Write. Functions are easier to use and debug. There is a disadvantage, and that is that there is a boilerplate code involved.\n  * Macros are generally seen as more difficult and aren\u2019t always well supported by editors but offer an API with less boilerplate code. If you are not afraid of macros, this is a recommendation.\n\n\nLinux and Windows 10 systems support ANSI escape codes. Those ANSI escape codes are strings or rather a byte sequence. When we `write` and `flush` those to the terminal we can perform some action. For older windows systems a WinAPI call is made.\n#### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#supported-commands)Supported Commands\n  * Module [`cursor`](https://docs.rs/crossterm/latest/crossterm/cursor/index.html)\n    * Visibility - [`Show`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.Show.html), [`Hide`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.Hide.html)\n    * Appearance - [`EnableBlinking`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.EnableBlinking.html), [`DisableBlinking`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.DisableBlinking.html), [`SetCursorStyle`](https://docs.rs/crossterm/latest/crossterm/cursor/enum.SetCursorStyle.html)\n    * Position - [`SavePosition`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.SavePosition.html), [`RestorePosition`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.RestorePosition.html), [`MoveUp`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveUp.html), [`MoveDown`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveDown.html), [`MoveLeft`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveLeft.html), [`MoveRight`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveRight.html), [`MoveTo`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveTo.html), [`MoveToColumn`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToColumn.html),[`MoveToRow`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToRow.html), [`MoveToNextLine`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToNextLine.html), [`MoveToPreviousLine`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToPreviousLine.html)\n  * Module [`event`](https://docs.rs/crossterm/latest/crossterm/event/index.html)\n    * Keyboard events - [`PushKeyboardEnhancementFlags`](https://docs.rs/crossterm/latest/crossterm/event/struct.PushKeyboardEnhancementFlags.html), [`PopKeyboardEnhancementFlags`](https://docs.rs/crossterm/latest/crossterm/event/struct.PopKeyboardEnhancementFlags.html)\n    * Mouse events - [`EnableMouseCapture`](https://docs.rs/crossterm/latest/crossterm/event/struct.EnableMouseCapture.html), [`DisableMouseCapture`](https://docs.rs/crossterm/latest/crossterm/event/struct.DisableMouseCapture.html)\n  * Module [`style`](https://docs.rs/crossterm/latest/crossterm/style/index.html)\n    * Colors - [`SetForegroundColor`](https://docs.rs/crossterm/latest/crossterm/style/struct.SetForegroundColor.html), [`SetBackgroundColor`](https://docs.rs/crossterm/latest/crossterm/style/struct.SetBackgroundColor.html), [`ResetColor`](https://docs.rs/crossterm/latest/crossterm/style/struct.ResetColor.html), [`SetColors`](https://docs.rs/crossterm/latest/crossterm/style/struct.SetColors.html)\n    * Attributes - [`SetAttribute`](https://docs.rs/crossterm/latest/crossterm/style/struct.SetAttribute.html), [`SetAttributes`](https://docs.rs/crossterm/latest/crossterm/style/struct.SetAttributes.html), [`PrintStyledContent`](https://docs.rs/crossterm/latest/crossterm/style/struct.PrintStyledContent.html)\n  * Module [`terminal`](https://docs.rs/crossterm/latest/crossterm/terminal/index.html)\n    * Scrolling - [`ScrollUp`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.ScrollUp.html), [`ScrollDown`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.ScrollDown.html)\n    * Miscellaneous - [`Clear`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.Clear.html), [`SetSize`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.SetSize.html), [`SetTitle`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.SetTitle.html), [`DisableLineWrap`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.DisableLineWrap.html), [`EnableLineWrap`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.EnableLineWrap.html)\n    * Alternate screen - [`EnterAlternateScreen`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.EnterAlternateScreen.html), [`LeaveAlternateScreen`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.LeaveAlternateScreen.html)\n  * Module [`clipboard`](https://docs.rs/crossterm/latest/crossterm/clipboard/index.html) (requires [`feature = \"osc52\"`](https://docs.rs/crossterm/latest/crossterm/#optional-features)) \n    * Clipboard - [`CopyToClipboard`](https://docs.rs/crossterm/latest/crossterm/clipboard/struct.CopyToClipboard.html)\n\n\n#### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#command-execution)Command Execution\nThere are two different ways to execute commands:\n  * [Lazy Execution](https://docs.rs/crossterm/latest/crossterm/#lazy-execution)\n  * [Direct Execution](https://docs.rs/crossterm/latest/crossterm/#direct-execution)\n\n\n##### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#lazy-execution)Lazy Execution\nFlushing bytes to the terminal buffer is a heavy system call. If we perform a lot of actions with the terminal, we want to do this periodically - like with a TUI editor - so that we can flush more data to the terminal buffer at the same time.\nCrossterm offers the possibility to do this with `queue`. With `queue` you can queue commands, and when you call [Write::flush](https://doc.rust-lang.org/std/io/trait.Write.html#tymethod.flush) these commands will be executed.\nYou can pass a custom buffer implementing [std::io::Write](https://doc.rust-lang.org/std/io/trait.Write.html) to this `queue` operation. The commands will be executed on that buffer. The most common buffer is [std::io::stdout](https://doc.rust-lang.org/std/io/fn.stdout.html) however, [std::io::stderr](https://doc.rust-lang.org/std/io/fn.stderr.html) is used sometimes as well.\n###### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#examples)Examples\nA simple demonstration that shows the command API in action with cursor commands.\nFunctions:\n```\nuse std::io::{Write, stdout};\nuse crossterm::{QueueableCommand, cursor};\nlet mut stdout = stdout();\nstdout.queue(cursor::MoveTo(5,5));\n// some other code ...\nstdout.flush();\n```\n\nThe [queue](https://docs.rs/crossterm/latest/crossterm/trait.QueueableCommand.html) function returns itself, therefore you can use this to queue another command. Like `stdout.queue(Goto(5,5)).queue(Clear(ClearType::All))`.\nMacros:\n```\nuse std::io::{Write, stdout};\nuse crossterm::{queue, QueueableCommand, cursor};\nlet mut stdout = stdout();\nqueue!(stdout, cursor::MoveTo(5, 5));\n// some other code ...\n// move operation is performed only if we flush the buffer.\nstdout.flush();\n```\n\nYou can pass more than one command into the [queue](https://docs.rs/crossterm/latest/crossterm/macro.queue.html) macro like `queue!(stdout, MoveTo(5, 5), Clear(ClearType::All))` and they will be executed in the given order from left to right.\n##### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#direct-execution)Direct Execution\nFor many applications it is not at all important to be efficient with \u2018flush\u2019 operations. For this use case there is the `execute` operation. This operation executes the command immediately, and calls the `flush` under water.\nYou can pass a custom buffer implementing [std::io::Write](https://doc.rust-lang.org/std/io/trait.Write.html) to this `execute` operation. The commands will be executed on that buffer. The most common buffer is [std::io::stdout](https://doc.rust-lang.org/std/io/fn.stdout.html) however, [std::io::stderr](https://doc.rust-lang.org/std/io/fn.stderr.html) is used sometimes as well.\n###### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#examples-1)Examples\nFunctions:\n```\nuse std::io::{Write, stdout};\nuse crossterm::{ExecutableCommand, cursor};\nlet mut stdout = stdout();\nstdout.execute(cursor::MoveTo(5,5));\n```\n\nThe [execute](https://docs.rs/crossterm/latest/crossterm/trait.ExecutableCommand.html) function returns itself, therefore you can use this to queue another command. Like `stdout.execute(Goto(5,5))?.execute(Clear(ClearType::All))`.\nMacros:\n```\nuse std::io::{stdout, Write};\nuse crossterm::{execute, ExecutableCommand, cursor};\nlet mut stdout = stdout();\nexecute!(stdout, cursor::MoveTo(5, 5));\n```\n\nYou can pass more than one command into the [execute](https://docs.rs/crossterm/latest/crossterm/macro.execute.html) macro like `execute!(stdout, MoveTo(5, 5), Clear(ClearType::All))` and they will be executed in the given order from left to right.\n### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#examples-2)Examples\nPrint a rectangle colored with magenta and use both direct execution and lazy execution.\nFunctions:\n```\nuse std::io::{self, Write};\nuse crossterm::{\n  ExecutableCommand, QueueableCommand,\n  terminal, cursor, style::{self, Stylize}\n};\nfn main() -> io::Result<()> {\n let mut stdout = io::stdout();\n stdout.execute(terminal::Clear(terminal::ClearType::All))?;\n for y in 0..40 {\n  for x in 0..150 {\n   if (y == 0 || y == 40 - 1) || (x == 0 || x == 150 - 1) {\n    // in this loop we are more efficient by not flushing the buffer.\n    stdout\n     .queue(cursor::MoveTo(x,y))?\n     .queue(style::PrintStyledContent( \"\u2588\".magenta()))?;\n   }\n  }\n }\n stdout.flush()?;\n Ok(())\n}\n```\n\nMacros:\n```\nuse std::io::{self, Write};\nuse crossterm::{\n  execute, queue,\n  style::{self, Stylize}, cursor, terminal\n};\nfn main() -> io::Result<()> {\n let mut stdout = io::stdout();\n execute!(stdout, terminal::Clear(terminal::ClearType::All))?;\n for y in 0..40 {\n  for x in 0..150 {\n   if (y == 0 || y == 40 - 1) || (x == 0 || x == 150 - 1) {\n    // in this loop we are more efficient by not flushing the buffer.\n    queue!(stdout, cursor::MoveTo(x,y), style::PrintStyledContent( \"\u2588\".magenta()))?;\n   }\n  }\n }\n stdout.flush()?;\n Ok(())\n}\n```\n\n### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#feature-flags)Feature Flags\n#### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#default-features)Default features\n  * **`bracketed-paste`**_(enabled by default)_ \u2014 Enables triggering [`Event::Paste`](https://docs.rs/crossterm/latest/crossterm/event/enum.Event.html#variant.Paste \"variant crossterm::event::Event::Paste\") when pasting text into the terminal.\n  * **`events`**_(enabled by default)_ \u2014 Enables reading input/events from the system using the [`event`](https://docs.rs/crossterm/latest/crossterm/event/index.html \"mod crossterm::event\") module.\n  * **`windows`**_(enabled by default)_ \u2014 Enables windows specific crates.\n\n\n#### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#optional-features)Optional Features\n  * **`event-stream`**\u2014 Enables the[EventStream](https://docs.rs/crossterm/latest/crossterm/event/struct.EventStream.html \"struct crossterm::event::EventStream\") struct for async event reading.\n  * **`serde`**\u2014 Enables[`serde`](https://docs.rs/serde/1.0.219/x86_64-unknown-linux-gnu/serde/index.html \"mod serde\") for various types.\n  * **`use-dev-tty`**\u2014 Enables raw file descriptor polling / selecting instead of mio.\n  * **`derive-more`**_(enabled by default)_ \u2014 Enables `is_*` helper functions for event enums.\n  * **`osc52`**\u2014 Enables interacting with a host clipboard via[`clipboard`](https://docs.rs/crossterm/latest/crossterm/clipboard/index.html)\n\n\n## Modules[\u00a7](https://docs.rs/crossterm/latest/crossterm/#modules)\n\n[clipboard](https://docs.rs/crossterm/latest/crossterm/clipboard/index.html \"mod crossterm::clipboard\")\n    A module for clipboard interaction\n\n[cursor](https://docs.rs/crossterm/latest/crossterm/cursor/index.html \"mod crossterm::cursor\")\n    A module to work with the terminal cursor\n\n[event](https://docs.rs/crossterm/latest/crossterm/event/index.html \"mod crossterm::event\")\n    A module to read events.\n\n[style](https://docs.rs/crossterm/latest/crossterm/style/index.html \"mod crossterm::style\")\n    A module to apply attributes and colors on your text.\n\n[terminal](https://docs.rs/crossterm/latest/crossterm/terminal/index.html \"mod crossterm::terminal\")\n    A module to work with the terminal.\n\n[tty](https://docs.rs/crossterm/latest/crossterm/tty/index.html \"mod crossterm::tty\")\n    A module to query if the current instance is a tty. Making it a little more convenient and safe to query whether something is a terminal teletype or not. This module defines the IsTty trait and the is_tty method to return true if the item represents a terminal.\n## Macros[\u00a7](https://docs.rs/crossterm/latest/crossterm/#macros)\n\n[execute](https://docs.rs/crossterm/latest/crossterm/macro.execute.html \"macro crossterm::execute\")\n    Executes one or more command(s).\n\n[queue](https://docs.rs/crossterm/latest/crossterm/macro.queue.html \"macro crossterm::queue\")\n    Queues one or more command(s) for further execution.\n## Traits[\u00a7](https://docs.rs/crossterm/latest/crossterm/#traits)\n\n[Command](https://docs.rs/crossterm/latest/crossterm/trait.Command.html \"trait crossterm::Command\")\n    An interface for a command that performs an action on the terminal.\n\n[ExecutableCommand](https://docs.rs/crossterm/latest/crossterm/trait.ExecutableCommand.html \"trait crossterm::ExecutableCommand\")\n    An interface for types that can directly execute commands.\n\n[QueueableCommand](https://docs.rs/crossterm/latest/crossterm/trait.QueueableCommand.html \"trait crossterm::QueueableCommand\")\n    An interface for types that can queue commands for further execution.\n\n[SynchronizedUpdate](https://docs.rs/crossterm/latest/crossterm/trait.SynchronizedUpdate.html \"trait crossterm::SynchronizedUpdate\")\n    An interface for types that support synchronized updates.\n",
              "markdown_with_citations": "[](https://docs.rs/crossterm/latest/crossterm/all.html \"show sidebar\")\n# Crate crosstermCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9Cross-platform Terminal Manipulation Library\nCrossterm is a pure-rust, terminal manipulation library that makes it possible to write cross-platform text-based interfaces.\nThis crate supports all UNIX and Windows terminals down to Windows 7 (not all terminals are tested see Tested Terminals\u27e85\u27e9 for more info).\n### \u00a7\u27e86\u27e9Command API\nThe command API makes the use of `crossterm` much easier and offers more control over when and how a command is executed. A command is just an action you can perform on the terminal e.g. cursor movement.\nThe command API offers:\n  * Better Performance.\n  * Complete control over when to flush.\n  * Complete control over where the ANSI escape commands are executed to.\n  * Way easier and nicer API.\n\n\nThere are two ways to use the API command:\n  * Functions can execute commands on types that implement Write. Functions are easier to use and debug. There is a disadvantage, and that is that there is a boilerplate code involved.\n  * Macros are generally seen as more difficult and aren\u2019t always well supported by editors but offer an API with less boilerplate code. If you are not afraid of macros, this is a recommendation.\n\n\nLinux and Windows 10 systems support ANSI escape codes. Those ANSI escape codes are strings or rather a byte sequence. When we `write` and `flush` those to the terminal we can perform some action. For older windows systems a WinAPI call is made.\n#### \u00a7\u27e87\u27e9Supported Commands\n  * Module `cursor`\u27e88\u27e9\n    * Visibility - `Show`\u27e89\u27e9, `Hide`\u27e810\u27e9\n    * Appearance - `EnableBlinking`\u27e811\u27e9, `DisableBlinking`\u27e812\u27e9, `SetCursorStyle`\u27e813\u27e9\n    * Position - `SavePosition`\u27e814\u27e9, `RestorePosition`\u27e815\u27e9, `MoveUp`\u27e816\u27e9, `MoveDown`\u27e817\u27e9, `MoveLeft`\u27e818\u27e9, `MoveRight`\u27e819\u27e9, `MoveTo`\u27e820\u27e9, `MoveToColumn`\u27e821\u27e9,`MoveToRow`\u27e822\u27e9, `MoveToNextLine`\u27e823\u27e9, `MoveToPreviousLine`\u27e824\u27e9\n  * Module `event`\u27e825\u27e9\n    * Keyboard events - `PushKeyboardEnhancementFlags`\u27e826\u27e9, `PopKeyboardEnhancementFlags`\u27e827\u27e9\n    * Mouse events - `EnableMouseCapture`\u27e828\u27e9, `DisableMouseCapture`\u27e829\u27e9\n  * Module `style`\u27e830\u27e9\n    * Colors - `SetForegroundColor`\u27e831\u27e9, `SetBackgroundColor`\u27e832\u27e9, `ResetColor`\u27e833\u27e9, `SetColors`\u27e834\u27e9\n    * Attributes - `SetAttribute`\u27e835\u27e9, `SetAttributes`\u27e836\u27e9, `PrintStyledContent`\u27e837\u27e9\n  * Module `terminal`\u27e838\u27e9\n    * Scrolling - `ScrollUp`\u27e839\u27e9, `ScrollDown`\u27e840\u27e9\n    * Miscellaneous - `Clear`\u27e841\u27e9, `SetSize`\u27e842\u27e9, `SetTitle`\u27e843\u27e9, `DisableLineWrap`\u27e844\u27e9, `EnableLineWrap`\u27e845\u27e9\n    * Alternate screen - `EnterAlternateScreen`\u27e846\u27e9, `LeaveAlternateScreen`\u27e847\u27e9\n  * Module `clipboard`\u27e848\u27e9 (requires `feature = \"osc52\"`\u27e849\u27e9) \n    * Clipboard - `CopyToClipboard`\u27e850\u27e9\n\n\n#### \u00a7\u27e851\u27e9Command Execution\nThere are two different ways to execute commands:\n  * Lazy Execution\u27e852\u27e9\n  * Direct Execution\u27e853\u27e9\n\n\n##### \u00a7\u27e852\u27e9Lazy Execution\nFlushing bytes to the terminal buffer is a heavy system call. If we perform a lot of actions with the terminal, we want to do this periodically - like with a TUI editor - so that we can flush more data to the terminal buffer at the same time.\nCrossterm offers the possibility to do this with `queue`. With `queue` you can queue commands, and when you call Write::flush\u27e854\u27e9 these commands will be executed.\nYou can pass a custom buffer implementing std::io::Write\u27e855\u27e9 to this `queue` operation. The commands will be executed on that buffer. The most common buffer is std::io::stdout\u27e856\u27e9 however, std::io::stderr\u27e857\u27e9 is used sometimes as well.\n###### \u00a7\u27e858\u27e9Examples\nA simple demonstration that shows the command API in action with cursor commands.\nFunctions:\n```\nuse std::io::{Write, stdout};\nuse crossterm::{QueueableCommand, cursor};\nlet mut stdout = stdout();\nstdout.queue(cursor::MoveTo(5,5));\n// some other code ...\nstdout.flush();\n```\n\nThe queue\u27e859\u27e9 function returns itself, therefore you can use this to queue another command. Like `stdout.queue(Goto(5,5)).queue(Clear(ClearType::All))`.\nMacros:\n```\nuse std::io::{Write, stdout};\nuse crossterm::{queue, QueueableCommand, cursor};\nlet mut stdout = stdout();\nqueue!(stdout, cursor::MoveTo(5, 5));\n// some other code ...\n// move operation is performed only if we flush the buffer.\nstdout.flush();\n```\n\nYou can pass more than one command into the queue\u27e860\u27e9 macro like `queue!(stdout, MoveTo(5, 5), Clear(ClearType::All))` and they will be executed in the given order from left to right.\n##### \u00a7\u27e853\u27e9Direct Execution\nFor many applications it is not at all important to be efficient with \u2018flush\u2019 operations. For this use case there is the `execute` operation. This operation executes the command immediately, and calls the `flush` under water.\nYou can pass a custom buffer implementing std::io::Write\u27e855\u27e9 to this `execute` operation. The commands will be executed on that buffer. The most common buffer is std::io::stdout\u27e856\u27e9 however, std::io::stderr\u27e857\u27e9 is used sometimes as well.\n###### \u00a7\u27e861\u27e9Examples\nFunctions:\n```\nuse std::io::{Write, stdout};\nuse crossterm::{ExecutableCommand, cursor};\nlet mut stdout = stdout();\nstdout.execute(cursor::MoveTo(5,5));\n```\n\nThe execute\u27e862\u27e9 function returns itself, therefore you can use this to queue another command. Like `stdout.execute(Goto(5,5))?.execute(Clear(ClearType::All))`.\nMacros:\n```\nuse std::io::{stdout, Write};\nuse crossterm::{execute, ExecutableCommand, cursor};\nlet mut stdout = stdout();\nexecute!(stdout, cursor::MoveTo(5, 5));\n```\n\nYou can pass more than one command into the execute\u27e863\u27e9 macro like `execute!(stdout, MoveTo(5, 5), Clear(ClearType::All))` and they will be executed in the given order from left to right.\n### \u00a7\u27e864\u27e9Examples\nPrint a rectangle colored with magenta and use both direct execution and lazy execution.\nFunctions:\n```\nuse std::io::{self, Write};\nuse crossterm::{\n  ExecutableCommand, QueueableCommand,\n  terminal, cursor, style::{self, Stylize}\n};\nfn main() -> io::Result<()> {\n let mut stdout = io::stdout();\n stdout.execute(terminal::Clear(terminal::ClearType::All))?;\n for y in 0..40 {\n  for x in 0..150 {\n   if (y == 0 || y == 40 - 1) || (x == 0 || x == 150 - 1) {\n    // in this loop we are more efficient by not flushing the buffer.\n    stdout\n     .queue(cursor::MoveTo(x,y))?\n     .queue(style::PrintStyledContent( \"\u2588\".magenta()))?;\n   }\n  }\n }\n stdout.flush()?;\n Ok(())\n}\n```\n\nMacros:\n```\nuse std::io::{self, Write};\nuse crossterm::{\n  execute, queue,\n  style::{self, Stylize}, cursor, terminal\n};\nfn main() -> io::Result<()> {\n let mut stdout = io::stdout();\n execute!(stdout, terminal::Clear(terminal::ClearType::All))?;\n for y in 0..40 {\n  for x in 0..150 {\n   if (y == 0 || y == 40 - 1) || (x == 0 || x == 150 - 1) {\n    // in this loop we are more efficient by not flushing the buffer.\n    queue!(stdout, cursor::MoveTo(x,y), style::PrintStyledContent( \"\u2588\".magenta()))?;\n   }\n  }\n }\n stdout.flush()?;\n Ok(())\n}\n```\n\n### \u00a7\u27e865\u27e9Feature Flags\n#### \u00a7\u27e866\u27e9Default features\n  * **`bracketed-paste`**_(enabled by default)_ \u2014 Enables triggering `Event::Paste`\u27e867\u27e9 when pasting text into the terminal.\n  * **`events`**_(enabled by default)_ \u2014 Enables reading input/events from the system using the `event`\u27e825\u27e9 module.\n  * **`windows`**_(enabled by default)_ \u2014 Enables windows specific crates.\n\n\n#### \u00a7\u27e849\u27e9Optional Features\n  * **`event-stream`**\u2014 Enables theEventStream\u27e868\u27e9 struct for async event reading.\n  * **`serde`**\u2014 Enables`serde`\u27e869\u27e9 for various types.\n  * **`use-dev-tty`**\u2014 Enables raw file descriptor polling / selecting instead of mio.\n  * **`derive-more`**_(enabled by default)_ \u2014 Enables `is_*` helper functions for event enums.\n  * **`osc52`**\u2014 Enables interacting with a host clipboard via`clipboard`\u27e848\u27e9\n\n\n## Modules\u00a7\u27e870\u27e9\n\nclipboard\u27e848\u27e9\n    A module for clipboard interaction\n\ncursor\u27e88\u27e9\n    A module to work with the terminal cursor\n\nevent\u27e825\u27e9\n    A module to read events.\n\nstyle\u27e830\u27e9\n    A module to apply attributes and colors on your text.\n\nterminal\u27e838\u27e9\n    A module to work with the terminal.\n\ntty\u27e871\u27e9\n    A module to query if the current instance is a tty. Making it a little more convenient and safe to query whether something is a terminal teletype or not. This module defines the IsTty trait and the is_tty method to return true if the item represents a terminal.\n## Macros\u00a7\u27e872\u27e9\n\nexecute\u27e863\u27e9\n    Executes one or more command(s).\n\nqueue\u27e860\u27e9\n    Queues one or more command(s) for further execution.\n## Traits\u00a7\u27e873\u27e9\n\nCommand\u27e874\u27e9\n    An interface for a command that performs an action on the terminal.\n\nExecutableCommand\u27e862\u27e9\n    An interface for types that can directly execute commands.\n\nQueueableCommand\u27e859\u27e9\n    An interface for types that can queue commands for further execution.\n\nSynchronizedUpdate\u27e875\u27e9\n    An interface for types that support synchronized updates.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/crossterm/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/crossterm/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/crossterm/latest/src/crossterm/lib.rs.html#1-263: Source\n\u27e84\u27e9 https://docs.rs/crossterm/latest/crossterm/#cross-platform-terminal-manipulation-library: \u00a7\n\u27e85\u27e9 https://github.com/crossterm-rs/crossterm#tested-terminals: Tested Terminals\n\u27e86\u27e9 https://docs.rs/crossterm/latest/crossterm/#command-api: \u00a7\n\u27e87\u27e9 https://docs.rs/crossterm/latest/crossterm/#supported-commands: \u00a7\n\u27e88\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/index.html: `cursor`\n\u27e89\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.Show.html: `Show`\n\u27e810\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.Hide.html: `Hide`\n\u27e811\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.EnableBlinking.html: `EnableBlinking`\n\u27e812\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.DisableBlinking.html: `DisableBlinking`\n\u27e813\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/enum.SetCursorStyle.html: `SetCursorStyle`\n\u27e814\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.SavePosition.html: `SavePosition`\n\u27e815\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.RestorePosition.html: `RestorePosition`\n\u27e816\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveUp.html: `MoveUp`\n\u27e817\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveDown.html: `MoveDown`\n\u27e818\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveLeft.html: `MoveLeft`\n\u27e819\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveRight.html: `MoveRight`\n\u27e820\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveTo.html: `MoveTo`\n\u27e821\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToColumn.html: `MoveToColumn`\n\u27e822\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToRow.html: `MoveToRow`\n\u27e823\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToNextLine.html: `MoveToNextLine`\n\u27e824\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToPreviousLine.html: `MoveToPreviousLine`\n\u27e825\u27e9 https://docs.rs/crossterm/latest/crossterm/event/index.html: `event`\n\u27e826\u27e9 https://docs.rs/crossterm/latest/crossterm/event/struct.PushKeyboardEnhancementFlags.html: `PushKeyboardEnhancementFlags`\n\u27e827\u27e9 https://docs.rs/crossterm/latest/crossterm/event/struct.PopKeyboardEnhancementFlags.html: `PopKeyboardEnhancementFlags`\n\u27e828\u27e9 https://docs.rs/crossterm/latest/crossterm/event/struct.EnableMouseCapture.html: `EnableMouseCapture`\n\u27e829\u27e9 https://docs.rs/crossterm/latest/crossterm/event/struct.DisableMouseCapture.html: `DisableMouseCapture`\n\u27e830\u27e9 https://docs.rs/crossterm/latest/crossterm/style/index.html: `style`\n\u27e831\u27e9 https://docs.rs/crossterm/latest/crossterm/style/struct.SetForegroundColor.html: `SetForegroundColor`\n\u27e832\u27e9 https://docs.rs/crossterm/latest/crossterm/style/struct.SetBackgroundColor.html: `SetBackgroundColor`\n\u27e833\u27e9 https://docs.rs/crossterm/latest/crossterm/style/struct.ResetColor.html: `ResetColor`\n\u27e834\u27e9 https://docs.rs/crossterm/latest/crossterm/style/struct.SetColors.html: `SetColors`\n\u27e835\u27e9 https://docs.rs/crossterm/latest/crossterm/style/struct.SetAttribute.html: `SetAttribute`\n\u27e836\u27e9 https://docs.rs/crossterm/latest/crossterm/style/struct.SetAttributes.html: `SetAttributes`\n\u27e837\u27e9 https://docs.rs/crossterm/latest/crossterm/style/struct.PrintStyledContent.html: `PrintStyledContent`\n\u27e838\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/index.html: `terminal`\n\u27e839\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.ScrollUp.html: `ScrollUp`\n\u27e840\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.ScrollDown.html: `ScrollDown`\n\u27e841\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.Clear.html: `Clear`\n\u27e842\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.SetSize.html: `SetSize`\n\u27e843\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.SetTitle.html: `SetTitle`\n\u27e844\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.DisableLineWrap.html: `DisableLineWrap`\n\u27e845\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.EnableLineWrap.html: `EnableLineWrap`\n\u27e846\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.EnterAlternateScreen.html: `EnterAlternateScreen`\n\u27e847\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.LeaveAlternateScreen.html: `LeaveAlternateScreen`\n\u27e848\u27e9 https://docs.rs/crossterm/latest/crossterm/clipboard/index.html: `clipboard`\n\u27e849\u27e9 https://docs.rs/crossterm/latest/crossterm/#optional-features: `feature = \"osc52\"`\n\u27e850\u27e9 https://docs.rs/crossterm/latest/crossterm/clipboard/struct.CopyToClipboard.html: `CopyToClipboard`\n\u27e851\u27e9 https://docs.rs/crossterm/latest/crossterm/#command-execution: \u00a7\n\u27e852\u27e9 https://docs.rs/crossterm/latest/crossterm/#lazy-execution: Lazy Execution\n\u27e853\u27e9 https://docs.rs/crossterm/latest/crossterm/#direct-execution: Direct Execution\n\u27e854\u27e9 https://doc.rust-lang.org/std/io/trait.Write.html#tymethod.flush: Write::flush\n\u27e855\u27e9 https://doc.rust-lang.org/std/io/trait.Write.html: std::io::Write\n\u27e856\u27e9 https://doc.rust-lang.org/std/io/fn.stdout.html: std::io::stdout\n\u27e857\u27e9 https://doc.rust-lang.org/std/io/fn.stderr.html: std::io::stderr\n\u27e858\u27e9 https://docs.rs/crossterm/latest/crossterm/#examples: \u00a7\n\u27e859\u27e9 https://docs.rs/crossterm/latest/crossterm/trait.QueueableCommand.html: queue\n\u27e860\u27e9 https://docs.rs/crossterm/latest/crossterm/macro.queue.html: queue\n\u27e861\u27e9 https://docs.rs/crossterm/latest/crossterm/#examples-1: \u00a7\n\u27e862\u27e9 https://docs.rs/crossterm/latest/crossterm/trait.ExecutableCommand.html: execute\n\u27e863\u27e9 https://docs.rs/crossterm/latest/crossterm/macro.execute.html: execute\n\u27e864\u27e9 https://docs.rs/crossterm/latest/crossterm/#examples-2: \u00a7\n\u27e865\u27e9 https://docs.rs/crossterm/latest/crossterm/#feature-flags: \u00a7\n\u27e866\u27e9 https://docs.rs/crossterm/latest/crossterm/#default-features: \u00a7\n\u27e867\u27e9 https://docs.rs/crossterm/latest/crossterm/event/enum.Event.html#variant.Paste: variant crossterm::event::Event::Paste - `Event::Paste`\n\u27e868\u27e9 https://docs.rs/crossterm/latest/crossterm/event/struct.EventStream.html: struct crossterm::event::EventStream - EventStream\n\u27e869\u27e9 https://docs.rs/serde/1.0.219/x86_64-unknown-linux-gnu/serde/index.html: mod serde - `serde`\n\u27e870\u27e9 https://docs.rs/crossterm/latest/crossterm/#modules: \u00a7\n\u27e871\u27e9 https://docs.rs/crossterm/latest/crossterm/tty/index.html: mod crossterm::tty - tty\n\u27e872\u27e9 https://docs.rs/crossterm/latest/crossterm/#macros: \u00a7\n\u27e873\u27e9 https://docs.rs/crossterm/latest/crossterm/#traits: \u00a7\n\u27e874\u27e9 https://docs.rs/crossterm/latest/crossterm/trait.Command.html: trait crossterm::Command - Command\n\u27e875\u27e9 https://docs.rs/crossterm/latest/crossterm/trait.SynchronizedUpdate.html: trait crossterm::SynchronizedUpdate - SynchronizedUpdate\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 15222,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "113933.7137854"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/crossterm",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [64 releases](https://lib.rs/crates/crossterm/versions)\n0.29.0 |  Apr 5, 2025   \n---|---  \n0.28.1 |  Aug 1, 2024   \n0.28.0 |  ~~Jul 31, 2024~~  \n0.27.0 |  Aug 6, 2023   \n0.2.0 |  Jan 27, 2018   \n#**4** in [Command-line interface](https://lib.rs/command-line-interface \"Crates to help create command line interfaces, such as argument parsers, line-editing, or output coloring and formatting.\")\nDownload history 801419/week @ 2025-03-07 772073/week @ 2025-03-14 695330/week @ 2025-03-21 746242/week @ 2025-03-28 934585/week @ 2025-04-04 873765/week @ 2025-04-11 837807/week @ 2025-04-18 808476/week @ 2025-04-25 837621/week @ 2025-05-02 875704/week @ 2025-05-09 899393/week @ 2025-05-16 749383/week @ 2025-05-23 835012/week @ 2025-05-30 860534/week @ 2025-06-06 875266/week @ 2025-06-13 898725/week @ 2025-06-20\n**3,613,802** downloads per month Used in [**3,923** crates (2,328 directly)](https://lib.rs/crates/crossterm/rev)\n**MIT** license \n415KB  7.5K  SLoC\n# ![](https://img.gs/czjpqfbdkz/440/https://raw.githubusercontent.com/crossterm-rs/crossterm/36d95b26a26e64b0f8c12edfe11f410a6d56a812/docs/crossterm_full.png)\n[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=Z8QK6XU749JB2) ![Travis](https://img.gs/czjpqfbdkz/full/https://travis-ci.org/crossterm-rs/crossterm.svg?branch=master) [![Latest Version](https://img.shields.io/crates/v/crossterm.svg)](https://crates.io/crates/crossterm) [![MIT](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/crossterm-rs/crossterm/blob/36d95b26a26e64b0f8c12edfe11f410a6d56a812/LICENSE) [![docs](https://img.gs/czjpqfbdkz/full/https://docs.rs/crossterm/badge.svg)](https://docs.rs/crossterm/) ![Lines of Code](https://img.gs/czjpqfbdkz/full/https://tokei.rs/b1/github/crossterm-rs/crossterm?category=code) [![Join us on Discord](https://img.shields.io/discord/560857607196377088.svg?logo=discord)](https://discord.gg/K4nyTDB)\n# Cross-platform Terminal Manipulation Library\nCrossterm is a pure-rust, terminal manipulation library that makes it possible to write cross-platform text-based interfaces (see [features](https://lib.rs/crates/crossterm#readme-features)). It supports all UNIX and Windows terminals down to Windows 7 (not all terminals are tested, see [Tested Terminals](https://lib.rs/crates/crossterm#readme-tested-terminals) for more info).\n## Table of Contents\n  * [Cross-platform Terminal Manipulation Library](https://lib.rs/crates/crossterm#readme-cross-platform-terminal-manipulation-library)\n    * [Table of Contents](https://lib.rs/crates/crossterm#readme-table-of-contents)\n    * [Features](https://lib.rs/crates/crossterm#readme-features)\n      * [Tested Terminals](https://lib.rs/crates/crossterm#readme-tested-terminals)\n    * [Getting Started](https://lib.rs/crates/crossterm#readme-getting-started)\n      * [Feature Flags](https://lib.rs/crates/crossterm#readme-feature-flags)\n      * [Dependency Justification](https://lib.rs/crates/crossterm#readme-dependency-justification)\n      * [Other Resources](https://lib.rs/crates/crossterm#readme-other-resources)\n    * [Used By](https://lib.rs/crates/crossterm#readme-used-by)\n    * [Contributing](https://lib.rs/crates/crossterm#readme-contributing)\n    * [Authors](https://lib.rs/crates/crossterm#readme-authors)\n    * [License](https://lib.rs/crates/crossterm#readme-license)\n\n\n## Features\n  * Cross-platform\n  * Multi-threaded (send, sync)\n  * Detailed documentation\n  * Few dependencies\n  * Full control over writing and flushing output buffer\n  * Is tty\n  * Cursor \n    * Move the cursor N times (up, down, left, right)\n    * Move to previous / next line\n    * Move to column\n    * Set/get the cursor position\n    * Store the cursor position and restore to it later\n    * Hide/show the cursor\n    * Enable/disable cursor blinking (not all terminals do support this feature)\n  * Styled output \n    * Foreground color (16 base colors)\n    * Background color (16 base colors)\n    * 256 (ANSI) color support (Windows 10 and UNIX only)\n    * RGB color support (Windows 10 and UNIX only)\n    * Text attributes like bold, italic, underscore, crossed, etc\n  * Terminal \n    * Clear (all lines, current line, from cursor down and up, until new line)\n    * Scroll up, down\n    * Set/get the terminal size\n    * Exit current process\n    * Alternate screen\n    * Raw screen\n    * Set terminal title\n    * Enable/disable line wrapping\n  * Event \n    * Input Events\n    * Mouse Events (press, release, position, button, drag)\n    * Terminal Resize Events\n    * Advanced modifier (SHIFT | ALT | CTRL) support for both mouse and key events and\n    * futures Stream (feature 'event-stream')\n    * Poll/read API\n\n\n### Tested Terminals\n  * Console Host \n    * Windows 10 (Pro)\n    * Windows 8.1 (N)\n  * Windows Terminal \n    * Windows 10 x86_64 (Enterprise)\n    * Windows 11 arm64 (Enterprise)\n  * Ubuntu Desktop Terminal \n    * Ubuntu 23.04 64-bit\n    * Ubuntu 17.10\n    * Pop!_OS ( Ubuntu ) 20.04\n  * (Arch, Manjaro) KDE Konsole\n  * (Arch, NixOS) Kitty\n  * Linux Mint\n  * (OpenSuse) Alacritty\n  * (Chrome OS) Crostini\n  * Apple \n    * macOS Monterey 12.7.1 (Intel-Chip)\n    * macOS Sonama 14.4 (M1 Max, Apple Silicon-Chip)\n\n\nThis crate supports all UNIX terminals and Windows terminals down to Windows 7; however, not all of the terminals have been tested. If you have used this library for a terminal other than the above list without issues, then feel free to add it to the above list - I really would appreciate it!\n## Getting Started\n_see the[examples directory](https://github.com/crossterm-rs/crossterm/blob/36d95b26a26e64b0f8c12edfe11f410a6d56a812/examples/) and [documentation](https://docs.rs/crossterm/) for more advanced examples._\nClick to show Cargo.toml.  ```\n```[``dependencies``]`\n`crossterm ``=` ``\"`0.27`\"``\n``\n```\n```\n``use` `std`::```io`::````{`stdout`,` Write```}```;`\n`use` `crossterm`::````{`\n  execute`,`\n  `style`::```{`Color`,` Print`,` ResetColor`,` SetBackgroundColor`,` SetForegroundColor`}``,`\n  ExecutableCommand`,`\n  event`,`\n```}```;`\n``fn` `main`````(````)```` ``->` `std`::```io`::````Result``<``(``)``>``` ````{`\n  ``//` using the macro`\n  `execute!``(`\n    `stdout``(``)``,`\n    SetForegroundColor`(``Color`::``Blue`)``,`\n    SetBackgroundColor`(``Color`::``Red`)``,`\n    Print`(```\"`Styled text here.`\"```)``,`\n    ResetColor\n  `)``?``;`\n  ``//` or using functions`\n  `stdout``(``)`\n    `.``execute``(`SetForegroundColor`(``Color`::``Blue`)``)``?`\n    `.``execute``(`SetBackgroundColor`(``Color`::``Red`)``)``?`\n    `.``execute``(`Print`(```\"`Styled text here.`\"```)``)``?`\n    `.``execute``(`ResetColor`)``?``;`\n  \n  `Ok``(``(``)``)`\n```}```\n`\n```\n\nCheckout this [list](https://docs.rs/crossterm/latest/crossterm/index.html#supported-commands) with all possible commands.\n### Feature Flags\n```\n```[``dependencies.crossterm``]`\n`version ``=` ``\"`0.27`\"``\n`features ``=` ``[```\"`event-stream`\"```]`` \n``\n```\nFeature | Description  \n---|---  \n``event-stream`` | ```futures`::``Stream`` producing ````Result``<`Event`>````.  \n``serde`` | (De)serializing of events.  \n``events`` | Reading input/system events (enabled by default)  \n``filedescriptor`` | Use raw filedescriptor for all events rather then mio dependency  \n``derive-more`` | Adds ``is_`*``` helper functions for event types  \n``osc52`` | Enables crossterm::clipboard  \nTo use crossterm as a very thin layer you can disable the ``events`` feature or use ``filedescriptor`` feature. This can disable ``mio`` / ``signal-hook`` / ``signal-hook-mio`` dependencies.\n### Dependency Justification\nDependency | Used for | Included  \n---|---|---  \n``bitflags`` | ``KeyModifiers``, those are differ based on input. | always  \n``parking_lot`` | locking ``RwLock``s with a timeout, const mutexes. | always  \n``libc`` | UNIX terminal_size/raw modes/set_title and several other low level functionality. | optional (``events`` feature), UNIX only  \n``Mio`` | event readiness polling, waking up poller | optional (``events`` feature), UNIX only  \n``signal-hook`` | signal-hook is used to handle terminal resize SIGNAL with Mio. | optional (``events`` feature),UNIX only  \n``winapi`` | Used for low-level windows system calls which ANSI codes can't replace | windows only  \n``futures-core`` | For async stream of events | only with ``event-stream`` feature flag  \n``serde`` | _**ser**_ ializing and _**de**_ serializing of events | only with ``serde`` feature flag  \n``derive_more`` | Adds ``is_`*``` helper functions for event types | optional (``derive-more`` feature), included by default  \n``base64`` | Encoding clipboard data for OSC52 sequences in crossterm::clipboard | only with ``osc52`` feature flag  \n### Other Resources\n  * [API documentation](https://docs.rs/crossterm/)\n  * [Deprecated examples repository](https://github.com/crossterm-rs/examples)\n\n\n## Used By\n  * [Broot](https://dystroy.org/broot/)\n  * [Cursive](https://github.com/gyscos/Cursive)\n  * [Ratatui](https://github.com/ratatui/ratatui)\n  * [Rust-sloth](https://github.com/ecumene/rust-sloth)\n  * [Rusty-rain](https://github.com/cowboy8625/rusty-rain)\n\n\n## Contributing\nWe highly appreciate when anyone contributes to this crate. Before you do, please, read the [Contributing](https://github.com/crossterm-rs/crossterm/blob/36d95b26a26e64b0f8c12edfe11f410a6d56a812/docs/CONTRIBUTING.md) guidelines.\n## Authors\n  * **Timon Post** - _Project Owner & creator_\n\n\n## License\nThis project, ``crossterm`` and all its sub-crates: ``crossterm_screen``, ``crossterm_cursor``, ``crossterm_style``, ``crossterm_input``, ``crossterm_terminal``, ``crossterm_winapi``, ``crossterm_utils`` are licensed under the MIT License - see the [LICENSE](https://github.com/crossterm-rs/crossterm/blob/master/LICENSE) file for details.\n#### Dependencies\n~2\u201311MB  ~148K SLoC\n  * [osc52?](https://lib.rs/crates/crossterm/features#feature-osc52 \"optional feature\") [base64](https://lib.rs/crates/base64 \"new\") 0.22\n  * [bitflags](https://lib.rs/crates/bitflags \"new\") 2.9\n  * [windows?](https://lib.rs/crates/crossterm/features#feature-windows \"optional feature\") [crossterm_winapi](https://lib.rs/crates/crossterm_winapi \"0.9.1\") win\n  * [windows?](https://lib.rs/crates/crossterm/features#feature-windows \"optional feature\") [winapi](https://lib.rs/crates/winapi \"0.3.9\")[+winuser](https://lib.rs/crates/winapi/features#feature-winuser)[+winerror](https://lib.rs/crates/winapi/features#feature-winerror) win\n  * [derive-more](https://lib.rs/crates/crossterm/features#feature-derive-more \"default feature\") [derive_more](https://lib.rs/crates/derive_more \"new\") 2.0[+is_variant](https://lib.rs/crates/derive_more/features#feature-is_variant)\n  * [document-features](https://lib.rs/crates/document-features \"0.2.11\")\n  * [use-dev-tty?](https://lib.rs/crates/crossterm/features#feature-use-dev-tty \"optional feature\") [filedescriptor](https://lib.rs/crates/filedescriptor \"0.8\") unix\n  * [ optional ](https://lib.rs/crates/crossterm/features#feature-libc \"libc is optional feature\") [libc](https://lib.rs/crates/libc \"0.2\") unix\n  * [rustix](https://lib.rs/crates/rustix \"1\")[+std](https://lib.rs/crates/rustix/features#feature-std)[+stdio](https://lib.rs/crates/rustix/features#feature-stdio)[+termios](https://lib.rs/crates/rustix/features#feature-termios) unix\n  * [event-stream?](https://lib.rs/crates/crossterm/features#feature-event-stream \"optional feature\") [futures-core](https://lib.rs/crates/futures-core \"0.3\")\n  * [events?](https://lib.rs/crates/crossterm/features#feature-events \"optional feature\") [mio](https://lib.rs/crates/mio \"1.0\")[+os-poll](https://lib.rs/crates/mio/features#feature-os-poll) unix\n  * [events?](https://lib.rs/crates/crossterm/features#feature-events \"optional feature\") [signal-hook](https://lib.rs/crates/signal-hook \"0.3.17\") unix\n  * [events?](https://lib.rs/crates/crossterm/features#feature-events \"optional feature\") [signal-hook-mio](https://lib.rs/crates/signal-hook-mio \"0.2.4\")[+support-v1_0](https://lib.rs/crates/signal-hook-mio/features#feature-support-v1_0) unix\n  * [parking_lot](https://lib.rs/crates/parking_lot \"0.12\")\n  * [ optional ](https://lib.rs/crates/crossterm/features#feature-serde \"serde is optional feature\") [serde](https://lib.rs/crates/serde \"1.0\")[+derive](https://lib.rs/crates/serde/features#feature-derive)\n\n\n  * dev  [async-std](https://lib.rs/crates/async-std \"outdated\") 1.13\n  * dev  [futures](https://lib.rs/crates/futures \"0.3\")\n  * dev  [futures-timer](https://lib.rs/crates/futures-timer \"3.0\")\n  * dev  [serde_json](https://lib.rs/crates/serde_json \"1.0\")\n  * dev  [serial_test](https://lib.rs/crates/serial_test \"new\") 3.0\n  * dev  [temp-env](https://lib.rs/crates/temp-env \"0.3.6\")\n  * dev  [tokio](https://lib.rs/crates/tokio \"1.44\")[+full](https://lib.rs/crates/tokio/features#feature-full)\n\n\n#### [Other feature](https://lib.rs/crates/crossterm/features)\n  * [bracketed-paste](https://lib.rs/crates/crossterm/features#feature-bracketed-paste)\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  64 releases\u27e81\u27e9\n0.29.0 |  Apr 5, 2025   \n---|---  \n0.28.1 |  Aug 1, 2024   \n0.28.0 |  ~~Jul 31, 2024~~  \n0.27.0 |  Aug 6, 2023   \n0.2.0 |  Jan 27, 2018   \n#**4** in Command-line interface\u27e82\u27e9\nDownload history 801419/week @ 2025-03-07 772073/week @ 2025-03-14 695330/week @ 2025-03-21 746242/week @ 2025-03-28 934585/week @ 2025-04-04 873765/week @ 2025-04-11 837807/week @ 2025-04-18 808476/week @ 2025-04-25 837621/week @ 2025-05-02 875704/week @ 2025-05-09 899393/week @ 2025-05-16 749383/week @ 2025-05-23 835012/week @ 2025-05-30 860534/week @ 2025-06-06 875266/week @ 2025-06-13 898725/week @ 2025-06-20\n**3,613,802** downloads per month Used in **3,923** crates (2,328 directly)\u27e83\u27e9\n**MIT** license \n415KB  7.5K  SLoC\n# ![](https://img.gs/czjpqfbdkz/440/https://raw.githubusercontent.com/crossterm-rs/crossterm/36d95b26a26e64b0f8c12edfe11f410a6d56a812/docs/crossterm_full.png)\n![Donate\u27e84\u27e9](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=Z8QK6XU749JB2) ![Travis\u27e85\u27e9] ![Latest Version\u27e86\u27e9](https://crates.io/crates/crossterm) ![MIT\u27e87\u27e9](https://github.com/crossterm-rs/crossterm/blob/36d95b26a26e64b0f8c12edfe11f410a6d56a812/LICENSE) ![docs\u27e88\u27e9](https://docs.rs/crossterm/) ![Lines of Code\u27e89\u27e9] ![Join us on Discord\u27e810\u27e9](https://discord.gg/K4nyTDB)\n# Cross-platform Terminal Manipulation Library\nCrossterm is a pure-rust, terminal manipulation library that makes it possible to write cross-platform text-based interfaces (see features\u27e811\u27e9). It supports all UNIX and Windows terminals down to Windows 7 (not all terminals are tested, see Tested Terminals\u27e812\u27e9 for more info).\n## Table of Contents\n  * Cross-platform Terminal Manipulation Library\u27e813\u27e9\n    * Table of Contents\u27e814\u27e9\n    * Features\u27e811\u27e9\n      * Tested Terminals\u27e812\u27e9\n    * Getting Started\u27e815\u27e9\n      * Feature Flags\u27e816\u27e9\n      * Dependency Justification\u27e817\u27e9\n      * Other Resources\u27e818\u27e9\n    * Used By\u27e819\u27e9\n    * Contributing\u27e820\u27e9\n    * Authors\u27e821\u27e9\n    * License\u27e822\u27e9\n\n\n## Features\n  * Cross-platform\n  * Multi-threaded (send, sync)\n  * Detailed documentation\n  * Few dependencies\n  * Full control over writing and flushing output buffer\n  * Is tty\n  * Cursor \n    * Move the cursor N times (up, down, left, right)\n    * Move to previous / next line\n    * Move to column\n    * Set/get the cursor position\n    * Store the cursor position and restore to it later\n    * Hide/show the cursor\n    * Enable/disable cursor blinking (not all terminals do support this feature)\n  * Styled output \n    * Foreground color (16 base colors)\n    * Background color (16 base colors)\n    * 256 (ANSI) color support (Windows 10 and UNIX only)\n    * RGB color support (Windows 10 and UNIX only)\n    * Text attributes like bold, italic, underscore, crossed, etc\n  * Terminal \n    * Clear (all lines, current line, from cursor down and up, until new line)\n    * Scroll up, down\n    * Set/get the terminal size\n    * Exit current process\n    * Alternate screen\n    * Raw screen\n    * Set terminal title\n    * Enable/disable line wrapping\n  * Event \n    * Input Events\n    * Mouse Events (press, release, position, button, drag)\n    * Terminal Resize Events\n    * Advanced modifier (SHIFT | ALT | CTRL) support for both mouse and key events and\n    * futures Stream (feature 'event-stream')\n    * Poll/read API\n\n\n### Tested Terminals\n  * Console Host \n    * Windows 10 (Pro)\n    * Windows 8.1 (N)\n  * Windows Terminal \n    * Windows 10 x86_64 (Enterprise)\n    * Windows 11 arm64 (Enterprise)\n  * Ubuntu Desktop Terminal \n    * Ubuntu 23.04 64-bit\n    * Ubuntu 17.10\n    * Pop!_OS ( Ubuntu ) 20.04\n  * (Arch, Manjaro) KDE Konsole\n  * (Arch, NixOS) Kitty\n  * Linux Mint\n  * (OpenSuse) Alacritty\n  * (Chrome OS) Crostini\n  * Apple \n    * macOS Monterey 12.7.1 (Intel-Chip)\n    * macOS Sonama 14.4 (M1 Max, Apple Silicon-Chip)\n\n\nThis crate supports all UNIX terminals and Windows terminals down to Windows 7; however, not all of the terminals have been tested. If you have used this library for a terminal other than the above list without issues, then feel free to add it to the above list - I really would appreciate it!\n## Getting Started\n_see theexamples directory\u27e823\u27e9 and documentation\u27e824\u27e9 for more advanced examples._\nClick to show Cargo.toml.  ```\n```[``dependencies``]`\n`crossterm ``=` ``\"`0.27`\"``\n``\n```\n```\n``use` `std`::```io`::````{`stdout`,` Write```}```;`\n`use` `crossterm`::````{`\n  execute`,`\n  `style`::```{`Color`,` Print`,` ResetColor`,` SetBackgroundColor`,` SetForegroundColor`}``,`\n  ExecutableCommand`,`\n  event`,`\n```}```;`\n``fn` `main`````(````)```` ``->` `std`::```io`::````Result``<``(``)``>``` ````{`\n  ``//` using the macro`\n  `execute!``(`\n    `stdout``(``)``,`\n    SetForegroundColor`(``Color`::``Blue`)``,`\n    SetBackgroundColor`(``Color`::``Red`)``,`\n    Print`(```\"`Styled text here.`\"```)``,`\n    ResetColor\n  `)``?``;`\n  ``//` or using functions`\n  `stdout``(``)`\n    `.``execute``(`SetForegroundColor`(``Color`::``Blue`)``)``?`\n    `.``execute``(`SetBackgroundColor`(``Color`::``Red`)``)``?`\n    `.``execute``(`Print`(```\"`Styled text here.`\"```)``)``?`\n    `.``execute``(`ResetColor`)``?``;`\n  \n  `Ok``(``(``)``)`\n```}```\n`\n```\n\nCheckout this list\u27e825\u27e9 with all possible commands.\n### Feature Flags\n```\n```[``dependencies.crossterm``]`\n`version ``=` ``\"`0.27`\"``\n`features ``=` ``[```\"`event-stream`\"```]`` \n``\n```\nFeature | Description  \n---|---  \n``event-stream`` | ```futures`::``Stream`` producing ````Result``<`Event`>````.  \n``serde`` | (De)serializing of events.  \n``events`` | Reading input/system events (enabled by default)  \n``filedescriptor`` | Use raw filedescriptor for all events rather then mio dependency  \n``derive-more`` | Adds ``is_`*``` helper functions for event types  \n``osc52`` | Enables crossterm::clipboard  \nTo use crossterm as a very thin layer you can disable the ``events`` feature or use ``filedescriptor`` feature. This can disable ``mio`` / ``signal-hook`` / ``signal-hook-mio`` dependencies.\n### Dependency Justification\nDependency | Used for | Included  \n---|---|---  \n``bitflags`` | ``KeyModifiers``, those are differ based on input. | always  \n``parking_lot`` | locking ``RwLock``s with a timeout, const mutexes. | always  \n``libc`` | UNIX terminal_size/raw modes/set_title and several other low level functionality. | optional (``events`` feature), UNIX only  \n``Mio`` | event readiness polling, waking up poller | optional (``events`` feature), UNIX only  \n``signal-hook`` | signal-hook is used to handle terminal resize SIGNAL with Mio. | optional (``events`` feature),UNIX only  \n``winapi`` | Used for low-level windows system calls which ANSI codes can't replace | windows only  \n``futures-core`` | For async stream of events | only with ``event-stream`` feature flag  \n``serde`` | _**ser**_ ializing and _**de**_ serializing of events | only with ``serde`` feature flag  \n``derive_more`` | Adds ``is_`*``` helper functions for event types | optional (``derive-more`` feature), included by default  \n``base64`` | Encoding clipboard data for OSC52 sequences in crossterm::clipboard | only with ``osc52`` feature flag  \n### Other Resources\n  * API documentation\u27e824\u27e9\n  * Deprecated examples repository\u27e826\u27e9\n\n\n## Used By\n  * Broot\u27e827\u27e9\n  * Cursive\u27e828\u27e9\n  * Ratatui\u27e829\u27e9\n  * Rust-sloth\u27e830\u27e9\n  * Rusty-rain\u27e831\u27e9\n\n\n## Contributing\nWe highly appreciate when anyone contributes to this crate. Before you do, please, read the Contributing\u27e832\u27e9 guidelines.\n## Authors\n  * **Timon Post** - _Project Owner & creator_\n\n\n## License\nThis project, ``crossterm`` and all its sub-crates: ``crossterm_screen``, ``crossterm_cursor``, ``crossterm_style``, ``crossterm_input``, ``crossterm_terminal``, ``crossterm_winapi``, ``crossterm_utils`` are licensed under the MIT License - see the LICENSE\u27e833\u27e9 file for details.\n#### Dependencies\n~2\u201311MB  ~148K SLoC\n  * osc52?\u27e834\u27e9 base64\u27e835\u27e9 0.22\n  * bitflags\u27e836\u27e9 2.9\n  * windows?\u27e837\u27e9 crossterm_winapi\u27e838\u27e9 win\n  * windows?\u27e837\u27e9 winapi\u27e839\u27e9+winuser\u27e840\u27e9+winerror\u27e841\u27e9 win\n  * derive-more\u27e842\u27e9 derive_more\u27e843\u27e9 2.0+is_variant\u27e844\u27e9\n  * document-features\u27e845\u27e9\n  * use-dev-tty?\u27e846\u27e9 filedescriptor\u27e847\u27e9 unix\n  *  optional \u27e848\u27e9 libc\u27e849\u27e9 unix\n  * rustix\u27e850\u27e9+std\u27e851\u27e9+stdio\u27e852\u27e9+termios\u27e853\u27e9 unix\n  * event-stream?\u27e854\u27e9 futures-core\u27e855\u27e9\n  * events?\u27e856\u27e9 mio\u27e857\u27e9+os-poll\u27e858\u27e9 unix\n  * events?\u27e856\u27e9 signal-hook\u27e859\u27e9 unix\n  * events?\u27e856\u27e9 signal-hook-mio\u27e860\u27e9+support-v1_0\u27e861\u27e9 unix\n  * parking_lot\u27e862\u27e9\n  *  optional \u27e863\u27e9 serde\u27e864\u27e9+derive\u27e865\u27e9\n\n\n  * dev  async-std\u27e866\u27e9 1.13\n  * dev  futures\u27e867\u27e9\n  * dev  futures-timer\u27e868\u27e9\n  * dev  serde_json\u27e869\u27e9\n  * dev  serial_test\u27e870\u27e9 3.0\n  * dev  temp-env\u27e871\u27e9\n  * dev  tokio\u27e872\u27e9+full\u27e873\u27e9\n\n\n#### Other feature\u27e874\u27e9\n  * bracketed-paste\u27e875\u27e9\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/crossterm/versions: 64 releases\n\u27e82\u27e9 https://lib.rs/command-line-interface: Crates to help create command line interfaces, such as argument parsers, line-editing, or output coloring and formatting. - Command-line interface\n\u27e83\u27e9 https://lib.rs/crates/crossterm/rev: **3,923** crates (2,328 directly)\n\u27e84\u27e9 https://img.shields.io/badge/Donate-PayPal-green.svg: ![Donate\n\u27e85\u27e9 https://img.gs/czjpqfbdkz/full/https://travis-ci.org/crossterm-rs/crossterm.svg?branch=master: Travis\n\u27e86\u27e9 https://img.shields.io/crates/v/crossterm.svg: ![Latest Version\n\u27e87\u27e9 https://img.shields.io/badge/license-MIT-blue.svg: ![MIT\n\u27e88\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/crossterm/badge.svg: ![docs\n\u27e89\u27e9 https://img.gs/czjpqfbdkz/full/https://tokei.rs/b1/github/crossterm-rs/crossterm?category=code: Lines of Code\n\u27e810\u27e9 https://img.shields.io/discord/560857607196377088.svg?logo=discord: ![Join us on Discord\n\u27e811\u27e9 https://lib.rs/crates/crossterm#readme-features: features\n\u27e812\u27e9 https://lib.rs/crates/crossterm#readme-tested-terminals: Tested Terminals\n\u27e813\u27e9 https://lib.rs/crates/crossterm#readme-cross-platform-terminal-manipulation-library: Cross-platform Terminal Manipulation Library\n\u27e814\u27e9 https://lib.rs/crates/crossterm#readme-table-of-contents: Table of Contents\n\u27e815\u27e9 https://lib.rs/crates/crossterm#readme-getting-started: Getting Started\n\u27e816\u27e9 https://lib.rs/crates/crossterm#readme-feature-flags: Feature Flags\n\u27e817\u27e9 https://lib.rs/crates/crossterm#readme-dependency-justification: Dependency Justification\n\u27e818\u27e9 https://lib.rs/crates/crossterm#readme-other-resources: Other Resources\n\u27e819\u27e9 https://lib.rs/crates/crossterm#readme-used-by: Used By\n\u27e820\u27e9 https://lib.rs/crates/crossterm#readme-contributing: Contributing\n\u27e821\u27e9 https://lib.rs/crates/crossterm#readme-authors: Authors\n\u27e822\u27e9 https://lib.rs/crates/crossterm#readme-license: License\n\u27e823\u27e9 https://github.com/crossterm-rs/crossterm/blob/36d95b26a26e64b0f8c12edfe11f410a6d56a812/examples/: examples directory\n\u27e824\u27e9 https://docs.rs/crossterm/: documentation\n\u27e825\u27e9 https://docs.rs/crossterm/latest/crossterm/index.html#supported-commands: list\n\u27e826\u27e9 https://github.com/crossterm-rs/examples: Deprecated examples repository\n\u27e827\u27e9 https://dystroy.org/broot/: Broot\n\u27e828\u27e9 https://github.com/gyscos/Cursive: Cursive\n\u27e829\u27e9 https://github.com/ratatui/ratatui: Ratatui\n\u27e830\u27e9 https://github.com/ecumene/rust-sloth: Rust-sloth\n\u27e831\u27e9 https://github.com/cowboy8625/rusty-rain: Rusty-rain\n\u27e832\u27e9 https://github.com/crossterm-rs/crossterm/blob/36d95b26a26e64b0f8c12edfe11f410a6d56a812/docs/CONTRIBUTING.md: Contributing\n\u27e833\u27e9 https://github.com/crossterm-rs/crossterm/blob/master/LICENSE: LICENSE\n\u27e834\u27e9 https://lib.rs/crates/crossterm/features#feature-osc52: optional feature - osc52?\n\u27e835\u27e9 https://lib.rs/crates/base64: new - base64\n\u27e836\u27e9 https://lib.rs/crates/bitflags: new - bitflags\n\u27e837\u27e9 https://lib.rs/crates/crossterm/features#feature-windows: optional feature - windows?\n\u27e838\u27e9 https://lib.rs/crates/crossterm_winapi: 0.9.1 - crossterm_winapi\n\u27e839\u27e9 https://lib.rs/crates/winapi: 0.3.9 - winapi\n\u27e840\u27e9 https://lib.rs/crates/winapi/features#feature-winuser: +winuser\n\u27e841\u27e9 https://lib.rs/crates/winapi/features#feature-winerror: +winerror\n\u27e842\u27e9 https://lib.rs/crates/crossterm/features#feature-derive-more: default feature - derive-more\n\u27e843\u27e9 https://lib.rs/crates/derive_more: new - derive_more\n\u27e844\u27e9 https://lib.rs/crates/derive_more/features#feature-is_variant: +is_variant\n\u27e845\u27e9 https://lib.rs/crates/document-features: 0.2.11 - document-features\n\u27e846\u27e9 https://lib.rs/crates/crossterm/features#feature-use-dev-tty: optional feature - use-dev-tty?\n\u27e847\u27e9 https://lib.rs/crates/filedescriptor: 0.8 - filedescriptor\n\u27e848\u27e9 https://lib.rs/crates/crossterm/features#feature-libc: libc is optional feature -  optional \n\u27e849\u27e9 https://lib.rs/crates/libc: 0.2 - libc\n\u27e850\u27e9 https://lib.rs/crates/rustix: 1 - rustix\n\u27e851\u27e9 https://lib.rs/crates/rustix/features#feature-std: +std\n\u27e852\u27e9 https://lib.rs/crates/rustix/features#feature-stdio: +stdio\n\u27e853\u27e9 https://lib.rs/crates/rustix/features#feature-termios: +termios\n\u27e854\u27e9 https://lib.rs/crates/crossterm/features#feature-event-stream: optional feature - event-stream?\n\u27e855\u27e9 https://lib.rs/crates/futures-core: 0.3 - futures-core\n\u27e856\u27e9 https://lib.rs/crates/crossterm/features#feature-events: optional feature - events?\n\u27e857\u27e9 https://lib.rs/crates/mio: 1.0 - mio\n\u27e858\u27e9 https://lib.rs/crates/mio/features#feature-os-poll: +os-poll\n\u27e859\u27e9 https://lib.rs/crates/signal-hook: 0.3.17 - signal-hook\n\u27e860\u27e9 https://lib.rs/crates/signal-hook-mio: 0.2.4 - signal-hook-mio\n\u27e861\u27e9 https://lib.rs/crates/signal-hook-mio/features#feature-support-v1_0: +support-v1_0\n\u27e862\u27e9 https://lib.rs/crates/parking_lot: 0.12 - parking_lot\n\u27e863\u27e9 https://lib.rs/crates/crossterm/features#feature-serde: serde is optional feature -  optional \n\u27e864\u27e9 https://lib.rs/crates/serde: 1.0 - serde\n\u27e865\u27e9 https://lib.rs/crates/serde/features#feature-derive: +derive\n\u27e866\u27e9 https://lib.rs/crates/async-std: outdated - async-std\n\u27e867\u27e9 https://lib.rs/crates/futures: 0.3 - futures\n\u27e868\u27e9 https://lib.rs/crates/futures-timer: 3.0 - futures-timer\n\u27e869\u27e9 https://lib.rs/crates/serde_json: 1.0 - serde_json\n\u27e870\u27e9 https://lib.rs/crates/serial_test: new - serial_test\n\u27e871\u27e9 https://lib.rs/crates/temp-env: 0.3.6 - temp-env\n\u27e872\u27e9 https://lib.rs/crates/tokio: 1.44 - tokio\n\u27e873\u27e9 https://lib.rs/crates/tokio/features#feature-full: +full\n\u27e874\u27e9 https://lib.rs/crates/crossterm/features: Other feature\n\u27e875\u27e9 https://lib.rs/crates/crossterm/features#feature-bracketed-paste: bracketed-paste\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 13017,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "113934.1617131"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "scopeguard",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libscopeguard-b3036dac4c63d524.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libsmallvec-eb9c68e8246af032.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libbitflags-f060a9da6c32ce35.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.94",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\proc-macro2-e1ee9ee3dd80fd20\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\proc-macro2-e1ee9ee3dd80fd20\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\parking_lot_core-8bf117fcd88546af\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\parking_lot_core-8bf117fcd88546af\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\parking_lot_core-ba234acc5b3f5844\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.94",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\proc-macro2-26ba5a0b8e9c4cd4\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-segmentation@1.12.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-segmentation-1.12.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_segmentation",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-segmentation-1.12.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libunicode_segmentation-7f650e437387d8d1.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libunicode_segmentation-7f650e437387d8d1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "consoleapi",
                "handleapi",
                "impl-default",
                "processenv",
                "synchapi",
                "winbase",
                "winerror",
                "winuser"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\winapi-39cf2218b5e192b2\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\winapi-39cf2218b5e192b2\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#litrs@0.4.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\litrs-0.4.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "litrs",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\litrs-0.4.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\liblitrs-7c0df97d080944bb.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\liblitrs-7c0df97d080944bb.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "linked_libs": [
                "dylib=advapi32",
                "dylib=cfgmgr32",
                "dylib=gdi32",
                "dylib=kernel32",
                "dylib=msimg32",
                "dylib=opengl32",
                "dylib=synchronization",
                "dylib=user32",
                "dylib=winspool"
              ],
              "linked_paths": [],
              "cfgs": [
                "feature=\"ntstatus\"",
                "feature=\"excpt\"",
                "feature=\"ktmtypes\"",
                "feature=\"cfg\"",
                "feature=\"wincon\"",
                "feature=\"winnt\"",
                "feature=\"windef\"",
                "feature=\"vadefs\"",
                "feature=\"ntdef\"",
                "feature=\"minwinbase\"",
                "feature=\"wingdi\"",
                "feature=\"vcruntime\"",
                "feature=\"wincontypes\"",
                "feature=\"wtypesbase\"",
                "feature=\"basetsd\"",
                "feature=\"libloaderapi\"",
                "feature=\"minwindef\"",
                "feature=\"winreg\"",
                "feature=\"cfgmgr32\"",
                "feature=\"processthreadsapi\"",
                "feature=\"limits\"",
                "feature=\"guiddef\"",
                "feature=\"devpropdef\"",
                "feature=\"rpcndr\"",
                "feature=\"reason\"",
                "feature=\"fileapi\""
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\winapi-adea9414f8eb3a5b\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\lock_api-a9e715d952b9cda1\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\lock_api-a9e715d952b9cda1\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libparking_lot_core-1517acd07e33e121.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#convert_case@0.7.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\convert_case-0.7.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "convert_case",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\convert_case-0.7.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libconvert_case-5000162d7388b543.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libconvert_case-5000162d7388b543.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_const_fn_trait_bound"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\lock_api-b58b3b906f0a8342\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.94",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libproc_macro2-fdce389236429c42.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libproc_macro2-fdce389236429c42.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#document-features@0.2.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\document-features-0.2.11\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "document_features",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\document-features-0.2.11\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\document_features-b567261d8311bb5a.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\document_features-b567261d8311bb5a.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\document_features-b567261d8311bb5a.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\document_features-b567261d8311bb5a.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lock_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\liblock_api-8d187389174b18f4.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libquote-c266fdd689430737.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libquote-c266fdd689430737.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot-0.12.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot-0.12.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libparking_lot-a794489ecafb57bc.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "winapi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "consoleapi",
                "handleapi",
                "impl-default",
                "processenv",
                "synchapi",
                "winbase",
                "winerror",
                "winuser"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libwinapi-d7520c545091cc18.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossterm_winapi@0.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossterm_winapi-0.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossterm_winapi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossterm_winapi-0.9.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libcrossterm_winapi-d6ddcee4e29fb0f2.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.100",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.100\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.100\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "parsing",
                "printing",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libsyn-0a6df34434c420ef.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libsyn-0a6df34434c420ef.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#derive_more-impl@2.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\derive_more-impl-2.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "derive_more_impl",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\derive_more-impl-2.0.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "is_variant"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\derive_more_impl-31821315cd7d92b6.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\derive_more_impl-31821315cd7d92b6.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\derive_more_impl-31821315cd7d92b6.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\derive_more_impl-31821315cd7d92b6.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#derive_more@2.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\derive_more-2.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "derive_more",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\derive_more-2.0.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "is_variant",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libderive_more-6bb703a803be14e2.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpc0g7pj9e/crossterm-0.29.0#crossterm@0.29.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossterm",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "bracketed-paste",
                "default",
                "derive-more",
                "events",
                "windows"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libcrossterm-735a502bab7719c4.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.94",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\proc-macro2-e1ee9ee3dd80fd20\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\proc-macro2-e1ee9ee3dd80fd20\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.94",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\proc-macro2-26ba5a0b8e9c4cd4\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "consoleapi",
                "handleapi",
                "impl-default",
                "processenv",
                "synchapi",
                "winbase",
                "winerror",
                "winuser"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\winapi-39cf2218b5e192b2\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\winapi-39cf2218b5e192b2\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-segmentation@1.12.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-segmentation-1.12.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_segmentation",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-segmentation-1.12.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libunicode_segmentation-7f650e437387d8d1.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libunicode_segmentation-7f650e437387d8d1.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\parking_lot_core-8bf117fcd88546af\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\parking_lot_core-8bf117fcd88546af\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libsmallvec-eb9c68e8246af032.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "scopeguard",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libscopeguard-b3036dac4c63d524.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#litrs@0.4.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\litrs-0.4.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "litrs",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\litrs-0.4.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\liblitrs-7c0df97d080944bb.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\liblitrs-7c0df97d080944bb.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libbitflags-f060a9da6c32ce35.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.94",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libproc_macro2-fdce389236429c42.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libproc_macro2-fdce389236429c42.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\lock_api-a9e715d952b9cda1\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\lock_api-a9e715d952b9cda1\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#convert_case@0.7.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\convert_case-0.7.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "convert_case",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\convert_case-0.7.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libconvert_case-5000162d7388b543.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libconvert_case-5000162d7388b543.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "linked_libs": [
                "dylib=advapi32",
                "dylib=cfgmgr32",
                "dylib=gdi32",
                "dylib=kernel32",
                "dylib=msimg32",
                "dylib=opengl32",
                "dylib=synchronization",
                "dylib=user32",
                "dylib=winspool"
              ],
              "linked_paths": [],
              "cfgs": [
                "feature=\"ntstatus\"",
                "feature=\"excpt\"",
                "feature=\"ktmtypes\"",
                "feature=\"cfg\"",
                "feature=\"wincon\"",
                "feature=\"winnt\"",
                "feature=\"windef\"",
                "feature=\"vadefs\"",
                "feature=\"ntdef\"",
                "feature=\"minwinbase\"",
                "feature=\"wingdi\"",
                "feature=\"vcruntime\"",
                "feature=\"wincontypes\"",
                "feature=\"wtypesbase\"",
                "feature=\"basetsd\"",
                "feature=\"libloaderapi\"",
                "feature=\"minwindef\"",
                "feature=\"winreg\"",
                "feature=\"cfgmgr32\"",
                "feature=\"processthreadsapi\"",
                "feature=\"limits\"",
                "feature=\"guiddef\"",
                "feature=\"devpropdef\"",
                "feature=\"rpcndr\"",
                "feature=\"reason\"",
                "feature=\"fileapi\""
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\winapi-adea9414f8eb3a5b\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\parking_lot_core-ba234acc5b3f5844\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#document-features@0.2.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\document-features-0.2.11\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "document_features",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\document-features-0.2.11\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\document_features-b567261d8311bb5a.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\document_features-b567261d8311bb5a.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\document_features-b567261d8311bb5a.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\document_features-b567261d8311bb5a.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libquote-c266fdd689430737.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libquote-c266fdd689430737.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_const_fn_trait_bound"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\build\\lock_api-b58b3b906f0a8342\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "winapi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "consoleapi",
                "handleapi",
                "impl-default",
                "processenv",
                "synchapi",
                "winbase",
                "winerror",
                "winuser"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libwinapi-d7520c545091cc18.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.100",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.100\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.100\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "parsing",
                "printing",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libsyn-0a6df34434c420ef.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libsyn-0a6df34434c420ef.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lock_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\liblock_api-8d187389174b18f4.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossterm_winapi@0.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossterm_winapi-0.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossterm_winapi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossterm_winapi-0.9.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libcrossterm_winapi-d6ddcee4e29fb0f2.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#derive_more-impl@2.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\derive_more-impl-2.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "derive_more_impl",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\derive_more-impl-2.0.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "is_variant"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\derive_more_impl-31821315cd7d92b6.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\derive_more_impl-31821315cd7d92b6.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\derive_more_impl-31821315cd7d92b6.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\derive_more_impl-31821315cd7d92b6.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libparking_lot_core-1517acd07e33e121.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#derive_more@2.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\derive_more-2.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "derive_more",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\derive_more-2.0.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "is_variant",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libderive_more-6bb703a803be14e2.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot-0.12.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot-0.12.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libparking_lot-a794489ecafb57bc.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpc0g7pj9e/crossterm-0.29.0#crossterm@0.29.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossterm",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> src\\event.rs:1449:30\n     |\n1449 |             KeyCode::F(n) => write!(f, \"F{}\", n),\n     |                              ^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n     = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n     |\n1449 -             KeyCode::F(n) => write!(f, \"F{}\", n),\n1449 +             KeyCode::F(n) => write!(f, \"F{n}\"),\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::uninlined_format_args)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 49939,
                        "byte_start": 49939,
                        "column_end": 43,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\event.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1449,
                        "line_start": 1449,
                        "suggested_replacement": "n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 43,
                            "text": "            KeyCode::F(n) => write!(f, \"F{}\", n),"
                          }
                        ]
                      },
                      {
                        "byte_end": 49944,
                        "byte_start": 49941,
                        "column_end": 48,
                        "column_start": 45,
                        "expansion": null,
                        "file_name": "src\\event.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1449,
                        "line_start": 1449,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 45,
                            "text": "            KeyCode::F(n) => write!(f, \"F{}\", n),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 49945,
                    "byte_start": 49926,
                    "column_end": 49,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\event.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1449,
                    "line_start": 1449,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 30,
                        "text": "            KeyCode::F(n) => write!(f, \"F{}\", n),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpc0g7pj9e/crossterm-0.29.0#crossterm@0.29.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossterm",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> src\\event.rs:1453:22\n     |\n1453 |                 c => write!(f, \"{}\", c),\n     |                      ^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1453 -                 c => write!(f, \"{}\", c),\n1453 +                 c => write!(f, \"{c}\"),\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 50128,
                        "byte_start": 50128,
                        "column_end": 34,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\event.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1453,
                        "line_start": 1453,
                        "suggested_replacement": "c",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 34,
                            "highlight_start": 34,
                            "text": "                c => write!(f, \"{}\", c),"
                          }
                        ]
                      },
                      {
                        "byte_end": 50133,
                        "byte_start": 50130,
                        "column_end": 39,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "src\\event.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1453,
                        "line_start": 1453,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 36,
                            "text": "                c => write!(f, \"{}\", c),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 50134,
                    "byte_start": 50116,
                    "column_end": 40,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\event.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1453,
                    "line_start": 1453,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 22,
                        "text": "                c => write!(f, \"{}\", c),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpc0g7pj9e/crossterm-0.29.0#crossterm@0.29.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossterm",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> src\\event.rs:1464:38\n     |\n1464 |             KeyCode::Media(media) => write!(f, \"{}\", media),\n     |                                      ^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1464 -             KeyCode::Media(media) => write!(f, \"{}\", media),\n1464 +             KeyCode::Media(media) => write!(f, \"{media}\"),\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 50695,
                        "byte_start": 50695,
                        "column_end": 50,
                        "column_start": 50,
                        "expansion": null,
                        "file_name": "src\\event.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1464,
                        "line_start": 1464,
                        "suggested_replacement": "media",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 50,
                            "highlight_start": 50,
                            "text": "            KeyCode::Media(media) => write!(f, \"{}\", media),"
                          }
                        ]
                      },
                      {
                        "byte_end": 50704,
                        "byte_start": 50697,
                        "column_end": 59,
                        "column_start": 52,
                        "expansion": null,
                        "file_name": "src\\event.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1464,
                        "line_start": 1464,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 52,
                            "text": "            KeyCode::Media(media) => write!(f, \"{}\", media),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 50705,
                    "byte_start": 50683,
                    "column_end": 60,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\event.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1464,
                    "line_start": 1464,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 38,
                        "text": "            KeyCode::Media(media) => write!(f, \"{}\", media),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpc0g7pj9e/crossterm-0.29.0#crossterm@0.29.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossterm",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> src\\event.rs:1465:44\n     |\n1465 |             KeyCode::Modifier(modifier) => write!(f, \"{}\", modifier),\n     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1465 -             KeyCode::Modifier(modifier) => write!(f, \"{}\", modifier),\n1465 +             KeyCode::Modifier(modifier) => write!(f, \"{modifier}\"),\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 50763,
                        "byte_start": 50763,
                        "column_end": 56,
                        "column_start": 56,
                        "expansion": null,
                        "file_name": "src\\event.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1465,
                        "line_start": 1465,
                        "suggested_replacement": "modifier",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 56,
                            "highlight_start": 56,
                            "text": "            KeyCode::Modifier(modifier) => write!(f, \"{}\", modifier),"
                          }
                        ]
                      },
                      {
                        "byte_end": 50775,
                        "byte_start": 50765,
                        "column_end": 68,
                        "column_start": 58,
                        "expansion": null,
                        "file_name": "src\\event.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1465,
                        "line_start": 1465,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 68,
                            "highlight_start": 58,
                            "text": "            KeyCode::Modifier(modifier) => write!(f, \"{}\", modifier),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 50776,
                    "byte_start": 50751,
                    "column_end": 69,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "src\\event.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1465,
                    "line_start": 1465,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 69,
                        "highlight_start": 44,
                        "text": "            KeyCode::Modifier(modifier) => write!(f, \"{}\", modifier),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpc0g7pj9e/crossterm-0.29.0#crossterm@0.29.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossterm",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "bracketed-paste",
                "default",
                "derive-more",
                "events",
                "windows"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpc0g7pj9e\\crossterm-0.29.0\\target\\debug\\deps\\libcrossterm-9af21af44bba40fa.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 123
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {
              "unsound": [
                {
                  "kind": "unsound",
                  "package": {
                    "name": "tokio",
                    "version": "1.44.1",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "f382da615b842244d4b8738c82ed1275e6c5dd90c459a30941cd07080b06c91a",
                    "dependencies": [
                      {
                        "name": "backtrace",
                        "version": "0.3.74",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "bytes",
                        "version": "1.10.1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.171",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "mio",
                        "version": "1.0.3",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "parking_lot",
                        "version": "0.12.3",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "pin-project-lite",
                        "version": "0.2.16",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "signal-hook-registry",
                        "version": "1.4.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "socket2",
                        "version": "0.5.9",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "tokio-macros",
                        "version": "2.5.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "windows-sys",
                        "version": "0.52.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2025-0023",
                    "package": "tokio",
                    "title": "Broadcast channel calls clone in parallel, but does not require `Sync`",
                    "description": "The broadcast channel internally calls `clone` on the stored value when\nreceiving it, and only requires `T:Send`. This means that using the broadcast\nchannel with values that are `Send` but not `Sync` can trigger unsoundness if\nthe `clone` implementation makes use of the value being `!Sync`.\n\nThank you to Austin Bonander for finding and reporting this issue.",
                    "date": "2025-04-07",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "memory-corruption"
                    ],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unsound",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/tokio-rs/tokio/pull/7232",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [
                      ">=1.38.2, <1.39.0",
                      ">=1.42.1, <1.43.0",
                      ">=1.43.1, <1.44.0",
                      ">=1.44.2"
                    ],
                    "unaffected": [
                      "<0.2.5"
                    ]
                  }
                }
              ]
            }
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "crossterm",
          "version": "0.29.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/crossterm/latest/crossterm/all.html \"show sidebar\")\n# Crate crosstermCopy item path\n[Settings](https://docs.rs/crossterm/latest/settings.html)\n[Help](https://docs.rs/crossterm/latest/help.html)\nSummary[Source](https://docs.rs/crossterm/latest/src/crossterm/lib.rs.html#1-263)\nExpand description\n## [\u00a7](https://docs.rs/crossterm/latest/crossterm/#cross-platform-terminal-manipulation-library)Cross-platform Terminal Manipulation Library\nCrossterm is a pure-rust, terminal manipulation library that makes it possible to write cross-platform text-based interfaces.\nThis crate supports all UNIX and Windows terminals down to Windows 7 (not all terminals are tested see [Tested Terminals](https://github.com/crossterm-rs/crossterm#tested-terminals) for more info).\n### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#command-api)Command API\nThe command API makes the use of `crossterm` much easier and offers more control over when and how a command is executed. A command is just an action you can perform on the terminal e.g. cursor movement.\nThe command API offers:\n  * Better Performance.\n  * Complete control over when to flush.\n  * Complete control over where the ANSI escape commands are executed to.\n  * Way easier and nicer API.\n\n\nThere are two ways to use the API command:\n  * Functions can execute commands on types that implement Write. Functions are easier to use and debug. There is a disadvantage, and that is that there is a boilerplate code involved.\n  * Macros are generally seen as more difficult and aren\u2019t always well supported by editors but offer an API with less boilerplate code. If you are not afraid of macros, this is a recommendation.\n\n\nLinux and Windows 10 systems support ANSI escape codes. Those ANSI escape codes are strings or rather a byte sequence. When we `write` and `flush` those to the terminal we can perform some action. For older windows systems a WinAPI call is made.\n#### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#supported-commands)Supported Commands\n  * Module [`cursor`](https://docs.rs/crossterm/latest/crossterm/cursor/index.html)\n    * Visibility - [`Show`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.Show.html), [`Hide`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.Hide.html)\n    * Appearance - [`EnableBlinking`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.EnableBlinking.html), [`DisableBlinking`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.DisableBlinking.html), [`SetCursorStyle`](https://docs.rs/crossterm/latest/crossterm/cursor/enum.SetCursorStyle.html)\n    * Position - [`SavePosition`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.SavePosition.html), [`RestorePosition`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.RestorePosition.html), [`MoveUp`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveUp.html), [`MoveDown`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveDown.html), [`MoveLeft`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveLeft.html), [`MoveRight`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveRight.html), [`MoveTo`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveTo.html), [`MoveToColumn`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToColumn.html),[`MoveToRow`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToRow.html), [`MoveToNextLine`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToNextLine.html), [`MoveToPreviousLine`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToPreviousLine.html)\n  * Module [`event`](https://docs.rs/crossterm/latest/crossterm/event/index.html)\n    * Keyboard events - [`PushKeyboardEnhancementFlags`](https://docs.rs/crossterm/latest/crossterm/event/struct.PushKeyboardEnhancementFlags.html), [`PopKeyboardEnhancementFlags`](https://docs.rs/crossterm/latest/crossterm/event/struct.PopKeyboardEnhancementFlags.html)\n    * Mouse events - [`EnableMouseCapture`](https://docs.rs/crossterm/latest/crossterm/event/struct.EnableMouseCapture.html), [`DisableMouseCapture`](https://docs.rs/crossterm/latest/crossterm/event/struct.DisableMouseCapture.html)\n  * Module [`style`](https://docs.rs/crossterm/latest/crossterm/style/index.html)\n    * Colors - [`SetForegroundColor`](https://docs.rs/crossterm/latest/crossterm/style/struct.SetForegroundColor.html), [`SetBackgroundColor`](https://docs.rs/crossterm/latest/crossterm/style/struct.SetBackgroundColor.html), [`ResetColor`](https://docs.rs/crossterm/latest/crossterm/style/struct.ResetColor.html), [`SetColors`](https://docs.rs/crossterm/latest/crossterm/style/struct.SetColors.html)\n    * Attributes - [`SetAttribute`](https://docs.rs/crossterm/latest/crossterm/style/struct.SetAttribute.html), [`SetAttributes`](https://docs.rs/crossterm/latest/crossterm/style/struct.SetAttributes.html), [`PrintStyledContent`](https://docs.rs/crossterm/latest/crossterm/style/struct.PrintStyledContent.html)\n  * Module [`terminal`](https://docs.rs/crossterm/latest/crossterm/terminal/index.html)\n    * Scrolling - [`ScrollUp`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.ScrollUp.html), [`ScrollDown`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.ScrollDown.html)\n    * Miscellaneous - [`Clear`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.Clear.html), [`SetSize`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.SetSize.html), [`SetTitle`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.SetTitle.html), [`DisableLineWrap`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.DisableLineWrap.html), [`EnableLineWrap`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.EnableLineWrap.html)\n    * Alternate screen - [`EnterAlternateScreen`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.EnterAlternateScreen.html), [`LeaveAlternateScreen`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.LeaveAlternateScreen.html)\n  * Module [`clipboard`](https://docs.rs/crossterm/latest/crossterm/clipboard/index.html) (requires [`feature = \"osc52\"`](https://docs.rs/crossterm/latest/crossterm/#optional-features)) \n    * Clipboard - [`CopyToClipboard`](https://docs.rs/crossterm/latest/crossterm/clipboard/struct.CopyToClipboard.html)\n\n\n#### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#command-execution)Command Execution\nThere are two different ways to execute commands:\n  * [Lazy Execution](https://docs.rs/crossterm/latest/crossterm/#lazy-execution)\n  * [Direct Execution](https://docs.rs/crossterm/latest/crossterm/#direct-execution)\n\n\n##### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#lazy-execution)Lazy Execution\nFlushing bytes to the terminal buffer is a heavy system call. If we perform a lot of actions with the terminal, we want to do this periodically - like with a TUI editor - so that we can flush more data to the terminal buffer at the same time.\nCrossterm offers the possibility to do this with `queue`. With `queue` you can queue commands, and when you call [Write::flush](https://doc.rust-lang.org/std/io/trait.Write.html#tymethod.flush) these commands will be executed.\nYou can pass a custom buffer implementing [std::io::Write](https://doc.rust-lang.org/std/io/trait.Write.html) to this `queue` operation. The commands will be executed on that buffer. The most common buffer is [std::io::stdout](https://doc.rust-lang.org/std/io/fn.stdout.html) however, [std::io::stderr](https://doc.rust-lang.org/std/io/fn.stderr.html) is used sometimes as well.\n###### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#examples)Examples\nA simple demonstration that shows the command API in action with cursor commands.\nFunctions:\n```\nuse std::io::{Write, stdout};\nuse crossterm::{QueueableCommand, cursor};\nlet mut stdout = stdout();\nstdout.queue(cursor::MoveTo(5,5));\n// some other code ...\nstdout.flush();\n```\n\nThe [queue](https://docs.rs/crossterm/latest/crossterm/trait.QueueableCommand.html) function returns itself, therefore you can use this to queue another command. Like `stdout.queue(Goto(5,5)).queue(Clear(ClearType::All))`.\nMacros:\n```\nuse std::io::{Write, stdout};\nuse crossterm::{queue, QueueableCommand, cursor};\nlet mut stdout = stdout();\nqueue!(stdout, cursor::MoveTo(5, 5));\n// some other code ...\n// move operation is performed only if we flush the buffer.\nstdout.flush();\n```\n\nYou can pass more than one command into the [queue](https://docs.rs/crossterm/latest/crossterm/macro.queue.html) macro like `queue!(stdout, MoveTo(5, 5), Clear(ClearType::All))` and they will be executed in the given order from left to right.\n##### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#direct-execution)Direct Execution\nFor many applications it is not at all important to be efficient with \u2018flush\u2019 operations. For this use case there is the `execute` operation. This operation executes the command immediately, and calls the `flush` under water.\nYou can pass a custom buffer implementing [std::io::Write](https://doc.rust-lang.org/std/io/trait.Write.html) to this `execute` operation. The commands will be executed on that buffer. The most common buffer is [std::io::stdout](https://doc.rust-lang.org/std/io/fn.stdout.html) however, [std::io::stderr](https://doc.rust-lang.org/std/io/fn.stderr.html) is used sometimes as well.\n###### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#examples-1)Examples\nFunctions:\n```\nuse std::io::{Write, stdout};\nuse crossterm::{ExecutableCommand, cursor};\nlet mut stdout = stdout();\nstdout.execute(cursor::MoveTo(5,5));\n```\n\nThe [execute](https://docs.rs/crossterm/latest/crossterm/trait.ExecutableCommand.html) function returns itself, therefore you can use this to queue another command. Like `stdout.execute(Goto(5,5))?.execute(Clear(ClearType::All))`.\nMacros:\n```\nuse std::io::{stdout, Write};\nuse crossterm::{execute, ExecutableCommand, cursor};\nlet mut stdout = stdout();\nexecute!(stdout, cursor::MoveTo(5, 5));\n```\n\nYou can pass more than one command into the [execute](https://docs.rs/crossterm/latest/crossterm/macro.execute.html) macro like `execute!(stdout, MoveTo(5, 5), Clear(ClearType::All))` and they will be executed in the given order from left to right.\n### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#examples-2)Examples\nPrint a rectangle colored with magenta and use both direct execution and lazy execution.\nFunctions:\n```\nuse std::io::{self, Write};\nuse crossterm::{\n  ExecutableCommand, QueueableCommand,\n  terminal, cursor, style::{self, Stylize}\n};\nfn main() -> io::Result<()> {\n let mut stdout = io::stdout();\n stdout.execute(terminal::Clear(terminal::ClearType::All))?;\n for y in 0..40 {\n  for x in 0..150 {\n   if (y == 0 || y == 40 - 1) || (x == 0 || x == 150 - 1) {\n    // in this loop we are more efficient by not flushing the buffer.\n    stdout\n     .queue(cursor::MoveTo(x,y))?\n     .queue(style::PrintStyledContent( \"\u2588\".magenta()))?;\n   }\n  }\n }\n stdout.flush()?;\n Ok(())\n}\n```\n\nMacros:\n```\nuse std::io::{self, Write};\nuse crossterm::{\n  execute, queue,\n  style::{self, Stylize}, cursor, terminal\n};\nfn main() -> io::Result<()> {\n let mut stdout = io::stdout();\n execute!(stdout, terminal::Clear(terminal::ClearType::All))?;\n for y in 0..40 {\n  for x in 0..150 {\n   if (y == 0 || y == 40 - 1) || (x == 0 || x == 150 - 1) {\n    // in this loop we are more efficient by not flushing the buffer.\n    queue!(stdout, cursor::MoveTo(x,y), style::PrintStyledContent( \"\u2588\".magenta()))?;\n   }\n  }\n }\n stdout.flush()?;\n Ok(())\n}\n```\n\n### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#feature-flags)Feature Flags\n#### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#default-features)Default features\n  * **`bracketed-paste`**_(enabled by default)_ \u2014 Enables triggering [`Event::Paste`](https://docs.rs/crossterm/latest/crossterm/event/enum.Event.html#variant.Paste \"variant crossterm::event::Event::Paste\") when pasting text into the terminal.\n  * **`events`**_(enabled by default)_ \u2014 Enables reading input/events from the system using the [`event`](https://docs.rs/crossterm/latest/crossterm/event/index.html \"mod crossterm::event\") module.\n  * **`windows`**_(enabled by default)_ \u2014 Enables windows specific crates.\n\n\n#### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#optional-features)Optional Features\n  * **`event-stream`**\u2014 Enables the[EventStream](https://docs.rs/crossterm/latest/crossterm/event/struct.EventStream.html \"struct crossterm::event::EventStream\") struct for async event reading.\n  * **`serde`**\u2014 Enables[`serde`](https://docs.rs/serde/1.0.219/x86_64-unknown-linux-gnu/serde/index.html \"mod serde\") for various types.\n  * **`use-dev-tty`**\u2014 Enables raw file descriptor polling / selecting instead of mio.\n  * **`derive-more`**_(enabled by default)_ \u2014 Enables `is_*` helper functions for event enums.\n  * **`osc52`**\u2014 Enables interacting with a host clipboard via[`clipboard`](https://docs.rs/crossterm/latest/crossterm/clipboard/index.html)\n\n\n## Modules[\u00a7](https://docs.rs/crossterm/latest/crossterm/#modules)\n\n[clipboard](https://docs.rs/crossterm/latest/crossterm/clipboard/index.html \"mod crossterm::clipboard\")\n    A module for clipboard interaction\n\n[cursor](https://docs.rs/crossterm/latest/crossterm/cursor/index.html \"mod crossterm::cursor\")\n    A module to work with the terminal cursor\n\n[event](https://docs.rs/crossterm/latest/crossterm/event/index.html \"mod crossterm::event\")\n    A module to read events.\n\n[style](https://docs.rs/crossterm/latest/crossterm/style/index.html \"mod crossterm::style\")\n    A module to apply attributes and colors on your text.\n\n[terminal](https://docs.rs/crossterm/latest/crossterm/terminal/index.html \"mod crossterm::terminal\")\n    A module to work with the terminal.\n\n[tty](https://docs.rs/crossterm/latest/crossterm/tty/index.html \"mod crossterm::tty\")\n    A module to query if the current instance is a tty. Making it a little more convenient and safe to query whether something is a terminal teletype or not. This module defines the IsTty trait and the is_tty method to return true if the item represents a terminal.\n## Macros[\u00a7](https://docs.rs/crossterm/latest/crossterm/#macros)\n\n[execute](https://docs.rs/crossterm/latest/crossterm/macro.execute.html \"macro crossterm::execute\")\n    Executes one or more command(s).\n\n[queue](https://docs.rs/crossterm/latest/crossterm/macro.queue.html \"macro crossterm::queue\")\n    Queues one or more command(s) for further execution.\n## Traits[\u00a7](https://docs.rs/crossterm/latest/crossterm/#traits)\n\n[Command](https://docs.rs/crossterm/latest/crossterm/trait.Command.html \"trait crossterm::Command\")\n    An interface for a command that performs an action on the terminal.\n\n[ExecutableCommand](https://docs.rs/crossterm/latest/crossterm/trait.ExecutableCommand.html \"trait crossterm::ExecutableCommand\")\n    An interface for types that can directly execute commands.\n\n[QueueableCommand](https://docs.rs/crossterm/latest/crossterm/trait.QueueableCommand.html \"trait crossterm::QueueableCommand\")\n    An interface for types that can queue commands for further execution.\n\n[SynchronizedUpdate](https://docs.rs/crossterm/latest/crossterm/trait.SynchronizedUpdate.html \"trait crossterm::SynchronizedUpdate\")\n    An interface for types that support synchronized updates.\n",
            "markdown_with_citations": "[](https://docs.rs/crossterm/latest/crossterm/all.html \"show sidebar\")\n# Crate crosstermCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9Cross-platform Terminal Manipulation Library\nCrossterm is a pure-rust, terminal manipulation library that makes it possible to write cross-platform text-based interfaces.\nThis crate supports all UNIX and Windows terminals down to Windows 7 (not all terminals are tested see Tested Terminals\u27e85\u27e9 for more info).\n### \u00a7\u27e86\u27e9Command API\nThe command API makes the use of `crossterm` much easier and offers more control over when and how a command is executed. A command is just an action you can perform on the terminal e.g. cursor movement.\nThe command API offers:\n  * Better Performance.\n  * Complete control over when to flush.\n  * Complete control over where the ANSI escape commands are executed to.\n  * Way easier and nicer API.\n\n\nThere are two ways to use the API command:\n  * Functions can execute commands on types that implement Write. Functions are easier to use and debug. There is a disadvantage, and that is that there is a boilerplate code involved.\n  * Macros are generally seen as more difficult and aren\u2019t always well supported by editors but offer an API with less boilerplate code. If you are not afraid of macros, this is a recommendation.\n\n\nLinux and Windows 10 systems support ANSI escape codes. Those ANSI escape codes are strings or rather a byte sequence. When we `write` and `flush` those to the terminal we can perform some action. For older windows systems a WinAPI call is made.\n#### \u00a7\u27e87\u27e9Supported Commands\n  * Module `cursor`\u27e88\u27e9\n    * Visibility - `Show`\u27e89\u27e9, `Hide`\u27e810\u27e9\n    * Appearance - `EnableBlinking`\u27e811\u27e9, `DisableBlinking`\u27e812\u27e9, `SetCursorStyle`\u27e813\u27e9\n    * Position - `SavePosition`\u27e814\u27e9, `RestorePosition`\u27e815\u27e9, `MoveUp`\u27e816\u27e9, `MoveDown`\u27e817\u27e9, `MoveLeft`\u27e818\u27e9, `MoveRight`\u27e819\u27e9, `MoveTo`\u27e820\u27e9, `MoveToColumn`\u27e821\u27e9,`MoveToRow`\u27e822\u27e9, `MoveToNextLine`\u27e823\u27e9, `MoveToPreviousLine`\u27e824\u27e9\n  * Module `event`\u27e825\u27e9\n    * Keyboard events - `PushKeyboardEnhancementFlags`\u27e826\u27e9, `PopKeyboardEnhancementFlags`\u27e827\u27e9\n    * Mouse events - `EnableMouseCapture`\u27e828\u27e9, `DisableMouseCapture`\u27e829\u27e9\n  * Module `style`\u27e830\u27e9\n    * Colors - `SetForegroundColor`\u27e831\u27e9, `SetBackgroundColor`\u27e832\u27e9, `ResetColor`\u27e833\u27e9, `SetColors`\u27e834\u27e9\n    * Attributes - `SetAttribute`\u27e835\u27e9, `SetAttributes`\u27e836\u27e9, `PrintStyledContent`\u27e837\u27e9\n  * Module `terminal`\u27e838\u27e9\n    * Scrolling - `ScrollUp`\u27e839\u27e9, `ScrollDown`\u27e840\u27e9\n    * Miscellaneous - `Clear`\u27e841\u27e9, `SetSize`\u27e842\u27e9, `SetTitle`\u27e843\u27e9, `DisableLineWrap`\u27e844\u27e9, `EnableLineWrap`\u27e845\u27e9\n    * Alternate screen - `EnterAlternateScreen`\u27e846\u27e9, `LeaveAlternateScreen`\u27e847\u27e9\n  * Module `clipboard`\u27e848\u27e9 (requires `feature = \"osc52\"`\u27e849\u27e9) \n    * Clipboard - `CopyToClipboard`\u27e850\u27e9\n\n\n#### \u00a7\u27e851\u27e9Command Execution\nThere are two different ways to execute commands:\n  * Lazy Execution\u27e852\u27e9\n  * Direct Execution\u27e853\u27e9\n\n\n##### \u00a7\u27e852\u27e9Lazy Execution\nFlushing bytes to the terminal buffer is a heavy system call. If we perform a lot of actions with the terminal, we want to do this periodically - like with a TUI editor - so that we can flush more data to the terminal buffer at the same time.\nCrossterm offers the possibility to do this with `queue`. With `queue` you can queue commands, and when you call Write::flush\u27e854\u27e9 these commands will be executed.\nYou can pass a custom buffer implementing std::io::Write\u27e855\u27e9 to this `queue` operation. The commands will be executed on that buffer. The most common buffer is std::io::stdout\u27e856\u27e9 however, std::io::stderr\u27e857\u27e9 is used sometimes as well.\n###### \u00a7\u27e858\u27e9Examples\nA simple demonstration that shows the command API in action with cursor commands.\nFunctions:\n```\nuse std::io::{Write, stdout};\nuse crossterm::{QueueableCommand, cursor};\nlet mut stdout = stdout();\nstdout.queue(cursor::MoveTo(5,5));\n// some other code ...\nstdout.flush();\n```\n\nThe queue\u27e859\u27e9 function returns itself, therefore you can use this to queue another command. Like `stdout.queue(Goto(5,5)).queue(Clear(ClearType::All))`.\nMacros:\n```\nuse std::io::{Write, stdout};\nuse crossterm::{queue, QueueableCommand, cursor};\nlet mut stdout = stdout();\nqueue!(stdout, cursor::MoveTo(5, 5));\n// some other code ...\n// move operation is performed only if we flush the buffer.\nstdout.flush();\n```\n\nYou can pass more than one command into the queue\u27e860\u27e9 macro like `queue!(stdout, MoveTo(5, 5), Clear(ClearType::All))` and they will be executed in the given order from left to right.\n##### \u00a7\u27e853\u27e9Direct Execution\nFor many applications it is not at all important to be efficient with \u2018flush\u2019 operations. For this use case there is the `execute` operation. This operation executes the command immediately, and calls the `flush` under water.\nYou can pass a custom buffer implementing std::io::Write\u27e855\u27e9 to this `execute` operation. The commands will be executed on that buffer. The most common buffer is std::io::stdout\u27e856\u27e9 however, std::io::stderr\u27e857\u27e9 is used sometimes as well.\n###### \u00a7\u27e861\u27e9Examples\nFunctions:\n```\nuse std::io::{Write, stdout};\nuse crossterm::{ExecutableCommand, cursor};\nlet mut stdout = stdout();\nstdout.execute(cursor::MoveTo(5,5));\n```\n\nThe execute\u27e862\u27e9 function returns itself, therefore you can use this to queue another command. Like `stdout.execute(Goto(5,5))?.execute(Clear(ClearType::All))`.\nMacros:\n```\nuse std::io::{stdout, Write};\nuse crossterm::{execute, ExecutableCommand, cursor};\nlet mut stdout = stdout();\nexecute!(stdout, cursor::MoveTo(5, 5));\n```\n\nYou can pass more than one command into the execute\u27e863\u27e9 macro like `execute!(stdout, MoveTo(5, 5), Clear(ClearType::All))` and they will be executed in the given order from left to right.\n### \u00a7\u27e864\u27e9Examples\nPrint a rectangle colored with magenta and use both direct execution and lazy execution.\nFunctions:\n```\nuse std::io::{self, Write};\nuse crossterm::{\n  ExecutableCommand, QueueableCommand,\n  terminal, cursor, style::{self, Stylize}\n};\nfn main() -> io::Result<()> {\n let mut stdout = io::stdout();\n stdout.execute(terminal::Clear(terminal::ClearType::All))?;\n for y in 0..40 {\n  for x in 0..150 {\n   if (y == 0 || y == 40 - 1) || (x == 0 || x == 150 - 1) {\n    // in this loop we are more efficient by not flushing the buffer.\n    stdout\n     .queue(cursor::MoveTo(x,y))?\n     .queue(style::PrintStyledContent( \"\u2588\".magenta()))?;\n   }\n  }\n }\n stdout.flush()?;\n Ok(())\n}\n```\n\nMacros:\n```\nuse std::io::{self, Write};\nuse crossterm::{\n  execute, queue,\n  style::{self, Stylize}, cursor, terminal\n};\nfn main() -> io::Result<()> {\n let mut stdout = io::stdout();\n execute!(stdout, terminal::Clear(terminal::ClearType::All))?;\n for y in 0..40 {\n  for x in 0..150 {\n   if (y == 0 || y == 40 - 1) || (x == 0 || x == 150 - 1) {\n    // in this loop we are more efficient by not flushing the buffer.\n    queue!(stdout, cursor::MoveTo(x,y), style::PrintStyledContent( \"\u2588\".magenta()))?;\n   }\n  }\n }\n stdout.flush()?;\n Ok(())\n}\n```\n\n### \u00a7\u27e865\u27e9Feature Flags\n#### \u00a7\u27e866\u27e9Default features\n  * **`bracketed-paste`**_(enabled by default)_ \u2014 Enables triggering `Event::Paste`\u27e867\u27e9 when pasting text into the terminal.\n  * **`events`**_(enabled by default)_ \u2014 Enables reading input/events from the system using the `event`\u27e825\u27e9 module.\n  * **`windows`**_(enabled by default)_ \u2014 Enables windows specific crates.\n\n\n#### \u00a7\u27e849\u27e9Optional Features\n  * **`event-stream`**\u2014 Enables theEventStream\u27e868\u27e9 struct for async event reading.\n  * **`serde`**\u2014 Enables`serde`\u27e869\u27e9 for various types.\n  * **`use-dev-tty`**\u2014 Enables raw file descriptor polling / selecting instead of mio.\n  * **`derive-more`**_(enabled by default)_ \u2014 Enables `is_*` helper functions for event enums.\n  * **`osc52`**\u2014 Enables interacting with a host clipboard via`clipboard`\u27e848\u27e9\n\n\n## Modules\u00a7\u27e870\u27e9\n\nclipboard\u27e848\u27e9\n    A module for clipboard interaction\n\ncursor\u27e88\u27e9\n    A module to work with the terminal cursor\n\nevent\u27e825\u27e9\n    A module to read events.\n\nstyle\u27e830\u27e9\n    A module to apply attributes and colors on your text.\n\nterminal\u27e838\u27e9\n    A module to work with the terminal.\n\ntty\u27e871\u27e9\n    A module to query if the current instance is a tty. Making it a little more convenient and safe to query whether something is a terminal teletype or not. This module defines the IsTty trait and the is_tty method to return true if the item represents a terminal.\n## Macros\u00a7\u27e872\u27e9\n\nexecute\u27e863\u27e9\n    Executes one or more command(s).\n\nqueue\u27e860\u27e9\n    Queues one or more command(s) for further execution.\n## Traits\u00a7\u27e873\u27e9\n\nCommand\u27e874\u27e9\n    An interface for a command that performs an action on the terminal.\n\nExecutableCommand\u27e862\u27e9\n    An interface for types that can directly execute commands.\n\nQueueableCommand\u27e859\u27e9\n    An interface for types that can queue commands for further execution.\n\nSynchronizedUpdate\u27e875\u27e9\n    An interface for types that support synchronized updates.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/crossterm/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/crossterm/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/crossterm/latest/src/crossterm/lib.rs.html#1-263: Source\n\u27e84\u27e9 https://docs.rs/crossterm/latest/crossterm/#cross-platform-terminal-manipulation-library: \u00a7\n\u27e85\u27e9 https://github.com/crossterm-rs/crossterm#tested-terminals: Tested Terminals\n\u27e86\u27e9 https://docs.rs/crossterm/latest/crossterm/#command-api: \u00a7\n\u27e87\u27e9 https://docs.rs/crossterm/latest/crossterm/#supported-commands: \u00a7\n\u27e88\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/index.html: `cursor`\n\u27e89\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.Show.html: `Show`\n\u27e810\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.Hide.html: `Hide`\n\u27e811\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.EnableBlinking.html: `EnableBlinking`\n\u27e812\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.DisableBlinking.html: `DisableBlinking`\n\u27e813\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/enum.SetCursorStyle.html: `SetCursorStyle`\n\u27e814\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.SavePosition.html: `SavePosition`\n\u27e815\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.RestorePosition.html: `RestorePosition`\n\u27e816\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveUp.html: `MoveUp`\n\u27e817\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveDown.html: `MoveDown`\n\u27e818\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveLeft.html: `MoveLeft`\n\u27e819\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveRight.html: `MoveRight`\n\u27e820\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveTo.html: `MoveTo`\n\u27e821\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToColumn.html: `MoveToColumn`\n\u27e822\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToRow.html: `MoveToRow`\n\u27e823\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToNextLine.html: `MoveToNextLine`\n\u27e824\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToPreviousLine.html: `MoveToPreviousLine`\n\u27e825\u27e9 https://docs.rs/crossterm/latest/crossterm/event/index.html: `event`\n\u27e826\u27e9 https://docs.rs/crossterm/latest/crossterm/event/struct.PushKeyboardEnhancementFlags.html: `PushKeyboardEnhancementFlags`\n\u27e827\u27e9 https://docs.rs/crossterm/latest/crossterm/event/struct.PopKeyboardEnhancementFlags.html: `PopKeyboardEnhancementFlags`\n\u27e828\u27e9 https://docs.rs/crossterm/latest/crossterm/event/struct.EnableMouseCapture.html: `EnableMouseCapture`\n\u27e829\u27e9 https://docs.rs/crossterm/latest/crossterm/event/struct.DisableMouseCapture.html: `DisableMouseCapture`\n\u27e830\u27e9 https://docs.rs/crossterm/latest/crossterm/style/index.html: `style`\n\u27e831\u27e9 https://docs.rs/crossterm/latest/crossterm/style/struct.SetForegroundColor.html: `SetForegroundColor`\n\u27e832\u27e9 https://docs.rs/crossterm/latest/crossterm/style/struct.SetBackgroundColor.html: `SetBackgroundColor`\n\u27e833\u27e9 https://docs.rs/crossterm/latest/crossterm/style/struct.ResetColor.html: `ResetColor`\n\u27e834\u27e9 https://docs.rs/crossterm/latest/crossterm/style/struct.SetColors.html: `SetColors`\n\u27e835\u27e9 https://docs.rs/crossterm/latest/crossterm/style/struct.SetAttribute.html: `SetAttribute`\n\u27e836\u27e9 https://docs.rs/crossterm/latest/crossterm/style/struct.SetAttributes.html: `SetAttributes`\n\u27e837\u27e9 https://docs.rs/crossterm/latest/crossterm/style/struct.PrintStyledContent.html: `PrintStyledContent`\n\u27e838\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/index.html: `terminal`\n\u27e839\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.ScrollUp.html: `ScrollUp`\n\u27e840\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.ScrollDown.html: `ScrollDown`\n\u27e841\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.Clear.html: `Clear`\n\u27e842\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.SetSize.html: `SetSize`\n\u27e843\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.SetTitle.html: `SetTitle`\n\u27e844\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.DisableLineWrap.html: `DisableLineWrap`\n\u27e845\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.EnableLineWrap.html: `EnableLineWrap`\n\u27e846\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.EnterAlternateScreen.html: `EnterAlternateScreen`\n\u27e847\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.LeaveAlternateScreen.html: `LeaveAlternateScreen`\n\u27e848\u27e9 https://docs.rs/crossterm/latest/crossterm/clipboard/index.html: `clipboard`\n\u27e849\u27e9 https://docs.rs/crossterm/latest/crossterm/#optional-features: `feature = \"osc52\"`\n\u27e850\u27e9 https://docs.rs/crossterm/latest/crossterm/clipboard/struct.CopyToClipboard.html: `CopyToClipboard`\n\u27e851\u27e9 https://docs.rs/crossterm/latest/crossterm/#command-execution: \u00a7\n\u27e852\u27e9 https://docs.rs/crossterm/latest/crossterm/#lazy-execution: Lazy Execution\n\u27e853\u27e9 https://docs.rs/crossterm/latest/crossterm/#direct-execution: Direct Execution\n\u27e854\u27e9 https://doc.rust-lang.org/std/io/trait.Write.html#tymethod.flush: Write::flush\n\u27e855\u27e9 https://doc.rust-lang.org/std/io/trait.Write.html: std::io::Write\n\u27e856\u27e9 https://doc.rust-lang.org/std/io/fn.stdout.html: std::io::stdout\n\u27e857\u27e9 https://doc.rust-lang.org/std/io/fn.stderr.html: std::io::stderr\n\u27e858\u27e9 https://docs.rs/crossterm/latest/crossterm/#examples: \u00a7\n\u27e859\u27e9 https://docs.rs/crossterm/latest/crossterm/trait.QueueableCommand.html: queue\n\u27e860\u27e9 https://docs.rs/crossterm/latest/crossterm/macro.queue.html: queue\n\u27e861\u27e9 https://docs.rs/crossterm/latest/crossterm/#examples-1: \u00a7\n\u27e862\u27e9 https://docs.rs/crossterm/latest/crossterm/trait.ExecutableCommand.html: execute\n\u27e863\u27e9 https://docs.rs/crossterm/latest/crossterm/macro.execute.html: execute\n\u27e864\u27e9 https://docs.rs/crossterm/latest/crossterm/#examples-2: \u00a7\n\u27e865\u27e9 https://docs.rs/crossterm/latest/crossterm/#feature-flags: \u00a7\n\u27e866\u27e9 https://docs.rs/crossterm/latest/crossterm/#default-features: \u00a7\n\u27e867\u27e9 https://docs.rs/crossterm/latest/crossterm/event/enum.Event.html#variant.Paste: variant crossterm::event::Event::Paste - `Event::Paste`\n\u27e868\u27e9 https://docs.rs/crossterm/latest/crossterm/event/struct.EventStream.html: struct crossterm::event::EventStream - EventStream\n\u27e869\u27e9 https://docs.rs/serde/1.0.219/x86_64-unknown-linux-gnu/serde/index.html: mod serde - `serde`\n\u27e870\u27e9 https://docs.rs/crossterm/latest/crossterm/#modules: \u00a7\n\u27e871\u27e9 https://docs.rs/crossterm/latest/crossterm/tty/index.html: mod crossterm::tty - tty\n\u27e872\u27e9 https://docs.rs/crossterm/latest/crossterm/#macros: \u00a7\n\u27e873\u27e9 https://docs.rs/crossterm/latest/crossterm/#traits: \u00a7\n\u27e874\u27e9 https://docs.rs/crossterm/latest/crossterm/trait.Command.html: trait crossterm::Command - Command\n\u27e875\u27e9 https://docs.rs/crossterm/latest/crossterm/trait.SynchronizedUpdate.html: trait crossterm::SynchronizedUpdate - SynchronizedUpdate\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "crossterm",
          "version": "0.29.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/crossterm/latest/crossterm/all.html \"show sidebar\")\n# Crate crosstermCopy item path\n[Settings](https://docs.rs/crossterm/latest/settings.html)\n[Help](https://docs.rs/crossterm/latest/help.html)\nSummary[Source](https://docs.rs/crossterm/latest/src/crossterm/lib.rs.html#1-263)\nExpand description\n## [\u00a7](https://docs.rs/crossterm/latest/crossterm/#cross-platform-terminal-manipulation-library)Cross-platform Terminal Manipulation Library\nCrossterm is a pure-rust, terminal manipulation library that makes it possible to write cross-platform text-based interfaces.\nThis crate supports all UNIX and Windows terminals down to Windows 7 (not all terminals are tested see [Tested Terminals](https://github.com/crossterm-rs/crossterm#tested-terminals) for more info).\n### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#command-api)Command API\nThe command API makes the use of `crossterm` much easier and offers more control over when and how a command is executed. A command is just an action you can perform on the terminal e.g. cursor movement.\nThe command API offers:\n  * Better Performance.\n  * Complete control over when to flush.\n  * Complete control over where the ANSI escape commands are executed to.\n  * Way easier and nicer API.\n\n\nThere are two ways to use the API command:\n  * Functions can execute commands on types that implement Write. Functions are easier to use and debug. There is a disadvantage, and that is that there is a boilerplate code involved.\n  * Macros are generally seen as more difficult and aren\u2019t always well supported by editors but offer an API with less boilerplate code. If you are not afraid of macros, this is a recommendation.\n\n\nLinux and Windows 10 systems support ANSI escape codes. Those ANSI escape codes are strings or rather a byte sequence. When we `write` and `flush` those to the terminal we can perform some action. For older windows systems a WinAPI call is made.\n#### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#supported-commands)Supported Commands\n  * Module [`cursor`](https://docs.rs/crossterm/latest/crossterm/cursor/index.html)\n    * Visibility - [`Show`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.Show.html), [`Hide`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.Hide.html)\n    * Appearance - [`EnableBlinking`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.EnableBlinking.html), [`DisableBlinking`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.DisableBlinking.html), [`SetCursorStyle`](https://docs.rs/crossterm/latest/crossterm/cursor/enum.SetCursorStyle.html)\n    * Position - [`SavePosition`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.SavePosition.html), [`RestorePosition`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.RestorePosition.html), [`MoveUp`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveUp.html), [`MoveDown`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveDown.html), [`MoveLeft`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveLeft.html), [`MoveRight`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveRight.html), [`MoveTo`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveTo.html), [`MoveToColumn`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToColumn.html),[`MoveToRow`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToRow.html), [`MoveToNextLine`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToNextLine.html), [`MoveToPreviousLine`](https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToPreviousLine.html)\n  * Module [`event`](https://docs.rs/crossterm/latest/crossterm/event/index.html)\n    * Keyboard events - [`PushKeyboardEnhancementFlags`](https://docs.rs/crossterm/latest/crossterm/event/struct.PushKeyboardEnhancementFlags.html), [`PopKeyboardEnhancementFlags`](https://docs.rs/crossterm/latest/crossterm/event/struct.PopKeyboardEnhancementFlags.html)\n    * Mouse events - [`EnableMouseCapture`](https://docs.rs/crossterm/latest/crossterm/event/struct.EnableMouseCapture.html), [`DisableMouseCapture`](https://docs.rs/crossterm/latest/crossterm/event/struct.DisableMouseCapture.html)\n  * Module [`style`](https://docs.rs/crossterm/latest/crossterm/style/index.html)\n    * Colors - [`SetForegroundColor`](https://docs.rs/crossterm/latest/crossterm/style/struct.SetForegroundColor.html), [`SetBackgroundColor`](https://docs.rs/crossterm/latest/crossterm/style/struct.SetBackgroundColor.html), [`ResetColor`](https://docs.rs/crossterm/latest/crossterm/style/struct.ResetColor.html), [`SetColors`](https://docs.rs/crossterm/latest/crossterm/style/struct.SetColors.html)\n    * Attributes - [`SetAttribute`](https://docs.rs/crossterm/latest/crossterm/style/struct.SetAttribute.html), [`SetAttributes`](https://docs.rs/crossterm/latest/crossterm/style/struct.SetAttributes.html), [`PrintStyledContent`](https://docs.rs/crossterm/latest/crossterm/style/struct.PrintStyledContent.html)\n  * Module [`terminal`](https://docs.rs/crossterm/latest/crossterm/terminal/index.html)\n    * Scrolling - [`ScrollUp`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.ScrollUp.html), [`ScrollDown`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.ScrollDown.html)\n    * Miscellaneous - [`Clear`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.Clear.html), [`SetSize`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.SetSize.html), [`SetTitle`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.SetTitle.html), [`DisableLineWrap`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.DisableLineWrap.html), [`EnableLineWrap`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.EnableLineWrap.html)\n    * Alternate screen - [`EnterAlternateScreen`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.EnterAlternateScreen.html), [`LeaveAlternateScreen`](https://docs.rs/crossterm/latest/crossterm/terminal/struct.LeaveAlternateScreen.html)\n  * Module [`clipboard`](https://docs.rs/crossterm/latest/crossterm/clipboard/index.html) (requires [`feature = \"osc52\"`](https://docs.rs/crossterm/latest/crossterm/#optional-features)) \n    * Clipboard - [`CopyToClipboard`](https://docs.rs/crossterm/latest/crossterm/clipboard/struct.CopyToClipboard.html)\n\n\n#### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#command-execution)Command Execution\nThere are two different ways to execute commands:\n  * [Lazy Execution](https://docs.rs/crossterm/latest/crossterm/#lazy-execution)\n  * [Direct Execution](https://docs.rs/crossterm/latest/crossterm/#direct-execution)\n\n\n##### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#lazy-execution)Lazy Execution\nFlushing bytes to the terminal buffer is a heavy system call. If we perform a lot of actions with the terminal, we want to do this periodically - like with a TUI editor - so that we can flush more data to the terminal buffer at the same time.\nCrossterm offers the possibility to do this with `queue`. With `queue` you can queue commands, and when you call [Write::flush](https://doc.rust-lang.org/std/io/trait.Write.html#tymethod.flush) these commands will be executed.\nYou can pass a custom buffer implementing [std::io::Write](https://doc.rust-lang.org/std/io/trait.Write.html) to this `queue` operation. The commands will be executed on that buffer. The most common buffer is [std::io::stdout](https://doc.rust-lang.org/std/io/fn.stdout.html) however, [std::io::stderr](https://doc.rust-lang.org/std/io/fn.stderr.html) is used sometimes as well.\n###### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#examples)Examples\nA simple demonstration that shows the command API in action with cursor commands.\nFunctions:\n```\nuse std::io::{Write, stdout};\nuse crossterm::{QueueableCommand, cursor};\nlet mut stdout = stdout();\nstdout.queue(cursor::MoveTo(5,5));\n// some other code ...\nstdout.flush();\n```\n\nThe [queue](https://docs.rs/crossterm/latest/crossterm/trait.QueueableCommand.html) function returns itself, therefore you can use this to queue another command. Like `stdout.queue(Goto(5,5)).queue(Clear(ClearType::All))`.\nMacros:\n```\nuse std::io::{Write, stdout};\nuse crossterm::{queue, QueueableCommand, cursor};\nlet mut stdout = stdout();\nqueue!(stdout, cursor::MoveTo(5, 5));\n// some other code ...\n// move operation is performed only if we flush the buffer.\nstdout.flush();\n```\n\nYou can pass more than one command into the [queue](https://docs.rs/crossterm/latest/crossterm/macro.queue.html) macro like `queue!(stdout, MoveTo(5, 5), Clear(ClearType::All))` and they will be executed in the given order from left to right.\n##### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#direct-execution)Direct Execution\nFor many applications it is not at all important to be efficient with \u2018flush\u2019 operations. For this use case there is the `execute` operation. This operation executes the command immediately, and calls the `flush` under water.\nYou can pass a custom buffer implementing [std::io::Write](https://doc.rust-lang.org/std/io/trait.Write.html) to this `execute` operation. The commands will be executed on that buffer. The most common buffer is [std::io::stdout](https://doc.rust-lang.org/std/io/fn.stdout.html) however, [std::io::stderr](https://doc.rust-lang.org/std/io/fn.stderr.html) is used sometimes as well.\n###### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#examples-1)Examples\nFunctions:\n```\nuse std::io::{Write, stdout};\nuse crossterm::{ExecutableCommand, cursor};\nlet mut stdout = stdout();\nstdout.execute(cursor::MoveTo(5,5));\n```\n\nThe [execute](https://docs.rs/crossterm/latest/crossterm/trait.ExecutableCommand.html) function returns itself, therefore you can use this to queue another command. Like `stdout.execute(Goto(5,5))?.execute(Clear(ClearType::All))`.\nMacros:\n```\nuse std::io::{stdout, Write};\nuse crossterm::{execute, ExecutableCommand, cursor};\nlet mut stdout = stdout();\nexecute!(stdout, cursor::MoveTo(5, 5));\n```\n\nYou can pass more than one command into the [execute](https://docs.rs/crossterm/latest/crossterm/macro.execute.html) macro like `execute!(stdout, MoveTo(5, 5), Clear(ClearType::All))` and they will be executed in the given order from left to right.\n### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#examples-2)Examples\nPrint a rectangle colored with magenta and use both direct execution and lazy execution.\nFunctions:\n```\nuse std::io::{self, Write};\nuse crossterm::{\n  ExecutableCommand, QueueableCommand,\n  terminal, cursor, style::{self, Stylize}\n};\nfn main() -> io::Result<()> {\n let mut stdout = io::stdout();\n stdout.execute(terminal::Clear(terminal::ClearType::All))?;\n for y in 0..40 {\n  for x in 0..150 {\n   if (y == 0 || y == 40 - 1) || (x == 0 || x == 150 - 1) {\n    // in this loop we are more efficient by not flushing the buffer.\n    stdout\n     .queue(cursor::MoveTo(x,y))?\n     .queue(style::PrintStyledContent( \"\u2588\".magenta()))?;\n   }\n  }\n }\n stdout.flush()?;\n Ok(())\n}\n```\n\nMacros:\n```\nuse std::io::{self, Write};\nuse crossterm::{\n  execute, queue,\n  style::{self, Stylize}, cursor, terminal\n};\nfn main() -> io::Result<()> {\n let mut stdout = io::stdout();\n execute!(stdout, terminal::Clear(terminal::ClearType::All))?;\n for y in 0..40 {\n  for x in 0..150 {\n   if (y == 0 || y == 40 - 1) || (x == 0 || x == 150 - 1) {\n    // in this loop we are more efficient by not flushing the buffer.\n    queue!(stdout, cursor::MoveTo(x,y), style::PrintStyledContent( \"\u2588\".magenta()))?;\n   }\n  }\n }\n stdout.flush()?;\n Ok(())\n}\n```\n\n### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#feature-flags)Feature Flags\n#### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#default-features)Default features\n  * **`bracketed-paste`**_(enabled by default)_ \u2014 Enables triggering [`Event::Paste`](https://docs.rs/crossterm/latest/crossterm/event/enum.Event.html#variant.Paste \"variant crossterm::event::Event::Paste\") when pasting text into the terminal.\n  * **`events`**_(enabled by default)_ \u2014 Enables reading input/events from the system using the [`event`](https://docs.rs/crossterm/latest/crossterm/event/index.html \"mod crossterm::event\") module.\n  * **`windows`**_(enabled by default)_ \u2014 Enables windows specific crates.\n\n\n#### [\u00a7](https://docs.rs/crossterm/latest/crossterm/#optional-features)Optional Features\n  * **`event-stream`**\u2014 Enables the[EventStream](https://docs.rs/crossterm/latest/crossterm/event/struct.EventStream.html \"struct crossterm::event::EventStream\") struct for async event reading.\n  * **`serde`**\u2014 Enables[`serde`](https://docs.rs/serde/1.0.219/x86_64-unknown-linux-gnu/serde/index.html \"mod serde\") for various types.\n  * **`use-dev-tty`**\u2014 Enables raw file descriptor polling / selecting instead of mio.\n  * **`derive-more`**_(enabled by default)_ \u2014 Enables `is_*` helper functions for event enums.\n  * **`osc52`**\u2014 Enables interacting with a host clipboard via[`clipboard`](https://docs.rs/crossterm/latest/crossterm/clipboard/index.html)\n\n\n## Modules[\u00a7](https://docs.rs/crossterm/latest/crossterm/#modules)\n\n[clipboard](https://docs.rs/crossterm/latest/crossterm/clipboard/index.html \"mod crossterm::clipboard\")\n    A module for clipboard interaction\n\n[cursor](https://docs.rs/crossterm/latest/crossterm/cursor/index.html \"mod crossterm::cursor\")\n    A module to work with the terminal cursor\n\n[event](https://docs.rs/crossterm/latest/crossterm/event/index.html \"mod crossterm::event\")\n    A module to read events.\n\n[style](https://docs.rs/crossterm/latest/crossterm/style/index.html \"mod crossterm::style\")\n    A module to apply attributes and colors on your text.\n\n[terminal](https://docs.rs/crossterm/latest/crossterm/terminal/index.html \"mod crossterm::terminal\")\n    A module to work with the terminal.\n\n[tty](https://docs.rs/crossterm/latest/crossterm/tty/index.html \"mod crossterm::tty\")\n    A module to query if the current instance is a tty. Making it a little more convenient and safe to query whether something is a terminal teletype or not. This module defines the IsTty trait and the is_tty method to return true if the item represents a terminal.\n## Macros[\u00a7](https://docs.rs/crossterm/latest/crossterm/#macros)\n\n[execute](https://docs.rs/crossterm/latest/crossterm/macro.execute.html \"macro crossterm::execute\")\n    Executes one or more command(s).\n\n[queue](https://docs.rs/crossterm/latest/crossterm/macro.queue.html \"macro crossterm::queue\")\n    Queues one or more command(s) for further execution.\n## Traits[\u00a7](https://docs.rs/crossterm/latest/crossterm/#traits)\n\n[Command](https://docs.rs/crossterm/latest/crossterm/trait.Command.html \"trait crossterm::Command\")\n    An interface for a command that performs an action on the terminal.\n\n[ExecutableCommand](https://docs.rs/crossterm/latest/crossterm/trait.ExecutableCommand.html \"trait crossterm::ExecutableCommand\")\n    An interface for types that can directly execute commands.\n\n[QueueableCommand](https://docs.rs/crossterm/latest/crossterm/trait.QueueableCommand.html \"trait crossterm::QueueableCommand\")\n    An interface for types that can queue commands for further execution.\n\n[SynchronizedUpdate](https://docs.rs/crossterm/latest/crossterm/trait.SynchronizedUpdate.html \"trait crossterm::SynchronizedUpdate\")\n    An interface for types that support synchronized updates.\n",
            "markdown_with_citations": "[](https://docs.rs/crossterm/latest/crossterm/all.html \"show sidebar\")\n# Crate crosstermCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9Cross-platform Terminal Manipulation Library\nCrossterm is a pure-rust, terminal manipulation library that makes it possible to write cross-platform text-based interfaces.\nThis crate supports all UNIX and Windows terminals down to Windows 7 (not all terminals are tested see Tested Terminals\u27e85\u27e9 for more info).\n### \u00a7\u27e86\u27e9Command API\nThe command API makes the use of `crossterm` much easier and offers more control over when and how a command is executed. A command is just an action you can perform on the terminal e.g. cursor movement.\nThe command API offers:\n  * Better Performance.\n  * Complete control over when to flush.\n  * Complete control over where the ANSI escape commands are executed to.\n  * Way easier and nicer API.\n\n\nThere are two ways to use the API command:\n  * Functions can execute commands on types that implement Write. Functions are easier to use and debug. There is a disadvantage, and that is that there is a boilerplate code involved.\n  * Macros are generally seen as more difficult and aren\u2019t always well supported by editors but offer an API with less boilerplate code. If you are not afraid of macros, this is a recommendation.\n\n\nLinux and Windows 10 systems support ANSI escape codes. Those ANSI escape codes are strings or rather a byte sequence. When we `write` and `flush` those to the terminal we can perform some action. For older windows systems a WinAPI call is made.\n#### \u00a7\u27e87\u27e9Supported Commands\n  * Module `cursor`\u27e88\u27e9\n    * Visibility - `Show`\u27e89\u27e9, `Hide`\u27e810\u27e9\n    * Appearance - `EnableBlinking`\u27e811\u27e9, `DisableBlinking`\u27e812\u27e9, `SetCursorStyle`\u27e813\u27e9\n    * Position - `SavePosition`\u27e814\u27e9, `RestorePosition`\u27e815\u27e9, `MoveUp`\u27e816\u27e9, `MoveDown`\u27e817\u27e9, `MoveLeft`\u27e818\u27e9, `MoveRight`\u27e819\u27e9, `MoveTo`\u27e820\u27e9, `MoveToColumn`\u27e821\u27e9,`MoveToRow`\u27e822\u27e9, `MoveToNextLine`\u27e823\u27e9, `MoveToPreviousLine`\u27e824\u27e9\n  * Module `event`\u27e825\u27e9\n    * Keyboard events - `PushKeyboardEnhancementFlags`\u27e826\u27e9, `PopKeyboardEnhancementFlags`\u27e827\u27e9\n    * Mouse events - `EnableMouseCapture`\u27e828\u27e9, `DisableMouseCapture`\u27e829\u27e9\n  * Module `style`\u27e830\u27e9\n    * Colors - `SetForegroundColor`\u27e831\u27e9, `SetBackgroundColor`\u27e832\u27e9, `ResetColor`\u27e833\u27e9, `SetColors`\u27e834\u27e9\n    * Attributes - `SetAttribute`\u27e835\u27e9, `SetAttributes`\u27e836\u27e9, `PrintStyledContent`\u27e837\u27e9\n  * Module `terminal`\u27e838\u27e9\n    * Scrolling - `ScrollUp`\u27e839\u27e9, `ScrollDown`\u27e840\u27e9\n    * Miscellaneous - `Clear`\u27e841\u27e9, `SetSize`\u27e842\u27e9, `SetTitle`\u27e843\u27e9, `DisableLineWrap`\u27e844\u27e9, `EnableLineWrap`\u27e845\u27e9\n    * Alternate screen - `EnterAlternateScreen`\u27e846\u27e9, `LeaveAlternateScreen`\u27e847\u27e9\n  * Module `clipboard`\u27e848\u27e9 (requires `feature = \"osc52\"`\u27e849\u27e9) \n    * Clipboard - `CopyToClipboard`\u27e850\u27e9\n\n\n#### \u00a7\u27e851\u27e9Command Execution\nThere are two different ways to execute commands:\n  * Lazy Execution\u27e852\u27e9\n  * Direct Execution\u27e853\u27e9\n\n\n##### \u00a7\u27e852\u27e9Lazy Execution\nFlushing bytes to the terminal buffer is a heavy system call. If we perform a lot of actions with the terminal, we want to do this periodically - like with a TUI editor - so that we can flush more data to the terminal buffer at the same time.\nCrossterm offers the possibility to do this with `queue`. With `queue` you can queue commands, and when you call Write::flush\u27e854\u27e9 these commands will be executed.\nYou can pass a custom buffer implementing std::io::Write\u27e855\u27e9 to this `queue` operation. The commands will be executed on that buffer. The most common buffer is std::io::stdout\u27e856\u27e9 however, std::io::stderr\u27e857\u27e9 is used sometimes as well.\n###### \u00a7\u27e858\u27e9Examples\nA simple demonstration that shows the command API in action with cursor commands.\nFunctions:\n```\nuse std::io::{Write, stdout};\nuse crossterm::{QueueableCommand, cursor};\nlet mut stdout = stdout();\nstdout.queue(cursor::MoveTo(5,5));\n// some other code ...\nstdout.flush();\n```\n\nThe queue\u27e859\u27e9 function returns itself, therefore you can use this to queue another command. Like `stdout.queue(Goto(5,5)).queue(Clear(ClearType::All))`.\nMacros:\n```\nuse std::io::{Write, stdout};\nuse crossterm::{queue, QueueableCommand, cursor};\nlet mut stdout = stdout();\nqueue!(stdout, cursor::MoveTo(5, 5));\n// some other code ...\n// move operation is performed only if we flush the buffer.\nstdout.flush();\n```\n\nYou can pass more than one command into the queue\u27e860\u27e9 macro like `queue!(stdout, MoveTo(5, 5), Clear(ClearType::All))` and they will be executed in the given order from left to right.\n##### \u00a7\u27e853\u27e9Direct Execution\nFor many applications it is not at all important to be efficient with \u2018flush\u2019 operations. For this use case there is the `execute` operation. This operation executes the command immediately, and calls the `flush` under water.\nYou can pass a custom buffer implementing std::io::Write\u27e855\u27e9 to this `execute` operation. The commands will be executed on that buffer. The most common buffer is std::io::stdout\u27e856\u27e9 however, std::io::stderr\u27e857\u27e9 is used sometimes as well.\n###### \u00a7\u27e861\u27e9Examples\nFunctions:\n```\nuse std::io::{Write, stdout};\nuse crossterm::{ExecutableCommand, cursor};\nlet mut stdout = stdout();\nstdout.execute(cursor::MoveTo(5,5));\n```\n\nThe execute\u27e862\u27e9 function returns itself, therefore you can use this to queue another command. Like `stdout.execute(Goto(5,5))?.execute(Clear(ClearType::All))`.\nMacros:\n```\nuse std::io::{stdout, Write};\nuse crossterm::{execute, ExecutableCommand, cursor};\nlet mut stdout = stdout();\nexecute!(stdout, cursor::MoveTo(5, 5));\n```\n\nYou can pass more than one command into the execute\u27e863\u27e9 macro like `execute!(stdout, MoveTo(5, 5), Clear(ClearType::All))` and they will be executed in the given order from left to right.\n### \u00a7\u27e864\u27e9Examples\nPrint a rectangle colored with magenta and use both direct execution and lazy execution.\nFunctions:\n```\nuse std::io::{self, Write};\nuse crossterm::{\n  ExecutableCommand, QueueableCommand,\n  terminal, cursor, style::{self, Stylize}\n};\nfn main() -> io::Result<()> {\n let mut stdout = io::stdout();\n stdout.execute(terminal::Clear(terminal::ClearType::All))?;\n for y in 0..40 {\n  for x in 0..150 {\n   if (y == 0 || y == 40 - 1) || (x == 0 || x == 150 - 1) {\n    // in this loop we are more efficient by not flushing the buffer.\n    stdout\n     .queue(cursor::MoveTo(x,y))?\n     .queue(style::PrintStyledContent( \"\u2588\".magenta()))?;\n   }\n  }\n }\n stdout.flush()?;\n Ok(())\n}\n```\n\nMacros:\n```\nuse std::io::{self, Write};\nuse crossterm::{\n  execute, queue,\n  style::{self, Stylize}, cursor, terminal\n};\nfn main() -> io::Result<()> {\n let mut stdout = io::stdout();\n execute!(stdout, terminal::Clear(terminal::ClearType::All))?;\n for y in 0..40 {\n  for x in 0..150 {\n   if (y == 0 || y == 40 - 1) || (x == 0 || x == 150 - 1) {\n    // in this loop we are more efficient by not flushing the buffer.\n    queue!(stdout, cursor::MoveTo(x,y), style::PrintStyledContent( \"\u2588\".magenta()))?;\n   }\n  }\n }\n stdout.flush()?;\n Ok(())\n}\n```\n\n### \u00a7\u27e865\u27e9Feature Flags\n#### \u00a7\u27e866\u27e9Default features\n  * **`bracketed-paste`**_(enabled by default)_ \u2014 Enables triggering `Event::Paste`\u27e867\u27e9 when pasting text into the terminal.\n  * **`events`**_(enabled by default)_ \u2014 Enables reading input/events from the system using the `event`\u27e825\u27e9 module.\n  * **`windows`**_(enabled by default)_ \u2014 Enables windows specific crates.\n\n\n#### \u00a7\u27e849\u27e9Optional Features\n  * **`event-stream`**\u2014 Enables theEventStream\u27e868\u27e9 struct for async event reading.\n  * **`serde`**\u2014 Enables`serde`\u27e869\u27e9 for various types.\n  * **`use-dev-tty`**\u2014 Enables raw file descriptor polling / selecting instead of mio.\n  * **`derive-more`**_(enabled by default)_ \u2014 Enables `is_*` helper functions for event enums.\n  * **`osc52`**\u2014 Enables interacting with a host clipboard via`clipboard`\u27e848\u27e9\n\n\n## Modules\u00a7\u27e870\u27e9\n\nclipboard\u27e848\u27e9\n    A module for clipboard interaction\n\ncursor\u27e88\u27e9\n    A module to work with the terminal cursor\n\nevent\u27e825\u27e9\n    A module to read events.\n\nstyle\u27e830\u27e9\n    A module to apply attributes and colors on your text.\n\nterminal\u27e838\u27e9\n    A module to work with the terminal.\n\ntty\u27e871\u27e9\n    A module to query if the current instance is a tty. Making it a little more convenient and safe to query whether something is a terminal teletype or not. This module defines the IsTty trait and the is_tty method to return true if the item represents a terminal.\n## Macros\u00a7\u27e872\u27e9\n\nexecute\u27e863\u27e9\n    Executes one or more command(s).\n\nqueue\u27e860\u27e9\n    Queues one or more command(s) for further execution.\n## Traits\u00a7\u27e873\u27e9\n\nCommand\u27e874\u27e9\n    An interface for a command that performs an action on the terminal.\n\nExecutableCommand\u27e862\u27e9\n    An interface for types that can directly execute commands.\n\nQueueableCommand\u27e859\u27e9\n    An interface for types that can queue commands for further execution.\n\nSynchronizedUpdate\u27e875\u27e9\n    An interface for types that support synchronized updates.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/crossterm/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/crossterm/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/crossterm/latest/src/crossterm/lib.rs.html#1-263: Source\n\u27e84\u27e9 https://docs.rs/crossterm/latest/crossterm/#cross-platform-terminal-manipulation-library: \u00a7\n\u27e85\u27e9 https://github.com/crossterm-rs/crossterm#tested-terminals: Tested Terminals\n\u27e86\u27e9 https://docs.rs/crossterm/latest/crossterm/#command-api: \u00a7\n\u27e87\u27e9 https://docs.rs/crossterm/latest/crossterm/#supported-commands: \u00a7\n\u27e88\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/index.html: `cursor`\n\u27e89\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.Show.html: `Show`\n\u27e810\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.Hide.html: `Hide`\n\u27e811\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.EnableBlinking.html: `EnableBlinking`\n\u27e812\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.DisableBlinking.html: `DisableBlinking`\n\u27e813\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/enum.SetCursorStyle.html: `SetCursorStyle`\n\u27e814\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.SavePosition.html: `SavePosition`\n\u27e815\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.RestorePosition.html: `RestorePosition`\n\u27e816\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveUp.html: `MoveUp`\n\u27e817\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveDown.html: `MoveDown`\n\u27e818\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveLeft.html: `MoveLeft`\n\u27e819\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveRight.html: `MoveRight`\n\u27e820\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveTo.html: `MoveTo`\n\u27e821\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToColumn.html: `MoveToColumn`\n\u27e822\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToRow.html: `MoveToRow`\n\u27e823\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToNextLine.html: `MoveToNextLine`\n\u27e824\u27e9 https://docs.rs/crossterm/latest/crossterm/cursor/struct.MoveToPreviousLine.html: `MoveToPreviousLine`\n\u27e825\u27e9 https://docs.rs/crossterm/latest/crossterm/event/index.html: `event`\n\u27e826\u27e9 https://docs.rs/crossterm/latest/crossterm/event/struct.PushKeyboardEnhancementFlags.html: `PushKeyboardEnhancementFlags`\n\u27e827\u27e9 https://docs.rs/crossterm/latest/crossterm/event/struct.PopKeyboardEnhancementFlags.html: `PopKeyboardEnhancementFlags`\n\u27e828\u27e9 https://docs.rs/crossterm/latest/crossterm/event/struct.EnableMouseCapture.html: `EnableMouseCapture`\n\u27e829\u27e9 https://docs.rs/crossterm/latest/crossterm/event/struct.DisableMouseCapture.html: `DisableMouseCapture`\n\u27e830\u27e9 https://docs.rs/crossterm/latest/crossterm/style/index.html: `style`\n\u27e831\u27e9 https://docs.rs/crossterm/latest/crossterm/style/struct.SetForegroundColor.html: `SetForegroundColor`\n\u27e832\u27e9 https://docs.rs/crossterm/latest/crossterm/style/struct.SetBackgroundColor.html: `SetBackgroundColor`\n\u27e833\u27e9 https://docs.rs/crossterm/latest/crossterm/style/struct.ResetColor.html: `ResetColor`\n\u27e834\u27e9 https://docs.rs/crossterm/latest/crossterm/style/struct.SetColors.html: `SetColors`\n\u27e835\u27e9 https://docs.rs/crossterm/latest/crossterm/style/struct.SetAttribute.html: `SetAttribute`\n\u27e836\u27e9 https://docs.rs/crossterm/latest/crossterm/style/struct.SetAttributes.html: `SetAttributes`\n\u27e837\u27e9 https://docs.rs/crossterm/latest/crossterm/style/struct.PrintStyledContent.html: `PrintStyledContent`\n\u27e838\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/index.html: `terminal`\n\u27e839\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.ScrollUp.html: `ScrollUp`\n\u27e840\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.ScrollDown.html: `ScrollDown`\n\u27e841\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.Clear.html: `Clear`\n\u27e842\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.SetSize.html: `SetSize`\n\u27e843\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.SetTitle.html: `SetTitle`\n\u27e844\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.DisableLineWrap.html: `DisableLineWrap`\n\u27e845\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.EnableLineWrap.html: `EnableLineWrap`\n\u27e846\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.EnterAlternateScreen.html: `EnterAlternateScreen`\n\u27e847\u27e9 https://docs.rs/crossterm/latest/crossterm/terminal/struct.LeaveAlternateScreen.html: `LeaveAlternateScreen`\n\u27e848\u27e9 https://docs.rs/crossterm/latest/crossterm/clipboard/index.html: `clipboard`\n\u27e849\u27e9 https://docs.rs/crossterm/latest/crossterm/#optional-features: `feature = \"osc52\"`\n\u27e850\u27e9 https://docs.rs/crossterm/latest/crossterm/clipboard/struct.CopyToClipboard.html: `CopyToClipboard`\n\u27e851\u27e9 https://docs.rs/crossterm/latest/crossterm/#command-execution: \u00a7\n\u27e852\u27e9 https://docs.rs/crossterm/latest/crossterm/#lazy-execution: Lazy Execution\n\u27e853\u27e9 https://docs.rs/crossterm/latest/crossterm/#direct-execution: Direct Execution\n\u27e854\u27e9 https://doc.rust-lang.org/std/io/trait.Write.html#tymethod.flush: Write::flush\n\u27e855\u27e9 https://doc.rust-lang.org/std/io/trait.Write.html: std::io::Write\n\u27e856\u27e9 https://doc.rust-lang.org/std/io/fn.stdout.html: std::io::stdout\n\u27e857\u27e9 https://doc.rust-lang.org/std/io/fn.stderr.html: std::io::stderr\n\u27e858\u27e9 https://docs.rs/crossterm/latest/crossterm/#examples: \u00a7\n\u27e859\u27e9 https://docs.rs/crossterm/latest/crossterm/trait.QueueableCommand.html: queue\n\u27e860\u27e9 https://docs.rs/crossterm/latest/crossterm/macro.queue.html: queue\n\u27e861\u27e9 https://docs.rs/crossterm/latest/crossterm/#examples-1: \u00a7\n\u27e862\u27e9 https://docs.rs/crossterm/latest/crossterm/trait.ExecutableCommand.html: execute\n\u27e863\u27e9 https://docs.rs/crossterm/latest/crossterm/macro.execute.html: execute\n\u27e864\u27e9 https://docs.rs/crossterm/latest/crossterm/#examples-2: \u00a7\n\u27e865\u27e9 https://docs.rs/crossterm/latest/crossterm/#feature-flags: \u00a7\n\u27e866\u27e9 https://docs.rs/crossterm/latest/crossterm/#default-features: \u00a7\n\u27e867\u27e9 https://docs.rs/crossterm/latest/crossterm/event/enum.Event.html#variant.Paste: variant crossterm::event::Event::Paste - `Event::Paste`\n\u27e868\u27e9 https://docs.rs/crossterm/latest/crossterm/event/struct.EventStream.html: struct crossterm::event::EventStream - EventStream\n\u27e869\u27e9 https://docs.rs/serde/1.0.219/x86_64-unknown-linux-gnu/serde/index.html: mod serde - `serde`\n\u27e870\u27e9 https://docs.rs/crossterm/latest/crossterm/#modules: \u00a7\n\u27e871\u27e9 https://docs.rs/crossterm/latest/crossterm/tty/index.html: mod crossterm::tty - tty\n\u27e872\u27e9 https://docs.rs/crossterm/latest/crossterm/#macros: \u00a7\n\u27e873\u27e9 https://docs.rs/crossterm/latest/crossterm/#traits: \u00a7\n\u27e874\u27e9 https://docs.rs/crossterm/latest/crossterm/trait.Command.html: trait crossterm::Command - Command\n\u27e875\u27e9 https://docs.rs/crossterm/latest/crossterm/trait.SynchronizedUpdate.html: trait crossterm::SynchronizedUpdate - SynchronizedUpdate\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `crossterm` crate is a pure Rust library for cross-platform terminal manipulation, supporting both UNIX and Windows systems (including Windows 7). It provides a rich set of features, including cursor control, keyboard and mouse event handling, text styling, terminal resizing, scrolling, and clipboard operations. With its efficient Command API, users can perform direct or lazy execution of terminal actions, offering flexibility and performance for building text-based interfaces.",
          "feature_summary": null,
          "use_case": "Utilities",
          "score": 7.0,
          "factual_counterfactual": "### Pair 1: Cross-platform Compatibility  \n\u2705 Factual: The `crossterm` crate supports cross-platform terminal manipulation, including UNIX systems and Windows versions down to Windows 7, using ANSI escape codes or WinAPI calls for older Windows systems.  \n\u274c Counterfactual: The `crossterm` crate only supports UNIX-based systems and does not provide compatibility with any version of Windows.  \n\n---\n\n### Pair 2: Command API Features  \n\u2705 Factual: The Command API in `crossterm` allows developers to execute terminal commands with better performance, complete control over flushing and execution, and reduced boilerplate when using macros.  \n\u274c Counterfactual: The Command API in `crossterm` is limited to cursor movement commands and does not support features like color manipulation or terminal resizing.  \n\n---\n\n### Pair 3: Cursor Manipulation  \n\u2705 Factual: The `crossterm` crate provides extensive cursor manipulation commands, such as `MoveTo`, `SavePosition`, and `RestorePosition`, enabling precise control over cursor behavior in terminal applications.  \n\u274c Counterfactual: The `crossterm` crate does not include any cursor manipulation commands and relies entirely on external libraries for such functionality.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-50221f01-cb76abf4-1751260143",
      "timestamp": "2025-06-30T05:09:03.091769+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]