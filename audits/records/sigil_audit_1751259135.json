[
  {
    "execution_id": "exec-4c94a29e-8dc3403d-1751259121",
    "timestamp": "2025-06-30T04:52:01.916828+00:00",
    "sacred_chain": {
      "input_data": "rmp-serde",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'rmp-serde' -> 'rmp-serde'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "rmp-serde",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/rmp-serde",
            "title": "rmp-serde v1.3.0",
            "content": {
              "raw_markdown": "#  rmp-serde v1.3.0\nSerde bindings for RMP \n  * [ #messagepack ](https://crates.io/keywords/messagepack)\n  * [ #msgpack ](https://crates.io/keywords/msgpack)\n  * [ #serialization ](https://crates.io/keywords/serialization)\n  * [ #serde ](https://crates.io/keywords/serde)\n\n\n  * [ Readme ](https://crates.io/crates/rmp-serde)\n  * [ 42 Versions ](https://crates.io/crates/rmp-serde/versions)\n  * [ Dependencies ](https://crates.io/crates/rmp-serde/dependencies)\n  * [ Dependents ](https://crates.io/crates/rmp-serde/reverse_dependencies)\n\n\n## Metadata\nabout 1 year ago \n2021 edition \n[ MIT ](https://choosealicense.com/licenses/mit)\n32.3 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add rmp-serde\nOr add the following line to your Cargo.toml:\nrmp-serde = \"1.3.0\"\n## Documentation\n[ docs.rs/rmp-serde ](https://docs.rs/rmp-serde)\n## Repository\n[ github.com/3Hren/msgpack-rust ](https://github.com/3Hren/msgpack-rust)\n## Owners\n## Categories\n  * [Encoding](https://crates.io/categories/encoding)\n\n\n[ Report crate ](https://crates.io/support?crate=rmp-serde&inquire=crate-violation)\n### Stats Overview\n46,852,407 Downloads all time\n42 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  rmp-serde v1.3.0\nSerde bindings for RMP \n  *  #messagepack \u27e81\u27e9\n  *  #msgpack \u27e82\u27e9\n  *  #serialization \u27e83\u27e9\n  *  #serde \u27e84\u27e9\n\n\n  *  Readme \u27e85\u27e9\n  *  42 Versions \u27e86\u27e9\n  *  Dependencies \u27e87\u27e9\n  *  Dependents \u27e88\u27e9\n\n\n## Metadata\nabout 1 year ago \n2021 edition \n MIT \u27e89\u27e9\n32.3 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add rmp-serde\nOr add the following line to your Cargo.toml:\nrmp-serde = \"1.3.0\"\n## Documentation\n docs.rs/rmp-serde \u27e810\u27e9\n## Repository\n github.com/3Hren/msgpack-rust \u27e811\u27e9\n## Owners\n## Categories\n  * Encoding\u27e812\u27e9\n\n\n Report crate \u27e813\u27e9\n### Stats Overview\n46,852,407 Downloads all time\n42 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/messagepack:  #messagepack \n\u27e82\u27e9 https://crates.io/keywords/msgpack:  #msgpack \n\u27e83\u27e9 https://crates.io/keywords/serialization:  #serialization \n\u27e84\u27e9 https://crates.io/keywords/serde:  #serde \n\u27e85\u27e9 https://crates.io/crates/rmp-serde:  Readme \n\u27e86\u27e9 https://crates.io/crates/rmp-serde/versions:  42 Versions \n\u27e87\u27e9 https://crates.io/crates/rmp-serde/dependencies:  Dependencies \n\u27e88\u27e9 https://crates.io/crates/rmp-serde/reverse_dependencies:  Dependents \n\u27e89\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e810\u27e9 https://docs.rs/rmp-serde:  docs.rs/rmp-serde \n\u27e811\u27e9 https://github.com/3Hren/msgpack-rust:  github.com/3Hren/msgpack-rust \n\u27e812\u27e9 https://crates.io/categories/encoding: Encoding\n\u27e813\u27e9 https://crates.io/support?crate=rmp-serde&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1282,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "112911.8139422"
          },
          "docs_rs": {
            "url": "https://docs.rs/rmp-serde",
            "title": "Crate rmp_serdeCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/rmp-serde/latest/rmp_serde/all.html \"show sidebar\")\n# Crate rmp_serdeCopy item path\n[Settings](https://docs.rs/rmp-serde/latest/settings.html)\n[Help](https://docs.rs/rmp-serde/latest/help.html)\nSummary[Source](https://docs.rs/rmp-serde/latest/src/rmp_serde/lib.rs.html#1-337)\nExpand description\n## [\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#messagepack--serde)MessagePack + Serde\nThis crate connects Rust MessagePack library with [`serde`](https://serde.rs/) providing an ability to easily serialize and deserialize both Rust built-in types, the standard library and custom data structures.\n### [\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#motivating-example)Motivating example\n```\nlet buf = rmp_serde::to_vec(&(42, \"the Answer\")).unwrap();\nassert_eq!(\n  vec![0x92, 0x2a, 0xaa, 0x74, 0x68, 0x65, 0x20, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72],\n  buf\n);\nassert_eq!((42, \"the Answer\"), rmp_serde::from_slice(&buf).unwrap());\n```\n\n### [\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#type-based-serialization-and-deserialization)Type-based Serialization and Deserialization\nSerde provides a mechanism for low boilerplate serialization & deserialization of values to and from MessagePack via the serialization API.\nTo be able to serialize a piece of data, it must implement the `serde::Serialize` trait. To be able to deserialize a piece of data, it must implement the `serde::Deserialize` trait. Serde provides an annotation to automatically generate the code for these traits: `#[derive(Serialize, Deserialize)]`.\n### [\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#examples)Examples\n```\nuse std::collections::HashMap;\nuse serde::{Deserialize, Serialize};\nuse rmp_serde::{Deserializer, Serializer};\n#[derive(Debug, PartialEq, Deserialize, Serialize)]\nstruct Human {\n  age: u32,\n  name: String,\n}\nfn main() {\n  let mut buf = Vec::new();\n  let val = Human {\n    age: 42,\n    name: \"John\".into(),\n  };\n  val.serialize(&mut Serializer::new(&mut buf)).unwrap();\n}\n```\n\n### [\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#efficient-storage-of-u8-types)Efficient storage of `&[u8]` types\nMessagePack can efficiently store binary data. However, Serde\u2019s standard derived implementations _do not_ use binary representations by default. Serde prefers to represent types like `&[u8; N]` or `Vec<u8>` as arrays of objects of arbitrary/unknown type, and not as slices of bytes. This creates about a 50% overhead in storage size.\nWrap your data in [`serde_bytes`](https://lib.rs/crates/serde_bytes) to store blobs quickly and efficiently. Alternatively, [configure an override in `rmp_serde` to force use of byte slices](https://docs.rs/rmp-serde/latest/rmp_serde/encode/struct.Serializer.html#method.with_bytes).\n## Re-exports[\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#reexports)\n\n`pub use crate::decode::from_read[](https://docs.rs/rmp-serde/latest/rmp_serde/decode/fn.from_read.html \"fn rmp_serde::decode::from_read\");`\n\n\n`pub use crate::decode::Deserializer[](https://docs.rs/rmp-serde/latest/rmp_serde/decode/struct.Deserializer.html \"struct rmp_serde::decode::Deserializer\");`\n\n\n`pub use crate::encode::to_vec[](https://docs.rs/rmp-serde/latest/rmp_serde/encode/fn.to_vec.html \"fn rmp_serde::encode::to_vec\");`\n\n\n`pub use crate::encode::to_vec_named[](https://docs.rs/rmp-serde/latest/rmp_serde/encode/fn.to_vec_named.html \"fn rmp_serde::encode::to_vec_named\");`\n\n\n`pub use crate::encode::Serializer[](https://docs.rs/rmp-serde/latest/rmp_serde/encode/struct.Serializer.html \"struct rmp_serde::encode::Serializer\");`\n\n\n`pub use crate::decode::from_slice[](https://docs.rs/rmp-serde/latest/rmp_serde/decode/fn.from_slice.html \"fn rmp_serde::decode::from_slice\");`\n\n## Modules[\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#modules)\n\n[config](https://docs.rs/rmp-serde/latest/rmp_serde/config/index.html \"mod rmp_serde::config\")\n    Change MessagePack behavior with configuration wrappers.\n\n[decode](https://docs.rs/rmp-serde/latest/rmp_serde/decode/index.html \"mod rmp_serde::decode\")\n    Generic MessagePack deserialization.\n\n[encode](https://docs.rs/rmp-serde/latest/rmp_serde/encode/index.html \"mod rmp_serde::encode\")\n    Serialize a Rust data structure into MessagePack data.\n## Constants[\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#constants)\n\n[MSGPACK_EXT_STRUCT_NAME](https://docs.rs/rmp-serde/latest/rmp_serde/constant.MSGPACK_EXT_STRUCT_NAME.html \"constant rmp_serde::MSGPACK_EXT_STRUCT_NAME\")\n    Hack used to serialize MessagePack Extension types.\n",
              "markdown_with_citations": "[](https://docs.rs/rmp-serde/latest/rmp_serde/all.html \"show sidebar\")\n# Crate rmp_serdeCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9MessagePack + Serde\nThis crate connects Rust MessagePack library with `serde`\u27e85\u27e9 providing an ability to easily serialize and deserialize both Rust built-in types, the standard library and custom data structures.\n### \u00a7\u27e86\u27e9Motivating example\n```\nlet buf = rmp_serde::to_vec(&(42, \"the Answer\")).unwrap();\nassert_eq!(\n  vec![0x92, 0x2a, 0xaa, 0x74, 0x68, 0x65, 0x20, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72],\n  buf\n);\nassert_eq!((42, \"the Answer\"), rmp_serde::from_slice(&buf).unwrap());\n```\n\n### \u00a7\u27e87\u27e9Type-based Serialization and Deserialization\nSerde provides a mechanism for low boilerplate serialization & deserialization of values to and from MessagePack via the serialization API.\nTo be able to serialize a piece of data, it must implement the `serde::Serialize` trait. To be able to deserialize a piece of data, it must implement the `serde::Deserialize` trait. Serde provides an annotation to automatically generate the code for these traits: `#[derive(Serialize, Deserialize)]`.\n### \u00a7\u27e88\u27e9Examples\n```\nuse std::collections::HashMap;\nuse serde::{Deserialize, Serialize};\nuse rmp_serde::{Deserializer, Serializer};\n#[derive(Debug, PartialEq, Deserialize, Serialize)]\nstruct Human {\n  age: u32,\n  name: String,\n}\nfn main() {\n  let mut buf = Vec::new();\n  let val = Human {\n    age: 42,\n    name: \"John\".into(),\n  };\n  val.serialize(&mut Serializer::new(&mut buf)).unwrap();\n}\n```\n\n### \u00a7\u27e89\u27e9Efficient storage of `&[u8]` types\nMessagePack can efficiently store binary data. However, Serde\u2019s standard derived implementations _do not_ use binary representations by default. Serde prefers to represent types like `&[u8; N]` or `Vec<u8>` as arrays of objects of arbitrary/unknown type, and not as slices of bytes. This creates about a 50% overhead in storage size.\nWrap your data in `serde_bytes`\u27e810\u27e9 to store blobs quickly and efficiently. Alternatively, configure an override in `rmp_serde` to force use of byte slices\u27e811\u27e9.\n## Re-exports\u00a7\u27e812\u27e9\n\n`pub use crate::decode::from_read[](https://docs.rs/rmp-serde/latest/rmp_serde/decode/fn.from_read.html \"fn rmp_serde::decode::from_read\");`\n\n\n`pub use crate::decode::Deserializer[](https://docs.rs/rmp-serde/latest/rmp_serde/decode/struct.Deserializer.html \"struct rmp_serde::decode::Deserializer\");`\n\n\n`pub use crate::encode::to_vec[](https://docs.rs/rmp-serde/latest/rmp_serde/encode/fn.to_vec.html \"fn rmp_serde::encode::to_vec\");`\n\n\n`pub use crate::encode::to_vec_named[](https://docs.rs/rmp-serde/latest/rmp_serde/encode/fn.to_vec_named.html \"fn rmp_serde::encode::to_vec_named\");`\n\n\n`pub use crate::encode::Serializer[](https://docs.rs/rmp-serde/latest/rmp_serde/encode/struct.Serializer.html \"struct rmp_serde::encode::Serializer\");`\n\n\n`pub use crate::decode::from_slice[](https://docs.rs/rmp-serde/latest/rmp_serde/decode/fn.from_slice.html \"fn rmp_serde::decode::from_slice\");`\n\n## Modules\u00a7\u27e813\u27e9\n\nconfig\u27e814\u27e9\n    Change MessagePack behavior with configuration wrappers.\n\ndecode\u27e815\u27e9\n    Generic MessagePack deserialization.\n\nencode\u27e816\u27e9\n    Serialize a Rust data structure into MessagePack data.\n## Constants\u00a7\u27e817\u27e9\n\nMSGPACK_EXT_STRUCT_NAME\u27e818\u27e9\n    Hack used to serialize MessagePack Extension types.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/rmp-serde/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/rmp-serde/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/rmp-serde/latest/src/rmp_serde/lib.rs.html#1-337: Source\n\u27e84\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#messagepack--serde: \u00a7\n\u27e85\u27e9 https://serde.rs/: `serde`\n\u27e86\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#motivating-example: \u00a7\n\u27e87\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#type-based-serialization-and-deserialization: \u00a7\n\u27e88\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#examples: \u00a7\n\u27e89\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#efficient-storage-of-u8-types: \u00a7\n\u27e810\u27e9 https://lib.rs/crates/serde_bytes: `serde_bytes`\n\u27e811\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/encode/struct.Serializer.html#method.with_bytes: configure an override in `rmp_serde` to force use of byte slices\n\u27e812\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#reexports: \u00a7\n\u27e813\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#modules: \u00a7\n\u27e814\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/config/index.html: mod rmp_serde::config - config\n\u27e815\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/decode/index.html: mod rmp_serde::decode - decode\n\u27e816\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/encode/index.html: mod rmp_serde::encode - encode\n\u27e817\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#constants: \u00a7\n\u27e818\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/constant.MSGPACK_EXT_STRUCT_NAME.html: constant rmp_serde::MSGPACK_EXT_STRUCT_NAME - MSGPACK_EXT_STRUCT_NAME\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 4477,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "112912.4487592"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/rmp-serde",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [7 releases](https://lib.rs/crates/rmp-serde/versions) (4 stable)\n1.3.0 |  Apr 30, 2024   \n---|---  \n1.1.2 |  Jul 21, 2023   \n1.1.1 |  Sep 27, 2022   \n1.1.0 |  ~~Apr 19, 2022~~  \n0.8.2 |  ~~Nov 10, 2015~~  \n#**5** in [Encoding](https://lib.rs/encoding \"Encoding and/or decoding data from one data format to another.\")\nDownload history 921631/week @ 2025-03-03 891185/week @ 2025-03-10 1135985/week @ 2025-03-17 1252103/week @ 2025-03-24 778875/week @ 2025-03-31 873214/week @ 2025-04-07 707624/week @ 2025-04-14 665893/week @ 2025-04-21 574801/week @ 2025-04-28 640632/week @ 2025-05-05 652112/week @ 2025-05-12 661070/week @ 2025-05-19 596222/week @ 2025-05-26 678181/week @ 2025-06-02 651364/week @ 2025-06-09 661316/week @ 2025-06-16\n**2,609,978** downloads per month Used in [**2,016** crates (785 directly)](https://lib.rs/crates/rmp-serde/rev)\n**MIT** license \n195KB  4K  SLoC\n# MessagePack + Serde\nThis crate connects Rust MessagePack library with [``serde``](https://serde.rs/) providing an ability to easily serialize and deserialize both Rust built-in types, the standard library and custom data structures.\n## Motivating example\n```\n``let` buf `=` `rmp_serde`::``to_vec`(``&``(``42``,` ``\"`the Answer`\"```)``)``.``unwrap``(``)``;`\n`assert_eq!``(`\n  `vec!``[``0x92``,` `0x2a``,` `0xaa``,` `0x74``,` `0x68``,` `0x65``,` `0x20``,` `0x41``,` `0x6e``,` `0x73``,` `0x77``,` `0x65``,` `0x72``]``,`\n  buf\n`)``;`\n`assert_eq!``(``(``42``,` ``\"`the Answer`\"```)``,` `rmp_serde`::``from_slice`(``&`buf`)``.``unwrap``(``)``)``;`\n`\n```\n\n## Type-based Serialization and Deserialization\nSerde provides a mechanism for low boilerplate serialization & deserialization of values to and from MessagePack via the serialization API.\nTo be able to serialize a piece of data, it must implement the ```serde`::``Serialize`` trait. To be able to deserialize a piece of data, it must implement the ```serde`::``Deserialize`` trait. Serde provides an annotation to automatically generate the code for these traits: ````#``[``derive```(```Serialize`,` Deserialize```)```]````.\n## Examples\n```\n``use` `std`::```collections`::``HashMap`;`\n`use` `serde`::````{`Deserialize`,` Serialize```}```;`\n`use` `rmp_serde`::````{`Deserializer`,` Serializer```}```;`\n``#``[``derive```(```Debug`,` PartialEq`,` Deserialize`,` Serialize```)```]``\n``struct` ```Human` ````{`\n  `age``:` `u32`,\n  `name``:` String,\n```}```\n``fn` `main`````(````)``````{`\n  `let` `mut` buf `=` `Vec```::``new`(``)``;`\n  `let` val `=` Human `{`\n    age`:` `42``,`\n    name`:` ``\"`John`\"```.``into``(``)``,`\n  `}``;`\n  val`.``serialize``(``&``mut` `Serializer`::``new`(``&``mut` buf`)``)``.``unwrap``(``)``;`\n```}```\n`\n```\n\n## Efficient storage of ```&``[``u8``]``` types\nMessagePack can efficiently store binary data. However, Serde's standard derived implementations _do not_ use binary representations by default. Serde prefers to represent types like ```&``[``u8``;` N`]``` or ````Vec``<``u8``>```` as arrays of objects of arbitrary/unknown type, and not as slices of bytes. This creates about a 50% overhead in storage size.\nWrap your data in [``serde_bytes``](https://lib.rs/crates/serde_bytes) to store blobs quickly and efficiently. Alternatively, [configure an override in ``rmp_serde`` to force use of byte slices](https://docs.rs/rmp-serde/latest/rmp_serde/encode/struct.Serializer.html#method.with_bytes).\n#### Dependencies\n~275\u2013580KB  ~11K SLoC\n  * [byteorder](https://lib.rs/crates/byteorder \"1.4.3\")\n  * [rmp](https://lib.rs/crates/rmp \"0.8.14\")\n  * [serde](https://lib.rs/crates/serde \"1.0.197\")\n\n\n  * dev  [serde_bytes](https://lib.rs/crates/serde_bytes \"0.11.5\")\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  7 releases\u27e81\u27e9 (4 stable)\n1.3.0 |  Apr 30, 2024   \n---|---  \n1.1.2 |  Jul 21, 2023   \n1.1.1 |  Sep 27, 2022   \n1.1.0 |  ~~Apr 19, 2022~~  \n0.8.2 |  ~~Nov 10, 2015~~  \n#**5** in Encoding\u27e82\u27e9\nDownload history 921631/week @ 2025-03-03 891185/week @ 2025-03-10 1135985/week @ 2025-03-17 1252103/week @ 2025-03-24 778875/week @ 2025-03-31 873214/week @ 2025-04-07 707624/week @ 2025-04-14 665893/week @ 2025-04-21 574801/week @ 2025-04-28 640632/week @ 2025-05-05 652112/week @ 2025-05-12 661070/week @ 2025-05-19 596222/week @ 2025-05-26 678181/week @ 2025-06-02 651364/week @ 2025-06-09 661316/week @ 2025-06-16\n**2,609,978** downloads per month Used in **2,016** crates (785 directly)\u27e83\u27e9\n**MIT** license \n195KB  4K  SLoC\n# MessagePack + Serde\nThis crate connects Rust MessagePack library with ``serde``\u27e84\u27e9 providing an ability to easily serialize and deserialize both Rust built-in types, the standard library and custom data structures.\n## Motivating example\n```\n``let` buf `=` `rmp_serde`::``to_vec`(``&``(``42``,` ``\"`the Answer`\"```)``)``.``unwrap``(``)``;`\n`assert_eq!``(`\n  `vec!``[``0x92``,` `0x2a``,` `0xaa``,` `0x74``,` `0x68``,` `0x65``,` `0x20``,` `0x41``,` `0x6e``,` `0x73``,` `0x77``,` `0x65``,` `0x72``]``,`\n  buf\n`)``;`\n`assert_eq!``(``(``42``,` ``\"`the Answer`\"```)``,` `rmp_serde`::``from_slice`(``&`buf`)``.``unwrap``(``)``)``;`\n`\n```\n\n## Type-based Serialization and Deserialization\nSerde provides a mechanism for low boilerplate serialization & deserialization of values to and from MessagePack via the serialization API.\nTo be able to serialize a piece of data, it must implement the ```serde`::``Serialize`` trait. To be able to deserialize a piece of data, it must implement the ```serde`::``Deserialize`` trait. Serde provides an annotation to automatically generate the code for these traits: ````#``[``derive```(```Serialize`,` Deserialize```)```]````.\n## Examples\n```\n``use` `std`::```collections`::``HashMap`;`\n`use` `serde`::````{`Deserialize`,` Serialize```}```;`\n`use` `rmp_serde`::````{`Deserializer`,` Serializer```}```;`\n``#``[``derive```(```Debug`,` PartialEq`,` Deserialize`,` Serialize```)```]``\n``struct` ```Human` ````{`\n  `age``:` `u32`,\n  `name``:` String,\n```}```\n``fn` `main`````(````)``````{`\n  `let` `mut` buf `=` `Vec```::``new`(``)``;`\n  `let` val `=` Human `{`\n    age`:` `42``,`\n    name`:` ``\"`John`\"```.``into``(``)``,`\n  `}``;`\n  val`.``serialize``(``&``mut` `Serializer`::``new`(``&``mut` buf`)``)``.``unwrap``(``)``;`\n```}```\n`\n```\n\n## Efficient storage of ```&``[``u8``]``` types\nMessagePack can efficiently store binary data. However, Serde's standard derived implementations _do not_ use binary representations by default. Serde prefers to represent types like ```&``[``u8``;` N`]``` or ````Vec``<``u8``>```` as arrays of objects of arbitrary/unknown type, and not as slices of bytes. This creates about a 50% overhead in storage size.\nWrap your data in ``serde_bytes``\u27e85\u27e9 to store blobs quickly and efficiently. Alternatively, configure an override in ``rmp_serde`` to force use of byte slices\u27e86\u27e9.\n#### Dependencies\n~275\u2013580KB  ~11K SLoC\n  * byteorder\u27e87\u27e9\n  * rmp\u27e88\u27e9\n  * serde\u27e89\u27e9\n\n\n  * dev  serde_bytes\u27e85\u27e9\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/rmp-serde/versions: 7 releases\n\u27e82\u27e9 https://lib.rs/encoding: Encoding and/or decoding data from one data format to another. - Encoding\n\u27e83\u27e9 https://lib.rs/crates/rmp-serde/rev: **2,016** crates (785 directly)\n\u27e84\u27e9 https://serde.rs/: ``serde``\n\u27e85\u27e9 https://lib.rs/crates/serde_bytes: ``serde_bytes``\n\u27e86\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/encode/struct.Serializer.html#method.with_bytes: configure an override in ``rmp_serde`` to force use of byte slices\n\u27e87\u27e9 https://lib.rs/crates/byteorder: 1.4.3 - byteorder\n\u27e88\u27e9 https://lib.rs/crates/rmp: 0.8.14 - rmp\n\u27e89\u27e9 https://lib.rs/crates/serde: 1.0.197 - serde\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 3675,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "112912.9755372"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "byteorder",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\libbyteorder-b12c2005ffdddab5.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\build\\serde-9fa5cff0eb8eb847\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\build\\serde-9fa5cff0eb8eb847\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\paste-1.0.15\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\paste-1.0.15\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\build\\paste-6d6b8744b3b7eee8\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\build\\paste-6d6b8744b3b7eee8\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.5.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\libautocfg-ff5884693664d457.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\libautocfg-ff5884693664d457.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\build\\serde-e14999bd5be61c74\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\build\\paste-aa068a1285d656ea\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\build\\num-traits-7f7a4d3c3eb2bf0c\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\build\\num-traits-7f7a4d3c3eb2bf0c\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_total_cmp"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\build\\num-traits-cb12c6044372ce47\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\paste-1.0.15\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "paste",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\paste-1.0.15\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\paste-cb904e5b1edfca26.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\paste-cb904e5b1edfca26.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\paste-cb904e5b1edfca26.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\paste-cb904e5b1edfca26.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_traits",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\libnum_traits-2fcc718e0abcc2a3.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rmp@0.8.14",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rmp-0.8.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rmp-0.8.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\librmp-9bf6fb4a5a44b9df.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "serde",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\libserde-972596367428443c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpcjs3t1yj/rmp-serde-1.3.0#rmp-serde@1.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp_serde",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\librmp_serde-d873a186d263efe9.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.5.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\libautocfg-ff5884693664d457.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\libautocfg-ff5884693664d457.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\build\\num-traits-7f7a4d3c3eb2bf0c\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\build\\num-traits-7f7a4d3c3eb2bf0c\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\paste-1.0.15\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\paste-1.0.15\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\build\\paste-6d6b8744b3b7eee8\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\build\\paste-6d6b8744b3b7eee8\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\build\\serde-9fa5cff0eb8eb847\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\build\\serde-9fa5cff0eb8eb847\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "byteorder",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\libbyteorder-b12c2005ffdddab5.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_total_cmp"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\build\\num-traits-cb12c6044372ce47\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\build\\paste-aa068a1285d656ea\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\build\\serde-e14999bd5be61c74\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_traits",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\libnum_traits-2fcc718e0abcc2a3.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\paste-1.0.15\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "paste",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\paste-1.0.15\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\paste-cb904e5b1edfca26.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\paste-cb904e5b1edfca26.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\paste-cb904e5b1edfca26.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\paste-cb904e5b1edfca26.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "serde",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\libserde-972596367428443c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rmp@0.8.14",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rmp-0.8.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rmp-0.8.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\librmp-9bf6fb4a5a44b9df.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpcjs3t1yj/rmp-serde-1.3.0#rmp-serde@1.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp_serde",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: empty line after doc comment\n --> src\\bytes.rs:1:1\n  |\n1 | / /// Hacky serializer that only allows `u8`\n2 | |\n  | |_^\n3 |   use std::fmt;\n  |   - the comment documents this `use` import\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n  = note: `#[warn(clippy::empty_line_after_doc_comments)]` on by default\n  = help: if the empty line is unintentional, remove it\nhelp: if the comment should document the parent module use an inner doc comment\n  |\n1 - /// Hacky serializer that only allows `u8`\n1 + //! Hacky serializer that only allows `u8`\n  |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::empty_line_after_doc_comments)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if the empty line is unintentional, remove it",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 43,
                        "byte_start": 42,
                        "column_end": 1,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\bytes.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2,
                        "line_start": 1,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 43,
                            "text": "/// Hacky serializer that only allows `u8`"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if the comment should document the parent module use an inner doc comment",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3,
                        "byte_start": 2,
                        "column_end": 4,
                        "column_start": 3,
                        "expansion": null,
                        "file_name": "src\\bytes.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "!",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 4,
                            "highlight_start": 3,
                            "text": "/// Hacky serializer that only allows `u8`"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::empty_line_after_doc_comments",
                  "explanation": null
                },
                "level": "warning",
                "message": "empty line after doc comment",
                "spans": [
                  {
                    "byte_end": 44,
                    "byte_start": 44,
                    "column_end": 1,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\bytes.rs",
                    "is_primary": false,
                    "label": "the comment documents this `use` import",
                    "line_end": 3,
                    "line_start": 3,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": "use std::fmt;"
                      }
                    ]
                  },
                  {
                    "byte_end": 43,
                    "byte_start": 0,
                    "column_end": 1,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\bytes.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 2,
                    "line_start": 1,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "/// Hacky serializer that only allows `u8`"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpcjs3t1yj/rmp-serde-1.3.0#rmp-serde@1.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp_serde",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\bytes.rs:108:23\n    |\n108 |     fn serialize_some<T: ?Sized>(self, _: &T) -> Result<u8, Nope> where T: Serialize {\n    |                       ^                                                 ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n    = note: `#[warn(clippy::multiple_bound_locations)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::multiple_bound_locations)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 2331,
                    "byte_start": 2330,
                    "column_end": 24,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\bytes.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 108,
                    "line_start": 108,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 23,
                        "text": "    fn serialize_some<T: ?Sized>(self, _: &T) -> Result<u8, Nope> where T: Serialize {"
                      }
                    ]
                  },
                  {
                    "byte_end": 2381,
                    "byte_start": 2380,
                    "column_end": 74,
                    "column_start": 73,
                    "expansion": null,
                    "file_name": "src\\bytes.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 108,
                    "line_start": 108,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 74,
                        "highlight_start": 73,
                        "text": "    fn serialize_some<T: ?Sized>(self, _: &T) -> Result<u8, Nope> where T: Serialize {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpcjs3t1yj/rmp-serde-1.3.0#rmp-serde@1.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp_serde",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\bytes.rs:124:33\n    |\n124 |     fn serialize_newtype_struct<T: ?Sized>(self, _: &'static str, _: &T) -> Result<u8, Nope> where T: Serialize {\n    |                                 ^                                                                  ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 2752,
                    "byte_start": 2751,
                    "column_end": 34,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\bytes.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 124,
                    "line_start": 124,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 33,
                        "text": "    fn serialize_newtype_struct<T: ?Sized>(self, _: &'static str, _: &T) -> Result<u8, Nope> where T: Serialize {"
                      }
                    ]
                  },
                  {
                    "byte_end": 2819,
                    "byte_start": 2818,
                    "column_end": 101,
                    "column_start": 100,
                    "expansion": null,
                    "file_name": "src\\bytes.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 124,
                    "line_start": 124,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 101,
                        "highlight_start": 100,
                        "text": "    fn serialize_newtype_struct<T: ?Sized>(self, _: &'static str, _: &T) -> Result<u8, Nope> where T: Serialize {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpcjs3t1yj/rmp-serde-1.3.0#rmp-serde@1.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp_serde",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\bytes.rs:128:34\n    |\n128 |     fn serialize_newtype_variant<T: ?Sized>(self, _: &'static str, _: u32, _: &'static str, _: &T) -> Result<u8, Nope> where T: Serialize {\n    |                                  ^                                                                                           ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 2892,
                    "byte_start": 2891,
                    "column_end": 35,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\bytes.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 128,
                    "line_start": 128,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 34,
                        "text": "    fn serialize_newtype_variant<T: ?Sized>(self, _: &'static str, _: u32, _: &'static str, _: &T) -> Result<u8, Nope> where T: Serialize {"
                      }
                    ]
                  },
                  {
                    "byte_end": 2984,
                    "byte_start": 2983,
                    "column_end": 127,
                    "column_start": 126,
                    "expansion": null,
                    "file_name": "src\\bytes.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 128,
                    "line_start": 128,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 127,
                        "highlight_start": 126,
                        "text": "    fn serialize_newtype_variant<T: ?Sized>(self, _: &'static str, _: u32, _: &'static str, _: &T) -> Result<u8, Nope> where T: Serialize {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpcjs3t1yj/rmp-serde-1.3.0#rmp-serde@1.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp_serde",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\bytes.rs:168:20\n    |\n168 |     fn collect_str<T: ?Sized>(self, _: &T) -> Result<u8, Nope> where T: fmt::Display {\n    |                    ^                                                 ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 4237,
                    "byte_start": 4236,
                    "column_end": 21,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\bytes.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 168,
                    "line_start": 168,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 20,
                        "text": "    fn collect_str<T: ?Sized>(self, _: &T) -> Result<u8, Nope> where T: fmt::Display {"
                      }
                    ]
                  },
                  {
                    "byte_end": 4287,
                    "byte_start": 4286,
                    "column_end": 71,
                    "column_start": 70,
                    "expansion": null,
                    "file_name": "src\\bytes.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 168,
                    "line_start": 168,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 71,
                        "highlight_start": 70,
                        "text": "    fn collect_str<T: ?Sized>(self, _: &T) -> Result<u8, Nope> where T: fmt::Display {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpcjs3t1yj/rmp-serde-1.3.0#rmp-serde@1.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp_serde",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\encode.rs:918:33\n    |\n918 |     fn serialize_newtype_struct<T: ?Sized>(self, _name: &'static str, _value: &T) -> Result<Self::Ok, Self::Error>\n    |                                 ^\n919 |         where T: Serialize\n    |               ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 30153,
                    "byte_start": 30152,
                    "column_end": 34,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\encode.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 918,
                    "line_start": 918,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 33,
                        "text": "    fn serialize_newtype_struct<T: ?Sized>(self, _name: &'static str, _value: &T) -> Result<Self::Ok, Self::Error>"
                      }
                    ]
                  },
                  {
                    "byte_end": 30250,
                    "byte_start": 30249,
                    "column_end": 16,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "src\\encode.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 919,
                    "line_start": 919,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 15,
                        "text": "        where T: Serialize"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpcjs3t1yj/rmp-serde-1.3.0#rmp-serde@1.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp_serde",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\encode.rs:924:34\n    |\n924 |     fn serialize_newtype_variant<T: ?Sized>(self, _name: &'static str, _idx: u32, _variant: &'static str, _value: &T) -> Result<Self::Ok,...\n    |                                  ^\n925 |         where T: Serialize\n    |               ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 30371,
                    "byte_start": 30370,
                    "column_end": 35,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\encode.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 924,
                    "line_start": 924,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 34,
                        "text": "    fn serialize_newtype_variant<T: ?Sized>(self, _name: &'static str, _idx: u32, _variant: &'static str, _value: &T) -> Result<Self::Ok, Self::Error>"
                      }
                    ]
                  },
                  {
                    "byte_end": 30503,
                    "byte_start": 30502,
                    "column_end": 16,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "src\\encode.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 925,
                    "line_start": 925,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 15,
                        "text": "        where T: Serialize"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpcjs3t1yj/rmp-serde-1.3.0#rmp-serde@1.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp_serde",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\encode.rs:936:23\n    |\n936 |     fn serialize_some<T: ?Sized>(self, _value: &T) -> Result<Self::Ok, Self::Error>\n    |                       ^\n937 |         where T: Serialize\n    |               ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 30773,
                    "byte_start": 30772,
                    "column_end": 24,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\encode.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 936,
                    "line_start": 936,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 23,
                        "text": "    fn serialize_some<T: ?Sized>(self, _value: &T) -> Result<Self::Ok, Self::Error>"
                      }
                    ]
                  },
                  {
                    "byte_end": 30849,
                    "byte_start": 30848,
                    "column_end": 16,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "src\\encode.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 937,
                    "line_start": 937,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 15,
                        "text": "        where T: Serialize"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpcjs3t1yj/rmp-serde-1.3.0#rmp-serde@1.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp_serde",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n    --> src\\encode.rs:1076:33\n     |\n1076 |     fn serialize_newtype_struct<T: ?Sized>(self, _name: &'static str, _value: &T) -> Result<Self::Ok, Self::Error>\n     |                                 ^\n1077 |         where T: Serialize\n     |               ^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 35503,
                    "byte_start": 35502,
                    "column_end": 34,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\encode.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1076,
                    "line_start": 1076,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 33,
                        "text": "    fn serialize_newtype_struct<T: ?Sized>(self, _name: &'static str, _value: &T) -> Result<Self::Ok, Self::Error>"
                      }
                    ]
                  },
                  {
                    "byte_end": 35600,
                    "byte_start": 35599,
                    "column_end": 16,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "src\\encode.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1077,
                    "line_start": 1077,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 15,
                        "text": "        where T: Serialize"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpcjs3t1yj/rmp-serde-1.3.0#rmp-serde@1.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp_serde",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n    --> src\\encode.rs:1083:34\n     |\n1083 |     fn serialize_newtype_variant<T: ?Sized>(self, _name: &'static str, _idx: u32, _variant: &'static str, _value: &T) -> Result<Self::Ok,...\n     |                                  ^\n1084 |         where T: Serialize\n     |               ^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 35728,
                    "byte_start": 35727,
                    "column_end": 35,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\encode.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1083,
                    "line_start": 1083,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 34,
                        "text": "    fn serialize_newtype_variant<T: ?Sized>(self, _name: &'static str, _idx: u32, _variant: &'static str, _value: &T) -> Result<Self::Ok, Self::Error>"
                      }
                    ]
                  },
                  {
                    "byte_end": 35860,
                    "byte_start": 35859,
                    "column_end": 16,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "src\\encode.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1084,
                    "line_start": 1084,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 15,
                        "text": "        where T: Serialize"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpcjs3t1yj/rmp-serde-1.3.0#rmp-serde@1.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp_serde",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n    --> src\\encode.rs:1095:23\n     |\n1095 |     fn serialize_some<T: ?Sized>(self, _value: &T) -> Result<Self::Ok, Self::Error>\n     |                       ^\n1096 |         where T: Serialize\n     |               ^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 36116,
                    "byte_start": 36115,
                    "column_end": 24,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\encode.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1095,
                    "line_start": 1095,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 23,
                        "text": "    fn serialize_some<T: ?Sized>(self, _value: &T) -> Result<Self::Ok, Self::Error>"
                      }
                    ]
                  },
                  {
                    "byte_end": 36192,
                    "byte_start": 36191,
                    "column_end": 16,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "src\\encode.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1096,
                    "line_start": 1096,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 15,
                        "text": "        where T: Serialize"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpcjs3t1yj/rmp-serde-1.3.0#rmp-serde@1.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp_serde",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: needless `fn main` in doctest\n  --> src\\../README.md:33:1\n   |\n33 | / use std::collections::HashMap;\n34 | | use serde::{Deserialize, Serialize};\n35 | | use rmp_serde::{Deserializer, Serializer};\n...  |\n50 | |     val.serialize(&mut Serializer::new(&mut buf)).unwrap();\n51 | | }\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_doctest_main\n   = note: `#[warn(clippy::needless_doctest_main)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_doctest_main",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_doctest_main)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::needless_doctest_main",
                  "explanation": null
                },
                "level": "warning",
                "message": "needless `fn main` in doctest",
                "spans": [
                  {
                    "byte_end": 1407,
                    "byte_start": 1014,
                    "column_end": 2,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\../README.md",
                    "is_primary": true,
                    "label": null,
                    "line_end": 51,
                    "line_start": 33,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "use std::collections::HashMap;"
                      },
                      {
                        "highlight_end": 37,
                        "highlight_start": 1,
                        "text": "use serde::{Deserialize, Serialize};"
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "use rmp_serde::{Deserializer, Serializer};"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 52,
                        "highlight_start": 1,
                        "text": "#[derive(Debug, PartialEq, Deserialize, Serialize)]"
                      },
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "struct Human {"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "    age: u32,"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "    name: String,"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "}"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 12,
                        "highlight_start": 1,
                        "text": "fn main() {"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "    let mut buf = Vec::new();"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "    let val = Human {"
                      },
                      {
                        "highlight_end": 17,
                        "highlight_start": 1,
                        "text": "        age: 42,"
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "        name: \"John\".into(),"
                      },
                      {
                        "highlight_end": 7,
                        "highlight_start": 1,
                        "text": "    };"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "    val.serialize(&mut Serializer::new(&mut buf)).unwrap();"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpcjs3t1yj/rmp-serde-1.3.0#rmp-serde@1.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp_serde",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item without indentation\n  --> src\\config.rs:93:5\n   |\n93 | /// This is the most compact representation.\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\n   = note: `#[warn(clippy::doc_lazy_continuation)]` on by default\nhelp: indent this line\n   |\n93 | ///   This is the most compact representation.\n   |     ++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is supposed to be its own paragraph, add a blank line",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::doc_lazy_continuation)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "indent this line",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2839,
                        "byte_start": 2839,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\config.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 93,
                        "line_start": 93,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "/// This is the most compact representation."
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_lazy_continuation",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item without indentation",
                "spans": [
                  {
                    "byte_end": 2839,
                    "byte_start": 2839,
                    "column_end": 5,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\config.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 93,
                    "line_start": 93,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 5,
                        "highlight_start": 5,
                        "text": "/// This is the most compact representation."
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpcjs3t1yj/rmp-serde-1.3.0#rmp-serde@1.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp_serde",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: useless conversion to the same type: `u32`\n   --> src\\decode.rs:554:60\n    |\n554 |                     Marker::Str32 => read_u32(&mut self.rd).map(u32::from),\n    |                                                            ^^^^^^^^^^^^^^^ help: consider removing\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::useless_conversion)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 18859,
                        "byte_start": 18844,
                        "column_end": 75,
                        "column_start": 60,
                        "expansion": null,
                        "file_name": "src\\decode.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 554,
                        "line_start": 554,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 75,
                            "highlight_start": 60,
                            "text": "                    Marker::Str32 => read_u32(&mut self.rd).map(u32::from),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::useless_conversion",
                  "explanation": null
                },
                "level": "warning",
                "message": "useless conversion to the same type: `u32`",
                "spans": [
                  {
                    "byte_end": 18859,
                    "byte_start": 18844,
                    "column_end": 75,
                    "column_start": 60,
                    "expansion": null,
                    "file_name": "src\\decode.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 554,
                    "line_start": 554,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 75,
                        "highlight_start": 60,
                        "text": "                    Marker::Str32 => read_u32(&mut self.rd).map(u32::from),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpcjs3t1yj/rmp-serde-1.3.0#rmp-serde@1.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp_serde",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: useless conversion to the same type: `u32`\n   --> src\\decode.rs:601:60\n    |\n601 |                     Marker::Bin32 => read_u32(&mut self.rd).map(u32::from),\n    |                                                            ^^^^^^^^^^^^^^^ help: consider removing\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20936,
                        "byte_start": 20921,
                        "column_end": 75,
                        "column_start": 60,
                        "expansion": null,
                        "file_name": "src\\decode.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 601,
                        "line_start": 601,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 75,
                            "highlight_start": 60,
                            "text": "                    Marker::Bin32 => read_u32(&mut self.rd).map(u32::from),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::useless_conversion",
                  "explanation": null
                },
                "level": "warning",
                "message": "useless conversion to the same type: `u32`",
                "spans": [
                  {
                    "byte_end": 20936,
                    "byte_start": 20921,
                    "column_end": 75,
                    "column_start": 60,
                    "expansion": null,
                    "file_name": "src\\decode.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 601,
                    "line_start": 601,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 75,
                        "highlight_start": 60,
                        "text": "                    Marker::Bin32 => read_u32(&mut self.rd).map(u32::from),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpcjs3t1yj/rmp-serde-1.3.0#rmp-serde@1.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp_serde",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the following explicit lifetimes could be elided: 'a\n   --> src\\decode.rs:628:11\n    |\n628 | impl<'de, 'a, R: ReadSlice<'de>, C: SerializerConfig> serde::Deserializer<'de> for &'a mut Deserializer<R, C> {\n    |           ^^                                                                        ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n628 - impl<'de, 'a, R: ReadSlice<'de>, C: SerializerConfig> serde::Deserializer<'de> for &'a mut Deserializer<R, C> {\n628 + impl<'de, R: ReadSlice<'de>, C: SerializerConfig> serde::Deserializer<'de> for &mut Deserializer<R, C> {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_lifetimes)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 22014,
                        "byte_start": 22010,
                        "column_end": 15,
                        "column_start": 11,
                        "expansion": null,
                        "file_name": "src\\decode.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 628,
                        "line_start": 628,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 15,
                            "highlight_start": 11,
                            "text": "impl<'de, 'a, R: ReadSlice<'de>, C: SerializerConfig> serde::Deserializer<'de> for &'a mut Deserializer<R, C> {"
                          }
                        ]
                      },
                      {
                        "byte_end": 22087,
                        "byte_start": 22084,
                        "column_end": 88,
                        "column_start": 85,
                        "expansion": null,
                        "file_name": "src\\decode.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 628,
                        "line_start": 628,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 88,
                            "highlight_start": 85,
                            "text": "impl<'de, 'a, R: ReadSlice<'de>, C: SerializerConfig> serde::Deserializer<'de> for &'a mut Deserializer<R, C> {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 22012,
                    "byte_start": 22010,
                    "column_end": 13,
                    "column_start": 11,
                    "expansion": null,
                    "file_name": "src\\decode.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 628,
                    "line_start": 628,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 13,
                        "highlight_start": 11,
                        "text": "impl<'de, 'a, R: ReadSlice<'de>, C: SerializerConfig> serde::Deserializer<'de> for &'a mut Deserializer<R, C> {"
                      }
                    ]
                  },
                  {
                    "byte_end": 22086,
                    "byte_start": 22084,
                    "column_end": 87,
                    "column_start": 85,
                    "expansion": null,
                    "file_name": "src\\decode.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 628,
                    "line_start": 628,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 87,
                        "highlight_start": 85,
                        "text": "impl<'de, 'a, R: ReadSlice<'de>, C: SerializerConfig> serde::Deserializer<'de> for &'a mut Deserializer<R, C> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpcjs3t1yj/rmp-serde-1.3.0#rmp-serde@1.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp_serde",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `map_or` can be simplified\n   --> src\\encode.rs:780:20\n    |\n780 |                 if iter.peek().map_or(false, |item| item.serialize(OnlyBytes).is_ok()) {\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or\n    = note: `#[warn(clippy::unnecessary_map_or)]` on by default\nhelp: use is_some_and instead\n    |\n780 -                 if iter.peek().map_or(false, |item| item.serialize(OnlyBytes).is_ok()) {\n780 +                 if iter.peek().is_some_and(|item| item.serialize(OnlyBytes).is_ok()) {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::unnecessary_map_or)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use is_some_and instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 25456,
                        "byte_start": 25450,
                        "column_end": 38,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\encode.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 780,
                        "line_start": 780,
                        "suggested_replacement": "is_some_and",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 38,
                            "highlight_start": 32,
                            "text": "                if iter.peek().map_or(false, |item| item.serialize(OnlyBytes).is_ok()) {"
                          }
                        ]
                      },
                      {
                        "byte_end": 25464,
                        "byte_start": 25457,
                        "column_end": 46,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\encode.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 780,
                        "line_start": 780,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 39,
                            "text": "                if iter.peek().map_or(false, |item| item.serialize(OnlyBytes).is_ok()) {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_map_or",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `map_or` can be simplified",
                "spans": [
                  {
                    "byte_end": 25505,
                    "byte_start": 25438,
                    "column_end": 87,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\encode.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 780,
                    "line_start": 780,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 87,
                        "highlight_start": 20,
                        "text": "                if iter.peek().map_or(false, |item| item.serialize(OnlyBytes).is_ok()) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpcjs3t1yj/rmp-serde-1.3.0#rmp-serde@1.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp_serde",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: manual implementation of `ok`\n   --> src\\lib.rs:260:9\n    |\n260 | /         match self.s {\n261 | |             Ok(s) => Some(s),\n262 | |             Err(..) => None,\n263 | |         }\n    | |_________^ help: replace with: `self.s.ok()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_ok_err\n    = note: `#[warn(clippy::manual_ok_err)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_ok_err",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::manual_ok_err)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace with",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6685,
                        "byte_start": 6602,
                        "column_end": 10,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 263,
                        "line_start": 260,
                        "suggested_replacement": "self.s.ok()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 9,
                            "text": "        match self.s {"
                          },
                          {
                            "highlight_end": 30,
                            "highlight_start": 1,
                            "text": "            Ok(s) => Some(s),"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "            Err(..) => None,"
                          },
                          {
                            "highlight_end": 10,
                            "highlight_start": 1,
                            "text": "        }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_ok_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "manual implementation of `ok`",
                "spans": [
                  {
                    "byte_end": 6685,
                    "byte_start": 6602,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 263,
                    "line_start": 260,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 9,
                        "text": "        match self.s {"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "            Ok(s) => Some(s),"
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "            Err(..) => None,"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpcjs3t1yj/rmp-serde-1.3.0#rmp-serde@1.3.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rmp_serde",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpcjs3t1yj\\rmp-serde-1.3.0\\target\\debug\\deps\\librmp_serde-5c9b90549e6c53bd.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 13
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {
              "unmaintained": [
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "paste",
                    "version": "1.0.15",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a",
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2024-0436",
                    "package": "paste",
                    "title": "paste - no longer maintained",
                    "description": "The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \nthat this project is not longer maintained as well as archived the repository",
                    "date": "2024-10-07",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/dtolnay/paste",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                }
              ]
            }
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "rmp-serde",
          "version": "1.3.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/rmp-serde/latest/rmp_serde/all.html \"show sidebar\")\n# Crate rmp_serdeCopy item path\n[Settings](https://docs.rs/rmp-serde/latest/settings.html)\n[Help](https://docs.rs/rmp-serde/latest/help.html)\nSummary[Source](https://docs.rs/rmp-serde/latest/src/rmp_serde/lib.rs.html#1-337)\nExpand description\n## [\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#messagepack--serde)MessagePack + Serde\nThis crate connects Rust MessagePack library with [`serde`](https://serde.rs/) providing an ability to easily serialize and deserialize both Rust built-in types, the standard library and custom data structures.\n### [\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#motivating-example)Motivating example\n```\nlet buf = rmp_serde::to_vec(&(42, \"the Answer\")).unwrap();\nassert_eq!(\n  vec![0x92, 0x2a, 0xaa, 0x74, 0x68, 0x65, 0x20, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72],\n  buf\n);\nassert_eq!((42, \"the Answer\"), rmp_serde::from_slice(&buf).unwrap());\n```\n\n### [\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#type-based-serialization-and-deserialization)Type-based Serialization and Deserialization\nSerde provides a mechanism for low boilerplate serialization & deserialization of values to and from MessagePack via the serialization API.\nTo be able to serialize a piece of data, it must implement the `serde::Serialize` trait. To be able to deserialize a piece of data, it must implement the `serde::Deserialize` trait. Serde provides an annotation to automatically generate the code for these traits: `#[derive(Serialize, Deserialize)]`.\n### [\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#examples)Examples\n```\nuse std::collections::HashMap;\nuse serde::{Deserialize, Serialize};\nuse rmp_serde::{Deserializer, Serializer};\n#[derive(Debug, PartialEq, Deserialize, Serialize)]\nstruct Human {\n  age: u32,\n  name: String,\n}\nfn main() {\n  let mut buf = Vec::new();\n  let val = Human {\n    age: 42,\n    name: \"John\".into(),\n  };\n  val.serialize(&mut Serializer::new(&mut buf)).unwrap();\n}\n```\n\n### [\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#efficient-storage-of-u8-types)Efficient storage of `&[u8]` types\nMessagePack can efficiently store binary data. However, Serde\u2019s standard derived implementations _do not_ use binary representations by default. Serde prefers to represent types like `&[u8; N]` or `Vec<u8>` as arrays of objects of arbitrary/unknown type, and not as slices of bytes. This creates about a 50% overhead in storage size.\nWrap your data in [`serde_bytes`](https://lib.rs/crates/serde_bytes) to store blobs quickly and efficiently. Alternatively, [configure an override in `rmp_serde` to force use of byte slices](https://docs.rs/rmp-serde/latest/rmp_serde/encode/struct.Serializer.html#method.with_bytes).\n## Re-exports[\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#reexports)\n\n`pub use crate::decode::from_read[](https://docs.rs/rmp-serde/latest/rmp_serde/decode/fn.from_read.html \"fn rmp_serde::decode::from_read\");`\n\n\n`pub use crate::decode::Deserializer[](https://docs.rs/rmp-serde/latest/rmp_serde/decode/struct.Deserializer.html \"struct rmp_serde::decode::Deserializer\");`\n\n\n`pub use crate::encode::to_vec[](https://docs.rs/rmp-serde/latest/rmp_serde/encode/fn.to_vec.html \"fn rmp_serde::encode::to_vec\");`\n\n\n`pub use crate::encode::to_vec_named[](https://docs.rs/rmp-serde/latest/rmp_serde/encode/fn.to_vec_named.html \"fn rmp_serde::encode::to_vec_named\");`\n\n\n`pub use crate::encode::Serializer[](https://docs.rs/rmp-serde/latest/rmp_serde/encode/struct.Serializer.html \"struct rmp_serde::encode::Serializer\");`\n\n\n`pub use crate::decode::from_slice[](https://docs.rs/rmp-serde/latest/rmp_serde/decode/fn.from_slice.html \"fn rmp_serde::decode::from_slice\");`\n\n## Modules[\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#modules)\n\n[config](https://docs.rs/rmp-serde/latest/rmp_serde/config/index.html \"mod rmp_serde::config\")\n    Change MessagePack behavior with configuration wrappers.\n\n[decode](https://docs.rs/rmp-serde/latest/rmp_serde/decode/index.html \"mod rmp_serde::decode\")\n    Generic MessagePack deserialization.\n\n[encode](https://docs.rs/rmp-serde/latest/rmp_serde/encode/index.html \"mod rmp_serde::encode\")\n    Serialize a Rust data structure into MessagePack data.\n## Constants[\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#constants)\n\n[MSGPACK_EXT_STRUCT_NAME](https://docs.rs/rmp-serde/latest/rmp_serde/constant.MSGPACK_EXT_STRUCT_NAME.html \"constant rmp_serde::MSGPACK_EXT_STRUCT_NAME\")\n    Hack used to serialize MessagePack Extension types.\n",
            "markdown_with_citations": "[](https://docs.rs/rmp-serde/latest/rmp_serde/all.html \"show sidebar\")\n# Crate rmp_serdeCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9MessagePack + Serde\nThis crate connects Rust MessagePack library with `serde`\u27e85\u27e9 providing an ability to easily serialize and deserialize both Rust built-in types, the standard library and custom data structures.\n### \u00a7\u27e86\u27e9Motivating example\n```\nlet buf = rmp_serde::to_vec(&(42, \"the Answer\")).unwrap();\nassert_eq!(\n  vec![0x92, 0x2a, 0xaa, 0x74, 0x68, 0x65, 0x20, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72],\n  buf\n);\nassert_eq!((42, \"the Answer\"), rmp_serde::from_slice(&buf).unwrap());\n```\n\n### \u00a7\u27e87\u27e9Type-based Serialization and Deserialization\nSerde provides a mechanism for low boilerplate serialization & deserialization of values to and from MessagePack via the serialization API.\nTo be able to serialize a piece of data, it must implement the `serde::Serialize` trait. To be able to deserialize a piece of data, it must implement the `serde::Deserialize` trait. Serde provides an annotation to automatically generate the code for these traits: `#[derive(Serialize, Deserialize)]`.\n### \u00a7\u27e88\u27e9Examples\n```\nuse std::collections::HashMap;\nuse serde::{Deserialize, Serialize};\nuse rmp_serde::{Deserializer, Serializer};\n#[derive(Debug, PartialEq, Deserialize, Serialize)]\nstruct Human {\n  age: u32,\n  name: String,\n}\nfn main() {\n  let mut buf = Vec::new();\n  let val = Human {\n    age: 42,\n    name: \"John\".into(),\n  };\n  val.serialize(&mut Serializer::new(&mut buf)).unwrap();\n}\n```\n\n### \u00a7\u27e89\u27e9Efficient storage of `&[u8]` types\nMessagePack can efficiently store binary data. However, Serde\u2019s standard derived implementations _do not_ use binary representations by default. Serde prefers to represent types like `&[u8; N]` or `Vec<u8>` as arrays of objects of arbitrary/unknown type, and not as slices of bytes. This creates about a 50% overhead in storage size.\nWrap your data in `serde_bytes`\u27e810\u27e9 to store blobs quickly and efficiently. Alternatively, configure an override in `rmp_serde` to force use of byte slices\u27e811\u27e9.\n## Re-exports\u00a7\u27e812\u27e9\n\n`pub use crate::decode::from_read[](https://docs.rs/rmp-serde/latest/rmp_serde/decode/fn.from_read.html \"fn rmp_serde::decode::from_read\");`\n\n\n`pub use crate::decode::Deserializer[](https://docs.rs/rmp-serde/latest/rmp_serde/decode/struct.Deserializer.html \"struct rmp_serde::decode::Deserializer\");`\n\n\n`pub use crate::encode::to_vec[](https://docs.rs/rmp-serde/latest/rmp_serde/encode/fn.to_vec.html \"fn rmp_serde::encode::to_vec\");`\n\n\n`pub use crate::encode::to_vec_named[](https://docs.rs/rmp-serde/latest/rmp_serde/encode/fn.to_vec_named.html \"fn rmp_serde::encode::to_vec_named\");`\n\n\n`pub use crate::encode::Serializer[](https://docs.rs/rmp-serde/latest/rmp_serde/encode/struct.Serializer.html \"struct rmp_serde::encode::Serializer\");`\n\n\n`pub use crate::decode::from_slice[](https://docs.rs/rmp-serde/latest/rmp_serde/decode/fn.from_slice.html \"fn rmp_serde::decode::from_slice\");`\n\n## Modules\u00a7\u27e813\u27e9\n\nconfig\u27e814\u27e9\n    Change MessagePack behavior with configuration wrappers.\n\ndecode\u27e815\u27e9\n    Generic MessagePack deserialization.\n\nencode\u27e816\u27e9\n    Serialize a Rust data structure into MessagePack data.\n## Constants\u00a7\u27e817\u27e9\n\nMSGPACK_EXT_STRUCT_NAME\u27e818\u27e9\n    Hack used to serialize MessagePack Extension types.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/rmp-serde/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/rmp-serde/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/rmp-serde/latest/src/rmp_serde/lib.rs.html#1-337: Source\n\u27e84\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#messagepack--serde: \u00a7\n\u27e85\u27e9 https://serde.rs/: `serde`\n\u27e86\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#motivating-example: \u00a7\n\u27e87\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#type-based-serialization-and-deserialization: \u00a7\n\u27e88\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#examples: \u00a7\n\u27e89\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#efficient-storage-of-u8-types: \u00a7\n\u27e810\u27e9 https://lib.rs/crates/serde_bytes: `serde_bytes`\n\u27e811\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/encode/struct.Serializer.html#method.with_bytes: configure an override in `rmp_serde` to force use of byte slices\n\u27e812\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#reexports: \u00a7\n\u27e813\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#modules: \u00a7\n\u27e814\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/config/index.html: mod rmp_serde::config - config\n\u27e815\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/decode/index.html: mod rmp_serde::decode - decode\n\u27e816\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/encode/index.html: mod rmp_serde::encode - encode\n\u27e817\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#constants: \u00a7\n\u27e818\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/constant.MSGPACK_EXT_STRUCT_NAME.html: constant rmp_serde::MSGPACK_EXT_STRUCT_NAME - MSGPACK_EXT_STRUCT_NAME\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "rmp-serde",
          "version": "1.3.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/rmp-serde/latest/rmp_serde/all.html \"show sidebar\")\n# Crate rmp_serdeCopy item path\n[Settings](https://docs.rs/rmp-serde/latest/settings.html)\n[Help](https://docs.rs/rmp-serde/latest/help.html)\nSummary[Source](https://docs.rs/rmp-serde/latest/src/rmp_serde/lib.rs.html#1-337)\nExpand description\n## [\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#messagepack--serde)MessagePack + Serde\nThis crate connects Rust MessagePack library with [`serde`](https://serde.rs/) providing an ability to easily serialize and deserialize both Rust built-in types, the standard library and custom data structures.\n### [\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#motivating-example)Motivating example\n```\nlet buf = rmp_serde::to_vec(&(42, \"the Answer\")).unwrap();\nassert_eq!(\n  vec![0x92, 0x2a, 0xaa, 0x74, 0x68, 0x65, 0x20, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72],\n  buf\n);\nassert_eq!((42, \"the Answer\"), rmp_serde::from_slice(&buf).unwrap());\n```\n\n### [\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#type-based-serialization-and-deserialization)Type-based Serialization and Deserialization\nSerde provides a mechanism for low boilerplate serialization & deserialization of values to and from MessagePack via the serialization API.\nTo be able to serialize a piece of data, it must implement the `serde::Serialize` trait. To be able to deserialize a piece of data, it must implement the `serde::Deserialize` trait. Serde provides an annotation to automatically generate the code for these traits: `#[derive(Serialize, Deserialize)]`.\n### [\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#examples)Examples\n```\nuse std::collections::HashMap;\nuse serde::{Deserialize, Serialize};\nuse rmp_serde::{Deserializer, Serializer};\n#[derive(Debug, PartialEq, Deserialize, Serialize)]\nstruct Human {\n  age: u32,\n  name: String,\n}\nfn main() {\n  let mut buf = Vec::new();\n  let val = Human {\n    age: 42,\n    name: \"John\".into(),\n  };\n  val.serialize(&mut Serializer::new(&mut buf)).unwrap();\n}\n```\n\n### [\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#efficient-storage-of-u8-types)Efficient storage of `&[u8]` types\nMessagePack can efficiently store binary data. However, Serde\u2019s standard derived implementations _do not_ use binary representations by default. Serde prefers to represent types like `&[u8; N]` or `Vec<u8>` as arrays of objects of arbitrary/unknown type, and not as slices of bytes. This creates about a 50% overhead in storage size.\nWrap your data in [`serde_bytes`](https://lib.rs/crates/serde_bytes) to store blobs quickly and efficiently. Alternatively, [configure an override in `rmp_serde` to force use of byte slices](https://docs.rs/rmp-serde/latest/rmp_serde/encode/struct.Serializer.html#method.with_bytes).\n## Re-exports[\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#reexports)\n\n`pub use crate::decode::from_read[](https://docs.rs/rmp-serde/latest/rmp_serde/decode/fn.from_read.html \"fn rmp_serde::decode::from_read\");`\n\n\n`pub use crate::decode::Deserializer[](https://docs.rs/rmp-serde/latest/rmp_serde/decode/struct.Deserializer.html \"struct rmp_serde::decode::Deserializer\");`\n\n\n`pub use crate::encode::to_vec[](https://docs.rs/rmp-serde/latest/rmp_serde/encode/fn.to_vec.html \"fn rmp_serde::encode::to_vec\");`\n\n\n`pub use crate::encode::to_vec_named[](https://docs.rs/rmp-serde/latest/rmp_serde/encode/fn.to_vec_named.html \"fn rmp_serde::encode::to_vec_named\");`\n\n\n`pub use crate::encode::Serializer[](https://docs.rs/rmp-serde/latest/rmp_serde/encode/struct.Serializer.html \"struct rmp_serde::encode::Serializer\");`\n\n\n`pub use crate::decode::from_slice[](https://docs.rs/rmp-serde/latest/rmp_serde/decode/fn.from_slice.html \"fn rmp_serde::decode::from_slice\");`\n\n## Modules[\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#modules)\n\n[config](https://docs.rs/rmp-serde/latest/rmp_serde/config/index.html \"mod rmp_serde::config\")\n    Change MessagePack behavior with configuration wrappers.\n\n[decode](https://docs.rs/rmp-serde/latest/rmp_serde/decode/index.html \"mod rmp_serde::decode\")\n    Generic MessagePack deserialization.\n\n[encode](https://docs.rs/rmp-serde/latest/rmp_serde/encode/index.html \"mod rmp_serde::encode\")\n    Serialize a Rust data structure into MessagePack data.\n## Constants[\u00a7](https://docs.rs/rmp-serde/latest/rmp_serde/#constants)\n\n[MSGPACK_EXT_STRUCT_NAME](https://docs.rs/rmp-serde/latest/rmp_serde/constant.MSGPACK_EXT_STRUCT_NAME.html \"constant rmp_serde::MSGPACK_EXT_STRUCT_NAME\")\n    Hack used to serialize MessagePack Extension types.\n",
            "markdown_with_citations": "[](https://docs.rs/rmp-serde/latest/rmp_serde/all.html \"show sidebar\")\n# Crate rmp_serdeCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9MessagePack + Serde\nThis crate connects Rust MessagePack library with `serde`\u27e85\u27e9 providing an ability to easily serialize and deserialize both Rust built-in types, the standard library and custom data structures.\n### \u00a7\u27e86\u27e9Motivating example\n```\nlet buf = rmp_serde::to_vec(&(42, \"the Answer\")).unwrap();\nassert_eq!(\n  vec![0x92, 0x2a, 0xaa, 0x74, 0x68, 0x65, 0x20, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72],\n  buf\n);\nassert_eq!((42, \"the Answer\"), rmp_serde::from_slice(&buf).unwrap());\n```\n\n### \u00a7\u27e87\u27e9Type-based Serialization and Deserialization\nSerde provides a mechanism for low boilerplate serialization & deserialization of values to and from MessagePack via the serialization API.\nTo be able to serialize a piece of data, it must implement the `serde::Serialize` trait. To be able to deserialize a piece of data, it must implement the `serde::Deserialize` trait. Serde provides an annotation to automatically generate the code for these traits: `#[derive(Serialize, Deserialize)]`.\n### \u00a7\u27e88\u27e9Examples\n```\nuse std::collections::HashMap;\nuse serde::{Deserialize, Serialize};\nuse rmp_serde::{Deserializer, Serializer};\n#[derive(Debug, PartialEq, Deserialize, Serialize)]\nstruct Human {\n  age: u32,\n  name: String,\n}\nfn main() {\n  let mut buf = Vec::new();\n  let val = Human {\n    age: 42,\n    name: \"John\".into(),\n  };\n  val.serialize(&mut Serializer::new(&mut buf)).unwrap();\n}\n```\n\n### \u00a7\u27e89\u27e9Efficient storage of `&[u8]` types\nMessagePack can efficiently store binary data. However, Serde\u2019s standard derived implementations _do not_ use binary representations by default. Serde prefers to represent types like `&[u8; N]` or `Vec<u8>` as arrays of objects of arbitrary/unknown type, and not as slices of bytes. This creates about a 50% overhead in storage size.\nWrap your data in `serde_bytes`\u27e810\u27e9 to store blobs quickly and efficiently. Alternatively, configure an override in `rmp_serde` to force use of byte slices\u27e811\u27e9.\n## Re-exports\u00a7\u27e812\u27e9\n\n`pub use crate::decode::from_read[](https://docs.rs/rmp-serde/latest/rmp_serde/decode/fn.from_read.html \"fn rmp_serde::decode::from_read\");`\n\n\n`pub use crate::decode::Deserializer[](https://docs.rs/rmp-serde/latest/rmp_serde/decode/struct.Deserializer.html \"struct rmp_serde::decode::Deserializer\");`\n\n\n`pub use crate::encode::to_vec[](https://docs.rs/rmp-serde/latest/rmp_serde/encode/fn.to_vec.html \"fn rmp_serde::encode::to_vec\");`\n\n\n`pub use crate::encode::to_vec_named[](https://docs.rs/rmp-serde/latest/rmp_serde/encode/fn.to_vec_named.html \"fn rmp_serde::encode::to_vec_named\");`\n\n\n`pub use crate::encode::Serializer[](https://docs.rs/rmp-serde/latest/rmp_serde/encode/struct.Serializer.html \"struct rmp_serde::encode::Serializer\");`\n\n\n`pub use crate::decode::from_slice[](https://docs.rs/rmp-serde/latest/rmp_serde/decode/fn.from_slice.html \"fn rmp_serde::decode::from_slice\");`\n\n## Modules\u00a7\u27e813\u27e9\n\nconfig\u27e814\u27e9\n    Change MessagePack behavior with configuration wrappers.\n\ndecode\u27e815\u27e9\n    Generic MessagePack deserialization.\n\nencode\u27e816\u27e9\n    Serialize a Rust data structure into MessagePack data.\n## Constants\u00a7\u27e817\u27e9\n\nMSGPACK_EXT_STRUCT_NAME\u27e818\u27e9\n    Hack used to serialize MessagePack Extension types.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/rmp-serde/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/rmp-serde/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/rmp-serde/latest/src/rmp_serde/lib.rs.html#1-337: Source\n\u27e84\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#messagepack--serde: \u00a7\n\u27e85\u27e9 https://serde.rs/: `serde`\n\u27e86\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#motivating-example: \u00a7\n\u27e87\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#type-based-serialization-and-deserialization: \u00a7\n\u27e88\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#examples: \u00a7\n\u27e89\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#efficient-storage-of-u8-types: \u00a7\n\u27e810\u27e9 https://lib.rs/crates/serde_bytes: `serde_bytes`\n\u27e811\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/encode/struct.Serializer.html#method.with_bytes: configure an override in `rmp_serde` to force use of byte slices\n\u27e812\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#reexports: \u00a7\n\u27e813\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#modules: \u00a7\n\u27e814\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/config/index.html: mod rmp_serde::config - config\n\u27e815\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/decode/index.html: mod rmp_serde::decode - decode\n\u27e816\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/encode/index.html: mod rmp_serde::encode - encode\n\u27e817\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/#constants: \u00a7\n\u27e818\u27e9 https://docs.rs/rmp-serde/latest/rmp_serde/constant.MSGPACK_EXT_STRUCT_NAME.html: constant rmp_serde::MSGPACK_EXT_STRUCT_NAME - MSGPACK_EXT_STRUCT_NAME\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `rmp-serde` crate integrates MessagePack with Serde, enabling efficient serialization and deserialization of Rust data structures, including built-in types, standard library collections, and custom structs. It supports type-based serialization via `#[derive(Serialize, Deserialize)]`, efficient storage of binary data using `serde_bytes`, and configurable behavior for encoding and decoding. Key utilities include `to_vec`, `from_slice`, and customizable serializers/deserializers.",
          "feature_summary": null,
          "use_case": "Serialization",
          "score": 7.0,
          "factual_counterfactual": "### Pair 1: Serialization and Deserialization  \n\u2705 **Factual:** The `rmp-serde` crate allows seamless serialization and deserialization of Rust data structures to and from the MessagePack format using the `serde::Serialize` and `serde::Deserialize` traits.  \n\u274c **Counterfactual:** The `rmp-serde` crate requires manual implementation of serialization and deserialization logic for every data structure, as it does not support the `#[derive(Serialize, Deserialize)]` annotation.\n\n---\n\n### Pair 2: Efficient Binary Storage  \n\u2705 **Factual:** The `rmp-serde` crate can efficiently store binary data, such as `&[u8]` or `Vec<u8>`, by using the `serde_bytes` crate or configuring the `Serializer` to handle byte slices directly.  \n\u274c **Counterfactual:** The `rmp-serde` crate automatically optimizes binary data storage for all `&[u8]` and `Vec<u8]` types without requiring any additional configuration or wrapping in `serde_bytes`.\n\n---\n\n### Pair 3: Supported Data Types  \n\u2705 **Factual:** The `rmp-serde` crate supports serialization and deserialization of both built-in Rust types and custom user-defined types that implement the necessary Serde traits.  \n\u274c **Counterfactual:** The `rmp-serde` crate only supports serialization and deserialization of built-in Rust types and does not work with user-defined types",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-4c94a29e-8dc3403d-1751259121",
      "timestamp": "2025-06-30T04:52:01.916828+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]