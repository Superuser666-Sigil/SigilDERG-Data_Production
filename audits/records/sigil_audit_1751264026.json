[
  {
    "execution_id": "exec-fcf6eee0-fd6eeddc-1751264012",
    "timestamp": "2025-06-30T06:13:32.717375+00:00",
    "sacred_chain": {
      "input_data": "strum_macros",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'strum_macros' -> 'strum_macros'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "strum_macros",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/strum_macros",
            "title": "strum_macros v0.27.1",
            "content": {
              "raw_markdown": "#  strum_macros v0.27.1\nHelpful macros for working with enums and strings \n  * [ #enum ](https://crates.io/keywords/enum)\n  * [ #macros ](https://crates.io/keywords/macros)\n  * [ #proc-macros ](https://crates.io/keywords/proc-macros)\n  * [ #string ](https://crates.io/keywords/string)\n\n\n  * [ Readme ](https://crates.io/crates/strum_macros)\n  * [ 47 Versions ](https://crates.io/crates/strum_macros/versions)\n  * [ Dependencies ](https://crates.io/crates/strum_macros/dependencies)\n  * [ Dependents ](https://crates.io/crates/strum_macros/reverse_dependencies)\n\n\n## Metadata\n4 months ago \nv1.66.1 \n[ MIT ](https://choosealicense.com/licenses/mit)\n29 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add strum_macros\nOr add the following line to your Cargo.toml:\nstrum_macros = \"0.27.1\"\n## Documentation\n[ docs.rs/strum ](https://docs.rs/strum)\n## Repository\n[ github.com/Peternator7/strum ](https://github.com/Peternator7/strum)\n## Owners\n## Categories\n  * [Procedural macro helpers](https://crates.io/categories/development-tools::procedural-macro-helpers)\n  * [Parsing tools](https://crates.io/categories/parsing)\n\n\n[ Report crate ](https://crates.io/support?crate=strum_macros&inquire=crate-violation)\n### Stats Overview\n218,861,844 Downloads all time\n47 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  strum_macros v0.27.1\nHelpful macros for working with enums and strings \n  *  #enum \u27e81\u27e9\n  *  #macros \u27e82\u27e9\n  *  #proc-macros \u27e83\u27e9\n  *  #string \u27e84\u27e9\n\n\n  *  Readme \u27e85\u27e9\n  *  47 Versions \u27e86\u27e9\n  *  Dependencies \u27e87\u27e9\n  *  Dependents \u27e88\u27e9\n\n\n## Metadata\n4 months ago \nv1.66.1 \n MIT \u27e89\u27e9\n29 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add strum_macros\nOr add the following line to your Cargo.toml:\nstrum_macros = \"0.27.1\"\n## Documentation\n docs.rs/strum \u27e810\u27e9\n## Repository\n github.com/Peternator7/strum \u27e811\u27e9\n## Owners\n## Categories\n  * Procedural macro helpers\u27e812\u27e9\n  * Parsing tools\u27e813\u27e9\n\n\n Report crate \u27e814\u27e9\n### Stats Overview\n218,861,844 Downloads all time\n47 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/enum:  #enum \n\u27e82\u27e9 https://crates.io/keywords/macros:  #macros \n\u27e83\u27e9 https://crates.io/keywords/proc-macros:  #proc-macros \n\u27e84\u27e9 https://crates.io/keywords/string:  #string \n\u27e85\u27e9 https://crates.io/crates/strum_macros:  Readme \n\u27e86\u27e9 https://crates.io/crates/strum_macros/versions:  47 Versions \n\u27e87\u27e9 https://crates.io/crates/strum_macros/dependencies:  Dependencies \n\u27e88\u27e9 https://crates.io/crates/strum_macros/reverse_dependencies:  Dependents \n\u27e89\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e810\u27e9 https://docs.rs/strum:  docs.rs/strum \n\u27e811\u27e9 https://github.com/Peternator7/strum:  github.com/Peternator7/strum \n\u27e812\u27e9 https://crates.io/categories/development-tools::procedural-macro-helpers: Procedural macro helpers\n\u27e813\u27e9 https://crates.io/categories/parsing: Parsing tools\n\u27e814\u27e9 https://crates.io/support?crate=strum_macros&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1406,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "117802.3587336"
          },
          "docs_rs": {
            "url": "https://docs.rs/strum_macros",
            "title": "Crate strum_macrosCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/strum_macros/latest/strum_macros/all.html \"show sidebar\")\n# Crate strum_macrosCopy item path\n[Settings](https://docs.rs/strum_macros/latest/settings.html)\n[Help](https://docs.rs/strum_macros/latest/help.html)\nSummary[Source](https://docs.rs/strum_macros/latest/src/strum_macros/lib.rs.html#1-969)\nExpand description\n## [\u00a7](https://docs.rs/strum_macros/latest/strum_macros/#strum)Strum\nStrum is a set of macros and traits for working with enums and strings easier in Rust.\nThis crate only contains derive macros for use with the [`strum`](https://docs.rs/strum) crate. The macros provied by this crate are also available by enabling the `derive` feature in aforementioned `strum` crate.\n## Derive Macros[\u00a7](https://docs.rs/strum_macros/latest/strum_macros/#derives)\n\n[AsRefStr](https://docs.rs/strum_macros/latest/strum_macros/derive.AsRefStr.html \"derive strum_macros::AsRefStr\")\n    Converts enum variants to `&'a str`, where `'a` is the lifetime of the input enum reference.\n\n[Display](https://docs.rs/strum_macros/latest/strum_macros/derive.Display.html \"derive strum_macros::Display\")\n    Converts enum variants to strings.\n\n[EnumCount](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumCount.html \"derive strum_macros::EnumCount\")\n    Add a constant `usize` equal to the number of variants.\n\n[EnumDiscriminants](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumDiscriminants.html \"derive strum_macros::EnumDiscriminants\")\n    Generate a new type with only the discriminant names.\n\n[EnumIs](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumIs.html \"derive strum_macros::EnumIs\")\n    Generated `is_*()` methods for each variant. E.g. `Color.is_red()`.\n\n[EnumIter](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumIter.html \"derive strum_macros::EnumIter\")\n    Creates a new type that iterates over the variants of an enum.\n\n[EnumMessage](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumMessage.html \"derive strum_macros::EnumMessage\")\n    Add a verbose message to an enum variant.\n\n[EnumProperty](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumProperty.html \"derive strum_macros::EnumProperty\")\n    Add custom properties to enum variants.\n\n[EnumString](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumString.html \"derive strum_macros::EnumString\")\n    Converts strings to enum variants based on their name.\n\n[EnumTryAs](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumTryAs.html \"derive strum_macros::EnumTryAs\")\n    Generated `try_as_*()` methods for all tuple-style variants. E.g. `Message.try_as_write()`.\n\n[FromRepr](https://docs.rs/strum_macros/latest/strum_macros/derive.FromRepr.html \"derive strum_macros::FromRepr\")\n    Add a function to enum that allows accessing variants by its discriminant\n\n[IntoStaticStr](https://docs.rs/strum_macros/latest/strum_macros/derive.IntoStaticStr.html \"derive strum_macros::IntoStaticStr\")\n    Implements `From<MyEnum> for &'static str` on an enum.\n\n[VariantArray](https://docs.rs/strum_macros/latest/strum_macros/derive.VariantArray.html \"derive strum_macros::VariantArray\")\n    Adds a `'static` slice with all of the Enum\u2019s variants.\n\n[VariantNames](https://docs.rs/strum_macros/latest/strum_macros/derive.VariantNames.html \"derive strum_macros::VariantNames\")\n    Implements `Strum::VariantNames` which adds an associated constant `VARIANTS` which is a `'static` slice of discriminant names.\n",
              "markdown_with_citations": "[](https://docs.rs/strum_macros/latest/strum_macros/all.html \"show sidebar\")\n# Crate strum_macrosCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9Strum\nStrum is a set of macros and traits for working with enums and strings easier in Rust.\nThis crate only contains derive macros for use with the `strum`\u27e85\u27e9 crate. The macros provied by this crate are also available by enabling the `derive` feature in aforementioned `strum` crate.\n## Derive Macros\u00a7\u27e86\u27e9\n\nAsRefStr\u27e87\u27e9\n    Converts enum variants to `&'a str`, where `'a` is the lifetime of the input enum reference.\n\nDisplay\u27e88\u27e9\n    Converts enum variants to strings.\n\nEnumCount\u27e89\u27e9\n    Add a constant `usize` equal to the number of variants.\n\nEnumDiscriminants\u27e810\u27e9\n    Generate a new type with only the discriminant names.\n\nEnumIs\u27e811\u27e9\n    Generated `is_*()` methods for each variant. E.g. `Color.is_red()`.\n\nEnumIter\u27e812\u27e9\n    Creates a new type that iterates over the variants of an enum.\n\nEnumMessage\u27e813\u27e9\n    Add a verbose message to an enum variant.\n\nEnumProperty\u27e814\u27e9\n    Add custom properties to enum variants.\n\nEnumString\u27e815\u27e9\n    Converts strings to enum variants based on their name.\n\nEnumTryAs\u27e816\u27e9\n    Generated `try_as_*()` methods for all tuple-style variants. E.g. `Message.try_as_write()`.\n\nFromRepr\u27e817\u27e9\n    Add a function to enum that allows accessing variants by its discriminant\n\nIntoStaticStr\u27e818\u27e9\n    Implements `From<MyEnum> for &'static str` on an enum.\n\nVariantArray\u27e819\u27e9\n    Adds a `'static` slice with all of the Enum\u2019s variants.\n\nVariantNames\u27e820\u27e9\n    Implements `Strum::VariantNames` which adds an associated constant `VARIANTS` which is a `'static` slice of discriminant names.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/strum_macros/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/strum_macros/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/strum_macros/latest/src/strum_macros/lib.rs.html#1-969: Source\n\u27e84\u27e9 https://docs.rs/strum_macros/latest/strum_macros/#strum: \u00a7\n\u27e85\u27e9 https://docs.rs/strum: `strum`\n\u27e86\u27e9 https://docs.rs/strum_macros/latest/strum_macros/#derives: \u00a7\n\u27e87\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.AsRefStr.html: derive strum_macros::AsRefStr - AsRefStr\n\u27e88\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.Display.html: derive strum_macros::Display - Display\n\u27e89\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumCount.html: derive strum_macros::EnumCount - EnumCount\n\u27e810\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumDiscriminants.html: derive strum_macros::EnumDiscriminants - EnumDiscriminants\n\u27e811\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumIs.html: derive strum_macros::EnumIs - EnumIs\n\u27e812\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumIter.html: derive strum_macros::EnumIter - EnumIter\n\u27e813\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumMessage.html: derive strum_macros::EnumMessage - EnumMessage\n\u27e814\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumProperty.html: derive strum_macros::EnumProperty - EnumProperty\n\u27e815\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumString.html: derive strum_macros::EnumString - EnumString\n\u27e816\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumTryAs.html: derive strum_macros::EnumTryAs - EnumTryAs\n\u27e817\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.FromRepr.html: derive strum_macros::FromRepr - FromRepr\n\u27e818\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.IntoStaticStr.html: derive strum_macros::IntoStaticStr - IntoStaticStr\n\u27e819\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.VariantArray.html: derive strum_macros::VariantArray - VariantArray\n\u27e820\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.VariantNames.html: derive strum_macros::VariantNames - VariantNames\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 3451,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "117803.1400743"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/strum_macros",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [45 releases](https://lib.rs/crates/strum_macros/versions) (23 breaking)\n0.27.1 |  Feb 17, 2025   \n---|---  \n0.26.4 |  Jun 5, 2024   \n0.26.2 |  Mar 10, 2024   \n0.25.3 |  Oct 15, 2023   \n0.5.0 |  Feb 23, 2017   \n#**230** in [Procedural macros](https://lib.rs/development-tools/procedural-macro-helpers \"Crates to help you write procedural macros in Rust.\n\")\nDownload history 3153811/week @ 2025-03-01 3310659/week @ 2025-03-08 3426708/week @ 2025-03-15 3719737/week @ 2025-03-22 3088573/week @ 2025-03-29 3231813/week @ 2025-04-05 2866688/week @ 2025-04-12 2878028/week @ 2025-04-19 2671894/week @ 2025-04-26 2819984/week @ 2025-05-03 2954374/week @ 2025-05-10 2993138/week @ 2025-05-17 2635879/week @ 2025-05-24 2892462/week @ 2025-05-31 2940169/week @ 2025-06-07 2595367/week @ 2025-06-14\n**11,531,754** downloads per month Used in [**10,601** crates (1,594 directly)](https://lib.rs/crates/strum_macros/rev)\n**MIT** license \n145KB  2.5K  SLoC\n# Strum\n[![Build Status](https://img.gs/czjpqfbdkz/full/https://travis-ci.com/Peternator7/strum.svg?branch=master)](https://travis-ci.com/Peternator7/strum) [![Build status](https://img.gs/czjpqfbdkz/full/https://ci.appveyor.com/api/projects/status/ji4f6n2m5lvu11xt?svg=true)](https://ci.appveyor.com/project/Peternator7/strum) [![Latest Version](https://img.shields.io/crates/v/strum.svg)](https://lib.rs/crates/strum) [![Rust Documentation](https://img.gs/czjpqfbdkz/full/https://docs.rs/strum/badge.svg)](https://docs.rs/strum) ![Crates.io](https://img.shields.io/crates/l/strum) ![Crates.io](https://img.shields.io/crates/d/strum)\nStrum is a set of macros and traits for working with enums and strings easier in Rust.\n# Compatibility\nStrum is currently compatible with versions of rustc >= 1.66.1. Pull Requests that improve compatibility with older versions are welcome. The project goal is to support a rust version for at least 2 years after release and even longer is preferred since this project changes slowly.\n# Including Strum in Your Project\nImport strum and strum_macros into your project by adding the following lines to your Cargo.toml. Strum_macros contains the macros needed to derive all the traits in Strum.\n```\n```[``dependencies``]`\n`strum ``=` ``\"`0.27`\"``\n`strum_macros ``=` ``\"`0.27`\"``\n``# You can also use the \"derive\" feature, and import the macros directly from \"strum\"``\n``# strum = { version = \"0.27\", features = [\"derive\"] }``\n``\n```\n\n# Strum Macros\nStrum has implemented the following macros:\nMacro | Description  \n---|---  \n[EnumString](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumString.html) | Converts strings to enum variants based on their name.  \n[Display](https://docs.rs/strum_macros/latest/strum_macros/derive.Display.html) | Converts enum variants to strings  \n[FromRepr](https://docs.rs/strum_macros/latest/strum_macros/derive.FromRepr.html) | Convert from an integer to an enum.  \n[AsRefStr](https://docs.rs/strum_macros/latest/strum_macros/derive.AsRefStr.html) | Implement ````AsRef``<``str``>```` for ``MyEnum``  \n[IntoStaticStr](https://docs.rs/strum_macros/latest/strum_macros/derive.IntoStaticStr.html) | Implements ````From``<`MyEnum`>`` `for` `&``'static` `str``` on an enum  \n[EnumIter](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumIter.html) | Creates a new type that iterates of the variants of an enum.  \n[EnumProperty](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumProperty.html) | Add custom properties to enum variants.  \n[EnumMessage](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumMessage.html) | Add a verbose message to an enum variant.  \n[EnumDiscriminants](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumDiscriminants.html) | Generate a new type with only the discriminant names.  \n[EnumCount](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumCount.html) | Add a constant ```usize``` equal to the number of variants.  \n[VariantArray](https://docs.rs/strum_macros/latest/strum_macros/derive.VariantArray.html) | Adds an associated ``VARIANTS`` constant which is an array of all enum discriminants  \n[VariantNames](https://docs.rs/strum_macros/latest/strum_macros/derive.VariantNames.html) | Adds an associated ``VARIANTS`` constant which is an array of discriminant names  \n[EnumTable](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumTable.html) | _Experimental_ , creates a new type that stores an item of a specified type for each variant of the enum.  \n# Contributing\nThanks for your interest in contributing. Bug fixes are always welcome. If you are interested in implementing or adding a macro, please open an issue first to discuss the feature. I have limited bandwidth to review new features.\nThe project is divided into 3 parts, the traits are in the ``/strum`` folder. The procedural macros are in the ``/strum_macros`` folder, and the integration tests are in ``/strum_tests``. If you are adding additional features to ``strum`` or ``strum_macros``, you should make sure to run the tests and add new integration tests to make sure the features work as expected.\n# Debugging\nTo see the generated code, set the STRUM_DEBUG environment variable before compiling your code. ```STRUM_DEBUG``=``1``` will dump all of the generated code for every type. ```STRUM_DEBUG``=`YourType`` will only dump the code generated on a type named ``YourType``.\n# Name\nStrum is short for STRing enUM because it's a library for augmenting enums with additional information through strings.\nStrumming is also a very whimsical motion, much like writing Rust code.\n#### Dependencies\n~205\u2013630KB  ~15K SLoC\n  * [heck](https://lib.rs/crates/heck \"new\") 0.5\n  * [proc-macro2](https://lib.rs/crates/proc-macro2 \"1.0\")\n  * [quote](https://lib.rs/crates/quote \"1.0\")\n  * [rustversion](https://lib.rs/crates/rustversion \"1.0\")\n  * [syn](https://lib.rs/crates/syn \"2.0\")[+parsing](https://lib.rs/crates/syn/features#feature-parsing)\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  45 releases\u27e81\u27e9 (23 breaking)\n0.27.1 |  Feb 17, 2025   \n---|---  \n0.26.4 |  Jun 5, 2024   \n0.26.2 |  Mar 10, 2024   \n0.25.3 |  Oct 15, 2023   \n0.5.0 |  Feb 23, 2017   \n#**230** in Procedural macros\u27e82\u27e9\nDownload history 3153811/week @ 2025-03-01 3310659/week @ 2025-03-08 3426708/week @ 2025-03-15 3719737/week @ 2025-03-22 3088573/week @ 2025-03-29 3231813/week @ 2025-04-05 2866688/week @ 2025-04-12 2878028/week @ 2025-04-19 2671894/week @ 2025-04-26 2819984/week @ 2025-05-03 2954374/week @ 2025-05-10 2993138/week @ 2025-05-17 2635879/week @ 2025-05-24 2892462/week @ 2025-05-31 2940169/week @ 2025-06-07 2595367/week @ 2025-06-14\n**11,531,754** downloads per month Used in **10,601** crates (1,594 directly)\u27e83\u27e9\n**MIT** license \n145KB  2.5K  SLoC\n# Strum\n![Build Status\u27e84\u27e9](https://travis-ci.com/Peternator7/strum) ![Build status\u27e85\u27e9](https://ci.appveyor.com/project/Peternator7/strum) ![Latest Version\u27e86\u27e9](https://lib.rs/crates/strum) ![Rust Documentation\u27e87\u27e9](https://docs.rs/strum) ![Crates.io\u27e88\u27e9] ![Crates.io\u27e89\u27e9]\nStrum is a set of macros and traits for working with enums and strings easier in Rust.\n# Compatibility\nStrum is currently compatible with versions of rustc >= 1.66.1. Pull Requests that improve compatibility with older versions are welcome. The project goal is to support a rust version for at least 2 years after release and even longer is preferred since this project changes slowly.\n# Including Strum in Your Project\nImport strum and strum_macros into your project by adding the following lines to your Cargo.toml. Strum_macros contains the macros needed to derive all the traits in Strum.\n```\n```[``dependencies``]`\n`strum ``=` ``\"`0.27`\"``\n`strum_macros ``=` ``\"`0.27`\"``\n``# You can also use the \"derive\" feature, and import the macros directly from \"strum\"``\n``# strum = { version = \"0.27\", features = [\"derive\"] }``\n``\n```\n\n# Strum Macros\nStrum has implemented the following macros:\nMacro | Description  \n---|---  \nEnumString\u27e810\u27e9 | Converts strings to enum variants based on their name.  \nDisplay\u27e811\u27e9 | Converts enum variants to strings  \nFromRepr\u27e812\u27e9 | Convert from an integer to an enum.  \nAsRefStr\u27e813\u27e9 | Implement ````AsRef``<``str``>```` for ``MyEnum``  \nIntoStaticStr\u27e814\u27e9 | Implements ````From``<`MyEnum`>`` `for` `&``'static` `str``` on an enum  \nEnumIter\u27e815\u27e9 | Creates a new type that iterates of the variants of an enum.  \nEnumProperty\u27e816\u27e9 | Add custom properties to enum variants.  \nEnumMessage\u27e817\u27e9 | Add a verbose message to an enum variant.  \nEnumDiscriminants\u27e818\u27e9 | Generate a new type with only the discriminant names.  \nEnumCount\u27e819\u27e9 | Add a constant ```usize``` equal to the number of variants.  \nVariantArray\u27e820\u27e9 | Adds an associated ``VARIANTS`` constant which is an array of all enum discriminants  \nVariantNames\u27e821\u27e9 | Adds an associated ``VARIANTS`` constant which is an array of discriminant names  \nEnumTable\u27e822\u27e9 | _Experimental_ , creates a new type that stores an item of a specified type for each variant of the enum.  \n# Contributing\nThanks for your interest in contributing. Bug fixes are always welcome. If you are interested in implementing or adding a macro, please open an issue first to discuss the feature. I have limited bandwidth to review new features.\nThe project is divided into 3 parts, the traits are in the ``/strum`` folder. The procedural macros are in the ``/strum_macros`` folder, and the integration tests are in ``/strum_tests``. If you are adding additional features to ``strum`` or ``strum_macros``, you should make sure to run the tests and add new integration tests to make sure the features work as expected.\n# Debugging\nTo see the generated code, set the STRUM_DEBUG environment variable before compiling your code. ```STRUM_DEBUG``=``1``` will dump all of the generated code for every type. ```STRUM_DEBUG``=`YourType`` will only dump the code generated on a type named ``YourType``.\n# Name\nStrum is short for STRing enUM because it's a library for augmenting enums with additional information through strings.\nStrumming is also a very whimsical motion, much like writing Rust code.\n#### Dependencies\n~205\u2013630KB  ~15K SLoC\n  * heck\u27e823\u27e9 0.5\n  * proc-macro2\u27e824\u27e9\n  * quote\u27e825\u27e9\n  * rustversion\u27e826\u27e9\n  * syn\u27e827\u27e9+parsing\u27e828\u27e9\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/strum_macros/versions: 45 releases\n\u27e82\u27e9 https://lib.rs/development-tools/procedural-macro-helpers: Crates to help you write procedural macros in Rust.\n - Procedural macros\n\u27e83\u27e9 https://lib.rs/crates/strum_macros/rev: **10,601** crates (1,594 directly)\n\u27e84\u27e9 https://img.gs/czjpqfbdkz/full/https://travis-ci.com/Peternator7/strum.svg?branch=master: ![Build Status\n\u27e85\u27e9 https://img.gs/czjpqfbdkz/full/https://ci.appveyor.com/api/projects/status/ji4f6n2m5lvu11xt?svg=true: ![Build status\n\u27e86\u27e9 https://img.shields.io/crates/v/strum.svg: ![Latest Version\n\u27e87\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/strum/badge.svg: ![Rust Documentation\n\u27e88\u27e9 https://img.shields.io/crates/l/strum: Crates.io\n\u27e89\u27e9 https://img.shields.io/crates/d/strum: Crates.io\n\u27e810\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumString.html: EnumString\n\u27e811\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.Display.html: Display\n\u27e812\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.FromRepr.html: FromRepr\n\u27e813\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.AsRefStr.html: AsRefStr\n\u27e814\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.IntoStaticStr.html: IntoStaticStr\n\u27e815\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumIter.html: EnumIter\n\u27e816\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumProperty.html: EnumProperty\n\u27e817\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumMessage.html: EnumMessage\n\u27e818\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumDiscriminants.html: EnumDiscriminants\n\u27e819\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumCount.html: EnumCount\n\u27e820\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.VariantArray.html: VariantArray\n\u27e821\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.VariantNames.html: VariantNames\n\u27e822\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumTable.html: EnumTable\n\u27e823\u27e9 https://lib.rs/crates/heck: new - heck\n\u27e824\u27e9 https://lib.rs/crates/proc-macro2: 1.0 - proc-macro2\n\u27e825\u27e9 https://lib.rs/crates/quote: 1.0 - quote\n\u27e826\u27e9 https://lib.rs/crates/rustversion: 1.0 - rustversion\n\u27e827\u27e9 https://lib.rs/crates/syn: 2.0 - syn\n\u27e828\u27e9 https://lib.rs/crates/syn/features#feature-parsing: +parsing\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 5963,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "117803.8285718"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\deps\\libunicode_ident-0fdb772f9fe5b577.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#heck@0.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\heck-0.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "heck",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\heck-0.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\deps\\libheck-625640ad99440528.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\build\\proc-macro2-ff1a34852a360a33\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\build\\proc-macro2-ff1a34852a360a33\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustversion-1.0.21\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustversion-1.0.21\\build\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\build\\rustversion-3f12f2ada73a15f9\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\build\\rustversion-3f12f2ada73a15f9\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.21",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "host_os=\"windows\""
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\build\\rustversion-b29a2983b0e09987\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\build\\proc-macro2-bd004ad9dcfa0b46\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\deps\\libproc_macro2-48b01486ebc04fa5.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\deps\\libquote-303ee31578ba9be8.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustversion-1.0.21\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "rustversion",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustversion-1.0.21\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\deps\\rustversion-316ea6aa7e88af25.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\deps\\rustversion-316ea6aa7e88af25.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\deps\\rustversion-316ea6aa7e88af25.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\deps\\rustversion-316ea6aa7e88af25.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.104",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.104\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.104\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "parsing",
                "printing",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\deps\\libsyn-94d3bae4b7450320.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\deps\\libstrum_macros-45d4002595a87210.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\build\\proc-macro2-ff1a34852a360a33\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\build\\proc-macro2-ff1a34852a360a33\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\build\\proc-macro2-bd004ad9dcfa0b46\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\deps\\libunicode_ident-0fdb772f9fe5b577.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustversion-1.0.21\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustversion-1.0.21\\build\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\build\\rustversion-3f12f2ada73a15f9\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\build\\rustversion-3f12f2ada73a15f9\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#heck@0.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\heck-0.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "heck",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\heck-0.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\deps\\libheck-625640ad99440528.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\deps\\libproc_macro2-48b01486ebc04fa5.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.21",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "host_os=\"windows\""
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\build\\rustversion-b29a2983b0e09987\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\deps\\libquote-303ee31578ba9be8.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustversion-1.0.21\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "rustversion",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustversion-1.0.21\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\deps\\rustversion-316ea6aa7e88af25.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\deps\\rustversion-316ea6aa7e88af25.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\deps\\rustversion-316ea6aa7e88af25.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\deps\\rustversion-316ea6aa7e88af25.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.104",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.104\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.104\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "parsing",
                "printing",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\deps\\libsyn-94d3bae4b7450320.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: empty line after doc comment\n   --> src\\lib.rs:814:1\n    |\n814 | / /// ```\n815 | |\n    | |_^\n816 |   #[proc_macro_derive(EnumProperty, attributes(strum))]\n817 |   pub fn enum_properties(input: proc_macro::TokenStream) -> proc_macro::TokenStream {\n    |   ---------------------- the comment documents this function\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n    = note: `#[warn(clippy::empty_line_after_doc_comments)]` on by default\n    = help: if the empty line is unintentional, remove it\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::empty_line_after_doc_comments)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if the empty line is unintentional, remove it",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 29205,
                        "byte_start": 29204,
                        "column_end": 1,
                        "column_start": 8,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 815,
                        "line_start": 814,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 8,
                            "highlight_start": 8,
                            "text": "/// ```"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::empty_line_after_doc_comments",
                  "explanation": null
                },
                "level": "warning",
                "message": "empty line after doc comment",
                "spans": [
                  {
                    "byte_end": 29282,
                    "byte_start": 29260,
                    "column_end": 23,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": false,
                    "label": "the comment documents this function",
                    "line_end": 817,
                    "line_start": 817,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "pub fn enum_properties(input: proc_macro::TokenStream) -> proc_macro::TokenStream {"
                      }
                    ]
                  },
                  {
                    "byte_end": 29205,
                    "byte_start": 29197,
                    "column_end": 1,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 815,
                    "line_start": 814,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 1,
                        "text": "/// ```"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\helpers\\case_style.rs:49:17\n   |\n49 | /                 format!(\n50 | |                     \"Unexpected case style for serialize_all: `{}`. Valid values are: `{:?}`\",\n51 | |                     val, VALID_CASE_STYLES\n52 | |                 ),\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n   = note: `#[warn(clippy::uninlined_format_args)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::uninlined_format_args)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1123,
                        "byte_start": 1123,
                        "column_end": 65,
                        "column_start": 65,
                        "expansion": null,
                        "file_name": "src\\helpers\\case_style.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 50,
                        "line_start": 50,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 65,
                            "highlight_start": 65,
                            "text": "                    \"Unexpected case style for serialize_all: `{}`. Valid values are: `{:?}`\","
                          }
                        ]
                      },
                      {
                        "byte_end": 1147,
                        "byte_start": 1147,
                        "column_end": 89,
                        "column_start": 89,
                        "expansion": null,
                        "file_name": "src\\helpers\\case_style.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 50,
                        "line_start": 50,
                        "suggested_replacement": "VALID_CASE_STYLES",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 89,
                            "highlight_start": 89,
                            "text": "                    \"Unexpected case style for serialize_all: `{}`. Valid values are: `{:?}`\","
                          }
                        ]
                      },
                      {
                        "byte_end": 1177,
                        "byte_start": 1152,
                        "column_end": 24,
                        "column_start": 94,
                        "expansion": null,
                        "file_name": "src\\helpers\\case_style.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 51,
                        "line_start": 50,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 95,
                            "highlight_start": 94,
                            "text": "                    \"Unexpected case style for serialize_all: `{}`. Valid values are: `{:?}`\","
                          },
                          {
                            "highlight_end": 24,
                            "highlight_start": 1,
                            "text": "                    val, VALID_CASE_STYLES"
                          }
                        ]
                      },
                      {
                        "byte_end": 1196,
                        "byte_start": 1177,
                        "column_end": 43,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\helpers\\case_style.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 51,
                        "line_start": 51,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 24,
                            "text": "                    val, VALID_CASE_STYLES"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1214,
                    "byte_start": 1050,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\helpers\\case_style.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 52,
                    "line_start": 49,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 17,
                        "text": "                format!("
                      },
                      {
                        "highlight_end": 95,
                        "highlight_start": 1,
                        "text": "                    \"Unexpected case style for serialize_all: `{}`. Valid values are: `{:?}`\","
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "                    val, VALID_CASE_STYLES"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                ),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: use of `char::is_digit` with literal radix of 10\n   --> src\\helpers\\case_style.rs:169:12\n    |\n169 |         if c.is_digit(10) && pos != 0 && !output[pos - 1].is_digit(10) {\n    |            ^^^^^^^^^^^^^^ help: try: `c.is_ascii_digit()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#is_digit_ascii_radix\n    = note: `#[warn(clippy::is_digit_ascii_radix)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#is_digit_ascii_radix",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::is_digit_ascii_radix)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5769,
                        "byte_start": 5755,
                        "column_end": 26,
                        "column_start": 12,
                        "expansion": null,
                        "file_name": "src\\helpers\\case_style.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 169,
                        "line_start": 169,
                        "suggested_replacement": "c.is_ascii_digit()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 12,
                            "text": "        if c.is_digit(10) && pos != 0 && !output[pos - 1].is_digit(10) {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::is_digit_ascii_radix",
                  "explanation": null
                },
                "level": "warning",
                "message": "use of `char::is_digit` with literal radix of 10",
                "spans": [
                  {
                    "byte_end": 5769,
                    "byte_start": 5755,
                    "column_end": 26,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\helpers\\case_style.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 169,
                    "line_start": 169,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 12,
                        "text": "        if c.is_digit(10) && pos != 0 && !output[pos - 1].is_digit(10) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: use of `char::is_digit` with literal radix of 10\n   --> src\\helpers\\case_style.rs:169:43\n    |\n169 |         if c.is_digit(10) && pos != 0 && !output[pos - 1].is_digit(10) {\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `output[pos - 1].is_ascii_digit()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#is_digit_ascii_radix\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#is_digit_ascii_radix",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5814,
                        "byte_start": 5786,
                        "column_end": 71,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\helpers\\case_style.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 169,
                        "line_start": 169,
                        "suggested_replacement": "output[pos - 1].is_ascii_digit()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 71,
                            "highlight_start": 43,
                            "text": "        if c.is_digit(10) && pos != 0 && !output[pos - 1].is_digit(10) {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::is_digit_ascii_radix",
                  "explanation": null
                },
                "level": "warning",
                "message": "use of `char::is_digit` with literal radix of 10",
                "spans": [
                  {
                    "byte_end": 5814,
                    "byte_start": 5786,
                    "column_end": 71,
                    "column_start": 43,
                    "expansion": null,
                    "file_name": "src\\helpers\\case_style.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 169,
                    "line_start": 169,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 71,
                        "highlight_start": 43,
                        "text": "        if c.is_digit(10) && pos != 0 && !output[pos - 1].is_digit(10) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\helpers\\mod.rs:38:9\n   |\n38 | /         format_args!(\n39 | |             \"The [`{}`] attribute only supports enum variants with a single field\",\n40 | |             attr\n41 | |         ),\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1081,
                        "byte_start": 1081,
                        "column_end": 21,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\helpers\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 39,
                        "line_start": 39,
                        "suggested_replacement": "attr",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 21,
                            "highlight_start": 21,
                            "text": "            \"The [`{}`] attribute only supports enum variants with a single field\","
                          }
                        ]
                      },
                      {
                        "byte_end": 1161,
                        "byte_start": 1143,
                        "column_end": 17,
                        "column_start": 83,
                        "expansion": null,
                        "file_name": "src\\helpers\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 40,
                        "line_start": 39,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 84,
                            "highlight_start": 83,
                            "text": "            \"The [`{}`] attribute only supports enum variants with a single field\","
                          },
                          {
                            "highlight_end": 17,
                            "highlight_start": 1,
                            "text": "            attr"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1171,
                    "byte_start": 1047,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\helpers\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 41,
                    "line_start": 38,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 22,
                        "highlight_start": 9,
                        "text": "        format_args!("
                      },
                      {
                        "highlight_end": 84,
                        "highlight_start": 1,
                        "text": "            \"The [`{}`] attribute only supports enum variants with a single field\","
                      },
                      {
                        "highlight_end": 17,
                        "highlight_start": 1,
                        "text": "            attr"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        ),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\helpers\\mod.rs:55:9\n   |\n55 |         format!(\"Found multiple occurrences of strum({})\", attr),\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n55 -         format!(\"Found multiple occurrences of strum({})\", attr),\n55 +         format!(\"Found multiple occurrences of strum({attr})\"),\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1604,
                        "byte_start": 1604,
                        "column_end": 55,
                        "column_start": 55,
                        "expansion": null,
                        "file_name": "src\\helpers\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 55,
                        "line_start": 55,
                        "suggested_replacement": "attr",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 55,
                            "highlight_start": 55,
                            "text": "        format!(\"Found multiple occurrences of strum({})\", attr),"
                          }
                        ]
                      },
                      {
                        "byte_end": 1613,
                        "byte_start": 1607,
                        "column_end": 64,
                        "column_start": 58,
                        "expansion": null,
                        "file_name": "src\\helpers\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 55,
                        "line_start": 55,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 64,
                            "highlight_start": 58,
                            "text": "        format!(\"Found multiple occurrences of strum({})\", attr),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1614,
                    "byte_start": 1558,
                    "column_end": 65,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\helpers\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 55,
                    "line_start": 55,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 65,
                        "highlight_start": 9,
                        "text": "        format!(\"Found multiple occurrences of strum({})\", attr),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\macros\\enum_discriminants.rs:34:41\n   |\n34 |     let default_name = syn::Ident::new(&format!(\"{}Discriminants\", name), Span::call_site());\n   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n34 -     let default_name = syn::Ident::new(&format!(\"{}Discriminants\", name), Span::call_site());\n34 +     let default_name = syn::Ident::new(&format!(\"{name}Discriminants\"), Span::call_site());\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1217,
                        "byte_start": 1217,
                        "column_end": 51,
                        "column_start": 51,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_discriminants.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 34,
                        "line_start": 34,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 51,
                            "text": "    let default_name = syn::Ident::new(&format!(\"{}Discriminants\", name), Span::call_site());"
                          }
                        ]
                      },
                      {
                        "byte_end": 1238,
                        "byte_start": 1232,
                        "column_end": 72,
                        "column_start": 66,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_discriminants.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 34,
                        "line_start": 34,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 72,
                            "highlight_start": 66,
                            "text": "    let default_name = syn::Ident::new(&format!(\"{}Discriminants\", name), Span::call_site());"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1239,
                    "byte_start": 1207,
                    "column_end": 73,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "src\\macros\\enum_discriminants.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 34,
                    "line_start": 34,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 73,
                        "highlight_start": 41,
                        "text": "    let default_name = syn::Ident::new(&format!(\"{}Discriminants\", name), Span::call_site());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary closure used to substitute value for `Option::None`\n  --> src\\macros\\enum_discriminants.rs:37:29\n   |\n37 |       let discriminants_vis = type_properties\n   |  _____________________________^\n38 | |         .discriminant_vis\n39 | |         .as_ref()\n40 | |         .unwrap_or_else(|| &vis);\n   | |________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n   = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\nhelp: use `unwrap_or` instead\n   |\n40 -         .unwrap_or_else(|| &vis);\n40 +         .unwrap_or(&vis);\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::unnecessary_lazy_evaluations)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `unwrap_or` instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1470,
                        "byte_start": 1447,
                        "column_end": 33,
                        "column_start": 10,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_discriminants.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 40,
                        "line_start": 40,
                        "suggested_replacement": "unwrap_or(&vis)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 10,
                            "text": "        .unwrap_or_else(|| &vis);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_lazy_evaluations",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary closure used to substitute value for `Option::None`",
                "spans": [
                  {
                    "byte_end": 1470,
                    "byte_start": 1378,
                    "column_end": 33,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\macros\\enum_discriminants.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 40,
                    "line_start": 37,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 44,
                        "highlight_start": 29,
                        "text": "    let discriminants_vis = type_properties"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "        .discriminant_vis"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "        .as_ref()"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "        .unwrap_or_else(|| &vis);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src\\macros\\enum_discriminants.rs:40:28\n   |\n40 |         .unwrap_or_else(|| &vis);\n   |                            ^^^^ help: change this to: `vis`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_borrow)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1469,
                        "byte_start": 1465,
                        "column_end": 32,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_discriminants.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 40,
                        "line_start": 40,
                        "suggested_replacement": "vis",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 28,
                            "text": "        .unwrap_or_else(|| &vis);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 1469,
                    "byte_start": 1465,
                    "column_end": 32,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\macros\\enum_discriminants.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 40,
                    "line_start": 40,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 28,
                        "text": "        .unwrap_or_else(|| &vis);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\macros\\enum_is.rs:23:31\n   |\n23 |               let doc_comment = format!(\n   |  _______________________________^\n24 | |                 \"Returns [true] if the enum is [{}::{}] otherwise [false]\",\n25 | |                 enum_name, variant_name\n26 | |             );\n   | |_____________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 917,
                        "byte_start": 917,
                        "column_end": 50,
                        "column_start": 50,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_is.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 24,
                        "line_start": 24,
                        "suggested_replacement": "enum_name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 50,
                            "highlight_start": 50,
                            "text": "                \"Returns [true] if the enum is [{}::{}] otherwise [false]\","
                          }
                        ]
                      },
                      {
                        "byte_end": 921,
                        "byte_start": 921,
                        "column_end": 54,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_is.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 24,
                        "line_start": 24,
                        "suggested_replacement": "variant_name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 54,
                            "text": "                \"Returns [true] if the enum is [{}::{}] otherwise [false]\","
                          }
                        ]
                      },
                      {
                        "byte_end": 969,
                        "byte_start": 942,
                        "column_end": 26,
                        "column_start": 75,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_is.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 25,
                        "line_start": 24,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 76,
                            "highlight_start": 75,
                            "text": "                \"Returns [true] if the enum is [{}::{}] otherwise [false]\","
                          },
                          {
                            "highlight_end": 26,
                            "highlight_start": 1,
                            "text": "                enum_name, variant_name"
                          }
                        ]
                      },
                      {
                        "byte_end": 983,
                        "byte_start": 969,
                        "column_end": 40,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_is.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 25,
                        "line_start": 25,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 26,
                            "text": "                enum_name, variant_name"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 997,
                    "byte_start": 859,
                    "column_end": 14,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "src\\macros\\enum_is.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 26,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 31,
                        "text": "            let doc_comment = format!("
                      },
                      {
                        "highlight_end": 76,
                        "highlight_start": 1,
                        "text": "                \"Returns [true] if the enum is [{}::{}] otherwise [false]\","
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "                enum_name, variant_name"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            );"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: useless conversion to the same type: `proc_macro2::TokenStream`\n  --> src\\macros\\enum_is.rs:41:8\n   |\n41 |       Ok(quote! {\n   |  ________^\n42 | |         impl #impl_generics #enum_name  #ty_generics #where_clause {\n43 | |             #(#variants)*\n...  |\n46 | |     .into())\n   | |___________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n   = note: `#[warn(clippy::useless_conversion)]` on by default\nhelp: consider removing `.into()`\n   |\n41 ~     Ok(quote! {\n42 +         impl #impl_generics #enum_name  #ty_generics #where_clause {\n43 +             #(#variants)*\n44 +         }\n45 ~     })\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::useless_conversion)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing `.into()`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1532,
                        "byte_start": 1401,
                        "column_end": 12,
                        "column_start": 8,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_is.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 46,
                        "line_start": 41,
                        "suggested_replacement": "quote! {\n        impl #impl_generics #enum_name  #ty_generics #where_clause {\n            #(#variants)*\n        }\n    }",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 16,
                            "highlight_start": 8,
                            "text": "    Ok(quote! {"
                          },
                          {
                            "highlight_end": 69,
                            "highlight_start": 1,
                            "text": "        impl #impl_generics #enum_name  #ty_generics #where_clause {"
                          },
                          {
                            "highlight_end": 26,
                            "highlight_start": 1,
                            "text": "            #(#variants)*"
                          },
                          {
                            "highlight_end": 10,
                            "highlight_start": 1,
                            "text": "        }"
                          },
                          {
                            "highlight_end": 6,
                            "highlight_start": 1,
                            "text": "    }"
                          },
                          {
                            "highlight_end": 12,
                            "highlight_start": 1,
                            "text": "    .into())"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::useless_conversion",
                  "explanation": null
                },
                "level": "warning",
                "message": "useless conversion to the same type: `proc_macro2::TokenStream`",
                "spans": [
                  {
                    "byte_end": 1532,
                    "byte_start": 1401,
                    "column_end": 12,
                    "column_start": 8,
                    "expansion": null,
                    "file_name": "src\\macros\\enum_is.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 46,
                    "line_start": 41,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 8,
                        "text": "    Ok(quote! {"
                      },
                      {
                        "highlight_end": 69,
                        "highlight_start": 1,
                        "text": "        impl #impl_generics #enum_name  #ty_generics #where_clause {"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "            #(#variants)*"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      },
                      {
                        "highlight_end": 12,
                        "highlight_start": 1,
                        "text": "    .into())"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\macros\\enum_iter.rs:14:23\n   |\n14 |     let doc_comment = format!(\"An iterator over the variants of [{}]\", name);\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n14 -     let doc_comment = format!(\"An iterator over the variants of [{}]\", name);\n14 +     let doc_comment = format!(\"An iterator over the variants of [{name}]\");\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 599,
                        "byte_start": 599,
                        "column_end": 67,
                        "column_start": 67,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 67,
                            "highlight_start": 67,
                            "text": "    let doc_comment = format!(\"An iterator over the variants of [{}]\", name);"
                          }
                        ]
                      },
                      {
                        "byte_end": 608,
                        "byte_start": 602,
                        "column_end": 76,
                        "column_start": 70,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 76,
                            "highlight_start": 70,
                            "text": "    let doc_comment = format!(\"An iterator over the variants of [{}]\", name);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 609,
                    "byte_start": 555,
                    "column_end": 77,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\macros\\enum_iter.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 14,
                    "line_start": 14,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 77,
                        "highlight_start": 23,
                        "text": "    let doc_comment = format!(\"An iterator over the variants of [{}]\", name);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\macros\\enum_iter.rs:66:46\n   |\n66 |     let iter_name = syn::parse_str::<Ident>(&format!(\"{}Iter\", name)).unwrap();\n   |                                              ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n66 -     let iter_name = syn::parse_str::<Ident>(&format!(\"{}Iter\", name)).unwrap();\n66 +     let iter_name = syn::parse_str::<Ident>(&format!(\"{name}Iter\")).unwrap();\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2314,
                        "byte_start": 2314,
                        "column_end": 56,
                        "column_start": 56,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 56,
                            "highlight_start": 56,
                            "text": "    let iter_name = syn::parse_str::<Ident>(&format!(\"{}Iter\", name)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 2326,
                        "byte_start": 2320,
                        "column_end": 68,
                        "column_start": 62,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 68,
                            "highlight_start": 62,
                            "text": "    let iter_name = syn::parse_str::<Ident>(&format!(\"{}Iter\", name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 2327,
                    "byte_start": 2304,
                    "column_end": 69,
                    "column_start": 46,
                    "expansion": null,
                    "file_name": "src\\macros\\enum_iter.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 66,
                    "line_start": 66,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 69,
                        "highlight_start": 46,
                        "text": "    let iter_name = syn::parse_str::<Ident>(&format!(\"{}Iter\", name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\macros\\enum_iter.rs:70:40\n   |\n70 |         syn::parse_str::<syn::LitStr>(&format!(\"\\\"{}\\\"\", iter_name)).unwrap();\n   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n70 -         syn::parse_str::<syn::LitStr>(&format!(\"\\\"{}\\\"\", iter_name)).unwrap();\n70 +         syn::parse_str::<syn::LitStr>(&format!(\"\\\"{iter_name}\\\"\")).unwrap();\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2494,
                        "byte_start": 2494,
                        "column_end": 52,
                        "column_start": 52,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 70,
                        "line_start": 70,
                        "suggested_replacement": "iter_name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 52,
                            "highlight_start": 52,
                            "text": "        syn::parse_str::<syn::LitStr>(&format!(\"\\\"{}\\\"\", iter_name)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 2509,
                        "byte_start": 2498,
                        "column_end": 67,
                        "column_start": 56,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 70,
                        "line_start": 70,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 67,
                            "highlight_start": 56,
                            "text": "        syn::parse_str::<syn::LitStr>(&format!(\"\\\"{}\\\"\", iter_name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 2510,
                    "byte_start": 2482,
                    "column_end": 68,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "src\\macros\\enum_iter.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 70,
                    "line_start": 70,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 68,
                        "highlight_start": 40,
                        "text": "        syn::parse_str::<syn::LitStr>(&format!(\"\\\"{}\\\"\", iter_name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\macros\\enum_table.rs:11:27\n   |\n11 |     let mut doc_comment = format!(\"A map over the variants of `{}`\", name);\n   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n11 -     let mut doc_comment = format!(\"A map over the variants of `{}`\", name);\n11 +     let mut doc_comment = format!(\"A map over the variants of `{name}`\");\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 65,
                        "column_start": 65,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 11,
                        "line_start": 11,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 65,
                            "highlight_start": 65,
                            "text": "    let mut doc_comment = format!(\"A map over the variants of `{}`\", name);"
                          }
                        ]
                      },
                      {
                        "byte_end": 430,
                        "byte_start": 424,
                        "column_end": 74,
                        "column_start": 68,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 11,
                        "line_start": 11,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 74,
                            "highlight_start": 68,
                            "text": "    let mut doc_comment = format!(\"A map over the variants of `{}`\", name);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 431,
                    "byte_start": 383,
                    "column_end": 75,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\macros\\enum_table.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 11,
                    "line_start": 11,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 75,
                        "highlight_start": 27,
                        "text": "    let mut doc_comment = format!(\"A map over the variants of `{}`\", name);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\macros\\enum_table.rs:51:33\n   |\n51 |               let panic_message = format!(\n   |  _________________________________^\n52 | |                 \"Can't use `{}` with `{}` - variant is disabled for Strum features\",\n53 | |                 disabled_ident, table_name\n54 | |             );\n   | |_____________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1990,
                        "byte_start": 1990,
                        "column_end": 30,
                        "column_start": 30,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 52,
                        "line_start": 52,
                        "suggested_replacement": "disabled_ident",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 30,
                            "text": "                \"Can't use `{}` with `{}` - variant is disabled for Strum features\","
                          }
                        ]
                      },
                      {
                        "byte_end": 2000,
                        "byte_start": 2000,
                        "column_end": 40,
                        "column_start": 40,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 52,
                        "line_start": 52,
                        "suggested_replacement": "table_name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 40,
                            "text": "                \"Can't use `{}` with `{}` - variant is disabled for Strum features\","
                          }
                        ]
                      },
                      {
                        "byte_end": 2076,
                        "byte_start": 2044,
                        "column_end": 31,
                        "column_start": 84,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 53,
                        "line_start": 52,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 85,
                            "highlight_start": 84,
                            "text": "                \"Can't use `{}` with `{}` - variant is disabled for Strum features\","
                          },
                          {
                            "highlight_end": 31,
                            "highlight_start": 1,
                            "text": "                disabled_ident, table_name"
                          }
                        ]
                      },
                      {
                        "byte_end": 2088,
                        "byte_start": 2076,
                        "column_end": 43,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 53,
                        "line_start": 53,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 31,
                            "text": "                disabled_ident, table_name"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 2102,
                    "byte_start": 1952,
                    "column_end": 14,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\macros\\enum_table.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 54,
                    "line_start": 51,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 33,
                        "text": "            let panic_message = format!("
                      },
                      {
                        "highlight_end": 85,
                        "highlight_start": 1,
                        "text": "                \"Can't use `{}` with `{}` - variant is disabled for Strum features\","
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "                disabled_ident, table_name"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            );"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\macros\\enum_table.rs:90:31\n   |\n90 |           doc_comment.push_str(&format!(\n   |  _______________________________^\n91 | |             \"\\n# Panics\\nIndexing `{}` with any of the following variants will cause a panic:\",\n92 | |             table_name\n93 | |         ));\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3603,
                        "byte_start": 3603,
                        "column_end": 37,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 91,
                        "line_start": 91,
                        "suggested_replacement": "table_name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 37,
                            "highlight_start": 37,
                            "text": "            \"\\n# Panics\\nIndexing `{}` with any of the following variants will cause a panic:\","
                          }
                        ]
                      },
                      {
                        "byte_end": 3685,
                        "byte_start": 3661,
                        "column_end": 23,
                        "column_start": 95,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 92,
                        "line_start": 91,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 96,
                            "highlight_start": 95,
                            "text": "            \"\\n# Panics\\nIndexing `{}` with any of the following variants will cause a panic:\","
                          },
                          {
                            "highlight_end": 23,
                            "highlight_start": 1,
                            "text": "            table_name"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 3695,
                    "byte_start": 3558,
                    "column_end": 10,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "src\\macros\\enum_table.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 93,
                    "line_start": 90,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 31,
                        "text": "        doc_comment.push_str(&format!("
                      },
                      {
                        "highlight_end": 96,
                        "highlight_start": 1,
                        "text": "            \"\\n# Panics\\nIndexing `{}` with any of the following variants will cause a panic:\","
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "            table_name"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        ));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\macros\\enum_table.rs:95:35\n   |\n95 |             doc_comment.push_str(&format!(\"\\n\\n- `{}::{}`\", name, variant));\n   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n95 -             doc_comment.push_str(&format!(\"\\n\\n- `{}::{}`\", name, variant));\n95 +             doc_comment.push_str(&format!(\"\\n\\n- `{name}::{variant}`\"));\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3792,
                        "byte_start": 3792,
                        "column_end": 52,
                        "column_start": 52,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 95,
                        "line_start": 95,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 52,
                            "highlight_start": 52,
                            "text": "            doc_comment.push_str(&format!(\"\\n\\n- `{}::{}`\", name, variant));"
                          }
                        ]
                      },
                      {
                        "byte_end": 3796,
                        "byte_start": 3796,
                        "column_end": 56,
                        "column_start": 56,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 95,
                        "line_start": 95,
                        "suggested_replacement": "variant",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 56,
                            "highlight_start": 56,
                            "text": "            doc_comment.push_str(&format!(\"\\n\\n- `{}::{}`\", name, variant));"
                          }
                        ]
                      },
                      {
                        "byte_end": 3805,
                        "byte_start": 3799,
                        "column_end": 65,
                        "column_start": 59,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 95,
                        "line_start": 95,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 65,
                            "highlight_start": 59,
                            "text": "            doc_comment.push_str(&format!(\"\\n\\n- `{}::{}`\", name, variant));"
                          }
                        ]
                      },
                      {
                        "byte_end": 3814,
                        "byte_start": 3805,
                        "column_end": 74,
                        "column_start": 65,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 95,
                        "line_start": 95,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 74,
                            "highlight_start": 65,
                            "text": "            doc_comment.push_str(&format!(\"\\n\\n- `{}::{}`\", name, variant));"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 3815,
                    "byte_start": 3775,
                    "column_end": 75,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\macros\\enum_table.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 95,
                    "line_start": 95,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 75,
                        "highlight_start": 35,
                        "text": "            doc_comment.push_str(&format!(\"\\n\\n- `{}::{}`\", name, variant));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\macros\\enum_table.rs:99:19\n    |\n99  |       let doc_new = format!(\n    |  ___________________^\n100 | |         \"Create a new {} with a value for each variant of {}\",\n101 | |         table_name, name\n102 | |     );\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3885,
                        "byte_start": 3885,
                        "column_end": 24,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 100,
                        "line_start": 100,
                        "suggested_replacement": "table_name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 24,
                            "text": "        \"Create a new {} with a value for each variant of {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 3921,
                        "byte_start": 3921,
                        "column_end": 60,
                        "column_start": 60,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 100,
                        "line_start": 100,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 60,
                            "highlight_start": 60,
                            "text": "        \"Create a new {} with a value for each variant of {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 3943,
                        "byte_start": 3923,
                        "column_end": 19,
                        "column_start": 62,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 101,
                        "line_start": 100,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 63,
                            "highlight_start": 62,
                            "text": "        \"Create a new {} with a value for each variant of {}\","
                          },
                          {
                            "highlight_end": 19,
                            "highlight_start": 1,
                            "text": "        table_name, name"
                          }
                        ]
                      },
                      {
                        "byte_end": 3949,
                        "byte_start": 3943,
                        "column_end": 25,
                        "column_start": 19,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 101,
                        "line_start": 101,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 25,
                            "highlight_start": 19,
                            "text": "        table_name, name"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 3955,
                    "byte_start": 3853,
                    "column_end": 6,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "src\\macros\\enum_table.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 102,
                    "line_start": 99,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 19,
                        "text": "    let doc_new = format!("
                      },
                      {
                        "highlight_end": 63,
                        "highlight_start": 1,
                        "text": "        \"Create a new {} with a value for each variant of {}\","
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "        table_name, name"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    );"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\macros\\enum_table.rs:103:23\n    |\n103 |       let doc_closure = format!(\n    |  _______________________^\n104 | |         \"Create a new {} by running a function on each variant of `{}`\",\n105 | |         table_name, name\n106 | |     );\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4011,
                        "byte_start": 4011,
                        "column_end": 24,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 104,
                        "line_start": 104,
                        "suggested_replacement": "table_name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 24,
                            "text": "        \"Create a new {} by running a function on each variant of `{}`\","
                          }
                        ]
                      },
                      {
                        "byte_end": 4056,
                        "byte_start": 4056,
                        "column_end": 69,
                        "column_start": 69,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 104,
                        "line_start": 104,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 69,
                            "highlight_start": 69,
                            "text": "        \"Create a new {} by running a function on each variant of `{}`\","
                          }
                        ]
                      },
                      {
                        "byte_end": 4079,
                        "byte_start": 4059,
                        "column_end": 19,
                        "column_start": 72,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 105,
                        "line_start": 104,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 73,
                            "highlight_start": 72,
                            "text": "        \"Create a new {} by running a function on each variant of `{}`\","
                          },
                          {
                            "highlight_end": 19,
                            "highlight_start": 1,
                            "text": "        table_name, name"
                          }
                        ]
                      },
                      {
                        "byte_end": 4085,
                        "byte_start": 4079,
                        "column_end": 25,
                        "column_start": 19,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 105,
                        "line_start": 105,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 25,
                            "highlight_start": 19,
                            "text": "        table_name, name"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 4091,
                    "byte_start": 3979,
                    "column_end": 6,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\macros\\enum_table.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 106,
                    "line_start": 103,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 23,
                        "text": "    let doc_closure = format!("
                      },
                      {
                        "highlight_end": 73,
                        "highlight_start": 1,
                        "text": "        \"Create a new {} by running a function on each variant of `{}`\","
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "        table_name, name"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    );"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\macros\\enum_table.rs:107:25\n    |\n107 | ... = format!(\"Create a new `{}` by running a function on each variant of `{}` and the corresponding value in the current `{0}`\", table_name, name);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n107 -     let doc_transform = format!(\"Create a new `{}` by running a function on each variant of `{}` and the corresponding value in the current `{0}`\", table_name, name);\n107 +     let doc_transform = format!(\"Create a new `{table_name}` by running a function on each variant of `{name}` and the corresponding value in the current `{table_name}`\");\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4141,
                        "byte_start": 4141,
                        "column_end": 49,
                        "column_start": 49,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 107,
                        "line_start": 107,
                        "suggested_replacement": "table_name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 49,
                            "text": "    let doc_transform = format!(\"Create a new `{}` by running a function on each variant of `{}` and the corresponding value in the current `{0}`\", table_name, name);"
                          }
                        ]
                      },
                      {
                        "byte_end": 4187,
                        "byte_start": 4187,
                        "column_end": 95,
                        "column_start": 95,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 107,
                        "line_start": 107,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 95,
                            "highlight_start": 95,
                            "text": "    let doc_transform = format!(\"Create a new `{}` by running a function on each variant of `{}` and the corresponding value in the current `{0}`\", table_name, name);"
                          }
                        ]
                      },
                      {
                        "byte_end": 4236,
                        "byte_start": 4235,
                        "column_end": 144,
                        "column_start": 143,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 107,
                        "line_start": 107,
                        "suggested_replacement": "table_name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 144,
                            "highlight_start": 143,
                            "text": "    let doc_transform = format!(\"Create a new `{}` by running a function on each variant of `{}` and the corresponding value in the current `{0}`\", table_name, name);"
                          }
                        ]
                      },
                      {
                        "byte_end": 4251,
                        "byte_start": 4239,
                        "column_end": 159,
                        "column_start": 147,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 107,
                        "line_start": 107,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 159,
                            "highlight_start": 147,
                            "text": "    let doc_transform = format!(\"Create a new `{}` by running a function on each variant of `{}` and the corresponding value in the current `{0}`\", table_name, name);"
                          }
                        ]
                      },
                      {
                        "byte_end": 4257,
                        "byte_start": 4251,
                        "column_end": 165,
                        "column_start": 159,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 107,
                        "line_start": 107,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 165,
                            "highlight_start": 159,
                            "text": "    let doc_transform = format!(\"Create a new `{}` by running a function on each variant of `{}` and the corresponding value in the current `{0}`\", table_name, name);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 4258,
                    "byte_start": 4117,
                    "column_end": 166,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\macros\\enum_table.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 107,
                    "line_start": 107,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 166,
                        "highlight_start": 25,
                        "text": "    let doc_transform = format!(\"Create a new `{}` by running a function on each variant of `{}` and the corresponding value in the current `{0}`\", table_name, name);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\macros\\enum_table.rs:108:22\n    |\n108 |       let doc_filled = format!(\n    |  ______________________^\n109 | |         \"Create a new `{}` with the same value in each field.\",\n110 | |         table_name\n111 | |     );\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4314,
                        "byte_start": 4314,
                        "column_end": 25,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 109,
                        "line_start": 109,
                        "suggested_replacement": "table_name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 25,
                            "highlight_start": 25,
                            "text": "        \"Create a new `{}` with the same value in each field.\","
                          }
                        ]
                      },
                      {
                        "byte_end": 4372,
                        "byte_start": 4352,
                        "column_end": 19,
                        "column_start": 63,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 110,
                        "line_start": 109,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 64,
                            "highlight_start": 63,
                            "text": "        \"Create a new `{}` with the same value in each field.\","
                          },
                          {
                            "highlight_end": 19,
                            "highlight_start": 1,
                            "text": "        table_name"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 4378,
                    "byte_start": 4281,
                    "column_end": 6,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\macros\\enum_table.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 111,
                    "line_start": 108,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 22,
                        "text": "    let doc_filled = format!("
                      },
                      {
                        "highlight_end": 64,
                        "highlight_start": 1,
                        "text": "        \"Create a new `{}` with the same value in each field.\","
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "        table_name"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    );"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\macros\\enum_table.rs:112:26\n    |\n112 | ... = format!(\"Converts `{}<Option<T>>` into `Option<{0}<T>>`. Returns `Some` if all fields are `Some`, otherwise returns `None`.\", table_name);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n112 -     let doc_option_all = format!(\"Converts `{}<Option<T>>` into `Option<{0}<T>>`. Returns `Some` if all fields are `Some`, otherwise returns `None`.\", table_name);\n112 +     let doc_option_all = format!(\"Converts `{table_name}<Option<T>>` into `Option<{table_name}<T>>`. Returns `Some` if all fields are `Some`, otherwise returns `None`.\");\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4425,
                        "byte_start": 4425,
                        "column_end": 46,
                        "column_start": 46,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 112,
                        "line_start": 112,
                        "suggested_replacement": "table_name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 46,
                            "text": "    let doc_option_all = format!(\"Converts `{}<Option<T>>` into `Option<{0}<T>>`. Returns `Some` if all fields are `Some`, otherwise returns `None`.\", table_name);"
                          }
                        ]
                      },
                      {
                        "byte_end": 4454,
                        "byte_start": 4453,
                        "column_end": 75,
                        "column_start": 74,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 112,
                        "line_start": 112,
                        "suggested_replacement": "table_name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 75,
                            "highlight_start": 74,
                            "text": "    let doc_option_all = format!(\"Converts `{}<Option<T>>` into `Option<{0}<T>>`. Returns `Some` if all fields are `Some`, otherwise returns `None`.\", table_name);"
                          }
                        ]
                      },
                      {
                        "byte_end": 4541,
                        "byte_start": 4529,
                        "column_end": 162,
                        "column_start": 150,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 112,
                        "line_start": 112,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 162,
                            "highlight_start": 150,
                            "text": "    let doc_option_all = format!(\"Converts `{}<Option<T>>` into `Option<{0}<T>>`. Returns `Some` if all fields are `Some`, otherwise returns `None`.\", table_name);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 4542,
                    "byte_start": 4405,
                    "column_end": 163,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\macros\\enum_table.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 112,
                    "line_start": 112,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 163,
                        "highlight_start": 26,
                        "text": "    let doc_option_all = format!(\"Converts `{}<Option<T>>` into `Option<{0}<T>>`. Returns `Some` if all fields are `Some`, otherwise returns `None`.\", table_name);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\macros\\enum_table.rs:113:29\n    |\n113 | ... = format!(\"Converts `{}<Result<T, E>>` into `Result<{0}<T>, E>`. Returns `Ok` if all fields are `Ok`, otherwise returns `Err`.\", table_name);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n113 -     let doc_result_all_ok = format!(\"Converts `{}<Result<T, E>>` into `Result<{0}<T>, E>`. Returns `Ok` if all fields are `Ok`, otherwise returns `Err`.\", table_name);\n113 +     let doc_result_all_ok = format!(\"Converts `{table_name}<Result<T, E>>` into `Result<{table_name}<T>, E>`. Returns `Ok` if all fields are `Ok`, otherwise returns `Err`.\");\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4592,
                        "byte_start": 4592,
                        "column_end": 49,
                        "column_start": 49,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 113,
                        "line_start": 113,
                        "suggested_replacement": "table_name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 49,
                            "text": "    let doc_result_all_ok = format!(\"Converts `{}<Result<T, E>>` into `Result<{0}<T>, E>`. Returns `Ok` if all fields are `Ok`, otherwise returns `Err`.\", table_name);"
                          }
                        ]
                      },
                      {
                        "byte_end": 4624,
                        "byte_start": 4623,
                        "column_end": 81,
                        "column_start": 80,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 113,
                        "line_start": 113,
                        "suggested_replacement": "table_name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 81,
                            "highlight_start": 80,
                            "text": "    let doc_result_all_ok = format!(\"Converts `{}<Result<T, E>>` into `Result<{0}<T>, E>`. Returns `Ok` if all fields are `Ok`, otherwise returns `Err`.\", table_name);"
                          }
                        ]
                      },
                      {
                        "byte_end": 4709,
                        "byte_start": 4697,
                        "column_end": 166,
                        "column_start": 154,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_table.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 113,
                        "line_start": 113,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 166,
                            "highlight_start": 154,
                            "text": "    let doc_result_all_ok = format!(\"Converts `{}<Result<T, E>>` into `Result<{0}<T>, E>`. Returns `Ok` if all fields are `Ok`, otherwise returns `Err`.\", table_name);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 4710,
                    "byte_start": 4572,
                    "column_end": 167,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\macros\\enum_table.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 113,
                    "line_start": 113,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 167,
                        "highlight_start": 29,
                        "text": "    let doc_result_all_ok = format!(\"Converts `{}<Result<T, E>>` into `Result<{0}<T>, E>`. Returns `Ok` if all fields are `Ok`, otherwise returns `Err`.\", table_name);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unneeded `return` statement\n  --> src\\macros\\enum_try_as.rs:68:21\n   |\n68 |                     return None;\n   |                     ^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n   |\n68 -                     return None;\n68 +                     None\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_return)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "remove `return`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2995,
                        "byte_start": 2984,
                        "column_end": 32,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_try_as.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 68,
                        "line_start": 68,
                        "suggested_replacement": "None",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 21,
                            "text": "                    return None;"
                          }
                        ]
                      },
                      {
                        "byte_end": 2996,
                        "byte_start": 2995,
                        "column_end": 33,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\macros\\enum_try_as.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 68,
                        "line_start": 68,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 32,
                            "text": "                    return None;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_return",
                  "explanation": null
                },
                "level": "warning",
                "message": "unneeded `return` statement",
                "spans": [
                  {
                    "byte_end": 2995,
                    "byte_start": 2984,
                    "column_end": 32,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\macros\\enum_try_as.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 68,
                    "line_start": 68,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 21,
                        "text": "                    return None;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: redundant pattern matching, consider using `is_some()`\n  --> src\\macros\\strings\\as_ref_str.rs:30:16\n   |\n30 |         if let Some(..) = variant_properties.transparent {\n   |         -------^^^^^^^^--------------------------------- help: try: `if variant_properties.transparent.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching\n   = note: `#[warn(clippy::redundant_pattern_matching)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::redundant_pattern_matching)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 872,
                        "byte_start": 824,
                        "column_end": 57,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\macros\\strings\\as_ref_str.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 30,
                        "line_start": 30,
                        "suggested_replacement": "if variant_properties.transparent.is_some()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 57,
                            "highlight_start": 9,
                            "text": "        if let Some(..) = variant_properties.transparent {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_pattern_matching",
                  "explanation": null
                },
                "level": "warning",
                "message": "redundant pattern matching, consider using `is_some()`",
                "spans": [
                  {
                    "byte_end": 839,
                    "byte_start": 831,
                    "column_end": 24,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\macros\\strings\\as_ref_str.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 30,
                    "line_start": 30,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 16,
                        "text": "        if let Some(..) = variant_properties.transparent {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: redundant pattern matching, consider using `is_some()`\n  --> src\\macros\\strings\\display.rs:28:16\n   |\n28 |         if let Some(..) = variant_properties.transparent {\n   |         -------^^^^^^^^--------------------------------- help: try: `if variant_properties.transparent.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 927,
                        "byte_start": 879,
                        "column_end": 57,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\macros\\strings\\display.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 28,
                        "line_start": 28,
                        "suggested_replacement": "if variant_properties.transparent.is_some()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 57,
                            "highlight_start": 9,
                            "text": "        if let Some(..) = variant_properties.transparent {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_pattern_matching",
                  "explanation": null
                },
                "level": "warning",
                "message": "redundant pattern matching, consider using `is_some()`",
                "spans": [
                  {
                    "byte_end": 894,
                    "byte_start": 886,
                    "column_end": 24,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\macros\\strings\\display.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 28,
                    "line_start": 28,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 16,
                        "text": "        if let Some(..) = variant_properties.transparent {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\macros\\strings\\display.rs:53:53\n   |\n53 | ...                   syn::parse_str::<Ident>(format!(\"field{}\", index).as_str()).unwrap();\n   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n53 -                             syn::parse_str::<Ident>(format!(\"field{}\", index).as_str()).unwrap();\n53 +                             syn::parse_str::<Ident>(format!(\"field{index}\").as_str()).unwrap();\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2004,
                        "byte_start": 2004,
                        "column_end": 68,
                        "column_start": 68,
                        "expansion": null,
                        "file_name": "src\\macros\\strings\\display.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 53,
                        "line_start": 53,
                        "suggested_replacement": "index",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 68,
                            "highlight_start": 68,
                            "text": "                            syn::parse_str::<Ident>(format!(\"field{}\", index).as_str()).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 2013,
                        "byte_start": 2006,
                        "column_end": 77,
                        "column_start": 70,
                        "expansion": null,
                        "file_name": "src\\macros\\strings\\display.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 53,
                        "line_start": 53,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 77,
                            "highlight_start": 70,
                            "text": "                            syn::parse_str::<Ident>(format!(\"field{}\", index).as_str()).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 2014,
                    "byte_start": 1989,
                    "column_end": 78,
                    "column_start": 53,
                    "expansion": null,
                    "file_name": "src\\macros\\strings\\display.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 53,
                    "line_start": 53,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 78,
                        "highlight_start": 53,
                        "text": "                            syn::parse_str::<Ident>(format!(\"field{}\", index).as_str()).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\macros\\strings\\display.rs:133:53\n    |\n133 | ...                   syn::parse_str::<Ident>(format!(\"field{}\", index).as_str()).unwrap()\n    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n133 -                             syn::parse_str::<Ident>(format!(\"field{}\", index).as_str()).unwrap()\n133 +                             syn::parse_str::<Ident>(format!(\"field{index}\").as_str()).unwrap()\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5441,
                        "byte_start": 5441,
                        "column_end": 68,
                        "column_start": 68,
                        "expansion": null,
                        "file_name": "src\\macros\\strings\\display.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 133,
                        "line_start": 133,
                        "suggested_replacement": "index",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 68,
                            "highlight_start": 68,
                            "text": "                            syn::parse_str::<Ident>(format!(\"field{}\", index).as_str()).unwrap()"
                          }
                        ]
                      },
                      {
                        "byte_end": 5450,
                        "byte_start": 5443,
                        "column_end": 77,
                        "column_start": 70,
                        "expansion": null,
                        "file_name": "src\\macros\\strings\\display.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 133,
                        "line_start": 133,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 77,
                            "highlight_start": 70,
                            "text": "                            syn::parse_str::<Ident>(format!(\"field{}\", index).as_str()).unwrap()"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 5451,
                    "byte_start": 5426,
                    "column_end": 78,
                    "column_start": 53,
                    "expansion": null,
                    "file_name": "src\\macros\\strings\\display.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 133,
                    "line_start": 133,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 78,
                        "highlight_start": 53,
                        "text": "                            syn::parse_str::<Ident>(format!(\"field{}\", index).as_str()).unwrap()"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\lib.rs:26:13\n   |\n26 |             println!(\"{}\", toks);\n   |             ^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n26 -             println!(\"{}\", toks);\n26 +             println!(\"{toks}\");\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 674,
                        "byte_start": 674,
                        "column_end": 24,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 26,
                        "line_start": 26,
                        "suggested_replacement": "toks",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 24,
                            "text": "            println!(\"{}\", toks);"
                          }
                        ]
                      },
                      {
                        "byte_end": 682,
                        "byte_start": 676,
                        "column_end": 32,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 26,
                        "line_start": 26,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 26,
                            "text": "            println!(\"{}\", toks);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 683,
                    "byte_start": 663,
                    "column_end": 33,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 26,
                    "line_start": 26,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 13,
                        "text": "            println!(\"{}\", toks);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\lib.rs:30:13\n   |\n30 |             println!(\"{}\", toks);\n   |             ^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n30 -             println!(\"{}\", toks);\n30 +             println!(\"{toks}\");\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 747,
                        "byte_start": 747,
                        "column_end": 24,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 30,
                        "line_start": 30,
                        "suggested_replacement": "toks",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 24,
                            "text": "            println!(\"{}\", toks);"
                          }
                        ]
                      },
                      {
                        "byte_end": 755,
                        "byte_start": 749,
                        "column_end": 32,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 30,
                        "line_start": 30,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 26,
                            "text": "            println!(\"{}\", toks);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 756,
                    "byte_start": 736,
                    "column_end": 33,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 30,
                    "line_start": 30,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 13,
                        "text": "            println!(\"{}\", toks);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr5y4s0ij/strum_macros-0.27.1#strum_macros@0.27.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr5y4s0ij\\strum_macros-0.27.1\\target\\debug\\deps\\libstrum_macros-a37fdfdcbdacc763.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 7
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {}
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "strum_macros",
          "version": "0.27.1",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/strum_macros/latest/strum_macros/all.html \"show sidebar\")\n# Crate strum_macrosCopy item path\n[Settings](https://docs.rs/strum_macros/latest/settings.html)\n[Help](https://docs.rs/strum_macros/latest/help.html)\nSummary[Source](https://docs.rs/strum_macros/latest/src/strum_macros/lib.rs.html#1-969)\nExpand description\n## [\u00a7](https://docs.rs/strum_macros/latest/strum_macros/#strum)Strum\nStrum is a set of macros and traits for working with enums and strings easier in Rust.\nThis crate only contains derive macros for use with the [`strum`](https://docs.rs/strum) crate. The macros provied by this crate are also available by enabling the `derive` feature in aforementioned `strum` crate.\n## Derive Macros[\u00a7](https://docs.rs/strum_macros/latest/strum_macros/#derives)\n\n[AsRefStr](https://docs.rs/strum_macros/latest/strum_macros/derive.AsRefStr.html \"derive strum_macros::AsRefStr\")\n    Converts enum variants to `&'a str`, where `'a` is the lifetime of the input enum reference.\n\n[Display](https://docs.rs/strum_macros/latest/strum_macros/derive.Display.html \"derive strum_macros::Display\")\n    Converts enum variants to strings.\n\n[EnumCount](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumCount.html \"derive strum_macros::EnumCount\")\n    Add a constant `usize` equal to the number of variants.\n\n[EnumDiscriminants](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumDiscriminants.html \"derive strum_macros::EnumDiscriminants\")\n    Generate a new type with only the discriminant names.\n\n[EnumIs](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumIs.html \"derive strum_macros::EnumIs\")\n    Generated `is_*()` methods for each variant. E.g. `Color.is_red()`.\n\n[EnumIter](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumIter.html \"derive strum_macros::EnumIter\")\n    Creates a new type that iterates over the variants of an enum.\n\n[EnumMessage](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumMessage.html \"derive strum_macros::EnumMessage\")\n    Add a verbose message to an enum variant.\n\n[EnumProperty](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumProperty.html \"derive strum_macros::EnumProperty\")\n    Add custom properties to enum variants.\n\n[EnumString](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumString.html \"derive strum_macros::EnumString\")\n    Converts strings to enum variants based on their name.\n\n[EnumTryAs](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumTryAs.html \"derive strum_macros::EnumTryAs\")\n    Generated `try_as_*()` methods for all tuple-style variants. E.g. `Message.try_as_write()`.\n\n[FromRepr](https://docs.rs/strum_macros/latest/strum_macros/derive.FromRepr.html \"derive strum_macros::FromRepr\")\n    Add a function to enum that allows accessing variants by its discriminant\n\n[IntoStaticStr](https://docs.rs/strum_macros/latest/strum_macros/derive.IntoStaticStr.html \"derive strum_macros::IntoStaticStr\")\n    Implements `From<MyEnum> for &'static str` on an enum.\n\n[VariantArray](https://docs.rs/strum_macros/latest/strum_macros/derive.VariantArray.html \"derive strum_macros::VariantArray\")\n    Adds a `'static` slice with all of the Enum\u2019s variants.\n\n[VariantNames](https://docs.rs/strum_macros/latest/strum_macros/derive.VariantNames.html \"derive strum_macros::VariantNames\")\n    Implements `Strum::VariantNames` which adds an associated constant `VARIANTS` which is a `'static` slice of discriminant names.\n",
            "markdown_with_citations": "[](https://docs.rs/strum_macros/latest/strum_macros/all.html \"show sidebar\")\n# Crate strum_macrosCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9Strum\nStrum is a set of macros and traits for working with enums and strings easier in Rust.\nThis crate only contains derive macros for use with the `strum`\u27e85\u27e9 crate. The macros provied by this crate are also available by enabling the `derive` feature in aforementioned `strum` crate.\n## Derive Macros\u00a7\u27e86\u27e9\n\nAsRefStr\u27e87\u27e9\n    Converts enum variants to `&'a str`, where `'a` is the lifetime of the input enum reference.\n\nDisplay\u27e88\u27e9\n    Converts enum variants to strings.\n\nEnumCount\u27e89\u27e9\n    Add a constant `usize` equal to the number of variants.\n\nEnumDiscriminants\u27e810\u27e9\n    Generate a new type with only the discriminant names.\n\nEnumIs\u27e811\u27e9\n    Generated `is_*()` methods for each variant. E.g. `Color.is_red()`.\n\nEnumIter\u27e812\u27e9\n    Creates a new type that iterates over the variants of an enum.\n\nEnumMessage\u27e813\u27e9\n    Add a verbose message to an enum variant.\n\nEnumProperty\u27e814\u27e9\n    Add custom properties to enum variants.\n\nEnumString\u27e815\u27e9\n    Converts strings to enum variants based on their name.\n\nEnumTryAs\u27e816\u27e9\n    Generated `try_as_*()` methods for all tuple-style variants. E.g. `Message.try_as_write()`.\n\nFromRepr\u27e817\u27e9\n    Add a function to enum that allows accessing variants by its discriminant\n\nIntoStaticStr\u27e818\u27e9\n    Implements `From<MyEnum> for &'static str` on an enum.\n\nVariantArray\u27e819\u27e9\n    Adds a `'static` slice with all of the Enum\u2019s variants.\n\nVariantNames\u27e820\u27e9\n    Implements `Strum::VariantNames` which adds an associated constant `VARIANTS` which is a `'static` slice of discriminant names.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/strum_macros/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/strum_macros/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/strum_macros/latest/src/strum_macros/lib.rs.html#1-969: Source\n\u27e84\u27e9 https://docs.rs/strum_macros/latest/strum_macros/#strum: \u00a7\n\u27e85\u27e9 https://docs.rs/strum: `strum`\n\u27e86\u27e9 https://docs.rs/strum_macros/latest/strum_macros/#derives: \u00a7\n\u27e87\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.AsRefStr.html: derive strum_macros::AsRefStr - AsRefStr\n\u27e88\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.Display.html: derive strum_macros::Display - Display\n\u27e89\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumCount.html: derive strum_macros::EnumCount - EnumCount\n\u27e810\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumDiscriminants.html: derive strum_macros::EnumDiscriminants - EnumDiscriminants\n\u27e811\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumIs.html: derive strum_macros::EnumIs - EnumIs\n\u27e812\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumIter.html: derive strum_macros::EnumIter - EnumIter\n\u27e813\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumMessage.html: derive strum_macros::EnumMessage - EnumMessage\n\u27e814\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumProperty.html: derive strum_macros::EnumProperty - EnumProperty\n\u27e815\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumString.html: derive strum_macros::EnumString - EnumString\n\u27e816\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumTryAs.html: derive strum_macros::EnumTryAs - EnumTryAs\n\u27e817\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.FromRepr.html: derive strum_macros::FromRepr - FromRepr\n\u27e818\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.IntoStaticStr.html: derive strum_macros::IntoStaticStr - IntoStaticStr\n\u27e819\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.VariantArray.html: derive strum_macros::VariantArray - VariantArray\n\u27e820\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.VariantNames.html: derive strum_macros::VariantNames - VariantNames\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "strum_macros",
          "version": "0.27.1",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/strum_macros/latest/strum_macros/all.html \"show sidebar\")\n# Crate strum_macrosCopy item path\n[Settings](https://docs.rs/strum_macros/latest/settings.html)\n[Help](https://docs.rs/strum_macros/latest/help.html)\nSummary[Source](https://docs.rs/strum_macros/latest/src/strum_macros/lib.rs.html#1-969)\nExpand description\n## [\u00a7](https://docs.rs/strum_macros/latest/strum_macros/#strum)Strum\nStrum is a set of macros and traits for working with enums and strings easier in Rust.\nThis crate only contains derive macros for use with the [`strum`](https://docs.rs/strum) crate. The macros provied by this crate are also available by enabling the `derive` feature in aforementioned `strum` crate.\n## Derive Macros[\u00a7](https://docs.rs/strum_macros/latest/strum_macros/#derives)\n\n[AsRefStr](https://docs.rs/strum_macros/latest/strum_macros/derive.AsRefStr.html \"derive strum_macros::AsRefStr\")\n    Converts enum variants to `&'a str`, where `'a` is the lifetime of the input enum reference.\n\n[Display](https://docs.rs/strum_macros/latest/strum_macros/derive.Display.html \"derive strum_macros::Display\")\n    Converts enum variants to strings.\n\n[EnumCount](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumCount.html \"derive strum_macros::EnumCount\")\n    Add a constant `usize` equal to the number of variants.\n\n[EnumDiscriminants](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumDiscriminants.html \"derive strum_macros::EnumDiscriminants\")\n    Generate a new type with only the discriminant names.\n\n[EnumIs](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumIs.html \"derive strum_macros::EnumIs\")\n    Generated `is_*()` methods for each variant. E.g. `Color.is_red()`.\n\n[EnumIter](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumIter.html \"derive strum_macros::EnumIter\")\n    Creates a new type that iterates over the variants of an enum.\n\n[EnumMessage](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumMessage.html \"derive strum_macros::EnumMessage\")\n    Add a verbose message to an enum variant.\n\n[EnumProperty](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumProperty.html \"derive strum_macros::EnumProperty\")\n    Add custom properties to enum variants.\n\n[EnumString](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumString.html \"derive strum_macros::EnumString\")\n    Converts strings to enum variants based on their name.\n\n[EnumTryAs](https://docs.rs/strum_macros/latest/strum_macros/derive.EnumTryAs.html \"derive strum_macros::EnumTryAs\")\n    Generated `try_as_*()` methods for all tuple-style variants. E.g. `Message.try_as_write()`.\n\n[FromRepr](https://docs.rs/strum_macros/latest/strum_macros/derive.FromRepr.html \"derive strum_macros::FromRepr\")\n    Add a function to enum that allows accessing variants by its discriminant\n\n[IntoStaticStr](https://docs.rs/strum_macros/latest/strum_macros/derive.IntoStaticStr.html \"derive strum_macros::IntoStaticStr\")\n    Implements `From<MyEnum> for &'static str` on an enum.\n\n[VariantArray](https://docs.rs/strum_macros/latest/strum_macros/derive.VariantArray.html \"derive strum_macros::VariantArray\")\n    Adds a `'static` slice with all of the Enum\u2019s variants.\n\n[VariantNames](https://docs.rs/strum_macros/latest/strum_macros/derive.VariantNames.html \"derive strum_macros::VariantNames\")\n    Implements `Strum::VariantNames` which adds an associated constant `VARIANTS` which is a `'static` slice of discriminant names.\n",
            "markdown_with_citations": "[](https://docs.rs/strum_macros/latest/strum_macros/all.html \"show sidebar\")\n# Crate strum_macrosCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9Strum\nStrum is a set of macros and traits for working with enums and strings easier in Rust.\nThis crate only contains derive macros for use with the `strum`\u27e85\u27e9 crate. The macros provied by this crate are also available by enabling the `derive` feature in aforementioned `strum` crate.\n## Derive Macros\u00a7\u27e86\u27e9\n\nAsRefStr\u27e87\u27e9\n    Converts enum variants to `&'a str`, where `'a` is the lifetime of the input enum reference.\n\nDisplay\u27e88\u27e9\n    Converts enum variants to strings.\n\nEnumCount\u27e89\u27e9\n    Add a constant `usize` equal to the number of variants.\n\nEnumDiscriminants\u27e810\u27e9\n    Generate a new type with only the discriminant names.\n\nEnumIs\u27e811\u27e9\n    Generated `is_*()` methods for each variant. E.g. `Color.is_red()`.\n\nEnumIter\u27e812\u27e9\n    Creates a new type that iterates over the variants of an enum.\n\nEnumMessage\u27e813\u27e9\n    Add a verbose message to an enum variant.\n\nEnumProperty\u27e814\u27e9\n    Add custom properties to enum variants.\n\nEnumString\u27e815\u27e9\n    Converts strings to enum variants based on their name.\n\nEnumTryAs\u27e816\u27e9\n    Generated `try_as_*()` methods for all tuple-style variants. E.g. `Message.try_as_write()`.\n\nFromRepr\u27e817\u27e9\n    Add a function to enum that allows accessing variants by its discriminant\n\nIntoStaticStr\u27e818\u27e9\n    Implements `From<MyEnum> for &'static str` on an enum.\n\nVariantArray\u27e819\u27e9\n    Adds a `'static` slice with all of the Enum\u2019s variants.\n\nVariantNames\u27e820\u27e9\n    Implements `Strum::VariantNames` which adds an associated constant `VARIANTS` which is a `'static` slice of discriminant names.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/strum_macros/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/strum_macros/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/strum_macros/latest/src/strum_macros/lib.rs.html#1-969: Source\n\u27e84\u27e9 https://docs.rs/strum_macros/latest/strum_macros/#strum: \u00a7\n\u27e85\u27e9 https://docs.rs/strum: `strum`\n\u27e86\u27e9 https://docs.rs/strum_macros/latest/strum_macros/#derives: \u00a7\n\u27e87\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.AsRefStr.html: derive strum_macros::AsRefStr - AsRefStr\n\u27e88\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.Display.html: derive strum_macros::Display - Display\n\u27e89\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumCount.html: derive strum_macros::EnumCount - EnumCount\n\u27e810\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumDiscriminants.html: derive strum_macros::EnumDiscriminants - EnumDiscriminants\n\u27e811\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumIs.html: derive strum_macros::EnumIs - EnumIs\n\u27e812\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumIter.html: derive strum_macros::EnumIter - EnumIter\n\u27e813\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumMessage.html: derive strum_macros::EnumMessage - EnumMessage\n\u27e814\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumProperty.html: derive strum_macros::EnumProperty - EnumProperty\n\u27e815\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumString.html: derive strum_macros::EnumString - EnumString\n\u27e816\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.EnumTryAs.html: derive strum_macros::EnumTryAs - EnumTryAs\n\u27e817\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.FromRepr.html: derive strum_macros::FromRepr - FromRepr\n\u27e818\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.IntoStaticStr.html: derive strum_macros::IntoStaticStr - IntoStaticStr\n\u27e819\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.VariantArray.html: derive strum_macros::VariantArray - VariantArray\n\u27e820\u27e9 https://docs.rs/strum_macros/latest/strum_macros/derive.VariantNames.html: derive strum_macros::VariantNames - VariantNames\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `strum_macros` crate provides a collection of derive macros to simplify working with enums in Rust, enhancing their functionality and usability. Key features include converting enums to strings (`Display`, `AsRefStr`, `IntoStaticStr`), iterating over variants (`EnumIter`, `VariantArray`), adding properties or messages (`EnumProperty`, `EnumMessage`), and enabling conversions between strings and enums (`EnumString`, `FromRepr`). It is designed to be used alongside the `strum` crate for streamlined enum manipulation.",
          "feature_summary": null,
          "use_case": "Utilities",
          "score": 8.5,
          "factual_counterfactual": "### Pair 1: Enum Iteration  \n\u2705 **Factual:** The `EnumIter` macro provided by `strum_macros` generates an iterator that allows you to iterate over all variants of an enum.  \n\u274c **Counterfactual:** The `EnumIter` macro automatically derives an iterator that skips variants marked with a specific attribute, such as `#[skip]`.  \n\n---\n\n### Pair 2: Enum to String Conversion  \n\u2705 **Factual:** The `Display` macro in `strum_macros` implements the `std::fmt::Display` trait for enums, allowing their variants to be converted into human-readable strings.  \n\u274c **Counterfactual:** The `Display` macro automatically converts enum variants into their discriminant values instead of their names when implementing the `std::fmt::Display` trait.  \n\n---\n\n### Pair 3: Variant Count  \n\u2705 **Factual:** The `EnumCount` macro adds a constant `usize` to the enum, representing the total number of variants in the enum.  \n\u274c **Counterfactual:** The `EnumCount` macro dynamically calculates the number of variants at runtime rather than providing a compile-time constant.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-fcf6eee0-fd6eeddc-1751264012",
      "timestamp": "2025-06-30T06:13:32.717375+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]