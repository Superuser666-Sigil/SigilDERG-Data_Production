[
  {
    "execution_id": "exec-62119feb-cd5c2189-1751262772",
    "timestamp": "2025-06-30T05:52:52.090180+00:00",
    "sacred_chain": {
      "input_data": "fjall",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'fjall' -> 'fjall'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "fjall",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/fjall",
            "title": "fjall v2.11.1",
            "content": {
              "raw_markdown": "#  fjall v2.11.1\nLog-structured, embeddable key-value storage engine \n  * [ #database ](https://crates.io/keywords/database)\n  * [ #key-value ](https://crates.io/keywords/key-value)\n  * [ #leveldb ](https://crates.io/keywords/leveldb)\n  * [ #lsm ](https://crates.io/keywords/lsm)\n  * [ #rocksdb ](https://crates.io/keywords/rocksdb)\n\n\n  * [ Readme ](https://crates.io/crates/fjall)\n  * [ 68 Versions ](https://crates.io/crates/fjall/versions)\n  * [ Dependencies ](https://crates.io/crates/fjall/dependencies)\n  * [ Dependents ](https://crates.io/crates/fjall/reverse_dependencies)\n\n\n## Metadata\n8 days ago \nv1.76.0 \n[ MIT ](https://choosealicense.com/licenses/mit) OR [ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0)\n76.9 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add fjall\nOr add the following line to your Cargo.toml:\nfjall = \"2.11.1\"\n## Repository\n[ github.com/fjall-rs/fjall ](https://github.com/fjall-rs/fjall)\n## Owners\n## Categories\n  * [Data structures](https://crates.io/categories/data-structures)\n  * [Database implementations](https://crates.io/categories/database-implementations)\n  * [Algorithms](https://crates.io/categories/algorithms)\n\n\n[ Report crate ](https://crates.io/support?crate=fjall&inquire=crate-violation)\n### Stats Overview\n108,648 Downloads all time\n68 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  fjall v2.11.1\nLog-structured, embeddable key-value storage engine \n  *  #database \u27e81\u27e9\n  *  #key-value \u27e82\u27e9\n  *  #leveldb \u27e83\u27e9\n  *  #lsm \u27e84\u27e9\n  *  #rocksdb \u27e85\u27e9\n\n\n  *  Readme \u27e86\u27e9\n  *  68 Versions \u27e87\u27e9\n  *  Dependencies \u27e88\u27e9\n  *  Dependents \u27e89\u27e9\n\n\n## Metadata\n8 days ago \nv1.76.0 \n MIT \u27e810\u27e9 OR  Apache-2.0 \u27e811\u27e9\n76.9 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add fjall\nOr add the following line to your Cargo.toml:\nfjall = \"2.11.1\"\n## Repository\n github.com/fjall-rs/fjall \u27e812\u27e9\n## Owners\n## Categories\n  * Data structures\u27e813\u27e9\n  * Database implementations\u27e814\u27e9\n  * Algorithms\u27e815\u27e9\n\n\n Report crate \u27e816\u27e9\n### Stats Overview\n108,648 Downloads all time\n68 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/database:  #database \n\u27e82\u27e9 https://crates.io/keywords/key-value:  #key-value \n\u27e83\u27e9 https://crates.io/keywords/leveldb:  #leveldb \n\u27e84\u27e9 https://crates.io/keywords/lsm:  #lsm \n\u27e85\u27e9 https://crates.io/keywords/rocksdb:  #rocksdb \n\u27e86\u27e9 https://crates.io/crates/fjall:  Readme \n\u27e87\u27e9 https://crates.io/crates/fjall/versions:  68 Versions \n\u27e88\u27e9 https://crates.io/crates/fjall/dependencies:  Dependencies \n\u27e89\u27e9 https://crates.io/crates/fjall/reverse_dependencies:  Dependents \n\u27e810\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e811\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e812\u27e9 https://github.com/fjall-rs/fjall:  github.com/fjall-rs/fjall \n\u27e813\u27e9 https://crates.io/categories/data-structures: Data structures\n\u27e814\u27e9 https://crates.io/categories/database-implementations: Database implementations\n\u27e815\u27e9 https://crates.io/categories/algorithms: Algorithms\n\u27e816\u27e9 https://crates.io/support?crate=fjall&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1452,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "116561.8285813"
          },
          "docs_rs": {
            "url": "https://docs.rs/fjall",
            "title": "Crate fjallCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/fjall/latest/fjall/all.html \"show sidebar\")\n# Crate fjallCopy item path\n[Settings](https://docs.rs/fjall/latest/settings.html)\n[Help](https://docs.rs/fjall/latest/help.html)\nSummary[Source](https://docs.rs/fjall/latest/src/fjall/lib.rs.html#5-219)\nExpand description\nFjall is a log-structured embeddable key-value storage engine written in Rust. It features:\n  * Thread-safe BTreeMap-like API\n  * 100% safe & stable Rust\n  * LSM-tree-based storage similar to `RocksDB`\n  * Range & prefix searching with forward and reverse iteration\n  * Cross-partition snapshots (MVCC)\n  * Automatic background maintenance\n  * Single-writer transactions (optional)\n  * Key-value separation for large blob use cases (optional)\n\n\nEach `Keyspace` is a single logical database and is split into `partitions` (a.k.a. column families) - you should probably only use a single keyspace for your application. Each partition is physically a single LSM-tree and its own logical collection; however, write operations across partitions are atomic as they are persisted in a single database-level journal, which will be recovered after a crash.\nIt is not:\n  * a standalone server\n  * a relational or wide-column database: it has no notion of columns\n\n\nKeys are limited to 65536 bytes, values are limited to 2^32 bytes. As is normal with any kind of storage engine, larger keys and values have a bigger performance impact.\nFor the underlying LSM-tree implementation, see: <https://crates.io/crates/lsm-tree>.\n```\nuse fjall::{Config, PersistMode, Keyspace, PartitionCreateOptions};\n// A keyspace is a database, which may contain multiple collections (\"partitions\")\n// You should probably only use a single keyspace for your application\n//\nlet keyspace = Config::new(folder).open()?; // or open_transactional for transactional semantics\n// Each partition is its own physical LSM-tree\nlet items = keyspace.open_partition(\"my_items\", PartitionCreateOptions::default())?;\n// Write some data\nitems.insert(\"a\", \"hello\")?;\n// And retrieve it\nlet bytes = items.get(\"a\")?;\n// Or remove it again\nitems.remove(\"a\")?;\n// Search by prefix\nfor kv in items.prefix(\"prefix\") {\n // ...\n}\n// Search by range\nfor kv in items.range(\"a\"..=\"z\") {\n // ...\n}\n// Iterators implement DoubleEndedIterator, so you can search backwards, too!\nfor kv in items.prefix(\"prefix\").rev() {\n // ...\n}\n// Sync the journal to disk to make sure data is definitely durable\n// When the keyspace is dropped, it will try to persist with `PersistMode::SyncAll` as well\nkeyspace.persist(PersistMode::SyncAll)?;\n```\n\n## Modules[\u00a7](https://docs.rs/fjall/latest/fjall/#modules)\n\n[compaction](https://docs.rs/fjall/latest/fjall/compaction/index.html \"mod fjall::compaction\")\n    Contains compaction strategies\n## Structs[\u00a7](https://docs.rs/fjall/latest/fjall/#structs)\n\n[Batch](https://docs.rs/fjall/latest/fjall/struct.Batch.html \"struct fjall::Batch\")\n    An atomic write batch\n\n[BlobCache](https://docs.rs/fjall/latest/fjall/struct.BlobCache.html \"struct fjall::BlobCache\")Deprecated\n    Blob cache that caches frequently read blobs\n\n[BlockCache](https://docs.rs/fjall/latest/fjall/struct.BlockCache.html \"struct fjall::BlockCache\")Deprecated\n    Block cache that caches frequently read disk blocks\n\n[Config](https://docs.rs/fjall/latest/fjall/struct.Config.html \"struct fjall::Config\")\n    Global keyspace configuration\n\n[Keyspace](https://docs.rs/fjall/latest/fjall/struct.Keyspace.html \"struct fjall::Keyspace\")\n    A keyspace is a single logical database which can house multiple partitions\n\n[KvSeparationOptions](https://docs.rs/fjall/latest/fjall/struct.KvSeparationOptions.html \"struct fjall::KvSeparationOptions\")\n    Configuration options for key-value-separated partitions.\n\n[PartitionCreateOptions](https://docs.rs/fjall/latest/fjall/struct.PartitionCreateOptions.html \"struct fjall::PartitionCreateOptions\")\n    Options to configure a partition\n\n[PartitionHandle](https://docs.rs/fjall/latest/fjall/struct.PartitionHandle.html \"struct fjall::PartitionHandle\")\n    Access to a keyspace partition\n\n[ReadTransaction](https://docs.rs/fjall/latest/fjall/struct.ReadTransaction.html \"struct fjall::ReadTransaction\")\n    A cross-partition, read-only transaction (snapshot)\n\n[Slice](https://docs.rs/fjall/latest/fjall/struct.Slice.html \"struct fjall::Slice\")\n    An immutable byte slice that can be cloned without additional heap allocation\n\n[Snapshot](https://docs.rs/fjall/latest/fjall/struct.Snapshot.html \"struct fjall::Snapshot\")\n    A snapshot captures a read-only point-in-time view of the tree at the time the snapshot was created\n\n[TransactionalKeyspace](https://docs.rs/fjall/latest/fjall/struct.TransactionalKeyspace.html \"struct fjall::TransactionalKeyspace\")\n    Transactional keyspace\n\n[TransactionalPartitionHandle](https://docs.rs/fjall/latest/fjall/struct.TransactionalPartitionHandle.html \"struct fjall::TransactionalPartitionHandle\")\n    Access to a partition of a transactional keyspace\n\n[WriteTransaction](https://docs.rs/fjall/latest/fjall/struct.WriteTransaction.html \"struct fjall::WriteTransaction\")\n    A single-writer (serialized) cross-partition transaction\n## Enums[\u00a7](https://docs.rs/fjall/latest/fjall/#enums)\n\n[AnyTree](https://docs.rs/fjall/latest/fjall/enum.AnyTree.html \"enum fjall::AnyTree\")\n    May be a standard [`Tree`](https://docs.rs/lsm-tree/2.10.1/x86_64-unknown-linux-gnu/lsm_tree/tree/struct.Tree.html \"struct lsm_tree::tree::Tree\") or a [`BlobTree`](https://docs.rs/lsm-tree/2.10.1/x86_64-unknown-linux-gnu/lsm_tree/blob_tree/struct.BlobTree.html \"struct lsm_tree::blob_tree::BlobTree\")\n\n[CompressionType](https://docs.rs/fjall/latest/fjall/enum.CompressionType.html \"enum fjall::CompressionType\")\n    Compression algorithm to use.\n\n[Error](https://docs.rs/fjall/latest/fjall/enum.Error.html \"enum fjall::Error\")\n    Errors that may occur in the storage engine\n\n[PersistMode](https://docs.rs/fjall/latest/fjall/enum.PersistMode.html \"enum fjall::PersistMode\")\n    The persist mode allows setting the durability guarantee of previous writes\n\n[RecoveryError](https://docs.rs/fjall/latest/fjall/enum.RecoveryError.html \"enum fjall::RecoveryError\")\n    Errors that can occur during journal recovery\n\n[TreeType](https://docs.rs/fjall/latest/fjall/enum.TreeType.html \"enum fjall::TreeType\")\n    LSM-tree type\n\n[Version](https://docs.rs/fjall/latest/fjall/enum.Version.html \"enum fjall::Version\")\n    Disk format version\n## Traits[\u00a7](https://docs.rs/fjall/latest/fjall/#traits)\n\n[GarbageCollection](https://docs.rs/fjall/latest/fjall/trait.GarbageCollection.html \"trait fjall::GarbageCollection\")\n    Functions for garbage collection strategies\n## Type Aliases[\u00a7](https://docs.rs/fjall/latest/fjall/#types)\n\n[Instant](https://docs.rs/fjall/latest/fjall/type.Instant.html \"type fjall::Instant\")\n    A snapshot moment\n\n[KvPair](https://docs.rs/fjall/latest/fjall/type.KvPair.html \"type fjall::KvPair\")\n    KV-tuple, typically returned by an iterator\n\n[LsmError](https://docs.rs/fjall/latest/fjall/type.LsmError.html \"type fjall::LsmError\")\n    Re-export of [`lsm_tree::Error`](https://docs.rs/lsm-tree/2.10.1/x86_64-unknown-linux-gnu/lsm_tree/error/enum.Error.html \"enum lsm_tree::error::Error\")\n\n[Partition](https://docs.rs/fjall/latest/fjall/type.Partition.html \"type fjall::Partition\")\n    Alias for [`PartitionHandle`](https://docs.rs/fjall/latest/fjall/struct.PartitionHandle.html \"struct fjall::PartitionHandle\")\n\n[Result](https://docs.rs/fjall/latest/fjall/type.Result.html \"type fjall::Result\")\n    Result helper type\n\n[TransactionalPartition](https://docs.rs/fjall/latest/fjall/type.TransactionalPartition.html \"type fjall::TransactionalPartition\")\n    Alias for [`TransactionalPartitionHandle`](https://docs.rs/fjall/latest/fjall/struct.TransactionalPartitionHandle.html \"struct fjall::TransactionalPartitionHandle\")\n\n[TxKeyspace](https://docs.rs/fjall/latest/fjall/type.TxKeyspace.html \"type fjall::TxKeyspace\")\n    Alias for [`TransactionalKeyspace`](https://docs.rs/fjall/latest/fjall/struct.TransactionalKeyspace.html \"struct fjall::TransactionalKeyspace\")\n\n[TxPartition](https://docs.rs/fjall/latest/fjall/type.TxPartition.html \"type fjall::TxPartition\")\n    Alias for [`TransactionalPartitionHandle`](https://docs.rs/fjall/latest/fjall/struct.TransactionalPartitionHandle.html \"struct fjall::TransactionalPartitionHandle\")\n\n[TxPartitionHandle](https://docs.rs/fjall/latest/fjall/type.TxPartitionHandle.html \"type fjall::TxPartitionHandle\")\n    Alias for [`TransactionalPartitionHandle`](https://docs.rs/fjall/latest/fjall/struct.TransactionalPartitionHandle.html \"struct fjall::TransactionalPartitionHandle\")\n\n[UserKey](https://docs.rs/fjall/latest/fjall/type.UserKey.html \"type fjall::UserKey\")\n    User defined key\n\n[UserValue](https://docs.rs/fjall/latest/fjall/type.UserValue.html \"type fjall::UserValue\")\n    User defined data (blob of bytes)\n\n[WriteBatch](https://docs.rs/fjall/latest/fjall/type.WriteBatch.html \"type fjall::WriteBatch\")\n    Alias for [`Batch`](https://docs.rs/fjall/latest/fjall/struct.Batch.html \"struct fjall::Batch\")\n",
              "markdown_with_citations": "[](https://docs.rs/fjall/latest/fjall/all.html \"show sidebar\")\n# Crate fjallCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nFjall is a log-structured embeddable key-value storage engine written in Rust. It features:\n  * Thread-safe BTreeMap-like API\n  * 100% safe & stable Rust\n  * LSM-tree-based storage similar to `RocksDB`\n  * Range & prefix searching with forward and reverse iteration\n  * Cross-partition snapshots (MVCC)\n  * Automatic background maintenance\n  * Single-writer transactions (optional)\n  * Key-value separation for large blob use cases (optional)\n\n\nEach `Keyspace` is a single logical database and is split into `partitions` (a.k.a. column families) - you should probably only use a single keyspace for your application. Each partition is physically a single LSM-tree and its own logical collection; however, write operations across partitions are atomic as they are persisted in a single database-level journal, which will be recovered after a crash.\nIt is not:\n  * a standalone server\n  * a relational or wide-column database: it has no notion of columns\n\n\nKeys are limited to 65536 bytes, values are limited to 2^32 bytes. As is normal with any kind of storage engine, larger keys and values have a bigger performance impact.\nFor the underlying LSM-tree implementation, see: <https://crates.io/crates/lsm-tree>.\n```\nuse fjall::{Config, PersistMode, Keyspace, PartitionCreateOptions};\n// A keyspace is a database, which may contain multiple collections (\"partitions\")\n// You should probably only use a single keyspace for your application\n//\nlet keyspace = Config::new(folder).open()?; // or open_transactional for transactional semantics\n// Each partition is its own physical LSM-tree\nlet items = keyspace.open_partition(\"my_items\", PartitionCreateOptions::default())?;\n// Write some data\nitems.insert(\"a\", \"hello\")?;\n// And retrieve it\nlet bytes = items.get(\"a\")?;\n// Or remove it again\nitems.remove(\"a\")?;\n// Search by prefix\nfor kv in items.prefix(\"prefix\") {\n // ...\n}\n// Search by range\nfor kv in items.range(\"a\"..=\"z\") {\n // ...\n}\n// Iterators implement DoubleEndedIterator, so you can search backwards, too!\nfor kv in items.prefix(\"prefix\").rev() {\n // ...\n}\n// Sync the journal to disk to make sure data is definitely durable\n// When the keyspace is dropped, it will try to persist with `PersistMode::SyncAll` as well\nkeyspace.persist(PersistMode::SyncAll)?;\n```\n\n## Modules\u00a7\u27e84\u27e9\n\ncompaction\u27e85\u27e9\n    Contains compaction strategies\n## Structs\u00a7\u27e86\u27e9\n\nBatch\u27e87\u27e9\n    An atomic write batch\n\nBlobCache\u27e88\u27e9Deprecated\n    Blob cache that caches frequently read blobs\n\nBlockCache\u27e89\u27e9Deprecated\n    Block cache that caches frequently read disk blocks\n\nConfig\u27e810\u27e9\n    Global keyspace configuration\n\nKeyspace\u27e811\u27e9\n    A keyspace is a single logical database which can house multiple partitions\n\nKvSeparationOptions\u27e812\u27e9\n    Configuration options for key-value-separated partitions.\n\nPartitionCreateOptions\u27e813\u27e9\n    Options to configure a partition\n\nPartitionHandle\u27e814\u27e9\n    Access to a keyspace partition\n\nReadTransaction\u27e815\u27e9\n    A cross-partition, read-only transaction (snapshot)\n\nSlice\u27e816\u27e9\n    An immutable byte slice that can be cloned without additional heap allocation\n\nSnapshot\u27e817\u27e9\n    A snapshot captures a read-only point-in-time view of the tree at the time the snapshot was created\n\nTransactionalKeyspace\u27e818\u27e9\n    Transactional keyspace\n\nTransactionalPartitionHandle\u27e819\u27e9\n    Access to a partition of a transactional keyspace\n\nWriteTransaction\u27e820\u27e9\n    A single-writer (serialized) cross-partition transaction\n## Enums\u00a7\u27e821\u27e9\n\nAnyTree\u27e822\u27e9\n    May be a standard `Tree`\u27e823\u27e9 or a `BlobTree`\u27e824\u27e9\n\nCompressionType\u27e825\u27e9\n    Compression algorithm to use.\n\nError\u27e826\u27e9\n    Errors that may occur in the storage engine\n\nPersistMode\u27e827\u27e9\n    The persist mode allows setting the durability guarantee of previous writes\n\nRecoveryError\u27e828\u27e9\n    Errors that can occur during journal recovery\n\nTreeType\u27e829\u27e9\n    LSM-tree type\n\nVersion\u27e830\u27e9\n    Disk format version\n## Traits\u00a7\u27e831\u27e9\n\nGarbageCollection\u27e832\u27e9\n    Functions for garbage collection strategies\n## Type Aliases\u00a7\u27e833\u27e9\n\nInstant\u27e834\u27e9\n    A snapshot moment\n\nKvPair\u27e835\u27e9\n    KV-tuple, typically returned by an iterator\n\nLsmError\u27e836\u27e9\n    Re-export of `lsm_tree::Error`\u27e837\u27e9\n\nPartition\u27e838\u27e9\n    Alias for `PartitionHandle`\u27e814\u27e9\n\nResult\u27e839\u27e9\n    Result helper type\n\nTransactionalPartition\u27e840\u27e9\n    Alias for `TransactionalPartitionHandle`\u27e819\u27e9\n\nTxKeyspace\u27e841\u27e9\n    Alias for `TransactionalKeyspace`\u27e818\u27e9\n\nTxPartition\u27e842\u27e9\n    Alias for `TransactionalPartitionHandle`\u27e819\u27e9\n\nTxPartitionHandle\u27e843\u27e9\n    Alias for `TransactionalPartitionHandle`\u27e819\u27e9\n\nUserKey\u27e844\u27e9\n    User defined key\n\nUserValue\u27e845\u27e9\n    User defined data (blob of bytes)\n\nWriteBatch\u27e846\u27e9\n    Alias for `Batch`\u27e87\u27e9\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/fjall/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/fjall/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/fjall/latest/src/fjall/lib.rs.html#5-219: Source\n\u27e84\u27e9 https://docs.rs/fjall/latest/fjall/#modules: \u00a7\n\u27e85\u27e9 https://docs.rs/fjall/latest/fjall/compaction/index.html: mod fjall::compaction - compaction\n\u27e86\u27e9 https://docs.rs/fjall/latest/fjall/#structs: \u00a7\n\u27e87\u27e9 https://docs.rs/fjall/latest/fjall/struct.Batch.html: struct fjall::Batch - Batch\n\u27e88\u27e9 https://docs.rs/fjall/latest/fjall/struct.BlobCache.html: struct fjall::BlobCache - BlobCache\n\u27e89\u27e9 https://docs.rs/fjall/latest/fjall/struct.BlockCache.html: struct fjall::BlockCache - BlockCache\n\u27e810\u27e9 https://docs.rs/fjall/latest/fjall/struct.Config.html: struct fjall::Config - Config\n\u27e811\u27e9 https://docs.rs/fjall/latest/fjall/struct.Keyspace.html: struct fjall::Keyspace - Keyspace\n\u27e812\u27e9 https://docs.rs/fjall/latest/fjall/struct.KvSeparationOptions.html: struct fjall::KvSeparationOptions - KvSeparationOptions\n\u27e813\u27e9 https://docs.rs/fjall/latest/fjall/struct.PartitionCreateOptions.html: struct fjall::PartitionCreateOptions - PartitionCreateOptions\n\u27e814\u27e9 https://docs.rs/fjall/latest/fjall/struct.PartitionHandle.html: struct fjall::PartitionHandle - PartitionHandle\n\u27e815\u27e9 https://docs.rs/fjall/latest/fjall/struct.ReadTransaction.html: struct fjall::ReadTransaction - ReadTransaction\n\u27e816\u27e9 https://docs.rs/fjall/latest/fjall/struct.Slice.html: struct fjall::Slice - Slice\n\u27e817\u27e9 https://docs.rs/fjall/latest/fjall/struct.Snapshot.html: struct fjall::Snapshot - Snapshot\n\u27e818\u27e9 https://docs.rs/fjall/latest/fjall/struct.TransactionalKeyspace.html: struct fjall::TransactionalKeyspace - TransactionalKeyspace\n\u27e819\u27e9 https://docs.rs/fjall/latest/fjall/struct.TransactionalPartitionHandle.html: struct fjall::TransactionalPartitionHandle - TransactionalPartitionHandle\n\u27e820\u27e9 https://docs.rs/fjall/latest/fjall/struct.WriteTransaction.html: struct fjall::WriteTransaction - WriteTransaction\n\u27e821\u27e9 https://docs.rs/fjall/latest/fjall/#enums: \u00a7\n\u27e822\u27e9 https://docs.rs/fjall/latest/fjall/enum.AnyTree.html: enum fjall::AnyTree - AnyTree\n\u27e823\u27e9 https://docs.rs/lsm-tree/2.10.1/x86_64-unknown-linux-gnu/lsm_tree/tree/struct.Tree.html: struct lsm_tree::tree::Tree - `Tree`\n\u27e824\u27e9 https://docs.rs/lsm-tree/2.10.1/x86_64-unknown-linux-gnu/lsm_tree/blob_tree/struct.BlobTree.html: struct lsm_tree::blob_tree::BlobTree - `BlobTree`\n\u27e825\u27e9 https://docs.rs/fjall/latest/fjall/enum.CompressionType.html: enum fjall::CompressionType - CompressionType\n\u27e826\u27e9 https://docs.rs/fjall/latest/fjall/enum.Error.html: enum fjall::Error - Error\n\u27e827\u27e9 https://docs.rs/fjall/latest/fjall/enum.PersistMode.html: enum fjall::PersistMode - PersistMode\n\u27e828\u27e9 https://docs.rs/fjall/latest/fjall/enum.RecoveryError.html: enum fjall::RecoveryError - RecoveryError\n\u27e829\u27e9 https://docs.rs/fjall/latest/fjall/enum.TreeType.html: enum fjall::TreeType - TreeType\n\u27e830\u27e9 https://docs.rs/fjall/latest/fjall/enum.Version.html: enum fjall::Version - Version\n\u27e831\u27e9 https://docs.rs/fjall/latest/fjall/#traits: \u00a7\n\u27e832\u27e9 https://docs.rs/fjall/latest/fjall/trait.GarbageCollection.html: trait fjall::GarbageCollection - GarbageCollection\n\u27e833\u27e9 https://docs.rs/fjall/latest/fjall/#types: \u00a7\n\u27e834\u27e9 https://docs.rs/fjall/latest/fjall/type.Instant.html: type fjall::Instant - Instant\n\u27e835\u27e9 https://docs.rs/fjall/latest/fjall/type.KvPair.html: type fjall::KvPair - KvPair\n\u27e836\u27e9 https://docs.rs/fjall/latest/fjall/type.LsmError.html: type fjall::LsmError - LsmError\n\u27e837\u27e9 https://docs.rs/lsm-tree/2.10.1/x86_64-unknown-linux-gnu/lsm_tree/error/enum.Error.html: enum lsm_tree::error::Error - `lsm_tree::Error`\n\u27e838\u27e9 https://docs.rs/fjall/latest/fjall/type.Partition.html: type fjall::Partition - Partition\n\u27e839\u27e9 https://docs.rs/fjall/latest/fjall/type.Result.html: type fjall::Result - Result\n\u27e840\u27e9 https://docs.rs/fjall/latest/fjall/type.TransactionalPartition.html: type fjall::TransactionalPartition - TransactionalPartition\n\u27e841\u27e9 https://docs.rs/fjall/latest/fjall/type.TxKeyspace.html: type fjall::TxKeyspace - TxKeyspace\n\u27e842\u27e9 https://docs.rs/fjall/latest/fjall/type.TxPartition.html: type fjall::TxPartition - TxPartition\n\u27e843\u27e9 https://docs.rs/fjall/latest/fjall/type.TxPartitionHandle.html: type fjall::TxPartitionHandle - TxPartitionHandle\n\u27e844\u27e9 https://docs.rs/fjall/latest/fjall/type.UserKey.html: type fjall::UserKey - UserKey\n\u27e845\u27e9 https://docs.rs/fjall/latest/fjall/type.UserValue.html: type fjall::UserValue - UserValue\n\u27e846\u27e9 https://docs.rs/fjall/latest/fjall/type.WriteBatch.html: type fjall::WriteBatch - WriteBatch\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 9041,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "116562.5660109"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/fjall",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [62 releases](https://lib.rs/crates/fjall/versions) (stable)\n[ new 2.11.1 ](https://github.com/fjall-rs/fjall/releases) |  Jun 22, 2025   \n---|---  \n2.10.0 |  Apr 27, 2025   \n2.8.0 |  Mar 30, 2025   \n2.5.0-pre.1 |  Dec 20, 2024   \n0.1.0 |  ~~Dec 21, 2023~~  \n#**3** in [Database implementations](https://lib.rs/database-implementations \"Database management systems implemented in Rust. Store and query large amounts of data in an efficient manner.\")\nDownload history 710/week @ 2025-03-09 546/week @ 2025-03-16 1394/week @ 2025-03-23 1616/week @ 2025-03-30 1368/week @ 2025-04-06 1109/week @ 2025-04-13 2926/week @ 2025-04-20 4339/week @ 2025-04-27 3849/week @ 2025-05-04 4075/week @ 2025-05-11 4264/week @ 2025-05-18 4045/week @ 2025-05-25 4152/week @ 2025-06-01 4518/week @ 2025-06-08 3426/week @ 2025-06-15 3288/week @ 2025-06-22\n**15,529** downloads per month Used in [**32** crates (20 directly)](https://lib.rs/crates/fjall/rev)\n**MIT/Apache**\n365KB  6.5K  SLoC\n![](https://img.gs/czjpqfbdkz/354/https://raw.githubusercontent.com/fjall-rs/fjall/bcb883cbc1a1d8cd8d217182cd4adcde2bc437ab//kawaii.png)\n[ ![CI](https://img.gs/czjpqfbdkz/full/https://github.com/fjall-rs/fjall/actions/workflows/test.yml/badge.svg) ](https://github.com/fjall-rs/fjall/actions/workflows/test.yml) [ ![docs.rs](https://img.shields.io/docsrs/fjall?color=green) ](https://docs.rs/fjall) [ ![Crates.io](https://img.shields.io/crates/v/fjall?color=blue) ](https://crates.io/crates/fjall) ![MSRV](https://img.shields.io/badge/MSRV-1.76.0-blue) [ ![dependency status](https://img.gs/czjpqfbdkz/full/https://deps.rs/repo/github/fjall-rs/fjall/status.svg) ](https://deps.rs/repo/github/fjall-rs/fjall)\n[ ![Discord](https://img.shields.io/discord/1240426554111164486) ](https://discord.com/invite/HvYGp4NFFk) [ ![Bluesky](https://img.shields.io/badge/bluesky-blue) ](https://bsky.app/profile/fjallrs.bsky.social)\n_Fjall_ is a log-structured, embeddable key-value storage engine written in Rust. It features:\n  * Thread-safe BTreeMap-like API\n  * 100% safe & stable Rust\n  * LSM-tree-based storage similar to RocksDB\n  * Range & prefix searching with forward and reverse iteration\n  * Partitions (a.k.a. column families) with cross-partition atomic semantics\n  * Built-in compression (default = LZ4)\n  * Serializable transactions (optional)\n  * Key-value separation for large blob use cases (optional)\n  * Automatic background maintenance\n\n\nIt is not:\n  * a standalone server\n  * a relational or wide-column database: it has no built-in notion of columns\n\n\nKeys are limited to 65536 bytes, values are limited to 2^32 bytes. As is normal with any kind of storage engine, larger keys and values have a bigger performance impact.\nLike any typical key-value store, keys are stored in lexicographic order. If you are storing integer keys (e.g. timeseries data), you should use the big endian form to adhere to locality.\n## Sponsors\n[ ![Orbitinghail](https://img.gs/czjpqfbdkz/240/https://raw.githubusercontent.com/fjall-rs/fjall-rs.github.io/d22fcb1e6966ce08327ea3bf6cf2ea86a840b071/public/logos/orbitinghail_dark.svg) ](https://sqlsync.dev)\n## Basic usage\n```\n```cargo``` add fjall`\n`\n```\n```\n``use` `fjall`::````{`Config`,` PersistMode`,` Keyspace`,` PartitionCreateOptions```}```;`\n``//` A keyspace is a database, which may contain multiple collections (\"partitions\")`\n``//` You should probably only use a single keyspace for your application`\n``//``\n`let` keyspace `=` `Config`::``new`(`folder`)``.``open``(``)``?``;` ``//` or open_transactional for transactional semantics`\n``//` Each partition is its own physical LSM-tree`\n`let` items `=` keyspace`.``open_partition``(```\"`my_items`\"```,` `PartitionCreateOptions`::``default`(``)``)``?``;`\n``//` Write some data`\nitems`.``insert``(```\"`a`\"```,` ``\"`hello`\"```)``?``;`\n``//` And retrieve it`\n`let` bytes `=` items`.``get``(```\"`a`\"```)``?``;`\n``//` Or remove it again`\nitems`.``remove``(```\"`a`\"```)``?``;`\n``//` Search by prefix`\n`for` kv `in` items`.``prefix``(```\"`prefix`\"```)` ``{`\n ``//` ...`\n```}``\n``//` Search by range`\n`for` kv `in` items`.``range``(```\"`a`\"```..``=```\"`z`\"```)` ``{`\n ``//` ...`\n```}``\n``//` Iterators implement DoubleEndedIterator, so you can search backwards, too!`\n`for` kv `in` items`.``prefix``(```\"`prefix`\"```)``.``rev``(``)` ``{`\n ``//` ...`\n```}``\n``//` Sync the journal to disk to make sure data is definitely durable`\n``//` When the keyspace is dropped, it will try to persist with `PersistMode::SyncAll` as well`\nkeyspace`.``persist``(``PersistMode`::``SyncAll`)``?``;`\n`\n```\n\n## Durability\nTo support different kinds of workloads, Fjall is agnostic about the type of durability your application needs. After writing data (``insert``, ``remove`` or committing a write batch/transaction), you can choose to call [```Keyspace`::``persist``](https://docs.rs/fjall/latest/fjall/struct.Keyspace.html#method.persist) which takes a [``PersistMode``](https://docs.rs/fjall/latest/fjall/enum.PersistMode.html) parameter. By default, any operation will flush to OS buffers, but **not** to disk. This is in line with RocksDB's default durability. Also, when dropped, the keyspace will try to persist the journal _to disk_ synchronously.\n## Multithreading, Async and Multiprocess\n> [!WARNING] A single keyspace may **not** be loaded in parallel from separate _processes_.\nFjall is internally synchronized for multi-_threaded_ access, so you can clone around the ``Keyspace`` and ``Partition``s as needed, without needing to lock yourself.\nFor an async example, see the [``tokio``](https://github.com/fjall-rs/fjall/tree/main/examples/tokio) example.\n## Feature flags\n### lz4\nAllows using ```LZ4``` compression, powered by [``lz4_flex``](https://github.com/PSeitz/lz4_flex).\n_Enabled by default._\n### miniz\nAllows using ```DEFLATE``/`zlib`` compression, powered by [``miniz_oxide``](https://github.com/Frommi/miniz_oxide).\n_Disabled by default._\n### single_writer_tx\nAllows opening a transactional Keyspace for single-writer (serialized) transactions, allowing RYOW (read-your-own-write), fetch-and-update and other atomic operations.\n_Enabled by default._\n### ssi_tx\nAllows opening a transactional Keyspace for multi-writer, serializable transactions, allowing RYOW (read-your-own-write), fetch-and-update and other atomic operations. Conflict checking is done using optimistic concurrency control.\n_Disabled by default. Mutually exclusive with``single_writer_tx``._\n### bytes\nUses [``bytes``](https://github.com/tokio-rs/bytes) as the underlying ``Slice`` type.\n_Disabled by default._\n## Stable disk format\nThe disk format is stable as of 1.0.0.\n2.0.0 uses a new disk format and needs a manual format migration.\nFuture breaking changes will result in a major version bump and a migration path.\nFor the underlying LSM-tree implementation, see: [https://crates.io/crates/lsm-tree](https://lib.rs/crates/lsm-tree).\n## Examples\n[See here](https://github.com/fjall-rs/fjall/tree/main/examples) for practical examples.\nAnd checkout [``Smoltable``](https://github.com/marvin-j97/smoltable), a standalone Bigtable-inspired toy wide-column database using ``fjall`` as its storage engine.\n## Contributing\nHow can you help?\n  * [Ask a question](https://github.com/fjall-rs/fjall/discussions/new?category=q-a)\n    * or join the Discord server: <https://discord.com/invite/HvYGp4NFFk>\n  * [Post benchmarks and things you created](https://github.com/fjall-rs/fjall/discussions/new?category=show-and-tell)\n  * [Open a PR](https://github.com/fjall-rs/fjall/compare), \n    * [See open issues to pick up here](https://github.com/search?q=org%3Afjall-rs+label%3A%22help+wanted%22+state%3Aopen+&type=issues)\n  * [Open an issue](https://github.com/fjall-rs/fjall/issues/new) (bug report, weirdness)\n\n\n## License\nAll source code is licensed under MIT OR Apache-2.0.\nAll contributions are to be licensed as MIT OR Apache-2.0.\n#### Dependencies\n~5\u201315MB  ~219K SLoC\n  * [byteorder](https://lib.rs/crates/byteorder \"1.5.0\")\n  * [byteview](https://lib.rs/crates/byteview \"0.6.1\")\n  * [dashmap](https://lib.rs/crates/dashmap \"new\") 6.0\n  * [log](https://lib.rs/crates/log \"0.4.21\")\n  * [lsm-tree](https://lib.rs/crates/lsm-tree \"~2.10.1\")\n  * [path-absolutize](https://lib.rs/crates/path-absolutize \"3.1.1\")\n  * [std-semaphore](https://lib.rs/crates/std-semaphore \"0.1.0\")\n  * [tempfile](https://lib.rs/crates/tempfile \"3.10.1\")\n  * [xxhash-rust](https://lib.rs/crates/xxhash-rust \"0.8.12\")[+xxh3](https://lib.rs/crates/xxhash-rust/features#feature-xxh3)\n\n\n  * dev  [criterion](https://lib.rs/crates/criterion \"outdated\") 0.5.1[+html_reports](https://lib.rs/crates/criterion/features#feature-html_reports)\n  * dev  [half](https://lib.rs/crates/half \"obsolete\") =2.4.0\n  * dev  [nanoid](https://lib.rs/crates/nanoid \"0.4.0\")\n  * dev  [rand](https://lib.rs/crates/rand \"new\") 0.9\n  * dev  [test-log](https://lib.rs/crates/test-log \"0.2.16\")\n\n\n#### [Other features](https://lib.rs/crates/fjall/features)\n  * [bytes](https://lib.rs/crates/fjall/features#feature-bytes)\n  * [lz4](https://lib.rs/crates/fjall/features#feature-lz4)\n  * [miniz](https://lib.rs/crates/fjall/features#feature-miniz)\n  * [single_writer_tx](https://lib.rs/crates/fjall/features#feature-single_writer_tx)\n  * [ssi_tx](https://lib.rs/crates/fjall/features#feature-ssi_tx)\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  62 releases\u27e81\u27e9 (stable)\n new 2.11.1 \u27e82\u27e9 |  Jun 22, 2025   \n---|---  \n2.10.0 |  Apr 27, 2025   \n2.8.0 |  Mar 30, 2025   \n2.5.0-pre.1 |  Dec 20, 2024   \n0.1.0 |  ~~Dec 21, 2023~~  \n#**3** in Database implementations\u27e83\u27e9\nDownload history 710/week @ 2025-03-09 546/week @ 2025-03-16 1394/week @ 2025-03-23 1616/week @ 2025-03-30 1368/week @ 2025-04-06 1109/week @ 2025-04-13 2926/week @ 2025-04-20 4339/week @ 2025-04-27 3849/week @ 2025-05-04 4075/week @ 2025-05-11 4264/week @ 2025-05-18 4045/week @ 2025-05-25 4152/week @ 2025-06-01 4518/week @ 2025-06-08 3426/week @ 2025-06-15 3288/week @ 2025-06-22\n**15,529** downloads per month Used in **32** crates (20 directly)\u27e84\u27e9\n**MIT/Apache**\n365KB  6.5K  SLoC\n![](https://img.gs/czjpqfbdkz/354/https://raw.githubusercontent.com/fjall-rs/fjall/bcb883cbc1a1d8cd8d217182cd4adcde2bc437ab//kawaii.png)\n ![CI\u27e85\u27e9 ](https://github.com/fjall-rs/fjall/actions/workflows/test.yml)  ![docs.rs\u27e86\u27e9 ](https://docs.rs/fjall)  ![Crates.io\u27e87\u27e9 ](https://crates.io/crates/fjall) ![MSRV\u27e88\u27e9]  ![dependency status\u27e89\u27e9 ](https://deps.rs/repo/github/fjall-rs/fjall)\n ![Discord\u27e810\u27e9 ](https://discord.com/invite/HvYGp4NFFk)  ![Bluesky\u27e811\u27e9 ](https://bsky.app/profile/fjallrs.bsky.social)\n_Fjall_ is a log-structured, embeddable key-value storage engine written in Rust. It features:\n  * Thread-safe BTreeMap-like API\n  * 100% safe & stable Rust\n  * LSM-tree-based storage similar to RocksDB\n  * Range & prefix searching with forward and reverse iteration\n  * Partitions (a.k.a. column families) with cross-partition atomic semantics\n  * Built-in compression (default = LZ4)\n  * Serializable transactions (optional)\n  * Key-value separation for large blob use cases (optional)\n  * Automatic background maintenance\n\n\nIt is not:\n  * a standalone server\n  * a relational or wide-column database: it has no built-in notion of columns\n\n\nKeys are limited to 65536 bytes, values are limited to 2^32 bytes. As is normal with any kind of storage engine, larger keys and values have a bigger performance impact.\nLike any typical key-value store, keys are stored in lexicographic order. If you are storing integer keys (e.g. timeseries data), you should use the big endian form to adhere to locality.\n## Sponsors\n ![Orbitinghail\u27e812\u27e9 ](https://sqlsync.dev)\n## Basic usage\n```\n```cargo``` add fjall`\n`\n```\n```\n``use` `fjall`::````{`Config`,` PersistMode`,` Keyspace`,` PartitionCreateOptions```}```;`\n``//` A keyspace is a database, which may contain multiple collections (\"partitions\")`\n``//` You should probably only use a single keyspace for your application`\n``//``\n`let` keyspace `=` `Config`::``new`(`folder`)``.``open``(``)``?``;` ``//` or open_transactional for transactional semantics`\n``//` Each partition is its own physical LSM-tree`\n`let` items `=` keyspace`.``open_partition``(```\"`my_items`\"```,` `PartitionCreateOptions`::``default`(``)``)``?``;`\n``//` Write some data`\nitems`.``insert``(```\"`a`\"```,` ``\"`hello`\"```)``?``;`\n``//` And retrieve it`\n`let` bytes `=` items`.``get``(```\"`a`\"```)``?``;`\n``//` Or remove it again`\nitems`.``remove``(```\"`a`\"```)``?``;`\n``//` Search by prefix`\n`for` kv `in` items`.``prefix``(```\"`prefix`\"```)` ``{`\n ``//` ...`\n```}``\n``//` Search by range`\n`for` kv `in` items`.``range``(```\"`a`\"```..``=```\"`z`\"```)` ``{`\n ``//` ...`\n```}``\n``//` Iterators implement DoubleEndedIterator, so you can search backwards, too!`\n`for` kv `in` items`.``prefix``(```\"`prefix`\"```)``.``rev``(``)` ``{`\n ``//` ...`\n```}``\n``//` Sync the journal to disk to make sure data is definitely durable`\n``//` When the keyspace is dropped, it will try to persist with `PersistMode::SyncAll` as well`\nkeyspace`.``persist``(``PersistMode`::``SyncAll`)``?``;`\n`\n```\n\n## Durability\nTo support different kinds of workloads, Fjall is agnostic about the type of durability your application needs. After writing data (``insert``, ``remove`` or committing a write batch/transaction), you can choose to call ```Keyspace`::``persist``\u27e813\u27e9 which takes a ``PersistMode``\u27e814\u27e9 parameter. By default, any operation will flush to OS buffers, but **not** to disk. This is in line with RocksDB's default durability. Also, when dropped, the keyspace will try to persist the journal _to disk_ synchronously.\n## Multithreading, Async and Multiprocess\n> [!WARNING] A single keyspace may **not** be loaded in parallel from separate _processes_.\nFjall is internally synchronized for multi-_threaded_ access, so you can clone around the ``Keyspace`` and ``Partition``s as needed, without needing to lock yourself.\nFor an async example, see the ``tokio``\u27e815\u27e9 example.\n## Feature flags\n### lz4\nAllows using ```LZ4``` compression, powered by ``lz4_flex``\u27e816\u27e9.\n_Enabled by default._\n### miniz\nAllows using ```DEFLATE``/`zlib`` compression, powered by ``miniz_oxide``\u27e817\u27e9.\n_Disabled by default._\n### single_writer_tx\nAllows opening a transactional Keyspace for single-writer (serialized) transactions, allowing RYOW (read-your-own-write), fetch-and-update and other atomic operations.\n_Enabled by default._\n### ssi_tx\nAllows opening a transactional Keyspace for multi-writer, serializable transactions, allowing RYOW (read-your-own-write), fetch-and-update and other atomic operations. Conflict checking is done using optimistic concurrency control.\n_Disabled by default. Mutually exclusive with``single_writer_tx``._\n### bytes\nUses ``bytes``\u27e818\u27e9 as the underlying ``Slice`` type.\n_Disabled by default._\n## Stable disk format\nThe disk format is stable as of 1.0.0.\n2.0.0 uses a new disk format and needs a manual format migration.\nFuture breaking changes will result in a major version bump and a migration path.\nFor the underlying LSM-tree implementation, see: https://crates.io/crates/lsm-tree\u27e819\u27e9.\n## Examples\nSee here\u27e820\u27e9 for practical examples.\nAnd checkout ``Smoltable``\u27e821\u27e9, a standalone Bigtable-inspired toy wide-column database using ``fjall`` as its storage engine.\n## Contributing\nHow can you help?\n  * Ask a question\u27e822\u27e9\n    * or join the Discord server: <https://discord.com/invite/HvYGp4NFFk>\n  * Post benchmarks and things you created\u27e823\u27e9\n  * Open a PR\u27e824\u27e9, \n    * See open issues to pick up here\u27e825\u27e9\n  * Open an issue\u27e826\u27e9 (bug report, weirdness)\n\n\n## License\nAll source code is licensed under MIT OR Apache-2.0.\nAll contributions are to be licensed as MIT OR Apache-2.0.\n#### Dependencies\n~5\u201315MB  ~219K SLoC\n  * byteorder\u27e827\u27e9\n  * byteview\u27e828\u27e9\n  * dashmap\u27e829\u27e9 6.0\n  * log\u27e830\u27e9\n  * lsm-tree\u27e819\u27e9\n  * path-absolutize\u27e831\u27e9\n  * std-semaphore\u27e832\u27e9\n  * tempfile\u27e833\u27e9\n  * xxhash-rust\u27e834\u27e9+xxh3\u27e835\u27e9\n\n\n  * dev  criterion\u27e836\u27e9 0.5.1+html_reports\u27e837\u27e9\n  * dev  half\u27e838\u27e9 =2.4.0\n  * dev  nanoid\u27e839\u27e9\n  * dev  rand\u27e840\u27e9 0.9\n  * dev  test-log\u27e841\u27e9\n\n\n#### Other features\u27e842\u27e9\n  * bytes\u27e843\u27e9\n  * lz4\u27e844\u27e9\n  * miniz\u27e845\u27e9\n  * single_writer_tx\u27e846\u27e9\n  * ssi_tx\u27e847\u27e9\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/fjall/versions: 62 releases\n\u27e82\u27e9 https://github.com/fjall-rs/fjall/releases:  new 2.11.1 \n\u27e83\u27e9 https://lib.rs/database-implementations: Database management systems implemented in Rust. Store and query large amounts of data in an efficient manner. - Database implementations\n\u27e84\u27e9 https://lib.rs/crates/fjall/rev: **32** crates (20 directly)\n\u27e85\u27e9 https://img.gs/czjpqfbdkz/full/https://github.com/fjall-rs/fjall/actions/workflows/test.yml/badge.svg:  ![CI\n\u27e86\u27e9 https://img.shields.io/docsrs/fjall?color=green:  ![docs.rs\n\u27e87\u27e9 https://img.shields.io/crates/v/fjall?color=blue:  ![Crates.io\n\u27e88\u27e9 https://img.shields.io/badge/MSRV-1.76.0-blue: MSRV\n\u27e89\u27e9 https://img.gs/czjpqfbdkz/full/https://deps.rs/repo/github/fjall-rs/fjall/status.svg:  ![dependency status\n\u27e810\u27e9 https://img.shields.io/discord/1240426554111164486:  ![Discord\n\u27e811\u27e9 https://img.shields.io/badge/bluesky-blue:  ![Bluesky\n\u27e812\u27e9 https://img.gs/czjpqfbdkz/240/https://raw.githubusercontent.com/fjall-rs/fjall-rs.github.io/d22fcb1e6966ce08327ea3bf6cf2ea86a840b071/public/logos/orbitinghail_dark.svg:  ![Orbitinghail\n\u27e813\u27e9 https://docs.rs/fjall/latest/fjall/struct.Keyspace.html#method.persist: ```Keyspace`::``persist``\n\u27e814\u27e9 https://docs.rs/fjall/latest/fjall/enum.PersistMode.html: ``PersistMode``\n\u27e815\u27e9 https://github.com/fjall-rs/fjall/tree/main/examples/tokio: ``tokio``\n\u27e816\u27e9 https://github.com/PSeitz/lz4_flex: ``lz4_flex``\n\u27e817\u27e9 https://github.com/Frommi/miniz_oxide: ``miniz_oxide``\n\u27e818\u27e9 https://github.com/tokio-rs/bytes: ``bytes``\n\u27e819\u27e9 https://lib.rs/crates/lsm-tree: https://crates.io/crates/lsm-tree\n\u27e820\u27e9 https://github.com/fjall-rs/fjall/tree/main/examples: See here\n\u27e821\u27e9 https://github.com/marvin-j97/smoltable: ``Smoltable``\n\u27e822\u27e9 https://github.com/fjall-rs/fjall/discussions/new?category=q-a: Ask a question\n\u27e823\u27e9 https://github.com/fjall-rs/fjall/discussions/new?category=show-and-tell: Post benchmarks and things you created\n\u27e824\u27e9 https://github.com/fjall-rs/fjall/compare: Open a PR\n\u27e825\u27e9 https://github.com/search?q=org%3Afjall-rs+label%3A%22help+wanted%22+state%3Aopen+&type=issues: See open issues to pick up here\n\u27e826\u27e9 https://github.com/fjall-rs/fjall/issues/new: Open an issue\n\u27e827\u27e9 https://lib.rs/crates/byteorder: 1.5.0 - byteorder\n\u27e828\u27e9 https://lib.rs/crates/byteview: 0.6.1 - byteview\n\u27e829\u27e9 https://lib.rs/crates/dashmap: new - dashmap\n\u27e830\u27e9 https://lib.rs/crates/log: 0.4.21 - log\n\u27e831\u27e9 https://lib.rs/crates/path-absolutize: 3.1.1 - path-absolutize\n\u27e832\u27e9 https://lib.rs/crates/std-semaphore: 0.1.0 - std-semaphore\n\u27e833\u27e9 https://lib.rs/crates/tempfile: 3.10.1 - tempfile\n\u27e834\u27e9 https://lib.rs/crates/xxhash-rust: 0.8.12 - xxhash-rust\n\u27e835\u27e9 https://lib.rs/crates/xxhash-rust/features#feature-xxh3: +xxh3\n\u27e836\u27e9 https://lib.rs/crates/criterion: outdated - criterion\n\u27e837\u27e9 https://lib.rs/crates/criterion/features#feature-html_reports: +html_reports\n\u27e838\u27e9 https://lib.rs/crates/half: obsolete - half\n\u27e839\u27e9 https://lib.rs/crates/nanoid: 0.4.0 - nanoid\n\u27e840\u27e9 https://lib.rs/crates/rand: new - rand\n\u27e841\u27e9 https://lib.rs/crates/test-log: 0.2.16 - test-log\n\u27e842\u27e9 https://lib.rs/crates/fjall/features: Other features\n\u27e843\u27e9 https://lib.rs/crates/fjall/features#feature-bytes: bytes\n\u27e844\u27e9 https://lib.rs/crates/fjall/features#feature-lz4: lz4\n\u27e845\u27e9 https://lib.rs/crates/fjall/features#feature-miniz: miniz\n\u27e846\u27e9 https://lib.rs/crates/fjall/features#feature-single_writer_tx: single_writer_tx\n\u27e847\u27e9 https://lib.rs/crates/fjall/features#feature-ssi_tx: ssi_tx\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 9316,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "116563.1883988"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libcfg_if-0416b600f5de43de.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "equivalent",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libequivalent-ebd39031dcab7414.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "scopeguard",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libscopeguard-b3036dac4c63d524.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustc-hash@2.1.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustc-hash-2.1.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rustc_hash",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustc-hash-2.1.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\librustc_hash-fc4693c8e2b60b33.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#compare@0.0.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\compare-0.0.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "compare",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\compare-0.0.6\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libcompare-8bf0cab2a5dfe7fa.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.21.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "once_cell",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.21.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "race",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libonce_cell-a60312d61ee7843e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#varint-rs@2.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\varint-rs-2.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "varint_rs",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\varint-rs-2.2.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "signed",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libvarint_rs-920f7d662a9526fa.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#byteview@0.6.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteview-0.6.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "byteview",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteview-0.6.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libbyteview-3dc5e0b38915d0d8.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fastrand@2.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fastrand-2.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fastrand",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fastrand-2.3.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libfastrand-be824bc817d66839.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libsmallvec-6a440c251b58272a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\liblog-1786323f854c511b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#interval-heap@0.0.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\interval-heap-0.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "interval_heap",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\interval-heap-0.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libinterval_heap-e01e3382fc3afe00.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.21.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "once_cell",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.21.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "race",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libonce_cell-2a6271615cc5cd42.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libonce_cell-2a6271615cc5cd42.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\parking_lot_core-fda95fe9f127d56b\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\parking_lot_core-fda95fe9f127d56b\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#path-dedot@3.1.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\path-dedot-3.1.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "path_dedot",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\path-dedot-3.1.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libpath_dedot-8d56a1bab4177b75.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#self_cell@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\self_cell-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "self_cell",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\self_cell-1.2.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libself_cell-b5de9b8a0ddc5c6a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\proc-macro2-ff1a34852a360a33\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\proc-macro2-ff1a34852a360a33\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#xxhash-rust@0.8.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\xxhash-rust-0.8.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "xxhash_rust",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\xxhash-rust-0.8.15\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "xxh3"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libxxhash_rust-2296d2336c5529e6.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#guardian@1.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\guardian-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "guardian",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\guardian-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libguardian-3c6cef12745ed621.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\crossbeam-utils-eac37113d2f8721b\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\crossbeam-utils-eac37113d2f8721b\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\parking_lot_core-9928602ef8bb032d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.3.3\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.3.3\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\getrandom-5a25910c6077e814\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\getrandom-5a25910c6077e814\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#std-semaphore@0.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\std-semaphore-0.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "std_semaphore",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\std-semaphore-0.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libstd_semaphore-45d1455e85e0afc8.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#double-ended-peekable@0.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\double-ended-peekable-0.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "double_ended_peekable",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\double-ended-peekable-0.1.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libdouble_ended_peekable-957b3f220988ffbb.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "byteorder",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libbyteorder-b12c2005ffdddab5.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\crossbeam-utils-a76aac2ae9866593\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#path-absolutize@3.1.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\path-absolutize-3.1.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "path_absolutize",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\path-absolutize-3.1.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libpath_absolutize-586a6e1d752e0ac6.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.5.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libautocfg-ff5884693664d457.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libautocfg-ff5884693664d457.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\proc-macro2-bd004ad9dcfa0b46\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lz4_flex@0.11.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lz4_flex-0.11.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lz4_flex",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lz4_flex-0.11.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\liblz4_flex-17a54cf1f25194fb.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.3",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\getrandom-fe3694f2bbc7b528\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hashbrown",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "inline-more"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libhashbrown-d1162cd53c777244.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.3.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "getrandom",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.3.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libgetrandom-b7c4f4f42c458afb.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libparking_lot_core-371fd459e255aab1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\lock_api-d2343c0fe6ff07ff\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\lock_api-d2343c0fe6ff07ff\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.14.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.14.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hashbrown",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.14.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "raw"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libhashbrown-48982c59adb56e95.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_utils",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libcrossbeam_utils-bb4ad7bf8162756c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_const_fn_trait_bound"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\lock_api-26a72cfa18e2caea\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libproc_macro2-a3b3807fecd402e3.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libproc_macro2-a3b3807fecd402e3.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quick_cache@0.6.14",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quick_cache-0.6.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quick_cache",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quick_cache-0.6.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libquick_cache-205781e5d0c29e5f.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-epoch@0.9.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-epoch-0.9.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_epoch",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-epoch-0.9.18\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libcrossbeam_epoch-3bbc16071692da97.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lock_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\liblock_api-9c180e8e0f8b9e04.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libquote-e850c7166d56c5b9.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libquote-e850c7166d56c5b9.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-skiplist@0.1.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-skiplist-0.1.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_skiplist",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-skiplist-0.1.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libcrossbeam_skiplist-b018b14e1942438e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#dashmap@6.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\dashmap-6.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "dashmap",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\dashmap-6.1.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libdashmap-7bfb2d5f41f2240e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.59.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_Storage",
                "Win32_Storage_FileSystem",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libwindows_sys-8fe5e96159cc5ab5.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tempfile@3.20.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tempfile-3.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tempfile",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tempfile-3.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "getrandom"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libtempfile-c46eafdd94aebbb0.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#value-log@1.9.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\value-log-1.9.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "value_log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\value-log-1.9.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libvalue_log-2e5b138bb337a828.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.104",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.104\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.104\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "full",
                "parsing",
                "printing",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libsyn-4b137bbe8fff620f.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libsyn-4b137bbe8fff620f.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#enum_dispatch@0.3.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\enum_dispatch-0.3.13\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "enum_dispatch",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\enum_dispatch-0.3.13\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\enum_dispatch-d34241bbad225240.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\enum_dispatch-d34241bbad225240.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\enum_dispatch-d34241bbad225240.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\enum_dispatch-d34241bbad225240.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lsm-tree@2.10.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lsm-tree-2.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lsm_tree",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lsm-tree-2.10.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "lz4"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\liblsm_tree-7dad9ee8f14edf9d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: field `journal_recovery_mode` is never read\n  --> src\\config.rs:49:16\n   |\n14 | pub struct Config {\n   |            ------ field in this struct\n...\n49 |     pub(crate) journal_recovery_mode: RecoveryMode,\n   |                ^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `Config` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`Config` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(dead_code)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "dead_code",
                  "explanation": null
                },
                "level": "warning",
                "message": "field `journal_recovery_mode` is never read",
                "spans": [
                  {
                    "byte_end": 428,
                    "byte_start": 422,
                    "column_end": 18,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\config.rs",
                    "is_primary": false,
                    "label": "field in this struct",
                    "line_end": 14,
                    "line_start": 14,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 18,
                        "highlight_start": 12,
                        "text": "pub struct Config {"
                      }
                    ]
                  },
                  {
                    "byte_end": 1560,
                    "byte_start": 1539,
                    "column_end": 37,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\config.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 49,
                    "line_start": 49,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 16,
                        "text": "    pub(crate) journal_recovery_mode: RecoveryMode,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: method `outstanding_flushes` is never used\n  --> src\\stats.rs:26:12\n   |\n25 | impl Stats {\n   | ---------- method in this implementation\n26 |     pub fn outstanding_flushes(&self) -> usize {\n   |            ^^^^^^^^^^^^^^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": {
                  "code": "dead_code",
                  "explanation": null
                },
                "level": "warning",
                "message": "method `outstanding_flushes` is never used",
                "spans": [
                  {
                    "byte_end": 668,
                    "byte_start": 658,
                    "column_end": 11,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\stats.rs",
                    "is_primary": false,
                    "label": "method in this implementation",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 11,
                        "highlight_start": 1,
                        "text": "impl Stats {"
                      }
                    ]
                  },
                  {
                    "byte_end": 701,
                    "byte_start": 682,
                    "column_end": 31,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\stats.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 26,
                    "line_start": 26,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 12,
                        "text": "    pub fn outstanding_flushes(&self) -> usize {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "lz4",
                "single_writer_tx"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libfjall-f4280b60c02e117b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\crossbeam-utils-eac37113d2f8721b\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\crossbeam-utils-eac37113d2f8721b\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.21.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "once_cell",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.21.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "race",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libonce_cell-a60312d61ee7843e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\proc-macro2-ff1a34852a360a33\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\proc-macro2-ff1a34852a360a33\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libcfg_if-0416b600f5de43de.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.3.3\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.3.3\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\getrandom-5a25910c6077e814\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\getrandom-5a25910c6077e814\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.5.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libautocfg-ff5884693664d457.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libautocfg-ff5884693664d457.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\parking_lot_core-fda95fe9f127d56b\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\parking_lot_core-fda95fe9f127d56b\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#compare@0.0.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\compare-0.0.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "compare",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\compare-0.0.6\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libcompare-8bf0cab2a5dfe7fa.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fastrand@2.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fastrand-2.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fastrand",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fastrand-2.3.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libfastrand-be824bc817d66839.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#byteview@0.6.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteview-0.6.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "byteview",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteview-0.6.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libbyteview-3dc5e0b38915d0d8.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.21.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "once_cell",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.21.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "race",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libonce_cell-2a6271615cc5cd42.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libonce_cell-2a6271615cc5cd42.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "byteorder",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libbyteorder-b12c2005ffdddab5.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustc-hash@2.1.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustc-hash-2.1.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rustc_hash",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustc-hash-2.1.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\librustc_hash-fc4693c8e2b60b33.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "scopeguard",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libscopeguard-b3036dac4c63d524.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\crossbeam-utils-a76aac2ae9866593\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\proc-macro2-bd004ad9dcfa0b46\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.3",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\getrandom-fe3694f2bbc7b528\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#path-dedot@3.1.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\path-dedot-3.1.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "path_dedot",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\path-dedot-3.1.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libpath_dedot-8d56a1bab4177b75.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\lock_api-d2343c0fe6ff07ff\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\lock_api-d2343c0fe6ff07ff\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#interval-heap@0.0.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\interval-heap-0.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "interval_heap",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\interval-heap-0.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libinterval_heap-e01e3382fc3afe00.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\parking_lot_core-9928602ef8bb032d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hashbrown",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "inline-more"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libhashbrown-d1162cd53c777244.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#varint-rs@2.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\varint-rs-2.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "varint_rs",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\varint-rs-2.2.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "signed",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libvarint_rs-920f7d662a9526fa.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#xxhash-rust@0.8.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\xxhash-rust-0.8.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "xxhash_rust",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\xxhash-rust-0.8.15\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "xxh3"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libxxhash_rust-2296d2336c5529e6.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\liblog-1786323f854c511b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "equivalent",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libequivalent-ebd39031dcab7414.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libsmallvec-6a440c251b58272a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#guardian@1.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\guardian-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "guardian",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\guardian-1.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libguardian-3c6cef12745ed621.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#self_cell@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\self_cell-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "self_cell",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\self_cell-1.2.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libself_cell-b5de9b8a0ddc5c6a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libproc_macro2-a3b3807fecd402e3.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libproc_macro2-a3b3807fecd402e3.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_utils",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libcrossbeam_utils-bb4ad7bf8162756c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.3.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "getrandom",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.3.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libgetrandom-b7c4f4f42c458afb.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_const_fn_trait_bound"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\build\\lock_api-26a72cfa18e2caea\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#path-absolutize@3.1.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\path-absolutize-3.1.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "path_absolutize",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\path-absolutize-3.1.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libpath_absolutize-586a6e1d752e0ac6.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quick_cache@0.6.14",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quick_cache-0.6.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quick_cache",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quick_cache-0.6.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libquick_cache-205781e5d0c29e5f.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.14.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.14.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hashbrown",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.14.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "raw"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libhashbrown-48982c59adb56e95.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#double-ended-peekable@0.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\double-ended-peekable-0.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "double_ended_peekable",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\double-ended-peekable-0.1.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libdouble_ended_peekable-957b3f220988ffbb.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lz4_flex@0.11.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lz4_flex-0.11.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lz4_flex",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lz4_flex-0.11.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\liblz4_flex-17a54cf1f25194fb.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#std-semaphore@0.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\std-semaphore-0.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "std_semaphore",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\std-semaphore-0.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libstd_semaphore-45d1455e85e0afc8.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libquote-e850c7166d56c5b9.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libquote-e850c7166d56c5b9.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.59.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_Storage",
                "Win32_Storage_FileSystem",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libwindows_sys-8fe5e96159cc5ab5.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-epoch@0.9.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-epoch-0.9.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_epoch",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-epoch-0.9.18\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libcrossbeam_epoch-3bbc16071692da97.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lock_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\liblock_api-9c180e8e0f8b9e04.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libparking_lot_core-371fd459e255aab1.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tempfile@3.20.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tempfile-3.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tempfile",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tempfile-3.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "getrandom"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libtempfile-c46eafdd94aebbb0.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.104",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.104\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.104\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "full",
                "parsing",
                "printing",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libsyn-4b137bbe8fff620f.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libsyn-4b137bbe8fff620f.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-skiplist@0.1.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-skiplist-0.1.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_skiplist",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-skiplist-0.1.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libcrossbeam_skiplist-b018b14e1942438e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#dashmap@6.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\dashmap-6.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "dashmap",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\dashmap-6.1.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libdashmap-7bfb2d5f41f2240e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#value-log@1.9.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\value-log-1.9.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "value_log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\value-log-1.9.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\libvalue_log-2e5b138bb337a828.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#enum_dispatch@0.3.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\enum_dispatch-0.3.13\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "enum_dispatch",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\enum_dispatch-0.3.13\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\enum_dispatch-d34241bbad225240.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\enum_dispatch-d34241bbad225240.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\enum_dispatch-d34241bbad225240.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\enum_dispatch-d34241bbad225240.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lsm-tree@2.10.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lsm-tree-2.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lsm_tree",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lsm-tree-2.10.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "lz4"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\target\\debug\\deps\\liblsm_tree-7dad9ee8f14edf9d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: field `journal_recovery_mode` is never read\n  --> src\\config.rs:49:16\n   |\n14 | pub struct Config {\n   |            ------ field in this struct\n...\n49 |     pub(crate) journal_recovery_mode: RecoveryMode,\n   |                ^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `Config` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`Config` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(dead_code)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "dead_code",
                  "explanation": null
                },
                "level": "warning",
                "message": "field `journal_recovery_mode` is never read",
                "spans": [
                  {
                    "byte_end": 428,
                    "byte_start": 422,
                    "column_end": 18,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\config.rs",
                    "is_primary": false,
                    "label": "field in this struct",
                    "line_end": 14,
                    "line_start": 14,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 18,
                        "highlight_start": 12,
                        "text": "pub struct Config {"
                      }
                    ]
                  },
                  {
                    "byte_end": 1560,
                    "byte_start": 1539,
                    "column_end": 37,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\config.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 49,
                    "line_start": 49,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 16,
                        "text": "    pub(crate) journal_recovery_mode: RecoveryMode,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: method `outstanding_flushes` is never used\n  --> src\\stats.rs:26:12\n   |\n25 | impl Stats {\n   | ---------- method in this implementation\n26 |     pub fn outstanding_flushes(&self) -> usize {\n   |            ^^^^^^^^^^^^^^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": {
                  "code": "dead_code",
                  "explanation": null
                },
                "level": "warning",
                "message": "method `outstanding_flushes` is never used",
                "spans": [
                  {
                    "byte_end": 668,
                    "byte_start": 658,
                    "column_end": 11,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\stats.rs",
                    "is_primary": false,
                    "label": "method in this implementation",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 11,
                        "highlight_start": 1,
                        "text": "impl Stats {"
                      }
                    ]
                  },
                  {
                    "byte_end": 701,
                    "byte_start": 682,
                    "column_end": 31,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\stats.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 26,
                    "line_start": 26,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 12,
                        "text": "    pub fn outstanding_flushes(&self) -> usize {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: multiple versions for dependency `hashbrown`: 0.14.5, 0.15.4\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions\nnote: the lint level is defined here\n  --> src\\lib.rs:82:9\n   |\n82 | #![warn(clippy::multiple_crate_versions)]\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the lint level is defined here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3230,
                        "byte_start": 3199,
                        "column_end": 40,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 82,
                        "line_start": 82,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 9,
                            "text": "#![warn(clippy::multiple_crate_versions)]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::multiple_crate_versions",
                  "explanation": null
                },
                "level": "warning",
                "message": "multiple versions for dependency `hashbrown`: 0.14.5, 0.15.4",
                "spans": [
                  {
                    "byte_end": 0,
                    "byte_start": 0,
                    "column_end": 1,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1,
                    "line_start": 1,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": []
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: multiple versions for dependency `windows-sys`: 0.59.0, 0.60.2\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_crate_versions",
                  "explanation": null
                },
                "level": "warning",
                "message": "multiple versions for dependency `windows-sys`: 0.59.0, 0.60.2",
                "spans": [
                  {
                    "byte_end": 0,
                    "byte_start": 0,
                    "column_end": 1,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1,
                    "line_start": 1,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": []
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: multiple versions for dependency `windows-targets`: 0.52.6, 0.53.2\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_crate_versions",
                  "explanation": null
                },
                "level": "warning",
                "message": "multiple versions for dependency `windows-targets`: 0.52.6, 0.53.2",
                "spans": [
                  {
                    "byte_end": 0,
                    "byte_start": 0,
                    "column_end": 1,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1,
                    "line_start": 1,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": []
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: multiple versions for dependency `windows_aarch64_gnullvm`: 0.52.6, 0.53.0\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_crate_versions",
                  "explanation": null
                },
                "level": "warning",
                "message": "multiple versions for dependency `windows_aarch64_gnullvm`: 0.52.6, 0.53.0",
                "spans": [
                  {
                    "byte_end": 0,
                    "byte_start": 0,
                    "column_end": 1,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1,
                    "line_start": 1,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": []
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: multiple versions for dependency `windows_aarch64_msvc`: 0.52.6, 0.53.0\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_crate_versions",
                  "explanation": null
                },
                "level": "warning",
                "message": "multiple versions for dependency `windows_aarch64_msvc`: 0.52.6, 0.53.0",
                "spans": [
                  {
                    "byte_end": 0,
                    "byte_start": 0,
                    "column_end": 1,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1,
                    "line_start": 1,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": []
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: multiple versions for dependency `windows_i686_gnu`: 0.52.6, 0.53.0\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_crate_versions",
                  "explanation": null
                },
                "level": "warning",
                "message": "multiple versions for dependency `windows_i686_gnu`: 0.52.6, 0.53.0",
                "spans": [
                  {
                    "byte_end": 0,
                    "byte_start": 0,
                    "column_end": 1,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1,
                    "line_start": 1,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": []
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: multiple versions for dependency `windows_i686_gnullvm`: 0.52.6, 0.53.0\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_crate_versions",
                  "explanation": null
                },
                "level": "warning",
                "message": "multiple versions for dependency `windows_i686_gnullvm`: 0.52.6, 0.53.0",
                "spans": [
                  {
                    "byte_end": 0,
                    "byte_start": 0,
                    "column_end": 1,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1,
                    "line_start": 1,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": []
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: multiple versions for dependency `windows_i686_msvc`: 0.52.6, 0.53.0\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_crate_versions",
                  "explanation": null
                },
                "level": "warning",
                "message": "multiple versions for dependency `windows_i686_msvc`: 0.52.6, 0.53.0",
                "spans": [
                  {
                    "byte_end": 0,
                    "byte_start": 0,
                    "column_end": 1,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1,
                    "line_start": 1,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": []
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: multiple versions for dependency `windows_x86_64_gnu`: 0.52.6, 0.53.0\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_crate_versions",
                  "explanation": null
                },
                "level": "warning",
                "message": "multiple versions for dependency `windows_x86_64_gnu`: 0.52.6, 0.53.0",
                "spans": [
                  {
                    "byte_end": 0,
                    "byte_start": 0,
                    "column_end": 1,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1,
                    "line_start": 1,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": []
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: multiple versions for dependency `windows_x86_64_gnullvm`: 0.52.6, 0.53.0\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_crate_versions",
                  "explanation": null
                },
                "level": "warning",
                "message": "multiple versions for dependency `windows_x86_64_gnullvm`: 0.52.6, 0.53.0",
                "spans": [
                  {
                    "byte_end": 0,
                    "byte_start": 0,
                    "column_end": 1,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1,
                    "line_start": 1,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": []
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: multiple versions for dependency `windows_x86_64_msvc`: 0.52.6, 0.53.0\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_crate_versions",
                  "explanation": null
                },
                "level": "warning",
                "message": "multiple versions for dependency `windows_x86_64_msvc`: 0.52.6, 0.53.0",
                "spans": [
                  {
                    "byte_end": 0,
                    "byte_start": 0,
                    "column_end": 1,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1,
                    "line_start": 1,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": []
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: docs for function which may panic missing `# Panics` section\n   --> src\\batch\\mod.rs:92:5\n    |\n92  |     pub fn commit(mut self) -> crate::Result<()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nnote: first possible panic found here\n   --> src\\batch\\mod.rs:121:26\n    |\n121 |         let partitions = self.keyspace.partitions.read().expect(\"lock is poisoned\");\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc\nnote: the lint level is defined here\n   --> src\\lib.rs:79:9\n    |\n79  | #![warn(clippy::pedantic, clippy::nursery)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[warn(clippy::missing_panics_doc)]` implied by `#[warn(clippy::pedantic)]`\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "first possible panic found here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3661,
                        "byte_start": 3603,
                        "column_end": 84,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\batch\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 121,
                        "line_start": 121,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 84,
                            "highlight_start": 26,
                            "text": "        let partitions = self.keyspace.partitions.read().expect(\"lock is poisoned\");"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the lint level is defined here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3101,
                        "byte_start": 3085,
                        "column_end": 25,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 79,
                        "line_start": 79,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 25,
                            "highlight_start": 9,
                            "text": "#![warn(clippy::pedantic, clippy::nursery)]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::missing_panics_doc)]` implied by `#[warn(clippy::pedantic)]`",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::missing_panics_doc",
                  "explanation": null
                },
                "level": "warning",
                "message": "docs for function which may panic missing `# Panics` section",
                "spans": [
                  {
                    "byte_end": 2529,
                    "byte_start": 2485,
                    "column_end": 49,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\batch\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 92,
                    "line_start": 92,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 5,
                        "text": "    pub fn commit(mut self) -> crate::Result<()> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\batch\\mod.rs:121:26\n    |\n121 |         let partitions = self.keyspace.partitions.read().expect(\"lock is poisoned\");\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\nnote: the lint level is defined here\n   --> src\\lib.rs:80:9\n    |\n80  | #![warn(clippy::expect_used)]\n    |         ^^^^^^^^^^^^^^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the lint level is defined here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3148,
                        "byte_start": 3129,
                        "column_end": 28,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 80,
                        "line_start": 80,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 9,
                            "text": "#![warn(clippy::expect_used)]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 3661,
                    "byte_start": 3603,
                    "column_end": 84,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\batch\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 121,
                    "line_start": 121,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 84,
                        "highlight_start": 26,
                        "text": "        let partitions = self.keyspace.partitions.read().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n  --> src\\compaction\\manager.rs:54:9\n   |\n54 |         self.partitions.lock().expect(\"lock is poisoned\").clear();\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: if this value is an `Err`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 1469,
                    "byte_start": 1420,
                    "column_end": 58,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\compaction\\manager.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 54,
                    "line_start": 54,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 9,
                        "text": "        self.partitions.lock().expect(\"lock is poisoned\").clear();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n  --> src\\compaction\\manager.rs:58:24\n   |\n58 |         let mut lock = self.partitions.lock().expect(\"lock is poisoned\");\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: if this value is an `Err`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 1607,
                    "byte_start": 1558,
                    "column_end": 73,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\compaction\\manager.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 58,
                    "line_start": 58,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 73,
                        "highlight_start": 24,
                        "text": "        let mut lock = self.partitions.lock().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: temporary with significant `Drop` can be early dropped\n  --> src\\compaction\\manager.rs:67:17\n   |\n66 |       pub fn notify(&self, partition: PartitionHandle) {\n   |  ______________________________________________________-\n67 | |         let mut lock = self.partitions.lock().expect(\"lock is poisoned\");\n   | |                 ^^^^\n68 | |         lock.push_back(partition);\n69 | |         self.semaphore.release();\n70 | |     }\n   | |_____- temporary `lock` is currently being dropped at the end of its contained scope\n   |\n   = note: this might lead to unnecessary resource contention\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening\nnote: the lint level is defined here\n  --> src\\lib.rs:79:27\n   |\n79 | #![warn(clippy::pedantic, clippy::nursery)]\n   |                           ^^^^^^^^^^^^^^^\n   = note: `#[warn(clippy::significant_drop_tightening)]` implied by `#[warn(clippy::nursery)]`\nhelp: merge the temporary construction with its single usage\n   |\n67 ~         \n68 +         self.partitions.lock().expect(\"lock is poisoned\").push_back(partition);\n69 ~         \n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "this might lead to unnecessary resource contention",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the lint level is defined here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3118,
                        "byte_start": 3103,
                        "column_end": 42,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 79,
                        "line_start": 79,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 27,
                            "text": "#![warn(clippy::pedantic, clippy::nursery)]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::significant_drop_tightening)]` implied by `#[warn(clippy::nursery)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "merge the temporary construction with its single usage",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1857,
                        "byte_start": 1792,
                        "column_end": 74,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\compaction\\manager.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 67,
                        "line_start": 67,
                        "suggested_replacement": "\n        self.partitions.lock().expect(\"lock is poisoned\").push_back(partition);",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 74,
                            "highlight_start": 9,
                            "text": "        let mut lock = self.partitions.lock().expect(\"lock is poisoned\");"
                          }
                        ]
                      },
                      {
                        "byte_end": 1892,
                        "byte_start": 1866,
                        "column_end": 35,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\compaction\\manager.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 68,
                        "line_start": 68,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 9,
                            "text": "        lock.push_back(partition);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::significant_drop_tightening",
                  "explanation": null
                },
                "level": "warning",
                "message": "temporary with significant `Drop` can be early dropped",
                "spans": [
                  {
                    "byte_end": 1932,
                    "byte_start": 1782,
                    "column_end": 6,
                    "column_start": 54,
                    "expansion": null,
                    "file_name": "src\\compaction\\manager.rs",
                    "is_primary": false,
                    "label": "temporary `lock` is currently being dropped at the end of its contained scope",
                    "line_end": 70,
                    "line_start": 66,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 55,
                        "highlight_start": 54,
                        "text": "    pub fn notify(&self, partition: PartitionHandle) {"
                      },
                      {
                        "highlight_end": 74,
                        "highlight_start": 1,
                        "text": "        let mut lock = self.partitions.lock().expect(\"lock is poisoned\");"
                      },
                      {
                        "highlight_end": 35,
                        "highlight_start": 1,
                        "text": "        lock.push_back(partition);"
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "        self.semaphore.release();"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      }
                    ]
                  },
                  {
                    "byte_end": 1804,
                    "byte_start": 1800,
                    "column_end": 21,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\compaction\\manager.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 67,
                    "line_start": 67,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 17,
                        "text": "        let mut lock = self.partitions.lock().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n  --> src\\compaction\\manager.rs:67:24\n   |\n67 |         let mut lock = self.partitions.lock().expect(\"lock is poisoned\");\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: if this value is an `Err`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 1856,
                    "byte_start": 1807,
                    "column_end": 73,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\compaction\\manager.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 67,
                    "line_start": 67,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 73,
                        "highlight_start": 24,
                        "text": "        let mut lock = self.partitions.lock().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n  --> src\\compaction\\manager.rs:77:24\n   |\n77 |         let mut lock = self.partitions.lock().expect(\"lock is poisoned\");\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: if this value is an `Err`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 2131,
                    "byte_start": 2082,
                    "column_end": 73,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\compaction\\manager.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 77,
                    "line_start": 77,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 73,
                        "highlight_start": 24,
                        "text": "        let mut lock = self.partitions.lock().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this argument is passed by value, but not consumed in the function body\n   --> src\\config.rs:151:47\n    |\n151 |     pub fn block_cache(mut self, block_cache: Arc<crate::BlockCache>) -> Self {\n    |                                               ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value\n    = note: `#[warn(clippy::needless_pass_by_value)]` implied by `#[warn(clippy::pedantic)]`\nhelp: consider taking a reference instead\n    |\n151 |     pub fn block_cache(mut self, block_cache: &Arc<crate::BlockCache>) -> Self {\n    |                                               +\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_pass_by_value)]` implied by `#[warn(clippy::pedantic)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider taking a reference instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4530,
                        "byte_start": 4530,
                        "column_end": 47,
                        "column_start": 47,
                        "expansion": null,
                        "file_name": "src\\config.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 151,
                        "line_start": 151,
                        "suggested_replacement": "&",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 47,
                            "text": "    pub fn block_cache(mut self, block_cache: Arc<crate::BlockCache>) -> Self {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_pass_by_value",
                  "explanation": null
                },
                "level": "warning",
                "message": "this argument is passed by value, but not consumed in the function body",
                "spans": [
                  {
                    "byte_end": 4552,
                    "byte_start": 4530,
                    "column_end": 69,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\config.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 151,
                    "line_start": 151,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 69,
                        "highlight_start": 47,
                        "text": "    pub fn block_cache(mut self, block_cache: Arc<crate::BlockCache>) -> Self {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this argument is passed by value, but not consumed in the function body\n   --> src\\config.rs:164:45\n    |\n164 |     pub fn blob_cache(mut self, blob_cache: Arc<crate::BlobCache>) -> Self {\n    |                                             ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value\nhelp: consider taking a reference instead\n    |\n164 |     pub fn blob_cache(mut self, blob_cache: &Arc<crate::BlobCache>) -> Self {\n    |                                             +\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider taking a reference instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4967,
                        "byte_start": 4967,
                        "column_end": 45,
                        "column_start": 45,
                        "expansion": null,
                        "file_name": "src\\config.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 164,
                        "line_start": 164,
                        "suggested_replacement": "&",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 45,
                            "text": "    pub fn blob_cache(mut self, blob_cache: Arc<crate::BlobCache>) -> Self {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_pass_by_value",
                  "explanation": null
                },
                "level": "warning",
                "message": "this argument is passed by value, but not consumed in the function body",
                "spans": [
                  {
                    "byte_end": 4988,
                    "byte_start": 4967,
                    "column_end": 66,
                    "column_start": 45,
                    "expansion": null,
                    "file_name": "src\\config.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 164,
                    "line_start": 164,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 45,
                        "text": "    pub fn blob_cache(mut self, blob_cache: Arc<crate::BlobCache>) -> Self {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this match arm has an identical body to another arm\n  --> src\\error.rs:81:13\n   |\n81 |             Self::InvalidVersion(_) => None,\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: try changing either arm body\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\n   = note: `#[warn(clippy::match_same_arms)]` implied by `#[warn(clippy::pedantic)]`\nhelp: or try merging the arm patterns and removing the obsolete arm\n   |\n81 ~             Self::InvalidVersion(_) | Self::Poisoned => None,\n82 ~             Self::PartitionDeleted => None,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try changing either arm body",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::match_same_arms)]` implied by `#[warn(clippy::pedantic)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or try merging the arm patterns and removing the obsolete arm",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2238,
                        "byte_start": 2215,
                        "column_end": 36,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\error.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 81,
                        "line_start": 81,
                        "suggested_replacement": "Self::InvalidVersion(_) | Self::Poisoned",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 13,
                            "text": "            Self::InvalidVersion(_) => None,"
                          }
                        ]
                      },
                      {
                        "byte_end": 2296,
                        "byte_start": 2260,
                        "column_end": 13,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\error.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 83,
                        "line_start": 82,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 13,
                            "text": "            Self::Poisoned => None,"
                          },
                          {
                            "highlight_end": 13,
                            "highlight_start": 1,
                            "text": "            Self::PartitionDeleted => None,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::match_same_arms",
                  "explanation": null
                },
                "level": "warning",
                "message": "this match arm has an identical body to another arm",
                "spans": [
                  {
                    "byte_end": 2246,
                    "byte_start": 2215,
                    "column_end": 44,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\error.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 81,
                    "line_start": 81,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 44,
                        "highlight_start": 13,
                        "text": "            Self::InvalidVersion(_) => None,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this match arm has an identical body to another arm\n  --> src\\error.rs:81:13\n   |\n81 |             Self::InvalidVersion(_) => None,\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: try changing either arm body\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nhelp: or try merging the arm patterns and removing the obsolete arm\n   |\n81 ~             Self::InvalidVersion(_) | Self::PartitionDeleted => None,\n82 |             Self::Poisoned => None,\n83 ~             }\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try changing either arm body",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or try merging the arm patterns and removing the obsolete arm",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2238,
                        "byte_start": 2215,
                        "column_end": 36,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\error.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 81,
                        "line_start": 81,
                        "suggested_replacement": "Self::InvalidVersion(_) | Self::PartitionDeleted",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 13,
                            "text": "            Self::InvalidVersion(_) => None,"
                          }
                        ]
                      },
                      {
                        "byte_end": 2336,
                        "byte_start": 2296,
                        "column_end": 9,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\error.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 84,
                        "line_start": 83,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 13,
                            "text": "            Self::PartitionDeleted => None,"
                          },
                          {
                            "highlight_end": 9,
                            "highlight_start": 1,
                            "text": "        }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::match_same_arms",
                  "explanation": null
                },
                "level": "warning",
                "message": "this match arm has an identical body to another arm",
                "spans": [
                  {
                    "byte_end": 2246,
                    "byte_start": 2215,
                    "column_end": 44,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\error.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 81,
                    "line_start": 81,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 44,
                        "highlight_start": 13,
                        "text": "            Self::InvalidVersion(_) => None,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this match arm has an identical body to another arm\n  --> src\\error.rs:82:13\n   |\n82 |             Self::Poisoned => None,\n   |             ^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: try changing either arm body\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nhelp: or try merging the arm patterns and removing the obsolete arm\n   |\n82 ~             Self::Poisoned | Self::PartitionDeleted => None,\n83 ~             }\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try changing either arm body",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or try merging the arm patterns and removing the obsolete arm",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2274,
                        "byte_start": 2260,
                        "column_end": 27,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\error.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 82,
                        "line_start": 82,
                        "suggested_replacement": "Self::Poisoned | Self::PartitionDeleted",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 13,
                            "text": "            Self::Poisoned => None,"
                          }
                        ]
                      },
                      {
                        "byte_end": 2336,
                        "byte_start": 2296,
                        "column_end": 9,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\error.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 84,
                        "line_start": 83,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 13,
                            "text": "            Self::PartitionDeleted => None,"
                          },
                          {
                            "highlight_end": 9,
                            "highlight_start": 1,
                            "text": "        }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::match_same_arms",
                  "explanation": null
                },
                "level": "warning",
                "message": "this match arm has an identical body to another arm",
                "spans": [
                  {
                    "byte_end": 2282,
                    "byte_start": 2260,
                    "column_end": 35,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\error.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 82,
                    "line_start": 82,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 13,
                        "text": "            Self::Poisoned => None,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this function's return value is unnecessary\n  --> src\\file.rs:34:1\n   |\n34 | / pub fn fsync_directory<P: AsRef<Path>>(_path: P) -> std::io::Result<()> {\n35 | |     // Cannot fsync directory on Windows\n36 | |     Ok(())\n37 | | }\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps\n   = note: `#[warn(clippy::unnecessary_wraps)]` implied by `#[warn(clippy::pedantic)]`\nhelp: remove the return type...\n   |\n34 - pub fn fsync_directory<P: AsRef<Path>>(_path: P) -> std::io::Result<()> {\n34 + pub fn fsync_directory<P: AsRef<Path>>(_path: P) -> () {\n   |\nhelp: ...and then remove returned values\n   |\n36 -     Ok(())\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::unnecessary_wraps)]` implied by `#[warn(clippy::pedantic)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "remove the return type...",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1080,
                        "byte_start": 1061,
                        "column_end": 72,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "src\\file.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 34,
                        "line_start": 34,
                        "suggested_replacement": "()",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 72,
                            "highlight_start": 53,
                            "text": "pub fn fsync_directory<P: AsRef<Path>>(_path: P) -> std::io::Result<()> {"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "...and then remove returned values",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1134,
                        "byte_start": 1128,
                        "column_end": 11,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\file.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 36,
                        "line_start": 36,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 11,
                            "highlight_start": 5,
                            "text": "    Ok(())"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_wraps",
                  "explanation": null
                },
                "level": "warning",
                "message": "this function's return value is unnecessary",
                "spans": [
                  {
                    "byte_end": 1136,
                    "byte_start": 1009,
                    "column_end": 2,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\file.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 37,
                    "line_start": 34,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 74,
                        "highlight_start": 1,
                        "text": "pub fn fsync_directory<P: AsRef<Path>>(_path: P) -> std::io::Result<()> {"
                      },
                      {
                        "highlight_end": 41,
                        "highlight_start": 1,
                        "text": "    // Cannot fsync directory on Windows"
                      },
                      {
                        "highlight_end": 11,
                        "highlight_start": 1,
                        "text": "    Ok(())"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on an `Option` value\n  --> src\\flush\\worker.rs:70:33\n   |\n70 |                   let partition = tasks\n   |  _________________________________^\n71 | |                     .first()\n72 | |                     .expect(\"should always have at least one task\")\n   | |___________________________________________________________________^\n   |\n   = note: if this value is `None`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is `None`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on an `Option` value",
                "spans": [
                  {
                    "byte_end": 2470,
                    "byte_start": 2368,
                    "column_end": 68,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\flush\\worker.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 72,
                    "line_start": 70,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 33,
                        "text": "                let partition = tasks"
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "                    .first()"
                      },
                      {
                        "highlight_end": 68,
                        "highlight_start": 1,
                        "text": "                    .expect(\"should always have at least one task\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n  --> src\\flush\\worker.rs:92:30\n   |\n92 |                     .map(|t| t.join().expect(\"should join\"))\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: if this value is an `Err`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 3215,
                    "byte_start": 3185,
                    "column_end": 60,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\flush\\worker.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 92,
                    "line_start": 92,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 30,
                        "text": "                    .map(|t| t.join().expect(\"should join\"))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\flush\\worker.rs:106:18\n    |\n106 |         .map(|t| t.join().expect(\"should join\"))\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 3635,
                    "byte_start": 3605,
                    "column_end": 48,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "src\\flush\\worker.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 106,
                    "line_start": 106,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 18,
                        "text": "        .map(|t| t.join().expect(\"should join\"))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: temporary with significant `Drop` can be early dropped\n   --> src\\flush\\worker.rs:148:25\n    |\n139 |               }) => {\n    |  ___________________-\n140 | |                 // IMPORTANT: Flushed segments need to be applied *atomically* into the tree\n141 | |                 // otherwise we could cover up an unwritten journal, which will result in data loss\n142 | |                 if let Err(e) = partition.tree.register_segments(&created_segments) {\n...   |\n148 | |                 let mut flush_manager = flush_manager.write().expect(\"lock is poisoned\");\n    | |                         ^^^^^^^^^^^^^\n...   |\n169 | |                     .fetch_add(created_segments.len(), std::sync::atomic::Ordering::Relaxed);\n170 | |             }\n    | |_____________- temporary `flush_manager` is currently being dropped at the end of its contained scope\n    |\n    = note: this might lead to unnecessary resource contention\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening\nhelp: merge the temporary construction with its single usage\n    |\n148 ~                 \n149 +                 flush_manager.write().expect(\"lock is poisoned\").dequeue_tasks(partition.name.clone(), created_segments.len());\n150 |\n...\n155 |                 );\n156 ~                 \n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "this might lead to unnecessary resource contention",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "merge the temporary construction with its single usage",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5257,
                        "byte_start": 5184,
                        "column_end": 90,
                        "column_start": 17,
                        "expansion": null,
                        "file_name": "src\\flush\\worker.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 148,
                        "line_start": 148,
                        "suggested_replacement": "\n                flush_manager.write().expect(\"lock is poisoned\").dequeue_tasks(partition.name.clone(), created_segments.len());",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 90,
                            "highlight_start": 17,
                            "text": "                let mut flush_manager = flush_manager.write().expect(\"lock is poisoned\");"
                          }
                        ]
                      },
                      {
                        "byte_end": 5534,
                        "byte_start": 5458,
                        "column_end": 93,
                        "column_start": 17,
                        "expansion": null,
                        "file_name": "src\\flush\\worker.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 155,
                        "line_start": 155,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 93,
                            "highlight_start": 17,
                            "text": "                flush_manager.dequeue_tasks(partition.name.clone(), created_segments.len());"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::significant_drop_tightening",
                  "explanation": null
                },
                "level": "warning",
                "message": "temporary with significant `Drop` can be early dropped",
                "spans": [
                  {
                    "byte_end": 6051,
                    "byte_start": 4677,
                    "column_end": 14,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "src\\flush\\worker.rs",
                    "is_primary": false,
                    "label": "temporary `flush_manager` is currently being dropped at the end of its contained scope",
                    "line_end": 170,
                    "line_start": 139,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 19,
                        "text": "            }) => {"
                      },
                      {
                        "highlight_end": 93,
                        "highlight_start": 1,
                        "text": "                // IMPORTANT: Flushed segments need to be applied *atomically* into the tree"
                      },
                      {
                        "highlight_end": 100,
                        "highlight_start": 1,
                        "text": "                // otherwise we could cover up an unwritten journal, which will result in data loss"
                      },
                      {
                        "highlight_end": 86,
                        "highlight_start": 1,
                        "text": "                if let Err(e) = partition.tree.register_segments(&created_segments) {"
                      },
                      {
                        "highlight_end": 71,
                        "highlight_start": 1,
                        "text": "                    log::error!(\"Failed to register segments: {e:?}\");"
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                    return Err(e.into());"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 78,
                        "highlight_start": 1,
                        "text": "                log::debug!(\"write locking flush manager to submit results\");"
                      },
                      {
                        "highlight_end": 90,
                        "highlight_start": 1,
                        "text": "                let mut flush_manager = flush_manager.write().expect(\"lock is poisoned\");"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "                log::debug!("
                      },
                      {
                        "highlight_end": 55,
                        "highlight_start": 1,
                        "text": "                    \"Dequeuing flush tasks: {} => {}\","
                      },
                      {
                        "highlight_end": 36,
                        "highlight_start": 1,
                        "text": "                    partition.name,"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "                    created_segments.len(),"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                );"
                      },
                      {
                        "highlight_end": 93,
                        "highlight_start": 1,
                        "text": "                flush_manager.dequeue_tasks(partition.name.clone(), created_segments.len());"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 59,
                        "highlight_start": 1,
                        "text": "                write_buffer_manager.free(memtables_size);"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                for _ in 0..parallelism {"
                      },
                      {
                        "highlight_end": 66,
                        "highlight_start": 1,
                        "text": "                    compaction_manager.notify(partition.clone());"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "                stats"
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "                    .flushes_completed"
                      },
                      {
                        "highlight_end": 94,
                        "highlight_start": 1,
                        "text": "                    .fetch_add(created_segments.len(), std::sync::atomic::Ordering::Relaxed);"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                partition"
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "                    .flushes_completed"
                      },
                      {
                        "highlight_end": 94,
                        "highlight_start": 1,
                        "text": "                    .fetch_add(created_segments.len(), std::sync::atomic::Ordering::Relaxed);"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            }"
                      }
                    ]
                  },
                  {
                    "byte_end": 5205,
                    "byte_start": 5192,
                    "column_end": 38,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\flush\\worker.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 148,
                    "line_start": 148,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 25,
                        "text": "                let mut flush_manager = flush_manager.write().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\flush\\worker.rs:122:18\n    |\n122 |     let mut fm = flush_manager.write().expect(\"lock is poisoned\");\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 4146,
                    "byte_start": 4098,
                    "column_end": 66,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "src\\flush\\worker.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 122,
                    "line_start": 122,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 18,
                        "text": "    let mut fm = flush_manager.write().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\flush\\worker.rs:148:41\n    |\n148 |                 let mut flush_manager = flush_manager.write().expect(\"lock is poisoned\");\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 5256,
                    "byte_start": 5208,
                    "column_end": 89,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "src\\flush\\worker.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 148,
                    "line_start": 148,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 89,
                        "highlight_start": 41,
                        "text": "                let mut flush_manager = flush_manager.write().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: temporary with significant `Drop` in `if let` scrutinee will live until the end of the `if let` expression\n   --> src\\flush\\worker.rs:179:21\n    |\n179 |       if let Err(e) = journal_manager\n    |  _____________________^\n180 | |         .write()\n181 | |         .expect(\"lock is poisoned\")\n182 | |         .maintenance()\n    | |______________________^\n...\n186 |       }\n    |        - temporary lives until here\n    |\n    = note: this might lead to deadlocks or other unexpected behavior\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_in_scrutinee\n    = note: `#[warn(clippy::significant_drop_in_scrutinee)]` implied by `#[warn(clippy::nursery)]`\nhelp: try moving the temporary above the match\n    |\n179 ~     let value = journal_manager\n180 +         .write()\n181 +         .expect(\"lock is poisoned\")\n182 +         .maintenance();\n183 ~     if let Err(e) = value\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "this might lead to deadlocks or other unexpected behavior",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_in_scrutinee",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::significant_drop_in_scrutinee)]` implied by `#[warn(clippy::nursery)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try moving the temporary above the match",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6267,
                        "byte_start": 6267,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\flush\\worker.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 179,
                        "line_start": 179,
                        "suggested_replacement": "let value = journal_manager\n        .write()\n        .expect(\"lock is poisoned\")\n        .maintenance();\n    ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "    if let Err(e) = journal_manager"
                          }
                        ]
                      },
                      {
                        "byte_end": 6374,
                        "byte_start": 6283,
                        "column_end": 23,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\flush\\worker.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 182,
                        "line_start": 179,
                        "suggested_replacement": "value",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 21,
                            "text": "    if let Err(e) = journal_manager"
                          },
                          {
                            "highlight_end": 17,
                            "highlight_start": 1,
                            "text": "        .write()"
                          },
                          {
                            "highlight_end": 36,
                            "highlight_start": 1,
                            "text": "        .expect(\"lock is poisoned\")"
                          },
                          {
                            "highlight_end": 23,
                            "highlight_start": 1,
                            "text": "        .maintenance()"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::significant_drop_in_scrutinee",
                  "explanation": null
                },
                "level": "warning",
                "message": "temporary with significant `Drop` in `if let` scrutinee will live until the end of the `if let` expression",
                "spans": [
                  {
                    "byte_end": 6458,
                    "byte_start": 6458,
                    "column_end": 6,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\flush\\worker.rs",
                    "is_primary": false,
                    "label": "temporary lives until here",
                    "line_end": 186,
                    "line_start": 186,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 6,
                        "highlight_start": 6,
                        "text": "    }"
                      }
                    ]
                  },
                  {
                    "byte_end": 6374,
                    "byte_start": 6283,
                    "column_end": 23,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\flush\\worker.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 182,
                    "line_start": 179,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 21,
                        "text": "    if let Err(e) = journal_manager"
                      },
                      {
                        "highlight_end": 17,
                        "highlight_start": 1,
                        "text": "        .write()"
                      },
                      {
                        "highlight_end": 36,
                        "highlight_start": 1,
                        "text": "        .expect(\"lock is poisoned\")"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "        .maintenance()"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\flush\\worker.rs:179:21\n    |\n179 |       if let Err(e) = journal_manager\n    |  _____________________^\n180 | |         .write()\n181 | |         .expect(\"lock is poisoned\")\n    | |___________________________________^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 6351,
                    "byte_start": 6283,
                    "column_end": 36,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\flush\\worker.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 181,
                    "line_start": 179,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 21,
                        "text": "    if let Err(e) = journal_manager"
                      },
                      {
                        "highlight_end": 17,
                        "highlight_start": 1,
                        "text": "        .write()"
                      },
                      {
                        "highlight_end": 36,
                        "highlight_start": 1,
                        "text": "        .expect(\"lock is poisoned\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `write!` args\n  --> src\\journal\\manager.rs:34:13\n   |\n34 |             self.path, self.watermarks\n   |             ^^^^^^^^^\n   |\n   = help: use `Display` formatting and change this to `self.path.display()`\n   = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n   = note: `#[warn(clippy::unnecessary_debug_formatting)]` implied by `#[warn(clippy::pedantic)]`\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `self.path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::unnecessary_debug_formatting)]` implied by `#[warn(clippy::pedantic)]`",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `write!` args",
                "spans": [
                  {
                    "byte_end": 1016,
                    "byte_start": 1007,
                    "column_end": 22,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\journal\\manager.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 34,
                    "line_start": 34,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 22,
                        "highlight_start": 13,
                        "text": "            self.path, self.watermarks"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `trace!` args\n   --> src\\journal\\manager.rs:135:67\n    |\n135 |             log::trace!(\"Removing fully flushed journal at {:?}\", item.path);\n    |                                                                   ^^^^^^^^^\n    |\n    = help: use `Display` formatting and change this to `item.path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `item.path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `trace!` args",
                "spans": [
                  {
                    "byte_end": 4549,
                    "byte_start": 4540,
                    "column_end": 76,
                    "column_start": 67,
                    "expansion": null,
                    "file_name": "src\\journal\\manager.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 135,
                    "line_start": 135,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 76,
                        "highlight_start": 67,
                        "text": "            log::trace!(\"Removing fully flushed journal at {:?}\", item.path);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `error!` args\n   --> src\\journal\\manager.rs:139:21\n    |\n139 |                     item.path,\n    |                     ^^^^^^^^^\n    |\n    = help: use `Display` formatting and change this to `item.path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `item.path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `error!` args",
                "spans": [
                  {
                    "byte_end": 4749,
                    "byte_start": 4740,
                    "column_end": 30,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\journal\\manager.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 139,
                    "line_start": 139,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 21,
                        "text": "                    item.path,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on an `Option` value\n  --> src\\journal\\recovery.rs:35:24\n   |\n35 |         let filename = filename.to_str().expect(\"should be utf-8\");\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: if this value is `None`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is `None`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on an `Option` value",
                "spans": [
                  {
                    "byte_end": 1025,
                    "byte_start": 982,
                    "column_end": 67,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\journal\\recovery.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 35,
                    "line_start": 35,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 67,
                        "highlight_start": 24,
                        "text": "        let filename = filename.to_str().expect(\"should be utf-8\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n  --> src\\journal\\recovery.rs:37:26\n   |\n37 |           let journal_id = filename\n   |  __________________________^\n38 | |             .strip_suffix(\".sealed\") // TODO: 3.0.0 remove in V3\n39 | |             .unwrap_or(filename)\n40 | |             .parse::<JournalId>()\n...  |\n43 | |             })\n44 | |             .expect(\"should be a valid journal file name\");\n   | |__________________________________________________________^\n   |\n   = note: if this value is an `Err`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 1385,
                    "byte_start": 1053,
                    "column_end": 59,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\journal\\recovery.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 44,
                    "line_start": 37,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 26,
                        "text": "        let journal_id = filename"
                      },
                      {
                        "highlight_end": 65,
                        "highlight_start": 1,
                        "text": "            .strip_suffix(\".sealed\") // TODO: 3.0.0 remove in V3"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "            .unwrap_or(filename)"
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "            .parse::<JournalId>()"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "            .inspect_err(|e| {"
                      },
                      {
                        "highlight_end": 87,
                        "highlight_start": 1,
                        "text": "                log::error!(\"found an invalid journal file name {filename:?}: {e:?}\");"
                      },
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "            })"
                      },
                      {
                        "highlight_end": 59,
                        "highlight_start": 1,
                        "text": "            .expect(\"should be a valid journal file name\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `debug!` args\n  --> src\\journal\\writer.rs:57:13\n   |\n57 |             self.path,\n   |             ^^^^^^^^^\n   |\n   = help: use `Display` formatting and change this to `self.path.display()`\n   = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `self.path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `debug!` args",
                "spans": [
                  {
                    "byte_end": 1750,
                    "byte_start": 1741,
                    "column_end": 22,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\journal\\writer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 57,
                    "line_start": 57,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 22,
                        "highlight_start": 13,
                        "text": "            self.path,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `error!` args\n  --> src\\journal\\writer.rs:63:25\n   |\n63 |                         self.path\n   |                         ^^^^^^^^^\n   |\n   = help: use `Display` formatting and change this to `self.path.display()`\n   = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `self.path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `error!` args",
                "spans": [
                  {
                    "byte_end": 1989,
                    "byte_start": 1980,
                    "column_end": 34,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\journal\\writer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 63,
                    "line_start": 63,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 25,
                        "text": "                        self.path"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on an `Option` value\n  --> src\\journal\\writer.rs:71:22\n   |\n71 |           let folder = self\n   |  ______________________^\n72 | |             .path\n73 | |             .parent()\n74 | |             .expect(\"should have parent\")\n   | |_________________________________________^\n   |\n   = note: if this value is `None`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is `None`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on an `Option` value",
                "spans": [
                  {
                    "byte_end": 2220,
                    "byte_start": 2134,
                    "column_end": 42,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\journal\\writer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 74,
                    "line_start": 71,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 22,
                        "text": "        let folder = self"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "            .path"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "            .parent()"
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "            .expect(\"should have parent\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n  --> src\\journal\\writer.rs:77:26\n   |\n77 |           let journal_id = self\n   |  __________________________^\n78 | |             .path\n79 | |             .file_name()\n80 | |             .expect(\"should be valid file name\")\n...  |\n83 | |             .parse::<JournalId>()\n84 | |             .expect(\"should be valid journal ID\");\n   | |_________________________________________________^\n   |\n   = note: if this value is an `Err`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 2534,
                    "byte_start": 2275,
                    "column_end": 50,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\journal\\writer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 84,
                    "line_start": 77,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "        let journal_id = self"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "            .path"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "            .file_name()"
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "            .expect(\"should be valid file name\")"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "            .to_str()"
                      },
                      {
                        "highlight_end": 57,
                        "highlight_start": 1,
                        "text": "            .expect(\"should be valid journal file name\")"
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "            .parse::<JournalId>()"
                      },
                      {
                        "highlight_end": 50,
                        "highlight_start": 1,
                        "text": "            .expect(\"should be valid journal ID\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on an `Option` value\n  --> src\\journal\\writer.rs:77:26\n   |\n77 |           let journal_id = self\n   |  __________________________^\n78 | |             .path\n79 | |             .file_name()\n80 | |             .expect(\"should be valid file name\")\n81 | |             .to_str()\n82 | |             .expect(\"should be valid journal file name\")\n   | |________________________________________________________^\n   |\n   = note: if this value is `None`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is `None`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on an `Option` value",
                "spans": [
                  {
                    "byte_end": 2450,
                    "byte_start": 2275,
                    "column_end": 57,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\journal\\writer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 82,
                    "line_start": 77,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "        let journal_id = self"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "            .path"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "            .file_name()"
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "            .expect(\"should be valid file name\")"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "            .to_str()"
                      },
                      {
                        "highlight_end": 57,
                        "highlight_start": 1,
                        "text": "            .expect(\"should be valid journal file name\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on an `Option` value\n  --> src\\journal\\writer.rs:77:26\n   |\n77 |           let journal_id = self\n   |  __________________________^\n78 | |             .path\n79 | |             .file_name()\n80 | |             .expect(\"should be valid file name\")\n   | |________________________________________________^\n   |\n   = note: if this value is `None`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is `None`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on an `Option` value",
                "spans": [
                  {
                    "byte_end": 2371,
                    "byte_start": 2275,
                    "column_end": 49,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\journal\\writer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 80,
                    "line_start": 77,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "        let journal_id = self"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "            .path"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "            .file_name()"
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "            .expect(\"should be valid file name\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `debug!` args\n  --> src\\journal\\writer.rs:87:50\n   |\n87 |         log::debug!(\"Rotating active journal to {new_path:?}\");\n   |                                                  ^^^^^^^^\n   |\n   = help: use `Display` formatting and change this to `new_path.display()`\n   = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `new_path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `debug!` args",
                "spans": [
                  {
                    "byte_end": 2660,
                    "byte_start": 2652,
                    "column_end": 58,
                    "column_start": 50,
                    "expansion": null,
                    "file_name": "src\\journal\\writer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 87,
                    "line_start": 87,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 50,
                        "text": "        log::debug!(\"Rotating active journal to {new_path:?}\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `error!` args\n   --> src\\journal\\writer.rs:101:60\n    |\n101 |             log::error!(\"Failed to create journal file at {path:?}: {e:?}\");\n    |                                                            ^^^^\n    |\n    = help: use `Display` formatting and change this to `path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `error!` args",
                "spans": [
                  {
                    "byte_end": 3069,
                    "byte_start": 3065,
                    "column_end": 64,
                    "column_start": 60,
                    "expansion": null,
                    "file_name": "src\\journal\\writer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 101,
                    "line_start": 101,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 64,
                        "highlight_start": 60,
                        "text": "            log::error!(\"Failed to create journal file at {path:?}: {e:?}\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `error!` args\n   --> src\\journal\\writer.rs:106:80\n    |\n106 |                 \"Failed to set journal file size to {PRE_ALLOCATED_BYTES}B at {path:?}: {e:?}\"\n    |                                                                                ^^^^\n    |\n    = help: use `Display` formatting and change this to `path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `error!` args",
                "spans": [
                  {
                    "byte_end": 3265,
                    "byte_start": 3261,
                    "column_end": 84,
                    "column_start": 80,
                    "expansion": null,
                    "file_name": "src\\journal\\writer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 106,
                    "line_start": 106,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 84,
                        "highlight_start": 80,
                        "text": "                \"Failed to set journal file size to {PRE_ALLOCATED_BYTES}B at {path:?}: {e:?}\""
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `error!` args\n   --> src\\journal\\writer.rs:111:59\n    |\n111 |             log::error!(\"Failed to fsync journal file at {path:?}: {e:?}\");\n    |                                                           ^^^^\n    |\n    = help: use `Display` formatting and change this to `path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `error!` args",
                "spans": [
                  {
                    "byte_end": 3410,
                    "byte_start": 3406,
                    "column_end": 63,
                    "column_start": 59,
                    "expansion": null,
                    "file_name": "src\\journal\\writer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 111,
                    "line_start": 111,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 63,
                        "highlight_start": 59,
                        "text": "            log::error!(\"Failed to fsync journal file at {path:?}: {e:?}\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `error!` args\n   --> src\\journal\\writer.rs:131:68\n    |\n131 |                     log::error!(\"Failed to create journal file at {path:?}: {e:?}\");\n    |                                                                    ^^^^\n    |\n    = help: use `Display` formatting and change this to `path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `error!` args",
                "spans": [
                  {
                    "byte_end": 3975,
                    "byte_start": 3971,
                    "column_end": 72,
                    "column_start": 68,
                    "expansion": null,
                    "file_name": "src\\journal\\writer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 131,
                    "line_start": 131,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 68,
                        "text": "                    log::error!(\"Failed to create journal file at {path:?}: {e:?}\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `error!` args\n   --> src\\journal\\writer.rs:136:84\n    |\n136 |                     \"Failed to set journal file size to {PRE_ALLOCATED_BYTES}B at {path:?}: {e:?}\"\n    |                                                                                    ^^^^\n    |\n    = help: use `Display` formatting and change this to `path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `error!` args",
                "spans": [
                  {
                    "byte_end": 4191,
                    "byte_start": 4187,
                    "column_end": 88,
                    "column_start": 84,
                    "expansion": null,
                    "file_name": "src\\journal\\writer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 136,
                    "line_start": 136,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 88,
                        "highlight_start": 84,
                        "text": "                    \"Failed to set journal file size to {PRE_ALLOCATED_BYTES}B at {path:?}: {e:?}\""
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `error!` args\n   --> src\\journal\\writer.rs:141:63\n    |\n141 |                 log::error!(\"Failed to fsync journal file at {path:?}: {e:?}\");\n    |                                                               ^^^^\n    |\n    = help: use `Display` formatting and change this to `path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `error!` args",
                "spans": [
                  {
                    "byte_end": 4352,
                    "byte_start": 4348,
                    "column_end": 67,
                    "column_start": 63,
                    "expansion": null,
                    "file_name": "src\\journal\\writer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 141,
                    "line_start": 141,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 67,
                        "highlight_start": 63,
                        "text": "                log::error!(\"Failed to fsync journal file at {path:?}: {e:?}\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `error!` args\n   --> src\\journal\\writer.rs:156:62\n    |\n156 |                 log::error!(\"Failed to open journal file at {path:?}: {e:?}\");\n    |                                                              ^^^^\n    |\n    = help: use `Display` formatting and change this to `path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `error!` args",
                "spans": [
                  {
                    "byte_end": 4808,
                    "byte_start": 4804,
                    "column_end": 66,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "src\\journal\\writer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 156,
                    "line_start": 156,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 62,
                        "text": "                log::error!(\"Failed to open journal file at {path:?}: {e:?}\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `trace!` args\n   --> src\\journal\\writer.rs:169:70\n    |\n169 |         log::trace!(\"Persisting journal at {:?} with mode={mode:?}\", self.path);\n    |                                                                      ^^^^^^^^^\n    |\n    = help: use `Display` formatting and change this to `self.path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `self.path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `trace!` args",
                "spans": [
                  {
                    "byte_end": 5238,
                    "byte_start": 5229,
                    "column_end": 79,
                    "column_start": 70,
                    "expansion": null,
                    "file_name": "src\\journal\\writer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 169,
                    "line_start": 169,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 79,
                        "highlight_start": 70,
                        "text": "        log::trace!(\"Persisting journal at {:?} with mode={mode:?}\", self.path);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `error!` args\n   --> src\\journal\\writer.rs:175:21\n    |\n175 |                     self.path\n    |                     ^^^^^^^^^\n    |\n    = help: use `Display` formatting and change this to `self.path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `self.path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `error!` args",
                "spans": [
                  {
                    "byte_end": 5455,
                    "byte_start": 5446,
                    "column_end": 30,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\journal\\writer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 175,
                    "line_start": 175,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 21,
                        "text": "                    self.path"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `error!` args\n   --> src\\journal\\writer.rs:183:76\n    |\n183 |                 log::error!(\"Failed to fsync journal file at {:?}: {e:?}\", self.path);\n    |                                                                            ^^^^^^^^^\n    |\n    = help: use `Display` formatting and change this to `self.path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `self.path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `error!` args",
                "spans": [
                  {
                    "byte_end": 5735,
                    "byte_start": 5726,
                    "column_end": 85,
                    "column_start": 76,
                    "expansion": null,
                    "file_name": "src\\journal\\writer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 183,
                    "line_start": 183,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 85,
                        "highlight_start": 76,
                        "text": "                log::error!(\"Failed to fsync journal file at {:?}: {e:?}\", self.path);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `error!` args\n   --> src\\journal\\writer.rs:186:80\n    |\n186 |                 log::error!(\"Failed to fsyncdata journal file at {:?}: {e:?}\", self.path);\n    |                                                                                ^^^^^^^^^\n    |\n    = help: use `Display` formatting and change this to `self.path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `self.path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `error!` args",
                "spans": [
                  {
                    "byte_end": 5929,
                    "byte_start": 5920,
                    "column_end": 89,
                    "column_start": 80,
                    "expansion": null,
                    "file_name": "src\\journal\\writer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 186,
                    "line_start": 186,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 89,
                        "highlight_start": 80,
                        "text": "                log::error!(\"Failed to fsyncdata journal file at {:?}: {e:?}\", self.path);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `write!` args\n  --> src\\journal\\mod.rs:30:27\n   |\n30 |         write!(f, \"{:?}\", self.path())\n   |                           ^^^^^^^^^^^\n   |\n   = help: use `Display` formatting and change this to `self.path().display()`\n   = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `self.path().display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `write!` args",
                "spans": [
                  {
                    "byte_end": 753,
                    "byte_start": 742,
                    "column_end": 38,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\journal\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 30,
                    "line_start": 30,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 27,
                        "text": "        write!(f, \"{:?}\", self.path())"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `trace!` args\n  --> src\\journal\\mod.rs:61:47\n   |\n61 |         log::trace!(\"Creating new journal at {path:?}\");\n   |                                               ^^^^\n   |\n   = help: use `Display` formatting and change this to `path.display()`\n   = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `trace!` args",
                "spans": [
                  {
                    "byte_end": 1566,
                    "byte_start": 1562,
                    "column_end": 51,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\journal\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 61,
                    "line_start": 61,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 47,
                        "text": "        log::trace!(\"Creating new journal at {path:?}\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on an `Option` value\n  --> src\\journal\\mod.rs:63:22\n   |\n63 |         let folder = path.parent().expect(\"parent should exist\");\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: if this value is `None`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is `None`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on an `Option` value",
                "spans": [
                  {
                    "byte_end": 1638,
                    "byte_start": 1595,
                    "column_end": 65,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\journal\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 63,
                    "line_start": 63,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 65,
                        "highlight_start": 22,
                        "text": "        let folder = path.parent().expect(\"parent should exist\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `error!` args\n  --> src\\journal\\mod.rs:65:62\n   |\n65 |             log::error!(\"Failed to create journal folder at {path:?}: {e:?}\");\n   |                                                              ^^^^\n   |\n   = help: use `Display` formatting and change this to `path.display()`\n   = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `error!` args",
                "spans": [
                  {
                    "byte_end": 1763,
                    "byte_start": 1759,
                    "column_end": 66,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "src\\journal\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 65,
                    "line_start": 65,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 62,
                        "text": "            log::error!(\"Failed to create journal folder at {path:?}: {e:?}\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n  --> src\\journal\\mod.rs:83:9\n   |\n83 |         self.writer.lock().expect(\"lock is poisoned\")\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: if this value is an `Err`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 2255,
                    "byte_start": 2210,
                    "column_end": 54,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\journal\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 83,
                    "line_start": 83,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 9,
                        "text": "        self.writer.lock().expect(\"lock is poisoned\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\keyspace.rs:110:9\n    |\n110 | /         self.flush_manager\n111 | |             .write()\n112 | |             .expect(\"lock is poisoned\")\n    | |_______________________________________^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 3381,
                    "byte_start": 3302,
                    "column_end": 40,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 112,
                    "line_start": 110,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 9,
                        "text": "        self.flush_manager"
                      },
                      {
                        "highlight_end": 21,
                        "highlight_start": 1,
                        "text": "            .write()"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "            .expect(\"lock is poisoned\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\keyspace.rs:115:9\n    |\n115 |         self.partitions.write().expect(\"lock is poisoned\").clear();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 3503,
                    "byte_start": 3453,
                    "column_end": 59,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 115,
                    "line_start": 115,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 9,
                        "text": "        self.partitions.write().expect(\"lock is poisoned\").clear();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\keyspace.rs:116:9\n    |\n116 | /         self.journal_manager\n117 | |             .write()\n118 | |             .expect(\"lock is poisoned\")\n    | |_______________________________________^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 3602,
                    "byte_start": 3521,
                    "column_end": 40,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 118,
                    "line_start": 116,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 9,
                        "text": "        self.journal_manager"
                      },
                      {
                        "highlight_end": 21,
                        "highlight_start": 1,
                        "text": "            .write()"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "            .expect(\"lock is poisoned\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `info!` args\n   --> src\\keyspace.rs:126:17\n    |\n126 |                 self.config.path,\n    |                 ^^^^^^^^^^^^^^^^\n    |\n    = help: use `Display` formatting and change this to `self.config.path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `self.config.path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `info!` args",
                "spans": [
                  {
                    "byte_end": 3839,
                    "byte_start": 3823,
                    "column_end": 33,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 126,
                    "line_start": 126,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 17,
                        "text": "                self.config.path,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `eprintln!` args\n   --> src\\keyspace.rs:130:68\n    |\n130 |                 eprintln!(\"Failed to clean up path: {:?} - {err}\", self.config.path);\n    |                                                                    ^^^^^^^^^^^^^^^^\n    |\n    = help: use `Display` formatting and change this to `self.config.path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `self.config.path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `eprintln!` args",
                "spans": [
                  {
                    "byte_end": 4006,
                    "byte_start": 3990,
                    "column_end": 84,
                    "column_start": 68,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 130,
                    "line_start": 130,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 84,
                        "highlight_start": 68,
                        "text": "                eprintln!(\"Failed to clean up path: {:?} - {err}\", self.config.path);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: docs for function which may panic missing `# Panics` section\n   --> src\\keyspace.rs:257:5\n    |\n257 |     pub fn journal_count(&self) -> usize {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nnote: first possible panic found here\n   --> src\\keyspace.rs:258:9\n    |\n258 | /         self.journal_manager\n259 | |             .read()\n260 | |             .expect(\"lock is poisoned\")\n    | |_______________________________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "first possible panic found here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7728,
                        "byte_start": 7648,
                        "column_end": 40,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\keyspace.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 260,
                        "line_start": 258,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 9,
                            "text": "        self.journal_manager"
                          },
                          {
                            "highlight_end": 20,
                            "highlight_start": 1,
                            "text": "            .read()"
                          },
                          {
                            "highlight_end": 40,
                            "highlight_start": 1,
                            "text": "            .expect(\"lock is poisoned\")"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::missing_panics_doc",
                  "explanation": null
                },
                "level": "warning",
                "message": "docs for function which may panic missing `# Panics` section",
                "spans": [
                  {
                    "byte_end": 7637,
                    "byte_start": 7601,
                    "column_end": 41,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 257,
                    "line_start": 257,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 5,
                        "text": "    pub fn journal_count(&self) -> usize {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\keyspace.rs:258:9\n    |\n258 | /         self.journal_manager\n259 | |             .read()\n260 | |             .expect(\"lock is poisoned\")\n    | |_______________________________________^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 7728,
                    "byte_start": 7648,
                    "column_end": 40,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 260,
                    "line_start": 258,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 9,
                        "text": "        self.journal_manager"
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "            .read()"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "            .expect(\"lock is poisoned\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\keyspace.rs:270:15\n    |\n270 |               + self\n    |  _______________^\n271 | |                 .journal_manager\n272 | |                 .read()\n273 | |                 .expect(\"lock is poisoned\")\n    | |___________________________________________^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 8158,
                    "byte_start": 8053,
                    "column_end": 44,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 273,
                    "line_start": 270,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 15,
                        "text": "            + self"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "                .journal_manager"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                .read()"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "                .expect(\"lock is poisoned\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: docs for function which may panic missing `# Panics` section\n   --> src\\keyspace.rs:291:5\n    |\n291 |     pub fn disk_space(&self) -> u64 {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nnote: first possible panic found here\n   --> src\\keyspace.rs:292:31\n    |\n292 |           let partitions_size = self\n    |  _______________________________^\n293 | |             .partitions\n294 | |             .read()\n295 | |             .expect(\"lock is poisoned\")\n    | |_______________________________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "first possible panic found here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8840,
                        "byte_start": 8752,
                        "column_end": 40,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\keyspace.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 295,
                        "line_start": 292,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 31,
                            "text": "        let partitions_size = self"
                          },
                          {
                            "highlight_end": 24,
                            "highlight_start": 1,
                            "text": "            .partitions"
                          },
                          {
                            "highlight_end": 20,
                            "highlight_start": 1,
                            "text": "            .read()"
                          },
                          {
                            "highlight_end": 40,
                            "highlight_start": 1,
                            "text": "            .expect(\"lock is poisoned\")"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::missing_panics_doc",
                  "explanation": null
                },
                "level": "warning",
                "message": "docs for function which may panic missing `# Panics` section",
                "spans": [
                  {
                    "byte_end": 8719,
                    "byte_start": 8688,
                    "column_end": 36,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 291,
                    "line_start": 291,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 5,
                        "text": "    pub fn disk_space(&self) -> u64 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\keyspace.rs:292:31\n    |\n292 |           let partitions_size = self\n    |  _______________________________^\n293 | |             .partitions\n294 | |             .read()\n295 | |             .expect(\"lock is poisoned\")\n    | |_______________________________________^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 8840,
                    "byte_start": 8752,
                    "column_end": 40,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 295,
                    "line_start": 292,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 31,
                        "text": "        let partitions_size = self"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "            .partitions"
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "            .read()"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "            .expect(\"lock is poisoned\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `info!` args\n   --> src\\keyspace.rs:379:48\n    |\n379 |         log::info!(\"Opening keyspace at {:?}\", config.path);\n    |                                                ^^^^^^^^^^^\n    |\n    = help: use `Display` formatting and change this to `config.path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `config.path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `info!` args",
                "spans": [
                  {
                    "byte_end": 11330,
                    "byte_start": 11319,
                    "column_end": 59,
                    "column_start": 48,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 379,
                    "line_start": 379,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 48,
                        "text": "        log::info!(\"Opening keyspace at {:?}\", config.path);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: temporary with significant `Drop` in `for` loop condition will live until the end of the `for` expression\n   --> src\\keyspace.rs:396:25\n    |\n396 |               for _ in 0..self\n    |  _________________________^\n397 | |                 .flush_manager\n398 | |                 .read()\n399 | |                 .expect(\"lock is poisoned\")\n400 | |                 .queue_count()\n    | |______________________________^\n...\n403 |               }\n    |                - temporary lives until here\n    |\n    = note: this might lead to deadlocks or other unexpected behavior\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_in_scrutinee\nhelp: try moving the temporary above the match\n    |\n396 ~             let value = self\n397 +                 .flush_manager\n398 +                 .read()\n399 +                 .expect(\"lock is poisoned\")\n400 +                 .queue_count();\n401 ~             for _ in 0..value\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "this might lead to deadlocks or other unexpected behavior",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_in_scrutinee",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try moving the temporary above the match",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11851,
                        "byte_start": 11851,
                        "column_end": 13,
                        "column_start": 13,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 0,
                            "byte_start": 0,
                            "column_end": 1,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\lib.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 1,
                            "line_start": 1,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": []
                          },
                          "macro_decl_name": "desugaring of `for` loop",
                          "span": {
                            "byte_end": 12073,
                            "byte_start": 11851,
                            "column_end": 14,
                            "column_start": 13,
                            "expansion": null,
                            "file_name": "src\\keyspace.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 403,
                            "line_start": 396,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 29,
                                "highlight_start": 13,
                                "text": "            for _ in 0..self"
                              },
                              {
                                "highlight_end": 31,
                                "highlight_start": 1,
                                "text": "                .flush_manager"
                              },
                              {
                                "highlight_end": 24,
                                "highlight_start": 1,
                                "text": "                .read()"
                              },
                              {
                                "highlight_end": 44,
                                "highlight_start": 1,
                                "text": "                .expect(\"lock is poisoned\")"
                              },
                              {
                                "highlight_end": 31,
                                "highlight_start": 1,
                                "text": "                .queue_count()"
                              },
                              {
                                "highlight_end": 14,
                                "highlight_start": 1,
                                "text": "            {"
                              },
                              {
                                "highlight_end": 48,
                                "highlight_start": 1,
                                "text": "                self.flush_semaphore.release();"
                              },
                              {
                                "highlight_end": 14,
                                "highlight_start": 1,
                                "text": "            }"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\keyspace.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 396,
                        "line_start": 396,
                        "suggested_replacement": "let value = self\n                .flush_manager\n                .read()\n                .expect(\"lock is poisoned\")\n                .queue_count();\n            ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 13,
                            "highlight_start": 13,
                            "text": "            for _ in 0..self"
                          }
                        ]
                      },
                      {
                        "byte_end": 11997,
                        "byte_start": 11863,
                        "column_end": 31,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\keyspace.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 400,
                        "line_start": 396,
                        "suggested_replacement": "value",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 25,
                            "text": "            for _ in 0..self"
                          },
                          {
                            "highlight_end": 31,
                            "highlight_start": 1,
                            "text": "                .flush_manager"
                          },
                          {
                            "highlight_end": 24,
                            "highlight_start": 1,
                            "text": "                .read()"
                          },
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "                .expect(\"lock is poisoned\")"
                          },
                          {
                            "highlight_end": 31,
                            "highlight_start": 1,
                            "text": "                .queue_count()"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::significant_drop_in_scrutinee",
                  "explanation": null
                },
                "level": "warning",
                "message": "temporary with significant `Drop` in `for` loop condition will live until the end of the `for` expression",
                "spans": [
                  {
                    "byte_end": 12073,
                    "byte_start": 12073,
                    "column_end": 14,
                    "column_start": 14,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": []
                      },
                      "macro_decl_name": "desugaring of `for` loop",
                      "span": {
                        "byte_end": 12073,
                        "byte_start": 11851,
                        "column_end": 14,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\keyspace.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 403,
                        "line_start": 396,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 13,
                            "text": "            for _ in 0..self"
                          },
                          {
                            "highlight_end": 31,
                            "highlight_start": 1,
                            "text": "                .flush_manager"
                          },
                          {
                            "highlight_end": 24,
                            "highlight_start": 1,
                            "text": "                .read()"
                          },
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "                .expect(\"lock is poisoned\")"
                          },
                          {
                            "highlight_end": 31,
                            "highlight_start": 1,
                            "text": "                .queue_count()"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "            {"
                          },
                          {
                            "highlight_end": 48,
                            "highlight_start": 1,
                            "text": "                self.flush_semaphore.release();"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "            }"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\keyspace.rs",
                    "is_primary": false,
                    "label": "temporary lives until here",
                    "line_end": 403,
                    "line_start": 403,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 14,
                        "highlight_start": 14,
                        "text": "            }"
                      }
                    ]
                  },
                  {
                    "byte_end": 11997,
                    "byte_start": 11863,
                    "column_end": 31,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 400,
                    "line_start": 396,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            for _ in 0..self"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                .flush_manager"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                .read()"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "                .expect(\"lock is poisoned\")"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                .queue_count()"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\keyspace.rs:396:25\n    |\n396 |               for _ in 0..self\n    |  _________________________^\n397 | |                 .flush_manager\n398 | |                 .read()\n399 | |                 .expect(\"lock is poisoned\")\n    | |___________________________________________^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 11966,
                    "byte_start": 11863,
                    "column_end": 44,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 399,
                    "line_start": 396,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            for _ in 0..self"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                .flush_manager"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                .read()"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "                .expect(\"lock is poisoned\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: docs for function which may panic missing `# Panics` section\n   --> src\\keyspace.rs:427:5\n    |\n427 |     pub fn delete_partition(&self, handle: PartitionHandle) -> crate::Result<()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nnote: first possible panic found here\n   --> src\\keyspace.rs:443:9\n    |\n443 | /         self.flush_manager\n444 | |             .write()\n445 | |             .expect(\"lock is poisoned\")\n    | |_______________________________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "first possible panic found here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 13259,
                        "byte_start": 13180,
                        "column_end": 40,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\keyspace.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 445,
                        "line_start": 443,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 9,
                            "text": "        self.flush_manager"
                          },
                          {
                            "highlight_end": 21,
                            "highlight_start": 1,
                            "text": "            .write()"
                          },
                          {
                            "highlight_end": 40,
                            "highlight_start": 1,
                            "text": "            .expect(\"lock is poisoned\")"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::missing_panics_doc",
                  "explanation": null
                },
                "level": "warning",
                "message": "docs for function which may panic missing `# Panics` section",
                "spans": [
                  {
                    "byte_end": 12712,
                    "byte_start": 12636,
                    "column_end": 81,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 427,
                    "line_start": 427,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 81,
                        "highlight_start": 5,
                        "text": "    pub fn delete_partition(&self, handle: PartitionHandle) -> crate::Result<()> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this argument is passed by value, but not consumed in the function body\n   --> src\\keyspace.rs:427:44\n    |\n427 |     pub fn delete_partition(&self, handle: PartitionHandle) -> crate::Result<()> {\n    |                                            ^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value\nhelp: consider taking a reference instead\n    |\n427 |     pub fn delete_partition(&self, handle: &PartitionHandle) -> crate::Result<()> {\n    |                                            +\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider taking a reference instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12675,
                        "byte_start": 12675,
                        "column_end": 44,
                        "column_start": 44,
                        "expansion": null,
                        "file_name": "src\\keyspace.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 427,
                        "line_start": 427,
                        "suggested_replacement": "&",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 44,
                            "text": "    pub fn delete_partition(&self, handle: PartitionHandle) -> crate::Result<()> {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_pass_by_value",
                  "explanation": null
                },
                "level": "warning",
                "message": "this argument is passed by value, but not consumed in the function body",
                "spans": [
                  {
                    "byte_end": 12690,
                    "byte_start": 12675,
                    "column_end": 59,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 427,
                    "line_start": 427,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 44,
                        "text": "    pub fn delete_partition(&self, handle: PartitionHandle) -> crate::Result<()> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\keyspace.rs:443:9\n    |\n443 | /         self.flush_manager\n444 | |             .write()\n445 | |             .expect(\"lock is poisoned\")\n    | |_______________________________________^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 13259,
                    "byte_start": 13180,
                    "column_end": 40,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 445,
                    "line_start": 443,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 9,
                        "text": "        self.flush_manager"
                      },
                      {
                        "highlight_end": 21,
                        "highlight_start": 1,
                        "text": "            .write()"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "            .expect(\"lock is poisoned\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\keyspace.rs:448:9\n    |\n448 | /         self.partitions\n449 | |             .write()\n450 | |             .expect(\"lock is poisoned\")\n    | |_______________________________________^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 13390,
                    "byte_start": 13314,
                    "column_end": 40,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 450,
                    "line_start": 448,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 9,
                        "text": "        self.partitions"
                      },
                      {
                        "highlight_end": 21,
                        "highlight_start": 1,
                        "text": "            .write()"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "            .expect(\"lock is poisoned\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\keyspace.rs:478:30\n    |\n478 |         let mut partitions = self.partitions.write().expect(\"lock is poisoned\");\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 14313,
                    "byte_start": 14263,
                    "column_end": 80,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 478,
                    "line_start": 478,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 80,
                        "highlight_start": 30,
                        "text": "        let mut partitions = self.partitions.write().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: docs for function which may panic missing `# Panics` section\n   --> src\\keyspace.rs:497:5\n    |\n497 |     pub fn partition_count(&self) -> usize {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nnote: first possible panic found here\n   --> src\\keyspace.rs:498:9\n    |\n498 |         self.partitions.read().expect(\"lock is poisoned\").len()\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "first possible panic found here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 14919,
                        "byte_start": 14870,
                        "column_end": 58,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\keyspace.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 498,
                        "line_start": 498,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 9,
                            "text": "        self.partitions.read().expect(\"lock is poisoned\").len()"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::missing_panics_doc",
                  "explanation": null
                },
                "level": "warning",
                "message": "docs for function which may panic missing `# Panics` section",
                "spans": [
                  {
                    "byte_end": 14859,
                    "byte_start": 14821,
                    "column_end": 43,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 497,
                    "line_start": 497,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 43,
                        "highlight_start": 5,
                        "text": "    pub fn partition_count(&self) -> usize {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\keyspace.rs:498:9\n    |\n498 |         self.partitions.read().expect(\"lock is poisoned\").len()\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 14919,
                    "byte_start": 14870,
                    "column_end": 58,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 498,
                    "line_start": 498,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 9,
                        "text": "        self.partitions.read().expect(\"lock is poisoned\").len()"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: docs for function which may panic missing `# Panics` section\n   --> src\\keyspace.rs:503:5\n    |\n503 |     pub fn list_partitions(&self) -> Vec<PartitionKey> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nnote: first possible panic found here\n   --> src\\keyspace.rs:504:9\n    |\n504 | /         self.partitions\n505 | |             .read()\n506 | |             .expect(\"lock is poisoned\")\n    | |_______________________________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "first possible panic found here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 15149,
                        "byte_start": 15074,
                        "column_end": 40,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\keyspace.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 506,
                        "line_start": 504,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 9,
                            "text": "        self.partitions"
                          },
                          {
                            "highlight_end": 20,
                            "highlight_start": 1,
                            "text": "            .read()"
                          },
                          {
                            "highlight_end": 40,
                            "highlight_start": 1,
                            "text": "            .expect(\"lock is poisoned\")"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::missing_panics_doc",
                  "explanation": null
                },
                "level": "warning",
                "message": "docs for function which may panic missing `# Panics` section",
                "spans": [
                  {
                    "byte_end": 15063,
                    "byte_start": 15013,
                    "column_end": 55,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 503,
                    "line_start": 503,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 55,
                        "highlight_start": 5,
                        "text": "    pub fn list_partitions(&self) -> Vec<PartitionKey> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\keyspace.rs:504:9\n    |\n504 | /         self.partitions\n505 | |             .read()\n506 | |             .expect(\"lock is poisoned\")\n    | |_______________________________________^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 15149,
                    "byte_start": 15074,
                    "column_end": 40,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 506,
                    "line_start": 504,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 9,
                        "text": "        self.partitions"
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "            .read()"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "            .expect(\"lock is poisoned\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: docs for function which may panic missing `# Panics` section\n   --> src\\keyspace.rs:528:5\n    |\n528 |     pub fn partition_exists(&self, name: &str) -> bool {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nnote: first possible panic found here\n   --> src\\keyspace.rs:529:9\n    |\n529 | /         self.partitions\n530 | |             .read()\n531 | |             .expect(\"lock is poisoned\")\n    | |_______________________________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "first possible panic found here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 15917,
                        "byte_start": 15842,
                        "column_end": 40,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\keyspace.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 531,
                        "line_start": 529,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 9,
                            "text": "        self.partitions"
                          },
                          {
                            "highlight_end": 20,
                            "highlight_start": 1,
                            "text": "            .read()"
                          },
                          {
                            "highlight_end": 40,
                            "highlight_start": 1,
                            "text": "            .expect(\"lock is poisoned\")"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::missing_panics_doc",
                  "explanation": null
                },
                "level": "warning",
                "message": "docs for function which may panic missing `# Panics` section",
                "spans": [
                  {
                    "byte_end": 15831,
                    "byte_start": 15781,
                    "column_end": 55,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 528,
                    "line_start": 528,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 55,
                        "highlight_start": 5,
                        "text": "    pub fn partition_exists(&self, name: &str) -> bool {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\keyspace.rs:529:9\n    |\n529 | /         self.partitions\n530 | |             .read()\n531 | |             .expect(\"lock is poisoned\")\n    | |_______________________________________^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 15917,
                    "byte_start": 15842,
                    "column_end": 40,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 531,
                    "line_start": 529,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 9,
                        "text": "        self.partitions"
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "            .read()"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "            .expect(\"lock is poisoned\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `info!` args\n   --> src\\keyspace.rs:596:51\n    |\n596 |         log::info!(\"Recovering keyspace at {:?}\", config.path);\n    |                                                   ^^^^^^^^^^^\n    |\n    = help: use `Display` formatting and change this to `config.path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `config.path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `info!` args",
                "spans": [
                  {
                    "byte_end": 18143,
                    "byte_start": 18132,
                    "column_end": 62,
                    "column_start": 51,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 596,
                    "line_start": 596,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 62,
                        "highlight_start": 51,
                        "text": "        log::info!(\"Recovering keyspace at {:?}\", config.path);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\keyspace.rs:653:30\n    |\n653 |             let partitions = keyspace.partitions.read().expect(\"lock is poisoned\");\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 20335,
                    "byte_start": 20282,
                    "column_end": 83,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 653,
                    "line_start": 653,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 83,
                        "highlight_start": 30,
                        "text": "            let partitions = keyspace.partitions.read().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `debug!` args\n   --> src\\keyspace.rs:735:44\n    |\n735 |         log::debug!(\"Creating keyspace at {path:?}\");\n    |                                            ^^^^\n    |\n    = help: use `Display` formatting and change this to `path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `debug!` args",
                "spans": [
                  {
                    "byte_end": 23539,
                    "byte_start": 23535,
                    "column_end": 48,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "src\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 735,
                    "line_start": 735,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 44,
                        "text": "        log::debug!(\"Creating keyspace at {path:?}\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n  --> src\\monitor.rs:48:14\n   |\n48 |               *self\n   |  ______________^\n49 | |                 .snapshot_tracker\n50 | |                 .lowest_freed_instant\n51 | |                 .write()\n52 | |                 .expect(\"lock is poisoned\") = current_seqno.saturating_sub(100);\n   | |___________________________________________^\n   |\n   = note: if this value is an `Err`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 1993,
                    "byte_start": 1848,
                    "column_end": 44,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "src\\monitor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 52,
                    "line_start": 48,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 18,
                        "highlight_start": 14,
                        "text": "            *self"
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "                .snapshot_tracker"
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "                .lowest_freed_instant"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                .write()"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "                .expect(\"lock is poisoned\") = current_seqno.saturating_sub(100);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n  --> src\\monitor.rs:55:23\n   |\n55 |           let jm_size = self\n   |  _______________________^\n56 | |             .journal_manager\n57 | |             .read()\n58 | |             .expect(\"lock is poisoned\")\n   | |_______________________________________^\n   |\n   = note: if this value is an `Err`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 2157,
                    "byte_start": 2064,
                    "column_end": 40,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\monitor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 58,
                    "line_start": 55,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "        let jm_size = self"
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "            .journal_manager"
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "            .read()"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "            .expect(\"lock is poisoned\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)\n  --> src\\monitor.rs:63:12\n   |\n63 |         if jm_size as f64 > (max_journal_size as f64 * 0.5) {\n   |            ^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss\n   = note: `#[warn(clippy::cast_precision_loss)]` implied by `#[warn(clippy::pedantic)]`\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::cast_precision_loss)]` implied by `#[warn(clippy::pedantic)]`",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::cast_precision_loss",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)",
                "spans": [
                  {
                    "byte_end": 2299,
                    "byte_start": 2285,
                    "column_end": 26,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\monitor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 63,
                    "line_start": 63,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 12,
                        "text": "        if jm_size as f64 > (max_journal_size as f64 * 0.5) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)\n  --> src\\monitor.rs:63:30\n   |\n63 |         if jm_size as f64 > (max_journal_size as f64 * 0.5) {\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::cast_precision_loss",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)",
                "spans": [
                  {
                    "byte_end": 2326,
                    "byte_start": 2303,
                    "column_end": 53,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\monitor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 63,
                    "line_start": 63,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 53,
                        "highlight_start": 30,
                        "text": "        if jm_size as f64 > (max_journal_size as f64 * 0.5) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n  --> src\\monitor.rs:69:27\n   |\n69 |           let queued_size = self\n   |  ___________________________^\n70 | |             .flush_manager\n71 | |             .read()\n72 | |             .expect(\"lock is poisoned\")\n   | |_______________________________________^\n   |\n   = note: if this value is an `Err`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 2574,
                    "byte_start": 2483,
                    "column_end": 40,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\monitor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 72,
                    "line_start": 69,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "        let queued_size = self"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "            .flush_manager"
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "            .read()"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "            .expect(\"lock is poisoned\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)\n   --> src\\monitor.rs:100:16\n    |\n100 |             if buffer_size_without_queued_size as f64 > (max_write_buffer_size as f64 * 0.5) {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::cast_precision_loss",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)",
                "spans": [
                  {
                    "byte_end": 3800,
                    "byte_start": 3762,
                    "column_end": 54,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\monitor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 100,
                    "line_start": 100,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 16,
                        "text": "            if buffer_size_without_queued_size as f64 > (max_write_buffer_size as f64 * 0.5) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)\n   --> src\\monitor.rs:100:58\n    |\n100 |             if buffer_size_without_queued_size as f64 > (max_write_buffer_size as f64 * 0.5) {\n    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::cast_precision_loss",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)",
                "spans": [
                  {
                    "byte_end": 3832,
                    "byte_start": 3804,
                    "column_end": 86,
                    "column_start": 58,
                    "expansion": null,
                    "file_name": "src\\monitor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 100,
                    "line_start": 100,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 86,
                        "highlight_start": 58,
                        "text": "            if buffer_size_without_queued_size as f64 > (max_write_buffer_size as f64 * 0.5) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\monitor.rs:142:26\n    |\n142 |         let partitions = self.partitions.read().expect(\"lock is poisoned\");\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 5155,
                    "byte_start": 5106,
                    "column_end": 75,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\monitor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 142,
                    "line_start": 142,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 75,
                        "highlight_start": 26,
                        "text": "        let partitions = self.partitions.read().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\monitor.rs:158:54\n    |\n158 |               let partitions_names_with_queued_tasks = self\n    |  ______________________________________________________^\n159 | |                 .flush_manager\n160 | |                 .read()\n161 | |                 .expect(\"lock is poisoned\")\n    | |___________________________________________^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 5820,
                    "byte_start": 5717,
                    "column_end": 44,
                    "column_start": 54,
                    "expansion": null,
                    "file_name": "src\\monitor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 161,
                    "line_start": 158,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 54,
                        "text": "            let partitions_names_with_queued_tasks = self"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                .flush_manager"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                .read()"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "                .expect(\"lock is poisoned\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\monitor.rs:188:30\n    |\n188 |           let mut partitions = self\n    |  ______________________________^\n189 | |             .partitions\n190 | |             .read()\n191 | |             .expect(\"lock is poisoned\")\n    | |_______________________________________^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 6771,
                    "byte_start": 6683,
                    "column_end": 40,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\monitor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 191,
                    "line_start": 188,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "        let mut partitions = self"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "            .partitions"
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "            .read()"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "            .expect(\"lock is poisoned\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\monitor.rs:202:50\n    |\n202 |           let partitions_names_with_queued_tasks = self\n    |  __________________________________________________^\n203 | |             .flush_manager\n204 | |             .read()\n205 | |             .expect(\"lock is poisoned\")\n    | |_______________________________________^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 7152,
                    "byte_start": 7061,
                    "column_end": 40,
                    "column_start": 50,
                    "expansion": null,
                    "file_name": "src\\monitor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 205,
                    "line_start": 202,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 50,
                        "text": "        let partitions_names_with_queued_tasks = self"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "            .flush_manager"
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "            .read()"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "            .expect(\"lock is poisoned\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `error!` args\n   --> src\\partition\\mod.rs:132:83\n    |\n132 | ...                   log::error!(\"Failed to cleanup partition manifest at {path:?}: {e}\");\n    |                                                                             ^^^^\n    |\n    = help: use `Display` formatting and change this to `path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `error!` args",
                "spans": [
                  {
                    "byte_end": 4076,
                    "byte_start": 4072,
                    "column_end": 87,
                    "column_start": 83,
                    "expansion": null,
                    "file_name": "src\\partition\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 132,
                    "line_start": 132,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 87,
                        "highlight_start": 83,
                        "text": "                            log::error!(\"Failed to cleanup partition manifest at {path:?}: {e}\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `error!` args\n   --> src\\partition\\mod.rs:136:87\n    |\n136 | ...                   \"Failed to cleanup deleted partition's folder at {path:?}: {e}\"\n    |                                                                         ^^^^\n    |\n    = help: use `Display` formatting and change this to `path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `error!` args",
                "spans": [
                  {
                    "byte_end": 4332,
                    "byte_start": 4328,
                    "column_end": 91,
                    "column_start": 87,
                    "expansion": null,
                    "file_name": "src\\partition\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 136,
                    "line_start": 136,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 91,
                        "highlight_start": 87,
                        "text": "                                    \"Failed to cleanup deleted partition's folder at {path:?}: {e}\""
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `error!` args\n   --> src\\partition\\mod.rs:143:75\n    |\n143 |                     log::error!(\"Failed to cleanup partition manifest at {path:?}: {e}\");\n    |                                                                           ^^^^\n    |\n    = help: use `Display` formatting and change this to `path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `error!` args",
                "spans": [
                  {
                    "byte_end": 4579,
                    "byte_start": 4575,
                    "column_end": 79,
                    "column_start": 75,
                    "expansion": null,
                    "file_name": "src\\partition\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 143,
                    "line_start": 143,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 79,
                        "highlight_start": 75,
                        "text": "                    log::error!(\"Failed to cleanup partition manifest at {path:?}: {e}\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\partition\\mod.rs:735:20\n    |\n735 |               while !self\n    |  ____________________^\n736 | |                 .flush_manager\n737 | |                 .read()\n738 | |                 .expect(\"lock is poisoned\")\n    | |___________________________________________^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 24581,
                    "byte_start": 24478,
                    "column_end": 44,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\partition\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 738,
                    "line_start": 735,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 20,
                        "text": "            while !self"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                .flush_manager"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                .read()"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "                .expect(\"lock is poisoned\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: temporary with significant `Drop` can be early dropped\n   --> src\\partition\\mod.rs:765:17\n    |\n764 |           let seqno_map = {\n    |  _________________________-\n765 | |             let partitions = self.partitions.write().expect(\"lock is poisoned\");\n    | |                 ^^^^^^^^^^\n766 | |\n767 | |             let mut seqnos = Vec::with_capacity(partitions.len());\n...   |\n778 | |             seqnos\n779 | |         };\n    | |_________- temporary `partitions` is currently being dropped at the end of its contained scope\n    |\n    = note: this might lead to unnecessary resource contention\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening\nhelp: drop the temporary after the end of its last usage\n    |\n776 ~             }\n777 +             drop(partitions);\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "this might lead to unnecessary resource contention",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "drop the temporary after the end of its last usage",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 25935,
                        "byte_start": 25935,
                        "column_end": 14,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\partition\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 776,
                        "line_start": 776,
                        "suggested_replacement": "\n            drop(partitions);",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 14,
                            "highlight_start": 14,
                            "text": "            }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::significant_drop_tightening",
                  "explanation": null
                },
                "level": "warning",
                "message": "temporary with significant `Drop` can be early dropped",
                "spans": [
                  {
                    "byte_end": 25965,
                    "byte_start": 25461,
                    "column_end": 10,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\partition\\mod.rs",
                    "is_primary": false,
                    "label": "temporary `partitions` is currently being dropped at the end of its contained scope",
                    "line_end": 779,
                    "line_start": 764,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "        let seqno_map = {"
                      },
                      {
                        "highlight_end": 81,
                        "highlight_start": 1,
                        "text": "            let partitions = self.partitions.write().expect(\"lock is poisoned\");"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 67,
                        "highlight_start": 1,
                        "text": "            let mut seqnos = Vec::with_capacity(partitions.len());"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 51,
                        "highlight_start": 1,
                        "text": "            for partition in partitions.values() {"
                      },
                      {
                        "highlight_end": 81,
                        "highlight_start": 1,
                        "text": "                if let Some(lsn) = partition.tree.get_highest_memtable_seqno() {"
                      },
                      {
                        "highlight_end": 52,
                        "highlight_start": 1,
                        "text": "                    seqnos.push(EvictionWatermark {"
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "                        lsn,"
                      },
                      {
                        "highlight_end": 54,
                        "highlight_start": 1,
                        "text": "                        partition: partition.clone(),"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                    });"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                }"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "            seqnos"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        };"
                      }
                    ]
                  },
                  {
                    "byte_end": 25489,
                    "byte_start": 25479,
                    "column_end": 27,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\partition\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 765,
                    "line_start": 765,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 17,
                        "text": "            let partitions = self.partitions.write().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\partition\\mod.rs:762:35\n    |\n762 |         let mut journal_manager = self.journal_manager.write().expect(\"lock is poisoned\");\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 25434,
                    "byte_start": 25379,
                    "column_end": 90,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\partition\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 762,
                    "line_start": 762,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 90,
                        "highlight_start": 35,
                        "text": "        let mut journal_manager = self.journal_manager.write().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\partition\\mod.rs:765:30\n    |\n765 |             let partitions = self.partitions.write().expect(\"lock is poisoned\");\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 25542,
                    "byte_start": 25492,
                    "column_end": 80,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\partition\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 765,
                    "line_start": 765,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 80,
                        "highlight_start": 30,
                        "text": "            let partitions = self.partitions.write().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\partition\\mod.rs:784:33\n    |\n784 |         let mut flush_manager = self.flush_manager.write().expect(\"lock is poisoned\");\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 26184,
                    "byte_start": 26131,
                    "column_end": 86,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\partition\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 784,
                    "line_start": 784,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 86,
                        "highlight_start": 33,
                        "text": "        let mut flush_manager = self.flush_manager.write().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\partition\\mod.rs:811:25\n    |\n811 |               let bytes = self\n    |  _________________________^\n812 | |                 .journal_manager\n813 | |                 .read()\n814 | |                 .expect(\"lock is poisoned\")\n    | |___________________________________________^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 26927,
                    "byte_start": 26822,
                    "column_end": 44,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\partition\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 814,
                    "line_start": 811,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            let bytes = self"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "                .journal_manager"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                .read()"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "                .expect(\"lock is poisoned\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)\n   --> src\\partition\\mod.rs:818:20\n    |\n818 |                 if bytes as f64 > self.keyspace_config.max_journaling_size_in_bytes as f64 * 0.9 {\n    |                    ^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::cast_precision_loss",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)",
                "spans": [
                  {
                    "byte_end": 27072,
                    "byte_start": 27060,
                    "column_end": 32,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\partition\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 818,
                    "line_start": 818,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 20,
                        "text": "                if bytes as f64 > self.keyspace_config.max_journaling_size_in_bytes as f64 * 0.9 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)\n   --> src\\partition\\mod.rs:818:35\n    |\n818 |                 if bytes as f64 > self.keyspace_config.max_journaling_size_in_bytes as f64 * 0.9 {\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::cast_precision_loss",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)",
                "spans": [
                  {
                    "byte_end": 27131,
                    "byte_start": 27075,
                    "column_end": 91,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\partition\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 818,
                    "line_start": 818,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 91,
                        "highlight_start": 35,
                        "text": "                if bytes as f64 > self.keyspace_config.max_journaling_size_in_bytes as f64 * 0.9 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)\n   --> src\\partition\\mod.rs:875:29\n    |\n875 |             let p90_limit = (limit as f64) * 0.9;\n    |                             ^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::cast_precision_loss",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)",
                "spans": [
                  {
                    "byte_end": 29042,
                    "byte_start": 29028,
                    "column_end": 43,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\partition\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 875,
                    "line_start": 875,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 43,
                        "highlight_start": 29,
                        "text": "            let p90_limit = (limit as f64) * 0.9;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)\n   --> src\\partition\\mod.rs:881:24\n    |\n881 |                     if bytes as f64 > p90_limit {\n    |                        ^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::cast_precision_loss",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)",
                "spans": [
                  {
                    "byte_end": 29202,
                    "byte_start": 29190,
                    "column_end": 36,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\partition\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 881,
                    "line_start": 881,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 24,
                        "text": "                    if bytes as f64 > p90_limit {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n  --> src\\path.rs:11:5\n   |\n11 | /     path.as_ref()\n12 | |         .absolutize()\n13 | |         .expect(\"should be absolute path\")\n   | |__________________________________________^\n   |\n   = note: if this value is an `Err`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 506,
                    "byte_start": 428,
                    "column_end": 43,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\path.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 13,
                    "line_start": 11,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 18,
                        "highlight_start": 5,
                        "text": "    path.as_ref()"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "        .absolutize()"
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "        .expect(\"should be absolute path\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: temporary with significant `Drop` can be early dropped\n   --> src\\recovery.rs:26:13\n    |\n18  |   pub fn recover_partitions(keyspace: &Keyspace) -> crate::Result<()> {\n    |  _____________________________________________________________________-\n19  | |     use lsm_tree::coding::Decode;\n20  | |\n21  | |     let partitions_folder = keyspace.config.path.join(PARTITIONS_FOLDER);\n...   |\n26  | |     let mut partitions_lock = keyspace.partitions.write().expect(\"lock is poisoned\");\n    | |             ^^^^^^^^^^^^^^^\n...   |\n117 | |     Ok(())\n118 | | }\n    | |_- temporary `partitions_lock` is currently being dropped at the end of its contained scope\n    |\n    = note: this might lead to unnecessary resource contention\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening\nhelp: merge the temporary construction with its single usage\n    |\n26  ~     \n27  +         keyspace.partitions.write().expect(\"lock is poisoned\").insert(partition_name.clone(), partition.clone());\n28  |\n...\n112 |         // Add partition to dictionary\n113 ~         \n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "this might lead to unnecessary resource contention",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "merge the temporary construction with its single usage",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1012,
                        "byte_start": 931,
                        "column_end": 86,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\recovery.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 26,
                        "line_start": 26,
                        "suggested_replacement": "\n        keyspace.partitions.write().expect(\"lock is poisoned\").insert(partition_name.clone(), partition.clone());",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 86,
                            "highlight_start": 5,
                            "text": "    let mut partitions_lock = keyspace.partitions.write().expect(\"lock is poisoned\");"
                          }
                        ]
                      },
                      {
                        "byte_end": 4435,
                        "byte_start": 4369,
                        "column_end": 75,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\recovery.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 112,
                        "line_start": 112,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 75,
                            "highlight_start": 9,
                            "text": "        partitions_lock.insert(partition_name.clone(), partition.clone());"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::significant_drop_tightening",
                  "explanation": null
                },
                "level": "warning",
                "message": "temporary with significant `Drop` can be early dropped",
                "spans": [
                  {
                    "byte_end": 4521,
                    "byte_start": 695,
                    "column_end": 2,
                    "column_start": 69,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": false,
                    "label": "temporary `partitions_lock` is currently being dropped at the end of its contained scope",
                    "line_end": 118,
                    "line_start": 18,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 70,
                        "highlight_start": 69,
                        "text": "pub fn recover_partitions(keyspace: &Keyspace) -> crate::Result<()> {"
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "    use lsm_tree::coding::Decode;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 74,
                        "highlight_start": 1,
                        "text": "    let partitions_folder = keyspace.config.path.join(PARTITIONS_FOLDER);"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 69,
                        "highlight_start": 1,
                        "text": "    log::trace!(\"Recovering partitions in {:?}\", partitions_folder);"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 50,
                        "highlight_start": 1,
                        "text": "    #[allow(clippy::significant_drop_tightening)]"
                      },
                      {
                        "highlight_end": 86,
                        "highlight_start": 1,
                        "text": "    let mut partitions_lock = keyspace.partitions.write().expect(\"lock is poisoned\");"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 59,
                        "highlight_start": 1,
                        "text": "    for dirent in std::fs::read_dir(&partitions_folder)? {"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "        let dirent = dirent?;"
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "        let partition_name = dirent.file_name();"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "        let partition_path = dirent.path();"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "        if dirent.file_type()?.is_file() {"
                      },
                      {
                        "highlight_end": 84,
                        "highlight_start": 1,
                        "text": "            log::warn!(\"Found stray file {partition_path:?} in partitions folder\");"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "            continue;"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 66,
                        "highlight_start": 1,
                        "text": "        log::trace!(\"Recovering partition {:?}\", partition_name);"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "        // NOTE: Check deletion marker"
                      },
                      {
                        "highlight_end": 73,
                        "highlight_start": 1,
                        "text": "        if partition_path.join(PARTITION_DELETED_MARKER).try_exists()? {"
                      },
                      {
                        "highlight_end": 76,
                        "highlight_start": 1,
                        "text": "            log::debug!(\"Deleting deleted partition {:?}\", partition_name);"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 54,
                        "highlight_start": 1,
                        "text": "            // IMPORTANT: First, delete the manifest,"
                      },
                      {
                        "highlight_end": 79,
                        "highlight_start": 1,
                        "text": "            // once that is deleted, the partition is treated as uninitialized"
                      },
                      {
                        "highlight_end": 54,
                        "highlight_start": 1,
                        "text": "            // even if the .deleted marker is removed"
                      },
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "            //"
                      },
                      {
                        "highlight_end": 78,
                        "highlight_start": 1,
                        "text": "            // This is important, because if somehow `remove_dir_all` ends up"
                      },
                      {
                        "highlight_end": 82,
                        "highlight_start": 1,
                        "text": "            // deleting the `.deleted` marker first, we would end up resurrecting"
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "            // the partition"
                      },
                      {
                        "highlight_end": 72,
                        "highlight_start": 1,
                        "text": "            let manifest_file = partition_path.join(LSM_MANIFEST_FILE);"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "            if manifest_file.try_exists()? {"
                      },
                      {
                        "highlight_end": 54,
                        "highlight_start": 1,
                        "text": "                std::fs::remove_file(manifest_file)?;"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 54,
                        "highlight_start": 1,
                        "text": "            std::fs::remove_dir_all(partition_path)?;"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "            continue;"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 80,
                        "highlight_start": 1,
                        "text": "        // NOTE: Check for marker, maybe the partition is not fully initialized"
                      },
                      {
                        "highlight_end": 67,
                        "highlight_start": 1,
                        "text": "        if !partition_path.join(LSM_MANIFEST_FILE).try_exists()? {"
                      },
                      {
                        "highlight_end": 82,
                        "highlight_start": 1,
                        "text": "            log::debug!(\"Deleting uninitialized partition {:?}\", partition_name);"
                      },
                      {
                        "highlight_end": 54,
                        "highlight_start": 1,
                        "text": "            std::fs::remove_dir_all(partition_path)?;"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "            continue;"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 58,
                        "highlight_start": 1,
                        "text": "        let partition_name: PartitionKey = partition_name"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "            .to_str()"
                      },
                      {
                        "highlight_end": 54,
                        "highlight_start": 1,
                        "text": "            .expect(\"should be valid partition name\")"
                      },
                      {
                        "highlight_end": 21,
                        "highlight_start": 1,
                        "text": "            .into();"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 61,
                        "highlight_start": 1,
                        "text": "        let path = partitions_folder.join(&*partition_name);"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 87,
                        "highlight_start": 1,
                        "text": "        let mut config_file = File::open(partition_path.join(PARTITION_CONFIG_FILE))?;"
                      },
                      {
                        "highlight_end": 87,
                        "highlight_start": 1,
                        "text": "        let recovered_config = PartitionCreateOptions::decode_from(&mut config_file)?;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 58,
                        "highlight_start": 1,
                        "text": "        let mut base_config = lsm_tree::Config::new(path)"
                      },
                      {
                        "highlight_end": 72,
                        "highlight_start": 1,
                        "text": "            .descriptor_table(keyspace.config.descriptor_table.clone())"
                      },
                      {
                        "highlight_end": 55,
                        "highlight_start": 1,
                        "text": "            .use_cache(keyspace.config.cache.clone());"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 78,
                        "highlight_start": 1,
                        "text": "        base_config.bloom_bits_per_key = recovered_config.bloom_bits_per_key;"
                      },
                      {
                        "highlight_end": 72,
                        "highlight_start": 1,
                        "text": "        base_config.data_block_size = recovered_config.data_block_size;"
                      },
                      {
                        "highlight_end": 74,
                        "highlight_start": 1,
                        "text": "        base_config.index_block_size = recovered_config.index_block_size;"
                      },
                      {
                        "highlight_end": 78,
                        "highlight_start": 1,
                        "text": "        base_config.bloom_bits_per_key = recovered_config.bloom_bits_per_key;"
                      },
                      {
                        "highlight_end": 64,
                        "highlight_start": 1,
                        "text": "        base_config.compression = recovered_config.compression;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 65,
                        "highlight_start": 1,
                        "text": "        if let Some(kv_opts) = &recovered_config.kv_separation {"
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "            base_config = base_config"
                      },
                      {
                        "highlight_end": 55,
                        "highlight_start": 1,
                        "text": "                .blob_compression(kv_opts.compression)"
                      },
                      {
                        "highlight_end": 78,
                        "highlight_start": 1,
                        "text": "                .blob_file_separation_threshold(kv_opts.separation_threshold)"
                      },
                      {
                        "highlight_end": 66,
                        "highlight_start": 1,
                        "text": "                .blob_file_target_size(kv_opts.file_target_size);"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "        let is_blob_tree = partition_path"
                      },
                      {
                        "highlight_end": 48,
                        "highlight_start": 1,
                        "text": "            .join(lsm_tree::file::BLOBS_FOLDER)"
                      },
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "            .try_exists()?;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 37,
                        "highlight_start": 1,
                        "text": "        let tree = if is_blob_tree {"
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "            AnyTree::Blob(base_config.open_as_blob_tree()?)"
                      },
                      {
                        "highlight_end": 17,
                        "highlight_start": 1,
                        "text": "        } else {"
                      },
                      {
                        "highlight_end": 51,
                        "highlight_start": 1,
                        "text": "            AnyTree::Standard(base_config.open()?)"
                      },
                      {
                        "highlight_end": 11,
                        "highlight_start": 1,
                        "text": "        };"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 56,
                        "highlight_start": 1,
                        "text": "        let partition = PartitionHandle::from_keyspace("
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "            keyspace,"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "            tree,"
                      },
                      {
                        "highlight_end": 36,
                        "highlight_start": 1,
                        "text": "            partition_name.clone(),"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "            recovered_config,"
                      },
                      {
                        "highlight_end": 11,
                        "highlight_start": 1,
                        "text": "        );"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "        // Add partition to dictionary"
                      },
                      {
                        "highlight_end": 75,
                        "highlight_start": 1,
                        "text": "        partitions_lock.insert(partition_name.clone(), partition.clone());"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 65,
                        "highlight_start": 1,
                        "text": "        log::trace!(\"Recovered partition {:?}\", partition_name);"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 11,
                        "highlight_start": 1,
                        "text": "    Ok(())"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "}"
                      }
                    ]
                  },
                  {
                    "byte_end": 954,
                    "byte_start": 939,
                    "column_end": 28,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 26,
                    "line_start": 26,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 13,
                        "text": "    let mut partitions_lock = keyspace.partitions.write().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `trace!` args\n  --> src\\recovery.rs:23:50\n   |\n23 |     log::trace!(\"Recovering partitions in {:?}\", partitions_folder);\n   |                                                  ^^^^^^^^^^^^^^^^^\n   |\n   = help: use `Display` formatting and change this to `partitions_folder.display()`\n   = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `partitions_folder.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `trace!` args",
                "spans": [
                  {
                    "byte_end": 873,
                    "byte_start": 856,
                    "column_end": 67,
                    "column_start": 50,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 67,
                        "highlight_start": 50,
                        "text": "    log::trace!(\"Recovering partitions in {:?}\", partitions_folder);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: variables can be used directly in the `format!` string\n  --> src\\recovery.rs:23:5\n   |\n23 |     log::trace!(\"Recovering partitions in {:?}\", partitions_folder);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nnote: the lint level is defined here\n  --> src\\lib.rs:76:9\n   |\n76 | #![deny(clippy::all, missing_docs, clippy::cargo)]\n   |         ^^^^^^^^^^^\n   = note: `#[deny(clippy::uninlined_format_args)]` implied by `#[deny(clippy::all)]`\nhelp: change this to\n   |\n23 -     log::trace!(\"Recovering partitions in {:?}\", partitions_folder);\n23 +     log::trace!(\"Recovering partitions in {partitions_folder:?}\");\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the lint level is defined here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2980,
                        "byte_start": 2969,
                        "column_end": 20,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 76,
                        "line_start": 76,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 20,
                            "highlight_start": 9,
                            "text": "#![deny(clippy::all, missing_docs, clippy::cargo)]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[deny(clippy::uninlined_format_args)]` implied by `#[deny(clippy::all)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 850,
                        "byte_start": 850,
                        "column_end": 44,
                        "column_start": 44,
                        "expansion": null,
                        "file_name": "src\\recovery.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 23,
                        "line_start": 23,
                        "suggested_replacement": "partitions_folder",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 44,
                            "text": "    log::trace!(\"Recovering partitions in {:?}\", partitions_folder);"
                          }
                        ]
                      },
                      {
                        "byte_end": 873,
                        "byte_start": 854,
                        "column_end": 67,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\recovery.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 23,
                        "line_start": 23,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 67,
                            "highlight_start": 48,
                            "text": "    log::trace!(\"Recovering partitions in {:?}\", partitions_folder);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "error",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 874,
                    "byte_start": 811,
                    "column_end": 68,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 68,
                        "highlight_start": 5,
                        "text": "    log::trace!(\"Recovering partitions in {:?}\", partitions_folder);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n  --> src\\recovery.rs:26:31\n   |\n26 |     let mut partitions_lock = keyspace.partitions.write().expect(\"lock is poisoned\");\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: if this value is an `Err`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 1011,
                    "byte_start": 957,
                    "column_end": 85,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 26,
                    "line_start": 26,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 85,
                        "highlight_start": 31,
                        "text": "    let mut partitions_lock = keyspace.partitions.write().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `warn!` args\n  --> src\\recovery.rs:34:43\n   |\n34 |             log::warn!(\"Found stray file {partition_path:?} in partitions folder\");\n   |                                           ^^^^^^^^^^^^^^\n   |\n   = help: use `Display` formatting and change this to `partition_path.display()`\n   = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `partition_path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `warn!` args",
                "spans": [
                  {
                    "byte_end": 1296,
                    "byte_start": 1282,
                    "column_end": 57,
                    "column_start": 43,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 34,
                    "line_start": 34,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 43,
                        "text": "            log::warn!(\"Found stray file {partition_path:?} in partitions folder\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: variables can be used directly in the `format!` string\n  --> src\\recovery.rs:38:9\n   |\n38 |         log::trace!(\"Recovering partition {:?}\", partition_name);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n38 -         log::trace!(\"Recovering partition {:?}\", partition_name);\n38 +         log::trace!(\"Recovering partition {partition_name:?}\");\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1400,
                        "byte_start": 1400,
                        "column_end": 44,
                        "column_start": 44,
                        "expansion": null,
                        "file_name": "src\\recovery.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 38,
                        "line_start": 38,
                        "suggested_replacement": "partition_name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 44,
                            "text": "        log::trace!(\"Recovering partition {:?}\", partition_name);"
                          }
                        ]
                      },
                      {
                        "byte_end": 1420,
                        "byte_start": 1404,
                        "column_end": 64,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\recovery.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 38,
                        "line_start": 38,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 64,
                            "highlight_start": 48,
                            "text": "        log::trace!(\"Recovering partition {:?}\", partition_name);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "error",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1421,
                    "byte_start": 1365,
                    "column_end": 65,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 38,
                    "line_start": 38,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 65,
                        "highlight_start": 9,
                        "text": "        log::trace!(\"Recovering partition {:?}\", partition_name);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: variables can be used directly in the `format!` string\n  --> src\\recovery.rs:42:13\n   |\n42 |             log::debug!(\"Deleting deleted partition {:?}\", partition_name);\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n42 -             log::debug!(\"Deleting deleted partition {:?}\", partition_name);\n42 +             log::debug!(\"Deleting deleted partition {partition_name:?}\");\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1589,
                        "byte_start": 1589,
                        "column_end": 54,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\recovery.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 42,
                        "line_start": 42,
                        "suggested_replacement": "partition_name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 54,
                            "text": "            log::debug!(\"Deleting deleted partition {:?}\", partition_name);"
                          }
                        ]
                      },
                      {
                        "byte_end": 1609,
                        "byte_start": 1593,
                        "column_end": 74,
                        "column_start": 58,
                        "expansion": null,
                        "file_name": "src\\recovery.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 42,
                        "line_start": 42,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 74,
                            "highlight_start": 58,
                            "text": "            log::debug!(\"Deleting deleted partition {:?}\", partition_name);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "error",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1610,
                    "byte_start": 1548,
                    "column_end": 75,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 42,
                    "line_start": 42,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 75,
                        "highlight_start": 13,
                        "text": "            log::debug!(\"Deleting deleted partition {:?}\", partition_name);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: variables can be used directly in the `format!` string\n  --> src\\recovery.rs:62:13\n   |\n62 |             log::debug!(\"Deleting uninitialized partition {:?}\", partition_name);\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n62 -             log::debug!(\"Deleting uninitialized partition {:?}\", partition_name);\n62 +             log::debug!(\"Deleting uninitialized partition {partition_name:?}\");\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2483,
                        "byte_start": 2483,
                        "column_end": 60,
                        "column_start": 60,
                        "expansion": null,
                        "file_name": "src\\recovery.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 62,
                        "line_start": 62,
                        "suggested_replacement": "partition_name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 60,
                            "highlight_start": 60,
                            "text": "            log::debug!(\"Deleting uninitialized partition {:?}\", partition_name);"
                          }
                        ]
                      },
                      {
                        "byte_end": 2503,
                        "byte_start": 2487,
                        "column_end": 80,
                        "column_start": 64,
                        "expansion": null,
                        "file_name": "src\\recovery.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 62,
                        "line_start": 62,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 80,
                            "highlight_start": 64,
                            "text": "            log::debug!(\"Deleting uninitialized partition {:?}\", partition_name);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "error",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 2504,
                    "byte_start": 2436,
                    "column_end": 81,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 62,
                    "line_start": 62,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 81,
                        "highlight_start": 13,
                        "text": "            log::debug!(\"Deleting uninitialized partition {:?}\", partition_name);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on an `Option` value\n  --> src\\recovery.rs:67:44\n   |\n67 |           let partition_name: PartitionKey = partition_name\n   |  ____________________________________________^\n68 | |             .to_str()\n69 | |             .expect(\"should be valid partition name\")\n   | |_____________________________________________________^\n   |\n   = note: if this value is `None`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is `None`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on an `Option` value",
                "spans": [
                  {
                    "byte_end": 2726,
                    "byte_start": 2636,
                    "column_end": 54,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 69,
                    "line_start": 67,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 44,
                        "text": "        let partition_name: PartitionKey = partition_name"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "            .to_str()"
                      },
                      {
                        "highlight_end": 54,
                        "highlight_start": 1,
                        "text": "            .expect(\"should be valid partition name\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: variables can be used directly in the `format!` string\n   --> src\\recovery.rs:114:9\n    |\n114 |         log::trace!(\"Recovered partition {:?}\", partition_name);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n114 -         log::trace!(\"Recovered partition {:?}\", partition_name);\n114 +         log::trace!(\"Recovered partition {partition_name:?}\");\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4479,
                        "byte_start": 4479,
                        "column_end": 43,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\recovery.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 114,
                        "line_start": 114,
                        "suggested_replacement": "partition_name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 43,
                            "text": "        log::trace!(\"Recovered partition {:?}\", partition_name);"
                          }
                        ]
                      },
                      {
                        "byte_end": 4499,
                        "byte_start": 4483,
                        "column_end": 63,
                        "column_start": 47,
                        "expansion": null,
                        "file_name": "src\\recovery.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 114,
                        "line_start": 114,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 63,
                            "highlight_start": 47,
                            "text": "        log::trace!(\"Recovered partition {:?}\", partition_name);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "error",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 4500,
                    "byte_start": 4445,
                    "column_end": 64,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 114,
                    "line_start": 114,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 64,
                        "highlight_start": 9,
                        "text": "        log::trace!(\"Recovered partition {:?}\", partition_name);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: temporary with significant `Drop` can be early dropped\n   --> src\\recovery.rs:126:13\n    |\n124 |   ) -> crate::Result<()> {\n    |  ________________________-\n125 | |     #[allow(clippy::significant_drop_tightening)]\n126 | |     let mut flush_manager_lock = keyspace.flush_manager.write().expect(\"lock is poisoned\");\n    | |             ^^^^^^^^^^^^^^^^^^\n...   |\n256 | |     Ok(())\n257 | | }\n    | |_- temporary `flush_manager_lock` is currently being dropped at the end of its contained scope\n    |\n    = note: this might lead to unnecessary resource contention\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening\nhelp: merge the temporary construction with its single usage\n    |\n126 ~     \n127 +                 keyspace.flush_manager.write().expect(\"lock is poisoned\").enqueue_task(\n128 +                     handle.partition.name.clone(),\n129 +                     crate::flush::manager::Task {\n130 +                         id: memtable_id,\n131 +                         sealed_memtable,\n132 +                         partition: handle.partition.clone(),\n133 +                     },\n134 +                 );\n135 |\n...\n238 |                 // IMPORTANT: Add sealed memtable to flush manager, so it can be flushed\n239 ~                 \n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "this might lead to unnecessary resource contention",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "merge the temporary construction with its single usage",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4818,
                        "byte_start": 4731,
                        "column_end": 92,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\recovery.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 126,
                        "line_start": 126,
                        "suggested_replacement": "\n                keyspace.flush_manager.write().expect(\"lock is poisoned\").enqueue_task(\n                    handle.partition.name.clone(),\n                    crate::flush::manager::Task {\n                        id: memtable_id,\n                        sealed_memtable,\n                        partition: handle.partition.clone(),\n                    },\n                );",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 92,
                            "highlight_start": 5,
                            "text": "    let mut flush_manager_lock = keyspace.flush_manager.write().expect(\"lock is poisoned\");"
                          }
                        ]
                      },
                      {
                        "byte_end": 9218,
                        "byte_start": 8900,
                        "column_end": 19,
                        "column_start": 17,
                        "expansion": null,
                        "file_name": "src\\recovery.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 238,
                        "line_start": 231,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 17,
                            "text": "                flush_manager_lock.enqueue_task("
                          },
                          {
                            "highlight_end": 51,
                            "highlight_start": 1,
                            "text": "                    handle.partition.name.clone(),"
                          },
                          {
                            "highlight_end": 50,
                            "highlight_start": 1,
                            "text": "                    crate::flush::manager::Task {"
                          },
                          {
                            "highlight_end": 41,
                            "highlight_start": 1,
                            "text": "                        id: memtable_id,"
                          },
                          {
                            "highlight_end": 41,
                            "highlight_start": 1,
                            "text": "                        sealed_memtable,"
                          },
                          {
                            "highlight_end": 61,
                            "highlight_start": 1,
                            "text": "                        partition: handle.partition.clone(),"
                          },
                          {
                            "highlight_end": 23,
                            "highlight_start": 1,
                            "text": "                    },"
                          },
                          {
                            "highlight_end": 19,
                            "highlight_start": 1,
                            "text": "                );"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::significant_drop_tightening",
                  "explanation": null
                },
                "level": "warning",
                "message": "temporary with significant `Drop` can be early dropped",
                "spans": [
                  {
                    "byte_end": 9725,
                    "byte_start": 4675,
                    "column_end": 2,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": false,
                    "label": "temporary `flush_manager_lock` is currently being dropped at the end of its contained scope",
                    "line_end": 257,
                    "line_start": 124,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 24,
                        "text": ") -> crate::Result<()> {"
                      },
                      {
                        "highlight_end": 50,
                        "highlight_start": 1,
                        "text": "    #[allow(clippy::significant_drop_tightening)]"
                      },
                      {
                        "highlight_end": 92,
                        "highlight_start": 1,
                        "text": "    let mut flush_manager_lock = keyspace.flush_manager.write().expect(\"lock is poisoned\");"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 50,
                        "highlight_start": 1,
                        "text": "    #[allow(clippy::significant_drop_tightening)]"
                      },
                      {
                        "highlight_end": 96,
                        "highlight_start": 1,
                        "text": "    let mut journal_manager_lock = keyspace.journal_manager.write().expect(\"lock is poisoned\");"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 50,
                        "highlight_start": 1,
                        "text": "    #[allow(clippy::significant_drop_tightening)]"
                      },
                      {
                        "highlight_end": 81,
                        "highlight_start": 1,
                        "text": "    let partitions_lock = keyspace.partitions.read().expect(\"lock is poisoned\");"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 47,
                        "highlight_start": 1,
                        "text": "    for journal_path in sealed_journal_paths {"
                      },
                      {
                        "highlight_end": 68,
                        "highlight_start": 1,
                        "text": "        log::debug!(\"Recovering sealed journal: {journal_path:?}\");"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 59,
                        "highlight_start": 1,
                        "text": "        let journal_size = journal_path.metadata()?.len();"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 67,
                        "highlight_start": 1,
                        "text": "        log::debug!(\"Reading sealed journal at {journal_path:?}\");"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "        let raw_reader = JournalReader::new(journal_path)?;"
                      },
                      {
                        "highlight_end": 58,
                        "highlight_start": 1,
                        "text": "        let reader = JournalBatchReader::new(raw_reader);"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 91,
                        "highlight_start": 1,
                        "text": "        let mut watermarks: HashMap<PartitionKey, EvictionWatermark> = HashMap::default();"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "        for batch in reader {"
                      },
                      {
                        "highlight_end": 32,
                        "highlight_start": 1,
                        "text": "            let batch = batch?;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "            for item in batch.items {"
                      },
                      {
                        "highlight_end": 77,
                        "highlight_start": 1,
                        "text": "                if let Some(handle) = partitions_lock.get(&item.partition) {"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                    let tree = &handle.tree;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                    watermarks"
                      },
                      {
                        "highlight_end": 47,
                        "highlight_start": 1,
                        "text": "                        .entry(item.partition)"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                        .and_modify(|prev| {"
                      },
                      {
                        "highlight_end": 66,
                        "highlight_start": 1,
                        "text": "                            prev.lsn = prev.lsn.max(batch.seqno);"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                        })"
                      },
                      {
                        "highlight_end": 63,
                        "highlight_start": 1,
                        "text": "                        .or_insert_with(|| EvictionWatermark {"
                      },
                      {
                        "highlight_end": 55,
                        "highlight_start": 1,
                        "text": "                            partition: handle.clone(),"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                            lsn: batch.seqno,"
                      },
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "                        });"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "                    match item.value_type {"
                      },
                      {
                        "highlight_end": 56,
                        "highlight_start": 1,
                        "text": "                        lsm_tree::ValueType::Value => {"
                      },
                      {
                        "highlight_end": 76,
                        "highlight_start": 1,
                        "text": "                            tree.insert(item.key, item.value, batch.seqno);"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                        }"
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "                        lsm_tree::ValueType::Tombstone => {"
                      },
                      {
                        "highlight_end": 64,
                        "highlight_start": 1,
                        "text": "                            tree.remove(item.key, batch.seqno);"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                        }"
                      },
                      {
                        "highlight_end": 64,
                        "highlight_start": 1,
                        "text": "                        lsm_tree::ValueType::WeakTombstone => {"
                      },
                      {
                        "highlight_end": 69,
                        "highlight_start": 1,
                        "text": "                            tree.remove_weak(item.key, batch.seqno);"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                        }"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "                    }"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                }"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            }"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 52,
                        "highlight_start": 1,
                        "text": "        log::debug!(\"Sealing recovered memtables\");"
                      },
                      {
                        "highlight_end": 37,
                        "highlight_start": 1,
                        "text": "        let mut recovered_count = 0;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "        for handle in watermarks.values() {"
                      },
                      {
                        "highlight_end": 47,
                        "highlight_start": 1,
                        "text": "            let tree = &handle.partition.tree;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 68,
                        "highlight_start": 1,
                        "text": "            let partition_lsn = tree.get_highest_persisted_seqno();"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 68,
                        "highlight_start": 1,
                        "text": "            // IMPORTANT: Only apply sealed memtables to partitions"
                      },
                      {
                        "highlight_end": 64,
                        "highlight_start": 1,
                        "text": "            // that have a lower seqno to avoid double flushing"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "            let should_skip_sealed_memtable ="
                      },
                      {
                        "highlight_end": 88,
                        "highlight_start": 1,
                        "text": "                partition_lsn.is_some_and(|partition_lsn| partition_lsn >= handle.lsn);"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "            if should_skip_sealed_memtable {"
                      },
                      {
                        "highlight_end": 63,
                        "highlight_start": 1,
                        "text": "                handle.partition.tree.clear_active_memtable();"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "                log::trace!("
                      },
                      {
                        "highlight_end": 83,
                        "highlight_start": 1,
                        "text": "                    \"Partition {} has higher seqno ({partition_lsn:?}), skipping\","
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                    handle.partition.name"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                );"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                continue;"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 83,
                        "highlight_start": 1,
                        "text": "            if let Some((memtable_id, sealed_memtable)) = tree.rotate_memtable() {"
                      },
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "                assert_eq!("
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "                    Some(handle.lsn),"
                      },
                      {
                        "highlight_end": 57,
                        "highlight_start": 1,
                        "text": "                    sealed_memtable.get_highest_seqno(),"
                      },
                      {
                        "highlight_end": 85,
                        "highlight_start": 1,
                        "text": "                    \"memtable lsn does not match what was recovered - this is a bug\""
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                );"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "                log::trace!("
                      },
                      {
                        "highlight_end": 58,
                        "highlight_start": 1,
                        "text": "                    \"sealed memtable of {} has {} items\","
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "                    handle.partition.name,"
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "                    sealed_memtable.len(),"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                );"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 83,
                        "highlight_start": 1,
                        "text": "                // Maybe the memtable has a higher seqno, so try to set to maximum"
                      },
                      {
                        "highlight_end": 100,
                        "highlight_start": 1,
                        "text": "                let maybe_next_seqno = tree.get_highest_seqno().map(|x| x + 1).unwrap_or_default();"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                keyspace"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                    .seqno"
                      },
                      {
                        "highlight_end": 87,
                        "highlight_start": 1,
                        "text": "                    .fetch_max(maybe_next_seqno, std::sync::atomic::Ordering::AcqRel);"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 79,
                        "highlight_start": 1,
                        "text": "                log::debug!(\"Keyspace seqno is now {}\", keyspace.seqno.get());"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 84,
                        "highlight_start": 1,
                        "text": "                // IMPORTANT: Add sealed memtable size to current write buffer size"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                keyspace"
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                    .write_buffer_manager"
                      },
                      {
                        "highlight_end": 62,
                        "highlight_start": 1,
                        "text": "                    .allocate(sealed_memtable.size().into());"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 68,
                        "highlight_start": 1,
                        "text": "                // TODO: unit test write buffer size after recovery"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 89,
                        "highlight_start": 1,
                        "text": "                // IMPORTANT: Add sealed memtable to flush manager, so it can be flushed"
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "                flush_manager_lock.enqueue_task("
                      },
                      {
                        "highlight_end": 51,
                        "highlight_start": 1,
                        "text": "                    handle.partition.name.clone(),"
                      },
                      {
                        "highlight_end": 50,
                        "highlight_start": 1,
                        "text": "                    crate::flush::manager::Task {"
                      },
                      {
                        "highlight_end": 41,
                        "highlight_start": 1,
                        "text": "                        id: memtable_id,"
                      },
                      {
                        "highlight_end": 41,
                        "highlight_start": 1,
                        "text": "                        sealed_memtable,"
                      },
                      {
                        "highlight_end": 61,
                        "highlight_start": 1,
                        "text": "                        partition: handle.partition.clone(),"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    },"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                );"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "                recovered_count += 1;"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            }"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 69,
                        "highlight_start": 1,
                        "text": "        log::debug!(\"Recovered {recovered_count} sealed memtables\");"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "        // IMPORTANT: Add sealed journal to journal manager"
                      },
                      {
                        "highlight_end": 69,
                        "highlight_start": 1,
                        "text": "        journal_manager_lock.enqueue(crate::journal::manager::Item {"
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "            watermarks: watermarks.into_values().collect(),"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "            path: journal_path.clone(),"
                      },
                      {
                        "highlight_end": 41,
                        "highlight_start": 1,
                        "text": "            size_in_bytes: journal_size,"
                      },
                      {
                        "highlight_end": 12,
                        "highlight_start": 1,
                        "text": "        });"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 70,
                        "highlight_start": 1,
                        "text": "        log::debug!(\"Requeued sealed journal at {:?}\", journal_path);"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 11,
                        "highlight_start": 1,
                        "text": "    Ok(())"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "}"
                      }
                    ]
                  },
                  {
                    "byte_end": 4757,
                    "byte_start": 4739,
                    "column_end": 31,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 126,
                    "line_start": 126,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 13,
                        "text": "    let mut flush_manager_lock = keyspace.flush_manager.write().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: temporary with significant `Drop` can be early dropped\n   --> src\\recovery.rs:129:13\n    |\n124 |   ) -> crate::Result<()> {\n    |  ________________________-\n125 | |     #[allow(clippy::significant_drop_tightening)]\n126 | |     let mut flush_manager_lock = keyspace.flush_manager.write().expect(\"lock is poisoned\");\n...   |\n129 | |     let mut journal_manager_lock = keyspace.journal_manager.write().expect(\"lock is poisoned\");\n    | |             ^^^^^^^^^^^^^^^^^^^^\n...   |\n256 | |     Ok(())\n257 | | }\n    | |_- temporary `journal_manager_lock` is currently being dropped at the end of its contained scope\n    |\n    = note: this might lead to unnecessary resource contention\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening\nhelp: merge the temporary construction with its single usage\n    |\n129 ~     \n130 +         keyspace.journal_manager.write().expect(\"lock is poisoned\").enqueue(crate::journal::manager::Item {\n131 +             watermarks: watermarks.into_values().collect(),\n132 +             path: journal_path.clone(),\n133 +             size_in_bytes: journal_size,\n134 +         });\n135 |\n...\n251 |         // IMPORTANT: Add sealed journal to journal manager\n252 ~         \n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "this might lead to unnecessary resource contention",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "merge the temporary construction with its single usage",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4965,
                        "byte_start": 4874,
                        "column_end": 96,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\recovery.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 129,
                        "line_start": 129,
                        "suggested_replacement": "\n        keyspace.journal_manager.write().expect(\"lock is poisoned\").enqueue(crate::journal::manager::Item {\n            watermarks: watermarks.into_values().collect(),\n            path: journal_path.clone(),\n            size_in_bytes: journal_size,\n        });",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 96,
                            "highlight_start": 5,
                            "text": "    let mut journal_manager_lock = keyspace.journal_manager.write().expect(\"lock is poisoned\");"
                          }
                        ]
                      },
                      {
                        "byte_end": 9634,
                        "byte_start": 9421,
                        "column_end": 12,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\recovery.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 251,
                        "line_start": 247,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 69,
                            "highlight_start": 9,
                            "text": "        journal_manager_lock.enqueue(crate::journal::manager::Item {"
                          },
                          {
                            "highlight_end": 60,
                            "highlight_start": 1,
                            "text": "            watermarks: watermarks.into_values().collect(),"
                          },
                          {
                            "highlight_end": 40,
                            "highlight_start": 1,
                            "text": "            path: journal_path.clone(),"
                          },
                          {
                            "highlight_end": 41,
                            "highlight_start": 1,
                            "text": "            size_in_bytes: journal_size,"
                          },
                          {
                            "highlight_end": 12,
                            "highlight_start": 1,
                            "text": "        });"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::significant_drop_tightening",
                  "explanation": null
                },
                "level": "warning",
                "message": "temporary with significant `Drop` can be early dropped",
                "spans": [
                  {
                    "byte_end": 9725,
                    "byte_start": 4675,
                    "column_end": 2,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": false,
                    "label": "temporary `journal_manager_lock` is currently being dropped at the end of its contained scope",
                    "line_end": 257,
                    "line_start": 124,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 24,
                        "text": ") -> crate::Result<()> {"
                      },
                      {
                        "highlight_end": 50,
                        "highlight_start": 1,
                        "text": "    #[allow(clippy::significant_drop_tightening)]"
                      },
                      {
                        "highlight_end": 92,
                        "highlight_start": 1,
                        "text": "    let mut flush_manager_lock = keyspace.flush_manager.write().expect(\"lock is poisoned\");"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 50,
                        "highlight_start": 1,
                        "text": "    #[allow(clippy::significant_drop_tightening)]"
                      },
                      {
                        "highlight_end": 96,
                        "highlight_start": 1,
                        "text": "    let mut journal_manager_lock = keyspace.journal_manager.write().expect(\"lock is poisoned\");"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 50,
                        "highlight_start": 1,
                        "text": "    #[allow(clippy::significant_drop_tightening)]"
                      },
                      {
                        "highlight_end": 81,
                        "highlight_start": 1,
                        "text": "    let partitions_lock = keyspace.partitions.read().expect(\"lock is poisoned\");"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 47,
                        "highlight_start": 1,
                        "text": "    for journal_path in sealed_journal_paths {"
                      },
                      {
                        "highlight_end": 68,
                        "highlight_start": 1,
                        "text": "        log::debug!(\"Recovering sealed journal: {journal_path:?}\");"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 59,
                        "highlight_start": 1,
                        "text": "        let journal_size = journal_path.metadata()?.len();"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 67,
                        "highlight_start": 1,
                        "text": "        log::debug!(\"Reading sealed journal at {journal_path:?}\");"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "        let raw_reader = JournalReader::new(journal_path)?;"
                      },
                      {
                        "highlight_end": 58,
                        "highlight_start": 1,
                        "text": "        let reader = JournalBatchReader::new(raw_reader);"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 91,
                        "highlight_start": 1,
                        "text": "        let mut watermarks: HashMap<PartitionKey, EvictionWatermark> = HashMap::default();"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "        for batch in reader {"
                      },
                      {
                        "highlight_end": 32,
                        "highlight_start": 1,
                        "text": "            let batch = batch?;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "            for item in batch.items {"
                      },
                      {
                        "highlight_end": 77,
                        "highlight_start": 1,
                        "text": "                if let Some(handle) = partitions_lock.get(&item.partition) {"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                    let tree = &handle.tree;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                    watermarks"
                      },
                      {
                        "highlight_end": 47,
                        "highlight_start": 1,
                        "text": "                        .entry(item.partition)"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                        .and_modify(|prev| {"
                      },
                      {
                        "highlight_end": 66,
                        "highlight_start": 1,
                        "text": "                            prev.lsn = prev.lsn.max(batch.seqno);"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                        })"
                      },
                      {
                        "highlight_end": 63,
                        "highlight_start": 1,
                        "text": "                        .or_insert_with(|| EvictionWatermark {"
                      },
                      {
                        "highlight_end": 55,
                        "highlight_start": 1,
                        "text": "                            partition: handle.clone(),"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                            lsn: batch.seqno,"
                      },
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "                        });"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "                    match item.value_type {"
                      },
                      {
                        "highlight_end": 56,
                        "highlight_start": 1,
                        "text": "                        lsm_tree::ValueType::Value => {"
                      },
                      {
                        "highlight_end": 76,
                        "highlight_start": 1,
                        "text": "                            tree.insert(item.key, item.value, batch.seqno);"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                        }"
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "                        lsm_tree::ValueType::Tombstone => {"
                      },
                      {
                        "highlight_end": 64,
                        "highlight_start": 1,
                        "text": "                            tree.remove(item.key, batch.seqno);"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                        }"
                      },
                      {
                        "highlight_end": 64,
                        "highlight_start": 1,
                        "text": "                        lsm_tree::ValueType::WeakTombstone => {"
                      },
                      {
                        "highlight_end": 69,
                        "highlight_start": 1,
                        "text": "                            tree.remove_weak(item.key, batch.seqno);"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                        }"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "                    }"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                }"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            }"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 52,
                        "highlight_start": 1,
                        "text": "        log::debug!(\"Sealing recovered memtables\");"
                      },
                      {
                        "highlight_end": 37,
                        "highlight_start": 1,
                        "text": "        let mut recovered_count = 0;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "        for handle in watermarks.values() {"
                      },
                      {
                        "highlight_end": 47,
                        "highlight_start": 1,
                        "text": "            let tree = &handle.partition.tree;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 68,
                        "highlight_start": 1,
                        "text": "            let partition_lsn = tree.get_highest_persisted_seqno();"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 68,
                        "highlight_start": 1,
                        "text": "            // IMPORTANT: Only apply sealed memtables to partitions"
                      },
                      {
                        "highlight_end": 64,
                        "highlight_start": 1,
                        "text": "            // that have a lower seqno to avoid double flushing"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "            let should_skip_sealed_memtable ="
                      },
                      {
                        "highlight_end": 88,
                        "highlight_start": 1,
                        "text": "                partition_lsn.is_some_and(|partition_lsn| partition_lsn >= handle.lsn);"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "            if should_skip_sealed_memtable {"
                      },
                      {
                        "highlight_end": 63,
                        "highlight_start": 1,
                        "text": "                handle.partition.tree.clear_active_memtable();"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "                log::trace!("
                      },
                      {
                        "highlight_end": 83,
                        "highlight_start": 1,
                        "text": "                    \"Partition {} has higher seqno ({partition_lsn:?}), skipping\","
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                    handle.partition.name"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                );"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                continue;"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 83,
                        "highlight_start": 1,
                        "text": "            if let Some((memtable_id, sealed_memtable)) = tree.rotate_memtable() {"
                      },
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "                assert_eq!("
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "                    Some(handle.lsn),"
                      },
                      {
                        "highlight_end": 57,
                        "highlight_start": 1,
                        "text": "                    sealed_memtable.get_highest_seqno(),"
                      },
                      {
                        "highlight_end": 85,
                        "highlight_start": 1,
                        "text": "                    \"memtable lsn does not match what was recovered - this is a bug\""
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                );"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "                log::trace!("
                      },
                      {
                        "highlight_end": 58,
                        "highlight_start": 1,
                        "text": "                    \"sealed memtable of {} has {} items\","
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "                    handle.partition.name,"
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "                    sealed_memtable.len(),"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                );"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 83,
                        "highlight_start": 1,
                        "text": "                // Maybe the memtable has a higher seqno, so try to set to maximum"
                      },
                      {
                        "highlight_end": 100,
                        "highlight_start": 1,
                        "text": "                let maybe_next_seqno = tree.get_highest_seqno().map(|x| x + 1).unwrap_or_default();"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                keyspace"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                    .seqno"
                      },
                      {
                        "highlight_end": 87,
                        "highlight_start": 1,
                        "text": "                    .fetch_max(maybe_next_seqno, std::sync::atomic::Ordering::AcqRel);"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 79,
                        "highlight_start": 1,
                        "text": "                log::debug!(\"Keyspace seqno is now {}\", keyspace.seqno.get());"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 84,
                        "highlight_start": 1,
                        "text": "                // IMPORTANT: Add sealed memtable size to current write buffer size"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                keyspace"
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                    .write_buffer_manager"
                      },
                      {
                        "highlight_end": 62,
                        "highlight_start": 1,
                        "text": "                    .allocate(sealed_memtable.size().into());"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 68,
                        "highlight_start": 1,
                        "text": "                // TODO: unit test write buffer size after recovery"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 89,
                        "highlight_start": 1,
                        "text": "                // IMPORTANT: Add sealed memtable to flush manager, so it can be flushed"
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "                flush_manager_lock.enqueue_task("
                      },
                      {
                        "highlight_end": 51,
                        "highlight_start": 1,
                        "text": "                    handle.partition.name.clone(),"
                      },
                      {
                        "highlight_end": 50,
                        "highlight_start": 1,
                        "text": "                    crate::flush::manager::Task {"
                      },
                      {
                        "highlight_end": 41,
                        "highlight_start": 1,
                        "text": "                        id: memtable_id,"
                      },
                      {
                        "highlight_end": 41,
                        "highlight_start": 1,
                        "text": "                        sealed_memtable,"
                      },
                      {
                        "highlight_end": 61,
                        "highlight_start": 1,
                        "text": "                        partition: handle.partition.clone(),"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    },"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                );"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "                recovered_count += 1;"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            }"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 69,
                        "highlight_start": 1,
                        "text": "        log::debug!(\"Recovered {recovered_count} sealed memtables\");"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "        // IMPORTANT: Add sealed journal to journal manager"
                      },
                      {
                        "highlight_end": 69,
                        "highlight_start": 1,
                        "text": "        journal_manager_lock.enqueue(crate::journal::manager::Item {"
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "            watermarks: watermarks.into_values().collect(),"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "            path: journal_path.clone(),"
                      },
                      {
                        "highlight_end": 41,
                        "highlight_start": 1,
                        "text": "            size_in_bytes: journal_size,"
                      },
                      {
                        "highlight_end": 12,
                        "highlight_start": 1,
                        "text": "        });"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 70,
                        "highlight_start": 1,
                        "text": "        log::debug!(\"Requeued sealed journal at {:?}\", journal_path);"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 11,
                        "highlight_start": 1,
                        "text": "    Ok(())"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "}"
                      }
                    ]
                  },
                  {
                    "byte_end": 4902,
                    "byte_start": 4882,
                    "column_end": 33,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 129,
                    "line_start": 129,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 13,
                        "text": "    let mut journal_manager_lock = keyspace.journal_manager.write().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\recovery.rs:126:34\n    |\n126 |     let mut flush_manager_lock = keyspace.flush_manager.write().expect(\"lock is poisoned\");\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 4817,
                    "byte_start": 4760,
                    "column_end": 91,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 126,
                    "line_start": 126,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 91,
                        "highlight_start": 34,
                        "text": "    let mut flush_manager_lock = keyspace.flush_manager.write().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\recovery.rs:129:36\n    |\n129 |     let mut journal_manager_lock = keyspace.journal_manager.write().expect(\"lock is poisoned\");\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 4964,
                    "byte_start": 4905,
                    "column_end": 95,
                    "column_start": 36,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 129,
                    "line_start": 129,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 95,
                        "highlight_start": 36,
                        "text": "    let mut journal_manager_lock = keyspace.journal_manager.write().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n   --> src\\recovery.rs:132:27\n    |\n132 |     let partitions_lock = keyspace.partitions.read().expect(\"lock is poisoned\");\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: if this value is an `Err`, it will panic\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 5096,
                    "byte_start": 5043,
                    "column_end": 80,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 132,
                    "line_start": 132,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 80,
                        "highlight_start": 27,
                        "text": "    let partitions_lock = keyspace.partitions.read().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `debug!` args\n   --> src\\recovery.rs:135:50\n    |\n135 |         log::debug!(\"Recovering sealed journal: {journal_path:?}\");\n    |                                                  ^^^^^^^^^^^^\n    |\n    = help: use `Display` formatting and change this to `journal_path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `journal_path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `debug!` args",
                "spans": [
                  {
                    "byte_end": 5207,
                    "byte_start": 5195,
                    "column_end": 62,
                    "column_start": 50,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 135,
                    "line_start": 135,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 62,
                        "highlight_start": 50,
                        "text": "        log::debug!(\"Recovering sealed journal: {journal_path:?}\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `debug!` args\n   --> src\\recovery.rs:139:49\n    |\n139 |         log::debug!(\"Reading sealed journal at {journal_path:?}\");\n    |                                                 ^^^^^^^^^^^^\n    |\n    = help: use `Display` formatting and change this to `journal_path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `journal_path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `debug!` args",
                "spans": [
                  {
                    "byte_end": 5335,
                    "byte_start": 5323,
                    "column_end": 61,
                    "column_start": 49,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 139,
                    "line_start": 139,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 61,
                        "highlight_start": 49,
                        "text": "        log::debug!(\"Reading sealed journal at {journal_path:?}\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `Debug` formatting in `debug!` args\n   --> src\\recovery.rs:253:56\n    |\n253 |         log::debug!(\"Requeued sealed journal at {:?}\", journal_path);\n    |                                                        ^^^^^^^^^^^^\n    |\n    = help: use `Display` formatting and change this to `journal_path.display()`\n    = note: switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Display` formatting and change this to `journal_path.display()`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "switching to `Display` formatting will change how the value is shown; escaped characters will no longer be escaped and surrounding quotes will be removed",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_debug_formatting",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_debug_formatting",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `Debug` formatting in `debug!` args",
                "spans": [
                  {
                    "byte_end": 9703,
                    "byte_start": 9691,
                    "column_end": 68,
                    "column_start": 56,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 253,
                    "line_start": 253,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 68,
                        "highlight_start": 56,
                        "text": "        log::debug!(\"Requeued sealed journal at {:?}\", journal_path);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: variables can be used directly in the `format!` string\n   --> src\\recovery.rs:253:9\n    |\n253 |         log::debug!(\"Requeued sealed journal at {:?}\", journal_path);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n253 -         log::debug!(\"Requeued sealed journal at {:?}\", journal_path);\n253 +         log::debug!(\"Requeued sealed journal at {journal_path:?}\");\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9685,
                        "byte_start": 9685,
                        "column_end": 50,
                        "column_start": 50,
                        "expansion": null,
                        "file_name": "src\\recovery.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 253,
                        "line_start": 253,
                        "suggested_replacement": "journal_path",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 50,
                            "highlight_start": 50,
                            "text": "        log::debug!(\"Requeued sealed journal at {:?}\", journal_path);"
                          }
                        ]
                      },
                      {
                        "byte_end": 9703,
                        "byte_start": 9689,
                        "column_end": 68,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\recovery.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 253,
                        "line_start": 253,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 68,
                            "highlight_start": 54,
                            "text": "        log::debug!(\"Requeued sealed journal at {:?}\", journal_path);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "error",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 9704,
                    "byte_start": 9644,
                    "column_end": 69,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\recovery.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 253,
                    "line_start": 253,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 69,
                        "highlight_start": 9,
                        "text": "        log::debug!(\"Requeued sealed journal at {:?}\", journal_path);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n  --> src\\snapshot_tracker.rs:73:10\n   |\n73 |         *self.lowest_freed_instant.read().expect(\"lock is poisoned\")\n   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: if this value is an `Err`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 1901,
                    "byte_start": 1842,
                    "column_end": 69,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\snapshot_tracker.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 73,
                    "line_start": 73,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 69,
                        "highlight_start": 10,
                        "text": "        *self.lowest_freed_instant.read().expect(\"lock is poisoned\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n  --> src\\snapshot_tracker.rs:79:24\n   |\n79 |         let mut lock = self.lowest_freed_instant.write().expect(\"lock is poisoned\");\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: if this value is an `Err`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 2091,
                    "byte_start": 2031,
                    "column_end": 84,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\snapshot_tracker.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 79,
                    "line_start": 79,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 84,
                        "highlight_start": 24,
                        "text": "        let mut lock = self.lowest_freed_instant.write().expect(\"lock is poisoned\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: docs for function which may panic missing `# Panics` section\n  --> src\\tx\\keyspace.rs:42:5\n   |\n42 |     pub fn write_tx(&self) -> WriteTransaction {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: first possible panic found here\n  --> src\\tx\\keyspace.rs:43:21\n   |\n43 |         let guard = self.single_writer_lock.lock().expect(\"poisoned tx lock\");\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "first possible panic found here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1249,
                        "byte_start": 1192,
                        "column_end": 78,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\tx\\keyspace.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 43,
                        "line_start": 43,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 78,
                            "highlight_start": 21,
                            "text": "        let guard = self.single_writer_lock.lock().expect(\"poisoned tx lock\");"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::missing_panics_doc",
                  "explanation": null
                },
                "level": "warning",
                "message": "docs for function which may panic missing `# Panics` section",
                "spans": [
                  {
                    "byte_end": 1169,
                    "byte_start": 1127,
                    "column_end": 47,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\tx\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 42,
                    "line_start": 42,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 47,
                        "highlight_start": 5,
                        "text": "    pub fn write_tx(&self) -> WriteTransaction {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `expect()` on a `Result` value\n  --> src\\tx\\keyspace.rs:43:21\n   |\n43 |         let guard = self.single_writer_lock.lock().expect(\"poisoned tx lock\");\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: if this value is an `Err`, it will panic\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "if this value is an `Err`, it will panic",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::expect_used",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 1249,
                    "byte_start": 1192,
                    "column_end": 78,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\tx\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 43,
                    "line_start": 43,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 78,
                        "highlight_start": 21,
                        "text": "        let guard = self.single_writer_lock.lock().expect(\"poisoned tx lock\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: calling `Arc::default()` is more clear than this expression\n   --> src\\tx\\keyspace.rs:217:33\n    |\n217 |             single_writer_lock: Default::default(),\n    |                                 ^^^^^^^^^^^^^^^^^^ help: try: `Arc::default()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access\n    = note: `#[warn(clippy::default_trait_access)]` implied by `#[warn(clippy::pedantic)]`\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::default_trait_access)]` implied by `#[warn(clippy::pedantic)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6631,
                        "byte_start": 6613,
                        "column_end": 51,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\tx\\keyspace.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 217,
                        "line_start": 217,
                        "suggested_replacement": "Arc::default()",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 33,
                            "text": "            single_writer_lock: Default::default(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::default_trait_access",
                  "explanation": null
                },
                "level": "warning",
                "message": "calling `Arc::default()` is more clear than this expression",
                "spans": [
                  {
                    "byte_end": 6631,
                    "byte_start": 6613,
                    "column_end": 51,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\tx\\keyspace.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 217,
                    "line_start": 217,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 33,
                        "text": "            single_writer_lock: Default::default(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: temporary with significant `Drop` can be early dropped\n   --> src\\tx\\partition.rs:165:21\n    |\n164 | /         {\n165 | |             let mut tx = self.keyspace.write_tx();\n    | |                     ^^\n166 | |\n167 | |             let prev = tx.fetch_update(self, key, f)?;\n...   |\n170 | |             Ok(prev)\n171 | |         }\n    | |_________- temporary `tx` is currently being dropped at the end of its contained scope\n    |\n    = note: this might lead to unnecessary resource contention\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening\nhelp: drop the temporary after the end of its last usage\n    |\n168 ~             tx.commit()?;\n169 +             drop(tx);\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "this might lead to unnecessary resource contention",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "drop the temporary after the end of its last usage",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5587,
                        "byte_start": 5587,
                        "column_end": 26,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\tx\\partition.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 168,
                        "line_start": 168,
                        "suggested_replacement": "\n            drop(tx);",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 26,
                            "text": "            tx.commit()?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::significant_drop_tightening",
                  "explanation": null
                },
                "level": "warning",
                "message": "temporary with significant `Drop` can be early dropped",
                "spans": [
                  {
                    "byte_end": 5619,
                    "byte_start": 5453,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\tx\\partition.rs",
                    "is_primary": false,
                    "label": "temporary `tx` is currently being dropped at the end of its contained scope",
                    "line_end": 171,
                    "line_start": 164,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        {"
                      },
                      {
                        "highlight_end": 51,
                        "highlight_start": 1,
                        "text": "            let mut tx = self.keyspace.write_tx();"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 55,
                        "highlight_start": 1,
                        "text": "            let prev = tx.fetch_update(self, key, f)?;"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "            tx.commit()?;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 21,
                        "highlight_start": 1,
                        "text": "            Ok(prev)"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      }
                    ]
                  },
                  {
                    "byte_end": 5477,
                    "byte_start": 5475,
                    "column_end": 23,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\tx\\partition.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 165,
                    "line_start": 165,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 21,
                        "text": "            let mut tx = self.keyspace.write_tx();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: temporary with significant `Drop` can be early dropped\n   --> src\\tx\\partition.rs:246:21\n    |\n245 | /         {\n246 | |             let mut tx = self.keyspace.write_tx();\n    | |                     ^^\n247 | |             let updated = tx.update_fetch(self, key, f)?;\n248 | |             tx.commit()?;\n249 | |\n250 | |             Ok(updated)\n251 | |         }\n    | |_________- temporary `tx` is currently being dropped at the end of its contained scope\n    |\n    = note: this might lead to unnecessary resource contention\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening\nhelp: drop the temporary after the end of its last usage\n    |\n248 ~             tx.commit()?;\n249 +             drop(tx);\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "this might lead to unnecessary resource contention",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "drop the temporary after the end of its last usage",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8183,
                        "byte_start": 8183,
                        "column_end": 26,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\tx\\partition.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 248,
                        "line_start": 248,
                        "suggested_replacement": "\n            drop(tx);",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 26,
                            "text": "            tx.commit()?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::significant_drop_tightening",
                  "explanation": null
                },
                "level": "warning",
                "message": "temporary with significant `Drop` can be early dropped",
                "spans": [
                  {
                    "byte_end": 8218,
                    "byte_start": 8047,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\tx\\partition.rs",
                    "is_primary": false,
                    "label": "temporary `tx` is currently being dropped at the end of its contained scope",
                    "line_end": 251,
                    "line_start": 245,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        {"
                      },
                      {
                        "highlight_end": 51,
                        "highlight_start": 1,
                        "text": "            let mut tx = self.keyspace.write_tx();"
                      },
                      {
                        "highlight_end": 58,
                        "highlight_start": 1,
                        "text": "            let updated = tx.update_fetch(self, key, f)?;"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "            tx.commit()?;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "            Ok(updated)"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      }
                    ]
                  },
                  {
                    "byte_end": 8071,
                    "byte_start": 8069,
                    "column_end": 23,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\tx\\partition.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 246,
                    "line_start": 246,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 21,
                        "text": "            let mut tx = self.keyspace.write_tx();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: temporary with significant `Drop` can be early dropped\n   --> src\\tx\\partition.rs:297:21\n    |\n296 | /         {\n297 | |             let mut tx = self.keyspace.write_tx();\n    | |                     ^^\n298 | |             tx.insert(self, key, value);\n299 | |             tx.commit()?;\n300 | |             Ok(())\n301 | |         }\n    | |_________- temporary `tx` is currently being dropped at the end of its contained scope\n    |\n    = note: this might lead to unnecessary resource contention\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening\nhelp: drop the temporary after the end of its last usage\n    |\n299 ~             tx.commit()?;\n300 +             drop(tx);\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "this might lead to unnecessary resource contention",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "drop the temporary after the end of its last usage",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9716,
                        "byte_start": 9716,
                        "column_end": 26,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\tx\\partition.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 299,
                        "line_start": 299,
                        "suggested_replacement": "\n            drop(tx);",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 26,
                            "text": "            tx.commit()?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::significant_drop_tightening",
                  "explanation": null
                },
                "level": "warning",
                "message": "temporary with significant `Drop` can be early dropped",
                "spans": [
                  {
                    "byte_end": 9745,
                    "byte_start": 9597,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\tx\\partition.rs",
                    "is_primary": false,
                    "label": "temporary `tx` is currently being dropped at the end of its contained scope",
                    "line_end": 301,
                    "line_start": 296,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        {"
                      },
                      {
                        "highlight_end": 51,
                        "highlight_start": 1,
                        "text": "            let mut tx = self.keyspace.write_tx();"
                      },
                      {
                        "highlight_end": 41,
                        "highlight_start": 1,
                        "text": "            tx.insert(self, key, value);"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "            tx.commit()?;"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "            Ok(())"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      }
                    ]
                  },
                  {
                    "byte_end": 9621,
                    "byte_start": 9619,
                    "column_end": 23,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\tx\\partition.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 297,
                    "line_start": 297,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 21,
                        "text": "            let mut tx = self.keyspace.write_tx();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: temporary with significant `Drop` can be early dropped\n   --> src\\tx\\partition.rs:342:21\n    |\n341 | /         {\n342 | |             let mut tx = self.keyspace.write_tx();\n    | |                     ^^\n343 | |             tx.remove(self, key);\n344 | |             tx.commit()?;\n345 | |             Ok(())\n346 | |         }\n    | |_________- temporary `tx` is currently being dropped at the end of its contained scope\n    |\n    = note: this might lead to unnecessary resource contention\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening\nhelp: drop the temporary after the end of its last usage\n    |\n344 ~             tx.commit()?;\n345 +             drop(tx);\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "this might lead to unnecessary resource contention",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "drop the temporary after the end of its last usage",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11121,
                        "byte_start": 11121,
                        "column_end": 26,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\tx\\partition.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 344,
                        "line_start": 344,
                        "suggested_replacement": "\n            drop(tx);",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 26,
                            "text": "            tx.commit()?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::significant_drop_tightening",
                  "explanation": null
                },
                "level": "warning",
                "message": "temporary with significant `Drop` can be early dropped",
                "spans": [
                  {
                    "byte_end": 11150,
                    "byte_start": 11009,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\tx\\partition.rs",
                    "is_primary": false,
                    "label": "temporary `tx` is currently being dropped at the end of its contained scope",
                    "line_end": 346,
                    "line_start": 341,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        {"
                      },
                      {
                        "highlight_end": 51,
                        "highlight_start": 1,
                        "text": "            let mut tx = self.keyspace.write_tx();"
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "            tx.remove(self, key);"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "            tx.commit()?;"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "            Ok(())"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      }
                    ]
                  },
                  {
                    "byte_end": 11033,
                    "byte_start": 11031,
                    "column_end": 23,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\tx\\partition.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 342,
                    "line_start": 342,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 21,
                        "text": "            let mut tx = self.keyspace.write_tx();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting `usize` to `u32` may truncate the value on targets with 64-bit wide pointers\n   --> src\\tx\\write\\mod.rs:183:64\n    |\n183 |                 return Ok(ignore_tombstone_value(item).map(|x| x.value.len() as u32));\n    |                                                                ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\n    = note: `#[warn(clippy::cast_possible_truncation)]` implied by `#[warn(clippy::pedantic)]`\nhelp: ... or use `try_from` and handle the error accordingly\n    |\n183 -                 return Ok(ignore_tombstone_value(item).map(|x| x.value.len() as u32));\n183 +                 return Ok(ignore_tombstone_value(item).map(|x| u32::try_from(x.value.len())));\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::cast_possible_truncation)]` implied by `#[warn(clippy::pedantic)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "... or use `try_from` and handle the error accordingly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5298,
                        "byte_start": 5278,
                        "column_end": 84,
                        "column_start": 64,
                        "expansion": null,
                        "file_name": "src\\tx\\write\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 183,
                        "line_start": 183,
                        "suggested_replacement": "u32::try_from(x.value.len())",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 84,
                            "highlight_start": 64,
                            "text": "                return Ok(ignore_tombstone_value(item).map(|x| x.value.len() as u32));"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::cast_possible_truncation",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting `usize` to `u32` may truncate the value on targets with 64-bit wide pointers",
                "spans": [
                  {
                    "byte_end": 5298,
                    "byte_start": 5278,
                    "column_end": 84,
                    "column_start": 64,
                    "expansion": null,
                    "file_name": "src\\tx\\write\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 183,
                    "line_start": 183,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 84,
                        "highlight_start": 64,
                        "text": "                return Ok(ignore_tombstone_value(item).map(|x| x.value.len() as u32));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this argument is a mutable reference, but not used mutably\n   --> src\\flush\\manager.rs:114:33\n    |\n114 |     pub(crate) fn collect_tasks(&mut self, limit: usize) -> HashMap<PartitionKey, Vec<Arc<Task>>> {\n    |                                 ^^^^^^^^^ help: consider changing to: `&self`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_ref_mut\n    = note: `#[warn(clippy::needless_pass_by_ref_mut)]` implied by `#[warn(clippy::nursery)]`\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_ref_mut",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_pass_by_ref_mut)]` implied by `#[warn(clippy::nursery)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider changing to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3162,
                        "byte_start": 3153,
                        "column_end": 42,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\flush\\manager.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 114,
                        "line_start": 114,
                        "suggested_replacement": "&self",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 33,
                            "text": "    pub(crate) fn collect_tasks(&mut self, limit: usize) -> HashMap<PartitionKey, Vec<Arc<Task>>> {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_pass_by_ref_mut",
                  "explanation": null
                },
                "level": "warning",
                "message": "this argument is a mutable reference, but not used mutably",
                "spans": [
                  {
                    "byte_end": 3162,
                    "byte_start": 3153,
                    "column_end": 42,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\flush\\manager.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 114,
                    "line_start": 114,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 33,
                        "text": "    pub(crate) fn collect_tasks(&mut self, limit: usize) -> HashMap<PartitionKey, Vec<Arc<Task>>> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpit8vacl9/fjall-2.11.1#fjall@2.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fjall",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpit8vacl9\\fjall-2.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this argument is a mutable reference, but not used mutably\n  --> src\\journal\\batch_reader.rs:50:20\n   |\n50 |     fn truncate_to(&mut self, last_valid_pos: u64) -> crate::Result<()> {\n   |                    ^^^^^^^^^ help: consider changing to: `&self`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_ref_mut\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_ref_mut",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider changing to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1332,
                        "byte_start": 1323,
                        "column_end": 29,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "src\\journal\\batch_reader.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 50,
                        "line_start": 50,
                        "suggested_replacement": "&self",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 20,
                            "text": "    fn truncate_to(&mut self, last_valid_pos: u64) -> crate::Result<()> {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_pass_by_ref_mut",
                  "explanation": null
                },
                "level": "warning",
                "message": "this argument is a mutable reference, but not used mutably",
                "spans": [
                  {
                    "byte_end": 1332,
                    "byte_start": 1323,
                    "column_end": 29,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\journal\\batch_reader.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 50,
                    "line_start": 50,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 20,
                        "text": "    fn truncate_to(&mut self, last_valid_pos: u64) -> crate::Result<()> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "build-finished",
              "success": false
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 162
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {}
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "fjall",
          "version": "2.11.1",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/fjall/latest/fjall/all.html \"show sidebar\")\n# Crate fjallCopy item path\n[Settings](https://docs.rs/fjall/latest/settings.html)\n[Help](https://docs.rs/fjall/latest/help.html)\nSummary[Source](https://docs.rs/fjall/latest/src/fjall/lib.rs.html#5-219)\nExpand description\nFjall is a log-structured embeddable key-value storage engine written in Rust. It features:\n  * Thread-safe BTreeMap-like API\n  * 100% safe & stable Rust\n  * LSM-tree-based storage similar to `RocksDB`\n  * Range & prefix searching with forward and reverse iteration\n  * Cross-partition snapshots (MVCC)\n  * Automatic background maintenance\n  * Single-writer transactions (optional)\n  * Key-value separation for large blob use cases (optional)\n\n\nEach `Keyspace` is a single logical database and is split into `partitions` (a.k.a. column families) - you should probably only use a single keyspace for your application. Each partition is physically a single LSM-tree and its own logical collection; however, write operations across partitions are atomic as they are persisted in a single database-level journal, which will be recovered after a crash.\nIt is not:\n  * a standalone server\n  * a relational or wide-column database: it has no notion of columns\n\n\nKeys are limited to 65536 bytes, values are limited to 2^32 bytes. As is normal with any kind of storage engine, larger keys and values have a bigger performance impact.\nFor the underlying LSM-tree implementation, see: <https://crates.io/crates/lsm-tree>.\n```\nuse fjall::{Config, PersistMode, Keyspace, PartitionCreateOptions};\n// A keyspace is a database, which may contain multiple collections (\"partitions\")\n// You should probably only use a single keyspace for your application\n//\nlet keyspace = Config::new(folder).open()?; // or open_transactional for transactional semantics\n// Each partition is its own physical LSM-tree\nlet items = keyspace.open_partition(\"my_items\", PartitionCreateOptions::default())?;\n// Write some data\nitems.insert(\"a\", \"hello\")?;\n// And retrieve it\nlet bytes = items.get(\"a\")?;\n// Or remove it again\nitems.remove(\"a\")?;\n// Search by prefix\nfor kv in items.prefix(\"prefix\") {\n // ...\n}\n// Search by range\nfor kv in items.range(\"a\"..=\"z\") {\n // ...\n}\n// Iterators implement DoubleEndedIterator, so you can search backwards, too!\nfor kv in items.prefix(\"prefix\").rev() {\n // ...\n}\n// Sync the journal to disk to make sure data is definitely durable\n// When the keyspace is dropped, it will try to persist with `PersistMode::SyncAll` as well\nkeyspace.persist(PersistMode::SyncAll)?;\n```\n\n## Modules[\u00a7](https://docs.rs/fjall/latest/fjall/#modules)\n\n[compaction](https://docs.rs/fjall/latest/fjall/compaction/index.html \"mod fjall::compaction\")\n    Contains compaction strategies\n## Structs[\u00a7](https://docs.rs/fjall/latest/fjall/#structs)\n\n[Batch](https://docs.rs/fjall/latest/fjall/struct.Batch.html \"struct fjall::Batch\")\n    An atomic write batch\n\n[BlobCache](https://docs.rs/fjall/latest/fjall/struct.BlobCache.html \"struct fjall::BlobCache\")Deprecated\n    Blob cache that caches frequently read blobs\n\n[BlockCache](https://docs.rs/fjall/latest/fjall/struct.BlockCache.html \"struct fjall::BlockCache\")Deprecated\n    Block cache that caches frequently read disk blocks\n\n[Config](https://docs.rs/fjall/latest/fjall/struct.Config.html \"struct fjall::Config\")\n    Global keyspace configuration\n\n[Keyspace](https://docs.rs/fjall/latest/fjall/struct.Keyspace.html \"struct fjall::Keyspace\")\n    A keyspace is a single logical database which can house multiple partitions\n\n[KvSeparationOptions](https://docs.rs/fjall/latest/fjall/struct.KvSeparationOptions.html \"struct fjall::KvSeparationOptions\")\n    Configuration options for key-value-separated partitions.\n\n[PartitionCreateOptions](https://docs.rs/fjall/latest/fjall/struct.PartitionCreateOptions.html \"struct fjall::PartitionCreateOptions\")\n    Options to configure a partition\n\n[PartitionHandle](https://docs.rs/fjall/latest/fjall/struct.PartitionHandle.html \"struct fjall::PartitionHandle\")\n    Access to a keyspace partition\n\n[ReadTransaction](https://docs.rs/fjall/latest/fjall/struct.ReadTransaction.html \"struct fjall::ReadTransaction\")\n    A cross-partition, read-only transaction (snapshot)\n\n[Slice](https://docs.rs/fjall/latest/fjall/struct.Slice.html \"struct fjall::Slice\")\n    An immutable byte slice that can be cloned without additional heap allocation\n\n[Snapshot](https://docs.rs/fjall/latest/fjall/struct.Snapshot.html \"struct fjall::Snapshot\")\n    A snapshot captures a read-only point-in-time view of the tree at the time the snapshot was created\n\n[TransactionalKeyspace](https://docs.rs/fjall/latest/fjall/struct.TransactionalKeyspace.html \"struct fjall::TransactionalKeyspace\")\n    Transactional keyspace\n\n[TransactionalPartitionHandle](https://docs.rs/fjall/latest/fjall/struct.TransactionalPartitionHandle.html \"struct fjall::TransactionalPartitionHandle\")\n    Access to a partition of a transactional keyspace\n\n[WriteTransaction](https://docs.rs/fjall/latest/fjall/struct.WriteTransaction.html \"struct fjall::WriteTransaction\")\n    A single-writer (serialized) cross-partition transaction\n## Enums[\u00a7](https://docs.rs/fjall/latest/fjall/#enums)\n\n[AnyTree](https://docs.rs/fjall/latest/fjall/enum.AnyTree.html \"enum fjall::AnyTree\")\n    May be a standard [`Tree`](https://docs.rs/lsm-tree/2.10.1/x86_64-unknown-linux-gnu/lsm_tree/tree/struct.Tree.html \"struct lsm_tree::tree::Tree\") or a [`BlobTree`](https://docs.rs/lsm-tree/2.10.1/x86_64-unknown-linux-gnu/lsm_tree/blob_tree/struct.BlobTree.html \"struct lsm_tree::blob_tree::BlobTree\")\n\n[CompressionType](https://docs.rs/fjall/latest/fjall/enum.CompressionType.html \"enum fjall::CompressionType\")\n    Compression algorithm to use.\n\n[Error](https://docs.rs/fjall/latest/fjall/enum.Error.html \"enum fjall::Error\")\n    Errors that may occur in the storage engine\n\n[PersistMode](https://docs.rs/fjall/latest/fjall/enum.PersistMode.html \"enum fjall::PersistMode\")\n    The persist mode allows setting the durability guarantee of previous writes\n\n[RecoveryError](https://docs.rs/fjall/latest/fjall/enum.RecoveryError.html \"enum fjall::RecoveryError\")\n    Errors that can occur during journal recovery\n\n[TreeType](https://docs.rs/fjall/latest/fjall/enum.TreeType.html \"enum fjall::TreeType\")\n    LSM-tree type\n\n[Version](https://docs.rs/fjall/latest/fjall/enum.Version.html \"enum fjall::Version\")\n    Disk format version\n## Traits[\u00a7](https://docs.rs/fjall/latest/fjall/#traits)\n\n[GarbageCollection](https://docs.rs/fjall/latest/fjall/trait.GarbageCollection.html \"trait fjall::GarbageCollection\")\n    Functions for garbage collection strategies\n## Type Aliases[\u00a7](https://docs.rs/fjall/latest/fjall/#types)\n\n[Instant](https://docs.rs/fjall/latest/fjall/type.Instant.html \"type fjall::Instant\")\n    A snapshot moment\n\n[KvPair](https://docs.rs/fjall/latest/fjall/type.KvPair.html \"type fjall::KvPair\")\n    KV-tuple, typically returned by an iterator\n\n[LsmError](https://docs.rs/fjall/latest/fjall/type.LsmError.html \"type fjall::LsmError\")\n    Re-export of [`lsm_tree::Error`](https://docs.rs/lsm-tree/2.10.1/x86_64-unknown-linux-gnu/lsm_tree/error/enum.Error.html \"enum lsm_tree::error::Error\")\n\n[Partition](https://docs.rs/fjall/latest/fjall/type.Partition.html \"type fjall::Partition\")\n    Alias for [`PartitionHandle`](https://docs.rs/fjall/latest/fjall/struct.PartitionHandle.html \"struct fjall::PartitionHandle\")\n\n[Result](https://docs.rs/fjall/latest/fjall/type.Result.html \"type fjall::Result\")\n    Result helper type\n\n[TransactionalPartition](https://docs.rs/fjall/latest/fjall/type.TransactionalPartition.html \"type fjall::TransactionalPartition\")\n    Alias for [`TransactionalPartitionHandle`](https://docs.rs/fjall/latest/fjall/struct.TransactionalPartitionHandle.html \"struct fjall::TransactionalPartitionHandle\")\n\n[TxKeyspace](https://docs.rs/fjall/latest/fjall/type.TxKeyspace.html \"type fjall::TxKeyspace\")\n    Alias for [`TransactionalKeyspace`](https://docs.rs/fjall/latest/fjall/struct.TransactionalKeyspace.html \"struct fjall::TransactionalKeyspace\")\n\n[TxPartition](https://docs.rs/fjall/latest/fjall/type.TxPartition.html \"type fjall::TxPartition\")\n    Alias for [`TransactionalPartitionHandle`](https://docs.rs/fjall/latest/fjall/struct.TransactionalPartitionHandle.html \"struct fjall::TransactionalPartitionHandle\")\n\n[TxPartitionHandle](https://docs.rs/fjall/latest/fjall/type.TxPartitionHandle.html \"type fjall::TxPartitionHandle\")\n    Alias for [`TransactionalPartitionHandle`](https://docs.rs/fjall/latest/fjall/struct.TransactionalPartitionHandle.html \"struct fjall::TransactionalPartitionHandle\")\n\n[UserKey](https://docs.rs/fjall/latest/fjall/type.UserKey.html \"type fjall::UserKey\")\n    User defined key\n\n[UserValue](https://docs.rs/fjall/latest/fjall/type.UserValue.html \"type fjall::UserValue\")\n    User defined data (blob of bytes)\n\n[WriteBatch](https://docs.rs/fjall/latest/fjall/type.WriteBatch.html \"type fjall::WriteBatch\")\n    Alias for [`Batch`](https://docs.rs/fjall/latest/fjall/struct.Batch.html \"struct fjall::Batch\")\n",
            "markdown_with_citations": "[](https://docs.rs/fjall/latest/fjall/all.html \"show sidebar\")\n# Crate fjallCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nFjall is a log-structured embeddable key-value storage engine written in Rust. It features:\n  * Thread-safe BTreeMap-like API\n  * 100% safe & stable Rust\n  * LSM-tree-based storage similar to `RocksDB`\n  * Range & prefix searching with forward and reverse iteration\n  * Cross-partition snapshots (MVCC)\n  * Automatic background maintenance\n  * Single-writer transactions (optional)\n  * Key-value separation for large blob use cases (optional)\n\n\nEach `Keyspace` is a single logical database and is split into `partitions` (a.k.a. column families) - you should probably only use a single keyspace for your application. Each partition is physically a single LSM-tree and its own logical collection; however, write operations across partitions are atomic as they are persisted in a single database-level journal, which will be recovered after a crash.\nIt is not:\n  * a standalone server\n  * a relational or wide-column database: it has no notion of columns\n\n\nKeys are limited to 65536 bytes, values are limited to 2^32 bytes. As is normal with any kind of storage engine, larger keys and values have a bigger performance impact.\nFor the underlying LSM-tree implementation, see: <https://crates.io/crates/lsm-tree>.\n```\nuse fjall::{Config, PersistMode, Keyspace, PartitionCreateOptions};\n// A keyspace is a database, which may contain multiple collections (\"partitions\")\n// You should probably only use a single keyspace for your application\n//\nlet keyspace = Config::new(folder).open()?; // or open_transactional for transactional semantics\n// Each partition is its own physical LSM-tree\nlet items = keyspace.open_partition(\"my_items\", PartitionCreateOptions::default())?;\n// Write some data\nitems.insert(\"a\", \"hello\")?;\n// And retrieve it\nlet bytes = items.get(\"a\")?;\n// Or remove it again\nitems.remove(\"a\")?;\n// Search by prefix\nfor kv in items.prefix(\"prefix\") {\n // ...\n}\n// Search by range\nfor kv in items.range(\"a\"..=\"z\") {\n // ...\n}\n// Iterators implement DoubleEndedIterator, so you can search backwards, too!\nfor kv in items.prefix(\"prefix\").rev() {\n // ...\n}\n// Sync the journal to disk to make sure data is definitely durable\n// When the keyspace is dropped, it will try to persist with `PersistMode::SyncAll` as well\nkeyspace.persist(PersistMode::SyncAll)?;\n```\n\n## Modules\u00a7\u27e84\u27e9\n\ncompaction\u27e85\u27e9\n    Contains compaction strategies\n## Structs\u00a7\u27e86\u27e9\n\nBatch\u27e87\u27e9\n    An atomic write batch\n\nBlobCache\u27e88\u27e9Deprecated\n    Blob cache that caches frequently read blobs\n\nBlockCache\u27e89\u27e9Deprecated\n    Block cache that caches frequently read disk blocks\n\nConfig\u27e810\u27e9\n    Global keyspace configuration\n\nKeyspace\u27e811\u27e9\n    A keyspace is a single logical database which can house multiple partitions\n\nKvSeparationOptions\u27e812\u27e9\n    Configuration options for key-value-separated partitions.\n\nPartitionCreateOptions\u27e813\u27e9\n    Options to configure a partition\n\nPartitionHandle\u27e814\u27e9\n    Access to a keyspace partition\n\nReadTransaction\u27e815\u27e9\n    A cross-partition, read-only transaction (snapshot)\n\nSlice\u27e816\u27e9\n    An immutable byte slice that can be cloned without additional heap allocation\n\nSnapshot\u27e817\u27e9\n    A snapshot captures a read-only point-in-time view of the tree at the time the snapshot was created\n\nTransactionalKeyspace\u27e818\u27e9\n    Transactional keyspace\n\nTransactionalPartitionHandle\u27e819\u27e9\n    Access to a partition of a transactional keyspace\n\nWriteTransaction\u27e820\u27e9\n    A single-writer (serialized) cross-partition transaction\n## Enums\u00a7\u27e821\u27e9\n\nAnyTree\u27e822\u27e9\n    May be a standard `Tree`\u27e823\u27e9 or a `BlobTree`\u27e824\u27e9\n\nCompressionType\u27e825\u27e9\n    Compression algorithm to use.\n\nError\u27e826\u27e9\n    Errors that may occur in the storage engine\n\nPersistMode\u27e827\u27e9\n    The persist mode allows setting the durability guarantee of previous writes\n\nRecoveryError\u27e828\u27e9\n    Errors that can occur during journal recovery\n\nTreeType\u27e829\u27e9\n    LSM-tree type\n\nVersion\u27e830\u27e9\n    Disk format version\n## Traits\u00a7\u27e831\u27e9\n\nGarbageCollection\u27e832\u27e9\n    Functions for garbage collection strategies\n## Type Aliases\u00a7\u27e833\u27e9\n\nInstant\u27e834\u27e9\n    A snapshot moment\n\nKvPair\u27e835\u27e9\n    KV-tuple, typically returned by an iterator\n\nLsmError\u27e836\u27e9\n    Re-export of `lsm_tree::Error`\u27e837\u27e9\n\nPartition\u27e838\u27e9\n    Alias for `PartitionHandle`\u27e814\u27e9\n\nResult\u27e839\u27e9\n    Result helper type\n\nTransactionalPartition\u27e840\u27e9\n    Alias for `TransactionalPartitionHandle`\u27e819\u27e9\n\nTxKeyspace\u27e841\u27e9\n    Alias for `TransactionalKeyspace`\u27e818\u27e9\n\nTxPartition\u27e842\u27e9\n    Alias for `TransactionalPartitionHandle`\u27e819\u27e9\n\nTxPartitionHandle\u27e843\u27e9\n    Alias for `TransactionalPartitionHandle`\u27e819\u27e9\n\nUserKey\u27e844\u27e9\n    User defined key\n\nUserValue\u27e845\u27e9\n    User defined data (blob of bytes)\n\nWriteBatch\u27e846\u27e9\n    Alias for `Batch`\u27e87\u27e9\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/fjall/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/fjall/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/fjall/latest/src/fjall/lib.rs.html#5-219: Source\n\u27e84\u27e9 https://docs.rs/fjall/latest/fjall/#modules: \u00a7\n\u27e85\u27e9 https://docs.rs/fjall/latest/fjall/compaction/index.html: mod fjall::compaction - compaction\n\u27e86\u27e9 https://docs.rs/fjall/latest/fjall/#structs: \u00a7\n\u27e87\u27e9 https://docs.rs/fjall/latest/fjall/struct.Batch.html: struct fjall::Batch - Batch\n\u27e88\u27e9 https://docs.rs/fjall/latest/fjall/struct.BlobCache.html: struct fjall::BlobCache - BlobCache\n\u27e89\u27e9 https://docs.rs/fjall/latest/fjall/struct.BlockCache.html: struct fjall::BlockCache - BlockCache\n\u27e810\u27e9 https://docs.rs/fjall/latest/fjall/struct.Config.html: struct fjall::Config - Config\n\u27e811\u27e9 https://docs.rs/fjall/latest/fjall/struct.Keyspace.html: struct fjall::Keyspace - Keyspace\n\u27e812\u27e9 https://docs.rs/fjall/latest/fjall/struct.KvSeparationOptions.html: struct fjall::KvSeparationOptions - KvSeparationOptions\n\u27e813\u27e9 https://docs.rs/fjall/latest/fjall/struct.PartitionCreateOptions.html: struct fjall::PartitionCreateOptions - PartitionCreateOptions\n\u27e814\u27e9 https://docs.rs/fjall/latest/fjall/struct.PartitionHandle.html: struct fjall::PartitionHandle - PartitionHandle\n\u27e815\u27e9 https://docs.rs/fjall/latest/fjall/struct.ReadTransaction.html: struct fjall::ReadTransaction - ReadTransaction\n\u27e816\u27e9 https://docs.rs/fjall/latest/fjall/struct.Slice.html: struct fjall::Slice - Slice\n\u27e817\u27e9 https://docs.rs/fjall/latest/fjall/struct.Snapshot.html: struct fjall::Snapshot - Snapshot\n\u27e818\u27e9 https://docs.rs/fjall/latest/fjall/struct.TransactionalKeyspace.html: struct fjall::TransactionalKeyspace - TransactionalKeyspace\n\u27e819\u27e9 https://docs.rs/fjall/latest/fjall/struct.TransactionalPartitionHandle.html: struct fjall::TransactionalPartitionHandle - TransactionalPartitionHandle\n\u27e820\u27e9 https://docs.rs/fjall/latest/fjall/struct.WriteTransaction.html: struct fjall::WriteTransaction - WriteTransaction\n\u27e821\u27e9 https://docs.rs/fjall/latest/fjall/#enums: \u00a7\n\u27e822\u27e9 https://docs.rs/fjall/latest/fjall/enum.AnyTree.html: enum fjall::AnyTree - AnyTree\n\u27e823\u27e9 https://docs.rs/lsm-tree/2.10.1/x86_64-unknown-linux-gnu/lsm_tree/tree/struct.Tree.html: struct lsm_tree::tree::Tree - `Tree`\n\u27e824\u27e9 https://docs.rs/lsm-tree/2.10.1/x86_64-unknown-linux-gnu/lsm_tree/blob_tree/struct.BlobTree.html: struct lsm_tree::blob_tree::BlobTree - `BlobTree`\n\u27e825\u27e9 https://docs.rs/fjall/latest/fjall/enum.CompressionType.html: enum fjall::CompressionType - CompressionType\n\u27e826\u27e9 https://docs.rs/fjall/latest/fjall/enum.Error.html: enum fjall::Error - Error\n\u27e827\u27e9 https://docs.rs/fjall/latest/fjall/enum.PersistMode.html: enum fjall::PersistMode - PersistMode\n\u27e828\u27e9 https://docs.rs/fjall/latest/fjall/enum.RecoveryError.html: enum fjall::RecoveryError - RecoveryError\n\u27e829\u27e9 https://docs.rs/fjall/latest/fjall/enum.TreeType.html: enum fjall::TreeType - TreeType\n\u27e830\u27e9 https://docs.rs/fjall/latest/fjall/enum.Version.html: enum fjall::Version - Version\n\u27e831\u27e9 https://docs.rs/fjall/latest/fjall/#traits: \u00a7\n\u27e832\u27e9 https://docs.rs/fjall/latest/fjall/trait.GarbageCollection.html: trait fjall::GarbageCollection - GarbageCollection\n\u27e833\u27e9 https://docs.rs/fjall/latest/fjall/#types: \u00a7\n\u27e834\u27e9 https://docs.rs/fjall/latest/fjall/type.Instant.html: type fjall::Instant - Instant\n\u27e835\u27e9 https://docs.rs/fjall/latest/fjall/type.KvPair.html: type fjall::KvPair - KvPair\n\u27e836\u27e9 https://docs.rs/fjall/latest/fjall/type.LsmError.html: type fjall::LsmError - LsmError\n\u27e837\u27e9 https://docs.rs/lsm-tree/2.10.1/x86_64-unknown-linux-gnu/lsm_tree/error/enum.Error.html: enum lsm_tree::error::Error - `lsm_tree::Error`\n\u27e838\u27e9 https://docs.rs/fjall/latest/fjall/type.Partition.html: type fjall::Partition - Partition\n\u27e839\u27e9 https://docs.rs/fjall/latest/fjall/type.Result.html: type fjall::Result - Result\n\u27e840\u27e9 https://docs.rs/fjall/latest/fjall/type.TransactionalPartition.html: type fjall::TransactionalPartition - TransactionalPartition\n\u27e841\u27e9 https://docs.rs/fjall/latest/fjall/type.TxKeyspace.html: type fjall::TxKeyspace - TxKeyspace\n\u27e842\u27e9 https://docs.rs/fjall/latest/fjall/type.TxPartition.html: type fjall::TxPartition - TxPartition\n\u27e843\u27e9 https://docs.rs/fjall/latest/fjall/type.TxPartitionHandle.html: type fjall::TxPartitionHandle - TxPartitionHandle\n\u27e844\u27e9 https://docs.rs/fjall/latest/fjall/type.UserKey.html: type fjall::UserKey - UserKey\n\u27e845\u27e9 https://docs.rs/fjall/latest/fjall/type.UserValue.html: type fjall::UserValue - UserValue\n\u27e846\u27e9 https://docs.rs/fjall/latest/fjall/type.WriteBatch.html: type fjall::WriteBatch - WriteBatch\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "fjall",
          "version": "2.11.1",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/fjall/latest/fjall/all.html \"show sidebar\")\n# Crate fjallCopy item path\n[Settings](https://docs.rs/fjall/latest/settings.html)\n[Help](https://docs.rs/fjall/latest/help.html)\nSummary[Source](https://docs.rs/fjall/latest/src/fjall/lib.rs.html#5-219)\nExpand description\nFjall is a log-structured embeddable key-value storage engine written in Rust. It features:\n  * Thread-safe BTreeMap-like API\n  * 100% safe & stable Rust\n  * LSM-tree-based storage similar to `RocksDB`\n  * Range & prefix searching with forward and reverse iteration\n  * Cross-partition snapshots (MVCC)\n  * Automatic background maintenance\n  * Single-writer transactions (optional)\n  * Key-value separation for large blob use cases (optional)\n\n\nEach `Keyspace` is a single logical database and is split into `partitions` (a.k.a. column families) - you should probably only use a single keyspace for your application. Each partition is physically a single LSM-tree and its own logical collection; however, write operations across partitions are atomic as they are persisted in a single database-level journal, which will be recovered after a crash.\nIt is not:\n  * a standalone server\n  * a relational or wide-column database: it has no notion of columns\n\n\nKeys are limited to 65536 bytes, values are limited to 2^32 bytes. As is normal with any kind of storage engine, larger keys and values have a bigger performance impact.\nFor the underlying LSM-tree implementation, see: <https://crates.io/crates/lsm-tree>.\n```\nuse fjall::{Config, PersistMode, Keyspace, PartitionCreateOptions};\n// A keyspace is a database, which may contain multiple collections (\"partitions\")\n// You should probably only use a single keyspace for your application\n//\nlet keyspace = Config::new(folder).open()?; // or open_transactional for transactional semantics\n// Each partition is its own physical LSM-tree\nlet items = keyspace.open_partition(\"my_items\", PartitionCreateOptions::default())?;\n// Write some data\nitems.insert(\"a\", \"hello\")?;\n// And retrieve it\nlet bytes = items.get(\"a\")?;\n// Or remove it again\nitems.remove(\"a\")?;\n// Search by prefix\nfor kv in items.prefix(\"prefix\") {\n // ...\n}\n// Search by range\nfor kv in items.range(\"a\"..=\"z\") {\n // ...\n}\n// Iterators implement DoubleEndedIterator, so you can search backwards, too!\nfor kv in items.prefix(\"prefix\").rev() {\n // ...\n}\n// Sync the journal to disk to make sure data is definitely durable\n// When the keyspace is dropped, it will try to persist with `PersistMode::SyncAll` as well\nkeyspace.persist(PersistMode::SyncAll)?;\n```\n\n## Modules[\u00a7](https://docs.rs/fjall/latest/fjall/#modules)\n\n[compaction](https://docs.rs/fjall/latest/fjall/compaction/index.html \"mod fjall::compaction\")\n    Contains compaction strategies\n## Structs[\u00a7](https://docs.rs/fjall/latest/fjall/#structs)\n\n[Batch](https://docs.rs/fjall/latest/fjall/struct.Batch.html \"struct fjall::Batch\")\n    An atomic write batch\n\n[BlobCache](https://docs.rs/fjall/latest/fjall/struct.BlobCache.html \"struct fjall::BlobCache\")Deprecated\n    Blob cache that caches frequently read blobs\n\n[BlockCache](https://docs.rs/fjall/latest/fjall/struct.BlockCache.html \"struct fjall::BlockCache\")Deprecated\n    Block cache that caches frequently read disk blocks\n\n[Config](https://docs.rs/fjall/latest/fjall/struct.Config.html \"struct fjall::Config\")\n    Global keyspace configuration\n\n[Keyspace](https://docs.rs/fjall/latest/fjall/struct.Keyspace.html \"struct fjall::Keyspace\")\n    A keyspace is a single logical database which can house multiple partitions\n\n[KvSeparationOptions](https://docs.rs/fjall/latest/fjall/struct.KvSeparationOptions.html \"struct fjall::KvSeparationOptions\")\n    Configuration options for key-value-separated partitions.\n\n[PartitionCreateOptions](https://docs.rs/fjall/latest/fjall/struct.PartitionCreateOptions.html \"struct fjall::PartitionCreateOptions\")\n    Options to configure a partition\n\n[PartitionHandle](https://docs.rs/fjall/latest/fjall/struct.PartitionHandle.html \"struct fjall::PartitionHandle\")\n    Access to a keyspace partition\n\n[ReadTransaction](https://docs.rs/fjall/latest/fjall/struct.ReadTransaction.html \"struct fjall::ReadTransaction\")\n    A cross-partition, read-only transaction (snapshot)\n\n[Slice](https://docs.rs/fjall/latest/fjall/struct.Slice.html \"struct fjall::Slice\")\n    An immutable byte slice that can be cloned without additional heap allocation\n\n[Snapshot](https://docs.rs/fjall/latest/fjall/struct.Snapshot.html \"struct fjall::Snapshot\")\n    A snapshot captures a read-only point-in-time view of the tree at the time the snapshot was created\n\n[TransactionalKeyspace](https://docs.rs/fjall/latest/fjall/struct.TransactionalKeyspace.html \"struct fjall::TransactionalKeyspace\")\n    Transactional keyspace\n\n[TransactionalPartitionHandle](https://docs.rs/fjall/latest/fjall/struct.TransactionalPartitionHandle.html \"struct fjall::TransactionalPartitionHandle\")\n    Access to a partition of a transactional keyspace\n\n[WriteTransaction](https://docs.rs/fjall/latest/fjall/struct.WriteTransaction.html \"struct fjall::WriteTransaction\")\n    A single-writer (serialized) cross-partition transaction\n## Enums[\u00a7](https://docs.rs/fjall/latest/fjall/#enums)\n\n[AnyTree](https://docs.rs/fjall/latest/fjall/enum.AnyTree.html \"enum fjall::AnyTree\")\n    May be a standard [`Tree`](https://docs.rs/lsm-tree/2.10.1/x86_64-unknown-linux-gnu/lsm_tree/tree/struct.Tree.html \"struct lsm_tree::tree::Tree\") or a [`BlobTree`](https://docs.rs/lsm-tree/2.10.1/x86_64-unknown-linux-gnu/lsm_tree/blob_tree/struct.BlobTree.html \"struct lsm_tree::blob_tree::BlobTree\")\n\n[CompressionType](https://docs.rs/fjall/latest/fjall/enum.CompressionType.html \"enum fjall::CompressionType\")\n    Compression algorithm to use.\n\n[Error](https://docs.rs/fjall/latest/fjall/enum.Error.html \"enum fjall::Error\")\n    Errors that may occur in the storage engine\n\n[PersistMode](https://docs.rs/fjall/latest/fjall/enum.PersistMode.html \"enum fjall::PersistMode\")\n    The persist mode allows setting the durability guarantee of previous writes\n\n[RecoveryError](https://docs.rs/fjall/latest/fjall/enum.RecoveryError.html \"enum fjall::RecoveryError\")\n    Errors that can occur during journal recovery\n\n[TreeType](https://docs.rs/fjall/latest/fjall/enum.TreeType.html \"enum fjall::TreeType\")\n    LSM-tree type\n\n[Version](https://docs.rs/fjall/latest/fjall/enum.Version.html \"enum fjall::Version\")\n    Disk format version\n## Traits[\u00a7](https://docs.rs/fjall/latest/fjall/#traits)\n\n[GarbageCollection](https://docs.rs/fjall/latest/fjall/trait.GarbageCollection.html \"trait fjall::GarbageCollection\")\n    Functions for garbage collection strategies\n## Type Aliases[\u00a7](https://docs.rs/fjall/latest/fjall/#types)\n\n[Instant](https://docs.rs/fjall/latest/fjall/type.Instant.html \"type fjall::Instant\")\n    A snapshot moment\n\n[KvPair](https://docs.rs/fjall/latest/fjall/type.KvPair.html \"type fjall::KvPair\")\n    KV-tuple, typically returned by an iterator\n\n[LsmError](https://docs.rs/fjall/latest/fjall/type.LsmError.html \"type fjall::LsmError\")\n    Re-export of [`lsm_tree::Error`](https://docs.rs/lsm-tree/2.10.1/x86_64-unknown-linux-gnu/lsm_tree/error/enum.Error.html \"enum lsm_tree::error::Error\")\n\n[Partition](https://docs.rs/fjall/latest/fjall/type.Partition.html \"type fjall::Partition\")\n    Alias for [`PartitionHandle`](https://docs.rs/fjall/latest/fjall/struct.PartitionHandle.html \"struct fjall::PartitionHandle\")\n\n[Result](https://docs.rs/fjall/latest/fjall/type.Result.html \"type fjall::Result\")\n    Result helper type\n\n[TransactionalPartition](https://docs.rs/fjall/latest/fjall/type.TransactionalPartition.html \"type fjall::TransactionalPartition\")\n    Alias for [`TransactionalPartitionHandle`](https://docs.rs/fjall/latest/fjall/struct.TransactionalPartitionHandle.html \"struct fjall::TransactionalPartitionHandle\")\n\n[TxKeyspace](https://docs.rs/fjall/latest/fjall/type.TxKeyspace.html \"type fjall::TxKeyspace\")\n    Alias for [`TransactionalKeyspace`](https://docs.rs/fjall/latest/fjall/struct.TransactionalKeyspace.html \"struct fjall::TransactionalKeyspace\")\n\n[TxPartition](https://docs.rs/fjall/latest/fjall/type.TxPartition.html \"type fjall::TxPartition\")\n    Alias for [`TransactionalPartitionHandle`](https://docs.rs/fjall/latest/fjall/struct.TransactionalPartitionHandle.html \"struct fjall::TransactionalPartitionHandle\")\n\n[TxPartitionHandle](https://docs.rs/fjall/latest/fjall/type.TxPartitionHandle.html \"type fjall::TxPartitionHandle\")\n    Alias for [`TransactionalPartitionHandle`](https://docs.rs/fjall/latest/fjall/struct.TransactionalPartitionHandle.html \"struct fjall::TransactionalPartitionHandle\")\n\n[UserKey](https://docs.rs/fjall/latest/fjall/type.UserKey.html \"type fjall::UserKey\")\n    User defined key\n\n[UserValue](https://docs.rs/fjall/latest/fjall/type.UserValue.html \"type fjall::UserValue\")\n    User defined data (blob of bytes)\n\n[WriteBatch](https://docs.rs/fjall/latest/fjall/type.WriteBatch.html \"type fjall::WriteBatch\")\n    Alias for [`Batch`](https://docs.rs/fjall/latest/fjall/struct.Batch.html \"struct fjall::Batch\")\n",
            "markdown_with_citations": "[](https://docs.rs/fjall/latest/fjall/all.html \"show sidebar\")\n# Crate fjallCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nFjall is a log-structured embeddable key-value storage engine written in Rust. It features:\n  * Thread-safe BTreeMap-like API\n  * 100% safe & stable Rust\n  * LSM-tree-based storage similar to `RocksDB`\n  * Range & prefix searching with forward and reverse iteration\n  * Cross-partition snapshots (MVCC)\n  * Automatic background maintenance\n  * Single-writer transactions (optional)\n  * Key-value separation for large blob use cases (optional)\n\n\nEach `Keyspace` is a single logical database and is split into `partitions` (a.k.a. column families) - you should probably only use a single keyspace for your application. Each partition is physically a single LSM-tree and its own logical collection; however, write operations across partitions are atomic as they are persisted in a single database-level journal, which will be recovered after a crash.\nIt is not:\n  * a standalone server\n  * a relational or wide-column database: it has no notion of columns\n\n\nKeys are limited to 65536 bytes, values are limited to 2^32 bytes. As is normal with any kind of storage engine, larger keys and values have a bigger performance impact.\nFor the underlying LSM-tree implementation, see: <https://crates.io/crates/lsm-tree>.\n```\nuse fjall::{Config, PersistMode, Keyspace, PartitionCreateOptions};\n// A keyspace is a database, which may contain multiple collections (\"partitions\")\n// You should probably only use a single keyspace for your application\n//\nlet keyspace = Config::new(folder).open()?; // or open_transactional for transactional semantics\n// Each partition is its own physical LSM-tree\nlet items = keyspace.open_partition(\"my_items\", PartitionCreateOptions::default())?;\n// Write some data\nitems.insert(\"a\", \"hello\")?;\n// And retrieve it\nlet bytes = items.get(\"a\")?;\n// Or remove it again\nitems.remove(\"a\")?;\n// Search by prefix\nfor kv in items.prefix(\"prefix\") {\n // ...\n}\n// Search by range\nfor kv in items.range(\"a\"..=\"z\") {\n // ...\n}\n// Iterators implement DoubleEndedIterator, so you can search backwards, too!\nfor kv in items.prefix(\"prefix\").rev() {\n // ...\n}\n// Sync the journal to disk to make sure data is definitely durable\n// When the keyspace is dropped, it will try to persist with `PersistMode::SyncAll` as well\nkeyspace.persist(PersistMode::SyncAll)?;\n```\n\n## Modules\u00a7\u27e84\u27e9\n\ncompaction\u27e85\u27e9\n    Contains compaction strategies\n## Structs\u00a7\u27e86\u27e9\n\nBatch\u27e87\u27e9\n    An atomic write batch\n\nBlobCache\u27e88\u27e9Deprecated\n    Blob cache that caches frequently read blobs\n\nBlockCache\u27e89\u27e9Deprecated\n    Block cache that caches frequently read disk blocks\n\nConfig\u27e810\u27e9\n    Global keyspace configuration\n\nKeyspace\u27e811\u27e9\n    A keyspace is a single logical database which can house multiple partitions\n\nKvSeparationOptions\u27e812\u27e9\n    Configuration options for key-value-separated partitions.\n\nPartitionCreateOptions\u27e813\u27e9\n    Options to configure a partition\n\nPartitionHandle\u27e814\u27e9\n    Access to a keyspace partition\n\nReadTransaction\u27e815\u27e9\n    A cross-partition, read-only transaction (snapshot)\n\nSlice\u27e816\u27e9\n    An immutable byte slice that can be cloned without additional heap allocation\n\nSnapshot\u27e817\u27e9\n    A snapshot captures a read-only point-in-time view of the tree at the time the snapshot was created\n\nTransactionalKeyspace\u27e818\u27e9\n    Transactional keyspace\n\nTransactionalPartitionHandle\u27e819\u27e9\n    Access to a partition of a transactional keyspace\n\nWriteTransaction\u27e820\u27e9\n    A single-writer (serialized) cross-partition transaction\n## Enums\u00a7\u27e821\u27e9\n\nAnyTree\u27e822\u27e9\n    May be a standard `Tree`\u27e823\u27e9 or a `BlobTree`\u27e824\u27e9\n\nCompressionType\u27e825\u27e9\n    Compression algorithm to use.\n\nError\u27e826\u27e9\n    Errors that may occur in the storage engine\n\nPersistMode\u27e827\u27e9\n    The persist mode allows setting the durability guarantee of previous writes\n\nRecoveryError\u27e828\u27e9\n    Errors that can occur during journal recovery\n\nTreeType\u27e829\u27e9\n    LSM-tree type\n\nVersion\u27e830\u27e9\n    Disk format version\n## Traits\u00a7\u27e831\u27e9\n\nGarbageCollection\u27e832\u27e9\n    Functions for garbage collection strategies\n## Type Aliases\u00a7\u27e833\u27e9\n\nInstant\u27e834\u27e9\n    A snapshot moment\n\nKvPair\u27e835\u27e9\n    KV-tuple, typically returned by an iterator\n\nLsmError\u27e836\u27e9\n    Re-export of `lsm_tree::Error`\u27e837\u27e9\n\nPartition\u27e838\u27e9\n    Alias for `PartitionHandle`\u27e814\u27e9\n\nResult\u27e839\u27e9\n    Result helper type\n\nTransactionalPartition\u27e840\u27e9\n    Alias for `TransactionalPartitionHandle`\u27e819\u27e9\n\nTxKeyspace\u27e841\u27e9\n    Alias for `TransactionalKeyspace`\u27e818\u27e9\n\nTxPartition\u27e842\u27e9\n    Alias for `TransactionalPartitionHandle`\u27e819\u27e9\n\nTxPartitionHandle\u27e843\u27e9\n    Alias for `TransactionalPartitionHandle`\u27e819\u27e9\n\nUserKey\u27e844\u27e9\n    User defined key\n\nUserValue\u27e845\u27e9\n    User defined data (blob of bytes)\n\nWriteBatch\u27e846\u27e9\n    Alias for `Batch`\u27e87\u27e9\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/fjall/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/fjall/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/fjall/latest/src/fjall/lib.rs.html#5-219: Source\n\u27e84\u27e9 https://docs.rs/fjall/latest/fjall/#modules: \u00a7\n\u27e85\u27e9 https://docs.rs/fjall/latest/fjall/compaction/index.html: mod fjall::compaction - compaction\n\u27e86\u27e9 https://docs.rs/fjall/latest/fjall/#structs: \u00a7\n\u27e87\u27e9 https://docs.rs/fjall/latest/fjall/struct.Batch.html: struct fjall::Batch - Batch\n\u27e88\u27e9 https://docs.rs/fjall/latest/fjall/struct.BlobCache.html: struct fjall::BlobCache - BlobCache\n\u27e89\u27e9 https://docs.rs/fjall/latest/fjall/struct.BlockCache.html: struct fjall::BlockCache - BlockCache\n\u27e810\u27e9 https://docs.rs/fjall/latest/fjall/struct.Config.html: struct fjall::Config - Config\n\u27e811\u27e9 https://docs.rs/fjall/latest/fjall/struct.Keyspace.html: struct fjall::Keyspace - Keyspace\n\u27e812\u27e9 https://docs.rs/fjall/latest/fjall/struct.KvSeparationOptions.html: struct fjall::KvSeparationOptions - KvSeparationOptions\n\u27e813\u27e9 https://docs.rs/fjall/latest/fjall/struct.PartitionCreateOptions.html: struct fjall::PartitionCreateOptions - PartitionCreateOptions\n\u27e814\u27e9 https://docs.rs/fjall/latest/fjall/struct.PartitionHandle.html: struct fjall::PartitionHandle - PartitionHandle\n\u27e815\u27e9 https://docs.rs/fjall/latest/fjall/struct.ReadTransaction.html: struct fjall::ReadTransaction - ReadTransaction\n\u27e816\u27e9 https://docs.rs/fjall/latest/fjall/struct.Slice.html: struct fjall::Slice - Slice\n\u27e817\u27e9 https://docs.rs/fjall/latest/fjall/struct.Snapshot.html: struct fjall::Snapshot - Snapshot\n\u27e818\u27e9 https://docs.rs/fjall/latest/fjall/struct.TransactionalKeyspace.html: struct fjall::TransactionalKeyspace - TransactionalKeyspace\n\u27e819\u27e9 https://docs.rs/fjall/latest/fjall/struct.TransactionalPartitionHandle.html: struct fjall::TransactionalPartitionHandle - TransactionalPartitionHandle\n\u27e820\u27e9 https://docs.rs/fjall/latest/fjall/struct.WriteTransaction.html: struct fjall::WriteTransaction - WriteTransaction\n\u27e821\u27e9 https://docs.rs/fjall/latest/fjall/#enums: \u00a7\n\u27e822\u27e9 https://docs.rs/fjall/latest/fjall/enum.AnyTree.html: enum fjall::AnyTree - AnyTree\n\u27e823\u27e9 https://docs.rs/lsm-tree/2.10.1/x86_64-unknown-linux-gnu/lsm_tree/tree/struct.Tree.html: struct lsm_tree::tree::Tree - `Tree`\n\u27e824\u27e9 https://docs.rs/lsm-tree/2.10.1/x86_64-unknown-linux-gnu/lsm_tree/blob_tree/struct.BlobTree.html: struct lsm_tree::blob_tree::BlobTree - `BlobTree`\n\u27e825\u27e9 https://docs.rs/fjall/latest/fjall/enum.CompressionType.html: enum fjall::CompressionType - CompressionType\n\u27e826\u27e9 https://docs.rs/fjall/latest/fjall/enum.Error.html: enum fjall::Error - Error\n\u27e827\u27e9 https://docs.rs/fjall/latest/fjall/enum.PersistMode.html: enum fjall::PersistMode - PersistMode\n\u27e828\u27e9 https://docs.rs/fjall/latest/fjall/enum.RecoveryError.html: enum fjall::RecoveryError - RecoveryError\n\u27e829\u27e9 https://docs.rs/fjall/latest/fjall/enum.TreeType.html: enum fjall::TreeType - TreeType\n\u27e830\u27e9 https://docs.rs/fjall/latest/fjall/enum.Version.html: enum fjall::Version - Version\n\u27e831\u27e9 https://docs.rs/fjall/latest/fjall/#traits: \u00a7\n\u27e832\u27e9 https://docs.rs/fjall/latest/fjall/trait.GarbageCollection.html: trait fjall::GarbageCollection - GarbageCollection\n\u27e833\u27e9 https://docs.rs/fjall/latest/fjall/#types: \u00a7\n\u27e834\u27e9 https://docs.rs/fjall/latest/fjall/type.Instant.html: type fjall::Instant - Instant\n\u27e835\u27e9 https://docs.rs/fjall/latest/fjall/type.KvPair.html: type fjall::KvPair - KvPair\n\u27e836\u27e9 https://docs.rs/fjall/latest/fjall/type.LsmError.html: type fjall::LsmError - LsmError\n\u27e837\u27e9 https://docs.rs/lsm-tree/2.10.1/x86_64-unknown-linux-gnu/lsm_tree/error/enum.Error.html: enum lsm_tree::error::Error - `lsm_tree::Error`\n\u27e838\u27e9 https://docs.rs/fjall/latest/fjall/type.Partition.html: type fjall::Partition - Partition\n\u27e839\u27e9 https://docs.rs/fjall/latest/fjall/type.Result.html: type fjall::Result - Result\n\u27e840\u27e9 https://docs.rs/fjall/latest/fjall/type.TransactionalPartition.html: type fjall::TransactionalPartition - TransactionalPartition\n\u27e841\u27e9 https://docs.rs/fjall/latest/fjall/type.TxKeyspace.html: type fjall::TxKeyspace - TxKeyspace\n\u27e842\u27e9 https://docs.rs/fjall/latest/fjall/type.TxPartition.html: type fjall::TxPartition - TxPartition\n\u27e843\u27e9 https://docs.rs/fjall/latest/fjall/type.TxPartitionHandle.html: type fjall::TxPartitionHandle - TxPartitionHandle\n\u27e844\u27e9 https://docs.rs/fjall/latest/fjall/type.UserKey.html: type fjall::UserKey - UserKey\n\u27e845\u27e9 https://docs.rs/fjall/latest/fjall/type.UserValue.html: type fjall::UserValue - UserValue\n\u27e846\u27e9 https://docs.rs/fjall/latest/fjall/type.WriteBatch.html: type fjall::WriteBatch - WriteBatch\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `fjall` crate is a log-structured, embeddable key-value storage engine in Rust, offering a thread-safe BTreeMap-like API and LSM-tree-based storage similar to RocksDB. It supports features like range and prefix searching, cross-partition snapshots (MVCC), single-writer transactions, and optional key-value separation for large blobs. Designed for durability and performance, it provides atomic writes across partitions and automatic background maintenance, making it ideal for applications requiring efficient embedded storage.",
          "feature_summary": null,
          "use_case": "Database",
          "score": 6.0,
          "factual_counterfactual": "### Pair 1: Thread Safety and API Design\n\u2705 **Factual:** The `fjall` crate provides a thread-safe API similar to a `BTreeMap`, allowing concurrent reads and writes across partitions.  \n\u274c **Counterfactual:** The `fjall` crate uses a lock-free design for all operations, ensuring zero contention during concurrent writes.  \n\n---\n\n### Pair 2: Key-Value Separation\n\u2705 **Factual:** `fjall` supports optional key-value separation, which is useful for handling large binary blobs efficiently.  \n\u274c **Counterfactual:** Key-value separation in `fjall` is enabled by default and cannot be disabled for smaller data use cases.  \n\n---\n\n### Pair 3: Transactional Semantics\n\u2705 **Factual:** `fjall` allows single-writer transactions across partitions, ensuring atomicity and durability through a unified database-level journal.  \n\u274c **Counterfactual:** `fjall` supports multi-writer transactions, allowing multiple threads to perform concurrent writes across partitions without serialization.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-62119feb-cd5c2189-1751262772",
      "timestamp": "2025-06-30T05:52:52.090180+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]