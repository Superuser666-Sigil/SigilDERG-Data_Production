[
  {
    "execution_id": "exec-80a7a770-6fda13c3-1751108601",
    "timestamp": "2025-06-28T11:03:21.276319+00:00",
    "sacred_chain": {
      "input_data": "gumdrop",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'gumdrop' -> 'gumdrop'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "gumdrop",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "documentation_quality": 3.3333333333333335,
        "documentation_sources": [
          "crates_io",
          "docs_rs",
          "lib_rs"
        ],
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-xid@0.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-xid-0.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_xid",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-xid-0.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\libunicode_xid-3c2ce44be83bcd93.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\libunicode_xid-3c2ce44be83bcd93.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.17",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-1.0.17\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-1.0.17\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "parsing",
                "printing",
                "proc-macro",
                "quote"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\build\\syn-0c4869f408e09465\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\build\\syn-0c4869f408e09465\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.10\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.10\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\build\\proc-macro2-ca4fc922a0049caf\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\build\\proc-macro2-ca4fc922a0049caf\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.10",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "use_proc_macro",
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\build\\proc-macro2-cfaa3e01bca24b08\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.17",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "syn_disable_nightly_tests"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\build\\syn-60d6fa24b2936503\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\libproc_macro2-97148b5b93f47fc8.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\libproc_macro2-97148b5b93f47fc8.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.3\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\libquote-dc82e9851c331d40.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\libquote-dc82e9851c331d40.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.17",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-1.0.17\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-1.0.17\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "parsing",
                "printing",
                "proc-macro",
                "quote"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\libsyn-8ccc35940bd0706f.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\libsyn-8ccc35940bd0706f.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gumdrop_derive@0.8.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gumdrop_derive-0.8.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "gumdrop_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gumdrop_derive-0.8.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\gumdrop_derive-12bc9ed3cf45c6d2.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\gumdrop_derive-12bc9ed3cf45c6d2.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\gumdrop_derive-12bc9ed3cf45c6d2.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\gumdrop_derive-12bc9ed3cf45c6d2.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp4ipdu83q/gumdrop-0.8.1#gumdrop@0.8.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gumdrop",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\libgumdrop-542941f39459d678.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.10\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.10\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\build\\proc-macro2-ca4fc922a0049caf\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\build\\proc-macro2-ca4fc922a0049caf\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.10",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "use_proc_macro",
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\build\\proc-macro2-cfaa3e01bca24b08\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-xid@0.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-xid-0.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_xid",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-xid-0.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\libunicode_xid-3c2ce44be83bcd93.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\libunicode_xid-3c2ce44be83bcd93.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.17",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-1.0.17\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-1.0.17\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "parsing",
                "printing",
                "proc-macro",
                "quote"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\build\\syn-0c4869f408e09465\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\build\\syn-0c4869f408e09465\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\libproc_macro2-97148b5b93f47fc8.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\libproc_macro2-97148b5b93f47fc8.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.17",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "syn_disable_nightly_tests"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\build\\syn-60d6fa24b2936503\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.3\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\libquote-dc82e9851c331d40.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\libquote-dc82e9851c331d40.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.17",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-1.0.17\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-1.0.17\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "parsing",
                "printing",
                "proc-macro",
                "quote"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\libsyn-8ccc35940bd0706f.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\libsyn-8ccc35940bd0706f.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gumdrop_derive@0.8.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gumdrop_derive-0.8.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "gumdrop_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gumdrop_derive-0.8.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\gumdrop_derive-12bc9ed3cf45c6d2.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\gumdrop_derive-12bc9ed3cf45c6d2.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\gumdrop_derive-12bc9ed3cf45c6d2.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\gumdrop_derive-12bc9ed3cf45c6d2.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp4ipdu83q/gumdrop-0.8.1#gumdrop@0.8.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gumdrop",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: redundant field names in struct initialization\n   --> src\\lib.rs:462:13\n    |\n462 |             expected: expected,\n    |             ^^^^^^^^^^^^^^^^^^ help: replace it with: `expected`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n    = note: `#[warn(clippy::redundant_field_names)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::redundant_field_names)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace it with",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 16206,
                        "byte_start": 16188,
                        "column_end": 31,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 462,
                        "line_start": 462,
                        "suggested_replacement": "expected",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 31,
                            "highlight_start": 13,
                            "text": "            expected: expected,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_field_names",
                  "explanation": null
                },
                "level": "warning",
                "message": "redundant field names in struct initialization",
                "spans": [
                  {
                    "byte_end": 16206,
                    "byte_start": 16188,
                    "column_end": 31,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 462,
                    "line_start": 462,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 13,
                        "text": "            expected: expected,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp4ipdu83q/gumdrop-0.8.1#gumdrop@0.8.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gumdrop",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: redundant field names in struct initialization\n   --> src\\lib.rs:463:13\n    |\n463 |             found: found,\n    |             ^^^^^^^^^^^^ help: replace it with: `found`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace it with",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 16232,
                        "byte_start": 16220,
                        "column_end": 25,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 463,
                        "line_start": 463,
                        "suggested_replacement": "found",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 25,
                            "highlight_start": 13,
                            "text": "            found: found,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_field_names",
                  "explanation": null
                },
                "level": "warning",
                "message": "redundant field names in struct initialization",
                "spans": [
                  {
                    "byte_end": 16232,
                    "byte_start": 16220,
                    "column_end": 25,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 463,
                    "line_start": 463,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 13,
                        "text": "            found: found,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp4ipdu83q/gumdrop-0.8.1#gumdrop@0.8.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gumdrop",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: redundant field names in struct initialization\n   --> src\\lib.rs:579:13\n    |\n579 |             style: style,\n    |             ^^^^^^^^^^^^ help: replace it with: `style`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace it with",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 21002,
                        "byte_start": 20990,
                        "column_end": 25,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 579,
                        "line_start": 579,
                        "suggested_replacement": "style",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 25,
                            "highlight_start": 13,
                            "text": "            style: style,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_field_names",
                  "explanation": null
                },
                "level": "warning",
                "message": "redundant field names in struct initialization",
                "spans": [
                  {
                    "byte_end": 21002,
                    "byte_start": 20990,
                    "column_end": 25,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 579,
                    "line_start": 579,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 13,
                        "text": "            style: style,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp4ipdu83q/gumdrop-0.8.1#gumdrop@0.8.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gumdrop",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: needless `fn main` in doctest\n  --> src\\lib.rs:9:5\n   |\n9  |   //! use gumdrop::Options;\n   |  _____^\n10 | | //!\n11 | | //! // Defines options that can be parsed from the command line.\n12 | | //! //\n...  |\n63 | | //!     println!(\"{:#?}\", opts);\n64 | | //! }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_doctest_main\n   = note: `#[warn(clippy::needless_doctest_main)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_doctest_main",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_doctest_main)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::needless_doctest_main",
                  "explanation": null
                },
                "level": "warning",
                "message": "needless `fn main` in doctest",
                "spans": [
                  {
                    "byte_end": 2671,
                    "byte_start": 252,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 64,
                    "line_start": 9,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 5,
                        "text": "//! use gumdrop::Options;"
                      },
                      {
                        "highlight_end": 4,
                        "highlight_start": 1,
                        "text": "//!"
                      },
                      {
                        "highlight_end": 65,
                        "highlight_start": 1,
                        "text": "//! // Defines options that can be parsed from the command line."
                      },
                      {
                        "highlight_end": 7,
                        "highlight_start": 1,
                        "text": "//! //"
                      },
                      {
                        "highlight_end": 81,
                        "highlight_start": 1,
                        "text": "//! // `derive(Options)` will generate an implementation of the trait `Options`."
                      },
                      {
                        "highlight_end": 75,
                        "highlight_start": 1,
                        "text": "//! // Each field must either have a `Default` implementation or an inline"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "//! // default value provided."
                      },
                      {
                        "highlight_end": 7,
                        "highlight_start": 1,
                        "text": "//! //"
                      },
                      {
                        "highlight_end": 66,
                        "highlight_start": 1,
                        "text": "//! // (`Debug` is derived here only for demonstration purposes.)"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "//! #[derive(Debug, Options)]"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "//! struct MyOptions {"
                      },
                      {
                        "highlight_end": 68,
                        "highlight_start": 1,
                        "text": "//!     // Contains \"free\" arguments -- those that are not options."
                      },
                      {
                        "highlight_end": 83,
                        "highlight_start": 1,
                        "text": "//!     // If no `free` field is declared, free arguments will result in an error."
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "//!     #[options(free)]"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "//!     free: Vec<String>,"
                      },
                      {
                        "highlight_end": 4,
                        "highlight_start": 1,
                        "text": "//!"
                      },
                      {
                        "highlight_end": 78,
                        "highlight_start": 1,
                        "text": "//!     // Boolean options are treated as flags, taking no additional values."
                      },
                      {
                        "highlight_end": 71,
                        "highlight_start": 1,
                        "text": "//!     // The optional `help` attribute is displayed in `usage` text."
                      },
                      {
                        "highlight_end": 11,
                        "highlight_start": 1,
                        "text": "//!     //"
                      },
                      {
                        "highlight_end": 90,
                        "highlight_start": 1,
                        "text": "//!     // A boolean field named `help` is automatically given the `help_flag` attribute."
                      },
                      {
                        "highlight_end": 94,
                        "highlight_start": 1,
                        "text": "//!     // The `parse_args_or_exit` and `parse_args_default_or_exit` functions use help flags"
                      },
                      {
                        "highlight_end": 55,
                        "highlight_start": 1,
                        "text": "//!     // to automatically display usage to the user."
                      },
                      {
                        "highlight_end": 48,
                        "highlight_start": 1,
                        "text": "//!     #[options(help = \"print help message\")]"
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "//!     help: bool,"
                      },
                      {
                        "highlight_end": 4,
                        "highlight_start": 1,
                        "text": "//!"
                      },
                      {
                        "highlight_end": 71,
                        "highlight_start": 1,
                        "text": "//!     // Non-boolean fields will take a value from the command line."
                      },
                      {
                        "highlight_end": 84,
                        "highlight_start": 1,
                        "text": "//!     // Wrapping the type in an `Option` is not necessary, but provides clarity."
                      },
                      {
                        "highlight_end": 52,
                        "highlight_start": 1,
                        "text": "//!     #[options(help = \"give a string argument\")]"
                      },
                      {
                        "highlight_end": 32,
                        "highlight_start": 1,
                        "text": "//!     string: Option<String>,"
                      },
                      {
                        "highlight_end": 4,
                        "highlight_start": 1,
                        "text": "//!"
                      },
                      {
                        "highlight_end": 62,
                        "highlight_start": 1,
                        "text": "//!     // A field can be any type that implements `FromStr`."
                      },
                      {
                        "highlight_end": 71,
                        "highlight_start": 1,
                        "text": "//!     // The optional `meta` attribute is displayed in `usage` text."
                      },
                      {
                        "highlight_end": 70,
                        "highlight_start": 1,
                        "text": "//!     #[options(help = \"give a number as an argument\", meta = \"N\")]"
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "//!     number: Option<i32>,"
                      },
                      {
                        "highlight_end": 4,
                        "highlight_start": 1,
                        "text": "//!"
                      },
                      {
                        "highlight_end": 84,
                        "highlight_start": 1,
                        "text": "//!     // A `Vec` field will accumulate all values received from the command line."
                      },
                      {
                        "highlight_end": 57,
                        "highlight_start": 1,
                        "text": "//!     #[options(help = \"give a list of string items\")]"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "//!     item: Vec<String>,"
                      },
                      {
                        "highlight_end": 4,
                        "highlight_start": 1,
                        "text": "//!"
                      },
                      {
                        "highlight_end": 64,
                        "highlight_start": 1,
                        "text": "//!     // The `count` flag will treat the option as a counter."
                      },
                      {
                        "highlight_end": 74,
                        "highlight_start": 1,
                        "text": "//!     // Each time the option is encountered, the field is incremented."
                      },
                      {
                        "highlight_end": 62,
                        "highlight_start": 1,
                        "text": "//!     #[options(count, help = \"increase a counting value\")]"
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "//!     count: u32,"
                      },
                      {
                        "highlight_end": 4,
                        "highlight_start": 1,
                        "text": "//!"
                      },
                      {
                        "highlight_end": 80,
                        "highlight_start": 1,
                        "text": "//!     // Option names are automatically generated from field names, but these"
                      },
                      {
                        "highlight_end": 75,
                        "highlight_start": 1,
                        "text": "//!     // can be overriden. The attributes `short = \"?\"`, `long = \"...\"`,"
                      },
                      {
                        "highlight_end": 71,
                        "highlight_start": 1,
                        "text": "//!     // `no_short`, and `no_long` are used to control option names."
                      },
                      {
                        "highlight_end": 69,
                        "highlight_start": 1,
                        "text": "//!     #[options(no_short, help = \"this option has no short form\")]"
                      },
                      {
                        "highlight_end": 32,
                        "highlight_start": 1,
                        "text": "//!     long_option_only: bool,"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "//! }"
                      },
                      {
                        "highlight_end": 4,
                        "highlight_start": 1,
                        "text": "//!"
                      },
                      {
                        "highlight_end": 16,
                        "highlight_start": 1,
                        "text": "//! fn main() {"
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "//!     let opts = MyOptions::parse_args_default_or_exit();"
                      },
                      {
                        "highlight_end": 4,
                        "highlight_start": 1,
                        "text": "//!"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "//!     println!(\"{:#?}\", opts);"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "//! }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp4ipdu83q/gumdrop-0.8.1#gumdrop@0.8.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gumdrop",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: needless `fn main` in doctest\n   --> src\\lib.rs:71:5\n    |\n71  |   //! use gumdrop::Options;\n    |  _____^\n72  | | //!\n73  | | //! // Define options for the program.\n74  | | //! #[derive(Debug, Options)]\n...   |\n135 | | //!     println!(\"{:#?}\", opts);\n136 | | //! }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_doctest_main\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_doctest_main",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::needless_doctest_main",
                  "explanation": null
                },
                "level": "warning",
                "message": "needless `fn main` in doctest",
                "spans": [
                  {
                    "byte_end": 4934,
                    "byte_start": 2793,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 136,
                    "line_start": 71,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 5,
                        "text": "//! use gumdrop::Options;"
                      },
                      {
                        "highlight_end": 4,
                        "highlight_start": 1,
                        "text": "//!"
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "//! // Define options for the program."
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "//! #[derive(Debug, Options)]"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "//! struct MyOptions {"
                      },
                      {
                        "highlight_end": 75,
                        "highlight_start": 1,
                        "text": "//!     // Options here can be accepted with any command (or none at all),"
                      },
                      {
                        "highlight_end": 55,
                        "highlight_start": 1,
                        "text": "//!     // but they must come before the command name."
                      },
                      {
                        "highlight_end": 48,
                        "highlight_start": 1,
                        "text": "//!     #[options(help = \"print help message\")]"
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "//!     help: bool,"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "//!     #[options(help = \"be verbose\")]"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "//!     verbose: bool,"
                      },
                      {
                        "highlight_end": 4,
                        "highlight_start": 1,
                        "text": "//!"
                      },
                      {
                        "highlight_end": 82,
                        "highlight_start": 1,
                        "text": "//!     // The `command` option will delegate option parsing to the command type,"
                      },
                      {
                        "highlight_end": 48,
                        "highlight_start": 1,
                        "text": "//!     // starting at the first free argument."
                      },
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "//!     #[options(command)]"
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "//!     command: Option<Command>,"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "//! }"
                      },
                      {
                        "highlight_end": 4,
                        "highlight_start": 1,
                        "text": "//!"
                      },
                      {
                        "highlight_end": 61,
                        "highlight_start": 1,
                        "text": "//! // The set of commands and the options each one accepts."
                      },
                      {
                        "highlight_end": 7,
                        "highlight_start": 1,
                        "text": "//! //"
                      },
                      {
                        "highlight_end": 80,
                        "highlight_start": 1,
                        "text": "//! // Each variant of a command enum should be a unary tuple variant with only"
                      },
                      {
                        "highlight_end": 85,
                        "highlight_start": 1,
                        "text": "//! // one field. This field must implement `Options` and is used to parse arguments"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "//! // that are given after the command name."
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "//! #[derive(Debug, Options)]"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "//! enum Command {"
                      },
                      {
                        "highlight_end": 59,
                        "highlight_start": 1,
                        "text": "//!     // Command names are generated from variant names."
                      },
                      {
                        "highlight_end": 76,
                        "highlight_start": 1,
                        "text": "//!     // By default, a CamelCase name will be converted into a lowercase,"
                      },
                      {
                        "highlight_end": 67,
                        "highlight_start": 1,
                        "text": "//!     // hyphen-separated name; e.g. `FooBar` becomes `foo-bar`."
                      },
                      {
                        "highlight_end": 11,
                        "highlight_start": 1,
                        "text": "//!     //"
                      },
                      {
                        "highlight_end": 78,
                        "highlight_start": 1,
                        "text": "//!     // Names can be explicitly specified using `#[options(name = \"...\")]`"
                      },
                      {
                        "highlight_end": 53,
                        "highlight_start": 1,
                        "text": "//!     #[options(help = \"show help for a command\")]"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "//!     Help(HelpOpts),"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "//!     #[options(help = \"make stuff\")]"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "//!     Make(MakeOpts),"
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "//!     #[options(help = \"install stuff\")]"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "//!     Install(InstallOpts),"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "//! }"
                      },
                      {
                        "highlight_end": 4,
                        "highlight_start": 1,
                        "text": "//!"
                      },
                      {
                        "highlight_end": 47,
                        "highlight_start": 1,
                        "text": "//! // Options accepted for the `help` command"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "//! #[derive(Debug, Options)]"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "//! struct HelpOpts {"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "//!     #[options(free)]"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "//!     free: Vec<String>,"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "//! }"
                      },
                      {
                        "highlight_end": 4,
                        "highlight_start": 1,
                        "text": "//!"
                      },
                      {
                        "highlight_end": 47,
                        "highlight_start": 1,
                        "text": "//! // Options accepted for the `make` command"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "//! #[derive(Debug, Options)]"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "//! struct MakeOpts {"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "//!     #[options(free)]"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "//!     free: Vec<String>,"
                      },
                      {
                        "highlight_end": 56,
                        "highlight_start": 1,
                        "text": "//!     #[options(help = \"number of jobs\", meta = \"N\")]"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "//!     jobs: Option<u32>,"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "//! }"
                      },
                      {
                        "highlight_end": 4,
                        "highlight_start": 1,
                        "text": "//!"
                      },
                      {
                        "highlight_end": 50,
                        "highlight_start": 1,
                        "text": "//! // Options accepted for the `install` command"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "//! #[derive(Debug, Options)]"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "//! struct InstallOpts {"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "//!     #[options(help = \"target directory\")]"
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "//!     dir: Option<String>,"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "//! }"
                      },
                      {
                        "highlight_end": 4,
                        "highlight_start": 1,
                        "text": "//!"
                      },
                      {
                        "highlight_end": 16,
                        "highlight_start": 1,
                        "text": "//! fn main() {"
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "//!     let opts = MyOptions::parse_args_default_or_exit();"
                      },
                      {
                        "highlight_end": 4,
                        "highlight_start": 1,
                        "text": "//!"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "//!     println!(\"{:#?}\", opts);"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "//! }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp4ipdu83q/gumdrop-0.8.1#gumdrop@0.8.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gumdrop",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this loop could be written as a `while let` loop\n   --> src\\lib.rs:294:13\n    |\n294 | /             loop {\n295 | |                 if let Some(new_command) = command.command() {\n296 | |                     command = new_command;\n...   |\n305 | |             }\n    | |_____________^ help: try: `while let Some(new_command) = command.command() { .. }`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_loop\n    = note: `#[warn(clippy::while_let_loop)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_loop",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::while_let_loop)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10252,
                        "byte_start": 9865,
                        "column_end": 14,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 305,
                        "line_start": 294,
                        "suggested_replacement": "while let Some(new_command) = command.command() { .. }",
                        "suggestion_applicability": "HasPlaceholders",
                        "text": [
                          {
                            "highlight_end": 19,
                            "highlight_start": 13,
                            "text": "            loop {"
                          },
                          {
                            "highlight_end": 63,
                            "highlight_start": 1,
                            "text": "                if let Some(new_command) = command.command() {"
                          },
                          {
                            "highlight_end": 43,
                            "highlight_start": 1,
                            "text": "                    command = new_command;"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          },
                          {
                            "highlight_end": 69,
                            "highlight_start": 1,
                            "text": "                    if let Some(name) = new_command.command_name() {"
                          },
                          {
                            "highlight_end": 47,
                            "highlight_start": 1,
                            "text": "                        command_str.push(' ');"
                          },
                          {
                            "highlight_end": 52,
                            "highlight_start": 1,
                            "text": "                        command_str.push_str(name);"
                          },
                          {
                            "highlight_end": 22,
                            "highlight_start": 1,
                            "text": "                    }"
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "                } else {"
                          },
                          {
                            "highlight_end": 27,
                            "highlight_start": 1,
                            "text": "                    break;"
                          },
                          {
                            "highlight_end": 18,
                            "highlight_start": 1,
                            "text": "                }"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "            }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::while_let_loop",
                  "explanation": null
                },
                "level": "warning",
                "message": "this loop could be written as a `while let` loop",
                "spans": [
                  {
                    "byte_end": 10252,
                    "byte_start": 9865,
                    "column_end": 14,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 305,
                    "line_start": 294,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 13,
                        "text": "            loop {"
                      },
                      {
                        "highlight_end": 63,
                        "highlight_start": 1,
                        "text": "                if let Some(new_command) = command.command() {"
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "                    command = new_command;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 69,
                        "highlight_start": 1,
                        "text": "                    if let Some(name) = new_command.command_name() {"
                      },
                      {
                        "highlight_end": 47,
                        "highlight_start": 1,
                        "text": "                        command_str.push(' ');"
                      },
                      {
                        "highlight_end": 52,
                        "highlight_start": 1,
                        "text": "                        command_str.push_str(name);"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "                    }"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                } else {"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                    break;"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                }"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp4ipdu83q/gumdrop-0.8.1#gumdrop@0.8.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gumdrop",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: implementation of inherent method `to_string(&self) -> String` for type `Opt<'a>`\n   --> src\\lib.rs:660:5\n    |\n660 | /     pub fn to_string(&self) -> String {\n661 | |         match *self {\n662 | |             Opt::Short(ch) => format!(\"-{}\", ch),\n663 | |             Opt::Long(s) => format!(\"--{}\", s),\n...   |\n667 | |     }\n    | |_____^\n    |\n    = help: implement trait `Display` for type `Opt<'a>` instead\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inherent_to_string\n    = note: `#[warn(clippy::inherent_to_string)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "implement trait `Display` for type `Opt<'a>` instead",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inherent_to_string",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::inherent_to_string)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::inherent_to_string",
                  "explanation": null
                },
                "level": "warning",
                "message": "implementation of inherent method `to_string(&self) -> String` for type `Opt<'a>`",
                "spans": [
                  {
                    "byte_end": 23606,
                    "byte_start": 23327,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 667,
                    "line_start": 660,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 5,
                        "text": "    pub fn to_string(&self) -> String {"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "        match *self {"
                      },
                      {
                        "highlight_end": 50,
                        "highlight_start": 1,
                        "text": "            Opt::Short(ch) => format!(\"-{}\", ch),"
                      },
                      {
                        "highlight_end": 48,
                        "highlight_start": 1,
                        "text": "            Opt::Long(s) => format!(\"--{}\", s),"
                      },
                      {
                        "highlight_end": 62,
                        "highlight_start": 1,
                        "text": "            Opt::LongWithArg(opt, _) => format!(\"--{}\", opt),"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "            Opt::Free(_) => \"free\".to_owned()"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp4ipdu83q/gumdrop-0.8.1#gumdrop@0.8.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gumdrop",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp4ipdu83q\\gumdrop-0.8.1\\target\\debug\\deps\\libgumdrop-b8dcccb3c48d5214.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 7
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {}
          },
          "note": "Crate analysis performed."
        },
        "crate_metadata": {
          "name": "gumdrop",
          "version": "unknown",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": "",
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "ai_enrichment": {
          "provider": "azure",
          "model": "gpt-4o",
          "readme_summary": null,
          "use_case": null,
          "score": null,
          "factual_counterfactual": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-80a7a770-6fda13c3-1751108601",
      "timestamp": "2025-06-28T11:03:21.276319+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]