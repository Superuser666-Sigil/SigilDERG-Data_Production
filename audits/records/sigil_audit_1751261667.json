[
  {
    "execution_id": "exec-e0603c49-2d4bcfec-1751261657",
    "timestamp": "2025-06-30T05:34:17.968364+00:00",
    "sacred_chain": {
      "input_data": "http",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'http' -> 'http'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "http",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/http",
            "title": "http v1.3.1",
            "content": {
              "raw_markdown": "#  http v1.3.1\nA set of types for representing HTTP requests and responses. \n  * [ #http ](https://crates.io/keywords/http)\n\n\n  * [ Readme ](https://crates.io/crates/http)\n  * [ 41 Versions ](https://crates.io/crates/http/versions)\n  * [ Dependencies ](https://crates.io/crates/http/dependencies)\n  * [ Dependents ](https://crates.io/crates/http/reverse_dependencies)\n\n\n## Metadata\n4 months ago \nv1.49.0 \n[ MIT ](https://choosealicense.com/licenses/mit) OR [ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0)\n104 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add http\nOr add the following line to your Cargo.toml:\nhttp = \"1.3.1\"\n## Documentation\n[ docs.rs/http ](https://docs.rs/http)\n## Repository\n[ github.com/hyperium/http ](https://github.com/hyperium/http)\n## Owners\n## Categories\n  * [Web programming](https://crates.io/categories/web-programming)\n\n\n[ Report crate ](https://crates.io/support?crate=http&inquire=crate-violation)\n### Stats Overview\n339,863,111 Downloads all time\n41 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  http v1.3.1\nA set of types for representing HTTP requests and responses. \n  *  #http \u27e81\u27e9\n\n\n  *  Readme \u27e82\u27e9\n  *  41 Versions \u27e83\u27e9\n  *  Dependencies \u27e84\u27e9\n  *  Dependents \u27e85\u27e9\n\n\n## Metadata\n4 months ago \nv1.49.0 \n MIT \u27e86\u27e9 OR  Apache-2.0 \u27e87\u27e9\n104 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add http\nOr add the following line to your Cargo.toml:\nhttp = \"1.3.1\"\n## Documentation\n docs.rs/http \u27e88\u27e9\n## Repository\n github.com/hyperium/http \u27e89\u27e9\n## Owners\n## Categories\n  * Web programming\u27e810\u27e9\n\n\n Report crate \u27e811\u27e9\n### Stats Overview\n339,863,111 Downloads all time\n41 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/http:  #http \n\u27e82\u27e9 https://crates.io/crates/http:  Readme \n\u27e83\u27e9 https://crates.io/crates/http/versions:  41 Versions \n\u27e84\u27e9 https://crates.io/crates/http/dependencies:  Dependencies \n\u27e85\u27e9 https://crates.io/crates/http/reverse_dependencies:  Dependents \n\u27e86\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e87\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e88\u27e9 https://docs.rs/http:  docs.rs/http \n\u27e89\u27e9 https://github.com/hyperium/http:  github.com/hyperium/http \n\u27e810\u27e9 https://crates.io/categories/web-programming: Web programming\n\u27e811\u27e9 https://crates.io/support?crate=http&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1150,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "115447.7485829"
          },
          "docs_rs": {
            "url": "https://docs.rs/http",
            "title": "Crate httpCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/http/latest/http/all.html \"show sidebar\")\n# Crate httpCopy item path\n[Settings](https://docs.rs/http/latest/settings.html)\n[Help](https://docs.rs/http/latest/help.html)\nSummary[Source](https://docs.rs/http/latest/src/http/lib.rs.html#1-210)\nExpand description\nA general purpose library of common HTTP types\nThis crate is a general purpose library for common types found when working with the HTTP protocol. You\u2019ll find [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\") and [`Response`](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\") types for working as either a client or a server as well as all of their components. Notably you\u2019ll find `Uri` for what a [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\") is requesting, a [`Method`](https://docs.rs/http/latest/http/method/struct.Method.html \"struct http::method::Method\") for how it\u2019s being requested, a [`StatusCode`](https://docs.rs/http/latest/http/status/struct.StatusCode.html \"struct http::status::StatusCode\") for what sort of response came back, a [`Version`](https://docs.rs/http/latest/http/version/struct.Version.html \"struct http::version::Version\") for how this was communicated, and [`HeaderName`](https://docs.rs/http/latest/http/header/struct.HeaderName.html \"struct http::header::HeaderName\")/[`HeaderValue`](https://docs.rs/http/latest/http/header/struct.HeaderValue.html \"struct http::header::HeaderValue\") definitions to get grouped in a [`HeaderMap`](https://docs.rs/http/latest/http/header/struct.HeaderMap.html \"struct http::header::HeaderMap\") to work with request/response headers.\nYou will notably _not_ find an implementation of sending requests or spinning up a server in this crate. It\u2019s intended that this crate is the \u201cstandard library\u201d for HTTP clients and servers without dictating any particular implementation.\n### [\u00a7](https://docs.rs/http/latest/http/#requests-and-responses)Requests and Responses\nPerhaps the main two types in this crate are the [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\") and [`Response`](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\") types. A [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\") could either be constructed to get sent off as a client or it can also be received to generate a [`Response`](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\") for a server. Similarly as a client a [`Response`](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\") is what you get after sending a [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\"), whereas on a server you\u2019ll be manufacturing a [`Response`](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\") to send back to the client.\nEach type has a number of accessors for the component fields. For as a server you might want to inspect a requests URI to dispatch it:\n```\nuse http::{Request, Response};\nfn response(req: Request<()>) -> http::Result<Response<()>> {\n  match req.uri().path() {\n    \"/\" => index(req),\n    \"/foo\" => foo(req),\n    \"/bar\" => bar(req),\n    _ => not_found(req),\n  }\n}\n```\n\nOn a [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\") you\u2019ll also find accessors like [`method`](https://docs.rs/http/latest/http/request/struct.Request.html#method.method \"method http::request::Request::method\") to return a [`Method`](https://docs.rs/http/latest/http/method/struct.Method.html \"struct http::method::Method\") and [`headers`](https://docs.rs/http/latest/http/request/struct.Request.html#method.method \"method http::request::Request::method\") to inspect the various headers. A [`Response`](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\") has similar methods for headers, the status code, etc.\nIn addition to getters, request/response types also have mutable accessors to edit the request/response:\n```\nuse http::{HeaderValue, Response, StatusCode};\nuse http::header::CONTENT_TYPE;\nfn add_server_headers<T>(response: &mut Response<T>) {\n  response.headers_mut()\n    .insert(CONTENT_TYPE, HeaderValue::from_static(\"text/html\"));\n  *response.status_mut() = StatusCode::OK;\n}\n```\n\nAnd finally, one of the most important aspects of requests/responses, the body! The [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\") and [`Response`](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\") types in this crate are _generic_ in what their body is. This allows downstream libraries to use different representations such as `Request<Vec<u8>>`, `Response<impl Read>`, `Request<impl Stream<Item = Vec<u8>, Error = _>>`, or even `Response<MyCustomType>` where the custom type was deserialized from JSON.\nThe body representation is intentionally flexible to give downstream libraries maximal flexibility in implementing the body as appropriate.\n### [\u00a7](https://docs.rs/http/latest/http/#http-headers)HTTP Headers\nAnother major piece of functionality in this library is HTTP header interpretation and generation. The `HeaderName` type serves as a way to define header _names_ , or what\u2019s to the left of the colon. A `HeaderValue` conversely is the header _value_ , or what\u2019s to the right of a colon.\nFor example, if you have an HTTP request that looks like:\n```\nGET /foo HTTP/1.1\nAccept: text/html\n```\n\nThen `\"Accept\"` is a [`HeaderName`](https://docs.rs/http/latest/http/header/struct.HeaderName.html \"struct http::header::HeaderName\") while `\"text/html\"` is a [`HeaderValue`](https://docs.rs/http/latest/http/header/struct.HeaderValue.html \"struct http::header::HeaderValue\"). Each of these is a dedicated type to allow for a number of interesting optimizations and to also encode the static guarantees of each type. For example a [`HeaderName`](https://docs.rs/http/latest/http/header/struct.HeaderName.html \"struct http::header::HeaderName\") is always a valid `&str`, but a [`HeaderValue`](https://docs.rs/http/latest/http/header/struct.HeaderValue.html \"struct http::header::HeaderValue\") may not be valid UTF-8.\nThe most common header names are already defined for you as constant values in the [`header`](https://docs.rs/http/latest/http/header/index.html \"mod http::header\") module of this crate. For example:\n```\nuse http::header::{self, HeaderName};\nlet name: HeaderName = header::ACCEPT;\nassert_eq!(name.as_str(), \"accept\");\n```\n\nYou can, however, also parse header names from strings:\n```\nuse http::header::{self, HeaderName};\nlet name = \"Accept\".parse::<HeaderName>().unwrap();\nassert_eq!(name, header::ACCEPT);\n```\n\nHeader values can be created from string literals through the [`from_static`](https://docs.rs/http/latest/http/header/struct.HeaderValue.html#method.from_static \"associated function http::header::HeaderValue::from_static\") function:\n```\nuse http::HeaderValue;\nlet value = HeaderValue::from_static(\"text/html\");\nassert_eq!(value.as_bytes(), b\"text/html\");\n```\n\nAnd header values can also be parsed like names:\n```\nuse http::HeaderValue;\nlet value = \"text/html\";\nlet value = value.parse::<HeaderValue>().unwrap();\n```\n\nMost HTTP requests and responses tend to come with more than one header, so it\u2019s not too useful to just work with names and values only! This crate also provides a [`HeaderMap`](https://docs.rs/http/latest/http/header/struct.HeaderMap.html \"struct http::header::HeaderMap\") type which is a specialized hash map for keys as [`HeaderName`](https://docs.rs/http/latest/http/header/struct.HeaderName.html \"struct http::header::HeaderName\") and generic values. This type, like header names, is optimized for common usage but should continue to scale with your needs over time.\n## [\u00a7](https://docs.rs/http/latest/http/#uris)URIs\nEach HTTP [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\") has an associated URI with it. This may just be a path like `/index.html` but it could also be an absolute URL such as `https://www.rust-lang.org/index.html`. A [`URI`](https://docs.rs/http/latest/http/uri/struct.Uri.html \"struct http::uri::Uri\") has a number of accessors to interpret it:\n```\nuse http::Uri;\nuse http::uri::Scheme;\nlet uri = \"https://www.rust-lang.org/index.html\".parse::<Uri>().unwrap();\nassert_eq!(uri.scheme(), Some(&Scheme::HTTPS));\nassert_eq!(uri.host(), Some(\"www.rust-lang.org\"));\nassert_eq!(uri.path(), \"/index.html\");\nassert_eq!(uri.query(), None);\n```\n\n## Re-exports[\u00a7](https://docs.rs/http/latest/http/#reexports)\n\n`pub use crate::header::HeaderMap[](https://docs.rs/http/latest/http/header/struct.HeaderMap.html \"struct http::header::HeaderMap\");`\n\n\n`pub use crate::header::HeaderName[](https://docs.rs/http/latest/http/header/struct.HeaderName.html \"struct http::header::HeaderName\");`\n\n\n`pub use crate::header::HeaderValue[](https://docs.rs/http/latest/http/header/struct.HeaderValue.html \"struct http::header::HeaderValue\");`\n\n\n`pub use crate::method::Method[](https://docs.rs/http/latest/http/method/struct.Method.html \"struct http::method::Method\");`\n\n\n`pub use crate::request::Request[](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\");`\n\n\n`pub use crate::response::Response[](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\");`\n\n\n`pub use crate::status::StatusCode[](https://docs.rs/http/latest/http/status/struct.StatusCode.html \"struct http::status::StatusCode\");`\n\n\n`pub use crate::uri::Uri[](https://docs.rs/http/latest/http/uri/struct.Uri.html \"struct http::uri::Uri\");`\n\n\n`pub use crate::version::Version[](https://docs.rs/http/latest/http/version/struct.Version.html \"struct http::version::Version\");`\n\n## Modules[\u00a7](https://docs.rs/http/latest/http/#modules)\n\n[header](https://docs.rs/http/latest/http/header/index.html \"mod http::header\")\n    HTTP header types\n\n[method](https://docs.rs/http/latest/http/method/index.html \"mod http::method\")\n    The HTTP request method\n\n[request](https://docs.rs/http/latest/http/request/index.html \"mod http::request\")\n    HTTP request types.\n\n[response](https://docs.rs/http/latest/http/response/index.html \"mod http::response\")\n    HTTP response types.\n\n[status](https://docs.rs/http/latest/http/status/index.html \"mod http::status\")\n    HTTP status codes\n\n[uri](https://docs.rs/http/latest/http/uri/index.html \"mod http::uri\")\n    URI component of request and response lines\n\n[version](https://docs.rs/http/latest/http/version/index.html \"mod http::version\")\n    HTTP version\n## Structs[\u00a7](https://docs.rs/http/latest/http/#structs)\n\n[Error](https://docs.rs/http/latest/http/struct.Error.html \"struct http::Error\")\n    A generic \u201cerror\u201d for HTTP connections\n\n[Extensions](https://docs.rs/http/latest/http/struct.Extensions.html \"struct http::Extensions\")\n    A type map of protocol extensions.\n## Type Aliases[\u00a7](https://docs.rs/http/latest/http/#types)\n\n[Result](https://docs.rs/http/latest/http/type.Result.html \"type http::Result\")\n    A `Result` typedef to use with the `http::Error` type\n",
              "markdown_with_citations": "[](https://docs.rs/http/latest/http/all.html \"show sidebar\")\n# Crate httpCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA general purpose library of common HTTP types\nThis crate is a general purpose library for common types found when working with the HTTP protocol. You\u2019ll find `Request`\u27e84\u27e9 and `Response`\u27e85\u27e9 types for working as either a client or a server as well as all of their components. Notably you\u2019ll find `Uri` for what a `Request`\u27e84\u27e9 is requesting, a `Method`\u27e86\u27e9 for how it\u2019s being requested, a `StatusCode`\u27e87\u27e9 for what sort of response came back, a `Version`\u27e88\u27e9 for how this was communicated, and `HeaderName`\u27e89\u27e9/`HeaderValue`\u27e810\u27e9 definitions to get grouped in a `HeaderMap`\u27e811\u27e9 to work with request/response headers.\nYou will notably _not_ find an implementation of sending requests or spinning up a server in this crate. It\u2019s intended that this crate is the \u201cstandard library\u201d for HTTP clients and servers without dictating any particular implementation.\n### \u00a7\u27e812\u27e9Requests and Responses\nPerhaps the main two types in this crate are the `Request`\u27e84\u27e9 and `Response`\u27e85\u27e9 types. A `Request`\u27e84\u27e9 could either be constructed to get sent off as a client or it can also be received to generate a `Response`\u27e85\u27e9 for a server. Similarly as a client a `Response`\u27e85\u27e9 is what you get after sending a `Request`\u27e84\u27e9, whereas on a server you\u2019ll be manufacturing a `Response`\u27e85\u27e9 to send back to the client.\nEach type has a number of accessors for the component fields. For as a server you might want to inspect a requests URI to dispatch it:\n```\nuse http::{Request, Response};\nfn response(req: Request<()>) -> http::Result<Response<()>> {\n  match req.uri().path() {\n    \"/\" => index(req),\n    \"/foo\" => foo(req),\n    \"/bar\" => bar(req),\n    _ => not_found(req),\n  }\n}\n```\n\nOn a `Request`\u27e84\u27e9 you\u2019ll also find accessors like `method`\u27e813\u27e9 to return a `Method`\u27e86\u27e9 and `headers`\u27e813\u27e9 to inspect the various headers. A `Response`\u27e85\u27e9 has similar methods for headers, the status code, etc.\nIn addition to getters, request/response types also have mutable accessors to edit the request/response:\n```\nuse http::{HeaderValue, Response, StatusCode};\nuse http::header::CONTENT_TYPE;\nfn add_server_headers<T>(response: &mut Response<T>) {\n  response.headers_mut()\n    .insert(CONTENT_TYPE, HeaderValue::from_static(\"text/html\"));\n  *response.status_mut() = StatusCode::OK;\n}\n```\n\nAnd finally, one of the most important aspects of requests/responses, the body! The `Request`\u27e84\u27e9 and `Response`\u27e85\u27e9 types in this crate are _generic_ in what their body is. This allows downstream libraries to use different representations such as `Request<Vec<u8>>`, `Response<impl Read>`, `Request<impl Stream<Item = Vec<u8>, Error = _>>`, or even `Response<MyCustomType>` where the custom type was deserialized from JSON.\nThe body representation is intentionally flexible to give downstream libraries maximal flexibility in implementing the body as appropriate.\n### \u00a7\u27e814\u27e9HTTP Headers\nAnother major piece of functionality in this library is HTTP header interpretation and generation. The `HeaderName` type serves as a way to define header _names_ , or what\u2019s to the left of the colon. A `HeaderValue` conversely is the header _value_ , or what\u2019s to the right of a colon.\nFor example, if you have an HTTP request that looks like:\n```\nGET /foo HTTP/1.1\nAccept: text/html\n```\n\nThen `\"Accept\"` is a `HeaderName`\u27e89\u27e9 while `\"text/html\"` is a `HeaderValue`\u27e810\u27e9. Each of these is a dedicated type to allow for a number of interesting optimizations and to also encode the static guarantees of each type. For example a `HeaderName`\u27e89\u27e9 is always a valid `&str`, but a `HeaderValue`\u27e810\u27e9 may not be valid UTF-8.\nThe most common header names are already defined for you as constant values in the `header`\u27e815\u27e9 module of this crate. For example:\n```\nuse http::header::{self, HeaderName};\nlet name: HeaderName = header::ACCEPT;\nassert_eq!(name.as_str(), \"accept\");\n```\n\nYou can, however, also parse header names from strings:\n```\nuse http::header::{self, HeaderName};\nlet name = \"Accept\".parse::<HeaderName>().unwrap();\nassert_eq!(name, header::ACCEPT);\n```\n\nHeader values can be created from string literals through the `from_static`\u27e816\u27e9 function:\n```\nuse http::HeaderValue;\nlet value = HeaderValue::from_static(\"text/html\");\nassert_eq!(value.as_bytes(), b\"text/html\");\n```\n\nAnd header values can also be parsed like names:\n```\nuse http::HeaderValue;\nlet value = \"text/html\";\nlet value = value.parse::<HeaderValue>().unwrap();\n```\n\nMost HTTP requests and responses tend to come with more than one header, so it\u2019s not too useful to just work with names and values only! This crate also provides a `HeaderMap`\u27e811\u27e9 type which is a specialized hash map for keys as `HeaderName`\u27e89\u27e9 and generic values. This type, like header names, is optimized for common usage but should continue to scale with your needs over time.\n## \u00a7\u27e817\u27e9URIs\nEach HTTP `Request`\u27e84\u27e9 has an associated URI with it. This may just be a path like `/index.html` but it could also be an absolute URL such as `https://www.rust-lang.org/index.html`. A `URI`\u27e818\u27e9 has a number of accessors to interpret it:\n```\nuse http::Uri;\nuse http::uri::Scheme;\nlet uri = \"https://www.rust-lang.org/index.html\".parse::<Uri>().unwrap();\nassert_eq!(uri.scheme(), Some(&Scheme::HTTPS));\nassert_eq!(uri.host(), Some(\"www.rust-lang.org\"));\nassert_eq!(uri.path(), \"/index.html\");\nassert_eq!(uri.query(), None);\n```\n\n## Re-exports\u00a7\u27e819\u27e9\n\n`pub use crate::header::HeaderMap[](https://docs.rs/http/latest/http/header/struct.HeaderMap.html \"struct http::header::HeaderMap\");`\n\n\n`pub use crate::header::HeaderName[](https://docs.rs/http/latest/http/header/struct.HeaderName.html \"struct http::header::HeaderName\");`\n\n\n`pub use crate::header::HeaderValue[](https://docs.rs/http/latest/http/header/struct.HeaderValue.html \"struct http::header::HeaderValue\");`\n\n\n`pub use crate::method::Method[](https://docs.rs/http/latest/http/method/struct.Method.html \"struct http::method::Method\");`\n\n\n`pub use crate::request::Request[](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\");`\n\n\n`pub use crate::response::Response[](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\");`\n\n\n`pub use crate::status::StatusCode[](https://docs.rs/http/latest/http/status/struct.StatusCode.html \"struct http::status::StatusCode\");`\n\n\n`pub use crate::uri::Uri[](https://docs.rs/http/latest/http/uri/struct.Uri.html \"struct http::uri::Uri\");`\n\n\n`pub use crate::version::Version[](https://docs.rs/http/latest/http/version/struct.Version.html \"struct http::version::Version\");`\n\n## Modules\u00a7\u27e820\u27e9\n\nheader\u27e815\u27e9\n    HTTP header types\n\nmethod\u27e821\u27e9\n    The HTTP request method\n\nrequest\u27e822\u27e9\n    HTTP request types.\n\nresponse\u27e823\u27e9\n    HTTP response types.\n\nstatus\u27e824\u27e9\n    HTTP status codes\n\nuri\u27e825\u27e9\n    URI component of request and response lines\n\nversion\u27e826\u27e9\n    HTTP version\n## Structs\u00a7\u27e827\u27e9\n\nError\u27e828\u27e9\n    A generic \u201cerror\u201d for HTTP connections\n\nExtensions\u27e829\u27e9\n    A type map of protocol extensions.\n## Type Aliases\u00a7\u27e830\u27e9\n\nResult\u27e831\u27e9\n    A `Result` typedef to use with the `http::Error` type\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/http/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/http/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/http/latest/src/http/lib.rs.html#1-210: Source\n\u27e84\u27e9 https://docs.rs/http/latest/http/request/struct.Request.html: struct http::request::Request - `Request`\n\u27e85\u27e9 https://docs.rs/http/latest/http/response/struct.Response.html: struct http::response::Response - `Response`\n\u27e86\u27e9 https://docs.rs/http/latest/http/method/struct.Method.html: struct http::method::Method - `Method`\n\u27e87\u27e9 https://docs.rs/http/latest/http/status/struct.StatusCode.html: struct http::status::StatusCode - `StatusCode`\n\u27e88\u27e9 https://docs.rs/http/latest/http/version/struct.Version.html: struct http::version::Version - `Version`\n\u27e89\u27e9 https://docs.rs/http/latest/http/header/struct.HeaderName.html: struct http::header::HeaderName - `HeaderName`\n\u27e810\u27e9 https://docs.rs/http/latest/http/header/struct.HeaderValue.html: struct http::header::HeaderValue - `HeaderValue`\n\u27e811\u27e9 https://docs.rs/http/latest/http/header/struct.HeaderMap.html: struct http::header::HeaderMap - `HeaderMap`\n\u27e812\u27e9 https://docs.rs/http/latest/http/#requests-and-responses: \u00a7\n\u27e813\u27e9 https://docs.rs/http/latest/http/request/struct.Request.html#method.method: method http::request::Request::method - `method`\n\u27e814\u27e9 https://docs.rs/http/latest/http/#http-headers: \u00a7\n\u27e815\u27e9 https://docs.rs/http/latest/http/header/index.html: mod http::header - `header`\n\u27e816\u27e9 https://docs.rs/http/latest/http/header/struct.HeaderValue.html#method.from_static: associated function http::header::HeaderValue::from_static - `from_static`\n\u27e817\u27e9 https://docs.rs/http/latest/http/#uris: \u00a7\n\u27e818\u27e9 https://docs.rs/http/latest/http/uri/struct.Uri.html: struct http::uri::Uri - `URI`\n\u27e819\u27e9 https://docs.rs/http/latest/http/#reexports: \u00a7\n\u27e820\u27e9 https://docs.rs/http/latest/http/#modules: \u00a7\n\u27e821\u27e9 https://docs.rs/http/latest/http/method/index.html: mod http::method - method\n\u27e822\u27e9 https://docs.rs/http/latest/http/request/index.html: mod http::request - request\n\u27e823\u27e9 https://docs.rs/http/latest/http/response/index.html: mod http::response - response\n\u27e824\u27e9 https://docs.rs/http/latest/http/status/index.html: mod http::status - status\n\u27e825\u27e9 https://docs.rs/http/latest/http/uri/index.html: mod http::uri - uri\n\u27e826\u27e9 https://docs.rs/http/latest/http/version/index.html: mod http::version - version\n\u27e827\u27e9 https://docs.rs/http/latest/http/#structs: \u00a7\n\u27e828\u27e9 https://docs.rs/http/latest/http/struct.Error.html: struct http::Error - Error\n\u27e829\u27e9 https://docs.rs/http/latest/http/struct.Extensions.html: struct http::Extensions - Extensions\n\u27e830\u27e9 https://docs.rs/http/latest/http/#types: \u00a7\n\u27e831\u27e9 https://docs.rs/http/latest/http/type.Result.html: type http::Result - Result\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 11460,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "115448.4000256"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/http",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [41 releases](https://lib.rs/crates/http/versions) (5 stable)\n1.3.1 |  Mar 11, 2025   \n---|---  \n1.2.0 |  Dec 3, 2024   \n1.1.0 |  Mar 4, 2024   \n1.0.0 |  Nov 15, 2023   \n0.0.0-prealpha |  Nov 20, 2014   \n#**2** in [Text processing](https://lib.rs/text-processing \"Crates to deal with the complexities of human language when expressed in textual form.\")\nDownload history 4505828/week @ 2025-03-07 4739831/week @ 2025-03-14 6154275/week @ 2025-03-21 4460541/week @ 2025-03-28 4833600/week @ 2025-04-04 4396062/week @ 2025-04-11 4042435/week @ 2025-04-18 4028141/week @ 2025-04-25 4110328/week @ 2025-05-02 4283931/week @ 2025-05-09 4415695/week @ 2025-05-16 3947856/week @ 2025-05-23 4268258/week @ 2025-05-30 4264751/week @ 2025-06-06 4579246/week @ 2025-06-13 4723152/week @ 2025-06-20\n**18,563,142** downloads per month Used in [**30,737** crates (3,596 directly)](https://lib.rs/crates/http/rev)\n**MIT/Apache**\n440KB  7.5K  SLoC\n# HTTP\nA general purpose library of common HTTP types\n[![CI](https://img.gs/czjpqfbdkz/full/https://github.com/hyperium/http/workflows/CI/badge.svg)](https://github.com/hyperium/http/actions?query=workflow%3ACI) [![Crates.io](https://img.shields.io/crates/v/http.svg)](https://crates.io/crates/http) [![Documentation](https://img.gs/czjpqfbdkz/full/https://docs.rs/http/badge.svg)](https://docs.rs/http)\nMore information about this crate can be found in the [crate documentation](https://docs.rs/http).\n## Usage\nTo use ``http``, first add this to your ``Cargo.toml``:\n```\n```[``dependencies``]`\n`http ``=` ``\"`1.0`\"``\n``\n```\n\nNext, add this to your crate:\n```\n``use` `http`::````{`Request`,` Response```}```;`\n``fn` `main`````(````)``````{`\n  ``//` ...`\n```}```\n`\n```\n\n## Examples\nCreate an HTTP request:\n```\n``use` `http`::``Request`;`\n``fn` `main`````(````)``````{`\n  `let` request `=` `Request`::``builder`(``)`\n   `.``uri``(```\"`https://www.rust-lang.org/`\"```)`\n   `.``header``(```\"`User-Agent`\"```,` ``\"`awesome/1.0`\"```)`\n   `.``body``(``(``)``)`\n   `.``unwrap``(``)``;`\n```}```\n`\n```\n\nCreate an HTTP response:\n```\n``use` `http`::````{`Response`,` StatusCode```}```;`\n``fn` `main`````(````)``````{`\n  `let` response `=` `Response`::``builder`(``)`\n   `.``status``(``StatusCode`::```MOVED_PERMANENTLY``)`\n   `.``header``(```\"`Location`\"```,` ``\"`https://www.rust-lang.org/install.html`\"```)`\n   `.``body``(``(``)``)`\n   `.``unwrap``(``)``;`\n```}```\n`\n```\n\n# Supported Rust Versions\nThis project follows the [Tokio MSRV](https://github.com/tokio-rs/tokio/#supported-rust-versions) and is currently set to ```1.``49```.\n# License\nLicensed under either of\n  * Apache License, Version 2.0 ([LICENSE-APACHE](https://github.com/hyperium/http/blob/8c1fb204b8594ce5cf198af8568453f9df4ed953/LICENSE-APACHE) or <https://apache.org/licenses/LICENSE-2.0>)\n  * MIT license ([LICENSE-MIT](https://github.com/hyperium/http/blob/8c1fb204b8594ce5cf198af8568453f9df4ed953/LICENSE-MIT) or <https://opensource.org/licenses/MIT>)\n\n\n# Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n#### Dependencies\n~240KB \n  * [bytes](https://lib.rs/crates/bytes \"1\")\n  * [fnv](https://lib.rs/crates/fnv \"1.0.5\")\n  * [itoa](https://lib.rs/crates/itoa \"1\")\n\n\n  * dev  [doc-comment](https://lib.rs/crates/doc-comment \"0.3\")\n  * dev  [quickcheck](https://lib.rs/crates/quickcheck \"new\") 1.0\n  * dev  [rand](https://lib.rs/crates/rand \"outdated\") 0.8\n  * dev  [serde](https://lib.rs/crates/serde \"1.0\")\n  * dev  [serde_json](https://lib.rs/crates/serde_json \"1.0\")\n\n\n#### [Other feature](https://lib.rs/crates/http/features)\n  * [std](https://lib.rs/crates/http/features#feature-std)\n\n\n  *[SLoC]: Lines of code, excluding comments\n",
              "markdown_with_citations": "###  41 releases\u27e81\u27e9 (5 stable)\n1.3.1 |  Mar 11, 2025   \n---|---  \n1.2.0 |  Dec 3, 2024   \n1.1.0 |  Mar 4, 2024   \n1.0.0 |  Nov 15, 2023   \n0.0.0-prealpha |  Nov 20, 2014   \n#**2** in Text processing\u27e82\u27e9\nDownload history 4505828/week @ 2025-03-07 4739831/week @ 2025-03-14 6154275/week @ 2025-03-21 4460541/week @ 2025-03-28 4833600/week @ 2025-04-04 4396062/week @ 2025-04-11 4042435/week @ 2025-04-18 4028141/week @ 2025-04-25 4110328/week @ 2025-05-02 4283931/week @ 2025-05-09 4415695/week @ 2025-05-16 3947856/week @ 2025-05-23 4268258/week @ 2025-05-30 4264751/week @ 2025-06-06 4579246/week @ 2025-06-13 4723152/week @ 2025-06-20\n**18,563,142** downloads per month Used in **30,737** crates (3,596 directly)\u27e83\u27e9\n**MIT/Apache**\n440KB  7.5K  SLoC\n# HTTP\nA general purpose library of common HTTP types\n![CI\u27e84\u27e9](https://github.com/hyperium/http/actions?query=workflow%3ACI) ![Crates.io\u27e85\u27e9](https://crates.io/crates/http) ![Documentation\u27e86\u27e9](https://docs.rs/http)\nMore information about this crate can be found in the crate documentation\u27e87\u27e9.\n## Usage\nTo use ``http``, first add this to your ``Cargo.toml``:\n```\n```[``dependencies``]`\n`http ``=` ``\"`1.0`\"``\n``\n```\n\nNext, add this to your crate:\n```\n``use` `http`::````{`Request`,` Response```}```;`\n``fn` `main`````(````)``````{`\n  ``//` ...`\n```}```\n`\n```\n\n## Examples\nCreate an HTTP request:\n```\n``use` `http`::``Request`;`\n``fn` `main`````(````)``````{`\n  `let` request `=` `Request`::``builder`(``)`\n   `.``uri``(```\"`https://www.rust-lang.org/`\"```)`\n   `.``header``(```\"`User-Agent`\"```,` ``\"`awesome/1.0`\"```)`\n   `.``body``(``(``)``)`\n   `.``unwrap``(``)``;`\n```}```\n`\n```\n\nCreate an HTTP response:\n```\n``use` `http`::````{`Response`,` StatusCode```}```;`\n``fn` `main`````(````)``````{`\n  `let` response `=` `Response`::``builder`(``)`\n   `.``status``(``StatusCode`::```MOVED_PERMANENTLY``)`\n   `.``header``(```\"`Location`\"```,` ``\"`https://www.rust-lang.org/install.html`\"```)`\n   `.``body``(``(``)``)`\n   `.``unwrap``(``)``;`\n```}```\n`\n```\n\n# Supported Rust Versions\nThis project follows the Tokio MSRV\u27e88\u27e9 and is currently set to ```1.``49```.\n# License\nLicensed under either of\n  * Apache License, Version 2.0 (LICENSE-APACHE\u27e89\u27e9 or <https://apache.org/licenses/LICENSE-2.0>)\n  * MIT license (LICENSE-MIT\u27e810\u27e9 or <https://opensource.org/licenses/MIT>)\n\n\n# Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n#### Dependencies\n~240KB \n  * bytes\u27e811\u27e9\n  * fnv\u27e812\u27e9\n  * itoa\u27e813\u27e9\n\n\n  * dev  doc-comment\u27e814\u27e9\n  * dev  quickcheck\u27e815\u27e9 1.0\n  * dev  rand\u27e816\u27e9 0.8\n  * dev  serde\u27e817\u27e9\n  * dev  serde_json\u27e818\u27e9\n\n\n#### Other feature\u27e819\u27e9\n  * std\u27e820\u27e9\n\n\n  *[SLoC]: Lines of code, excluding comments\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/http/versions: 41 releases\n\u27e82\u27e9 https://lib.rs/text-processing: Crates to deal with the complexities of human language when expressed in textual form. - Text processing\n\u27e83\u27e9 https://lib.rs/crates/http/rev: **30,737** crates (3,596 directly)\n\u27e84\u27e9 https://img.gs/czjpqfbdkz/full/https://github.com/hyperium/http/workflows/CI/badge.svg: ![CI\n\u27e85\u27e9 https://img.shields.io/crates/v/http.svg: ![Crates.io\n\u27e86\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/http/badge.svg: ![Documentation\n\u27e87\u27e9 https://docs.rs/http: crate documentation\n\u27e88\u27e9 https://github.com/tokio-rs/tokio/#supported-rust-versions: Tokio MSRV\n\u27e89\u27e9 https://github.com/hyperium/http/blob/8c1fb204b8594ce5cf198af8568453f9df4ed953/LICENSE-APACHE: LICENSE-APACHE\n\u27e810\u27e9 https://github.com/hyperium/http/blob/8c1fb204b8594ce5cf198af8568453f9df4ed953/LICENSE-MIT: LICENSE-MIT\n\u27e811\u27e9 https://lib.rs/crates/bytes: 1 - bytes\n\u27e812\u27e9 https://lib.rs/crates/fnv: 1.0.5 - fnv\n\u27e813\u27e9 https://lib.rs/crates/itoa: 1 - itoa\n\u27e814\u27e9 https://lib.rs/crates/doc-comment: 0.3 - doc-comment\n\u27e815\u27e9 https://lib.rs/crates/quickcheck: new - quickcheck\n\u27e816\u27e9 https://lib.rs/crates/rand: outdated - rand\n\u27e817\u27e9 https://lib.rs/crates/serde: 1.0 - serde\n\u27e818\u27e9 https://lib.rs/crates/serde_json: 1.0 - serde_json\n\u27e819\u27e9 https://lib.rs/crates/http/features: Other feature\n\u27e820\u27e9 https://lib.rs/crates/http/features#feature-std: std\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 3827,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "115449.0545594"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fnv",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\target\\debug\\deps\\libfnv-da722296a25cad98.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\itoa-1.0.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "itoa",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\itoa-1.0.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\target\\debug\\deps\\libitoa-ee67ac7b2f9c0b22.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bytes@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytes-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytes",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytes-1.5.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\target\\debug\\deps\\libbytes-0c9a341ee58c240b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: implicit autoref creates a reference to the dereference of a raw pointer\n    --> src\\header\\map.rs:2318:35\n     |\n2318 |         let entry = unsafe { &mut (*self.map).entries[self.entry] };\n     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: creating a reference requires the pointer target to be valid and imposes aliasing requirements\nnote: the lint level is defined here\n    --> src\\lib.rs:156:9\n     |\n156  | #![deny(warnings, missing_docs, missing_debug_implementations)]\n     |         ^^^^^^^^\n     = note: `#[deny(dangerous_implicit_autorefs)]` implied by `#[deny(warnings)]`\nhelp: try using a raw pointer method instead; or if this reference is intentional, make it explicit\n     |\n2318 |         let entry = unsafe { &mut (&mut (*self.map).entries)[self.entry] };\n     |                                   +++++                    +\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "creating a reference requires the pointer target to be valid and imposes aliasing requirements",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the lint level is defined here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6239,
                        "byte_start": 6231,
                        "column_end": 17,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 156,
                        "line_start": 156,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 9,
                            "text": "#![deny(warnings, missing_docs, missing_debug_implementations)]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[deny(dangerous_implicit_autorefs)]` implied by `#[deny(warnings)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using a raw pointer method instead; or if this reference is intentional, make it explicit",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 71251,
                        "byte_start": 71251,
                        "column_end": 35,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2318,
                        "line_start": 2318,
                        "suggested_replacement": "(&mut ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 35,
                            "text": "        let entry = unsafe { &mut (*self.map).entries[self.entry] };"
                          }
                        ]
                      },
                      {
                        "byte_end": 71270,
                        "byte_start": 71270,
                        "column_end": 54,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2318,
                        "line_start": 2318,
                        "suggested_replacement": ")",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 54,
                            "text": "        let entry = unsafe { &mut (*self.map).entries[self.entry] };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "dangerous_implicit_autorefs",
                  "explanation": null
                },
                "level": "error",
                "message": "implicit autoref creates a reference to the dereference of a raw pointer",
                "spans": [
                  {
                    "byte_end": 71282,
                    "byte_start": 71251,
                    "column_end": 66,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 2318,
                    "line_start": 2318,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 35,
                        "text": "        let entry = unsafe { &mut (*self.map).entries[self.entry] };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: implicit autoref creates a reference to the dereference of a raw pointer\n    --> src\\header\\map.rs:2326:43\n     |\n2326 |                 let extra = unsafe { &mut (*self.map).extra_values[idx] };\n     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: creating a reference requires the pointer target to be valid and imposes aliasing requirements\nhelp: try using a raw pointer method instead; or if this reference is intentional, make it explicit\n     |\n2326 |                 let extra = unsafe { &mut (&mut (*self.map).extra_values)[idx] };\n     |                                           +++++                         +\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "creating a reference requires the pointer target to be valid and imposes aliasing requirements",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using a raw pointer method instead; or if this reference is intentional, make it explicit",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 71561,
                        "byte_start": 71561,
                        "column_end": 43,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2326,
                        "line_start": 2326,
                        "suggested_replacement": "(&mut ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 43,
                            "text": "                let extra = unsafe { &mut (*self.map).extra_values[idx] };"
                          }
                        ]
                      },
                      {
                        "byte_end": 71585,
                        "byte_start": 71585,
                        "column_end": 67,
                        "column_start": 67,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2326,
                        "line_start": 2326,
                        "suggested_replacement": ")",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 67,
                            "highlight_start": 67,
                            "text": "                let extra = unsafe { &mut (*self.map).extra_values[idx] };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "dangerous_implicit_autorefs",
                  "explanation": null
                },
                "level": "error",
                "message": "implicit autoref creates a reference to the dereference of a raw pointer",
                "spans": [
                  {
                    "byte_end": 71590,
                    "byte_start": 71561,
                    "column_end": 72,
                    "column_start": 43,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 2326,
                    "line_start": 2326,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 43,
                        "text": "                let extra = unsafe { &mut (*self.map).extra_values[idx] };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: implicit autoref creates a reference to the dereference of a raw pointer\n    --> src\\header\\map.rs:2966:35\n     |\n2966 |         let entry = unsafe { &mut (*self.map).entries[self.index] };\n     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: creating a reference requires the pointer target to be valid and imposes aliasing requirements\nhelp: try using a raw pointer method instead; or if this reference is intentional, make it explicit\n     |\n2966 |         let entry = unsafe { &mut (&mut (*self.map).entries)[self.index] };\n     |                                   +++++                    +\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "creating a reference requires the pointer target to be valid and imposes aliasing requirements",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using a raw pointer method instead; or if this reference is intentional, make it explicit",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 89217,
                        "byte_start": 89217,
                        "column_end": 35,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2966,
                        "line_start": 2966,
                        "suggested_replacement": "(&mut ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 35,
                            "text": "        let entry = unsafe { &mut (*self.map).entries[self.index] };"
                          }
                        ]
                      },
                      {
                        "byte_end": 89236,
                        "byte_start": 89236,
                        "column_end": 54,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2966,
                        "line_start": 2966,
                        "suggested_replacement": ")",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 54,
                            "text": "        let entry = unsafe { &mut (*self.map).entries[self.index] };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "dangerous_implicit_autorefs",
                  "explanation": null
                },
                "level": "error",
                "message": "implicit autoref creates a reference to the dereference of a raw pointer",
                "spans": [
                  {
                    "byte_end": 89248,
                    "byte_start": 89217,
                    "column_end": 66,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 2966,
                    "line_start": 2966,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 35,
                        "text": "        let entry = unsafe { &mut (*self.map).entries[self.index] };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: implicit autoref creates a reference to the dereference of a raw pointer\n    --> src\\header\\map.rs:2986:43\n     |\n2986 |                 let extra = unsafe { &mut (*self.map).extra_values[idx] };\n     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: creating a reference requires the pointer target to be valid and imposes aliasing requirements\nhelp: try using a raw pointer method instead; or if this reference is intentional, make it explicit\n     |\n2986 |                 let extra = unsafe { &mut (&mut (*self.map).extra_values)[idx] };\n     |                                           +++++                         +\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "creating a reference requires the pointer target to be valid and imposes aliasing requirements",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using a raw pointer method instead; or if this reference is intentional, make it explicit",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 89897,
                        "byte_start": 89897,
                        "column_end": 43,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2986,
                        "line_start": 2986,
                        "suggested_replacement": "(&mut ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 43,
                            "text": "                let extra = unsafe { &mut (*self.map).extra_values[idx] };"
                          }
                        ]
                      },
                      {
                        "byte_end": 89921,
                        "byte_start": 89921,
                        "column_end": 67,
                        "column_start": 67,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2986,
                        "line_start": 2986,
                        "suggested_replacement": ")",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 67,
                            "highlight_start": 67,
                            "text": "                let extra = unsafe { &mut (*self.map).extra_values[idx] };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "dangerous_implicit_autorefs",
                  "explanation": null
                },
                "level": "error",
                "message": "implicit autoref creates a reference to the dereference of a raw pointer",
                "spans": [
                  {
                    "byte_end": 89926,
                    "byte_start": 89897,
                    "column_end": 72,
                    "column_start": 43,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 2986,
                    "line_start": 2986,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 43,
                        "text": "                let extra = unsafe { &mut (*self.map).extra_values[idx] };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: implicit autoref creates a reference to the dereference of a raw pointer\n    --> src\\header\\map.rs:3009:35\n     |\n3009 |         let entry = unsafe { &mut (*self.map).entries[self.index] };\n     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: creating a reference requires the pointer target to be valid and imposes aliasing requirements\nhelp: try using a raw pointer method instead; or if this reference is intentional, make it explicit\n     |\n3009 |         let entry = unsafe { &mut (&mut (*self.map).entries)[self.index] };\n     |                                   +++++                    +\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "creating a reference requires the pointer target to be valid and imposes aliasing requirements",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using a raw pointer method instead; or if this reference is intentional, make it explicit",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 90567,
                        "byte_start": 90567,
                        "column_end": 35,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3009,
                        "line_start": 3009,
                        "suggested_replacement": "(&mut ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 35,
                            "text": "        let entry = unsafe { &mut (*self.map).entries[self.index] };"
                          }
                        ]
                      },
                      {
                        "byte_end": 90586,
                        "byte_start": 90586,
                        "column_end": 54,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3009,
                        "line_start": 3009,
                        "suggested_replacement": ")",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 54,
                            "text": "        let entry = unsafe { &mut (*self.map).entries[self.index] };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "dangerous_implicit_autorefs",
                  "explanation": null
                },
                "level": "error",
                "message": "implicit autoref creates a reference to the dereference of a raw pointer",
                "spans": [
                  {
                    "byte_end": 90598,
                    "byte_start": 90567,
                    "column_end": 66,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3009,
                    "line_start": 3009,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 35,
                        "text": "        let entry = unsafe { &mut (*self.map).entries[self.index] };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: implicit autoref creates a reference to the dereference of a raw pointer\n    --> src\\header\\map.rs:3018:43\n     |\n3018 |                 let extra = unsafe { &mut (*self.map).extra_values[idx] };\n     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: creating a reference requires the pointer target to be valid and imposes aliasing requirements\nhelp: try using a raw pointer method instead; or if this reference is intentional, make it explicit\n     |\n3018 |                 let extra = unsafe { &mut (&mut (*self.map).extra_values)[idx] };\n     |                                           +++++                         +\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "creating a reference requires the pointer target to be valid and imposes aliasing requirements",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using a raw pointer method instead; or if this reference is intentional, make it explicit",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 90856,
                        "byte_start": 90856,
                        "column_end": 43,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3018,
                        "line_start": 3018,
                        "suggested_replacement": "(&mut ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 43,
                            "text": "                let extra = unsafe { &mut (*self.map).extra_values[idx] };"
                          }
                        ]
                      },
                      {
                        "byte_end": 90880,
                        "byte_start": 90880,
                        "column_end": 67,
                        "column_start": 67,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3018,
                        "line_start": 3018,
                        "suggested_replacement": ")",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 67,
                            "highlight_start": 67,
                            "text": "                let extra = unsafe { &mut (*self.map).extra_values[idx] };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "dangerous_implicit_autorefs",
                  "explanation": null
                },
                "level": "error",
                "message": "implicit autoref creates a reference to the dereference of a raw pointer",
                "spans": [
                  {
                    "byte_end": 90885,
                    "byte_start": 90856,
                    "column_end": 72,
                    "column_start": 43,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3018,
                    "line_start": 3018,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 43,
                        "text": "                let extra = unsafe { &mut (*self.map).extra_values[idx] };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "build-finished",
              "success": false
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fnv",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\target\\debug\\deps\\libfnv-da722296a25cad98.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bytes@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytes-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytes",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytes-1.5.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\target\\debug\\deps\\libbytes-0c9a341ee58c240b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\itoa-1.0.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "itoa",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\itoa-1.0.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\target\\debug\\deps\\libitoa-ee67ac7b2f9c0b22.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: `?Sized` bound is ignored because of a `Sized` requirement\n    --> src\\header\\map.rs:1456:38\n     |\n1456 |         K: Hash + Into<HeaderName> + ?Sized,\n     |                                      ^^^^^^\n     |\nnote: `K` cannot be unsized because of the bound\n    --> src\\header\\map.rs:1456:19\n     |\n1456 |         K: Hash + Into<HeaderName> + ?Sized,\n     |                   ^^^^^^^^^^^^^^^^\n     = note: ...because `Into` has the bound `Sized`\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_maybe_sized\nnote: the lint level is defined here\n    --> src\\lib.rs:156:9\n     |\n156  | #![deny(warnings, missing_docs, missing_debug_implementations)]\n     |         ^^^^^^^^\n     = note: `#[deny(clippy::needless_maybe_sized)]` implied by `#[deny(warnings)]`\nhelp: change the bounds that require `Sized`, or remove the `?Sized` bound\n     |\n1456 -         K: Hash + Into<HeaderName> + ?Sized,\n1456 +         K: Hash + Into<HeaderName>,\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`K` cannot be unsized because of the bound",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 45117,
                        "byte_start": 45101,
                        "column_end": 35,
                        "column_start": 19,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1456,
                        "line_start": 1456,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 19,
                            "text": "        K: Hash + Into<HeaderName> + ?Sized,"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "...because `Into` has the bound `Sized`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_maybe_sized",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the lint level is defined here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6239,
                        "byte_start": 6231,
                        "column_end": 17,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 156,
                        "line_start": 156,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 9,
                            "text": "#![deny(warnings, missing_docs, missing_debug_implementations)]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[deny(clippy::needless_maybe_sized)]` implied by `#[deny(warnings)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change the bounds that require `Sized`, or remove the `?Sized` bound",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 45126,
                        "byte_start": 45117,
                        "column_end": 44,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1456,
                        "line_start": 1456,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 35,
                            "text": "        K: Hash + Into<HeaderName> + ?Sized,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_maybe_sized",
                  "explanation": null
                },
                "level": "error",
                "message": "`?Sized` bound is ignored because of a `Sized` requirement",
                "spans": [
                  {
                    "byte_end": 45126,
                    "byte_start": 45120,
                    "column_end": 44,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1456,
                    "line_start": 1456,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 44,
                        "highlight_start": 38,
                        "text": "        K: Hash + Into<HeaderName> + ?Sized,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: the following explicit lifetimes could be elided: 'a\n    --> src\\header\\map.rs:3692:10\n     |\n3692 |     impl<'a> Sealed for &'a HeaderName {\n     |          ^^              ^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n     = note: `#[deny(clippy::needless_lifetimes)]` implied by `#[deny(warnings)]`\nhelp: elide the lifetimes\n     |\n3692 -     impl<'a> Sealed for &'a HeaderName {\n3692 +     impl Sealed for &HeaderName {\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[deny(clippy::needless_lifetimes)]` implied by `#[deny(warnings)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 109309,
                        "byte_start": 109305,
                        "column_end": 13,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3692,
                        "line_start": 3692,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 13,
                            "highlight_start": 9,
                            "text": "    impl<'a> Sealed for &'a HeaderName {"
                          }
                        ]
                      },
                      {
                        "byte_end": 109325,
                        "byte_start": 109322,
                        "column_end": 29,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3692,
                        "line_start": 3692,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 26,
                            "text": "    impl<'a> Sealed for &'a HeaderName {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "error",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 109308,
                    "byte_start": 109306,
                    "column_end": 12,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3692,
                    "line_start": 3692,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 10,
                        "text": "    impl<'a> Sealed for &'a HeaderName {"
                      }
                    ]
                  },
                  {
                    "byte_end": 109324,
                    "byte_start": 109322,
                    "column_end": 28,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3692,
                    "line_start": 3692,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 26,
                        "text": "    impl<'a> Sealed for &'a HeaderName {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: the following explicit lifetimes could be elided: 'a\n    --> src\\header\\map.rs:3712:10\n     |\n3712 |     impl<'a> IntoHeaderName for &'a HeaderName {}\n     |          ^^                      ^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n     |\n3712 -     impl<'a> IntoHeaderName for &'a HeaderName {}\n3712 +     impl IntoHeaderName for &HeaderName {}\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 109895,
                        "byte_start": 109891,
                        "column_end": 13,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3712,
                        "line_start": 3712,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 13,
                            "highlight_start": 9,
                            "text": "    impl<'a> IntoHeaderName for &'a HeaderName {}"
                          }
                        ]
                      },
                      {
                        "byte_end": 109919,
                        "byte_start": 109916,
                        "column_end": 37,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3712,
                        "line_start": 3712,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 37,
                            "highlight_start": 34,
                            "text": "    impl<'a> IntoHeaderName for &'a HeaderName {}"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "error",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 109894,
                    "byte_start": 109892,
                    "column_end": 12,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3712,
                    "line_start": 3712,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 10,
                        "text": "    impl<'a> IntoHeaderName for &'a HeaderName {}"
                      }
                    ]
                  },
                  {
                    "byte_end": 109918,
                    "byte_start": 109916,
                    "column_end": 36,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3712,
                    "line_start": 3712,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 34,
                        "text": "    impl<'a> IntoHeaderName for &'a HeaderName {}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: the following explicit lifetimes could be elided: 'a\n    --> src\\header\\map.rs:3802:10\n     |\n3802 |     impl<'a> Sealed for &'a HeaderName {\n     |          ^^              ^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n     |\n3802 -     impl<'a> Sealed for &'a HeaderName {\n3802 +     impl Sealed for &HeaderName {\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 112655,
                        "byte_start": 112651,
                        "column_end": 13,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3802,
                        "line_start": 3802,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 13,
                            "highlight_start": 9,
                            "text": "    impl<'a> Sealed for &'a HeaderName {"
                          }
                        ]
                      },
                      {
                        "byte_end": 112671,
                        "byte_start": 112668,
                        "column_end": 29,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3802,
                        "line_start": 3802,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 26,
                            "text": "    impl<'a> Sealed for &'a HeaderName {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "error",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 112654,
                    "byte_start": 112652,
                    "column_end": 12,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3802,
                    "line_start": 3802,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 10,
                        "text": "    impl<'a> Sealed for &'a HeaderName {"
                      }
                    ]
                  },
                  {
                    "byte_end": 112670,
                    "byte_start": 112668,
                    "column_end": 28,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3802,
                    "line_start": 3802,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 26,
                        "text": "    impl<'a> Sealed for &'a HeaderName {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: the following explicit lifetimes could be elided: 'a\n    --> src\\header\\map.rs:3818:10\n     |\n3818 |     impl<'a> AsHeaderName for &'a HeaderName {}\n     |          ^^                    ^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n     |\n3818 -     impl<'a> AsHeaderName for &'a HeaderName {}\n3818 +     impl AsHeaderName for &HeaderName {}\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 113080,
                        "byte_start": 113076,
                        "column_end": 13,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3818,
                        "line_start": 3818,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 13,
                            "highlight_start": 9,
                            "text": "    impl<'a> AsHeaderName for &'a HeaderName {}"
                          }
                        ]
                      },
                      {
                        "byte_end": 113102,
                        "byte_start": 113099,
                        "column_end": 35,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3818,
                        "line_start": 3818,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 32,
                            "text": "    impl<'a> AsHeaderName for &'a HeaderName {}"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "error",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 113079,
                    "byte_start": 113077,
                    "column_end": 12,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3818,
                    "line_start": 3818,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 10,
                        "text": "    impl<'a> AsHeaderName for &'a HeaderName {}"
                      }
                    ]
                  },
                  {
                    "byte_end": 113101,
                    "byte_start": 113099,
                    "column_end": 34,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3818,
                    "line_start": 3818,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 32,
                        "text": "    impl<'a> AsHeaderName for &'a HeaderName {}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: the following explicit lifetimes could be elided: 'a\n    --> src\\header\\map.rs:3820:10\n     |\n3820 |     impl<'a> Sealed for &'a str {\n     |          ^^              ^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n     |\n3820 -     impl<'a> Sealed for &'a str {\n3820 +     impl Sealed for &str {\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 113129,
                        "byte_start": 113125,
                        "column_end": 13,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3820,
                        "line_start": 3820,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 13,
                            "highlight_start": 9,
                            "text": "    impl<'a> Sealed for &'a str {"
                          }
                        ]
                      },
                      {
                        "byte_end": 113145,
                        "byte_start": 113142,
                        "column_end": 29,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3820,
                        "line_start": 3820,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 26,
                            "text": "    impl<'a> Sealed for &'a str {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "error",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 113128,
                    "byte_start": 113126,
                    "column_end": 12,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3820,
                    "line_start": 3820,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 10,
                        "text": "    impl<'a> Sealed for &'a str {"
                      }
                    ]
                  },
                  {
                    "byte_end": 113144,
                    "byte_start": 113142,
                    "column_end": 28,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3820,
                    "line_start": 3820,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 26,
                        "text": "    impl<'a> Sealed for &'a str {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: the following explicit lifetimes could be elided: 'a\n    --> src\\header\\map.rs:3838:10\n     |\n3838 |     impl<'a> AsHeaderName for &'a str {}\n     |          ^^                    ^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n     |\n3838 -     impl<'a> AsHeaderName for &'a str {}\n3838 +     impl AsHeaderName for &str {}\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 113670,
                        "byte_start": 113666,
                        "column_end": 13,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3838,
                        "line_start": 3838,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 13,
                            "highlight_start": 9,
                            "text": "    impl<'a> AsHeaderName for &'a str {}"
                          }
                        ]
                      },
                      {
                        "byte_end": 113692,
                        "byte_start": 113689,
                        "column_end": 35,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3838,
                        "line_start": 3838,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 32,
                            "text": "    impl<'a> AsHeaderName for &'a str {}"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "error",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 113669,
                    "byte_start": 113667,
                    "column_end": 12,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3838,
                    "line_start": 3838,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 10,
                        "text": "    impl<'a> AsHeaderName for &'a str {}"
                      }
                    ]
                  },
                  {
                    "byte_end": 113691,
                    "byte_start": 113689,
                    "column_end": 34,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3838,
                    "line_start": 3838,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 32,
                        "text": "    impl<'a> AsHeaderName for &'a str {}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: the following explicit lifetimes could be elided: 'a\n    --> src\\header\\map.rs:3858:10\n     |\n3858 |     impl<'a> Sealed for &'a String {\n     |          ^^              ^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n     |\n3858 -     impl<'a> Sealed for &'a String {\n3858 +     impl Sealed for &String {\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 114161,
                        "byte_start": 114157,
                        "column_end": 13,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3858,
                        "line_start": 3858,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 13,
                            "highlight_start": 9,
                            "text": "    impl<'a> Sealed for &'a String {"
                          }
                        ]
                      },
                      {
                        "byte_end": 114177,
                        "byte_start": 114174,
                        "column_end": 29,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3858,
                        "line_start": 3858,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 26,
                            "text": "    impl<'a> Sealed for &'a String {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "error",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 114160,
                    "byte_start": 114158,
                    "column_end": 12,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3858,
                    "line_start": 3858,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 10,
                        "text": "    impl<'a> Sealed for &'a String {"
                      }
                    ]
                  },
                  {
                    "byte_end": 114176,
                    "byte_start": 114174,
                    "column_end": 28,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3858,
                    "line_start": 3858,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 26,
                        "text": "    impl<'a> Sealed for &'a String {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: the following explicit lifetimes could be elided: 'a\n    --> src\\header\\map.rs:3874:10\n     |\n3874 |     impl<'a> AsHeaderName for &'a String {}\n     |          ^^                    ^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n     |\n3874 -     impl<'a> AsHeaderName for &'a String {}\n3874 +     impl AsHeaderName for &String {}\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 114572,
                        "byte_start": 114568,
                        "column_end": 13,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3874,
                        "line_start": 3874,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 13,
                            "highlight_start": 9,
                            "text": "    impl<'a> AsHeaderName for &'a String {}"
                          }
                        ]
                      },
                      {
                        "byte_end": 114594,
                        "byte_start": 114591,
                        "column_end": 35,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3874,
                        "line_start": 3874,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 32,
                            "text": "    impl<'a> AsHeaderName for &'a String {}"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "error",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 114571,
                    "byte_start": 114569,
                    "column_end": 12,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3874,
                    "line_start": 3874,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 10,
                        "text": "    impl<'a> AsHeaderName for &'a String {}"
                      }
                    ]
                  },
                  {
                    "byte_end": 114593,
                    "byte_start": 114591,
                    "column_end": 34,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3874,
                    "line_start": 3874,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 32,
                        "text": "    impl<'a> AsHeaderName for &'a String {}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: the following explicit lifetimes could be elided: 'a\n    --> src\\header\\name.rs:1442:6\n     |\n1442 | impl<'a> PartialEq<HeaderName> for &'a HeaderName {\n     |      ^^                             ^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n     |\n1442 - impl<'a> PartialEq<HeaderName> for &'a HeaderName {\n1442 + impl PartialEq<HeaderName> for &HeaderName {\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 65132,
                        "byte_start": 65128,
                        "column_end": 9,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\header\\name.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1442,
                        "line_start": 1442,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 9,
                            "highlight_start": 5,
                            "text": "impl<'a> PartialEq<HeaderName> for &'a HeaderName {"
                          }
                        ]
                      },
                      {
                        "byte_end": 65163,
                        "byte_start": 65160,
                        "column_end": 40,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\header\\name.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1442,
                        "line_start": 1442,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 37,
                            "text": "impl<'a> PartialEq<HeaderName> for &'a HeaderName {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "error",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 65131,
                    "byte_start": 65129,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\header\\name.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1442,
                    "line_start": 1442,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a> PartialEq<HeaderName> for &'a HeaderName {"
                      }
                    ]
                  },
                  {
                    "byte_end": 65162,
                    "byte_start": 65160,
                    "column_end": 39,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\header\\name.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1442,
                    "line_start": 1442,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 37,
                        "text": "impl<'a> PartialEq<HeaderName> for &'a HeaderName {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: the following explicit lifetimes could be elided: 'a\n    --> src\\header\\name.rs:1496:6\n     |\n1496 | impl<'a> PartialEq<HeaderName> for &'a str {\n     |      ^^                             ^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n     |\n1496 - impl<'a> PartialEq<HeaderName> for &'a str {\n1496 + impl PartialEq<HeaderName> for &str {\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 66529,
                        "byte_start": 66525,
                        "column_end": 9,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\header\\name.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1496,
                        "line_start": 1496,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 9,
                            "highlight_start": 5,
                            "text": "impl<'a> PartialEq<HeaderName> for &'a str {"
                          }
                        ]
                      },
                      {
                        "byte_end": 66560,
                        "byte_start": 66557,
                        "column_end": 40,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\header\\name.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1496,
                        "line_start": 1496,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 37,
                            "text": "impl<'a> PartialEq<HeaderName> for &'a str {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "error",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 66528,
                    "byte_start": 66526,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\header\\name.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1496,
                    "line_start": 1496,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a> PartialEq<HeaderName> for &'a str {"
                      }
                    ]
                  },
                  {
                    "byte_end": 66559,
                    "byte_start": 66557,
                    "column_end": 39,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\header\\name.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1496,
                    "line_start": 1496,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 37,
                        "text": "impl<'a> PartialEq<HeaderName> for &'a str {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: the following explicit lifetimes could be elided: 'a\n   --> src\\header\\value.rs:728:6\n    |\n728 | impl<'a> PartialEq<HeaderValue> for &'a HeaderValue {\n    |      ^^                              ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n728 - impl<'a> PartialEq<HeaderValue> for &'a HeaderValue {\n728 + impl PartialEq<HeaderValue> for &HeaderValue {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20320,
                        "byte_start": 20316,
                        "column_end": 9,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\header\\value.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 728,
                        "line_start": 728,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 9,
                            "highlight_start": 5,
                            "text": "impl<'a> PartialEq<HeaderValue> for &'a HeaderValue {"
                          }
                        ]
                      },
                      {
                        "byte_end": 20352,
                        "byte_start": 20349,
                        "column_end": 41,
                        "column_start": 38,
                        "expansion": null,
                        "file_name": "src\\header\\value.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 728,
                        "line_start": 728,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 38,
                            "text": "impl<'a> PartialEq<HeaderValue> for &'a HeaderValue {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "error",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 20319,
                    "byte_start": 20317,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\header\\value.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 728,
                    "line_start": 728,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a> PartialEq<HeaderValue> for &'a HeaderValue {"
                      }
                    ]
                  },
                  {
                    "byte_end": 20351,
                    "byte_start": 20349,
                    "column_end": 40,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\header\\value.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 728,
                    "line_start": 728,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 38,
                        "text": "impl<'a> PartialEq<HeaderValue> for &'a HeaderValue {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: the following explicit lifetimes could be elided: 'a\n   --> src\\header\\value.rs:735:6\n    |\n735 | impl<'a> PartialOrd<HeaderValue> for &'a HeaderValue {\n    |      ^^                               ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n735 - impl<'a> PartialOrd<HeaderValue> for &'a HeaderValue {\n735 + impl PartialOrd<HeaderValue> for &HeaderValue {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20470,
                        "byte_start": 20466,
                        "column_end": 9,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\header\\value.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 735,
                        "line_start": 735,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 9,
                            "highlight_start": 5,
                            "text": "impl<'a> PartialOrd<HeaderValue> for &'a HeaderValue {"
                          }
                        ]
                      },
                      {
                        "byte_end": 20503,
                        "byte_start": 20500,
                        "column_end": 42,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\header\\value.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 735,
                        "line_start": 735,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 39,
                            "text": "impl<'a> PartialOrd<HeaderValue> for &'a HeaderValue {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "error",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 20469,
                    "byte_start": 20467,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\header\\value.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 735,
                    "line_start": 735,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a> PartialOrd<HeaderValue> for &'a HeaderValue {"
                      }
                    ]
                  },
                  {
                    "byte_end": 20502,
                    "byte_start": 20500,
                    "column_end": 41,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "src\\header\\value.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 735,
                    "line_start": 735,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 39,
                        "text": "impl<'a> PartialOrd<HeaderValue> for &'a HeaderValue {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: the following explicit lifetimes could be elided: 'a\n   --> src\\header\\value.rs:762:6\n    |\n762 | impl<'a> PartialEq<HeaderValue> for &'a str {\n    |      ^^                              ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n762 - impl<'a> PartialEq<HeaderValue> for &'a str {\n762 + impl PartialEq<HeaderValue> for &str {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 21058,
                        "byte_start": 21054,
                        "column_end": 9,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\header\\value.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 762,
                        "line_start": 762,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 9,
                            "highlight_start": 5,
                            "text": "impl<'a> PartialEq<HeaderValue> for &'a str {"
                          }
                        ]
                      },
                      {
                        "byte_end": 21090,
                        "byte_start": 21087,
                        "column_end": 41,
                        "column_start": 38,
                        "expansion": null,
                        "file_name": "src\\header\\value.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 762,
                        "line_start": 762,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 38,
                            "text": "impl<'a> PartialEq<HeaderValue> for &'a str {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "error",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 21057,
                    "byte_start": 21055,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\header\\value.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 762,
                    "line_start": 762,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a> PartialEq<HeaderValue> for &'a str {"
                      }
                    ]
                  },
                  {
                    "byte_end": 21089,
                    "byte_start": 21087,
                    "column_end": 40,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\header\\value.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 762,
                    "line_start": 762,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 38,
                        "text": "impl<'a> PartialEq<HeaderValue> for &'a str {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: the following explicit lifetimes could be elided: 'a\n   --> src\\header\\value.rs:769:6\n    |\n769 | impl<'a> PartialOrd<HeaderValue> for &'a str {\n    |      ^^                               ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n769 - impl<'a> PartialOrd<HeaderValue> for &'a str {\n769 + impl PartialOrd<HeaderValue> for &str {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 21199,
                        "byte_start": 21195,
                        "column_end": 9,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\header\\value.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 769,
                        "line_start": 769,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 9,
                            "highlight_start": 5,
                            "text": "impl<'a> PartialOrd<HeaderValue> for &'a str {"
                          }
                        ]
                      },
                      {
                        "byte_end": 21232,
                        "byte_start": 21229,
                        "column_end": 42,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\header\\value.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 769,
                        "line_start": 769,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 39,
                            "text": "impl<'a> PartialOrd<HeaderValue> for &'a str {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "error",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 21198,
                    "byte_start": 21196,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\header\\value.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 769,
                    "line_start": 769,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a> PartialOrd<HeaderValue> for &'a str {"
                      }
                    ]
                  },
                  {
                    "byte_end": 21231,
                    "byte_start": 21229,
                    "column_end": 41,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "src\\header\\value.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 769,
                    "line_start": 769,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 39,
                        "text": "impl<'a> PartialOrd<HeaderValue> for &'a str {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: the following explicit lifetimes could be elided: 'a\n   --> src\\method.rs:197:6\n    |\n197 | impl<'a> PartialEq<Method> for &'a Method {\n    |      ^^                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n197 - impl<'a> PartialEq<Method> for &'a Method {\n197 + impl PartialEq<Method> for &Method {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5357,
                        "byte_start": 5353,
                        "column_end": 9,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\method.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 197,
                        "line_start": 197,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 9,
                            "highlight_start": 5,
                            "text": "impl<'a> PartialEq<Method> for &'a Method {"
                          }
                        ]
                      },
                      {
                        "byte_end": 5384,
                        "byte_start": 5381,
                        "column_end": 36,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\method.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 197,
                        "line_start": 197,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 33,
                            "text": "impl<'a> PartialEq<Method> for &'a Method {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "error",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 5356,
                    "byte_start": 5354,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\method.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 197,
                    "line_start": 197,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a> PartialEq<Method> for &'a Method {"
                      }
                    ]
                  },
                  {
                    "byte_end": 5383,
                    "byte_start": 5381,
                    "column_end": 35,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\method.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 197,
                    "line_start": 197,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 33,
                        "text": "impl<'a> PartialEq<Method> for &'a Method {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: the following explicit lifetimes could be elided: 'a\n   --> src\\method.rs:225:6\n    |\n225 | impl<'a> PartialEq<Method> for &'a str {\n    |      ^^                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n225 - impl<'a> PartialEq<Method> for &'a str {\n225 + impl PartialEq<Method> for &str {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5887,
                        "byte_start": 5883,
                        "column_end": 9,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\method.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 225,
                        "line_start": 225,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 9,
                            "highlight_start": 5,
                            "text": "impl<'a> PartialEq<Method> for &'a str {"
                          }
                        ]
                      },
                      {
                        "byte_end": 5914,
                        "byte_start": 5911,
                        "column_end": 36,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\method.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 225,
                        "line_start": 225,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 33,
                            "text": "impl<'a> PartialEq<Method> for &'a str {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "error",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 5886,
                    "byte_start": 5884,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\method.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 225,
                    "line_start": 225,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a> PartialEq<Method> for &'a str {"
                      }
                    ]
                  },
                  {
                    "byte_end": 5913,
                    "byte_start": 5911,
                    "column_end": 35,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\method.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 225,
                    "line_start": 225,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 33,
                        "text": "impl<'a> PartialEq<Method> for &'a str {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: this seems like a manual implementation of the non-exhaustive pattern\n   --> src\\request.rs:168:1\n    |\n168 | / pub struct Parts {\n169 | |     /// The request's method\n170 | |     pub method: Method,\n...   |\n184 | |     _priv: (),\n185 | | }\n    | |_^\n    |\nhelp: remove this field\n   --> src\\request.rs:184:5\n    |\n184 |     _priv: (),\n    |     ^^^^^^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_non_exhaustive\n    = note: `#[deny(clippy::manual_non_exhaustive)]` implied by `#[deny(warnings)]`\nhelp: use the `#[non_exhaustive]` attribute instead\n    |\n168 + #[non_exhaustive]\n169 | pub struct Parts {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "remove this field",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4492,
                        "byte_start": 4483,
                        "column_end": 14,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\request.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 184,
                        "line_start": 184,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 14,
                            "highlight_start": 5,
                            "text": "    _priv: (),"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_non_exhaustive",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[deny(clippy::manual_non_exhaustive)]` implied by `#[deny(warnings)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the `#[non_exhaustive]` attribute instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4166,
                        "byte_start": 4166,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\request.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 168,
                        "line_start": 168,
                        "suggested_replacement": "#[non_exhaustive]\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub struct Parts {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_non_exhaustive",
                  "explanation": null
                },
                "level": "error",
                "message": "this seems like a manual implementation of the non-exhaustive pattern",
                "spans": [
                  {
                    "byte_end": 4495,
                    "byte_start": 4166,
                    "column_end": 2,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\request.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 185,
                    "line_start": 168,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "pub struct Parts {"
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "    /// The request's method"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "    pub method: Method,"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "    /// The request's URI"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "    pub uri: Uri,"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "    /// The request's version"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "    pub version: Version,"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "    /// The request's headers"
                      },
                      {
                        "highlight_end": 41,
                        "highlight_start": 1,
                        "text": "    pub headers: HeaderMap<HeaderValue>,"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "    /// The request's extensions"
                      },
                      {
                        "highlight_end": 32,
                        "highlight_start": 1,
                        "text": "    pub extensions: Extensions,"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "    _priv: (),"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: this seems like a manual implementation of the non-exhaustive pattern\n   --> src\\response.rs:190:1\n    |\n190 | / pub struct Parts {\n191 | |     /// The response's status\n192 | |     pub status: StatusCode,\n...   |\n203 | |     _priv: (),\n204 | | }\n    | |_^\n    |\nhelp: remove this field\n   --> src\\response.rs:203:5\n    |\n203 |     _priv: (),\n    |     ^^^^^^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_non_exhaustive\nhelp: use the `#[non_exhaustive]` attribute instead\n    |\n190 + #[non_exhaustive]\n191 | pub struct Parts {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "remove this field",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5113,
                        "byte_start": 5104,
                        "column_end": 14,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\response.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 203,
                        "line_start": 203,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 14,
                            "highlight_start": 5,
                            "text": "    _priv: (),"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_non_exhaustive",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the `#[non_exhaustive]` attribute instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4824,
                        "byte_start": 4824,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\response.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 190,
                        "line_start": 190,
                        "suggested_replacement": "#[non_exhaustive]\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub struct Parts {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_non_exhaustive",
                  "explanation": null
                },
                "level": "error",
                "message": "this seems like a manual implementation of the non-exhaustive pattern",
                "spans": [
                  {
                    "byte_end": 5116,
                    "byte_start": 4824,
                    "column_end": 2,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\response.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 204,
                    "line_start": 190,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "pub struct Parts {"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "    /// The response's status"
                      },
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "    pub status: StatusCode,"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "    /// The response's version"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "    pub version: Version,"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "    /// The response's headers"
                      },
                      {
                        "highlight_end": 41,
                        "highlight_start": 1,
                        "text": "    pub headers: HeaderMap<HeaderValue>,"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "    /// The response's extensions"
                      },
                      {
                        "highlight_end": 32,
                        "highlight_start": 1,
                        "text": "    pub extensions: Extensions,"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "    _priv: (),"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: the following explicit lifetimes could be elided: 'a\n   --> src\\uri\\authority.rs:305:6\n    |\n305 | impl<'a> PartialEq<Authority> for &'a str {\n    |      ^^                            ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n305 - impl<'a> PartialEq<Authority> for &'a str {\n305 + impl PartialEq<Authority> for &str {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9900,
                        "byte_start": 9896,
                        "column_end": 9,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\uri\\authority.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 305,
                        "line_start": 305,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 9,
                            "highlight_start": 5,
                            "text": "impl<'a> PartialEq<Authority> for &'a str {"
                          }
                        ]
                      },
                      {
                        "byte_end": 9930,
                        "byte_start": 9927,
                        "column_end": 39,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "src\\uri\\authority.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 305,
                        "line_start": 305,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 36,
                            "text": "impl<'a> PartialEq<Authority> for &'a str {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "error",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 9899,
                    "byte_start": 9897,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\uri\\authority.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 305,
                    "line_start": 305,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a> PartialEq<Authority> for &'a str {"
                      }
                    ]
                  },
                  {
                    "byte_end": 9929,
                    "byte_start": 9927,
                    "column_end": 38,
                    "column_start": 36,
                    "expansion": null,
                    "file_name": "src\\uri\\authority.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 305,
                    "line_start": 305,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 36,
                        "text": "impl<'a> PartialEq<Authority> for &'a str {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: the following explicit lifetimes could be elided: 'a\n   --> src\\uri\\authority.rs:363:6\n    |\n363 | impl<'a> PartialOrd<Authority> for &'a str {\n    |      ^^                             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n363 - impl<'a> PartialOrd<Authority> for &'a str {\n363 + impl PartialOrd<Authority> for &str {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11638,
                        "byte_start": 11634,
                        "column_end": 9,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\uri\\authority.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 363,
                        "line_start": 363,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 9,
                            "highlight_start": 5,
                            "text": "impl<'a> PartialOrd<Authority> for &'a str {"
                          }
                        ]
                      },
                      {
                        "byte_end": 11669,
                        "byte_start": 11666,
                        "column_end": 40,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\uri\\authority.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 363,
                        "line_start": 363,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 37,
                            "text": "impl<'a> PartialOrd<Authority> for &'a str {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "error",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 11637,
                    "byte_start": 11635,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\uri\\authority.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 363,
                    "line_start": 363,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a> PartialOrd<Authority> for &'a str {"
                      }
                    ]
                  },
                  {
                    "byte_end": 11668,
                    "byte_start": 11666,
                    "column_end": 39,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\uri\\authority.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 363,
                    "line_start": 363,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 37,
                        "text": "impl<'a> PartialOrd<Authority> for &'a str {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: the following explicit lifetimes could be elided: 'a\n   --> src\\uri\\path.rs:386:6\n    |\n386 | impl<'a> PartialEq<PathAndQuery> for &'a str {\n    |      ^^                               ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n386 - impl<'a> PartialEq<PathAndQuery> for &'a str {\n386 + impl PartialEq<PathAndQuery> for &str {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11004,
                        "byte_start": 11000,
                        "column_end": 9,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\uri\\path.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 386,
                        "line_start": 386,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 9,
                            "highlight_start": 5,
                            "text": "impl<'a> PartialEq<PathAndQuery> for &'a str {"
                          }
                        ]
                      },
                      {
                        "byte_end": 11037,
                        "byte_start": 11034,
                        "column_end": 42,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\uri\\path.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 386,
                        "line_start": 386,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 39,
                            "text": "impl<'a> PartialEq<PathAndQuery> for &'a str {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "error",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 11003,
                    "byte_start": 11001,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\uri\\path.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 386,
                    "line_start": 386,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a> PartialEq<PathAndQuery> for &'a str {"
                      }
                    ]
                  },
                  {
                    "byte_end": 11036,
                    "byte_start": 11034,
                    "column_end": 41,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "src\\uri\\path.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 386,
                    "line_start": 386,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 39,
                        "text": "impl<'a> PartialEq<PathAndQuery> for &'a str {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: the following explicit lifetimes could be elided: 'a\n   --> src\\uri\\path.rs:449:6\n    |\n449 | impl<'a> PartialOrd<PathAndQuery> for &'a str {\n    |      ^^                                ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n449 - impl<'a> PartialOrd<PathAndQuery> for &'a str {\n449 + impl PartialOrd<PathAndQuery> for &str {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12460,
                        "byte_start": 12456,
                        "column_end": 9,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\uri\\path.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 449,
                        "line_start": 449,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 9,
                            "highlight_start": 5,
                            "text": "impl<'a> PartialOrd<PathAndQuery> for &'a str {"
                          }
                        ]
                      },
                      {
                        "byte_end": 12494,
                        "byte_start": 12491,
                        "column_end": 43,
                        "column_start": 40,
                        "expansion": null,
                        "file_name": "src\\uri\\path.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 449,
                        "line_start": 449,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 40,
                            "text": "impl<'a> PartialOrd<PathAndQuery> for &'a str {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "error",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 12459,
                    "byte_start": 12457,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\uri\\path.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 449,
                    "line_start": 449,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a> PartialOrd<PathAndQuery> for &'a str {"
                      }
                    ]
                  },
                  {
                    "byte_end": 12493,
                    "byte_start": 12491,
                    "column_end": 42,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "src\\uri\\path.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 449,
                    "line_start": 449,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 40,
                        "text": "impl<'a> PartialOrd<PathAndQuery> for &'a str {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: this seems like a manual implementation of the non-exhaustive pattern\n   --> src\\uri\\mod.rs:106:1\n    |\n106 | / pub struct Parts {\n107 | |     /// The scheme component of a URI\n108 | |     pub scheme: Option<Scheme>,\n...   |\n117 | |     _priv: (),\n118 | | }\n    | |_^\n    |\nhelp: remove this field\n   --> src\\uri\\mod.rs:117:5\n    |\n117 |     _priv: (),\n    |     ^^^^^^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_non_exhaustive\nhelp: use the `#[non_exhaustive]` attribute instead\n    |\n106 + #[non_exhaustive]\n107 | pub struct Parts {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "remove this field",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3443,
                        "byte_start": 3434,
                        "column_end": 14,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\uri\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 117,
                        "line_start": 117,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 14,
                            "highlight_start": 5,
                            "text": "    _priv: (),"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_non_exhaustive",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the `#[non_exhaustive]` attribute instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3132,
                        "byte_start": 3132,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\uri\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 106,
                        "line_start": 106,
                        "suggested_replacement": "#[non_exhaustive]\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub struct Parts {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_non_exhaustive",
                  "explanation": null
                },
                "level": "error",
                "message": "this seems like a manual implementation of the non-exhaustive pattern",
                "spans": [
                  {
                    "byte_end": 3446,
                    "byte_start": 3132,
                    "column_end": 2,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\uri\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 118,
                    "line_start": 106,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "pub struct Parts {"
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "    /// The scheme component of a URI"
                      },
                      {
                        "highlight_end": 32,
                        "highlight_start": 1,
                        "text": "    pub scheme: Option<Scheme>,"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 41,
                        "highlight_start": 1,
                        "text": "    /// The authority component of a URI"
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "    pub authority: Option<Authority>,"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "    /// The origin-form component of a URI"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "    pub path_and_query: Option<PathAndQuery>,"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "    /// Allow extending in the future"
                      },
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "    _priv: (),"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: the following explicit lifetimes could be elided: 'a\n    --> src\\uri\\mod.rs:1004:6\n     |\n1004 | impl<'a> PartialEq<Uri> for &'a str {\n     |      ^^                      ^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n     |\n1004 - impl<'a> PartialEq<Uri> for &'a str {\n1004 + impl PartialEq<Uri> for &str {\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 28518,
                        "byte_start": 28514,
                        "column_end": 9,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\uri\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1004,
                        "line_start": 1004,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 9,
                            "highlight_start": 5,
                            "text": "impl<'a> PartialEq<Uri> for &'a str {"
                          }
                        ]
                      },
                      {
                        "byte_end": 28542,
                        "byte_start": 28539,
                        "column_end": 33,
                        "column_start": 30,
                        "expansion": null,
                        "file_name": "src\\uri\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1004,
                        "line_start": 1004,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 30,
                            "text": "impl<'a> PartialEq<Uri> for &'a str {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "error",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 28517,
                    "byte_start": 28515,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\uri\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1004,
                    "line_start": 1004,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a> PartialEq<Uri> for &'a str {"
                      }
                    ]
                  },
                  {
                    "byte_end": 28541,
                    "byte_start": 28539,
                    "column_end": 32,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\uri\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1004,
                    "line_start": 1004,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 30,
                        "text": "impl<'a> PartialEq<Uri> for &'a str {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: implicit autoref creates a reference to the dereference of a raw pointer\n    --> src\\header\\map.rs:2318:35\n     |\n2318 |         let entry = unsafe { &mut (*self.map).entries[self.entry] };\n     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: creating a reference requires the pointer target to be valid and imposes aliasing requirements\n     = note: `#[deny(dangerous_implicit_autorefs)]` implied by `#[deny(warnings)]`\nhelp: try using a raw pointer method instead; or if this reference is intentional, make it explicit\n     |\n2318 |         let entry = unsafe { &mut (&mut (*self.map).entries)[self.entry] };\n     |                                   +++++                    +\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "creating a reference requires the pointer target to be valid and imposes aliasing requirements",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[deny(dangerous_implicit_autorefs)]` implied by `#[deny(warnings)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using a raw pointer method instead; or if this reference is intentional, make it explicit",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 71251,
                        "byte_start": 71251,
                        "column_end": 35,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2318,
                        "line_start": 2318,
                        "suggested_replacement": "(&mut ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 35,
                            "text": "        let entry = unsafe { &mut (*self.map).entries[self.entry] };"
                          }
                        ]
                      },
                      {
                        "byte_end": 71270,
                        "byte_start": 71270,
                        "column_end": 54,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2318,
                        "line_start": 2318,
                        "suggested_replacement": ")",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 54,
                            "text": "        let entry = unsafe { &mut (*self.map).entries[self.entry] };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "dangerous_implicit_autorefs",
                  "explanation": null
                },
                "level": "error",
                "message": "implicit autoref creates a reference to the dereference of a raw pointer",
                "spans": [
                  {
                    "byte_end": 71282,
                    "byte_start": 71251,
                    "column_end": 66,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 2318,
                    "line_start": 2318,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 35,
                        "text": "        let entry = unsafe { &mut (*self.map).entries[self.entry] };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: implicit autoref creates a reference to the dereference of a raw pointer\n    --> src\\header\\map.rs:2326:43\n     |\n2326 |                 let extra = unsafe { &mut (*self.map).extra_values[idx] };\n     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: creating a reference requires the pointer target to be valid and imposes aliasing requirements\nhelp: try using a raw pointer method instead; or if this reference is intentional, make it explicit\n     |\n2326 |                 let extra = unsafe { &mut (&mut (*self.map).extra_values)[idx] };\n     |                                           +++++                         +\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "creating a reference requires the pointer target to be valid and imposes aliasing requirements",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using a raw pointer method instead; or if this reference is intentional, make it explicit",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 71561,
                        "byte_start": 71561,
                        "column_end": 43,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2326,
                        "line_start": 2326,
                        "suggested_replacement": "(&mut ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 43,
                            "text": "                let extra = unsafe { &mut (*self.map).extra_values[idx] };"
                          }
                        ]
                      },
                      {
                        "byte_end": 71585,
                        "byte_start": 71585,
                        "column_end": 67,
                        "column_start": 67,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2326,
                        "line_start": 2326,
                        "suggested_replacement": ")",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 67,
                            "highlight_start": 67,
                            "text": "                let extra = unsafe { &mut (*self.map).extra_values[idx] };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "dangerous_implicit_autorefs",
                  "explanation": null
                },
                "level": "error",
                "message": "implicit autoref creates a reference to the dereference of a raw pointer",
                "spans": [
                  {
                    "byte_end": 71590,
                    "byte_start": 71561,
                    "column_end": 72,
                    "column_start": 43,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 2326,
                    "line_start": 2326,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 43,
                        "text": "                let extra = unsafe { &mut (*self.map).extra_values[idx] };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: implicit autoref creates a reference to the dereference of a raw pointer\n    --> src\\header\\map.rs:2966:35\n     |\n2966 |         let entry = unsafe { &mut (*self.map).entries[self.index] };\n     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: creating a reference requires the pointer target to be valid and imposes aliasing requirements\nhelp: try using a raw pointer method instead; or if this reference is intentional, make it explicit\n     |\n2966 |         let entry = unsafe { &mut (&mut (*self.map).entries)[self.index] };\n     |                                   +++++                    +\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "creating a reference requires the pointer target to be valid and imposes aliasing requirements",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using a raw pointer method instead; or if this reference is intentional, make it explicit",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 89217,
                        "byte_start": 89217,
                        "column_end": 35,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2966,
                        "line_start": 2966,
                        "suggested_replacement": "(&mut ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 35,
                            "text": "        let entry = unsafe { &mut (*self.map).entries[self.index] };"
                          }
                        ]
                      },
                      {
                        "byte_end": 89236,
                        "byte_start": 89236,
                        "column_end": 54,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2966,
                        "line_start": 2966,
                        "suggested_replacement": ")",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 54,
                            "text": "        let entry = unsafe { &mut (*self.map).entries[self.index] };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "dangerous_implicit_autorefs",
                  "explanation": null
                },
                "level": "error",
                "message": "implicit autoref creates a reference to the dereference of a raw pointer",
                "spans": [
                  {
                    "byte_end": 89248,
                    "byte_start": 89217,
                    "column_end": 66,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 2966,
                    "line_start": 2966,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 35,
                        "text": "        let entry = unsafe { &mut (*self.map).entries[self.index] };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: implicit autoref creates a reference to the dereference of a raw pointer\n    --> src\\header\\map.rs:2986:43\n     |\n2986 |                 let extra = unsafe { &mut (*self.map).extra_values[idx] };\n     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: creating a reference requires the pointer target to be valid and imposes aliasing requirements\nhelp: try using a raw pointer method instead; or if this reference is intentional, make it explicit\n     |\n2986 |                 let extra = unsafe { &mut (&mut (*self.map).extra_values)[idx] };\n     |                                           +++++                         +\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "creating a reference requires the pointer target to be valid and imposes aliasing requirements",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using a raw pointer method instead; or if this reference is intentional, make it explicit",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 89897,
                        "byte_start": 89897,
                        "column_end": 43,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2986,
                        "line_start": 2986,
                        "suggested_replacement": "(&mut ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 43,
                            "text": "                let extra = unsafe { &mut (*self.map).extra_values[idx] };"
                          }
                        ]
                      },
                      {
                        "byte_end": 89921,
                        "byte_start": 89921,
                        "column_end": 67,
                        "column_start": 67,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2986,
                        "line_start": 2986,
                        "suggested_replacement": ")",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 67,
                            "highlight_start": 67,
                            "text": "                let extra = unsafe { &mut (*self.map).extra_values[idx] };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "dangerous_implicit_autorefs",
                  "explanation": null
                },
                "level": "error",
                "message": "implicit autoref creates a reference to the dereference of a raw pointer",
                "spans": [
                  {
                    "byte_end": 89926,
                    "byte_start": 89897,
                    "column_end": 72,
                    "column_start": 43,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 2986,
                    "line_start": 2986,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 43,
                        "text": "                let extra = unsafe { &mut (*self.map).extra_values[idx] };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: implicit autoref creates a reference to the dereference of a raw pointer\n    --> src\\header\\map.rs:3009:35\n     |\n3009 |         let entry = unsafe { &mut (*self.map).entries[self.index] };\n     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: creating a reference requires the pointer target to be valid and imposes aliasing requirements\nhelp: try using a raw pointer method instead; or if this reference is intentional, make it explicit\n     |\n3009 |         let entry = unsafe { &mut (&mut (*self.map).entries)[self.index] };\n     |                                   +++++                    +\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "creating a reference requires the pointer target to be valid and imposes aliasing requirements",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using a raw pointer method instead; or if this reference is intentional, make it explicit",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 90567,
                        "byte_start": 90567,
                        "column_end": 35,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3009,
                        "line_start": 3009,
                        "suggested_replacement": "(&mut ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 35,
                            "text": "        let entry = unsafe { &mut (*self.map).entries[self.index] };"
                          }
                        ]
                      },
                      {
                        "byte_end": 90586,
                        "byte_start": 90586,
                        "column_end": 54,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3009,
                        "line_start": 3009,
                        "suggested_replacement": ")",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 54,
                            "text": "        let entry = unsafe { &mut (*self.map).entries[self.index] };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "dangerous_implicit_autorefs",
                  "explanation": null
                },
                "level": "error",
                "message": "implicit autoref creates a reference to the dereference of a raw pointer",
                "spans": [
                  {
                    "byte_end": 90598,
                    "byte_start": 90567,
                    "column_end": 66,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3009,
                    "line_start": 3009,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 35,
                        "text": "        let entry = unsafe { &mut (*self.map).entries[self.index] };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpepan8nnv/http-1.3.1#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpepan8nnv\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: implicit autoref creates a reference to the dereference of a raw pointer\n    --> src\\header\\map.rs:3018:43\n     |\n3018 |                 let extra = unsafe { &mut (*self.map).extra_values[idx] };\n     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: creating a reference requires the pointer target to be valid and imposes aliasing requirements\nhelp: try using a raw pointer method instead; or if this reference is intentional, make it explicit\n     |\n3018 |                 let extra = unsafe { &mut (&mut (*self.map).extra_values)[idx] };\n     |                                           +++++                         +\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "creating a reference requires the pointer target to be valid and imposes aliasing requirements",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using a raw pointer method instead; or if this reference is intentional, make it explicit",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 90856,
                        "byte_start": 90856,
                        "column_end": 43,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3018,
                        "line_start": 3018,
                        "suggested_replacement": "(&mut ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 43,
                            "text": "                let extra = unsafe { &mut (*self.map).extra_values[idx] };"
                          }
                        ]
                      },
                      {
                        "byte_end": 90880,
                        "byte_start": 90880,
                        "column_end": 67,
                        "column_start": 67,
                        "expansion": null,
                        "file_name": "src\\header\\map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3018,
                        "line_start": 3018,
                        "suggested_replacement": ")",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 67,
                            "highlight_start": 67,
                            "text": "                let extra = unsafe { &mut (*self.map).extra_values[idx] };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "dangerous_implicit_autorefs",
                  "explanation": null
                },
                "level": "error",
                "message": "implicit autoref creates a reference to the dereference of a raw pointer",
                "spans": [
                  {
                    "byte_end": 90885,
                    "byte_start": 90856,
                    "column_end": 72,
                    "column_start": 43,
                    "expansion": null,
                    "file_name": "src\\header\\map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3018,
                    "line_start": 3018,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 43,
                        "text": "                let extra = unsafe { &mut (*self.map).extra_values[idx] };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "build-finished",
              "success": false
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 29
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {}
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "http",
          "version": "1.3.1",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/http/latest/http/all.html \"show sidebar\")\n# Crate httpCopy item path\n[Settings](https://docs.rs/http/latest/settings.html)\n[Help](https://docs.rs/http/latest/help.html)\nSummary[Source](https://docs.rs/http/latest/src/http/lib.rs.html#1-210)\nExpand description\nA general purpose library of common HTTP types\nThis crate is a general purpose library for common types found when working with the HTTP protocol. You\u2019ll find [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\") and [`Response`](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\") types for working as either a client or a server as well as all of their components. Notably you\u2019ll find `Uri` for what a [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\") is requesting, a [`Method`](https://docs.rs/http/latest/http/method/struct.Method.html \"struct http::method::Method\") for how it\u2019s being requested, a [`StatusCode`](https://docs.rs/http/latest/http/status/struct.StatusCode.html \"struct http::status::StatusCode\") for what sort of response came back, a [`Version`](https://docs.rs/http/latest/http/version/struct.Version.html \"struct http::version::Version\") for how this was communicated, and [`HeaderName`](https://docs.rs/http/latest/http/header/struct.HeaderName.html \"struct http::header::HeaderName\")/[`HeaderValue`](https://docs.rs/http/latest/http/header/struct.HeaderValue.html \"struct http::header::HeaderValue\") definitions to get grouped in a [`HeaderMap`](https://docs.rs/http/latest/http/header/struct.HeaderMap.html \"struct http::header::HeaderMap\") to work with request/response headers.\nYou will notably _not_ find an implementation of sending requests or spinning up a server in this crate. It\u2019s intended that this crate is the \u201cstandard library\u201d for HTTP clients and servers without dictating any particular implementation.\n### [\u00a7](https://docs.rs/http/latest/http/#requests-and-responses)Requests and Responses\nPerhaps the main two types in this crate are the [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\") and [`Response`](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\") types. A [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\") could either be constructed to get sent off as a client or it can also be received to generate a [`Response`](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\") for a server. Similarly as a client a [`Response`](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\") is what you get after sending a [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\"), whereas on a server you\u2019ll be manufacturing a [`Response`](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\") to send back to the client.\nEach type has a number of accessors for the component fields. For as a server you might want to inspect a requests URI to dispatch it:\n```\nuse http::{Request, Response};\nfn response(req: Request<()>) -> http::Result<Response<()>> {\n  match req.uri().path() {\n    \"/\" => index(req),\n    \"/foo\" => foo(req),\n    \"/bar\" => bar(req),\n    _ => not_found(req),\n  }\n}\n```\n\nOn a [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\") you\u2019ll also find accessors like [`method`](https://docs.rs/http/latest/http/request/struct.Request.html#method.method \"method http::request::Request::method\") to return a [`Method`](https://docs.rs/http/latest/http/method/struct.Method.html \"struct http::method::Method\") and [`headers`](https://docs.rs/http/latest/http/request/struct.Request.html#method.method \"method http::request::Request::method\") to inspect the various headers. A [`Response`](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\") has similar methods for headers, the status code, etc.\nIn addition to getters, request/response types also have mutable accessors to edit the request/response:\n```\nuse http::{HeaderValue, Response, StatusCode};\nuse http::header::CONTENT_TYPE;\nfn add_server_headers<T>(response: &mut Response<T>) {\n  response.headers_mut()\n    .insert(CONTENT_TYPE, HeaderValue::from_static(\"text/html\"));\n  *response.status_mut() = StatusCode::OK;\n}\n```\n\nAnd finally, one of the most important aspects of requests/responses, the body! The [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\") and [`Response`](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\") types in this crate are _generic_ in what their body is. This allows downstream libraries to use different representations such as `Request<Vec<u8>>`, `Response<impl Read>`, `Request<impl Stream<Item = Vec<u8>, Error = _>>`, or even `Response<MyCustomType>` where the custom type was deserialized from JSON.\nThe body representation is intentionally flexible to give downstream libraries maximal flexibility in implementing the body as appropriate.\n### [\u00a7](https://docs.rs/http/latest/http/#http-headers)HTTP Headers\nAnother major piece of functionality in this library is HTTP header interpretation and generation. The `HeaderName` type serves as a way to define header _names_ , or what\u2019s to the left of the colon. A `HeaderValue` conversely is the header _value_ , or what\u2019s to the right of a colon.\nFor example, if you have an HTTP request that looks like:\n```\nGET /foo HTTP/1.1\nAccept: text/html\n```\n\nThen `\"Accept\"` is a [`HeaderName`](https://docs.rs/http/latest/http/header/struct.HeaderName.html \"struct http::header::HeaderName\") while `\"text/html\"` is a [`HeaderValue`](https://docs.rs/http/latest/http/header/struct.HeaderValue.html \"struct http::header::HeaderValue\"). Each of these is a dedicated type to allow for a number of interesting optimizations and to also encode the static guarantees of each type. For example a [`HeaderName`](https://docs.rs/http/latest/http/header/struct.HeaderName.html \"struct http::header::HeaderName\") is always a valid `&str`, but a [`HeaderValue`](https://docs.rs/http/latest/http/header/struct.HeaderValue.html \"struct http::header::HeaderValue\") may not be valid UTF-8.\nThe most common header names are already defined for you as constant values in the [`header`](https://docs.rs/http/latest/http/header/index.html \"mod http::header\") module of this crate. For example:\n```\nuse http::header::{self, HeaderName};\nlet name: HeaderName = header::ACCEPT;\nassert_eq!(name.as_str(), \"accept\");\n```\n\nYou can, however, also parse header names from strings:\n```\nuse http::header::{self, HeaderName};\nlet name = \"Accept\".parse::<HeaderName>().unwrap();\nassert_eq!(name, header::ACCEPT);\n```\n\nHeader values can be created from string literals through the [`from_static`](https://docs.rs/http/latest/http/header/struct.HeaderValue.html#method.from_static \"associated function http::header::HeaderValue::from_static\") function:\n```\nuse http::HeaderValue;\nlet value = HeaderValue::from_static(\"text/html\");\nassert_eq!(value.as_bytes(), b\"text/html\");\n```\n\nAnd header values can also be parsed like names:\n```\nuse http::HeaderValue;\nlet value = \"text/html\";\nlet value = value.parse::<HeaderValue>().unwrap();\n```\n\nMost HTTP requests and responses tend to come with more than one header, so it\u2019s not too useful to just work with names and values only! This crate also provides a [`HeaderMap`](https://docs.rs/http/latest/http/header/struct.HeaderMap.html \"struct http::header::HeaderMap\") type which is a specialized hash map for keys as [`HeaderName`](https://docs.rs/http/latest/http/header/struct.HeaderName.html \"struct http::header::HeaderName\") and generic values. This type, like header names, is optimized for common usage but should continue to scale with your needs over time.\n## [\u00a7](https://docs.rs/http/latest/http/#uris)URIs\nEach HTTP [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\") has an associated URI with it. This may just be a path like `/index.html` but it could also be an absolute URL such as `https://www.rust-lang.org/index.html`. A [`URI`](https://docs.rs/http/latest/http/uri/struct.Uri.html \"struct http::uri::Uri\") has a number of accessors to interpret it:\n```\nuse http::Uri;\nuse http::uri::Scheme;\nlet uri = \"https://www.rust-lang.org/index.html\".parse::<Uri>().unwrap();\nassert_eq!(uri.scheme(), Some(&Scheme::HTTPS));\nassert_eq!(uri.host(), Some(\"www.rust-lang.org\"));\nassert_eq!(uri.path(), \"/index.html\");\nassert_eq!(uri.query(), None);\n```\n\n## Re-exports[\u00a7](https://docs.rs/http/latest/http/#reexports)\n\n`pub use crate::header::HeaderMap[](https://docs.rs/http/latest/http/header/struct.HeaderMap.html \"struct http::header::HeaderMap\");`\n\n\n`pub use crate::header::HeaderName[](https://docs.rs/http/latest/http/header/struct.HeaderName.html \"struct http::header::HeaderName\");`\n\n\n`pub use crate::header::HeaderValue[](https://docs.rs/http/latest/http/header/struct.HeaderValue.html \"struct http::header::HeaderValue\");`\n\n\n`pub use crate::method::Method[](https://docs.rs/http/latest/http/method/struct.Method.html \"struct http::method::Method\");`\n\n\n`pub use crate::request::Request[](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\");`\n\n\n`pub use crate::response::Response[](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\");`\n\n\n`pub use crate::status::StatusCode[](https://docs.rs/http/latest/http/status/struct.StatusCode.html \"struct http::status::StatusCode\");`\n\n\n`pub use crate::uri::Uri[](https://docs.rs/http/latest/http/uri/struct.Uri.html \"struct http::uri::Uri\");`\n\n\n`pub use crate::version::Version[](https://docs.rs/http/latest/http/version/struct.Version.html \"struct http::version::Version\");`\n\n## Modules[\u00a7](https://docs.rs/http/latest/http/#modules)\n\n[header](https://docs.rs/http/latest/http/header/index.html \"mod http::header\")\n    HTTP header types\n\n[method](https://docs.rs/http/latest/http/method/index.html \"mod http::method\")\n    The HTTP request method\n\n[request](https://docs.rs/http/latest/http/request/index.html \"mod http::request\")\n    HTTP request types.\n\n[response](https://docs.rs/http/latest/http/response/index.html \"mod http::response\")\n    HTTP response types.\n\n[status](https://docs.rs/http/latest/http/status/index.html \"mod http::status\")\n    HTTP status codes\n\n[uri](https://docs.rs/http/latest/http/uri/index.html \"mod http::uri\")\n    URI component of request and response lines\n\n[version](https://docs.rs/http/latest/http/version/index.html \"mod http::version\")\n    HTTP version\n## Structs[\u00a7](https://docs.rs/http/latest/http/#structs)\n\n[Error](https://docs.rs/http/latest/http/struct.Error.html \"struct http::Error\")\n    A generic \u201cerror\u201d for HTTP connections\n\n[Extensions](https://docs.rs/http/latest/http/struct.Extensions.html \"struct http::Extensions\")\n    A type map of protocol extensions.\n## Type Aliases[\u00a7](https://docs.rs/http/latest/http/#types)\n\n[Result](https://docs.rs/http/latest/http/type.Result.html \"type http::Result\")\n    A `Result` typedef to use with the `http::Error` type\n",
            "markdown_with_citations": "[](https://docs.rs/http/latest/http/all.html \"show sidebar\")\n# Crate httpCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA general purpose library of common HTTP types\nThis crate is a general purpose library for common types found when working with the HTTP protocol. You\u2019ll find `Request`\u27e84\u27e9 and `Response`\u27e85\u27e9 types for working as either a client or a server as well as all of their components. Notably you\u2019ll find `Uri` for what a `Request`\u27e84\u27e9 is requesting, a `Method`\u27e86\u27e9 for how it\u2019s being requested, a `StatusCode`\u27e87\u27e9 for what sort of response came back, a `Version`\u27e88\u27e9 for how this was communicated, and `HeaderName`\u27e89\u27e9/`HeaderValue`\u27e810\u27e9 definitions to get grouped in a `HeaderMap`\u27e811\u27e9 to work with request/response headers.\nYou will notably _not_ find an implementation of sending requests or spinning up a server in this crate. It\u2019s intended that this crate is the \u201cstandard library\u201d for HTTP clients and servers without dictating any particular implementation.\n### \u00a7\u27e812\u27e9Requests and Responses\nPerhaps the main two types in this crate are the `Request`\u27e84\u27e9 and `Response`\u27e85\u27e9 types. A `Request`\u27e84\u27e9 could either be constructed to get sent off as a client or it can also be received to generate a `Response`\u27e85\u27e9 for a server. Similarly as a client a `Response`\u27e85\u27e9 is what you get after sending a `Request`\u27e84\u27e9, whereas on a server you\u2019ll be manufacturing a `Response`\u27e85\u27e9 to send back to the client.\nEach type has a number of accessors for the component fields. For as a server you might want to inspect a requests URI to dispatch it:\n```\nuse http::{Request, Response};\nfn response(req: Request<()>) -> http::Result<Response<()>> {\n  match req.uri().path() {\n    \"/\" => index(req),\n    \"/foo\" => foo(req),\n    \"/bar\" => bar(req),\n    _ => not_found(req),\n  }\n}\n```\n\nOn a `Request`\u27e84\u27e9 you\u2019ll also find accessors like `method`\u27e813\u27e9 to return a `Method`\u27e86\u27e9 and `headers`\u27e813\u27e9 to inspect the various headers. A `Response`\u27e85\u27e9 has similar methods for headers, the status code, etc.\nIn addition to getters, request/response types also have mutable accessors to edit the request/response:\n```\nuse http::{HeaderValue, Response, StatusCode};\nuse http::header::CONTENT_TYPE;\nfn add_server_headers<T>(response: &mut Response<T>) {\n  response.headers_mut()\n    .insert(CONTENT_TYPE, HeaderValue::from_static(\"text/html\"));\n  *response.status_mut() = StatusCode::OK;\n}\n```\n\nAnd finally, one of the most important aspects of requests/responses, the body! The `Request`\u27e84\u27e9 and `Response`\u27e85\u27e9 types in this crate are _generic_ in what their body is. This allows downstream libraries to use different representations such as `Request<Vec<u8>>`, `Response<impl Read>`, `Request<impl Stream<Item = Vec<u8>, Error = _>>`, or even `Response<MyCustomType>` where the custom type was deserialized from JSON.\nThe body representation is intentionally flexible to give downstream libraries maximal flexibility in implementing the body as appropriate.\n### \u00a7\u27e814\u27e9HTTP Headers\nAnother major piece of functionality in this library is HTTP header interpretation and generation. The `HeaderName` type serves as a way to define header _names_ , or what\u2019s to the left of the colon. A `HeaderValue` conversely is the header _value_ , or what\u2019s to the right of a colon.\nFor example, if you have an HTTP request that looks like:\n```\nGET /foo HTTP/1.1\nAccept: text/html\n```\n\nThen `\"Accept\"` is a `HeaderName`\u27e89\u27e9 while `\"text/html\"` is a `HeaderValue`\u27e810\u27e9. Each of these is a dedicated type to allow for a number of interesting optimizations and to also encode the static guarantees of each type. For example a `HeaderName`\u27e89\u27e9 is always a valid `&str`, but a `HeaderValue`\u27e810\u27e9 may not be valid UTF-8.\nThe most common header names are already defined for you as constant values in the `header`\u27e815\u27e9 module of this crate. For example:\n```\nuse http::header::{self, HeaderName};\nlet name: HeaderName = header::ACCEPT;\nassert_eq!(name.as_str(), \"accept\");\n```\n\nYou can, however, also parse header names from strings:\n```\nuse http::header::{self, HeaderName};\nlet name = \"Accept\".parse::<HeaderName>().unwrap();\nassert_eq!(name, header::ACCEPT);\n```\n\nHeader values can be created from string literals through the `from_static`\u27e816\u27e9 function:\n```\nuse http::HeaderValue;\nlet value = HeaderValue::from_static(\"text/html\");\nassert_eq!(value.as_bytes(), b\"text/html\");\n```\n\nAnd header values can also be parsed like names:\n```\nuse http::HeaderValue;\nlet value = \"text/html\";\nlet value = value.parse::<HeaderValue>().unwrap();\n```\n\nMost HTTP requests and responses tend to come with more than one header, so it\u2019s not too useful to just work with names and values only! This crate also provides a `HeaderMap`\u27e811\u27e9 type which is a specialized hash map for keys as `HeaderName`\u27e89\u27e9 and generic values. This type, like header names, is optimized for common usage but should continue to scale with your needs over time.\n## \u00a7\u27e817\u27e9URIs\nEach HTTP `Request`\u27e84\u27e9 has an associated URI with it. This may just be a path like `/index.html` but it could also be an absolute URL such as `https://www.rust-lang.org/index.html`. A `URI`\u27e818\u27e9 has a number of accessors to interpret it:\n```\nuse http::Uri;\nuse http::uri::Scheme;\nlet uri = \"https://www.rust-lang.org/index.html\".parse::<Uri>().unwrap();\nassert_eq!(uri.scheme(), Some(&Scheme::HTTPS));\nassert_eq!(uri.host(), Some(\"www.rust-lang.org\"));\nassert_eq!(uri.path(), \"/index.html\");\nassert_eq!(uri.query(), None);\n```\n\n## Re-exports\u00a7\u27e819\u27e9\n\n`pub use crate::header::HeaderMap[](https://docs.rs/http/latest/http/header/struct.HeaderMap.html \"struct http::header::HeaderMap\");`\n\n\n`pub use crate::header::HeaderName[](https://docs.rs/http/latest/http/header/struct.HeaderName.html \"struct http::header::HeaderName\");`\n\n\n`pub use crate::header::HeaderValue[](https://docs.rs/http/latest/http/header/struct.HeaderValue.html \"struct http::header::HeaderValue\");`\n\n\n`pub use crate::method::Method[](https://docs.rs/http/latest/http/method/struct.Method.html \"struct http::method::Method\");`\n\n\n`pub use crate::request::Request[](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\");`\n\n\n`pub use crate::response::Response[](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\");`\n\n\n`pub use crate::status::StatusCode[](https://docs.rs/http/latest/http/status/struct.StatusCode.html \"struct http::status::StatusCode\");`\n\n\n`pub use crate::uri::Uri[](https://docs.rs/http/latest/http/uri/struct.Uri.html \"struct http::uri::Uri\");`\n\n\n`pub use crate::version::Version[](https://docs.rs/http/latest/http/version/struct.Version.html \"struct http::version::Version\");`\n\n## Modules\u00a7\u27e820\u27e9\n\nheader\u27e815\u27e9\n    HTTP header types\n\nmethod\u27e821\u27e9\n    The HTTP request method\n\nrequest\u27e822\u27e9\n    HTTP request types.\n\nresponse\u27e823\u27e9\n    HTTP response types.\n\nstatus\u27e824\u27e9\n    HTTP status codes\n\nuri\u27e825\u27e9\n    URI component of request and response lines\n\nversion\u27e826\u27e9\n    HTTP version\n## Structs\u00a7\u27e827\u27e9\n\nError\u27e828\u27e9\n    A generic \u201cerror\u201d for HTTP connections\n\nExtensions\u27e829\u27e9\n    A type map of protocol extensions.\n## Type Aliases\u00a7\u27e830\u27e9\n\nResult\u27e831\u27e9\n    A `Result` typedef to use with the `http::Error` type\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/http/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/http/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/http/latest/src/http/lib.rs.html#1-210: Source\n\u27e84\u27e9 https://docs.rs/http/latest/http/request/struct.Request.html: struct http::request::Request - `Request`\n\u27e85\u27e9 https://docs.rs/http/latest/http/response/struct.Response.html: struct http::response::Response - `Response`\n\u27e86\u27e9 https://docs.rs/http/latest/http/method/struct.Method.html: struct http::method::Method - `Method`\n\u27e87\u27e9 https://docs.rs/http/latest/http/status/struct.StatusCode.html: struct http::status::StatusCode - `StatusCode`\n\u27e88\u27e9 https://docs.rs/http/latest/http/version/struct.Version.html: struct http::version::Version - `Version`\n\u27e89\u27e9 https://docs.rs/http/latest/http/header/struct.HeaderName.html: struct http::header::HeaderName - `HeaderName`\n\u27e810\u27e9 https://docs.rs/http/latest/http/header/struct.HeaderValue.html: struct http::header::HeaderValue - `HeaderValue`\n\u27e811\u27e9 https://docs.rs/http/latest/http/header/struct.HeaderMap.html: struct http::header::HeaderMap - `HeaderMap`\n\u27e812\u27e9 https://docs.rs/http/latest/http/#requests-and-responses: \u00a7\n\u27e813\u27e9 https://docs.rs/http/latest/http/request/struct.Request.html#method.method: method http::request::Request::method - `method`\n\u27e814\u27e9 https://docs.rs/http/latest/http/#http-headers: \u00a7\n\u27e815\u27e9 https://docs.rs/http/latest/http/header/index.html: mod http::header - `header`\n\u27e816\u27e9 https://docs.rs/http/latest/http/header/struct.HeaderValue.html#method.from_static: associated function http::header::HeaderValue::from_static - `from_static`\n\u27e817\u27e9 https://docs.rs/http/latest/http/#uris: \u00a7\n\u27e818\u27e9 https://docs.rs/http/latest/http/uri/struct.Uri.html: struct http::uri::Uri - `URI`\n\u27e819\u27e9 https://docs.rs/http/latest/http/#reexports: \u00a7\n\u27e820\u27e9 https://docs.rs/http/latest/http/#modules: \u00a7\n\u27e821\u27e9 https://docs.rs/http/latest/http/method/index.html: mod http::method - method\n\u27e822\u27e9 https://docs.rs/http/latest/http/request/index.html: mod http::request - request\n\u27e823\u27e9 https://docs.rs/http/latest/http/response/index.html: mod http::response - response\n\u27e824\u27e9 https://docs.rs/http/latest/http/status/index.html: mod http::status - status\n\u27e825\u27e9 https://docs.rs/http/latest/http/uri/index.html: mod http::uri - uri\n\u27e826\u27e9 https://docs.rs/http/latest/http/version/index.html: mod http::version - version\n\u27e827\u27e9 https://docs.rs/http/latest/http/#structs: \u00a7\n\u27e828\u27e9 https://docs.rs/http/latest/http/struct.Error.html: struct http::Error - Error\n\u27e829\u27e9 https://docs.rs/http/latest/http/struct.Extensions.html: struct http::Extensions - Extensions\n\u27e830\u27e9 https://docs.rs/http/latest/http/#types: \u00a7\n\u27e831\u27e9 https://docs.rs/http/latest/http/type.Result.html: type http::Result - Result\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "http",
          "version": "1.3.1",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/http/latest/http/all.html \"show sidebar\")\n# Crate httpCopy item path\n[Settings](https://docs.rs/http/latest/settings.html)\n[Help](https://docs.rs/http/latest/help.html)\nSummary[Source](https://docs.rs/http/latest/src/http/lib.rs.html#1-210)\nExpand description\nA general purpose library of common HTTP types\nThis crate is a general purpose library for common types found when working with the HTTP protocol. You\u2019ll find [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\") and [`Response`](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\") types for working as either a client or a server as well as all of their components. Notably you\u2019ll find `Uri` for what a [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\") is requesting, a [`Method`](https://docs.rs/http/latest/http/method/struct.Method.html \"struct http::method::Method\") for how it\u2019s being requested, a [`StatusCode`](https://docs.rs/http/latest/http/status/struct.StatusCode.html \"struct http::status::StatusCode\") for what sort of response came back, a [`Version`](https://docs.rs/http/latest/http/version/struct.Version.html \"struct http::version::Version\") for how this was communicated, and [`HeaderName`](https://docs.rs/http/latest/http/header/struct.HeaderName.html \"struct http::header::HeaderName\")/[`HeaderValue`](https://docs.rs/http/latest/http/header/struct.HeaderValue.html \"struct http::header::HeaderValue\") definitions to get grouped in a [`HeaderMap`](https://docs.rs/http/latest/http/header/struct.HeaderMap.html \"struct http::header::HeaderMap\") to work with request/response headers.\nYou will notably _not_ find an implementation of sending requests or spinning up a server in this crate. It\u2019s intended that this crate is the \u201cstandard library\u201d for HTTP clients and servers without dictating any particular implementation.\n### [\u00a7](https://docs.rs/http/latest/http/#requests-and-responses)Requests and Responses\nPerhaps the main two types in this crate are the [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\") and [`Response`](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\") types. A [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\") could either be constructed to get sent off as a client or it can also be received to generate a [`Response`](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\") for a server. Similarly as a client a [`Response`](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\") is what you get after sending a [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\"), whereas on a server you\u2019ll be manufacturing a [`Response`](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\") to send back to the client.\nEach type has a number of accessors for the component fields. For as a server you might want to inspect a requests URI to dispatch it:\n```\nuse http::{Request, Response};\nfn response(req: Request<()>) -> http::Result<Response<()>> {\n  match req.uri().path() {\n    \"/\" => index(req),\n    \"/foo\" => foo(req),\n    \"/bar\" => bar(req),\n    _ => not_found(req),\n  }\n}\n```\n\nOn a [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\") you\u2019ll also find accessors like [`method`](https://docs.rs/http/latest/http/request/struct.Request.html#method.method \"method http::request::Request::method\") to return a [`Method`](https://docs.rs/http/latest/http/method/struct.Method.html \"struct http::method::Method\") and [`headers`](https://docs.rs/http/latest/http/request/struct.Request.html#method.method \"method http::request::Request::method\") to inspect the various headers. A [`Response`](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\") has similar methods for headers, the status code, etc.\nIn addition to getters, request/response types also have mutable accessors to edit the request/response:\n```\nuse http::{HeaderValue, Response, StatusCode};\nuse http::header::CONTENT_TYPE;\nfn add_server_headers<T>(response: &mut Response<T>) {\n  response.headers_mut()\n    .insert(CONTENT_TYPE, HeaderValue::from_static(\"text/html\"));\n  *response.status_mut() = StatusCode::OK;\n}\n```\n\nAnd finally, one of the most important aspects of requests/responses, the body! The [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\") and [`Response`](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\") types in this crate are _generic_ in what their body is. This allows downstream libraries to use different representations such as `Request<Vec<u8>>`, `Response<impl Read>`, `Request<impl Stream<Item = Vec<u8>, Error = _>>`, or even `Response<MyCustomType>` where the custom type was deserialized from JSON.\nThe body representation is intentionally flexible to give downstream libraries maximal flexibility in implementing the body as appropriate.\n### [\u00a7](https://docs.rs/http/latest/http/#http-headers)HTTP Headers\nAnother major piece of functionality in this library is HTTP header interpretation and generation. The `HeaderName` type serves as a way to define header _names_ , or what\u2019s to the left of the colon. A `HeaderValue` conversely is the header _value_ , or what\u2019s to the right of a colon.\nFor example, if you have an HTTP request that looks like:\n```\nGET /foo HTTP/1.1\nAccept: text/html\n```\n\nThen `\"Accept\"` is a [`HeaderName`](https://docs.rs/http/latest/http/header/struct.HeaderName.html \"struct http::header::HeaderName\") while `\"text/html\"` is a [`HeaderValue`](https://docs.rs/http/latest/http/header/struct.HeaderValue.html \"struct http::header::HeaderValue\"). Each of these is a dedicated type to allow for a number of interesting optimizations and to also encode the static guarantees of each type. For example a [`HeaderName`](https://docs.rs/http/latest/http/header/struct.HeaderName.html \"struct http::header::HeaderName\") is always a valid `&str`, but a [`HeaderValue`](https://docs.rs/http/latest/http/header/struct.HeaderValue.html \"struct http::header::HeaderValue\") may not be valid UTF-8.\nThe most common header names are already defined for you as constant values in the [`header`](https://docs.rs/http/latest/http/header/index.html \"mod http::header\") module of this crate. For example:\n```\nuse http::header::{self, HeaderName};\nlet name: HeaderName = header::ACCEPT;\nassert_eq!(name.as_str(), \"accept\");\n```\n\nYou can, however, also parse header names from strings:\n```\nuse http::header::{self, HeaderName};\nlet name = \"Accept\".parse::<HeaderName>().unwrap();\nassert_eq!(name, header::ACCEPT);\n```\n\nHeader values can be created from string literals through the [`from_static`](https://docs.rs/http/latest/http/header/struct.HeaderValue.html#method.from_static \"associated function http::header::HeaderValue::from_static\") function:\n```\nuse http::HeaderValue;\nlet value = HeaderValue::from_static(\"text/html\");\nassert_eq!(value.as_bytes(), b\"text/html\");\n```\n\nAnd header values can also be parsed like names:\n```\nuse http::HeaderValue;\nlet value = \"text/html\";\nlet value = value.parse::<HeaderValue>().unwrap();\n```\n\nMost HTTP requests and responses tend to come with more than one header, so it\u2019s not too useful to just work with names and values only! This crate also provides a [`HeaderMap`](https://docs.rs/http/latest/http/header/struct.HeaderMap.html \"struct http::header::HeaderMap\") type which is a specialized hash map for keys as [`HeaderName`](https://docs.rs/http/latest/http/header/struct.HeaderName.html \"struct http::header::HeaderName\") and generic values. This type, like header names, is optimized for common usage but should continue to scale with your needs over time.\n## [\u00a7](https://docs.rs/http/latest/http/#uris)URIs\nEach HTTP [`Request`](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\") has an associated URI with it. This may just be a path like `/index.html` but it could also be an absolute URL such as `https://www.rust-lang.org/index.html`. A [`URI`](https://docs.rs/http/latest/http/uri/struct.Uri.html \"struct http::uri::Uri\") has a number of accessors to interpret it:\n```\nuse http::Uri;\nuse http::uri::Scheme;\nlet uri = \"https://www.rust-lang.org/index.html\".parse::<Uri>().unwrap();\nassert_eq!(uri.scheme(), Some(&Scheme::HTTPS));\nassert_eq!(uri.host(), Some(\"www.rust-lang.org\"));\nassert_eq!(uri.path(), \"/index.html\");\nassert_eq!(uri.query(), None);\n```\n\n## Re-exports[\u00a7](https://docs.rs/http/latest/http/#reexports)\n\n`pub use crate::header::HeaderMap[](https://docs.rs/http/latest/http/header/struct.HeaderMap.html \"struct http::header::HeaderMap\");`\n\n\n`pub use crate::header::HeaderName[](https://docs.rs/http/latest/http/header/struct.HeaderName.html \"struct http::header::HeaderName\");`\n\n\n`pub use crate::header::HeaderValue[](https://docs.rs/http/latest/http/header/struct.HeaderValue.html \"struct http::header::HeaderValue\");`\n\n\n`pub use crate::method::Method[](https://docs.rs/http/latest/http/method/struct.Method.html \"struct http::method::Method\");`\n\n\n`pub use crate::request::Request[](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\");`\n\n\n`pub use crate::response::Response[](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\");`\n\n\n`pub use crate::status::StatusCode[](https://docs.rs/http/latest/http/status/struct.StatusCode.html \"struct http::status::StatusCode\");`\n\n\n`pub use crate::uri::Uri[](https://docs.rs/http/latest/http/uri/struct.Uri.html \"struct http::uri::Uri\");`\n\n\n`pub use crate::version::Version[](https://docs.rs/http/latest/http/version/struct.Version.html \"struct http::version::Version\");`\n\n## Modules[\u00a7](https://docs.rs/http/latest/http/#modules)\n\n[header](https://docs.rs/http/latest/http/header/index.html \"mod http::header\")\n    HTTP header types\n\n[method](https://docs.rs/http/latest/http/method/index.html \"mod http::method\")\n    The HTTP request method\n\n[request](https://docs.rs/http/latest/http/request/index.html \"mod http::request\")\n    HTTP request types.\n\n[response](https://docs.rs/http/latest/http/response/index.html \"mod http::response\")\n    HTTP response types.\n\n[status](https://docs.rs/http/latest/http/status/index.html \"mod http::status\")\n    HTTP status codes\n\n[uri](https://docs.rs/http/latest/http/uri/index.html \"mod http::uri\")\n    URI component of request and response lines\n\n[version](https://docs.rs/http/latest/http/version/index.html \"mod http::version\")\n    HTTP version\n## Structs[\u00a7](https://docs.rs/http/latest/http/#structs)\n\n[Error](https://docs.rs/http/latest/http/struct.Error.html \"struct http::Error\")\n    A generic \u201cerror\u201d for HTTP connections\n\n[Extensions](https://docs.rs/http/latest/http/struct.Extensions.html \"struct http::Extensions\")\n    A type map of protocol extensions.\n## Type Aliases[\u00a7](https://docs.rs/http/latest/http/#types)\n\n[Result](https://docs.rs/http/latest/http/type.Result.html \"type http::Result\")\n    A `Result` typedef to use with the `http::Error` type\n",
            "markdown_with_citations": "[](https://docs.rs/http/latest/http/all.html \"show sidebar\")\n# Crate httpCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA general purpose library of common HTTP types\nThis crate is a general purpose library for common types found when working with the HTTP protocol. You\u2019ll find `Request`\u27e84\u27e9 and `Response`\u27e85\u27e9 types for working as either a client or a server as well as all of their components. Notably you\u2019ll find `Uri` for what a `Request`\u27e84\u27e9 is requesting, a `Method`\u27e86\u27e9 for how it\u2019s being requested, a `StatusCode`\u27e87\u27e9 for what sort of response came back, a `Version`\u27e88\u27e9 for how this was communicated, and `HeaderName`\u27e89\u27e9/`HeaderValue`\u27e810\u27e9 definitions to get grouped in a `HeaderMap`\u27e811\u27e9 to work with request/response headers.\nYou will notably _not_ find an implementation of sending requests or spinning up a server in this crate. It\u2019s intended that this crate is the \u201cstandard library\u201d for HTTP clients and servers without dictating any particular implementation.\n### \u00a7\u27e812\u27e9Requests and Responses\nPerhaps the main two types in this crate are the `Request`\u27e84\u27e9 and `Response`\u27e85\u27e9 types. A `Request`\u27e84\u27e9 could either be constructed to get sent off as a client or it can also be received to generate a `Response`\u27e85\u27e9 for a server. Similarly as a client a `Response`\u27e85\u27e9 is what you get after sending a `Request`\u27e84\u27e9, whereas on a server you\u2019ll be manufacturing a `Response`\u27e85\u27e9 to send back to the client.\nEach type has a number of accessors for the component fields. For as a server you might want to inspect a requests URI to dispatch it:\n```\nuse http::{Request, Response};\nfn response(req: Request<()>) -> http::Result<Response<()>> {\n  match req.uri().path() {\n    \"/\" => index(req),\n    \"/foo\" => foo(req),\n    \"/bar\" => bar(req),\n    _ => not_found(req),\n  }\n}\n```\n\nOn a `Request`\u27e84\u27e9 you\u2019ll also find accessors like `method`\u27e813\u27e9 to return a `Method`\u27e86\u27e9 and `headers`\u27e813\u27e9 to inspect the various headers. A `Response`\u27e85\u27e9 has similar methods for headers, the status code, etc.\nIn addition to getters, request/response types also have mutable accessors to edit the request/response:\n```\nuse http::{HeaderValue, Response, StatusCode};\nuse http::header::CONTENT_TYPE;\nfn add_server_headers<T>(response: &mut Response<T>) {\n  response.headers_mut()\n    .insert(CONTENT_TYPE, HeaderValue::from_static(\"text/html\"));\n  *response.status_mut() = StatusCode::OK;\n}\n```\n\nAnd finally, one of the most important aspects of requests/responses, the body! The `Request`\u27e84\u27e9 and `Response`\u27e85\u27e9 types in this crate are _generic_ in what their body is. This allows downstream libraries to use different representations such as `Request<Vec<u8>>`, `Response<impl Read>`, `Request<impl Stream<Item = Vec<u8>, Error = _>>`, or even `Response<MyCustomType>` where the custom type was deserialized from JSON.\nThe body representation is intentionally flexible to give downstream libraries maximal flexibility in implementing the body as appropriate.\n### \u00a7\u27e814\u27e9HTTP Headers\nAnother major piece of functionality in this library is HTTP header interpretation and generation. The `HeaderName` type serves as a way to define header _names_ , or what\u2019s to the left of the colon. A `HeaderValue` conversely is the header _value_ , or what\u2019s to the right of a colon.\nFor example, if you have an HTTP request that looks like:\n```\nGET /foo HTTP/1.1\nAccept: text/html\n```\n\nThen `\"Accept\"` is a `HeaderName`\u27e89\u27e9 while `\"text/html\"` is a `HeaderValue`\u27e810\u27e9. Each of these is a dedicated type to allow for a number of interesting optimizations and to also encode the static guarantees of each type. For example a `HeaderName`\u27e89\u27e9 is always a valid `&str`, but a `HeaderValue`\u27e810\u27e9 may not be valid UTF-8.\nThe most common header names are already defined for you as constant values in the `header`\u27e815\u27e9 module of this crate. For example:\n```\nuse http::header::{self, HeaderName};\nlet name: HeaderName = header::ACCEPT;\nassert_eq!(name.as_str(), \"accept\");\n```\n\nYou can, however, also parse header names from strings:\n```\nuse http::header::{self, HeaderName};\nlet name = \"Accept\".parse::<HeaderName>().unwrap();\nassert_eq!(name, header::ACCEPT);\n```\n\nHeader values can be created from string literals through the `from_static`\u27e816\u27e9 function:\n```\nuse http::HeaderValue;\nlet value = HeaderValue::from_static(\"text/html\");\nassert_eq!(value.as_bytes(), b\"text/html\");\n```\n\nAnd header values can also be parsed like names:\n```\nuse http::HeaderValue;\nlet value = \"text/html\";\nlet value = value.parse::<HeaderValue>().unwrap();\n```\n\nMost HTTP requests and responses tend to come with more than one header, so it\u2019s not too useful to just work with names and values only! This crate also provides a `HeaderMap`\u27e811\u27e9 type which is a specialized hash map for keys as `HeaderName`\u27e89\u27e9 and generic values. This type, like header names, is optimized for common usage but should continue to scale with your needs over time.\n## \u00a7\u27e817\u27e9URIs\nEach HTTP `Request`\u27e84\u27e9 has an associated URI with it. This may just be a path like `/index.html` but it could also be an absolute URL such as `https://www.rust-lang.org/index.html`. A `URI`\u27e818\u27e9 has a number of accessors to interpret it:\n```\nuse http::Uri;\nuse http::uri::Scheme;\nlet uri = \"https://www.rust-lang.org/index.html\".parse::<Uri>().unwrap();\nassert_eq!(uri.scheme(), Some(&Scheme::HTTPS));\nassert_eq!(uri.host(), Some(\"www.rust-lang.org\"));\nassert_eq!(uri.path(), \"/index.html\");\nassert_eq!(uri.query(), None);\n```\n\n## Re-exports\u00a7\u27e819\u27e9\n\n`pub use crate::header::HeaderMap[](https://docs.rs/http/latest/http/header/struct.HeaderMap.html \"struct http::header::HeaderMap\");`\n\n\n`pub use crate::header::HeaderName[](https://docs.rs/http/latest/http/header/struct.HeaderName.html \"struct http::header::HeaderName\");`\n\n\n`pub use crate::header::HeaderValue[](https://docs.rs/http/latest/http/header/struct.HeaderValue.html \"struct http::header::HeaderValue\");`\n\n\n`pub use crate::method::Method[](https://docs.rs/http/latest/http/method/struct.Method.html \"struct http::method::Method\");`\n\n\n`pub use crate::request::Request[](https://docs.rs/http/latest/http/request/struct.Request.html \"struct http::request::Request\");`\n\n\n`pub use crate::response::Response[](https://docs.rs/http/latest/http/response/struct.Response.html \"struct http::response::Response\");`\n\n\n`pub use crate::status::StatusCode[](https://docs.rs/http/latest/http/status/struct.StatusCode.html \"struct http::status::StatusCode\");`\n\n\n`pub use crate::uri::Uri[](https://docs.rs/http/latest/http/uri/struct.Uri.html \"struct http::uri::Uri\");`\n\n\n`pub use crate::version::Version[](https://docs.rs/http/latest/http/version/struct.Version.html \"struct http::version::Version\");`\n\n## Modules\u00a7\u27e820\u27e9\n\nheader\u27e815\u27e9\n    HTTP header types\n\nmethod\u27e821\u27e9\n    The HTTP request method\n\nrequest\u27e822\u27e9\n    HTTP request types.\n\nresponse\u27e823\u27e9\n    HTTP response types.\n\nstatus\u27e824\u27e9\n    HTTP status codes\n\nuri\u27e825\u27e9\n    URI component of request and response lines\n\nversion\u27e826\u27e9\n    HTTP version\n## Structs\u00a7\u27e827\u27e9\n\nError\u27e828\u27e9\n    A generic \u201cerror\u201d for HTTP connections\n\nExtensions\u27e829\u27e9\n    A type map of protocol extensions.\n## Type Aliases\u00a7\u27e830\u27e9\n\nResult\u27e831\u27e9\n    A `Result` typedef to use with the `http::Error` type\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/http/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/http/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/http/latest/src/http/lib.rs.html#1-210: Source\n\u27e84\u27e9 https://docs.rs/http/latest/http/request/struct.Request.html: struct http::request::Request - `Request`\n\u27e85\u27e9 https://docs.rs/http/latest/http/response/struct.Response.html: struct http::response::Response - `Response`\n\u27e86\u27e9 https://docs.rs/http/latest/http/method/struct.Method.html: struct http::method::Method - `Method`\n\u27e87\u27e9 https://docs.rs/http/latest/http/status/struct.StatusCode.html: struct http::status::StatusCode - `StatusCode`\n\u27e88\u27e9 https://docs.rs/http/latest/http/version/struct.Version.html: struct http::version::Version - `Version`\n\u27e89\u27e9 https://docs.rs/http/latest/http/header/struct.HeaderName.html: struct http::header::HeaderName - `HeaderName`\n\u27e810\u27e9 https://docs.rs/http/latest/http/header/struct.HeaderValue.html: struct http::header::HeaderValue - `HeaderValue`\n\u27e811\u27e9 https://docs.rs/http/latest/http/header/struct.HeaderMap.html: struct http::header::HeaderMap - `HeaderMap`\n\u27e812\u27e9 https://docs.rs/http/latest/http/#requests-and-responses: \u00a7\n\u27e813\u27e9 https://docs.rs/http/latest/http/request/struct.Request.html#method.method: method http::request::Request::method - `method`\n\u27e814\u27e9 https://docs.rs/http/latest/http/#http-headers: \u00a7\n\u27e815\u27e9 https://docs.rs/http/latest/http/header/index.html: mod http::header - `header`\n\u27e816\u27e9 https://docs.rs/http/latest/http/header/struct.HeaderValue.html#method.from_static: associated function http::header::HeaderValue::from_static - `from_static`\n\u27e817\u27e9 https://docs.rs/http/latest/http/#uris: \u00a7\n\u27e818\u27e9 https://docs.rs/http/latest/http/uri/struct.Uri.html: struct http::uri::Uri - `URI`\n\u27e819\u27e9 https://docs.rs/http/latest/http/#reexports: \u00a7\n\u27e820\u27e9 https://docs.rs/http/latest/http/#modules: \u00a7\n\u27e821\u27e9 https://docs.rs/http/latest/http/method/index.html: mod http::method - method\n\u27e822\u27e9 https://docs.rs/http/latest/http/request/index.html: mod http::request - request\n\u27e823\u27e9 https://docs.rs/http/latest/http/response/index.html: mod http::response - response\n\u27e824\u27e9 https://docs.rs/http/latest/http/status/index.html: mod http::status - status\n\u27e825\u27e9 https://docs.rs/http/latest/http/uri/index.html: mod http::uri - uri\n\u27e826\u27e9 https://docs.rs/http/latest/http/version/index.html: mod http::version - version\n\u27e827\u27e9 https://docs.rs/http/latest/http/#structs: \u00a7\n\u27e828\u27e9 https://docs.rs/http/latest/http/struct.Error.html: struct http::Error - Error\n\u27e829\u27e9 https://docs.rs/http/latest/http/struct.Extensions.html: struct http::Extensions - Extensions\n\u27e830\u27e9 https://docs.rs/http/latest/http/#types: \u00a7\n\u27e831\u27e9 https://docs.rs/http/latest/http/type.Result.html: type http::Result - Result\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `http` crate provides a foundational library for working with HTTP types, including `Request` and `Response` structures, as well as components like `Uri`, `Method`, `StatusCode`, `Version`, and headers (`HeaderName`, `HeaderValue`, `HeaderMap`). It offers flexible, generic body representations and robust tools for parsing, constructing, and manipulating HTTP headers. Designed as a \"standard library\" for HTTP, it does not implement request sending or server creation, leaving those to downstream libraries.",
          "feature_summary": null,
          "use_case": "Web Framework",
          "score": 8.0,
          "factual_counterfactual": "### Pair 1: Request and Response Types  \n\u2705 **Factual**: The `http` crate provides `Request` and `Response` types that are generic over their body, allowing users to define custom representations for the request/response payloads, such as `Vec<u8>`, `impl Read`, or custom deserialized types.  \n\u274c **Counterfactual**: The `http` crate enforces a specific body type for `Request` and `Response`, requiring all payloads to be represented as `Vec<u8>` for compatibility.  \n\n---\n\n### Pair 2: HTTP Header Handling  \n\u2705 **Factual**: The `http` crate includes types like `HeaderName` and `HeaderValue` to facilitate the creation and manipulation of HTTP headers, enabling users to construct and interpret headers in a structured manner.  \n\u274c **Counterfactual**: The `http` crate does not support working with HTTP headers directly; users must manually parse header strings and manage their formatting.  \n\n---\n\n### Pair 3: Role in HTTP Communication  \n\u2705 **Factual**: The `http` crate is designed as a \"standard library\" for HTTP types, providing foundational components like `Uri`, `Method`, and `StatusCode` without implementing request-sending or server-spinning functionality.  \n\u274c **Counterfactual**: The `http` crate includes built-in functionality for sending HTTP requests and hosting HTTP servers, making it a complete solution for HTTP communication.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-e0603c49-2d4bcfec-1751261657",
      "timestamp": "2025-06-30T05:34:17.968364+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]