[
  {
    "execution_id": "exec-0f561137-3bc8911d-1751263049",
    "timestamp": "2025-06-30T05:57:29.085824+00:00",
    "sacred_chain": {
      "input_data": "dashmap",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'dashmap' -> 'dashmap'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "dashmap",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/dashmap",
            "title": "dashmap v6.1.0",
            "content": {
              "raw_markdown": "#  dashmap v6.1.0\nBlazing fast concurrent HashMap for Rust. \n  * [ #atomic ](https://crates.io/keywords/atomic)\n  * [ #concurrent ](https://crates.io/keywords/concurrent)\n  * [ #hashmap ](https://crates.io/keywords/hashmap)\n\n\n  * [ Readme ](https://crates.io/crates/dashmap)\n  * [ 84 Versions ](https://crates.io/crates/dashmap/versions)\n  * [ Dependencies ](https://crates.io/crates/dashmap/dependencies)\n  * [ Dependents ](https://crates.io/crates/dashmap/reverse_dependencies)\n\n\n## Metadata\n10 months ago \nv1.65.0 \n[ MIT ](https://choosealicense.com/licenses/mit)\n24.2 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add dashmap\nOr add the following line to your Cargo.toml:\ndashmap = \"6.1.0\"\n## Documentation\n[ docs.rs/dashmap ](https://docs.rs/dashmap)\n## Repository\n[ github.com/xacrimon/dashmap ](https://github.com/xacrimon/dashmap)\n## Owners\n## Categories\n  * [Algorithms](https://crates.io/categories/algorithms)\n  * [Concurrency](https://crates.io/categories/concurrency)\n  * [Data structures](https://crates.io/categories/data-structures)\n\n\n[ Report crate ](https://crates.io/support?crate=dashmap&inquire=crate-violation)\n### Stats Overview\n130,859,973 Downloads all time\n84 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  dashmap v6.1.0\nBlazing fast concurrent HashMap for Rust. \n  *  #atomic \u27e81\u27e9\n  *  #concurrent \u27e82\u27e9\n  *  #hashmap \u27e83\u27e9\n\n\n  *  Readme \u27e84\u27e9\n  *  84 Versions \u27e85\u27e9\n  *  Dependencies \u27e86\u27e9\n  *  Dependents \u27e87\u27e9\n\n\n## Metadata\n10 months ago \nv1.65.0 \n MIT \u27e88\u27e9\n24.2 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add dashmap\nOr add the following line to your Cargo.toml:\ndashmap = \"6.1.0\"\n## Documentation\n docs.rs/dashmap \u27e89\u27e9\n## Repository\n github.com/xacrimon/dashmap \u27e810\u27e9\n## Owners\n## Categories\n  * Algorithms\u27e811\u27e9\n  * Concurrency\u27e812\u27e9\n  * Data structures\u27e813\u27e9\n\n\n Report crate \u27e814\u27e9\n### Stats Overview\n130,859,973 Downloads all time\n84 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/atomic:  #atomic \n\u27e82\u27e9 https://crates.io/keywords/concurrent:  #concurrent \n\u27e83\u27e9 https://crates.io/keywords/hashmap:  #hashmap \n\u27e84\u27e9 https://crates.io/crates/dashmap:  Readme \n\u27e85\u27e9 https://crates.io/crates/dashmap/versions:  84 Versions \n\u27e86\u27e9 https://crates.io/crates/dashmap/dependencies:  Dependencies \n\u27e87\u27e9 https://crates.io/crates/dashmap/reverse_dependencies:  Dependents \n\u27e88\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e89\u27e9 https://docs.rs/dashmap:  docs.rs/dashmap \n\u27e810\u27e9 https://github.com/xacrimon/dashmap:  github.com/xacrimon/dashmap \n\u27e811\u27e9 https://crates.io/categories/algorithms: Algorithms\n\u27e812\u27e9 https://crates.io/categories/concurrency: Concurrency\n\u27e813\u27e9 https://crates.io/categories/data-structures: Data structures\n\u27e814\u27e9 https://crates.io/support?crate=dashmap&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1337,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "116839.1710117"
          },
          "docs_rs": {
            "url": "https://docs.rs/dashmap",
            "title": "Crate dashmapCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/dashmap/latest/dashmap/all.html \"show sidebar\")\n# Crate dashmapCopy item path\n[Settings](https://docs.rs/dashmap/latest/settings.html)\n[Help](https://docs.rs/dashmap/latest/help.html)\nSummary[Source](https://docs.rs/dashmap/latest/src/dashmap/lib.rs.html#1-1547)\n## Re-exports[\u00a7](https://docs.rs/dashmap/latest/dashmap/#reexports)\n\n`pub use mapref::entry::Entry[](https://docs.rs/dashmap/latest/dashmap/mapref/entry/enum.Entry.html \"enum dashmap::mapref::entry::Entry\");`\n\n\n`pub use mapref::entry::OccupiedEntry[](https://docs.rs/dashmap/latest/dashmap/mapref/entry/struct.OccupiedEntry.html \"struct dashmap::mapref::entry::OccupiedEntry\");`\n\n\n`pub use mapref::entry::VacantEntry[](https://docs.rs/dashmap/latest/dashmap/mapref/entry/struct.VacantEntry.html \"struct dashmap::mapref::entry::VacantEntry\");`\n\n## Modules[\u00a7](https://docs.rs/dashmap/latest/dashmap/#modules)\n\n[iter](https://docs.rs/dashmap/latest/dashmap/iter/index.html \"mod dashmap::iter\")\n\n\n[iter_set](https://docs.rs/dashmap/latest/dashmap/iter_set/index.html \"mod dashmap::iter_set\")\n\n\n[mapref](https://docs.rs/dashmap/latest/dashmap/mapref/index.html \"mod dashmap::mapref\")\n\n\n[rayon](https://docs.rs/dashmap/latest/dashmap/rayon/index.html \"mod dashmap::rayon\")\n\n\n[setref](https://docs.rs/dashmap/latest/dashmap/setref/index.html \"mod dashmap::setref\")\n\n\n[try_result](https://docs.rs/dashmap/latest/dashmap/try_result/index.html \"mod dashmap::try_result\")\n\n## Structs[\u00a7](https://docs.rs/dashmap/latest/dashmap/#structs)\n\n[DashMap](https://docs.rs/dashmap/latest/dashmap/struct.DashMap.html \"struct dashmap::DashMap\")\n    DashMap is an implementation of a concurrent associative array/hashmap in Rust.\n\n[DashSet](https://docs.rs/dashmap/latest/dashmap/struct.DashSet.html \"struct dashmap::DashSet\")\n    DashSet is a thin wrapper around [`DashMap`](https://docs.rs/dashmap/latest/dashmap/struct.DashMap.html) using `()` as the value type. It uses methods and types which are more convenient to work with on a set.\n\n[RawRwLock](https://docs.rs/dashmap/latest/dashmap/struct.RawRwLock.html \"struct dashmap::RawRwLock\")\n\n\n[ReadOnlyView](https://docs.rs/dashmap/latest/dashmap/struct.ReadOnlyView.html \"struct dashmap::ReadOnlyView\")\n    A read-only view into a `DashMap`. Allows to obtain raw references to the stored values.\n\n[SharedValue](https://docs.rs/dashmap/latest/dashmap/struct.SharedValue.html \"struct dashmap::SharedValue\")\n    A simple wrapper around `T`\n\n[TryReserveError](https://docs.rs/dashmap/latest/dashmap/struct.TryReserveError.html \"struct dashmap::TryReserveError\")\n\n## Traits[\u00a7](https://docs.rs/dashmap/latest/dashmap/#traits)\n\n[Map](https://docs.rs/dashmap/latest/dashmap/trait.Map.html \"trait dashmap::Map\")\n    Implementation detail that is exposed due to generic constraints in public types.\n## Type Aliases[\u00a7](https://docs.rs/dashmap/latest/dashmap/#types)\n\n[RwLock](https://docs.rs/dashmap/latest/dashmap/type.RwLock.html \"type dashmap::RwLock\")\n\n\n[RwLockReadGuard](https://docs.rs/dashmap/latest/dashmap/type.RwLockReadGuard.html \"type dashmap::RwLockReadGuard\")\n\n\n[RwLockWriteGuard](https://docs.rs/dashmap/latest/dashmap/type.RwLockWriteGuard.html \"type dashmap::RwLockWriteGuard\")\n\n",
              "markdown_with_citations": "[](https://docs.rs/dashmap/latest/dashmap/all.html \"show sidebar\")\n# Crate dashmapCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\n## Re-exports\u00a7\u27e84\u27e9\n\n`pub use mapref::entry::Entry[](https://docs.rs/dashmap/latest/dashmap/mapref/entry/enum.Entry.html \"enum dashmap::mapref::entry::Entry\");`\n\n\n`pub use mapref::entry::OccupiedEntry[](https://docs.rs/dashmap/latest/dashmap/mapref/entry/struct.OccupiedEntry.html \"struct dashmap::mapref::entry::OccupiedEntry\");`\n\n\n`pub use mapref::entry::VacantEntry[](https://docs.rs/dashmap/latest/dashmap/mapref/entry/struct.VacantEntry.html \"struct dashmap::mapref::entry::VacantEntry\");`\n\n## Modules\u00a7\u27e85\u27e9\n\niter\u27e86\u27e9\n\n\niter_set\u27e87\u27e9\n\n\nmapref\u27e88\u27e9\n\n\nrayon\u27e89\u27e9\n\n\nsetref\u27e810\u27e9\n\n\ntry_result\u27e811\u27e9\n\n## Structs\u00a7\u27e812\u27e9\n\nDashMap\u27e813\u27e9\n    DashMap is an implementation of a concurrent associative array/hashmap in Rust.\n\nDashSet\u27e814\u27e9\n    DashSet is a thin wrapper around `DashMap`\u27e813\u27e9 using `()` as the value type. It uses methods and types which are more convenient to work with on a set.\n\nRawRwLock\u27e815\u27e9\n\n\nReadOnlyView\u27e816\u27e9\n    A read-only view into a `DashMap`. Allows to obtain raw references to the stored values.\n\nSharedValue\u27e817\u27e9\n    A simple wrapper around `T`\n\nTryReserveError\u27e818\u27e9\n\n## Traits\u00a7\u27e819\u27e9\n\nMap\u27e820\u27e9\n    Implementation detail that is exposed due to generic constraints in public types.\n## Type Aliases\u00a7\u27e821\u27e9\n\nRwLock\u27e822\u27e9\n\n\nRwLockReadGuard\u27e823\u27e9\n\n\nRwLockWriteGuard\u27e824\u27e9\n\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/dashmap/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/dashmap/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/dashmap/latest/src/dashmap/lib.rs.html#1-1547: Source\n\u27e84\u27e9 https://docs.rs/dashmap/latest/dashmap/#reexports: \u00a7\n\u27e85\u27e9 https://docs.rs/dashmap/latest/dashmap/#modules: \u00a7\n\u27e86\u27e9 https://docs.rs/dashmap/latest/dashmap/iter/index.html: mod dashmap::iter - iter\n\u27e87\u27e9 https://docs.rs/dashmap/latest/dashmap/iter_set/index.html: mod dashmap::iter_set - iter_set\n\u27e88\u27e9 https://docs.rs/dashmap/latest/dashmap/mapref/index.html: mod dashmap::mapref - mapref\n\u27e89\u27e9 https://docs.rs/dashmap/latest/dashmap/rayon/index.html: mod dashmap::rayon - rayon\n\u27e810\u27e9 https://docs.rs/dashmap/latest/dashmap/setref/index.html: mod dashmap::setref - setref\n\u27e811\u27e9 https://docs.rs/dashmap/latest/dashmap/try_result/index.html: mod dashmap::try_result - try_result\n\u27e812\u27e9 https://docs.rs/dashmap/latest/dashmap/#structs: \u00a7\n\u27e813\u27e9 https://docs.rs/dashmap/latest/dashmap/struct.DashMap.html: struct dashmap::DashMap - DashMap\n\u27e814\u27e9 https://docs.rs/dashmap/latest/dashmap/struct.DashSet.html: struct dashmap::DashSet - DashSet\n\u27e815\u27e9 https://docs.rs/dashmap/latest/dashmap/struct.RawRwLock.html: struct dashmap::RawRwLock - RawRwLock\n\u27e816\u27e9 https://docs.rs/dashmap/latest/dashmap/struct.ReadOnlyView.html: struct dashmap::ReadOnlyView - ReadOnlyView\n\u27e817\u27e9 https://docs.rs/dashmap/latest/dashmap/struct.SharedValue.html: struct dashmap::SharedValue - SharedValue\n\u27e818\u27e9 https://docs.rs/dashmap/latest/dashmap/struct.TryReserveError.html: struct dashmap::TryReserveError - TryReserveError\n\u27e819\u27e9 https://docs.rs/dashmap/latest/dashmap/#traits: \u00a7\n\u27e820\u27e9 https://docs.rs/dashmap/latest/dashmap/trait.Map.html: trait dashmap::Map - Map\n\u27e821\u27e9 https://docs.rs/dashmap/latest/dashmap/#types: \u00a7\n\u27e822\u27e9 https://docs.rs/dashmap/latest/dashmap/type.RwLock.html: type dashmap::RwLock - RwLock\n\u27e823\u27e9 https://docs.rs/dashmap/latest/dashmap/type.RwLockReadGuard.html: type dashmap::RwLockReadGuard - RwLockReadGuard\n\u27e824\u27e9 https://docs.rs/dashmap/latest/dashmap/type.RwLockWriteGuard.html: type dashmap::RwLockWriteGuard - RwLockWriteGuard\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 3197,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "116839.7987209"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/dashmap",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [62 stable releases](https://lib.rs/crates/dashmap/versions) (6 major)\n7.0.0-rc2 |  Mar 5, 2025   \n---|---  \n6.1.0 |  Sep 5, 2024   \n6.0.1 |  Jun 24, 2024   \n5.5.3 |  Aug 29, 2023   \n1.2.0 |  Oct 15, 2019   \n#**4** in [Concurrency](https://lib.rs/concurrency \"Crates for implementing concurrent and parallel computation.\")\nDownload history 1723209/week @ 2025-03-08 1720074/week @ 2025-03-15 1688649/week @ 2025-03-22 1799620/week @ 2025-03-29 1948359/week @ 2025-04-05 1772337/week @ 2025-04-12 1746986/week @ 2025-04-19 1595455/week @ 2025-04-26 1657140/week @ 2025-05-03 1741419/week @ 2025-05-10 1757988/week @ 2025-05-17 1552101/week @ 2025-05-24 1728808/week @ 2025-05-31 1724915/week @ 2025-06-07 1836674/week @ 2025-06-14 1948110/week @ 2025-06-21\n**7,529,492** downloads per month Used in [**5,871** crates (1,299 directly)](https://lib.rs/crates/dashmap/rev)\n**MIT** license \n140KB  3K  SLoC\n# DashMap\nBlazingly fast concurrent map in Rust.\nDashMap is an implementation of a concurrent associative array/hashmap in Rust.\nDashMap tries to implement an easy to use API similar to ```std`::```collections`::``HashMap`` with some slight changes to handle concurrency.\nDashMap tries to be very simple to use and to be a direct replacement for ```RwLock`<`HashMap`<`K, V`>``>````. To accomplish these goals, all methods take ```&``self``` instead of modifying methods taking ```&``mut` `self```. This allows you to put a DashMap in an ```Arc`<`T`>```` and share it between threads while still being able to modify it.\nDashMap puts great effort into performance and aims to be as fast as possible. If you have any suggestions or tips do not hesitate to open an issue or a PR.\nThe current MSRV is 1.70 and is not changed in patch releases. You can pin a minor version if you want perfect stability. Though ``dashmap`` always stays at least 1 year behind the current stable release.\n[![version](https://img.shields.io/crates/v/dashmap)](https://crates.io/crates/dashmap)\n[![documentation](https://img.gs/czjpqfbdkz/full/https://docs.rs/dashmap/badge.svg)](https://docs.rs/dashmap)\n[![downloads](https://img.shields.io/crates/d/dashmap)](https://crates.io/crates/dashmap)\n[![minimum rustc version](https://img.shields.io/badge/rustc-1.70-orange.svg)](https://crates.io/crates/dashmap)\n## Cargo features\n  * ``serde`` - Enables serde support.\n  * ``raw-api`` - Enables the unstable raw-shard api.\n  * ``rayon`` - Enables rayon support.\n  * ``inline-more`` - Enables ``inline-more`` feature from the ``hashbrown`` crate. Comes with the usual tradeoffs of possibly excessive inlining.\n  * ``arbitrary`` - Enables support for the ``arbitrary`` crate.\n\n\n## Contributing\nDashMap gladly accepts contributions! Do not hesitate to open issues or PR's.\nI will take a look as soon as I have time for it.\nThat said I do not get paid (yet) to work on open-source. This means that my time is limited and my work here comes after my personal life.\n## Performance\nA comprehensive benchmark suite including DashMap can be found [here](https://github.com/xacrimon/conc-map-bench).\n## Special thanks\n  * [Conrad Ludgate](https://github.com/conradludgate)\n  * [Jon Gjengset](https://github.com/jonhoo)\n  * [Yato](https://github.com/RustyYato)\n  * [Karl Bergstr\u00f6m](https://github.com/kabergstrom)\n  * [Dylan DPC](https://github.com/Dylan-DPC)\n  * [Lokathor](https://github.com/Lokathor)\n  * [namibj](https://github.com/namibj)\n\n\n## License\nThis project is licensed under MIT.\n#### Dependencies\n~0.8\u20136.5MB  ~27K SLoC\n  * [cfg-if](https://lib.rs/crates/cfg-if \"1.0.0\")\n  * [crossbeam-utils](https://lib.rs/crates/crossbeam-utils \"0.8\")\n  * [equivalent](https://lib.rs/crates/equivalent \"1.0.1\")\n  * [hashbrown](https://lib.rs/crates/hashbrown \"new\") 0.15.2\n  * [lock_api](https://lib.rs/crates/lock_api \"0.4.12\")\n  * [parking_lot_core](https://lib.rs/crates/parking_lot_core \"0.9.10\")\n  * [all?](https://lib.rs/crates/dashmap/features#feature-all \"optional feature\") [arbitrary](https://lib.rs/crates/arbitrary \"1.4.1\")\n  * [all?](https://lib.rs/crates/dashmap/features#feature-all \"optional feature\") [rayon](https://lib.rs/crates/rayon \"1.10.0\")\n  * [all?](https://lib.rs/crates/dashmap/features#feature-all \"optional feature\") [serde](https://lib.rs/crates/serde \"1.0.217\")[+derive](https://lib.rs/crates/serde/features#feature-derive)\n  * [ optional ](https://lib.rs/crates/dashmap/features#feature-typesize \"typesize is optional feature\") [typesize](https://lib.rs/crates/typesize \"0.1.13\")[+hashbrown_15](https://lib.rs/crates/typesize/features#feature-hashbrown_15)\n\n\n#### [Other features](https://lib.rs/crates/dashmap/features)\n  * [inline-more](https://lib.rs/crates/dashmap/features#feature-inline-more)\n  * [raw-api](https://lib.rs/crates/dashmap/features#feature-raw-api)\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  62 stable releases\u27e81\u27e9 (6 major)\n7.0.0-rc2 |  Mar 5, 2025   \n---|---  \n6.1.0 |  Sep 5, 2024   \n6.0.1 |  Jun 24, 2024   \n5.5.3 |  Aug 29, 2023   \n1.2.0 |  Oct 15, 2019   \n#**4** in Concurrency\u27e82\u27e9\nDownload history 1723209/week @ 2025-03-08 1720074/week @ 2025-03-15 1688649/week @ 2025-03-22 1799620/week @ 2025-03-29 1948359/week @ 2025-04-05 1772337/week @ 2025-04-12 1746986/week @ 2025-04-19 1595455/week @ 2025-04-26 1657140/week @ 2025-05-03 1741419/week @ 2025-05-10 1757988/week @ 2025-05-17 1552101/week @ 2025-05-24 1728808/week @ 2025-05-31 1724915/week @ 2025-06-07 1836674/week @ 2025-06-14 1948110/week @ 2025-06-21\n**7,529,492** downloads per month Used in **5,871** crates (1,299 directly)\u27e83\u27e9\n**MIT** license \n140KB  3K  SLoC\n# DashMap\nBlazingly fast concurrent map in Rust.\nDashMap is an implementation of a concurrent associative array/hashmap in Rust.\nDashMap tries to implement an easy to use API similar to ```std`::```collections`::``HashMap`` with some slight changes to handle concurrency.\nDashMap tries to be very simple to use and to be a direct replacement for ```RwLock`<`HashMap`<`K, V`>``>````. To accomplish these goals, all methods take ```&``self``` instead of modifying methods taking ```&``mut` `self```. This allows you to put a DashMap in an ```Arc`<`T`>```` and share it between threads while still being able to modify it.\nDashMap puts great effort into performance and aims to be as fast as possible. If you have any suggestions or tips do not hesitate to open an issue or a PR.\nThe current MSRV is 1.70 and is not changed in patch releases. You can pin a minor version if you want perfect stability. Though ``dashmap`` always stays at least 1 year behind the current stable release.\n![version\u27e84\u27e9](https://crates.io/crates/dashmap)\n![documentation\u27e85\u27e9](https://docs.rs/dashmap)\n![downloads\u27e86\u27e9](https://crates.io/crates/dashmap)\n![minimum rustc version\u27e87\u27e9](https://crates.io/crates/dashmap)\n## Cargo features\n  * ``serde`` - Enables serde support.\n  * ``raw-api`` - Enables the unstable raw-shard api.\n  * ``rayon`` - Enables rayon support.\n  * ``inline-more`` - Enables ``inline-more`` feature from the ``hashbrown`` crate. Comes with the usual tradeoffs of possibly excessive inlining.\n  * ``arbitrary`` - Enables support for the ``arbitrary`` crate.\n\n\n## Contributing\nDashMap gladly accepts contributions! Do not hesitate to open issues or PR's.\nI will take a look as soon as I have time for it.\nThat said I do not get paid (yet) to work on open-source. This means that my time is limited and my work here comes after my personal life.\n## Performance\nA comprehensive benchmark suite including DashMap can be found here\u27e88\u27e9.\n## Special thanks\n  * Conrad Ludgate\u27e89\u27e9\n  * Jon Gjengset\u27e810\u27e9\n  * Yato\u27e811\u27e9\n  * Karl Bergstr\u00f6m\u27e812\u27e9\n  * Dylan DPC\u27e813\u27e9\n  * Lokathor\u27e814\u27e9\n  * namibj\u27e815\u27e9\n\n\n## License\nThis project is licensed under MIT.\n#### Dependencies\n~0.8\u20136.5MB  ~27K SLoC\n  * cfg-if\u27e816\u27e9\n  * crossbeam-utils\u27e817\u27e9\n  * equivalent\u27e818\u27e9\n  * hashbrown\u27e819\u27e9 0.15.2\n  * lock_api\u27e820\u27e9\n  * parking_lot_core\u27e821\u27e9\n  * all?\u27e822\u27e9 arbitrary\u27e823\u27e9\n  * all?\u27e822\u27e9 rayon\u27e824\u27e9\n  * all?\u27e822\u27e9 serde\u27e825\u27e9+derive\u27e826\u27e9\n  *  optional \u27e827\u27e9 typesize\u27e828\u27e9+hashbrown_15\u27e829\u27e9\n\n\n#### Other features\u27e830\u27e9\n  * inline-more\u27e831\u27e9\n  * raw-api\u27e832\u27e9\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/dashmap/versions: 62 stable releases\n\u27e82\u27e9 https://lib.rs/concurrency: Crates for implementing concurrent and parallel computation. - Concurrency\n\u27e83\u27e9 https://lib.rs/crates/dashmap/rev: **5,871** crates (1,299 directly)\n\u27e84\u27e9 https://img.shields.io/crates/v/dashmap: ![version\n\u27e85\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/dashmap/badge.svg: ![documentation\n\u27e86\u27e9 https://img.shields.io/crates/d/dashmap: ![downloads\n\u27e87\u27e9 https://img.shields.io/badge/rustc-1.70-orange.svg: ![minimum rustc version\n\u27e88\u27e9 https://github.com/xacrimon/conc-map-bench: here\n\u27e89\u27e9 https://github.com/conradludgate: Conrad Ludgate\n\u27e810\u27e9 https://github.com/jonhoo: Jon Gjengset\n\u27e811\u27e9 https://github.com/RustyYato: Yato\n\u27e812\u27e9 https://github.com/kabergstrom: Karl Bergstr\u00f6m\n\u27e813\u27e9 https://github.com/Dylan-DPC: Dylan DPC\n\u27e814\u27e9 https://github.com/Lokathor: Lokathor\n\u27e815\u27e9 https://github.com/namibj: namibj\n\u27e816\u27e9 https://lib.rs/crates/cfg-if: 1.0.0 - cfg-if\n\u27e817\u27e9 https://lib.rs/crates/crossbeam-utils: 0.8 - crossbeam-utils\n\u27e818\u27e9 https://lib.rs/crates/equivalent: 1.0.1 - equivalent\n\u27e819\u27e9 https://lib.rs/crates/hashbrown: new - hashbrown\n\u27e820\u27e9 https://lib.rs/crates/lock_api: 0.4.12 - lock_api\n\u27e821\u27e9 https://lib.rs/crates/parking_lot_core: 0.9.10 - parking_lot_core\n\u27e822\u27e9 https://lib.rs/crates/dashmap/features#feature-all: optional feature - all?\n\u27e823\u27e9 https://lib.rs/crates/arbitrary: 1.4.1 - arbitrary\n\u27e824\u27e9 https://lib.rs/crates/rayon: 1.10.0 - rayon\n\u27e825\u27e9 https://lib.rs/crates/serde: 1.0.217 - serde\n\u27e826\u27e9 https://lib.rs/crates/serde/features#feature-derive: +derive\n\u27e827\u27e9 https://lib.rs/crates/dashmap/features#feature-typesize: typesize is optional feature -  optional \n\u27e828\u27e9 https://lib.rs/crates/typesize: 0.1.13 - typesize\n\u27e829\u27e9 https://lib.rs/crates/typesize/features#feature-hashbrown_15: +hashbrown_15\n\u27e830\u27e9 https://lib.rs/crates/dashmap/features: Other features\n\u27e831\u27e9 https://lib.rs/crates/dashmap/features#feature-inline-more: inline-more\n\u27e832\u27e9 https://lib.rs/crates/dashmap/features#feature-raw-api: raw-api\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 4813,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "116840.1869675"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libcfg_if-0416b600f5de43de.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "equivalent",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libequivalent-ebd39031dcab7414.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "scopeguard",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libscopeguard-b3036dac4c63d524.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libsmallvec-6a440c251b58272a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\parking_lot_core-fda95fe9f127d56b\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\parking_lot_core-fda95fe9f127d56b\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\crossbeam-utils-eac37113d2f8721b\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\crossbeam-utils-eac37113d2f8721b\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\parking_lot_core-9928602ef8bb032d\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\crossbeam-utils-a76aac2ae9866593\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.5.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libautocfg-ff5884693664d457.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libautocfg-ff5884693664d457.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hashbrown",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libhashbrown-a043e0c8c3e2aece.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libparking_lot_core-371fd459e255aab1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\lock_api-d2343c0fe6ff07ff\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\lock_api-d2343c0fe6ff07ff\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_utils",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libcrossbeam_utils-bb4ad7bf8162756c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_const_fn_trait_bound"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\lock_api-26a72cfa18e2caea\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lock_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\liblock_api-9c180e8e0f8b9e04.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp11sce9lo/dashmap-7.0.0-rc2#dashmap@7.0.0-rc2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "dashmap",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libdashmap-874dc0981ba75463.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.5.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libautocfg-ff5884693664d457.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libautocfg-ff5884693664d457.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\crossbeam-utils-eac37113d2f8721b\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\crossbeam-utils-eac37113d2f8721b\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\parking_lot_core-fda95fe9f127d56b\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\parking_lot_core-fda95fe9f127d56b\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libcfg_if-0416b600f5de43de.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "scopeguard",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libscopeguard-b3036dac4c63d524.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libsmallvec-6a440c251b58272a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "equivalent",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libequivalent-ebd39031dcab7414.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hashbrown",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libhashbrown-a043e0c8c3e2aece.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\lock_api-d2343c0fe6ff07ff\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\lock_api-d2343c0fe6ff07ff\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\crossbeam-utils-a76aac2ae9866593\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\parking_lot_core-9928602ef8bb032d\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_const_fn_trait_bound"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\build\\lock_api-26a72cfa18e2caea\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_utils",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libcrossbeam_utils-bb4ad7bf8162756c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libparking_lot_core-371fd459e255aab1.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lock_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\liblock_api-9c180e8e0f8b9e04.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp11sce9lo/dashmap-7.0.0-rc2#dashmap@7.0.0-rc2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "dashmap",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this lifetime isn't used in the impl\n  --> src\\set.rs:53:6\n   |\n53 | impl<'a, K: 'a + Eq + Hash> DashSet<K, RandomState> {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::extra_unused_lifetimes)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::extra_unused_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "this lifetime isn't used in the impl",
                "spans": [
                  {
                    "byte_end": 1366,
                    "byte_start": 1364,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\set.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 53,
                    "line_start": 53,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a, K: 'a + Eq + Hash> DashSet<K, RandomState> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp11sce9lo/dashmap-7.0.0-rc2#dashmap@7.0.0-rc2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "dashmap",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this lifetime isn't used in the impl\n   --> src\\lib.rs:115:6\n    |\n115 | impl<'a, K: 'a + Eq + Hash, V: 'a> DashMap<K, V, RandomState> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::extra_unused_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "this lifetime isn't used in the impl",
                "spans": [
                  {
                    "byte_end": 3532,
                    "byte_start": 3530,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 115,
                    "line_start": 115,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a, K: 'a + Eq + Hash, V: 'a> DashMap<K, V, RandomState> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp11sce9lo/dashmap-7.0.0-rc2#dashmap@7.0.0-rc2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "dashmap",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `match` expression can be replaced with `?`\n    --> src\\lib.rs:1175:21\n     |\n1175 |           let shard = match self.shards[idx].try_write() {\n     |  _____________________^\n1176 | |             Some(shard) => shard,\n1177 | |             None => return None,\n1178 | |         };\n     | |_________^ help: try instead: `self.shards[idx].try_write()?`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n     = note: `#[warn(clippy::question_mark)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::question_mark)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 37418,
                        "byte_start": 37305,
                        "column_end": 10,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1178,
                        "line_start": 1175,
                        "suggested_replacement": "self.shards[idx].try_write()?",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 57,
                            "highlight_start": 21,
                            "text": "        let shard = match self.shards[idx].try_write() {"
                          },
                          {
                            "highlight_end": 34,
                            "highlight_start": 1,
                            "text": "            Some(shard) => shard,"
                          },
                          {
                            "highlight_end": 33,
                            "highlight_start": 1,
                            "text": "            None => return None,"
                          },
                          {
                            "highlight_end": 10,
                            "highlight_start": 1,
                            "text": "        };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::question_mark",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `match` expression can be replaced with `?`",
                "spans": [
                  {
                    "byte_end": 37418,
                    "byte_start": 37305,
                    "column_end": 10,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1178,
                    "line_start": 1175,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 21,
                        "text": "        let shard = match self.shards[idx].try_write() {"
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "            Some(shard) => shard,"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "            None => return None,"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp11sce9lo/dashmap-7.0.0-rc2#dashmap@7.0.0-rc2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "dashmap",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `match` expression can be replaced with `?`\n    --> src\\lib.rs:1238:21\n     |\n1238 |           let shard = match self.shards[idx].try_write() {\n     |  _____________________^\n1239 | |             Some(shard) => shard,\n1240 | |             None => return None,\n1241 | |         };\n     | |_________^ help: try instead: `self.shards[idx].try_write()?`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 39533,
                        "byte_start": 39420,
                        "column_end": 10,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1241,
                        "line_start": 1238,
                        "suggested_replacement": "self.shards[idx].try_write()?",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 57,
                            "highlight_start": 21,
                            "text": "        let shard = match self.shards[idx].try_write() {"
                          },
                          {
                            "highlight_end": 34,
                            "highlight_start": 1,
                            "text": "            Some(shard) => shard,"
                          },
                          {
                            "highlight_end": 33,
                            "highlight_start": 1,
                            "text": "            None => return None,"
                          },
                          {
                            "highlight_end": 10,
                            "highlight_start": 1,
                            "text": "        };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::question_mark",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `match` expression can be replaced with `?`",
                "spans": [
                  {
                    "byte_end": 39533,
                    "byte_start": 39420,
                    "column_end": 10,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1241,
                    "line_start": 1238,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 21,
                        "text": "        let shard = match self.shards[idx].try_write() {"
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "            Some(shard) => shard,"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "            None => return None,"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp11sce9lo/dashmap-7.0.0-rc2#dashmap@7.0.0-rc2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "dashmap",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this lifetime isn't used in the impl\n    --> src\\lib.rs:1347:6\n     |\n1347 | impl<'a, K: 'a + Eq + Hash, V: 'a + PartialEq, S: BuildHasher + Clone> PartialEq\n     |      ^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::extra_unused_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "this lifetime isn't used in the impl",
                "spans": [
                  {
                    "byte_end": 42183,
                    "byte_start": 42181,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1347,
                    "line_start": 1347,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a, K: 'a + Eq + Hash, V: 'a + PartialEq, S: BuildHasher + Clone> PartialEq"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp11sce9lo/dashmap-7.0.0-rc2#dashmap@7.0.0-rc2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "dashmap",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `map_or` can be simplified\n    --> src\\lib.rs:1353:17\n     |\n1353 | /                 other\n1354 | |                     .get(r.key())\n1355 | |                     .map_or(false, |ro| r.value() == ro.value())\n     | |________________________________________________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or\n     = note: `#[warn(clippy::unnecessary_map_or)]` on by default\nhelp: use is_some_and instead\n     |\n1355 -                     .map_or(false, |ro| r.value() == ro.value())\n1355 +                     .is_some_and(|ro| r.value() == ro.value())\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::unnecessary_map_or)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use is_some_and instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 42479,
                        "byte_start": 42473,
                        "column_end": 28,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1355,
                        "line_start": 1355,
                        "suggested_replacement": "is_some_and",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 22,
                            "text": "                    .map_or(false, |ro| r.value() == ro.value())"
                          }
                        ]
                      },
                      {
                        "byte_end": 42487,
                        "byte_start": 42480,
                        "column_end": 36,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1355,
                        "line_start": 1355,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 29,
                            "text": "                    .map_or(false, |ro| r.value() == ro.value())"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_map_or",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `map_or` can be simplified",
                "spans": [
                  {
                    "byte_end": 42516,
                    "byte_start": 42412,
                    "column_end": 65,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1355,
                    "line_start": 1353,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 22,
                        "highlight_start": 17,
                        "text": "                other"
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "                    .get(r.key())"
                      },
                      {
                        "highlight_end": 65,
                        "highlight_start": 1,
                        "text": "                    .map_or(false, |ro| r.value() == ro.value())"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp11sce9lo/dashmap-7.0.0-rc2#dashmap@7.0.0-rc2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "dashmap",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this lifetime isn't used in the impl\n    --> src\\lib.rs:1360:6\n     |\n1360 | impl<'a, K: 'a + Eq + Hash, V: 'a + Eq, S: BuildHasher + Clone> Eq for DashMap<K, V, S> {}\n     |      ^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::extra_unused_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "this lifetime isn't used in the impl",
                "spans": [
                  {
                    "byte_end": 42548,
                    "byte_start": 42546,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1360,
                    "line_start": 1360,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a, K: 'a + Eq + Hash, V: 'a + Eq, S: BuildHasher + Clone> Eq for DashMap<K, V, S> {}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp11sce9lo/dashmap-7.0.0-rc2#dashmap@7.0.0-rc2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "dashmap",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp11sce9lo\\dashmap-7.0.0-rc2\\target\\debug\\deps\\libdashmap-e4fdf4e893a4ff03.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 36
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {}
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "dashmap",
          "version": "7.0.0-rc2",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/dashmap/latest/dashmap/all.html \"show sidebar\")\n# Crate dashmapCopy item path\n[Settings](https://docs.rs/dashmap/latest/settings.html)\n[Help](https://docs.rs/dashmap/latest/help.html)\nSummary[Source](https://docs.rs/dashmap/latest/src/dashmap/lib.rs.html#1-1547)\n## Re-exports[\u00a7](https://docs.rs/dashmap/latest/dashmap/#reexports)\n\n`pub use mapref::entry::Entry[](https://docs.rs/dashmap/latest/dashmap/mapref/entry/enum.Entry.html \"enum dashmap::mapref::entry::Entry\");`\n\n\n`pub use mapref::entry::OccupiedEntry[](https://docs.rs/dashmap/latest/dashmap/mapref/entry/struct.OccupiedEntry.html \"struct dashmap::mapref::entry::OccupiedEntry\");`\n\n\n`pub use mapref::entry::VacantEntry[](https://docs.rs/dashmap/latest/dashmap/mapref/entry/struct.VacantEntry.html \"struct dashmap::mapref::entry::VacantEntry\");`\n\n## Modules[\u00a7](https://docs.rs/dashmap/latest/dashmap/#modules)\n\n[iter](https://docs.rs/dashmap/latest/dashmap/iter/index.html \"mod dashmap::iter\")\n\n\n[iter_set](https://docs.rs/dashmap/latest/dashmap/iter_set/index.html \"mod dashmap::iter_set\")\n\n\n[mapref](https://docs.rs/dashmap/latest/dashmap/mapref/index.html \"mod dashmap::mapref\")\n\n\n[rayon](https://docs.rs/dashmap/latest/dashmap/rayon/index.html \"mod dashmap::rayon\")\n\n\n[setref](https://docs.rs/dashmap/latest/dashmap/setref/index.html \"mod dashmap::setref\")\n\n\n[try_result](https://docs.rs/dashmap/latest/dashmap/try_result/index.html \"mod dashmap::try_result\")\n\n## Structs[\u00a7](https://docs.rs/dashmap/latest/dashmap/#structs)\n\n[DashMap](https://docs.rs/dashmap/latest/dashmap/struct.DashMap.html \"struct dashmap::DashMap\")\n    DashMap is an implementation of a concurrent associative array/hashmap in Rust.\n\n[DashSet](https://docs.rs/dashmap/latest/dashmap/struct.DashSet.html \"struct dashmap::DashSet\")\n    DashSet is a thin wrapper around [`DashMap`](https://docs.rs/dashmap/latest/dashmap/struct.DashMap.html) using `()` as the value type. It uses methods and types which are more convenient to work with on a set.\n\n[RawRwLock](https://docs.rs/dashmap/latest/dashmap/struct.RawRwLock.html \"struct dashmap::RawRwLock\")\n\n\n[ReadOnlyView](https://docs.rs/dashmap/latest/dashmap/struct.ReadOnlyView.html \"struct dashmap::ReadOnlyView\")\n    A read-only view into a `DashMap`. Allows to obtain raw references to the stored values.\n\n[SharedValue](https://docs.rs/dashmap/latest/dashmap/struct.SharedValue.html \"struct dashmap::SharedValue\")\n    A simple wrapper around `T`\n\n[TryReserveError](https://docs.rs/dashmap/latest/dashmap/struct.TryReserveError.html \"struct dashmap::TryReserveError\")\n\n## Traits[\u00a7](https://docs.rs/dashmap/latest/dashmap/#traits)\n\n[Map](https://docs.rs/dashmap/latest/dashmap/trait.Map.html \"trait dashmap::Map\")\n    Implementation detail that is exposed due to generic constraints in public types.\n## Type Aliases[\u00a7](https://docs.rs/dashmap/latest/dashmap/#types)\n\n[RwLock](https://docs.rs/dashmap/latest/dashmap/type.RwLock.html \"type dashmap::RwLock\")\n\n\n[RwLockReadGuard](https://docs.rs/dashmap/latest/dashmap/type.RwLockReadGuard.html \"type dashmap::RwLockReadGuard\")\n\n\n[RwLockWriteGuard](https://docs.rs/dashmap/latest/dashmap/type.RwLockWriteGuard.html \"type dashmap::RwLockWriteGuard\")\n\n",
            "markdown_with_citations": "[](https://docs.rs/dashmap/latest/dashmap/all.html \"show sidebar\")\n# Crate dashmapCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\n## Re-exports\u00a7\u27e84\u27e9\n\n`pub use mapref::entry::Entry[](https://docs.rs/dashmap/latest/dashmap/mapref/entry/enum.Entry.html \"enum dashmap::mapref::entry::Entry\");`\n\n\n`pub use mapref::entry::OccupiedEntry[](https://docs.rs/dashmap/latest/dashmap/mapref/entry/struct.OccupiedEntry.html \"struct dashmap::mapref::entry::OccupiedEntry\");`\n\n\n`pub use mapref::entry::VacantEntry[](https://docs.rs/dashmap/latest/dashmap/mapref/entry/struct.VacantEntry.html \"struct dashmap::mapref::entry::VacantEntry\");`\n\n## Modules\u00a7\u27e85\u27e9\n\niter\u27e86\u27e9\n\n\niter_set\u27e87\u27e9\n\n\nmapref\u27e88\u27e9\n\n\nrayon\u27e89\u27e9\n\n\nsetref\u27e810\u27e9\n\n\ntry_result\u27e811\u27e9\n\n## Structs\u00a7\u27e812\u27e9\n\nDashMap\u27e813\u27e9\n    DashMap is an implementation of a concurrent associative array/hashmap in Rust.\n\nDashSet\u27e814\u27e9\n    DashSet is a thin wrapper around `DashMap`\u27e813\u27e9 using `()` as the value type. It uses methods and types which are more convenient to work with on a set.\n\nRawRwLock\u27e815\u27e9\n\n\nReadOnlyView\u27e816\u27e9\n    A read-only view into a `DashMap`. Allows to obtain raw references to the stored values.\n\nSharedValue\u27e817\u27e9\n    A simple wrapper around `T`\n\nTryReserveError\u27e818\u27e9\n\n## Traits\u00a7\u27e819\u27e9\n\nMap\u27e820\u27e9\n    Implementation detail that is exposed due to generic constraints in public types.\n## Type Aliases\u00a7\u27e821\u27e9\n\nRwLock\u27e822\u27e9\n\n\nRwLockReadGuard\u27e823\u27e9\n\n\nRwLockWriteGuard\u27e824\u27e9\n\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/dashmap/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/dashmap/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/dashmap/latest/src/dashmap/lib.rs.html#1-1547: Source\n\u27e84\u27e9 https://docs.rs/dashmap/latest/dashmap/#reexports: \u00a7\n\u27e85\u27e9 https://docs.rs/dashmap/latest/dashmap/#modules: \u00a7\n\u27e86\u27e9 https://docs.rs/dashmap/latest/dashmap/iter/index.html: mod dashmap::iter - iter\n\u27e87\u27e9 https://docs.rs/dashmap/latest/dashmap/iter_set/index.html: mod dashmap::iter_set - iter_set\n\u27e88\u27e9 https://docs.rs/dashmap/latest/dashmap/mapref/index.html: mod dashmap::mapref - mapref\n\u27e89\u27e9 https://docs.rs/dashmap/latest/dashmap/rayon/index.html: mod dashmap::rayon - rayon\n\u27e810\u27e9 https://docs.rs/dashmap/latest/dashmap/setref/index.html: mod dashmap::setref - setref\n\u27e811\u27e9 https://docs.rs/dashmap/latest/dashmap/try_result/index.html: mod dashmap::try_result - try_result\n\u27e812\u27e9 https://docs.rs/dashmap/latest/dashmap/#structs: \u00a7\n\u27e813\u27e9 https://docs.rs/dashmap/latest/dashmap/struct.DashMap.html: struct dashmap::DashMap - DashMap\n\u27e814\u27e9 https://docs.rs/dashmap/latest/dashmap/struct.DashSet.html: struct dashmap::DashSet - DashSet\n\u27e815\u27e9 https://docs.rs/dashmap/latest/dashmap/struct.RawRwLock.html: struct dashmap::RawRwLock - RawRwLock\n\u27e816\u27e9 https://docs.rs/dashmap/latest/dashmap/struct.ReadOnlyView.html: struct dashmap::ReadOnlyView - ReadOnlyView\n\u27e817\u27e9 https://docs.rs/dashmap/latest/dashmap/struct.SharedValue.html: struct dashmap::SharedValue - SharedValue\n\u27e818\u27e9 https://docs.rs/dashmap/latest/dashmap/struct.TryReserveError.html: struct dashmap::TryReserveError - TryReserveError\n\u27e819\u27e9 https://docs.rs/dashmap/latest/dashmap/#traits: \u00a7\n\u27e820\u27e9 https://docs.rs/dashmap/latest/dashmap/trait.Map.html: trait dashmap::Map - Map\n\u27e821\u27e9 https://docs.rs/dashmap/latest/dashmap/#types: \u00a7\n\u27e822\u27e9 https://docs.rs/dashmap/latest/dashmap/type.RwLock.html: type dashmap::RwLock - RwLock\n\u27e823\u27e9 https://docs.rs/dashmap/latest/dashmap/type.RwLockReadGuard.html: type dashmap::RwLockReadGuard - RwLockReadGuard\n\u27e824\u27e9 https://docs.rs/dashmap/latest/dashmap/type.RwLockWriteGuard.html: type dashmap::RwLockWriteGuard - RwLockWriteGuard\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "dashmap",
          "version": "7.0.0-rc2",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/dashmap/latest/dashmap/all.html \"show sidebar\")\n# Crate dashmapCopy item path\n[Settings](https://docs.rs/dashmap/latest/settings.html)\n[Help](https://docs.rs/dashmap/latest/help.html)\nSummary[Source](https://docs.rs/dashmap/latest/src/dashmap/lib.rs.html#1-1547)\n## Re-exports[\u00a7](https://docs.rs/dashmap/latest/dashmap/#reexports)\n\n`pub use mapref::entry::Entry[](https://docs.rs/dashmap/latest/dashmap/mapref/entry/enum.Entry.html \"enum dashmap::mapref::entry::Entry\");`\n\n\n`pub use mapref::entry::OccupiedEntry[](https://docs.rs/dashmap/latest/dashmap/mapref/entry/struct.OccupiedEntry.html \"struct dashmap::mapref::entry::OccupiedEntry\");`\n\n\n`pub use mapref::entry::VacantEntry[](https://docs.rs/dashmap/latest/dashmap/mapref/entry/struct.VacantEntry.html \"struct dashmap::mapref::entry::VacantEntry\");`\n\n## Modules[\u00a7](https://docs.rs/dashmap/latest/dashmap/#modules)\n\n[iter](https://docs.rs/dashmap/latest/dashmap/iter/index.html \"mod dashmap::iter\")\n\n\n[iter_set](https://docs.rs/dashmap/latest/dashmap/iter_set/index.html \"mod dashmap::iter_set\")\n\n\n[mapref](https://docs.rs/dashmap/latest/dashmap/mapref/index.html \"mod dashmap::mapref\")\n\n\n[rayon](https://docs.rs/dashmap/latest/dashmap/rayon/index.html \"mod dashmap::rayon\")\n\n\n[setref](https://docs.rs/dashmap/latest/dashmap/setref/index.html \"mod dashmap::setref\")\n\n\n[try_result](https://docs.rs/dashmap/latest/dashmap/try_result/index.html \"mod dashmap::try_result\")\n\n## Structs[\u00a7](https://docs.rs/dashmap/latest/dashmap/#structs)\n\n[DashMap](https://docs.rs/dashmap/latest/dashmap/struct.DashMap.html \"struct dashmap::DashMap\")\n    DashMap is an implementation of a concurrent associative array/hashmap in Rust.\n\n[DashSet](https://docs.rs/dashmap/latest/dashmap/struct.DashSet.html \"struct dashmap::DashSet\")\n    DashSet is a thin wrapper around [`DashMap`](https://docs.rs/dashmap/latest/dashmap/struct.DashMap.html) using `()` as the value type. It uses methods and types which are more convenient to work with on a set.\n\n[RawRwLock](https://docs.rs/dashmap/latest/dashmap/struct.RawRwLock.html \"struct dashmap::RawRwLock\")\n\n\n[ReadOnlyView](https://docs.rs/dashmap/latest/dashmap/struct.ReadOnlyView.html \"struct dashmap::ReadOnlyView\")\n    A read-only view into a `DashMap`. Allows to obtain raw references to the stored values.\n\n[SharedValue](https://docs.rs/dashmap/latest/dashmap/struct.SharedValue.html \"struct dashmap::SharedValue\")\n    A simple wrapper around `T`\n\n[TryReserveError](https://docs.rs/dashmap/latest/dashmap/struct.TryReserveError.html \"struct dashmap::TryReserveError\")\n\n## Traits[\u00a7](https://docs.rs/dashmap/latest/dashmap/#traits)\n\n[Map](https://docs.rs/dashmap/latest/dashmap/trait.Map.html \"trait dashmap::Map\")\n    Implementation detail that is exposed due to generic constraints in public types.\n## Type Aliases[\u00a7](https://docs.rs/dashmap/latest/dashmap/#types)\n\n[RwLock](https://docs.rs/dashmap/latest/dashmap/type.RwLock.html \"type dashmap::RwLock\")\n\n\n[RwLockReadGuard](https://docs.rs/dashmap/latest/dashmap/type.RwLockReadGuard.html \"type dashmap::RwLockReadGuard\")\n\n\n[RwLockWriteGuard](https://docs.rs/dashmap/latest/dashmap/type.RwLockWriteGuard.html \"type dashmap::RwLockWriteGuard\")\n\n",
            "markdown_with_citations": "[](https://docs.rs/dashmap/latest/dashmap/all.html \"show sidebar\")\n# Crate dashmapCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\n## Re-exports\u00a7\u27e84\u27e9\n\n`pub use mapref::entry::Entry[](https://docs.rs/dashmap/latest/dashmap/mapref/entry/enum.Entry.html \"enum dashmap::mapref::entry::Entry\");`\n\n\n`pub use mapref::entry::OccupiedEntry[](https://docs.rs/dashmap/latest/dashmap/mapref/entry/struct.OccupiedEntry.html \"struct dashmap::mapref::entry::OccupiedEntry\");`\n\n\n`pub use mapref::entry::VacantEntry[](https://docs.rs/dashmap/latest/dashmap/mapref/entry/struct.VacantEntry.html \"struct dashmap::mapref::entry::VacantEntry\");`\n\n## Modules\u00a7\u27e85\u27e9\n\niter\u27e86\u27e9\n\n\niter_set\u27e87\u27e9\n\n\nmapref\u27e88\u27e9\n\n\nrayon\u27e89\u27e9\n\n\nsetref\u27e810\u27e9\n\n\ntry_result\u27e811\u27e9\n\n## Structs\u00a7\u27e812\u27e9\n\nDashMap\u27e813\u27e9\n    DashMap is an implementation of a concurrent associative array/hashmap in Rust.\n\nDashSet\u27e814\u27e9\n    DashSet is a thin wrapper around `DashMap`\u27e813\u27e9 using `()` as the value type. It uses methods and types which are more convenient to work with on a set.\n\nRawRwLock\u27e815\u27e9\n\n\nReadOnlyView\u27e816\u27e9\n    A read-only view into a `DashMap`. Allows to obtain raw references to the stored values.\n\nSharedValue\u27e817\u27e9\n    A simple wrapper around `T`\n\nTryReserveError\u27e818\u27e9\n\n## Traits\u00a7\u27e819\u27e9\n\nMap\u27e820\u27e9\n    Implementation detail that is exposed due to generic constraints in public types.\n## Type Aliases\u00a7\u27e821\u27e9\n\nRwLock\u27e822\u27e9\n\n\nRwLockReadGuard\u27e823\u27e9\n\n\nRwLockWriteGuard\u27e824\u27e9\n\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/dashmap/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/dashmap/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/dashmap/latest/src/dashmap/lib.rs.html#1-1547: Source\n\u27e84\u27e9 https://docs.rs/dashmap/latest/dashmap/#reexports: \u00a7\n\u27e85\u27e9 https://docs.rs/dashmap/latest/dashmap/#modules: \u00a7\n\u27e86\u27e9 https://docs.rs/dashmap/latest/dashmap/iter/index.html: mod dashmap::iter - iter\n\u27e87\u27e9 https://docs.rs/dashmap/latest/dashmap/iter_set/index.html: mod dashmap::iter_set - iter_set\n\u27e88\u27e9 https://docs.rs/dashmap/latest/dashmap/mapref/index.html: mod dashmap::mapref - mapref\n\u27e89\u27e9 https://docs.rs/dashmap/latest/dashmap/rayon/index.html: mod dashmap::rayon - rayon\n\u27e810\u27e9 https://docs.rs/dashmap/latest/dashmap/setref/index.html: mod dashmap::setref - setref\n\u27e811\u27e9 https://docs.rs/dashmap/latest/dashmap/try_result/index.html: mod dashmap::try_result - try_result\n\u27e812\u27e9 https://docs.rs/dashmap/latest/dashmap/#structs: \u00a7\n\u27e813\u27e9 https://docs.rs/dashmap/latest/dashmap/struct.DashMap.html: struct dashmap::DashMap - DashMap\n\u27e814\u27e9 https://docs.rs/dashmap/latest/dashmap/struct.DashSet.html: struct dashmap::DashSet - DashSet\n\u27e815\u27e9 https://docs.rs/dashmap/latest/dashmap/struct.RawRwLock.html: struct dashmap::RawRwLock - RawRwLock\n\u27e816\u27e9 https://docs.rs/dashmap/latest/dashmap/struct.ReadOnlyView.html: struct dashmap::ReadOnlyView - ReadOnlyView\n\u27e817\u27e9 https://docs.rs/dashmap/latest/dashmap/struct.SharedValue.html: struct dashmap::SharedValue - SharedValue\n\u27e818\u27e9 https://docs.rs/dashmap/latest/dashmap/struct.TryReserveError.html: struct dashmap::TryReserveError - TryReserveError\n\u27e819\u27e9 https://docs.rs/dashmap/latest/dashmap/#traits: \u00a7\n\u27e820\u27e9 https://docs.rs/dashmap/latest/dashmap/trait.Map.html: trait dashmap::Map - Map\n\u27e821\u27e9 https://docs.rs/dashmap/latest/dashmap/#types: \u00a7\n\u27e822\u27e9 https://docs.rs/dashmap/latest/dashmap/type.RwLock.html: type dashmap::RwLock - RwLock\n\u27e823\u27e9 https://docs.rs/dashmap/latest/dashmap/type.RwLockReadGuard.html: type dashmap::RwLockReadGuard - RwLockReadGuard\n\u27e824\u27e9 https://docs.rs/dashmap/latest/dashmap/type.RwLockWriteGuard.html: type dashmap::RwLockWriteGuard - RwLockWriteGuard\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `dashmap` crate provides a high-performance, thread-safe concurrent hashmap (`DashMap`) and set (`DashSet`) for Rust, enabling efficient shared data access without requiring external locking. It supports fine-grained locking, read-only views, and iteration over entries, making it ideal for scenarios requiring frequent concurrent reads and writes. Additionally, it offers utilities like `RawRwLock` and `SharedValue` for advanced synchronization and value handling.",
          "feature_summary": null,
          "use_case": "Utilities",
          "score": 7.0,
          "factual_counterfactual": "### Pair 1: Concurrent Data Access\n\u2705 Factual: The `DashMap` struct in the `dashmap` crate provides thread-safe concurrent access to a hashmap, allowing multiple readers and writers without requiring external synchronization primitives.  \n\u274c Counterfactual: The `DashMap` struct requires a global mutex for synchronization, making it unsuitable for high-concurrency scenarios.  \n\n---\n\n### Pair 2: Iteration Support\n\u2705 Factual: The `dashmap` crate supports concurrent iteration over its entries, allowing threads to safely iterate while other threads modify the map.  \n\u274c Counterfactual: The `dashmap` crate does not support iteration over its entries if any thread is modifying the map, as this would lead to data races.  \n\n---\n\n### Pair 3: DashSet Functionality\n\u2705 Factual: The `DashSet` struct is a wrapper around `DashMap` that uses `()` as the value type, providing a convenient API for managing sets.  \n\u274c Counterfactual: The `DashSet` struct is an independent implementation unrelated to `DashMap` and does not use `()` as the value type.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-0f561137-3bc8911d-1751263049",
      "timestamp": "2025-06-30T05:57:29.085824+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]