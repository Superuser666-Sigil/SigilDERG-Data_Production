[
  {
    "execution_id": "exec-964eb20c-cd2f13d0-1751265556",
    "timestamp": "2025-06-30T06:39:16.424298+00:00",
    "sacred_chain": {
      "input_data": "three-d",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'three-d' -> 'three-d'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "three-d",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/three-d",
            "title": "three-d v0.18.2",
            "content": {
              "raw_markdown": "#  three-d v0.18.2\n2D/3D renderer - makes it simple to draw stuff across platforms (including web) \n  * [ #3d ](https://crates.io/keywords/3d)\n  * [ #gamedev ](https://crates.io/keywords/gamedev)\n  * [ #opengl ](https://crates.io/keywords/opengl)\n  * [ #webassembly ](https://crates.io/keywords/webassembly)\n  * [ #webgl ](https://crates.io/keywords/webgl)\n\n\n  * [ Readme ](https://crates.io/crates/three-d)\n  * [ 42 Versions ](https://crates.io/crates/three-d/versions)\n  * [ Dependencies ](https://crates.io/crates/three-d/dependencies)\n  * [ Dependents ](https://crates.io/crates/three-d/reverse_dependencies)\n\n\n## Metadata\n5 months ago \n2021 edition \n[ MIT ](https://choosealicense.com/licenses/mit)\n132 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add three-d\nOr add the following line to your Cargo.toml:\nthree-d = \"0.18.2\"\n## Repository\n[ github.com/asny/three-d ](https://github.com/asny/three-d)\n## Owners\n## Categories\n  * [Graphics](https://crates.io/categories/graphics)\n  * [Rendering](https://crates.io/categories/rendering)\n  * [Visualization](https://crates.io/categories/visualization)\n  * [WebAssembly](https://crates.io/categories/wasm)\n  * [Web programming](https://crates.io/categories/web-programming)\n\n\n[ Report crate ](https://crates.io/support?crate=three-d&inquire=crate-violation)\n### Stats Overview\n161,063 Downloads all time\n42 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  three-d v0.18.2\n2D/3D renderer - makes it simple to draw stuff across platforms (including web) \n  *  #3d \u27e81\u27e9\n  *  #gamedev \u27e82\u27e9\n  *  #opengl \u27e83\u27e9\n  *  #webassembly \u27e84\u27e9\n  *  #webgl \u27e85\u27e9\n\n\n  *  Readme \u27e86\u27e9\n  *  42 Versions \u27e87\u27e9\n  *  Dependencies \u27e88\u27e9\n  *  Dependents \u27e89\u27e9\n\n\n## Metadata\n5 months ago \n2021 edition \n MIT \u27e810\u27e9\n132 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add three-d\nOr add the following line to your Cargo.toml:\nthree-d = \"0.18.2\"\n## Repository\n github.com/asny/three-d \u27e811\u27e9\n## Owners\n## Categories\n  * Graphics\u27e812\u27e9\n  * Rendering\u27e813\u27e9\n  * Visualization\u27e814\u27e9\n  * WebAssembly\u27e815\u27e9\n  * Web programming\u27e816\u27e9\n\n\n Report crate \u27e817\u27e9\n### Stats Overview\n161,063 Downloads all time\n42 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/3d:  #3d \n\u27e82\u27e9 https://crates.io/keywords/gamedev:  #gamedev \n\u27e83\u27e9 https://crates.io/keywords/opengl:  #opengl \n\u27e84\u27e9 https://crates.io/keywords/webassembly:  #webassembly \n\u27e85\u27e9 https://crates.io/keywords/webgl:  #webgl \n\u27e86\u27e9 https://crates.io/crates/three-d:  Readme \n\u27e87\u27e9 https://crates.io/crates/three-d/versions:  42 Versions \n\u27e88\u27e9 https://crates.io/crates/three-d/dependencies:  Dependencies \n\u27e89\u27e9 https://crates.io/crates/three-d/reverse_dependencies:  Dependents \n\u27e810\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e811\u27e9 https://github.com/asny/three-d:  github.com/asny/three-d \n\u27e812\u27e9 https://crates.io/categories/graphics: Graphics\n\u27e813\u27e9 https://crates.io/categories/rendering: Rendering\n\u27e814\u27e9 https://crates.io/categories/visualization: Visualization\n\u27e815\u27e9 https://crates.io/categories/wasm: WebAssembly\n\u27e816\u27e9 https://crates.io/categories/web-programming: Web programming\n\u27e817\u27e9 https://crates.io/support?crate=three-d&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1509,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "119346.0343507"
          },
          "docs_rs": {
            "url": "https://docs.rs/three-d",
            "title": "Crate three_dCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/three-d/latest/three_d/all.html \"show sidebar\")\n# Crate three_dCopy item path\n[Settings](https://docs.rs/three-d/latest/settings.html)\n[Help](https://docs.rs/three-d/latest/help.html)\nSummary[Source](https://docs.rs/three-d/latest/src/three_d/lib.rs.html#1-25)\nExpand description\nA 3D renderer which enables out-of-the-box build to both desktop and web with the same code. See the [README](https://crates.io/crates/three-d) for more information and the [examples](https://github.com/asny/three-d/tree/master/examples) for how to use it.\n## Re-exports[\u00a7](https://docs.rs/three-d/latest/three_d/#reexports)\n\n`pub use renderer[](https://docs.rs/three-d/latest/three_d/renderer/index.html \"mod three_d::renderer\")::*;`\n\n\n`pub use window[](https://docs.rs/three-d/latest/three_d/window/index.html \"mod three_d::window\")::*;`\n\n## Modules[\u00a7](https://docs.rs/three-d/latest/three_d/#modules)\n\n[context](https://docs.rs/three-d/latest/three_d/context/index.html \"mod three_d::context\")\n    Low-level graphics abstraction layer which maps one-to-one with the OpenGL graphics API on native and WebGL2 graphics API on web. This is just a re-export of the [glow](https://crates.io/crates/glow) crate. Use this if you want to have complete control of a feature but be aware that there are no safety checks.\n\n[core](https://docs.rs/three-d/latest/three_d/core/index.html \"mod three_d::core\")\n    Mid-level modular abstractions of common graphics concepts such as buffer, texture, program, render target and so on. Can be combined with low-level calls in the [context](https://docs.rs/three-d/latest/three_d/context/index.html \"mod three_d::context\") module as well as high-level functionality in the [renderer](https://docs.rs/three-d/latest/three_d/renderer/index.html \"mod three_d::renderer\") module.\n\n[renderer](https://docs.rs/three-d/latest/three_d/renderer/index.html \"mod three_d::renderer\")\n    High-level features for easy rendering of different types of objects with different types of shading. Can be combined seamlessly with the mid-level features in the [core](https://docs.rs/three-d/latest/three_d/core/index.html \"mod three_d::core\") module as well as functionality in the [context](https://docs.rs/three-d/latest/three_d/context/index.html \"mod three_d::context\") module.\n\n[window](https://docs.rs/three-d/latest/three_d/window/index.html \"mod three_d::window\")\n    Window, event handling and context creation for easy setup.\n## Structs[\u00a7](https://docs.rs/three-d/latest/three_d/#structs)\n\n[GUI](https://docs.rs/three-d/latest/three_d/struct.GUI.html \"struct three_d::GUI\")`egui-gui`\n    Integration of [egui](https://crates.io/crates/egui), an immediate mode GUI.\n",
              "markdown_with_citations": "[](https://docs.rs/three-d/latest/three_d/all.html \"show sidebar\")\n# Crate three_dCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA 3D renderer which enables out-of-the-box build to both desktop and web with the same code. See the README\u27e84\u27e9 for more information and the examples\u27e85\u27e9 for how to use it.\n## Re-exports\u00a7\u27e86\u27e9\n\n`pub use renderer[](https://docs.rs/three-d/latest/three_d/renderer/index.html \"mod three_d::renderer\")::*;`\n\n\n`pub use window[](https://docs.rs/three-d/latest/three_d/window/index.html \"mod three_d::window\")::*;`\n\n## Modules\u00a7\u27e87\u27e9\n\ncontext\u27e88\u27e9\n    Low-level graphics abstraction layer which maps one-to-one with the OpenGL graphics API on native and WebGL2 graphics API on web. This is just a re-export of the glow\u27e89\u27e9 crate. Use this if you want to have complete control of a feature but be aware that there are no safety checks.\n\ncore\u27e810\u27e9\n    Mid-level modular abstractions of common graphics concepts such as buffer, texture, program, render target and so on. Can be combined with low-level calls in the context\u27e88\u27e9 module as well as high-level functionality in the renderer\u27e811\u27e9 module.\n\nrenderer\u27e811\u27e9\n    High-level features for easy rendering of different types of objects with different types of shading. Can be combined seamlessly with the mid-level features in the core\u27e810\u27e9 module as well as functionality in the context\u27e88\u27e9 module.\n\nwindow\u27e812\u27e9\n    Window, event handling and context creation for easy setup.\n## Structs\u00a7\u27e813\u27e9\n\nGUI\u27e814\u27e9`egui-gui`\n    Integration of egui\u27e815\u27e9, an immediate mode GUI.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/three-d/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/three-d/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/three-d/latest/src/three_d/lib.rs.html#1-25: Source\n\u27e84\u27e9 https://crates.io/crates/three-d: README\n\u27e85\u27e9 https://github.com/asny/three-d/tree/master/examples: examples\n\u27e86\u27e9 https://docs.rs/three-d/latest/three_d/#reexports: \u00a7\n\u27e87\u27e9 https://docs.rs/three-d/latest/three_d/#modules: \u00a7\n\u27e88\u27e9 https://docs.rs/three-d/latest/three_d/context/index.html: mod three_d::context - context\n\u27e89\u27e9 https://crates.io/crates/glow: glow\n\u27e810\u27e9 https://docs.rs/three-d/latest/three_d/core/index.html: mod three_d::core - core\n\u27e811\u27e9 https://docs.rs/three-d/latest/three_d/renderer/index.html: mod three_d::renderer - renderer\n\u27e812\u27e9 https://docs.rs/three-d/latest/three_d/window/index.html: mod three_d::window - window\n\u27e813\u27e9 https://docs.rs/three-d/latest/three_d/#structs: \u00a7\n\u27e814\u27e9 https://docs.rs/three-d/latest/three_d/struct.GUI.html: struct three_d::GUI - GUI\n\u27e815\u27e9 https://crates.io/crates/egui: egui\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 2686,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "119347.1547344"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/three-d",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [42 releases](https://lib.rs/crates/three-d/versions)\n0.18.2 |  Jan 30, 2025   \n---|---  \n0.18.0 |  Nov 28, 2024   \n0.17.0 |  Feb 26, 2024   \n0.16.3 |  Nov 9, 2023   \n0.1.0 |  Mar 22, 2020   \n#**23** in [Visualization](https://lib.rs/visualization \"Ways to view data, such as plotting or graphing.\")\nDownload history 731/week @ 2025-03-06 986/week @ 2025-03-13 795/week @ 2025-03-20 1185/week @ 2025-03-27 2009/week @ 2025-04-03 2089/week @ 2025-04-10 1773/week @ 2025-04-17 2006/week @ 2025-04-24 1595/week @ 2025-05-01 1644/week @ 2025-05-08 1161/week @ 2025-05-15 970/week @ 2025-05-22 1270/week @ 2025-05-29 1557/week @ 2025-06-05 1486/week @ 2025-06-12 1833/week @ 2025-06-19\n**6,466** downloads per month Used in [**9** crates (8 directly)](https://lib.rs/crates/three-d/rev)\n**MIT** license \n635KB  14K  SLoC\n![three-d logo](https://img.gs/czjpqfbdkz/full/https://asny.github.io/three-d/0.18/logo.png)\n# ``three-d``\n[![crates.io](https://img.shields.io/crates/v/three-d.svg)](https://crates.io/crates/three-d) [![Docs.rs](https://img.gs/czjpqfbdkz/full/https://docs.rs/three-d/badge.svg)](https://docs.rs/three-d) [![Continuous integration](https://img.gs/czjpqfbdkz/full/https://github.com/asny/three-d/actions/workflows/rust.yml/badge.svg)](https://github.com/asny/three-d/actions/workflows/rust.yml) [![MIT licensed](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/asny/three-d/blob/master/LICENSE)\n### What is it?\nA OpenGL/WebGL/OpenGL ES renderer which seeks to make graphics simple but still have the power to efficiently draw exactly what you want.\n``three-d``\n  * targets those who just want to draw something and those who want to avoid the tedious setup but still wants low-level access.\n  * makes it possible to combine high-level features with custom low-level implementations for example custom shaders.\n  * tries to do stuff in a few simple lines of code.\n  * aims to be as explicit as possible so there is no surprises for you - no hidden magic.\n  * targets desktop, web and mobile.\n\n\n``three-d`` can for example be used for\n  * data visualization\n  * image processing\n  * UI rendering\n  * tools (2D or 3D)\n  * games (2D or 3D)\n\n\n### Quotes\nQuotes from issues, discussions and pull requests:\n_\n..., thanks for writing such a nice 3d crate. I'm able to get what I want done without thousands of lines of boilerplate. It's truly a pleasure.\nI must say: Man, you did a hell of a job with this library! It's really beyond performant, easy and understanable to use and I am grateful, you made it open source! Thank you so much.\nThank you for making such a great 3d tool, It has been such a great use to me as most other rust based 3d tooling is either too low level, or a whole fully fledged game engine which does not fit my needs.\nFirst off, three-d is a joy to work with, even for someone with little experience in Rust (though admittedly, I do have some experience working with OpenGL).\nThanks for offering a really cool and simple to get started 3D Library in rust :)\nHi, thanks for such a cool and easy-to-use project!\nThanks for this library, it's been a joy to work with so far!\nFirst of, Great job for the library and therefore thank you!\nThanks so much for this library, it's looking excellent!\nThanks for the great project.\nThis project has been wonderful to use so far, thank you so much for you time and dedication.\n_\n### Structure\nThe crate consist of three main modules for drawing, ``context``, ``core`` and ``renderer``, and an optional ``window`` module for easy setup:\nModule | Description  \n---|---  \n[``context``](https://docs.rs/three-d/0/three_d/context/) | Low-level rendering module - requires a solid understanding of graphics concepts. Gives you complete control over both setup and rendering.  \n[``core``](https://docs.rs/three-d/0/three_d/core/) | Mid-level rendering module - requires at least some knowledge about graphics concepts. Use this if you want to write your own shaders, but don't want to spend time on setup and error handling. Can be combined with low-level functionality in the ``context`` module.  \n[``renderer``](https://docs.rs/three-d/0/three_d/renderer/) | High-level rendering module - requires no knowledge about graphics concepts. Use this if you just want to draw something. Features include functionality to rendering different types of standard objects with different types of shading. Can be combined seamlessly with the mid-level features in the ``core`` module as well as functionality in the ``context`` module.  \n[``window``](https://docs.rs/three-d/0/three_d/window/) (requires the ````\"`window`\"```` feature) | Window functionality on cross-platform native and web, which primarily is provided to make it easy to get started. In some cases, it is desirable to replace the default ``Window`` with a custom [winit](https://github.com/rust-windowing/winit) window as exemplified in the ``winit_window`` example. However, this module can also be replaced entirely by anything that provides an OpenGL or WebGL2 graphics context, for example [winit](https://github.com/rust-windowing/winit) and [glutin](https://github.com/rust-windowing/glutin), [wasm-bindgen](https://rustwasm.github.io/wasm-bindgen/introduction.html) or [eframe](https://github.com/emilk/egui/tree/master/crates/eframe).  \nIn addition, the [three-d-asset](https://github.com/asny/three-d-asset) crate enables loading, deserializing, serializing and saving 3D assets, for example 3D models, textures etc. Please make sure to use the same version of [three-d-asset](https://github.com/asny/three-d-asset) as defined in the ``Cargo.toml``.\n### [Examples](https://github.com/asny/three-d/tree/master/examples)\n![PBR example](https://img.gs/czjpqfbdkz/800/https://asny.github.io/three-d/0.18/pbr.png)\nSeveral examples covering most features can be found in the [examples folder](https://github.com/asny/three-d/tree/master/examples).\nHere you will also find an overview of the examples, build instructions and links to the web version of the examples.\nThe examples that fit with a specific release can be found in the branch for that release, ie. the examples for the [0.9 release](https://crates.io/crates/three-d/0.9.0) can be found in the [0.9 branch](https://github.com/asny/three-d/tree/0.9/examples).\n### Support\n``three-d`` is supported\n  * on all major desktop OS (Windows, Mac, Linux) by using OpenGL 3.3 graphics API. _Note: MacOS has deprecated OpenGL so it still works, but it might not perform optimally._\n  * in all major browsers (Chrome, Firefox, Edge and Safari) by compiling to WebAssembly and using the WebGL 2.0 graphics API (see ``web/README.md``)\n  * on embedded/mobile systems with OpenGL ES 3.0 support. _Note: this is not tested regularly, please report any issues._\n\n\n### State of the project\nMost parts are relatively stable, but do expect regular breaking changes until a 1.0.0 release. The master branch is work in progress, so if you want to avoid too many breaking changes and features not working, use a released version. If possible and feasible, functionality will be deprecated in one release, before it is removed in the next release.\n### Contributing\nFeature requests and bug reports are more than welcome; just open an issue or start a discussion. Contributions are highly appreciated; please feel free to reach out or simply create a pull request against the [master branch](https://github.com/asny/three-d/tree/master). To avoid waste of time, please reach out before making major changes.\n#### Dependencies\n~4\u201323MB  ~301K SLoC\n  * [cgmath](https://lib.rs/crates/cgmath \"new\") 0.18\n  * [glow](https://lib.rs/crates/glow \"obsolete\") 0.14\n  * [window](https://lib.rs/crates/three-d/features#feature-window \"default feature\") [glutin](https://lib.rs/crates/glutin \"obsolete\") 0.30 not wasm32\n  * [window](https://lib.rs/crates/three-d/features#feature-window \"default feature\") [raw-window-handle](https://lib.rs/crates/raw-window-handle \"obsolete\") 0.5 not wasm32\n  * [window](https://lib.rs/crates/three-d/features#feature-window \"default feature\") [serde](https://lib.rs/crates/serde \"1\")[+derive](https://lib.rs/crates/serde/features#feature-derive) wasm32\n  * [window](https://lib.rs/crates/three-d/features#feature-window \"default feature\") [serde-wasm-bindgen](https://lib.rs/crates/serde-wasm-bindgen \"new\") 0.6 wasm32\n  * [window](https://lib.rs/crates/three-d/features#feature-window \"default feature\") [wasm-bindgen](https://lib.rs/crates/wasm-bindgen \"0.2\") wasm32\n  * [window](https://lib.rs/crates/three-d/features#feature-window \"default feature\") [web-sys](https://lib.rs/crates/web-sys \"0.3\")[+Document](https://lib.rs/crates/web-sys/features#feature-Document)[+HtmlCollection](https://lib.rs/crates/web-sys/features#feature-HtmlCollection)[+HtmlCanvasElement](https://lib.rs/crates/web-sys/features#feature-HtmlCanvasElement)[+Window](https://lib.rs/crates/web-sys/features#feature-Window) wasm32\n  * [window](https://lib.rs/crates/three-d/features#feature-window \"default feature\") [winit](https://lib.rs/crates/winit \"obsolete\") 0.28\n  * [open-enum](https://lib.rs/crates/open-enum \"0.5\")\n  * [thiserror](https://lib.rs/crates/thiserror \"new\") 2.0\n  * [three-d-asset](https://lib.rs/crates/three-d-asset \"new\") 0.9\n  * [egui-gui?](https://lib.rs/crates/three-d/features#feature-egui-gui \"optional feature\") [egui](https://lib.rs/crates/egui \"obsolete\") 0.29\n  * [egui-gui?](https://lib.rs/crates/three-d/features#feature-egui-gui \"optional feature\") [egui_glow](https://lib.rs/crates/egui_glow \"obsolete\") 0.29\n  * [egui-gui?](https://lib.rs/crates/three-d/features#feature-egui-gui \"optional feature\") [getrandom](https://lib.rs/crates/getrandom \"outdated\") 0.2[+js](https://lib.rs/crates/getrandom/features#feature-js)\n  * [headless?](https://lib.rs/crates/three-d/features#feature-headless \"optional feature\") [glutin](https://lib.rs/crates/glutin \"renamed glutin_029, obsolete\") 0.29 not wasm32\n  * [ optional ](https://lib.rs/crates/three-d/features#feature-image \"image is optional feature\") [image](https://lib.rs/crates/image \"new\") 0.25[+png](https://lib.rs/crates/image/features#feature-png) not wasm32\n  * [instant](https://lib.rs/crates/instant \"deprecated\") 0.1.11 wasm32\n  * [text?](https://lib.rs/crates/three-d/features#feature-text \"optional feature\") [lyon](https://lib.rs/crates/lyon \"new\") 1.0\n  * [text?](https://lib.rs/crates/three-d/features#feature-text \"optional feature\") [swash](https://lib.rs/crates/swash \"outdated\") 0.1\n\n\n  * dev  [noise](https://lib.rs/crates/noise \"obsolete\") 0.6\n  * dev  [rand](https://lib.rs/crates/rand \"obsolete\") 0.7\n  * dev  [tokio](https://lib.rs/crates/tokio \"1\")[+macros](https://lib.rs/crates/tokio/features#feature-macros)[+rt-multi-thread](https://lib.rs/crates/tokio/features#feature-rt-multi-thread) not wasm32\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  42 releases\u27e81\u27e9\n0.18.2 |  Jan 30, 2025   \n---|---  \n0.18.0 |  Nov 28, 2024   \n0.17.0 |  Feb 26, 2024   \n0.16.3 |  Nov 9, 2023   \n0.1.0 |  Mar 22, 2020   \n#**23** in Visualization\u27e82\u27e9\nDownload history 731/week @ 2025-03-06 986/week @ 2025-03-13 795/week @ 2025-03-20 1185/week @ 2025-03-27 2009/week @ 2025-04-03 2089/week @ 2025-04-10 1773/week @ 2025-04-17 2006/week @ 2025-04-24 1595/week @ 2025-05-01 1644/week @ 2025-05-08 1161/week @ 2025-05-15 970/week @ 2025-05-22 1270/week @ 2025-05-29 1557/week @ 2025-06-05 1486/week @ 2025-06-12 1833/week @ 2025-06-19\n**6,466** downloads per month Used in **9** crates (8 directly)\u27e83\u27e9\n**MIT** license \n635KB  14K  SLoC\n![three-d logo\u27e84\u27e9]\n# ``three-d``\n![crates.io\u27e85\u27e9](https://crates.io/crates/three-d) ![Docs.rs\u27e86\u27e9](https://docs.rs/three-d) ![Continuous integration\u27e87\u27e9](https://github.com/asny/three-d/actions/workflows/rust.yml) ![MIT licensed\u27e88\u27e9](https://github.com/asny/three-d/blob/master/LICENSE)\n### What is it?\nA OpenGL/WebGL/OpenGL ES renderer which seeks to make graphics simple but still have the power to efficiently draw exactly what you want.\n``three-d``\n  * targets those who just want to draw something and those who want to avoid the tedious setup but still wants low-level access.\n  * makes it possible to combine high-level features with custom low-level implementations for example custom shaders.\n  * tries to do stuff in a few simple lines of code.\n  * aims to be as explicit as possible so there is no surprises for you - no hidden magic.\n  * targets desktop, web and mobile.\n\n\n``three-d`` can for example be used for\n  * data visualization\n  * image processing\n  * UI rendering\n  * tools (2D or 3D)\n  * games (2D or 3D)\n\n\n### Quotes\nQuotes from issues, discussions and pull requests:\n_\n..., thanks for writing such a nice 3d crate. I'm able to get what I want done without thousands of lines of boilerplate. It's truly a pleasure.\nI must say: Man, you did a hell of a job with this library! It's really beyond performant, easy and understanable to use and I am grateful, you made it open source! Thank you so much.\nThank you for making such a great 3d tool, It has been such a great use to me as most other rust based 3d tooling is either too low level, or a whole fully fledged game engine which does not fit my needs.\nFirst off, three-d is a joy to work with, even for someone with little experience in Rust (though admittedly, I do have some experience working with OpenGL).\nThanks for offering a really cool and simple to get started 3D Library in rust :)\nHi, thanks for such a cool and easy-to-use project!\nThanks for this library, it's been a joy to work with so far!\nFirst of, Great job for the library and therefore thank you!\nThanks so much for this library, it's looking excellent!\nThanks for the great project.\nThis project has been wonderful to use so far, thank you so much for you time and dedication.\n_\n### Structure\nThe crate consist of three main modules for drawing, ``context``, ``core`` and ``renderer``, and an optional ``window`` module for easy setup:\nModule | Description  \n---|---  \n``context``\u27e89\u27e9 | Low-level rendering module - requires a solid understanding of graphics concepts. Gives you complete control over both setup and rendering.  \n``core``\u27e810\u27e9 | Mid-level rendering module - requires at least some knowledge about graphics concepts. Use this if you want to write your own shaders, but don't want to spend time on setup and error handling. Can be combined with low-level functionality in the ``context`` module.  \n``renderer``\u27e811\u27e9 | High-level rendering module - requires no knowledge about graphics concepts. Use this if you just want to draw something. Features include functionality to rendering different types of standard objects with different types of shading. Can be combined seamlessly with the mid-level features in the ``core`` module as well as functionality in the ``context`` module.  \n``window``\u27e812\u27e9 (requires the ````\"`window`\"```` feature) | Window functionality on cross-platform native and web, which primarily is provided to make it easy to get started. In some cases, it is desirable to replace the default ``Window`` with a custom winit\u27e813\u27e9 window as exemplified in the ``winit_window`` example. However, this module can also be replaced entirely by anything that provides an OpenGL or WebGL2 graphics context, for example winit\u27e813\u27e9 and glutin\u27e814\u27e9, wasm-bindgen\u27e815\u27e9 or eframe\u27e816\u27e9.  \nIn addition, the three-d-asset\u27e817\u27e9 crate enables loading, deserializing, serializing and saving 3D assets, for example 3D models, textures etc. Please make sure to use the same version of three-d-asset\u27e817\u27e9 as defined in the ``Cargo.toml``.\n### Examples\u27e818\u27e9\n![PBR example\u27e819\u27e9]\nSeveral examples covering most features can be found in the examples folder\u27e818\u27e9.\nHere you will also find an overview of the examples, build instructions and links to the web version of the examples.\nThe examples that fit with a specific release can be found in the branch for that release, ie. the examples for the 0.9 release\u27e820\u27e9 can be found in the 0.9 branch\u27e821\u27e9.\n### Support\n``three-d`` is supported\n  * on all major desktop OS (Windows, Mac, Linux) by using OpenGL 3.3 graphics API. _Note: MacOS has deprecated OpenGL so it still works, but it might not perform optimally._\n  * in all major browsers (Chrome, Firefox, Edge and Safari) by compiling to WebAssembly and using the WebGL 2.0 graphics API (see ``web/README.md``)\n  * on embedded/mobile systems with OpenGL ES 3.0 support. _Note: this is not tested regularly, please report any issues._\n\n\n### State of the project\nMost parts are relatively stable, but do expect regular breaking changes until a 1.0.0 release. The master branch is work in progress, so if you want to avoid too many breaking changes and features not working, use a released version. If possible and feasible, functionality will be deprecated in one release, before it is removed in the next release.\n### Contributing\nFeature requests and bug reports are more than welcome; just open an issue or start a discussion. Contributions are highly appreciated; please feel free to reach out or simply create a pull request against the master branch\u27e822\u27e9. To avoid waste of time, please reach out before making major changes.\n#### Dependencies\n~4\u201323MB  ~301K SLoC\n  * cgmath\u27e823\u27e9 0.18\n  * glow\u27e824\u27e9 0.14\n  * window\u27e825\u27e9 glutin\u27e826\u27e9 0.30 not wasm32\n  * window\u27e825\u27e9 raw-window-handle\u27e827\u27e9 0.5 not wasm32\n  * window\u27e825\u27e9 serde\u27e828\u27e9+derive\u27e829\u27e9 wasm32\n  * window\u27e825\u27e9 serde-wasm-bindgen\u27e830\u27e9 0.6 wasm32\n  * window\u27e825\u27e9 wasm-bindgen\u27e831\u27e9 wasm32\n  * window\u27e825\u27e9 web-sys\u27e832\u27e9+Document\u27e833\u27e9+HtmlCollection\u27e834\u27e9+HtmlCanvasElement\u27e835\u27e9+Window\u27e836\u27e9 wasm32\n  * window\u27e825\u27e9 winit\u27e837\u27e9 0.28\n  * open-enum\u27e838\u27e9\n  * thiserror\u27e839\u27e9 2.0\n  * three-d-asset\u27e840\u27e9 0.9\n  * egui-gui?\u27e841\u27e9 egui\u27e842\u27e9 0.29\n  * egui-gui?\u27e841\u27e9 egui_glow\u27e843\u27e9 0.29\n  * egui-gui?\u27e841\u27e9 getrandom\u27e844\u27e9 0.2+js\u27e845\u27e9\n  * headless?\u27e846\u27e9 glutin\u27e826\u27e9 0.29 not wasm32\n  *  optional \u27e847\u27e9 image\u27e848\u27e9 0.25+png\u27e849\u27e9 not wasm32\n  * instant\u27e850\u27e9 0.1.11 wasm32\n  * text?\u27e851\u27e9 lyon\u27e852\u27e9 1.0\n  * text?\u27e851\u27e9 swash\u27e853\u27e9 0.1\n\n\n  * dev  noise\u27e854\u27e9 0.6\n  * dev  rand\u27e855\u27e9 0.7\n  * dev  tokio\u27e856\u27e9+macros\u27e857\u27e9+rt-multi-thread\u27e858\u27e9 not wasm32\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/three-d/versions: 42 releases\n\u27e82\u27e9 https://lib.rs/visualization: Ways to view data, such as plotting or graphing. - Visualization\n\u27e83\u27e9 https://lib.rs/crates/three-d/rev: **9** crates (8 directly)\n\u27e84\u27e9 https://img.gs/czjpqfbdkz/full/https://asny.github.io/three-d/0.18/logo.png: three-d logo\n\u27e85\u27e9 https://img.shields.io/crates/v/three-d.svg: ![crates.io\n\u27e86\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/three-d/badge.svg: ![Docs.rs\n\u27e87\u27e9 https://img.gs/czjpqfbdkz/full/https://github.com/asny/three-d/actions/workflows/rust.yml/badge.svg: ![Continuous integration\n\u27e88\u27e9 https://img.shields.io/badge/license-MIT-blue.svg: ![MIT licensed\n\u27e89\u27e9 https://docs.rs/three-d/0/three_d/context/: ``context``\n\u27e810\u27e9 https://docs.rs/three-d/0/three_d/core/: ``core``\n\u27e811\u27e9 https://docs.rs/three-d/0/three_d/renderer/: ``renderer``\n\u27e812\u27e9 https://docs.rs/three-d/0/three_d/window/: ``window``\n\u27e813\u27e9 https://github.com/rust-windowing/winit: winit\n\u27e814\u27e9 https://github.com/rust-windowing/glutin: glutin\n\u27e815\u27e9 https://rustwasm.github.io/wasm-bindgen/introduction.html: wasm-bindgen\n\u27e816\u27e9 https://github.com/emilk/egui/tree/master/crates/eframe: eframe\n\u27e817\u27e9 https://github.com/asny/three-d-asset: three-d-asset\n\u27e818\u27e9 https://github.com/asny/three-d/tree/master/examples: Examples\n\u27e819\u27e9 https://img.gs/czjpqfbdkz/800/https://asny.github.io/three-d/0.18/pbr.png: PBR example\n\u27e820\u27e9 https://crates.io/crates/three-d/0.9.0: 0.9 release\n\u27e821\u27e9 https://github.com/asny/three-d/tree/0.9/examples: 0.9 branch\n\u27e822\u27e9 https://github.com/asny/three-d/tree/master: master branch\n\u27e823\u27e9 https://lib.rs/crates/cgmath: new - cgmath\n\u27e824\u27e9 https://lib.rs/crates/glow: obsolete - glow\n\u27e825\u27e9 https://lib.rs/crates/three-d/features#feature-window: default feature - window\n\u27e826\u27e9 https://lib.rs/crates/glutin: obsolete - glutin\n\u27e827\u27e9 https://lib.rs/crates/raw-window-handle: obsolete - raw-window-handle\n\u27e828\u27e9 https://lib.rs/crates/serde: 1 - serde\n\u27e829\u27e9 https://lib.rs/crates/serde/features#feature-derive: +derive\n\u27e830\u27e9 https://lib.rs/crates/serde-wasm-bindgen: new - serde-wasm-bindgen\n\u27e831\u27e9 https://lib.rs/crates/wasm-bindgen: 0.2 - wasm-bindgen\n\u27e832\u27e9 https://lib.rs/crates/web-sys: 0.3 - web-sys\n\u27e833\u27e9 https://lib.rs/crates/web-sys/features#feature-Document: +Document\n\u27e834\u27e9 https://lib.rs/crates/web-sys/features#feature-HtmlCollection: +HtmlCollection\n\u27e835\u27e9 https://lib.rs/crates/web-sys/features#feature-HtmlCanvasElement: +HtmlCanvasElement\n\u27e836\u27e9 https://lib.rs/crates/web-sys/features#feature-Window: +Window\n\u27e837\u27e9 https://lib.rs/crates/winit: obsolete - winit\n\u27e838\u27e9 https://lib.rs/crates/open-enum: 0.5 - open-enum\n\u27e839\u27e9 https://lib.rs/crates/thiserror: new - thiserror\n\u27e840\u27e9 https://lib.rs/crates/three-d-asset: new - three-d-asset\n\u27e841\u27e9 https://lib.rs/crates/three-d/features#feature-egui-gui: optional feature - egui-gui?\n\u27e842\u27e9 https://lib.rs/crates/egui: obsolete - egui\n\u27e843\u27e9 https://lib.rs/crates/egui_glow: obsolete - egui_glow\n\u27e844\u27e9 https://lib.rs/crates/getrandom: outdated - getrandom\n\u27e845\u27e9 https://lib.rs/crates/getrandom/features#feature-js: +js\n\u27e846\u27e9 https://lib.rs/crates/three-d/features#feature-headless: optional feature - headless?\n\u27e847\u27e9 https://lib.rs/crates/three-d/features#feature-image: image is optional feature -  optional \n\u27e848\u27e9 https://lib.rs/crates/image: new - image\n\u27e849\u27e9 https://lib.rs/crates/image/features#feature-png: +png\n\u27e850\u27e9 https://lib.rs/crates/instant: deprecated - instant\n\u27e851\u27e9 https://lib.rs/crates/three-d/features#feature-text: optional feature - text?\n\u27e852\u27e9 https://lib.rs/crates/lyon: new - lyon\n\u27e853\u27e9 https://lib.rs/crates/swash: outdated - swash\n\u27e854\u27e9 https://lib.rs/crates/noise: obsolete - noise\n\u27e855\u27e9 https://lib.rs/crates/rand: obsolete - rand\n\u27e856\u27e9 https://lib.rs/crates/tokio: 1 - tokio\n\u27e857\u27e9 https://lib.rs/crates/tokio/features#feature-macros: +macros\n\u27e858\u27e9 https://lib.rs/crates/tokio/features#feature-rt-multi-thread: +rt-multi-thread\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 10844,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "119347.5655936"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@1.3.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-1.3.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-1.3.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libbitflags-e7afb5616860f76a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg_aliases@0.1.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg_aliases-0.1.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_aliases",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg_aliases-0.1.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libcfg_aliases-3f1d76b712763cb1.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libcfg_aliases-3f1d76b712763cb1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.14",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.14\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libunicode_ident-6d74e9fad9aef6d6.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libunicode_ident-6d74e9fad9aef6d6.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "byteorder",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libbyteorder-0ff5a2bbb0a25f50.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.22",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.22\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.22\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\liblog-3da876c1190a34ea.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\liblog-3da876c1190a34ea.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#raw-window-handle@0.5.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\raw-window-handle-0.5.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "raw_window_handle",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\raw-window-handle-0.5.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libraw_window_handle-e70ac1949dfbccc8.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#instant@0.1.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\instant-0.1.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "instant",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\instant-0.1.13\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "js-sys",
                "wasm-bindgen",
                "wasm-bindgen_rs",
                "web-sys"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libinstant-21c7c484f9d556ab.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.20.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.20.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "once_cell",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.20.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "race",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libonce_cell-aee3b9768c8bcaf5.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.11\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.11\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\libm-7208c179c1df3d5f\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\libm-7208c179c1df3d5f\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos_api@3.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\khronos_api-1a0d65ec9bed582f\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\khronos_api-1a0d65ec9bed582f\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.42.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.42.2\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.42.2\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\windows_x86_64_msvc-851aba7a8c00e0c4\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\windows_x86_64_msvc-851aba7a8c00e0c4\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.22",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.22\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.22\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\liblog-e1e9087e6a7c95fb.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cgmath@0.18.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cgmath-0.18.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cgmath-0.18.0\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\cgmath-ec3a623fd537bd0d\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\cgmath-ec3a623fd537bd0d\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.11",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\libm-dd61ca5f416ac130\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.92\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.92\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\proc-macro2-8c9ab50c3af1cc80\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\proc-macro2-8c9ab50c3af1cc80\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.42.2",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.42.2\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\windows_x86_64_msvc-031deefdda752edf\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.3\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.3\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\thiserror-fa7a385fd9192e62\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\thiserror-fa7a385fd9192e62\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos_api@3.1.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\khronos_api-96b65c82ef4c8d63\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cgmath@0.18.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\cgmath-de3479246664ad84\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winit@0.28.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winit-0.28.7\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winit-0.28.7\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "mio",
                "percent-encoding",
                "sctk",
                "sctk-adwaita",
                "wayland",
                "wayland-client",
                "wayland-commons",
                "wayland-csd-adwaita",
                "wayland-dlopen",
                "wayland-protocols",
                "x11",
                "x11-dl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\winit-2777e6a0e1a5aeae\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\winit-2777e6a0e1a5aeae\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "errhandlingapi",
                "libloaderapi"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\winapi-88166d3dbd4063a8\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\winapi-88166d3dbd4063a8\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.42.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.42.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.42.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libwindows_x86_64_msvc-07e0f24351ec5dd5.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin@0.30.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-0.30.10\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-0.30.10\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "egl",
                "glutin_egl_sys",
                "glutin_glx_sys",
                "glutin_wgl_sys",
                "glx",
                "libloading",
                "wayland",
                "wayland-sys",
                "wgl",
                "windows-sys",
                "x11",
                "x11-dl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\glutin-8f793ccdd02e6b4c\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\glutin-8f793ccdd02e6b4c\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\proc-macro2-d4cbd6b92c18c9b0\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winit@0.28.7",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "windows_platform"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\winit-3bbf3eec6563dc8c\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.3",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\thiserror-f1cad5b998a1b824\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos_api@3.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "khronos_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libkhronos_api-3da21ebdc038de2b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libkhronos_api-3da21ebdc038de2b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "linked_libs": [
                "dylib=kernel32",
                "dylib=user32"
              ],
              "linked_paths": [],
              "cfgs": [
                "feature=\"excpt\"",
                "feature=\"minwindef\"",
                "feature=\"basetsd\"",
                "feature=\"ntdef\"",
                "feature=\"vcruntime\"",
                "feature=\"ktmtypes\"",
                "feature=\"winnt\"",
                "feature=\"guiddef\""
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\winapi-9c85dc6b4b5b742d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.42.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.42.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.42.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libwindows_targets-2bf5f4e18bfc2c27.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin@0.30.10",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "egl_backend",
                "wgl_backend"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\glutin-67ed5c325b5f5651\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "libm",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\num-traits-3ef67e0351d6647c\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\num-traits-3ef67e0351d6647c\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libm",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.11\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\liblibm-d8ff8fb683d8bb4d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_total_cmp"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\num-traits-df8144cd52d4f5ea\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#xml-rs@0.8.23",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\xml-rs-0.8.23\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "xml",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\xml-rs-0.8.23\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libxml-c946c1dba1a4e2f2.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libxml-c946c1dba1a4e2f2.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.92\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.92\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libproc_macro2-d5fd467c52aaa1fd.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libproc_macro2-d5fd467c52aaa1fd.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gl_generator@0.14.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gl_generator-0.14.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gl_generator",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gl_generator-0.14.0\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libgl_generator-5b5463c73c909b89.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libgl_generator-5b5463c73c909b89.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glow@0.14.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glow-0.14.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glow",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glow-0.14.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libglow-b593241b07a9981e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.37\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.37\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libquote-ecc6cad931967ccf.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libquote-ecc6cad931967ccf.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "winapi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "errhandlingapi",
                "libloaderapi"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libwinapi-0b4395308ab7e6d4.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libloading@0.7.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libloading-0.7.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libloading",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libloading-0.7.4\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\liblibloading-71c67db8022d62c0.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_traits",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "libm",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libnum_traits-a5fd2644fca85495.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#approx@0.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\approx-0.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "approx",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\approx-0.4.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libapprox-ca75d8b23630ac2a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_wgl_sys@0.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.4.0\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\glutin_wgl_sys-b09de569cb0430ff\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\glutin_wgl_sys-b09de569cb0430ff\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_egl_sys@0.5.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_egl_sys-0.5.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_egl_sys-0.5.1\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\glutin_egl_sys-3948064d62884b00\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\glutin_egl_sys-3948064d62884b00\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_wgl_sys@0.4.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\glutin_wgl_sys-1da2c74798438dac\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_egl_sys@0.5.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\glutin_egl_sys-537f5e80b265f399\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_wgl_sys@0.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glutin_wgl_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.4.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libglutin_wgl_sys-c28b8b131494968a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cgmath@0.18.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cgmath-0.18.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cgmath",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cgmath-0.18.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libcgmath-b7e9f4480e9ed399.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.89\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.89\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "full",
                "parsing",
                "printing",
                "proc-macro",
                "visit"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libsyn-7ee24f3ee86c1ba6.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libsyn-7ee24f3ee86c1ba6.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#open-enum-derive@0.5.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\open-enum-derive-0.5.2\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "open_enum_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\open-enum-derive-0.5.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\open_enum_derive-9e7f42665b11f255.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\open_enum_derive-9e7f42665b11f255.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\open_enum_derive-9e7f42665b11f255.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\open_enum_derive-9e7f42665b11f255.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zerocopy-derive@0.6.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerocopy-derive-0.6.6\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "zerocopy_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerocopy-derive-0.6.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\zerocopy_derive-ed53bd0d55703ae7.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\zerocopy_derive-ed53bd0d55703ae7.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\zerocopy_derive-ed53bd0d55703ae7.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\zerocopy_derive-ed53bd0d55703ae7.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#open-enum@0.5.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\open-enum-0.5.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "open_enum",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\open-enum-0.5.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libopen_enum-a9eeb13a5b478118.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@2.0.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-2.0.3\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "thiserror_impl",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-2.0.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\thiserror_impl-ae2e0f89a1c72c60.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\thiserror_impl-ae2e0f89a1c72c60.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\thiserror_impl-ae2e0f89a1c72c60.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\thiserror_impl-ae2e0f89a1c72c60.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.45.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.45.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.45.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Devices",
                "Win32_Devices_HumanInterfaceDevice",
                "Win32_Foundation",
                "Win32_Globalization",
                "Win32_Graphics",
                "Win32_Graphics_Dwm",
                "Win32_Graphics_Gdi",
                "Win32_Graphics_OpenGL",
                "Win32_Media",
                "Win32_System",
                "Win32_System_Com",
                "Win32_System_Com_StructuredStorage",
                "Win32_System_LibraryLoader",
                "Win32_System_Ole",
                "Win32_System_SystemInformation",
                "Win32_System_SystemServices",
                "Win32_System_Threading",
                "Win32_System_WindowsProgramming",
                "Win32_UI",
                "Win32_UI_Accessibility",
                "Win32_UI_Controls",
                "Win32_UI_HiDpi",
                "Win32_UI_Input",
                "Win32_UI_Input_Ime",
                "Win32_UI_Input_KeyboardAndMouse",
                "Win32_UI_Input_Pointer",
                "Win32_UI_Input_Touch",
                "Win32_UI_Shell",
                "Win32_UI_TextServices",
                "Win32_UI_WindowsAndMessaging",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libwindows_sys-ef58dbe2609bb230.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.6.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerocopy-0.6.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zerocopy",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerocopy-0.6.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libzerocopy-395a715f71d604ca.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_egl_sys@0.5.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_egl_sys-0.5.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glutin_egl_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_egl_sys-0.5.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libglutin_egl_sys-886c6df384c6170a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "thiserror",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libthiserror-db8ee48ec36687eb.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#half@2.4.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\half-2.4.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "half",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\half-2.4.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "num-traits",
                "std",
                "zerocopy"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libhalf-d59e7c4cde15e5f8.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#three-d-asset@0.9.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\three-d-asset-0.9.0\\Cargo.toml",
              "target": {
                "kind": [
                  "cdylib",
                  "rlib"
                ],
                "crate_types": [
                  "cdylib",
                  "rlib"
                ],
                "name": "three_d_asset",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\three-d-asset-0.9.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libthree_d_asset-bea32388e657377c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin@0.30.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-0.30.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glutin",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-0.30.10\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "egl",
                "glutin_egl_sys",
                "glutin_glx_sys",
                "glutin_wgl_sys",
                "glx",
                "libloading",
                "wayland",
                "wayland-sys",
                "wgl",
                "windows-sys",
                "x11",
                "x11-dl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libglutin-bd9096a879615833.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winit@0.28.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winit-0.28.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "winit",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winit-0.28.7\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "mio",
                "percent-encoding",
                "sctk",
                "sctk-adwaita",
                "wayland",
                "wayland-client",
                "wayland-commons",
                "wayland-csd-adwaita",
                "wayland-dlopen",
                "wayland-protocols",
                "x11",
                "x11-dl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libwinit-b17a52b5cf4ae528.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "glutin",
                "raw-window-handle",
                "serde",
                "serde-wasm-bindgen",
                "wasm-bindgen",
                "web-sys",
                "window",
                "winit"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libthree_d-4c72a2335506fc37.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.92\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.92\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\proc-macro2-8c9ab50c3af1cc80\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\proc-macro2-8c9ab50c3af1cc80\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\proc-macro2-d4cbd6b92c18c9b0\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.14",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.14\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libunicode_ident-6d74e9fad9aef6d6.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libunicode_ident-6d74e9fad9aef6d6.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos_api@3.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\khronos_api-1a0d65ec9bed582f\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\khronos_api-1a0d65ec9bed582f\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#xml-rs@0.8.23",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\xml-rs-0.8.23\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "xml",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\xml-rs-0.8.23\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libxml-c946c1dba1a4e2f2.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libxml-c946c1dba1a4e2f2.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.22",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.22\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.22\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\liblog-3da876c1190a34ea.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\liblog-3da876c1190a34ea.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.11\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.11\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\libm-7208c179c1df3d5f\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\libm-7208c179c1df3d5f\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.42.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.42.2\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.42.2\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\windows_x86_64_msvc-851aba7a8c00e0c4\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\windows_x86_64_msvc-851aba7a8c00e0c4\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg_aliases@0.1.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg_aliases-0.1.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_aliases",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg_aliases-0.1.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libcfg_aliases-3f1d76b712763cb1.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libcfg_aliases-3f1d76b712763cb1.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "errhandlingapi",
                "libloaderapi"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\winapi-88166d3dbd4063a8\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\winapi-88166d3dbd4063a8\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "byteorder",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libbyteorder-0ff5a2bbb0a25f50.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.3\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.3\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\thiserror-fa7a385fd9192e62\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\thiserror-fa7a385fd9192e62\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cgmath@0.18.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cgmath-0.18.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cgmath-0.18.0\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\cgmath-ec3a623fd537bd0d\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\cgmath-ec3a623fd537bd0d\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.20.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.20.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "once_cell",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.20.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "race",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libonce_cell-aee3b9768c8bcaf5.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#raw-window-handle@0.5.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\raw-window-handle-0.5.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "raw_window_handle",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\raw-window-handle-0.5.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libraw_window_handle-e70ac1949dfbccc8.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.92\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.92\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libproc_macro2-d5fd467c52aaa1fd.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libproc_macro2-d5fd467c52aaa1fd.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos_api@3.1.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\khronos_api-96b65c82ef4c8d63\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "libm",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\num-traits-3ef67e0351d6647c\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\num-traits-3ef67e0351d6647c\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.42.2",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.42.2\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\windows_x86_64_msvc-031deefdda752edf\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.11",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\libm-dd61ca5f416ac130\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "linked_libs": [
                "dylib=kernel32",
                "dylib=user32"
              ],
              "linked_paths": [],
              "cfgs": [
                "feature=\"excpt\"",
                "feature=\"minwindef\"",
                "feature=\"basetsd\"",
                "feature=\"ntdef\"",
                "feature=\"vcruntime\"",
                "feature=\"ktmtypes\"",
                "feature=\"winnt\"",
                "feature=\"guiddef\""
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\winapi-9c85dc6b4b5b742d\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cgmath@0.18.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\cgmath-de3479246664ad84\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winit@0.28.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winit-0.28.7\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winit-0.28.7\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "mio",
                "percent-encoding",
                "sctk",
                "sctk-adwaita",
                "wayland",
                "wayland-client",
                "wayland-commons",
                "wayland-csd-adwaita",
                "wayland-dlopen",
                "wayland-protocols",
                "x11",
                "x11-dl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\winit-2777e6a0e1a5aeae\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\winit-2777e6a0e1a5aeae\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin@0.30.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-0.30.10\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-0.30.10\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "egl",
                "glutin_egl_sys",
                "glutin_glx_sys",
                "glutin_wgl_sys",
                "glx",
                "libloading",
                "wayland",
                "wayland-sys",
                "wgl",
                "windows-sys",
                "x11",
                "x11-dl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\glutin-8f793ccdd02e6b4c\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\glutin-8f793ccdd02e6b4c\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.3",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\thiserror-f1cad5b998a1b824\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@1.3.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-1.3.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-1.3.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libbitflags-e7afb5616860f76a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#instant@0.1.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\instant-0.1.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "instant",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\instant-0.1.13\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "js-sys",
                "wasm-bindgen",
                "wasm-bindgen_rs",
                "web-sys"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libinstant-21c7c484f9d556ab.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.22",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.22\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.22\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\liblog-e1e9087e6a7c95fb.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glow@0.14.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glow-0.14.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glow",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glow-0.14.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libglow-b593241b07a9981e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.37\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.37\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libquote-ecc6cad931967ccf.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libquote-ecc6cad931967ccf.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos_api@3.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "khronos_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libkhronos_api-3da21ebdc038de2b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libkhronos_api-3da21ebdc038de2b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libm",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.11\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\liblibm-d8ff8fb683d8bb4d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.42.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.42.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.42.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libwindows_x86_64_msvc-07e0f24351ec5dd5.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_total_cmp"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\num-traits-df8144cd52d4f5ea\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "winapi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "errhandlingapi",
                "libloaderapi"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libwinapi-0b4395308ab7e6d4.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winit@0.28.7",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "windows_platform"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\winit-3bbf3eec6563dc8c\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin@0.30.10",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "egl_backend",
                "wgl_backend"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\glutin-67ed5c325b5f5651\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.89\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.89\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "full",
                "parsing",
                "printing",
                "proc-macro",
                "visit"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libsyn-7ee24f3ee86c1ba6.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libsyn-7ee24f3ee86c1ba6.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gl_generator@0.14.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gl_generator-0.14.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gl_generator",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gl_generator-0.14.0\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libgl_generator-5b5463c73c909b89.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libgl_generator-5b5463c73c909b89.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_traits",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "libm",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libnum_traits-a5fd2644fca85495.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.42.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.42.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.42.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libwindows_targets-2bf5f4e18bfc2c27.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libloading@0.7.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libloading-0.7.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libloading",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libloading-0.7.4\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\liblibloading-71c67db8022d62c0.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zerocopy-derive@0.6.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerocopy-derive-0.6.6\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "zerocopy_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerocopy-derive-0.6.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\zerocopy_derive-ed53bd0d55703ae7.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\zerocopy_derive-ed53bd0d55703ae7.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\zerocopy_derive-ed53bd0d55703ae7.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\zerocopy_derive-ed53bd0d55703ae7.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.45.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.45.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.45.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Devices",
                "Win32_Devices_HumanInterfaceDevice",
                "Win32_Foundation",
                "Win32_Globalization",
                "Win32_Graphics",
                "Win32_Graphics_Dwm",
                "Win32_Graphics_Gdi",
                "Win32_Graphics_OpenGL",
                "Win32_Media",
                "Win32_System",
                "Win32_System_Com",
                "Win32_System_Com_StructuredStorage",
                "Win32_System_LibraryLoader",
                "Win32_System_Ole",
                "Win32_System_SystemInformation",
                "Win32_System_SystemServices",
                "Win32_System_Threading",
                "Win32_System_WindowsProgramming",
                "Win32_UI",
                "Win32_UI_Accessibility",
                "Win32_UI_Controls",
                "Win32_UI_HiDpi",
                "Win32_UI_Input",
                "Win32_UI_Input_Ime",
                "Win32_UI_Input_KeyboardAndMouse",
                "Win32_UI_Input_Pointer",
                "Win32_UI_Input_Touch",
                "Win32_UI_Shell",
                "Win32_UI_TextServices",
                "Win32_UI_WindowsAndMessaging",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libwindows_sys-ef58dbe2609bb230.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_wgl_sys@0.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.4.0\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\glutin_wgl_sys-b09de569cb0430ff\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\glutin_wgl_sys-b09de569cb0430ff\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_egl_sys@0.5.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_egl_sys-0.5.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_egl_sys-0.5.1\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\glutin_egl_sys-3948064d62884b00\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\glutin_egl_sys-3948064d62884b00\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@2.0.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-2.0.3\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "thiserror_impl",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-2.0.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\thiserror_impl-ae2e0f89a1c72c60.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\thiserror_impl-ae2e0f89a1c72c60.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\thiserror_impl-ae2e0f89a1c72c60.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\thiserror_impl-ae2e0f89a1c72c60.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#approx@0.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\approx-0.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "approx",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\approx-0.4.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libapprox-ca75d8b23630ac2a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#open-enum-derive@0.5.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\open-enum-derive-0.5.2\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "open_enum_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\open-enum-derive-0.5.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\open_enum_derive-9e7f42665b11f255.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\open_enum_derive-9e7f42665b11f255.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\open_enum_derive-9e7f42665b11f255.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\open_enum_derive-9e7f42665b11f255.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_egl_sys@0.5.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\glutin_egl_sys-537f5e80b265f399\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_wgl_sys@0.4.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\build\\glutin_wgl_sys-1da2c74798438dac\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.6.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerocopy-0.6.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zerocopy",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerocopy-0.6.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libzerocopy-395a715f71d604ca.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "thiserror",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libthiserror-db8ee48ec36687eb.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cgmath@0.18.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cgmath-0.18.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cgmath",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cgmath-0.18.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libcgmath-b7e9f4480e9ed399.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winit@0.28.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winit-0.28.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "winit",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winit-0.28.7\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "mio",
                "percent-encoding",
                "sctk",
                "sctk-adwaita",
                "wayland",
                "wayland-client",
                "wayland-commons",
                "wayland-csd-adwaita",
                "wayland-dlopen",
                "wayland-protocols",
                "x11",
                "x11-dl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libwinit-b17a52b5cf4ae528.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#open-enum@0.5.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\open-enum-0.5.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "open_enum",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\open-enum-0.5.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libopen_enum-a9eeb13a5b478118.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#half@2.4.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\half-2.4.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "half",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\half-2.4.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "num-traits",
                "std",
                "zerocopy"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libhalf-d59e7c4cde15e5f8.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_egl_sys@0.5.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_egl_sys-0.5.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glutin_egl_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_egl_sys-0.5.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libglutin_egl_sys-886c6df384c6170a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_wgl_sys@0.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glutin_wgl_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.4.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libglutin_wgl_sys-c28b8b131494968a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin@0.30.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-0.30.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glutin",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-0.30.10\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "egl",
                "glutin_egl_sys",
                "glutin_glx_sys",
                "glutin_wgl_sys",
                "glx",
                "libloading",
                "wayland",
                "wayland-sys",
                "wgl",
                "windows-sys",
                "x11",
                "x11-dl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libglutin-bd9096a879615833.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#three-d-asset@0.9.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\three-d-asset-0.9.0\\Cargo.toml",
              "target": {
                "kind": [
                  "cdylib",
                  "rlib"
                ],
                "crate_types": [
                  "cdylib",
                  "rlib"
                ],
                "name": "three_d_asset",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\three-d-asset-0.9.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libthree_d_asset-bea32388e657377c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n  --> src\\core\\buffer\\element_buffer.rs:98:23\n   |\n98 |         self.count = (offset as u32 + indices.len() as u32).max(self.count);\n   |                       ^^^^^^^^^^^^^ help: try: `offset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\nnote: the lint level is defined here\n  --> src\\lib.rs:2:9\n   |\n2  | #![warn(clippy::all)]\n   |         ^^^^^^^^^^^\n   = note: `#[warn(clippy::unnecessary_cast)]` implied by `#[warn(clippy::all)]`\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the lint level is defined here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 58,
                        "byte_start": 47,
                        "column_end": 20,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2,
                        "line_start": 2,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 20,
                            "highlight_start": 9,
                            "text": "#![warn(clippy::all)]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::unnecessary_cast)]` implied by `#[warn(clippy::all)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3090,
                        "byte_start": 3077,
                        "column_end": 36,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "src\\core\\buffer\\element_buffer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 98,
                        "line_start": 98,
                        "suggested_replacement": "offset",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 23,
                            "text": "        self.count = (offset as u32 + indices.len() as u32).max(self.count);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`u32` -> `u32`)",
                "spans": [
                  {
                    "byte_end": 3090,
                    "byte_start": 3077,
                    "column_end": 36,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\core\\buffer\\element_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 98,
                    "line_start": 98,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 23,
                        "text": "        self.count = (offset as u32 + indices.len() as u32).max(self.count);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n  --> src\\core\\buffer.rs:97:33\n   |\n97 |         self.attribute_count = (offset as u32 + data.len() as u32).max(self.attribute_count);\n   |                                 ^^^^^^^^^^^^^ help: try: `offset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2879,
                        "byte_start": 2866,
                        "column_end": 46,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\core\\buffer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 97,
                        "line_start": 97,
                        "suggested_replacement": "offset",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 33,
                            "text": "        self.attribute_count = (offset as u32 + data.len() as u32).max(self.attribute_count);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`u32` -> `u32`)",
                "spans": [
                  {
                    "byte_end": 2879,
                    "byte_start": 2866,
                    "column_end": 46,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\core\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 97,
                    "line_start": 97,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 46,
                        "highlight_start": 33,
                        "text": "        self.attribute_count = (offset as u32 + data.len() as u32).max(self.attribute_count);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\core\\texture\\texture_cube_map.rs:483:17\n    |\n483 |                 &fragment_shader_source,\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `fragment_shader_source`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` implied by `#[warn(clippy::all)]`\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_borrow)]` implied by `#[warn(clippy::all)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 14360,
                        "byte_start": 14337,
                        "column_end": 40,
                        "column_start": 17,
                        "expansion": null,
                        "file_name": "src\\core\\texture\\texture_cube_map.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 483,
                        "line_start": 483,
                        "suggested_replacement": "fragment_shader_source",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 17,
                            "text": "                &fragment_shader_source,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 14360,
                    "byte_start": 14337,
                    "column_end": 40,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\core\\texture\\texture_cube_map.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 483,
                    "line_start": 483,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 17,
                        "text": "                &fragment_shader_source,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: accessing first element with `cpu_textures.get(0)`\n  --> src\\core\\texture\\texture2d_array.rs:27:27\n   |\n27 |           let cpu_texture = cpu_textures\n   |  ___________________________^\n28 | |             .get(0)\n   | |___________________^ help: try: `cpu_textures.first()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#get_first\n   = note: `#[warn(clippy::get_first)]` implied by `#[warn(clippy::all)]`\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#get_first",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::get_first)]` implied by `#[warn(clippy::all)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 905,
                        "byte_start": 873,
                        "column_end": 20,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\core\\texture\\texture2d_array.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 28,
                        "line_start": 27,
                        "suggested_replacement": "cpu_textures.first()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 27,
                            "text": "        let cpu_texture = cpu_textures"
                          },
                          {
                            "highlight_end": 20,
                            "highlight_start": 1,
                            "text": "            .get(0)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::get_first",
                  "explanation": null
                },
                "level": "warning",
                "message": "accessing first element with `cpu_textures.get(0)`",
                "spans": [
                  {
                    "byte_end": 905,
                    "byte_start": 873,
                    "column_end": 20,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\core\\texture\\texture2d_array.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 28,
                    "line_start": 27,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 27,
                        "text": "        let cpu_texture = cpu_textures"
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "            .get(0)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\core\\texture.rs:428:9\n    |\n428 | /         panic!(\n429 | |             \"invalid size of texture data (expected {} bytes but got {} bytes)\",\n430 | |             expected_bytes, actual_bytes\n431 | |         )\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n    = note: `#[warn(clippy::uninlined_format_args)]` implied by `#[warn(clippy::all)]`\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::uninlined_format_args)]` implied by `#[warn(clippy::all)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 13446,
                        "byte_start": 13446,
                        "column_end": 54,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\core\\texture.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 429,
                        "line_start": 429,
                        "suggested_replacement": "expected_bytes",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 54,
                            "text": "            \"invalid size of texture data (expected {} bytes but got {} bytes)\","
                          }
                        ]
                      },
                      {
                        "byte_end": 13463,
                        "byte_start": 13463,
                        "column_end": 71,
                        "column_start": 71,
                        "expansion": null,
                        "file_name": "src\\core\\texture.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 429,
                        "line_start": 429,
                        "suggested_replacement": "actual_bytes",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 71,
                            "highlight_start": 71,
                            "text": "            \"invalid size of texture data (expected {} bytes but got {} bytes)\","
                          }
                        ]
                      },
                      {
                        "byte_end": 13500,
                        "byte_start": 13472,
                        "column_end": 27,
                        "column_start": 80,
                        "expansion": null,
                        "file_name": "src\\core\\texture.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 430,
                        "line_start": 429,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 81,
                            "highlight_start": 80,
                            "text": "            \"invalid size of texture data (expected {} bytes but got {} bytes)\","
                          },
                          {
                            "highlight_end": 27,
                            "highlight_start": 1,
                            "text": "            expected_bytes, actual_bytes"
                          }
                        ]
                      },
                      {
                        "byte_end": 13514,
                        "byte_start": 13500,
                        "column_end": 41,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\core\\texture.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 430,
                        "line_start": 430,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 27,
                            "text": "            expected_bytes, actual_bytes"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 13524,
                    "byte_start": 13385,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\core\\texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 431,
                    "line_start": 428,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 9,
                        "text": "        panic!("
                      },
                      {
                        "highlight_end": 81,
                        "highlight_start": 1,
                        "text": "            \"invalid size of texture data (expected {} bytes but got {} bytes)\","
                      },
                      {
                        "highlight_end": 41,
                        "highlight_start": 1,
                        "text": "            expected_bytes, actual_bytes"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        )"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\core\\render_target.rs:372:9\n    |\n372 | ...   panic!(\"number_of_samples ({}) for multisample target is larger than supported number of samples: {}\", number_of_samples, max_samples);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n372 -         panic!(\"number_of_samples ({}) for multisample target is larger than supported number of samples: {}\", number_of_samples, max_samples);\n372 +         panic!(\"number_of_samples ({number_of_samples}) for multisample target is larger than supported number of samples: {max_samples}\");\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12697,
                        "byte_start": 12697,
                        "column_end": 37,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\core\\render_target.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 372,
                        "line_start": 372,
                        "suggested_replacement": "number_of_samples",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 37,
                            "highlight_start": 37,
                            "text": "        panic!(\"number_of_samples ({}) for multisample target is larger than supported number of samples: {}\", number_of_samples, max_samples);"
                          }
                        ]
                      },
                      {
                        "byte_end": 12768,
                        "byte_start": 12768,
                        "column_end": 108,
                        "column_start": 108,
                        "expansion": null,
                        "file_name": "src\\core\\render_target.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 372,
                        "line_start": 372,
                        "suggested_replacement": "max_samples",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 108,
                            "highlight_start": 108,
                            "text": "        panic!(\"number_of_samples ({}) for multisample target is larger than supported number of samples: {}\", number_of_samples, max_samples);"
                          }
                        ]
                      },
                      {
                        "byte_end": 12789,
                        "byte_start": 12770,
                        "column_end": 129,
                        "column_start": 110,
                        "expansion": null,
                        "file_name": "src\\core\\render_target.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 372,
                        "line_start": 372,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 129,
                            "highlight_start": 110,
                            "text": "        panic!(\"number_of_samples ({}) for multisample target is larger than supported number of samples: {}\", number_of_samples, max_samples);"
                          }
                        ]
                      },
                      {
                        "byte_end": 12802,
                        "byte_start": 12789,
                        "column_end": 142,
                        "column_start": 129,
                        "expansion": null,
                        "file_name": "src\\core\\render_target.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 372,
                        "line_start": 372,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 142,
                            "highlight_start": 129,
                            "text": "        panic!(\"number_of_samples ({}) for multisample target is larger than supported number of samples: {}\", number_of_samples, max_samples);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 12803,
                    "byte_start": 12669,
                    "column_end": 143,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\core\\render_target.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 372,
                    "line_start": 372,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 143,
                        "highlight_start": 9,
                        "text": "        panic!(\"number_of_samples ({}) for multisample target is larger than supported number of samples: {}\", number_of_samples, max_samples);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\core\\render_target.rs:375:9\n    |\n375 |         panic!(\"number_of_samples ({}) for multisample target must be a power of 2 (and larger than 0).\", number_of_samples);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n375 -         panic!(\"number_of_samples ({}) for multisample target must be a power of 2 (and larger than 0).\", number_of_samples);\n375 +         panic!(\"number_of_samples ({number_of_samples}) for multisample target must be a power of 2 (and larger than 0).\");\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12933,
                        "byte_start": 12933,
                        "column_end": 37,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\core\\render_target.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 375,
                        "line_start": 375,
                        "suggested_replacement": "number_of_samples",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 37,
                            "highlight_start": 37,
                            "text": "        panic!(\"number_of_samples ({}) for multisample target must be a power of 2 (and larger than 0).\", number_of_samples);"
                          }
                        ]
                      },
                      {
                        "byte_end": 13020,
                        "byte_start": 13001,
                        "column_end": 124,
                        "column_start": 105,
                        "expansion": null,
                        "file_name": "src\\core\\render_target.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 375,
                        "line_start": 375,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 124,
                            "highlight_start": 105,
                            "text": "        panic!(\"number_of_samples ({}) for multisample target must be a power of 2 (and larger than 0).\", number_of_samples);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 13021,
                    "byte_start": 12905,
                    "column_end": 125,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\core\\render_target.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 375,
                    "line_start": 375,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 125,
                        "highlight_start": 9,
                        "text": "        panic!(\"number_of_samples ({}) for multisample target must be a power of 2 (and larger than 0).\", number_of_samples);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: `?Sized` bound is ignored because of a `Sized` requirement\n  --> src\\core\\uniform.rs:28:27\n   |\n28 | impl<T: UniformDataType + ?Sized> UniformDataType for &T {}\n   |                           ^^^^^^\n   |\nnote: `T` cannot be unsized because of the bound\n  --> src\\core\\uniform.rs:28:9\n   |\n28 | impl<T: UniformDataType + ?Sized> UniformDataType for &T {}\n   |         ^^^^^^^^^^^^^^^\n   = note: ...because `UniformDataType` has the bound `DataType`\n   = note: ...because `DataType` has the bound `Clone`\n   = note: ...because `Clone` has the bound `Sized`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_maybe_sized\n   = note: `#[warn(clippy::needless_maybe_sized)]` implied by `#[warn(clippy::all)]`\nhelp: change the bounds that require `Sized`, or remove the `?Sized` bound\n   |\n28 - impl<T: UniformDataType + ?Sized> UniformDataType for &T {}\n28 + impl<T: UniformDataType> UniformDataType for &T {}\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`T` cannot be unsized because of the bound",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1021,
                        "byte_start": 1006,
                        "column_end": 24,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\core\\uniform.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 28,
                        "line_start": 28,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 9,
                            "text": "impl<T: UniformDataType + ?Sized> UniformDataType for &T {}"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "...because `UniformDataType` has the bound `DataType`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "...because `DataType` has the bound `Clone`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "...because `Clone` has the bound `Sized`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_maybe_sized",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_maybe_sized)]` implied by `#[warn(clippy::all)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change the bounds that require `Sized`, or remove the `?Sized` bound",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1030,
                        "byte_start": 1021,
                        "column_end": 33,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\core\\uniform.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 28,
                        "line_start": 28,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 24,
                            "text": "impl<T: UniformDataType + ?Sized> UniformDataType for &T {}"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_maybe_sized",
                  "explanation": null
                },
                "level": "warning",
                "message": "`?Sized` bound is ignored because of a `Sized` requirement",
                "spans": [
                  {
                    "byte_end": 1030,
                    "byte_start": 1024,
                    "column_end": 33,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\core\\uniform.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 28,
                    "line_start": 28,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 27,
                        "text": "impl<T: UniformDataType + ?Sized> UniformDataType for &T {}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\core\\program.rs:53:40\n   |\n53 |             let vertex_shader_source = format!(\"{}{}\", header, vertex_shader_source);\n   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n53 -             let vertex_shader_source = format!(\"{}{}\", header, vertex_shader_source);\n53 +             let vertex_shader_source = format!(\"{header}{vertex_shader_source}\");\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2120,
                        "byte_start": 2120,
                        "column_end": 50,
                        "column_start": 50,
                        "expansion": null,
                        "file_name": "src\\core\\program.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 53,
                        "line_start": 53,
                        "suggested_replacement": "header",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 50,
                            "highlight_start": 50,
                            "text": "            let vertex_shader_source = format!(\"{}{}\", header, vertex_shader_source);"
                          }
                        ]
                      },
                      {
                        "byte_end": 2122,
                        "byte_start": 2122,
                        "column_end": 52,
                        "column_start": 52,
                        "expansion": null,
                        "file_name": "src\\core\\program.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 53,
                        "line_start": 53,
                        "suggested_replacement": "vertex_shader_source",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 52,
                            "highlight_start": 52,
                            "text": "            let vertex_shader_source = format!(\"{}{}\", header, vertex_shader_source);"
                          }
                        ]
                      },
                      {
                        "byte_end": 2132,
                        "byte_start": 2124,
                        "column_end": 62,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\core\\program.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 53,
                        "line_start": 53,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 62,
                            "highlight_start": 54,
                            "text": "            let vertex_shader_source = format!(\"{}{}\", header, vertex_shader_source);"
                          }
                        ]
                      },
                      {
                        "byte_end": 2154,
                        "byte_start": 2132,
                        "column_end": 84,
                        "column_start": 62,
                        "expansion": null,
                        "file_name": "src\\core\\program.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 53,
                        "line_start": 53,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 84,
                            "highlight_start": 62,
                            "text": "            let vertex_shader_source = format!(\"{}{}\", header, vertex_shader_source);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 2155,
                    "byte_start": 2110,
                    "column_end": 85,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "src\\core\\program.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 53,
                    "line_start": 53,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 85,
                        "highlight_start": 40,
                        "text": "            let vertex_shader_source = format!(\"{}{}\", header, vertex_shader_source);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\core\\program.rs:54:42\n   |\n54 |             let fragment_shader_source = format!(\"{}{}\", header, fragment_shader_source);\n   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n54 -             let fragment_shader_source = format!(\"{}{}\", header, fragment_shader_source);\n54 +             let fragment_shader_source = format!(\"{header}{fragment_shader_source}\");\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2208,
                        "byte_start": 2208,
                        "column_end": 52,
                        "column_start": 52,
                        "expansion": null,
                        "file_name": "src\\core\\program.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 54,
                        "line_start": 54,
                        "suggested_replacement": "header",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 52,
                            "highlight_start": 52,
                            "text": "            let fragment_shader_source = format!(\"{}{}\", header, fragment_shader_source);"
                          }
                        ]
                      },
                      {
                        "byte_end": 2210,
                        "byte_start": 2210,
                        "column_end": 54,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\core\\program.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 54,
                        "line_start": 54,
                        "suggested_replacement": "fragment_shader_source",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 54,
                            "text": "            let fragment_shader_source = format!(\"{}{}\", header, fragment_shader_source);"
                          }
                        ]
                      },
                      {
                        "byte_end": 2220,
                        "byte_start": 2212,
                        "column_end": 64,
                        "column_start": 56,
                        "expansion": null,
                        "file_name": "src\\core\\program.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 54,
                        "line_start": 54,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 64,
                            "highlight_start": 56,
                            "text": "            let fragment_shader_source = format!(\"{}{}\", header, fragment_shader_source);"
                          }
                        ]
                      },
                      {
                        "byte_end": 2244,
                        "byte_start": 2220,
                        "column_end": 88,
                        "column_start": 64,
                        "expansion": null,
                        "file_name": "src\\core\\program.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 54,
                        "line_start": 54,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 88,
                            "highlight_start": 64,
                            "text": "            let fragment_shader_source = format!(\"{}{}\", header, fragment_shader_source);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 2245,
                    "byte_start": 2198,
                    "column_end": 89,
                    "column_start": 42,
                    "expansion": null,
                    "file_name": "src\\core\\program.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 54,
                    "line_start": 54,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 89,
                        "highlight_start": 42,
                        "text": "            let fragment_shader_source = format!(\"{}{}\", header, fragment_shader_source);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\core\\program.rs:177:13\n    |\n177 | /             panic!(\n178 | |                 \"the uniform {} is sent to the shader but not defined or never used\",\n179 | |                 name\n180 | |             )\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7440,
                        "byte_start": 7440,
                        "column_end": 31,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\core\\program.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 178,
                        "line_start": 178,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 31,
                            "highlight_start": 31,
                            "text": "                \"the uniform {} is sent to the shader but not defined or never used\","
                          }
                        ]
                      },
                      {
                        "byte_end": 7516,
                        "byte_start": 7494,
                        "column_end": 21,
                        "column_start": 85,
                        "expansion": null,
                        "file_name": "src\\core\\program.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 179,
                        "line_start": 178,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 86,
                            "highlight_start": 85,
                            "text": "                \"the uniform {} is sent to the shader but not defined or never used\","
                          },
                          {
                            "highlight_end": 21,
                            "highlight_start": 1,
                            "text": "                name"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 7530,
                    "byte_start": 7402,
                    "column_end": 14,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\core\\program.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 180,
                    "line_start": 177,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 13,
                        "text": "            panic!("
                      },
                      {
                        "highlight_end": 86,
                        "highlight_start": 1,
                        "text": "                \"the uniform {} is sent to the shader but not defined or never used\","
                      },
                      {
                        "highlight_end": 21,
                        "highlight_start": 1,
                        "text": "                name"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            )"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\core\\program.rs:310:40\n    |\n310 |                       .unwrap_or_else(|| panic!(\"the uniform block {} is sent to the shader but not defined or never used\",\n    |  ________________________________________^\n311 | |                         name))\n    | |_____________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 13119,
                        "byte_start": 13119,
                        "column_end": 67,
                        "column_start": 67,
                        "expansion": null,
                        "file_name": "src\\core\\program.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 310,
                        "line_start": 310,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 67,
                            "highlight_start": 67,
                            "text": "                    .unwrap_or_else(|| panic!(\"the uniform block {} is sent to the shader but not defined or never used\","
                          }
                        ]
                      },
                      {
                        "byte_end": 13203,
                        "byte_start": 13173,
                        "column_end": 29,
                        "column_start": 121,
                        "expansion": null,
                        "file_name": "src\\core\\program.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 311,
                        "line_start": 310,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 122,
                            "highlight_start": 121,
                            "text": "                    .unwrap_or_else(|| panic!(\"the uniform block {} is sent to the shader but not defined or never used\","
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "                        name))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 13204,
                    "byte_start": 13092,
                    "column_end": 30,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "src\\core\\program.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 311,
                    "line_start": 310,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 122,
                        "highlight_start": 40,
                        "text": "                    .unwrap_or_else(|| panic!(\"the uniform block {} is sent to the shader but not defined or never used\","
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                        name))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src\\core\\program.rs:503:13\n    |\n503 |             element_buffer.count() as u32,\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `element_buffer.count()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 21286,
                        "byte_start": 21257,
                        "column_end": 42,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\core\\program.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 503,
                        "line_start": 503,
                        "suggested_replacement": "element_buffer.count()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 13,
                            "text": "            element_buffer.count() as u32,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`u32` -> `u32`)",
                "spans": [
                  {
                    "byte_end": 21286,
                    "byte_start": 21257,
                    "column_end": 42,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\core\\program.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 503,
                    "line_start": 503,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 13,
                        "text": "            element_buffer.count() as u32,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src\\core\\program.rs:563:13\n    |\n563 |             element_buffer.count() as u32,\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `element_buffer.count()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 23385,
                        "byte_start": 23356,
                        "column_end": 42,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\core\\program.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 563,
                        "line_start": 563,
                        "suggested_replacement": "element_buffer.count()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 13,
                            "text": "            element_buffer.count() as u32,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`u32` -> `u32`)",
                "spans": [
                  {
                    "byte_end": 23385,
                    "byte_start": 23356,
                    "column_end": 42,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\core\\program.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 563,
                    "line_start": 563,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 13,
                        "text": "            element_buffer.count() as u32,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\core\\program.rs:625:13\n    |\n625 | /             panic!(\n626 | |                 \"the attribute {} is sent to the shader but not defined or never used\",\n627 | |                 name\n628 | |             )\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 25422,
                        "byte_start": 25422,
                        "column_end": 33,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\core\\program.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 626,
                        "line_start": 626,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 33,
                            "text": "                \"the attribute {} is sent to the shader but not defined or never used\","
                          }
                        ]
                      },
                      {
                        "byte_end": 25498,
                        "byte_start": 25476,
                        "column_end": 21,
                        "column_start": 87,
                        "expansion": null,
                        "file_name": "src\\core\\program.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 627,
                        "line_start": 626,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 88,
                            "highlight_start": 87,
                            "text": "                \"the attribute {} is sent to the shader but not defined or never used\","
                          },
                          {
                            "highlight_end": 21,
                            "highlight_start": 1,
                            "text": "                name"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 25512,
                    "byte_start": 25382,
                    "column_end": 14,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\core\\program.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 628,
                    "line_start": 625,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 13,
                        "text": "            panic!("
                      },
                      {
                        "highlight_end": 88,
                        "highlight_start": 1,
                        "text": "                \"the attribute {} is sent to the shader but not defined or never used\","
                      },
                      {
                        "highlight_end": 21,
                        "highlight_start": 1,
                        "text": "                name"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            )"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: `?Sized` bound is ignored because of a `Sized` requirement\n   --> src\\core\\data_type.rs:232:20\n    |\n232 | impl<T: DataType + ?Sized> DataType for &T {\n    |                    ^^^^^^\n    |\nnote: `T` cannot be unsized because of the bound\n   --> src\\core\\data_type.rs:232:9\n    |\n232 | impl<T: DataType + ?Sized> DataType for &T {\n    |         ^^^^^^^^\n    = note: ...because `DataType` has the bound `Clone`\n    = note: ...because `Clone` has the bound `Sized`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_maybe_sized\nhelp: change the bounds that require `Sized`, or remove the `?Sized` bound\n    |\n232 - impl<T: DataType + ?Sized> DataType for &T {\n232 + impl<T: DataType> DataType for &T {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`T` cannot be unsized because of the bound",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6996,
                        "byte_start": 6988,
                        "column_end": 17,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\core\\data_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 232,
                        "line_start": 232,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 9,
                            "text": "impl<T: DataType + ?Sized> DataType for &T {"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "...because `DataType` has the bound `Clone`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "...because `Clone` has the bound `Sized`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_maybe_sized",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change the bounds that require `Sized`, or remove the `?Sized` bound",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7005,
                        "byte_start": 6996,
                        "column_end": 26,
                        "column_start": 17,
                        "expansion": null,
                        "file_name": "src\\core\\data_type.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 232,
                        "line_start": 232,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 17,
                            "text": "impl<T: DataType + ?Sized> DataType for &T {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_maybe_sized",
                  "explanation": null
                },
                "level": "warning",
                "message": "`?Sized` bound is ignored because of a `Sized` requirement",
                "spans": [
                  {
                    "byte_end": 7005,
                    "byte_start": 6999,
                    "column_end": 26,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\core\\data_type.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 232,
                    "line_start": 232,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 20,
                        "text": "impl<T: DataType + ?Sized> DataType for &T {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: manual slice size calculation\n   --> src\\core.rs:105:13\n    |\n105 |             data.len() * std::mem::size_of::<T>(),\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::mem::size_of_val(data)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_slice_size_calculation\n    = note: `#[warn(clippy::manual_slice_size_calculation)]` implied by `#[warn(clippy::all)]`\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_slice_size_calculation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::manual_slice_size_calculation)]` implied by `#[warn(clippy::all)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2553,
                        "byte_start": 2516,
                        "column_end": 50,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\core.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 105,
                        "line_start": 105,
                        "suggested_replacement": "std::mem::size_of_val(data)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 50,
                            "highlight_start": 13,
                            "text": "            data.len() * std::mem::size_of::<T>(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_slice_size_calculation",
                  "explanation": null
                },
                "level": "warning",
                "message": "manual slice size calculation",
                "spans": [
                  {
                    "byte_end": 2553,
                    "byte_start": 2516,
                    "column_end": 50,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\core.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 105,
                    "line_start": 105,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 50,
                        "highlight_start": 13,
                        "text": "            data.len() * std::mem::size_of::<T>(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\renderer\\light\\directional_light.rs:132:13\n    |\n132 | /             format!(\n133 | |                 \"\n134 | |                     uniform sampler2D shadowMap{};\n135 | |                     uniform mat4 shadowMVP{};\n...   |\n146 | |                 \", i, i, i, i, i, i, i, i, i, i)\n    | |________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n134 ~                     uniform sampler2D shadowMap{i};\n135 ~                     uniform mat4 shadowMVP{i};\n136 |\n137 ~                     uniform vec3 color{i};\n138 ~                     uniform vec3 direction{i};\n139 |\n140 ~                     vec3 calculate_lighting{i}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughness, float occlusion)\n141 |                     {{\n142 ~                         return calculate_light(color{i}, -direction{i}, surface_color, view_direction, normal, metallic, roughness)\n143 ~                             * calculate_shadow(-direction{i}, normal, shadowMap{i}, shadowMVP{i}, position);\n144 |                     }}\n145 |\n146 ~                 \")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4555,
                        "byte_start": 4555,
                        "column_end": 49,
                        "column_start": 49,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 134,
                        "line_start": 134,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 49,
                            "text": "                    uniform sampler2D shadowMap{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 4601,
                        "byte_start": 4601,
                        "column_end": 44,
                        "column_start": 44,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 135,
                        "line_start": 135,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 44,
                            "text": "                    uniform mat4 shadowMVP{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 4644,
                        "byte_start": 4644,
                        "column_end": 40,
                        "column_start": 40,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 137,
                        "line_start": 137,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 40,
                            "text": "                    uniform vec3 color{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 4690,
                        "byte_start": 4690,
                        "column_end": 44,
                        "column_start": 44,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 138,
                        "line_start": 138,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 44,
                            "text": "                    uniform vec3 direction{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 4738,
                        "byte_start": 4738,
                        "column_end": 45,
                        "column_start": 45,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 140,
                        "line_start": 140,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 45,
                            "text": "                    vec3 calculate_lighting{}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughness, float occlusion)"
                          }
                        ]
                      },
                      {
                        "byte_end": 4935,
                        "byte_start": 4935,
                        "column_end": 54,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 142,
                        "line_start": 142,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 54,
                            "text": "                        return calculate_light(color{}, -direction{}, surface_color, view_direction, normal, metallic, roughness)"
                          }
                        ]
                      },
                      {
                        "byte_end": 4949,
                        "byte_start": 4949,
                        "column_end": 68,
                        "column_start": 68,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 142,
                        "line_start": 142,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 68,
                            "highlight_start": 68,
                            "text": "                        return calculate_light(color{}, -direction{}, surface_color, view_direction, normal, metallic, roughness)"
                          }
                        ]
                      },
                      {
                        "byte_end": 5070,
                        "byte_start": 5070,
                        "column_end": 59,
                        "column_start": 59,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 143,
                        "line_start": 143,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 59,
                            "text": "                            * calculate_shadow(-direction{}, normal, shadowMap{}, shadowMVP{}, position);"
                          }
                        ]
                      },
                      {
                        "byte_end": 5091,
                        "byte_start": 5091,
                        "column_end": 80,
                        "column_start": 80,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 143,
                        "line_start": 143,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 80,
                            "highlight_start": 80,
                            "text": "                            * calculate_shadow(-direction{}, normal, shadowMap{}, shadowMVP{}, position);"
                          }
                        ]
                      },
                      {
                        "byte_end": 5104,
                        "byte_start": 5104,
                        "column_end": 93,
                        "column_start": 93,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 143,
                        "line_start": 143,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 93,
                            "highlight_start": 93,
                            "text": "                            * calculate_shadow(-direction{}, normal, shadowMap{}, shadowMVP{}, position);"
                          }
                        ]
                      },
                      {
                        "byte_end": 5162,
                        "byte_start": 5159,
                        "column_end": 21,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 146,
                        "line_start": 146,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 21,
                            "highlight_start": 18,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 5165,
                        "byte_start": 5162,
                        "column_end": 24,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 146,
                        "line_start": 146,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 21,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 5168,
                        "byte_start": 5165,
                        "column_end": 27,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 146,
                        "line_start": 146,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 24,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 5171,
                        "byte_start": 5168,
                        "column_end": 30,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 146,
                        "line_start": 146,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 27,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 5174,
                        "byte_start": 5171,
                        "column_end": 33,
                        "column_start": 30,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 146,
                        "line_start": 146,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 30,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 5177,
                        "byte_start": 5174,
                        "column_end": 36,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 146,
                        "line_start": 146,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 33,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 5180,
                        "byte_start": 5177,
                        "column_end": 39,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 146,
                        "line_start": 146,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 36,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 5183,
                        "byte_start": 5180,
                        "column_end": 42,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 146,
                        "line_start": 146,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 39,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 5186,
                        "byte_start": 5183,
                        "column_end": 45,
                        "column_start": 42,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 146,
                        "line_start": 146,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 42,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 5189,
                        "byte_start": 5186,
                        "column_end": 48,
                        "column_start": 45,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 146,
                        "line_start": 146,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 45,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 5190,
                    "byte_start": 4480,
                    "column_end": 49,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\directional_light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 146,
                    "line_start": 132,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 13,
                        "text": "            format!("
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                \""
                      },
                      {
                        "highlight_end": 51,
                        "highlight_start": 1,
                        "text": "                    uniform sampler2D shadowMap{};"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                    uniform mat4 shadowMVP{};"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                    uniform vec3 color{};"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                    uniform vec3 direction{};"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 165,
                        "highlight_start": 1,
                        "text": "                    vec3 calculate_lighting{}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughness, float occlusion)"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    {{"
                      },
                      {
                        "highlight_end": 130,
                        "highlight_start": 1,
                        "text": "                        return calculate_light(color{}, -direction{}, surface_color, view_direction, normal, metallic, roughness)"
                      },
                      {
                        "highlight_end": 106,
                        "highlight_start": 1,
                        "text": "                            * calculate_shadow(-direction{}, normal, shadowMap{}, shadowMVP{}, position);"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    }}"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "                \", i, i, i, i, i, i, i, i, i, i)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\renderer\\light\\directional_light.rs:148:13\n    |\n148 | /             format!(\n149 | |                 \"\n150 | |                     uniform vec3 color{};\n151 | |                     uniform vec3 direction{};\n...   |\n158 | |                 \", i, i, i, i, i)\n    | |_________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n150 ~                     uniform vec3 color{i};\n151 ~                     uniform vec3 direction{i};\n152 |\n153 ~                     vec3 calculate_lighting{i}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughness, float occlusion)\n154 |                     {{\n155 ~                         return calculate_light(color{i}, -direction{i}, surface_color, view_direction, normal, metallic, roughness);\n156 |                     }}\n157 |\n158 ~                 \")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5286,
                        "byte_start": 5286,
                        "column_end": 40,
                        "column_start": 40,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 150,
                        "line_start": 150,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 40,
                            "text": "                    uniform vec3 color{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 5332,
                        "byte_start": 5332,
                        "column_end": 44,
                        "column_start": 44,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 151,
                        "line_start": 151,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 44,
                            "text": "                    uniform vec3 direction{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 5380,
                        "byte_start": 5380,
                        "column_end": 45,
                        "column_start": 45,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 153,
                        "line_start": 153,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 45,
                            "text": "                    vec3 calculate_lighting{}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughness, float occlusion)"
                          }
                        ]
                      },
                      {
                        "byte_end": 5577,
                        "byte_start": 5577,
                        "column_end": 54,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 155,
                        "line_start": 155,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 54,
                            "text": "                        return calculate_light(color{}, -direction{}, surface_color, view_direction, normal, metallic, roughness);"
                          }
                        ]
                      },
                      {
                        "byte_end": 5591,
                        "byte_start": 5591,
                        "column_end": 68,
                        "column_start": 68,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 155,
                        "line_start": 155,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 68,
                            "highlight_start": 68,
                            "text": "                        return calculate_light(color{}, -direction{}, surface_color, view_direction, normal, metallic, roughness);"
                          }
                        ]
                      },
                      {
                        "byte_end": 5699,
                        "byte_start": 5696,
                        "column_end": 21,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 158,
                        "line_start": 158,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 21,
                            "highlight_start": 18,
                            "text": "                \", i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 5702,
                        "byte_start": 5699,
                        "column_end": 24,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 158,
                        "line_start": 158,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 21,
                            "text": "                \", i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 5705,
                        "byte_start": 5702,
                        "column_end": 27,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 158,
                        "line_start": 158,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 24,
                            "text": "                \", i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 5708,
                        "byte_start": 5705,
                        "column_end": 30,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 158,
                        "line_start": 158,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 27,
                            "text": "                \", i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 5711,
                        "byte_start": 5708,
                        "column_end": 33,
                        "column_start": 30,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 158,
                        "line_start": 158,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 30,
                            "text": "                \", i, i, i, i, i)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 5712,
                    "byte_start": 5220,
                    "column_end": 34,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\directional_light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 158,
                    "line_start": 148,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 13,
                        "text": "            format!("
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                \""
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                    uniform vec3 color{};"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                    uniform vec3 direction{};"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 165,
                        "highlight_start": 1,
                        "text": "                    vec3 calculate_lighting{}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughness, float occlusion)"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    {{"
                      },
                      {
                        "highlight_end": 131,
                        "highlight_start": 1,
                        "text": "                        return calculate_light(color{}, -direction{}, surface_color, view_direction, normal, metallic, roughness);"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    }}"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "                \", i, i, i, i, i)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\renderer\\light\\directional_light.rs:163:40\n    |\n163 |             program.use_depth_texture(&format!(\"shadowMap{}\", i), tex);\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n163 -             program.use_depth_texture(&format!(\"shadowMap{}\", i), tex);\n163 +             program.use_depth_texture(&format!(\"shadowMap{i}\"), tex);\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5896,
                        "byte_start": 5896,
                        "column_end": 59,
                        "column_start": 59,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 163,
                        "line_start": 163,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 59,
                            "text": "            program.use_depth_texture(&format!(\"shadowMap{}\", i), tex);"
                          }
                        ]
                      },
                      {
                        "byte_end": 5901,
                        "byte_start": 5898,
                        "column_end": 64,
                        "column_start": 61,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 163,
                        "line_start": 163,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 64,
                            "highlight_start": 61,
                            "text": "            program.use_depth_texture(&format!(\"shadowMap{}\", i), tex);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 5902,
                    "byte_start": 5877,
                    "column_end": 65,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\directional_light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 163,
                    "line_start": 163,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 65,
                        "highlight_start": 40,
                        "text": "            program.use_depth_texture(&format!(\"shadowMap{}\", i), tex);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\renderer\\light\\directional_light.rs:164:34\n    |\n164 |             program.use_uniform(&format!(\"shadowMVP{}\", i), self.shadow_matrix);\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n164 -             program.use_uniform(&format!(\"shadowMVP{}\", i), self.shadow_matrix);\n164 +             program.use_uniform(&format!(\"shadowMVP{i}\"), self.shadow_matrix);\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5962,
                        "byte_start": 5962,
                        "column_end": 53,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 164,
                        "line_start": 164,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 53,
                            "text": "            program.use_uniform(&format!(\"shadowMVP{}\", i), self.shadow_matrix);"
                          }
                        ]
                      },
                      {
                        "byte_end": 5967,
                        "byte_start": 5964,
                        "column_end": 58,
                        "column_start": 55,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 164,
                        "line_start": 164,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 55,
                            "text": "            program.use_uniform(&format!(\"shadowMVP{}\", i), self.shadow_matrix);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 5968,
                    "byte_start": 5943,
                    "column_end": 59,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\directional_light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 164,
                    "line_start": 164,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 34,
                        "text": "            program.use_uniform(&format!(\"shadowMVP{}\", i), self.shadow_matrix);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\renderer\\light\\directional_light.rs:167:14\n    |\n167 |             &format!(\"color{}\", i),\n    |              ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n167 -             &format!(\"color{}\", i),\n167 +             &format!(\"color{i}\"),\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6058,
                        "byte_start": 6058,
                        "column_end": 29,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 167,
                        "line_start": 167,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 29,
                            "text": "            &format!(\"color{}\", i),"
                          }
                        ]
                      },
                      {
                        "byte_end": 6063,
                        "byte_start": 6060,
                        "column_end": 34,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 167,
                        "line_start": 167,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 34,
                            "highlight_start": 31,
                            "text": "            &format!(\"color{}\", i),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 6064,
                    "byte_start": 6043,
                    "column_end": 35,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\directional_light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 167,
                    "line_start": 167,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 14,
                        "text": "            &format!(\"color{}\", i),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\renderer\\light\\directional_light.rs:170:30\n    |\n170 |         program.use_uniform(&format!(\"direction{}\", i), self.direction.normalize());\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n170 -         program.use_uniform(&format!(\"direction{}\", i), self.direction.normalize());\n170 +         program.use_uniform(&format!(\"direction{i}\"), self.direction.normalize());\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6194,
                        "byte_start": 6194,
                        "column_end": 49,
                        "column_start": 49,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 170,
                        "line_start": 170,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 49,
                            "text": "        program.use_uniform(&format!(\"direction{}\", i), self.direction.normalize());"
                          }
                        ]
                      },
                      {
                        "byte_end": 6199,
                        "byte_start": 6196,
                        "column_end": 54,
                        "column_start": 51,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\directional_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 170,
                        "line_start": 170,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 51,
                            "text": "        program.use_uniform(&format!(\"direction{}\", i), self.direction.normalize());"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 6200,
                    "byte_start": 6175,
                    "column_end": 55,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\directional_light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 170,
                    "line_start": 170,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 55,
                        "highlight_start": 30,
                        "text": "        program.use_uniform(&format!(\"direction{}\", i), self.direction.normalize());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\renderer\\light\\spot_light.rs:145:13\n    |\n145 | /             format!(\n146 | |                 \"\n147 | |                     uniform sampler2D shadowMap{};\n148 | |                     uniform mat4 shadowMVP{};\n...   |\n174 | |                 \", i, i, i, i, i, i, i, i, i, i, i, i, i, i, i)\n    | |_______________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n147 ~                     uniform sampler2D shadowMap{i};\n148 ~                     uniform mat4 shadowMVP{i};\n149 |\n150 ~                     uniform vec3 color{i};\n151 ~                     uniform vec3 attenuation{i};\n152 ~                     uniform vec3 position{i};\n153 ~                     uniform float cutoff{i};\n154 ~                     uniform vec3 direction{i};\n155 ~                     vec3 calculate_lighting{i}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughness, float occlusion)\n156 |                     {{\n157 ~                         vec3 light_direction = position{i} - position;\n158 |                         float distance = length(light_direction);\n159 |                         light_direction = light_direction / distance;\n160 |\n161 ~                         float angle = acos(dot(-light_direction, normalize(direction{i})));\n162 ~                         float cutoff = cutoff{i};\n163 |\n164 |                         vec3 result = vec3(0.0);\n165 |                         if (angle < cutoff) {{\n166 ~                             vec3 light_color = attenuate(color{i}, attenuation{i}, distance);\n167 |                             result = calculate_light(light_color, light_direction, surface_color, view_direction, normal,\n168 |                                 metallic, roughness) * (1.0 - smoothstep(0.75 * cutoff, cutoff, angle));\n169 ~                             result *= calculate_shadow(light_direction, normal, shadowMap{i}, shadowMVP{i}, position);\n170 |                         }}\n...\n173 |\n174 ~                 \")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4714,
                        "byte_start": 4714,
                        "column_end": 49,
                        "column_start": 49,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 147,
                        "line_start": 147,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 49,
                            "text": "                    uniform sampler2D shadowMap{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 4760,
                        "byte_start": 4760,
                        "column_end": 44,
                        "column_start": 44,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 148,
                        "line_start": 148,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 44,
                            "text": "                    uniform mat4 shadowMVP{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 4803,
                        "byte_start": 4803,
                        "column_end": 40,
                        "column_start": 40,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 150,
                        "line_start": 150,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 40,
                            "text": "                    uniform vec3 color{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 4851,
                        "byte_start": 4851,
                        "column_end": 46,
                        "column_start": 46,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 151,
                        "line_start": 151,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 46,
                            "text": "                    uniform vec3 attenuation{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 4896,
                        "byte_start": 4896,
                        "column_end": 43,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 152,
                        "line_start": 152,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 43,
                            "text": "                    uniform vec3 position{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 4940,
                        "byte_start": 4940,
                        "column_end": 42,
                        "column_start": 42,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 153,
                        "line_start": 153,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 42,
                            "text": "                    uniform float cutoff{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 4986,
                        "byte_start": 4986,
                        "column_end": 44,
                        "column_start": 44,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 154,
                        "line_start": 154,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 44,
                            "text": "                    uniform vec3 direction{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 5033,
                        "byte_start": 5033,
                        "column_end": 45,
                        "column_start": 45,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 155,
                        "line_start": 155,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 45,
                            "text": "                    vec3 calculate_lighting{}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughness, float occlusion)"
                          }
                        ]
                      },
                      {
                        "byte_end": 5233,
                        "byte_start": 5233,
                        "column_end": 57,
                        "column_start": 57,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 157,
                        "line_start": 157,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 57,
                            "highlight_start": 57,
                            "text": "                        vec3 light_direction = position{} - position;"
                          }
                        ]
                      },
                      {
                        "byte_end": 5469,
                        "byte_start": 5469,
                        "column_end": 86,
                        "column_start": 86,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 161,
                        "line_start": 161,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 86,
                            "highlight_start": 86,
                            "text": "                        float angle = acos(dot(-light_direction, normalize(direction{})));"
                          }
                        ]
                      },
                      {
                        "byte_end": 5521,
                        "byte_start": 5521,
                        "column_end": 47,
                        "column_start": 47,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 162,
                        "line_start": 162,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 47,
                            "text": "                        float cutoff = cutoff{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 5684,
                        "byte_start": 5684,
                        "column_end": 64,
                        "column_start": 64,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 166,
                        "line_start": 166,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 64,
                            "highlight_start": 64,
                            "text": "                            vec3 light_color = attenuate(color{}, attenuation{}, distance);"
                          }
                        ]
                      },
                      {
                        "byte_end": 5699,
                        "byte_start": 5699,
                        "column_end": 79,
                        "column_start": 79,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 166,
                        "line_start": 166,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 79,
                            "highlight_start": 79,
                            "text": "                            vec3 light_color = attenuate(color{}, attenuation{}, distance);"
                          }
                        ]
                      },
                      {
                        "byte_end": 6030,
                        "byte_start": 6030,
                        "column_end": 91,
                        "column_start": 91,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 169,
                        "line_start": 169,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 91,
                            "highlight_start": 91,
                            "text": "                            result *= calculate_shadow(light_direction, normal, shadowMap{}, shadowMVP{}, position);"
                          }
                        ]
                      },
                      {
                        "byte_end": 6043,
                        "byte_start": 6043,
                        "column_end": 104,
                        "column_start": 104,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 169,
                        "line_start": 169,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 104,
                            "highlight_start": 104,
                            "text": "                            result *= calculate_shadow(light_direction, normal, shadowMap{}, shadowMVP{}, position);"
                          }
                        ]
                      },
                      {
                        "byte_end": 6167,
                        "byte_start": 6164,
                        "column_end": 21,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 174,
                        "line_start": 174,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 21,
                            "highlight_start": 18,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 6170,
                        "byte_start": 6167,
                        "column_end": 24,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 174,
                        "line_start": 174,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 21,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 6173,
                        "byte_start": 6170,
                        "column_end": 27,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 174,
                        "line_start": 174,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 24,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 6176,
                        "byte_start": 6173,
                        "column_end": 30,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 174,
                        "line_start": 174,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 27,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 6179,
                        "byte_start": 6176,
                        "column_end": 33,
                        "column_start": 30,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 174,
                        "line_start": 174,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 30,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 6182,
                        "byte_start": 6179,
                        "column_end": 36,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 174,
                        "line_start": 174,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 33,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 6185,
                        "byte_start": 6182,
                        "column_end": 39,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 174,
                        "line_start": 174,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 36,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 6188,
                        "byte_start": 6185,
                        "column_end": 42,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 174,
                        "line_start": 174,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 39,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 6191,
                        "byte_start": 6188,
                        "column_end": 45,
                        "column_start": 42,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 174,
                        "line_start": 174,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 42,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 6194,
                        "byte_start": 6191,
                        "column_end": 48,
                        "column_start": 45,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 174,
                        "line_start": 174,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 45,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 6197,
                        "byte_start": 6194,
                        "column_end": 51,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 174,
                        "line_start": 174,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 48,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 6200,
                        "byte_start": 6197,
                        "column_end": 54,
                        "column_start": 51,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 174,
                        "line_start": 174,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 51,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 6203,
                        "byte_start": 6200,
                        "column_end": 57,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 174,
                        "line_start": 174,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 57,
                            "highlight_start": 54,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 6206,
                        "byte_start": 6203,
                        "column_end": 60,
                        "column_start": 57,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 174,
                        "line_start": 174,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 60,
                            "highlight_start": 57,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 6209,
                        "byte_start": 6206,
                        "column_end": 63,
                        "column_start": 60,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 174,
                        "line_start": 174,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 63,
                            "highlight_start": 60,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 6210,
                    "byte_start": 4639,
                    "column_end": 64,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\spot_light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 174,
                    "line_start": 145,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 13,
                        "text": "            format!("
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                \""
                      },
                      {
                        "highlight_end": 51,
                        "highlight_start": 1,
                        "text": "                    uniform sampler2D shadowMap{};"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                    uniform mat4 shadowMVP{};"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                    uniform vec3 color{};"
                      },
                      {
                        "highlight_end": 48,
                        "highlight_start": 1,
                        "text": "                    uniform vec3 attenuation{};"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                    uniform vec3 position{};"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "                    uniform float cutoff{};"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                    uniform vec3 direction{};"
                      },
                      {
                        "highlight_end": 165,
                        "highlight_start": 1,
                        "text": "                    vec3 calculate_lighting{}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughness, float occlusion)"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    {{"
                      },
                      {
                        "highlight_end": 70,
                        "highlight_start": 1,
                        "text": "                        vec3 light_direction = position{} - position;"
                      },
                      {
                        "highlight_end": 66,
                        "highlight_start": 1,
                        "text": "                        float distance = length(light_direction);"
                      },
                      {
                        "highlight_end": 70,
                        "highlight_start": 1,
                        "text": "                        light_direction = light_direction / distance;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 91,
                        "highlight_start": 1,
                        "text": "                        float angle = acos(dot(-light_direction, normalize(direction{})));"
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "                        float cutoff = cutoff{};"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "                        vec3 result = vec3(0.0);"
                      },
                      {
                        "highlight_end": 47,
                        "highlight_start": 1,
                        "text": "                        if (angle < cutoff) {{"
                      },
                      {
                        "highlight_end": 92,
                        "highlight_start": 1,
                        "text": "                            vec3 light_color = attenuate(color{}, attenuation{}, distance);"
                      },
                      {
                        "highlight_end": 122,
                        "highlight_start": 1,
                        "text": "                            result = calculate_light(light_color, light_direction, surface_color, view_direction, normal,"
                      },
                      {
                        "highlight_end": 105,
                        "highlight_start": 1,
                        "text": "                                metallic, roughness) * (1.0 - smoothstep(0.75 * cutoff, cutoff, angle));"
                      },
                      {
                        "highlight_end": 117,
                        "highlight_start": 1,
                        "text": "                            result *= calculate_shadow(light_direction, normal, shadowMap{}, shadowMVP{}, position);"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                        }}"
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "                        return result;"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    }}"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 64,
                        "highlight_start": 1,
                        "text": "                \", i, i, i, i, i, i, i, i, i, i, i, i, i, i, i)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\renderer\\light\\spot_light.rs:176:13\n    |\n176 | /             format!(\n177 | |                 \"\n178 | |                     uniform vec3 color{};\n179 | |                     uniform vec3 attenuation{};\n...   |\n201 | |                 \", i, i, i, i, i, i, i, i, i, i, i)\n    | |___________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n178 ~                     uniform vec3 color{i};\n179 ~                     uniform vec3 attenuation{i};\n180 ~                     uniform vec3 position{i};\n181 ~                     uniform float cutoff{i};\n182 ~                     uniform vec3 direction{i};\n183 ~                     vec3 calculate_lighting{i}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughness, float occlusion)\n184 |                     {{\n185 ~                         vec3 light_direction = position{i} - position;\n186 |                         float distance = length(light_direction);\n187 |                         light_direction = light_direction / distance;\n188 |\n189 ~                         float angle = acos(dot(-light_direction, normalize(direction{i})));\n190 ~                         float cutoff = cutoff{i};\n191 |\n192 |                         vec3 result = vec3(0.0);\n193 |                         if (angle < cutoff) {{\n194 ~                             vec3 light_color = attenuate(color{i}, attenuation{i}, distance);\n195 |                             result = calculate_light(light_color, light_direction, surface_color, view_direction, normal,\n...\n200 |\n201 ~                 \")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6306,
                        "byte_start": 6306,
                        "column_end": 40,
                        "column_start": 40,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 178,
                        "line_start": 178,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 40,
                            "text": "                    uniform vec3 color{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 6354,
                        "byte_start": 6354,
                        "column_end": 46,
                        "column_start": 46,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 179,
                        "line_start": 179,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 46,
                            "text": "                    uniform vec3 attenuation{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 6399,
                        "byte_start": 6399,
                        "column_end": 43,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 180,
                        "line_start": 180,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 43,
                            "text": "                    uniform vec3 position{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 6443,
                        "byte_start": 6443,
                        "column_end": 42,
                        "column_start": 42,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 181,
                        "line_start": 181,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 42,
                            "text": "                    uniform float cutoff{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 6489,
                        "byte_start": 6489,
                        "column_end": 44,
                        "column_start": 44,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 182,
                        "line_start": 182,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 44,
                            "text": "                    uniform vec3 direction{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 6536,
                        "byte_start": 6536,
                        "column_end": 45,
                        "column_start": 45,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 183,
                        "line_start": 183,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 45,
                            "text": "                    vec3 calculate_lighting{}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughness, float occlusion)"
                          }
                        ]
                      },
                      {
                        "byte_end": 6736,
                        "byte_start": 6736,
                        "column_end": 57,
                        "column_start": 57,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 185,
                        "line_start": 185,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 57,
                            "highlight_start": 57,
                            "text": "                        vec3 light_direction = position{} - position;"
                          }
                        ]
                      },
                      {
                        "byte_end": 6972,
                        "byte_start": 6972,
                        "column_end": 86,
                        "column_start": 86,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 189,
                        "line_start": 189,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 86,
                            "highlight_start": 86,
                            "text": "                        float angle = acos(dot(-light_direction, normalize(direction{})));"
                          }
                        ]
                      },
                      {
                        "byte_end": 7024,
                        "byte_start": 7024,
                        "column_end": 47,
                        "column_start": 47,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 190,
                        "line_start": 190,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 47,
                            "text": "                        float cutoff = cutoff{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 7187,
                        "byte_start": 7187,
                        "column_end": 64,
                        "column_start": 64,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 194,
                        "line_start": 194,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 64,
                            "highlight_start": 64,
                            "text": "                            vec3 light_color = attenuate(color{}, attenuation{}, distance);"
                          }
                        ]
                      },
                      {
                        "byte_end": 7202,
                        "byte_start": 7202,
                        "column_end": 79,
                        "column_start": 79,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 194,
                        "line_start": 194,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 79,
                            "highlight_start": 79,
                            "text": "                            vec3 light_color = attenuate(color{}, attenuation{}, distance);"
                          }
                        ]
                      },
                      {
                        "byte_end": 7553,
                        "byte_start": 7550,
                        "column_end": 21,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 201,
                        "line_start": 201,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 21,
                            "highlight_start": 18,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 7556,
                        "byte_start": 7553,
                        "column_end": 24,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 201,
                        "line_start": 201,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 21,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 7559,
                        "byte_start": 7556,
                        "column_end": 27,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 201,
                        "line_start": 201,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 24,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 7562,
                        "byte_start": 7559,
                        "column_end": 30,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 201,
                        "line_start": 201,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 27,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 7565,
                        "byte_start": 7562,
                        "column_end": 33,
                        "column_start": 30,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 201,
                        "line_start": 201,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 30,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 7568,
                        "byte_start": 7565,
                        "column_end": 36,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 201,
                        "line_start": 201,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 33,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 7571,
                        "byte_start": 7568,
                        "column_end": 39,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 201,
                        "line_start": 201,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 36,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 7574,
                        "byte_start": 7571,
                        "column_end": 42,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 201,
                        "line_start": 201,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 39,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 7577,
                        "byte_start": 7574,
                        "column_end": 45,
                        "column_start": 42,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 201,
                        "line_start": 201,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 42,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 7580,
                        "byte_start": 7577,
                        "column_end": 48,
                        "column_start": 45,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 201,
                        "line_start": 201,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 45,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 7583,
                        "byte_start": 7580,
                        "column_end": 51,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 201,
                        "line_start": 201,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 48,
                            "text": "                \", i, i, i, i, i, i, i, i, i, i, i)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 7584,
                    "byte_start": 6240,
                    "column_end": 52,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\spot_light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 201,
                    "line_start": 176,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 13,
                        "text": "            format!("
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                \""
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                    uniform vec3 color{};"
                      },
                      {
                        "highlight_end": 48,
                        "highlight_start": 1,
                        "text": "                    uniform vec3 attenuation{};"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                    uniform vec3 position{};"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "                    uniform float cutoff{};"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                    uniform vec3 direction{};"
                      },
                      {
                        "highlight_end": 165,
                        "highlight_start": 1,
                        "text": "                    vec3 calculate_lighting{}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughness, float occlusion)"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    {{"
                      },
                      {
                        "highlight_end": 70,
                        "highlight_start": 1,
                        "text": "                        vec3 light_direction = position{} - position;"
                      },
                      {
                        "highlight_end": 66,
                        "highlight_start": 1,
                        "text": "                        float distance = length(light_direction);"
                      },
                      {
                        "highlight_end": 70,
                        "highlight_start": 1,
                        "text": "                        light_direction = light_direction / distance;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 91,
                        "highlight_start": 1,
                        "text": "                        float angle = acos(dot(-light_direction, normalize(direction{})));"
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "                        float cutoff = cutoff{};"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "                        vec3 result = vec3(0.0);"
                      },
                      {
                        "highlight_end": 47,
                        "highlight_start": 1,
                        "text": "                        if (angle < cutoff) {{"
                      },
                      {
                        "highlight_end": 92,
                        "highlight_start": 1,
                        "text": "                            vec3 light_color = attenuate(color{}, attenuation{}, distance);"
                      },
                      {
                        "highlight_end": 122,
                        "highlight_start": 1,
                        "text": "                            result = calculate_light(light_color, light_direction, surface_color, view_direction, normal,"
                      },
                      {
                        "highlight_end": 105,
                        "highlight_start": 1,
                        "text": "                                metallic, roughness) * (1.0 - smoothstep(0.75 * cutoff, cutoff, angle));"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                        }}"
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "                        return result;"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    }}"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 52,
                        "highlight_start": 1,
                        "text": "                \", i, i, i, i, i, i, i, i, i, i, i)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\renderer\\light\\spot_light.rs:206:40\n    |\n206 |             program.use_depth_texture(&format!(\"shadowMap{}\", i), tex);\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n206 -             program.use_depth_texture(&format!(\"shadowMap{}\", i), tex);\n206 +             program.use_depth_texture(&format!(\"shadowMap{i}\"), tex);\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7768,
                        "byte_start": 7768,
                        "column_end": 59,
                        "column_start": 59,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 206,
                        "line_start": 206,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 59,
                            "text": "            program.use_depth_texture(&format!(\"shadowMap{}\", i), tex);"
                          }
                        ]
                      },
                      {
                        "byte_end": 7773,
                        "byte_start": 7770,
                        "column_end": 64,
                        "column_start": 61,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 206,
                        "line_start": 206,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 64,
                            "highlight_start": 61,
                            "text": "            program.use_depth_texture(&format!(\"shadowMap{}\", i), tex);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 7774,
                    "byte_start": 7749,
                    "column_end": 65,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\spot_light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 206,
                    "line_start": 206,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 65,
                        "highlight_start": 40,
                        "text": "            program.use_depth_texture(&format!(\"shadowMap{}\", i), tex);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\renderer\\light\\spot_light.rs:207:34\n    |\n207 |             program.use_uniform(&format!(\"shadowMVP{}\", i), self.shadow_matrix);\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n207 -             program.use_uniform(&format!(\"shadowMVP{}\", i), self.shadow_matrix);\n207 +             program.use_uniform(&format!(\"shadowMVP{i}\"), self.shadow_matrix);\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7834,
                        "byte_start": 7834,
                        "column_end": 53,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 207,
                        "line_start": 207,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 53,
                            "text": "            program.use_uniform(&format!(\"shadowMVP{}\", i), self.shadow_matrix);"
                          }
                        ]
                      },
                      {
                        "byte_end": 7839,
                        "byte_start": 7836,
                        "column_end": 58,
                        "column_start": 55,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 207,
                        "line_start": 207,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 55,
                            "text": "            program.use_uniform(&format!(\"shadowMVP{}\", i), self.shadow_matrix);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 7840,
                    "byte_start": 7815,
                    "column_end": 59,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\spot_light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 207,
                    "line_start": 207,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 34,
                        "text": "            program.use_uniform(&format!(\"shadowMVP{}\", i), self.shadow_matrix);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\renderer\\light\\spot_light.rs:210:14\n    |\n210 |             &format!(\"color{}\", i),\n    |              ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n210 -             &format!(\"color{}\", i),\n210 +             &format!(\"color{i}\"),\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7930,
                        "byte_start": 7930,
                        "column_end": 29,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 210,
                        "line_start": 210,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 29,
                            "text": "            &format!(\"color{}\", i),"
                          }
                        ]
                      },
                      {
                        "byte_end": 7935,
                        "byte_start": 7932,
                        "column_end": 34,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 210,
                        "line_start": 210,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 34,
                            "highlight_start": 31,
                            "text": "            &format!(\"color{}\", i),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 7936,
                    "byte_start": 7915,
                    "column_end": 35,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\spot_light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 210,
                    "line_start": 210,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 14,
                        "text": "            &format!(\"color{}\", i),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\renderer\\light\\spot_light.rs:214:14\n    |\n214 |             &format!(\"attenuation{}\", i),\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n214 -             &format!(\"attenuation{}\", i),\n214 +             &format!(\"attenuation{i}\"),\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8081,
                        "byte_start": 8081,
                        "column_end": 35,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 214,
                        "line_start": 214,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 35,
                            "text": "            &format!(\"attenuation{}\", i),"
                          }
                        ]
                      },
                      {
                        "byte_end": 8086,
                        "byte_start": 8083,
                        "column_end": 40,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 214,
                        "line_start": 214,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 37,
                            "text": "            &format!(\"attenuation{}\", i),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 8087,
                    "byte_start": 8060,
                    "column_end": 41,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\spot_light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 214,
                    "line_start": 214,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 14,
                        "text": "            &format!(\"attenuation{}\", i),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\renderer\\light\\spot_light.rs:221:30\n    |\n221 |         program.use_uniform(&format!(\"position{}\", i), self.position);\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n221 -         program.use_uniform(&format!(\"position{}\", i), self.position);\n221 +         program.use_uniform(&format!(\"position{i}\"), self.position);\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8308,
                        "byte_start": 8308,
                        "column_end": 48,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 221,
                        "line_start": 221,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 48,
                            "text": "        program.use_uniform(&format!(\"position{}\", i), self.position);"
                          }
                        ]
                      },
                      {
                        "byte_end": 8313,
                        "byte_start": 8310,
                        "column_end": 53,
                        "column_start": 50,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 221,
                        "line_start": 221,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 50,
                            "text": "        program.use_uniform(&format!(\"position{}\", i), self.position);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 8314,
                    "byte_start": 8290,
                    "column_end": 54,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\spot_light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 221,
                    "line_start": 221,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 30,
                        "text": "        program.use_uniform(&format!(\"position{}\", i), self.position);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\renderer\\light\\spot_light.rs:222:30\n    |\n222 |         program.use_uniform(&format!(\"direction{}\", i), self.direction.normalize());\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n222 -         program.use_uniform(&format!(\"direction{}\", i), self.direction.normalize());\n222 +         program.use_uniform(&format!(\"direction{i}\"), self.direction.normalize());\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8380,
                        "byte_start": 8380,
                        "column_end": 49,
                        "column_start": 49,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 222,
                        "line_start": 222,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 49,
                            "text": "        program.use_uniform(&format!(\"direction{}\", i), self.direction.normalize());"
                          }
                        ]
                      },
                      {
                        "byte_end": 8385,
                        "byte_start": 8382,
                        "column_end": 54,
                        "column_start": 51,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 222,
                        "line_start": 222,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 51,
                            "text": "        program.use_uniform(&format!(\"direction{}\", i), self.direction.normalize());"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 8386,
                    "byte_start": 8361,
                    "column_end": 55,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\spot_light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 222,
                    "line_start": 222,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 55,
                        "highlight_start": 30,
                        "text": "        program.use_uniform(&format!(\"direction{}\", i), self.direction.normalize());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\renderer\\light\\spot_light.rs:223:30\n    |\n223 |         program.use_uniform(&format!(\"cutoff{}\", i), self.cutoff.0);\n    |                              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n223 -         program.use_uniform(&format!(\"cutoff{}\", i), self.cutoff.0);\n223 +         program.use_uniform(&format!(\"cutoff{i}\"), self.cutoff.0);\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8462,
                        "byte_start": 8462,
                        "column_end": 46,
                        "column_start": 46,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 223,
                        "line_start": 223,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 46,
                            "text": "        program.use_uniform(&format!(\"cutoff{}\", i), self.cutoff.0);"
                          }
                        ]
                      },
                      {
                        "byte_end": 8467,
                        "byte_start": 8464,
                        "column_end": 51,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\spot_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 223,
                        "line_start": 223,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 48,
                            "text": "        program.use_uniform(&format!(\"cutoff{}\", i), self.cutoff.0);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 8468,
                    "byte_start": 8446,
                    "column_end": 52,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\spot_light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 223,
                    "line_start": 223,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 52,
                        "highlight_start": 30,
                        "text": "        program.use_uniform(&format!(\"cutoff{}\", i), self.cutoff.0);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\renderer\\light\\point_light.rs:38:9\n   |\n38 | /         format!(\n39 | |         \"\n40 | |             uniform vec3 color{};\n41 | |             uniform vec3 attenuation{};\n...  |\n54 | |         \", i, i, i, i, i, i, i)\n   | |_______________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n40 ~             uniform vec3 color{i};\n41 ~             uniform vec3 attenuation{i};\n42 ~             uniform vec3 position{i};\n43 |\n44 ~             vec3 calculate_lighting{i}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughness, float occlusion)\n45 |             {{\n46 ~                 vec3 light_direction = position{i} - position;\n47 |                 float distance = length(light_direction);\n48 |                 light_direction = light_direction / distance;\n49 |\n50 ~                 vec3 light_color = attenuate(color{i}, attenuation{i}, distance);\n51 |                 return calculate_light(light_color, light_direction, surface_color, view_direction, normal, metallic, roughness);\n52 |             }}\n53 |         \n54 ~         \")\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1002,
                        "byte_start": 1002,
                        "column_end": 32,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\point_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 40,
                        "line_start": 40,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 32,
                            "text": "            uniform vec3 color{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 1042,
                        "byte_start": 1042,
                        "column_end": 38,
                        "column_start": 38,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\point_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 41,
                        "line_start": 41,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 38,
                            "highlight_start": 38,
                            "text": "            uniform vec3 attenuation{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 1079,
                        "byte_start": 1079,
                        "column_end": 35,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\point_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 42,
                        "line_start": 42,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 35,
                            "text": "            uniform vec3 position{};"
                          }
                        ]
                      },
                      {
                        "byte_end": 1119,
                        "byte_start": 1119,
                        "column_end": 37,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\point_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 37,
                            "highlight_start": 37,
                            "text": "            vec3 calculate_lighting{}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughness, float occlusion)"
                          }
                        ]
                      },
                      {
                        "byte_end": 1303,
                        "byte_start": 1303,
                        "column_end": 49,
                        "column_start": 49,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\point_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 46,
                        "line_start": 46,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 49,
                            "text": "                vec3 light_direction = position{} - position;"
                          }
                        ]
                      },
                      {
                        "byte_end": 1489,
                        "byte_start": 1489,
                        "column_end": 52,
                        "column_start": 52,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\point_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 50,
                        "line_start": 50,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 52,
                            "highlight_start": 52,
                            "text": "                vec3 light_color = attenuate(color{}, attenuation{}, distance);"
                          }
                        ]
                      },
                      {
                        "byte_end": 1504,
                        "byte_start": 1504,
                        "column_end": 67,
                        "column_start": 67,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\point_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 50,
                        "line_start": 50,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 67,
                            "highlight_start": 67,
                            "text": "                vec3 light_color = attenuate(color{}, attenuation{}, distance);"
                          }
                        ]
                      },
                      {
                        "byte_end": 1684,
                        "byte_start": 1681,
                        "column_end": 13,
                        "column_start": 10,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\point_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 54,
                        "line_start": 54,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 13,
                            "highlight_start": 10,
                            "text": "        \", i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 1687,
                        "byte_start": 1684,
                        "column_end": 16,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\point_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 54,
                        "line_start": 54,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 16,
                            "highlight_start": 13,
                            "text": "        \", i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 1690,
                        "byte_start": 1687,
                        "column_end": 19,
                        "column_start": 16,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\point_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 54,
                        "line_start": 54,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 19,
                            "highlight_start": 16,
                            "text": "        \", i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 1693,
                        "byte_start": 1690,
                        "column_end": 22,
                        "column_start": 19,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\point_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 54,
                        "line_start": 54,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 22,
                            "highlight_start": 19,
                            "text": "        \", i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 1696,
                        "byte_start": 1693,
                        "column_end": 25,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\point_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 54,
                        "line_start": 54,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 25,
                            "highlight_start": 22,
                            "text": "        \", i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 1699,
                        "byte_start": 1696,
                        "column_end": 28,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\point_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 54,
                        "line_start": 54,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 25,
                            "text": "        \", i, i, i, i, i, i, i)"
                          }
                        ]
                      },
                      {
                        "byte_end": 1702,
                        "byte_start": 1699,
                        "column_end": 31,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\point_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 54,
                        "line_start": 54,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 31,
                            "highlight_start": 28,
                            "text": "        \", i, i, i, i, i, i, i)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1703,
                    "byte_start": 952,
                    "column_end": 32,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\point_light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 54,
                    "line_start": 38,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 9,
                        "text": "        format!("
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        \""
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "            uniform vec3 color{};"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "            uniform vec3 attenuation{};"
                      },
                      {
                        "highlight_end": 37,
                        "highlight_start": 1,
                        "text": "            uniform vec3 position{};"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 157,
                        "highlight_start": 1,
                        "text": "            vec3 calculate_lighting{}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughness, float occlusion)"
                      },
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "            {{"
                      },
                      {
                        "highlight_end": 62,
                        "highlight_start": 1,
                        "text": "                vec3 light_direction = position{} - position;"
                      },
                      {
                        "highlight_end": 58,
                        "highlight_start": 1,
                        "text": "                float distance = length(light_direction);"
                      },
                      {
                        "highlight_end": 62,
                        "highlight_start": 1,
                        "text": "                light_direction = light_direction / distance;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 80,
                        "highlight_start": 1,
                        "text": "                vec3 light_color = attenuate(color{}, attenuation{}, distance);"
                      },
                      {
                        "highlight_end": 130,
                        "highlight_start": 1,
                        "text": "                return calculate_light(light_color, light_direction, surface_color, view_direction, normal, metallic, roughness);"
                      },
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "            }}"
                      },
                      {
                        "highlight_end": 9,
                        "highlight_start": 1,
                        "text": "        "
                      },
                      {
                        "highlight_end": 32,
                        "highlight_start": 1,
                        "text": "        \", i, i, i, i, i, i, i)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\renderer\\light\\point_light.rs:58:14\n   |\n58 |             &format!(\"color{}\", i),\n   |              ^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n58 -             &format!(\"color{}\", i),\n58 +             &format!(\"color{i}\"),\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1823,
                        "byte_start": 1823,
                        "column_end": 29,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\point_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 58,
                        "line_start": 58,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 29,
                            "text": "            &format!(\"color{}\", i),"
                          }
                        ]
                      },
                      {
                        "byte_end": 1828,
                        "byte_start": 1825,
                        "column_end": 34,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\point_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 58,
                        "line_start": 58,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 34,
                            "highlight_start": 31,
                            "text": "            &format!(\"color{}\", i),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1829,
                    "byte_start": 1808,
                    "column_end": 35,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\point_light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 58,
                    "line_start": 58,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 14,
                        "text": "            &format!(\"color{}\", i),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\renderer\\light\\point_light.rs:62:14\n   |\n62 |             &format!(\"attenuation{}\", i),\n   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n62 -             &format!(\"attenuation{}\", i),\n62 +             &format!(\"attenuation{i}\"),\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1974,
                        "byte_start": 1974,
                        "column_end": 35,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\point_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 62,
                        "line_start": 62,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 35,
                            "text": "            &format!(\"attenuation{}\", i),"
                          }
                        ]
                      },
                      {
                        "byte_end": 1979,
                        "byte_start": 1976,
                        "column_end": 40,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\point_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 62,
                        "line_start": 62,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 37,
                            "text": "            &format!(\"attenuation{}\", i),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1980,
                    "byte_start": 1953,
                    "column_end": 41,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\point_light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 62,
                    "line_start": 62,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 14,
                        "text": "            &format!(\"attenuation{}\", i),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\renderer\\light\\point_light.rs:69:30\n   |\n69 |         program.use_uniform(&format!(\"position{}\", i), self.position);\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n69 -         program.use_uniform(&format!(\"position{}\", i), self.position);\n69 +         program.use_uniform(&format!(\"position{i}\"), self.position);\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2201,
                        "byte_start": 2201,
                        "column_end": 48,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\point_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 69,
                        "line_start": 69,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 48,
                            "text": "        program.use_uniform(&format!(\"position{}\", i), self.position);"
                          }
                        ]
                      },
                      {
                        "byte_end": 2206,
                        "byte_start": 2203,
                        "column_end": 53,
                        "column_start": 50,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\point_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 69,
                        "line_start": 69,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 50,
                            "text": "        program.use_uniform(&format!(\"position{}\", i), self.position);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 2207,
                    "byte_start": 2183,
                    "column_end": 54,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\point_light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 69,
                    "line_start": 69,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 30,
                        "text": "        program.use_uniform(&format!(\"position{}\", i), self.position);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\renderer\\light\\ambient_light.rs:45:13\n   |\n45 | /             format!(\n46 | |             \"\n47 | |                 uniform samplerCube irradianceMap;\n48 | |                 uniform samplerCube prefilterMap;\n...  |\n78 | |             \", i)\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n52 ~                 vec3 calculate_lighting{i}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughness, float occlusion)\n53 |                 {{\n...\n77 |             \n78 ~             \")\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1685,
                        "byte_start": 1685,
                        "column_end": 41,
                        "column_start": 41,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\ambient_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 52,
                        "line_start": 52,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 41,
                            "text": "                vec3 calculate_lighting{}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughness, float occlusion)"
                          }
                        ]
                      },
                      {
                        "byte_end": 3328,
                        "byte_start": 3325,
                        "column_end": 17,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\ambient_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 78,
                        "line_start": 78,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 14,
                            "text": "            \", i)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 3329,
                    "byte_start": 1430,
                    "column_end": 18,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\ambient_light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 78,
                    "line_start": 45,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 13,
                        "text": "            format!("
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            \""
                      },
                      {
                        "highlight_end": 51,
                        "highlight_start": 1,
                        "text": "                uniform samplerCube irradianceMap;"
                      },
                      {
                        "highlight_end": 50,
                        "highlight_start": 1,
                        "text": "                uniform samplerCube prefilterMap;"
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "                uniform sampler2D brdfLUT;"
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "                uniform vec3 ambientColor;"
                      },
                      {
                        "highlight_end": 5,
                        "highlight_start": 1,
                        "text": "    "
                      },
                      {
                        "highlight_end": 161,
                        "highlight_start": 1,
                        "text": "                vec3 calculate_lighting{}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughness, float occlusion)"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                {{"
                      },
                      {
                        "highlight_end": 37,
                        "highlight_start": 1,
                        "text": "                    vec3 N = normal;"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                    vec3 V = view_direction;"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                    vec3 R = reflect(-V, N); "
                      },
                      {
                        "highlight_end": 55,
                        "highlight_start": 1,
                        "text": "                    float NdV = max(0.001, dot(N, V));"
                      },
                      {
                        "highlight_end": 21,
                        "highlight_start": 1,
                        "text": "                    "
                      },
                      {
                        "highlight_end": 105,
                        "highlight_start": 1,
                        "text": "                    // calculate reflectance at normal incidence; if dia-electric (like plastic) use F0 "
                      },
                      {
                        "highlight_end": 103,
                        "highlight_start": 1,
                        "text": "                    // of 0.04 and if it's a metal, use the albedo color as F0 (metallic workflow)    "
                      },
                      {
                        "highlight_end": 72,
                        "highlight_start": 1,
                        "text": "                    vec3 F0 = mix(vec3(0.04), surface_color, metallic);"
                      },
                      {
                        "highlight_end": 91,
                        "highlight_start": 1,
                        "text": "                    vec3 specular_fresnel = fresnel_schlick_roughness(F0, NdV, roughness);"
                      },
                      {
                        "highlight_end": 67,
                        "highlight_start": 1,
                        "text": "                    vec3 diffuse_fresnel = 1.0 - specular_fresnel;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                    // Diffuse"
                      },
                      {
                        "highlight_end": 69,
                        "highlight_start": 1,
                        "text": "                    vec3 irradiance = texture(irradianceMap, N).rgb;"
                      },
                      {
                        "highlight_end": 107,
                        "highlight_start": 1,
                        "text": "                    vec3 diffuse = diffuse_fresnel * mix(surface_color, vec3(0.0), metallic) * irradiance;"
                      },
                      {
                        "highlight_end": 21,
                        "highlight_start": 1,
                        "text": "                    "
                      },
                      {
                        "highlight_end": 162,
                        "highlight_start": 1,
                        "text": "                    // sample both the pre-filter map and the BRDF lut and combine them together as per the Split-Sum approximation to get the IBL specular part."
                      },
                      {
                        "highlight_end": 58,
                        "highlight_start": 1,
                        "text": "                    const float MAX_REFLECTION_LOD = 4.0;"
                      },
                      {
                        "highlight_end": 114,
                        "highlight_start": 1,
                        "text": "                    vec3 prefilteredColor = textureLod(prefilterMap, R,  roughness * MAX_REFLECTION_LOD).rgb;    "
                      },
                      {
                        "highlight_end": 76,
                        "highlight_start": 1,
                        "text": "                    vec2 brdf  = texture(brdfLUT, vec2(NdV, roughness)).rg;"
                      },
                      {
                        "highlight_end": 93,
                        "highlight_start": 1,
                        "text": "                    vec3 specular = prefilteredColor * (specular_fresnel * brdf.x + brdf.y);"
                      },
                      {
                        "highlight_end": 5,
                        "highlight_start": 1,
                        "text": "    "
                      },
                      {
                        "highlight_end": 76,
                        "highlight_start": 1,
                        "text": "                    return (diffuse + specular) * occlusion * ambientColor;"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 13,
                        "highlight_start": 1,
                        "text": "            "
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "            \", i)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\renderer\\light\\ambient_light.rs:80:13\n   |\n80 | / ...   format!(\n81 | | ...       \"\n82 | | ...           uniform vec3 ambientColor;\n83 | | ...           vec3 calculate_lighting{}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughn...\n...  |\n88 | | ...       \", i)\n   | |_______________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n83 ~                     vec3 calculate_lighting{i}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughness, float occlusion)\n84 |                     {{\n...\n87 |                 \n88 ~                 \")\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3477,
                        "byte_start": 3477,
                        "column_end": 45,
                        "column_start": 45,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\ambient_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 83,
                        "line_start": 83,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 45,
                            "text": "                    vec3 calculate_lighting{}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughness, float occlusion)"
                          }
                        ]
                      },
                      {
                        "byte_end": 3780,
                        "byte_start": 3777,
                        "column_end": 21,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\ambient_light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 21,
                            "highlight_start": 18,
                            "text": "                \", i)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 3781,
                    "byte_start": 3359,
                    "column_end": 22,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\ambient_light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 88,
                    "line_start": 80,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 13,
                        "text": "            format!("
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                \""
                      },
                      {
                        "highlight_end": 47,
                        "highlight_start": 1,
                        "text": "                    uniform vec3 ambientColor;"
                      },
                      {
                        "highlight_end": 165,
                        "highlight_start": 1,
                        "text": "                    vec3 calculate_lighting{}(vec3 surface_color, vec3 position, vec3 normal, vec3 view_direction, float metallic, float roughness, float occlusion)"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    {{"
                      },
                      {
                        "highlight_end": 99,
                        "highlight_start": 1,
                        "text": "                        return occlusion * ambientColor * mix(surface_color, vec3(0.0), metallic);"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    }}"
                      },
                      {
                        "highlight_end": 17,
                        "highlight_start": 1,
                        "text": "                "
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "                \", i)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the borrowed expression implements the required traits\n  --> src\\renderer\\light\\environment.rs:66:25\n   |\n66 |                         &Camera::new_2d(viewport),\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `Camera::new_2d(viewport)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n   = note: `#[warn(clippy::needless_borrows_for_generic_args)]` implied by `#[warn(clippy::all)]`\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_borrows_for_generic_args)]` implied by `#[warn(clippy::all)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2591,
                        "byte_start": 2566,
                        "column_end": 50,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\environment.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": "Camera::new_2d(viewport)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 50,
                            "highlight_start": 25,
                            "text": "                        &Camera::new_2d(viewport),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrows_for_generic_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "the borrowed expression implements the required traits",
                "spans": [
                  {
                    "byte_end": 2591,
                    "byte_start": 2566,
                    "column_end": 50,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\environment.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 66,
                    "line_start": 66,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 50,
                        "highlight_start": 25,
                        "text": "                        &Camera::new_2d(viewport),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the borrowed expression implements the required traits\n   --> src\\renderer\\light\\environment.rs:103:29\n    |\n103 | ...                   &Camera::new_2d(viewport),\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `Camera::new_2d(viewport)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3980,
                        "byte_start": 3955,
                        "column_end": 54,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\environment.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 103,
                        "line_start": 103,
                        "suggested_replacement": "Camera::new_2d(viewport)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 29,
                            "text": "                            &Camera::new_2d(viewport),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrows_for_generic_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "the borrowed expression implements the required traits",
                "spans": [
                  {
                    "byte_end": 3980,
                    "byte_start": 3955,
                    "column_end": 54,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\environment.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 103,
                    "line_start": 103,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 29,
                        "text": "                            &Camera::new_2d(viewport),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the borrowed expression implements the required traits\n   --> src\\renderer\\light\\environment.rs:127:17\n    |\n127 |                 &Camera::new_2d(viewport),\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `Camera::new_2d(viewport)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4691,
                        "byte_start": 4666,
                        "column_end": 42,
                        "column_start": 17,
                        "expansion": null,
                        "file_name": "src\\renderer\\light\\environment.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 127,
                        "line_start": 127,
                        "suggested_replacement": "Camera::new_2d(viewport)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 17,
                            "text": "                &Camera::new_2d(viewport),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrows_for_generic_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "the borrowed expression implements the required traits",
                "spans": [
                  {
                    "byte_end": 4691,
                    "byte_start": 4666,
                    "column_end": 42,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\renderer\\light\\environment.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 127,
                    "line_start": 127,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 17,
                        "text": "                &Camera::new_2d(viewport),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\renderer\\light.rs:143:27\n    |\n143 | ...r(&format!(\"color += calculate_lighting{}(surface_color, position, normal, view_direction, metallic, roughness, occlusion);\\n\", i))\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n143 -         dir_fun.push_str(&format!(\"color += calculate_lighting{}(surface_color, position, normal, view_direction, metallic, roughness, occlusion);\\n\", i))\n143 +         dir_fun.push_str(&format!(\"color += calculate_lighting{i}(surface_color, position, normal, view_direction, metallic, roughness, occlusion);\\n\"))\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4510,
                        "byte_start": 4510,
                        "column_end": 64,
                        "column_start": 64,
                        "expansion": null,
                        "file_name": "src\\renderer\\light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 143,
                        "line_start": 143,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 64,
                            "highlight_start": 64,
                            "text": "        dir_fun.push_str(&format!(\"color += calculate_lighting{}(surface_color, position, normal, view_direction, metallic, roughness, occlusion);\\n\", i))"
                          }
                        ]
                      },
                      {
                        "byte_end": 4599,
                        "byte_start": 4596,
                        "column_end": 153,
                        "column_start": 150,
                        "expansion": null,
                        "file_name": "src\\renderer\\light.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 143,
                        "line_start": 143,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 153,
                            "highlight_start": 150,
                            "text": "        dir_fun.push_str(&format!(\"color += calculate_lighting{}(surface_color, position, normal, view_direction, metallic, roughness, occlusion);\\n\", i))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 4600,
                    "byte_start": 4473,
                    "column_end": 154,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\renderer\\light.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 143,
                    "line_start": 143,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 154,
                        "highlight_start": 27,
                        "text": "        dir_fun.push_str(&format!(\"color += calculate_lighting{}(surface_color, position, normal, view_direction, metallic, roughness, occlusion);\\n\", i))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\renderer\\object\\water.rs:121:13\n    |\n121 |             panic!(\"Water only supports {} number of waves.\", MAX_WAVE_COUNT);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n121 -             panic!(\"Water only supports {} number of waves.\", MAX_WAVE_COUNT);\n121 +             panic!(\"Water only supports {MAX_WAVE_COUNT} number of waves.\");\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3932,
                        "byte_start": 3932,
                        "column_end": 42,
                        "column_start": 42,
                        "expansion": null,
                        "file_name": "src\\renderer\\object\\water.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 121,
                        "line_start": 121,
                        "suggested_replacement": "MAX_WAVE_COUNT",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 42,
                            "text": "            panic!(\"Water only supports {} number of waves.\", MAX_WAVE_COUNT);"
                          }
                        ]
                      },
                      {
                        "byte_end": 3967,
                        "byte_start": 3951,
                        "column_end": 77,
                        "column_start": 61,
                        "expansion": null,
                        "file_name": "src\\renderer\\object\\water.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 121,
                        "line_start": 121,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 77,
                            "highlight_start": 61,
                            "text": "            panic!(\"Water only supports {} number of waves.\", MAX_WAVE_COUNT);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 3968,
                    "byte_start": 3903,
                    "column_end": 78,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\renderer\\object\\water.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 121,
                    "line_start": 121,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 78,
                        "highlight_start": 13,
                        "text": "            panic!(\"Water only supports {} number of waves.\", MAX_WAVE_COUNT);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `if` statement can be collapsed\n  --> src\\renderer\\control\\orbit_control.rs:37:21\n   |\n37 | /                     if !*handled {\n38 | |                         if Some(MouseButton::Left) == *button {\n39 | |                             let speed = 0.01;\n40 | |                             camera.rotate_around_with_fixed_up(\n...  |\n48 | |                     }\n   | |_____________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n   = note: `#[warn(clippy::collapsible_if)]` implied by `#[warn(clippy::all)]`\nhelp: collapse nested if block\n   |\n37 ~                     if !*handled\n38 ~                         && Some(MouseButton::Left) == *button {\n39 |                             let speed = 0.01;\n...\n46 |                             change = true;\n47 ~                         }\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::collapsible_if)]` implied by `#[warn(clippy::all)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "collapse nested if block",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1120,
                        "byte_start": 1118,
                        "column_end": 35,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\renderer\\control\\orbit_control.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 37,
                        "line_start": 37,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 33,
                            "text": "                    if !*handled {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1604,
                        "byte_start": 1582,
                        "column_end": 22,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\renderer\\control\\orbit_control.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 48,
                        "line_start": 47,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 26,
                            "text": "                        }"
                          },
                          {
                            "highlight_end": 22,
                            "highlight_start": 1,
                            "text": "                    }"
                          }
                        ]
                      },
                      {
                        "byte_end": 1147,
                        "byte_start": 1145,
                        "column_end": 27,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\renderer\\control\\orbit_control.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 38,
                        "line_start": 38,
                        "suggested_replacement": "&&",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 25,
                            "text": "                        if Some(MouseButton::Left) == *button {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::collapsible_if",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `if` statement can be collapsed",
                "spans": [
                  {
                    "byte_end": 1604,
                    "byte_start": 1106,
                    "column_end": 22,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\renderer\\control\\orbit_control.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 48,
                    "line_start": 37,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 21,
                        "text": "                    if !*handled {"
                      },
                      {
                        "highlight_end": 64,
                        "highlight_start": 1,
                        "text": "                        if Some(MouseButton::Left) == *button {"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                            let speed = 0.01;"
                      },
                      {
                        "highlight_end": 64,
                        "highlight_start": 1,
                        "text": "                            camera.rotate_around_with_fixed_up("
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                                self.target,"
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "                                speed * delta.0,"
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "                                speed * delta.1,"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                            );"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                            *handled = true;"
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "                            change = true;"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                        }"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "                    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `if` statement can be collapsed\n  --> src\\renderer\\control\\free_orbit_control.rs:37:21\n   |\n37 | /                     if !*handled {\n38 | |                         if Some(MouseButton::Left) == *button {\n39 | |                             let speed = 0.01 * self.target.distance(camera.position()) + 0.001;\n40 | |                             camera.rotate_around(self.target, speed * delta.0, speed * delta.1);\n...  |\n44 | |                     }\n   | |_____________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n37 ~                     if !*handled\n38 ~                         && Some(MouseButton::Left) == *button {\n39 |                             let speed = 0.01 * self.target.distance(camera.position()) + 0.001;\n...\n42 |                             change = true;\n43 ~                         }\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "collapse nested if block",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1161,
                        "byte_start": 1159,
                        "column_end": 35,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\renderer\\control\\free_orbit_control.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 37,
                        "line_start": 37,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 33,
                            "text": "                    if !*handled {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1554,
                        "byte_start": 1532,
                        "column_end": 22,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\renderer\\control\\free_orbit_control.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 43,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 26,
                            "text": "                        }"
                          },
                          {
                            "highlight_end": 22,
                            "highlight_start": 1,
                            "text": "                    }"
                          }
                        ]
                      },
                      {
                        "byte_end": 1188,
                        "byte_start": 1186,
                        "column_end": 27,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\renderer\\control\\free_orbit_control.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 38,
                        "line_start": 38,
                        "suggested_replacement": "&&",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 25,
                            "text": "                        if Some(MouseButton::Left) == *button {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::collapsible_if",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `if` statement can be collapsed",
                "spans": [
                  {
                    "byte_end": 1554,
                    "byte_start": 1147,
                    "column_end": 22,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\renderer\\control\\free_orbit_control.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 44,
                    "line_start": 37,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 21,
                        "text": "                    if !*handled {"
                      },
                      {
                        "highlight_end": 64,
                        "highlight_start": 1,
                        "text": "                        if Some(MouseButton::Left) == *button {"
                      },
                      {
                        "highlight_end": 96,
                        "highlight_start": 1,
                        "text": "                            let speed = 0.01 * self.target.distance(camera.position()) + 0.001;"
                      },
                      {
                        "highlight_end": 97,
                        "highlight_start": 1,
                        "text": "                            camera.rotate_around(self.target, speed * delta.0, speed * delta.1);"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                            *handled = true;"
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "                            change = true;"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                        }"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "                    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `if` statement can be collapsed\n  --> src\\renderer\\control\\first_person_control.rs:29:21\n   |\n29 | /                     if !*handled {\n30 | |                         if Some(MouseButton::Left) == *button {\n31 | |                             camera.yaw(radians(delta.0 * std::f32::consts::PI / 1800.0));\n32 | |                             camera.pitch(radians(delta.1 * std::f32::consts::PI / 1800.0));\n...  |\n36 | |                     }\n   | |_____________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n29 ~                     if !*handled\n30 ~                         && Some(MouseButton::Left) == *button {\n31 |                             camera.yaw(radians(delta.0 * std::f32::consts::PI / 1800.0));\n...\n34 |                             change = true;\n35 ~                         }\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "collapse nested if block",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 841,
                        "byte_start": 839,
                        "column_end": 35,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\renderer\\control\\first_person_control.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 29,
                        "line_start": 29,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 33,
                            "text": "                    if !*handled {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1223,
                        "byte_start": 1201,
                        "column_end": 22,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\renderer\\control\\first_person_control.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 36,
                        "line_start": 35,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 26,
                            "text": "                        }"
                          },
                          {
                            "highlight_end": 22,
                            "highlight_start": 1,
                            "text": "                    }"
                          }
                        ]
                      },
                      {
                        "byte_end": 868,
                        "byte_start": 866,
                        "column_end": 27,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\renderer\\control\\first_person_control.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 30,
                        "line_start": 30,
                        "suggested_replacement": "&&",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 25,
                            "text": "                        if Some(MouseButton::Left) == *button {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::collapsible_if",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `if` statement can be collapsed",
                "spans": [
                  {
                    "byte_end": 1223,
                    "byte_start": 827,
                    "column_end": 22,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\renderer\\control\\first_person_control.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 36,
                    "line_start": 29,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 21,
                        "text": "                    if !*handled {"
                      },
                      {
                        "highlight_end": 64,
                        "highlight_start": 1,
                        "text": "                        if Some(MouseButton::Left) == *button {"
                      },
                      {
                        "highlight_end": 90,
                        "highlight_start": 1,
                        "text": "                            camera.yaw(radians(delta.0 * std::f32::consts::PI / 1800.0));"
                      },
                      {
                        "highlight_end": 92,
                        "highlight_start": 1,
                        "text": "                            camera.pitch(radians(delta.1 * std::f32::consts::PI / 1800.0));"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                            *handled = true;"
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "                            change = true;"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                        }"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "                    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unneeded `return` statement\n   --> src\\renderer.rs:401:5\n    |\n401 |     return id;\n    |     ^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` implied by `#[warn(clippy::all)]`\nhelp: remove `return`\n    |\n401 -     return id;\n401 +     id\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_return)]` implied by `#[warn(clippy::all)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "remove `return`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 15035,
                        "byte_start": 15026,
                        "column_end": 14,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\renderer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 401,
                        "line_start": 401,
                        "suggested_replacement": "id",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 14,
                            "highlight_start": 5,
                            "text": "    return id;"
                          }
                        ]
                      },
                      {
                        "byte_end": 15036,
                        "byte_start": 15035,
                        "column_end": 15,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\renderer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 401,
                        "line_start": 401,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 15,
                            "highlight_start": 14,
                            "text": "    return id;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_return",
                  "explanation": null
                },
                "level": "warning",
                "message": "unneeded `return` statement",
                "spans": [
                  {
                    "byte_end": 15035,
                    "byte_start": 15026,
                    "column_end": 14,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\renderer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 401,
                    "line_start": 401,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 14,
                        "highlight_start": 5,
                        "text": "    return id;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item without indentation\n --> src\\window.rs:4:5\n  |\n4 | //! from a [glow](https://crates.io/crates/glow) OpenGL/WebGL context.\n  |     ^\n  |\n  = help: if this is supposed to be its own paragraph, add a blank line\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\n  = note: `#[warn(clippy::doc_lazy_continuation)]` implied by `#[warn(clippy::all)]`\nhelp: indent this line\n  |\n4 | //!   from a [glow](https://crates.io/crates/glow) OpenGL/WebGL context.\n  |     ++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is supposed to be its own paragraph, add a blank line",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::doc_lazy_continuation)]` implied by `#[warn(clippy::all)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "indent this line",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 190,
                        "byte_start": 190,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\window.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 4,
                        "line_start": 4,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "//! from a [glow](https://crates.io/crates/glow) OpenGL/WebGL context."
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_lazy_continuation",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item without indentation",
                "spans": [
                  {
                    "byte_end": 190,
                    "byte_start": 190,
                    "column_end": 5,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\window.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 4,
                    "line_start": 4,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 5,
                        "highlight_start": 5,
                        "text": "//! from a [glow](https://crates.io/crates/glow) OpenGL/WebGL context."
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: useless use of `vec!`\n  --> src\\renderer\\geometry\\bounding_box.rs:33:28\n   |\n33 |           let translations = vec![\n   |  ____________________________^\n34 | |             min,\n35 | |             vec3(min.x, max.y, max.z),\n36 | |             vec3(min.x, min.y, max.z),\n...  |\n45 | |             vec3(max.x, min.y, min.z),\n46 | |         ];\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_vec\n   = note: `#[warn(clippy::useless_vec)]` implied by `#[warn(clippy::all)]`\nhelp: you can use an array directly\n   |\n33 ~         let translations = [min,\n34 +             vec3(min.x, max.y, max.z),\n35 +             vec3(min.x, min.y, max.z),\n36 +             vec3(min.x, max.y, min.z),\n37 +             min,\n38 +             vec3(max.x, min.y, max.z),\n39 +             vec3(min.x, min.y, max.z),\n40 +             vec3(max.x, min.y, min.z),\n41 +             min,\n42 +             vec3(max.x, max.y, min.z),\n43 +             vec3(min.x, max.y, min.z),\n44 ~             vec3(max.x, min.y, min.z)];\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_vec",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::useless_vec)]` implied by `#[warn(clippy::all)]`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "you can use an array directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1311,
                        "byte_start": 894,
                        "column_end": 10,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "src\\renderer\\geometry\\bounding_box.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 46,
                        "line_start": 33,
                        "suggested_replacement": "[min,\n            vec3(min.x, max.y, max.z),\n            vec3(min.x, min.y, max.z),\n            vec3(min.x, max.y, min.z),\n            min,\n            vec3(max.x, min.y, max.z),\n            vec3(min.x, min.y, max.z),\n            vec3(max.x, min.y, min.z),\n            min,\n            vec3(max.x, max.y, min.z),\n            vec3(min.x, max.y, min.z),\n            vec3(max.x, min.y, min.z)]",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 28,
                            "text": "        let translations = vec!["
                          },
                          {
                            "highlight_end": 17,
                            "highlight_start": 1,
                            "text": "            min,"
                          },
                          {
                            "highlight_end": 39,
                            "highlight_start": 1,
                            "text": "            vec3(min.x, max.y, max.z),"
                          },
                          {
                            "highlight_end": 39,
                            "highlight_start": 1,
                            "text": "            vec3(min.x, min.y, max.z),"
                          },
                          {
                            "highlight_end": 39,
                            "highlight_start": 1,
                            "text": "            vec3(min.x, max.y, min.z),"
                          },
                          {
                            "highlight_end": 17,
                            "highlight_start": 1,
                            "text": "            min,"
                          },
                          {
                            "highlight_end": 39,
                            "highlight_start": 1,
                            "text": "            vec3(max.x, min.y, max.z),"
                          },
                          {
                            "highlight_end": 39,
                            "highlight_start": 1,
                            "text": "            vec3(min.x, min.y, max.z),"
                          },
                          {
                            "highlight_end": 39,
                            "highlight_start": 1,
                            "text": "            vec3(max.x, min.y, min.z),"
                          },
                          {
                            "highlight_end": 17,
                            "highlight_start": 1,
                            "text": "            min,"
                          },
                          {
                            "highlight_end": 39,
                            "highlight_start": 1,
                            "text": "            vec3(max.x, max.y, min.z),"
                          },
                          {
                            "highlight_end": 39,
                            "highlight_start": 1,
                            "text": "            vec3(min.x, max.y, min.z),"
                          },
                          {
                            "highlight_end": 39,
                            "highlight_start": 1,
                            "text": "            vec3(max.x, min.y, min.z),"
                          },
                          {
                            "highlight_end": 10,
                            "highlight_start": 1,
                            "text": "        ];"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::useless_vec",
                  "explanation": null
                },
                "level": "warning",
                "message": "useless use of `vec!`",
                "spans": [
                  {
                    "byte_end": 1311,
                    "byte_start": 894,
                    "column_end": 10,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\renderer\\geometry\\bounding_box.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 46,
                    "line_start": 33,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 28,
                        "text": "        let translations = vec!["
                      },
                      {
                        "highlight_end": 17,
                        "highlight_start": 1,
                        "text": "            min,"
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "            vec3(min.x, max.y, max.z),"
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "            vec3(min.x, min.y, max.z),"
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "            vec3(min.x, max.y, min.z),"
                      },
                      {
                        "highlight_end": 17,
                        "highlight_start": 1,
                        "text": "            min,"
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "            vec3(max.x, min.y, max.z),"
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "            vec3(min.x, min.y, max.z),"
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "            vec3(max.x, min.y, min.z),"
                      },
                      {
                        "highlight_end": 17,
                        "highlight_start": 1,
                        "text": "            min,"
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "            vec3(max.x, max.y, min.z),"
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "            vec3(min.x, max.y, min.z),"
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "            vec3(max.x, min.y, min.z),"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        ];"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpyt567hf0/three-d-0.18.2#three-d@0.18.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "three_d",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "glutin",
                "raw-window-handle",
                "serde",
                "serde-wasm-bindgen",
                "wasm-bindgen",
                "web-sys",
                "window",
                "winit"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpyt567hf0\\three-d-0.18.2\\target\\debug\\deps\\libthree_d-79d1afcc73f899a4.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 374
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": true,
              "count": 2,
              "list": [
                {
                  "advisory": {
                    "id": "RUSTSEC-2025-0004",
                    "package": "openssl",
                    "title": "ssl::select_next_proto use after free",
                    "description": "In `openssl` versions before `0.10.70`, `ssl::select_next_proto` can return a slice pointing into the `server` argument's buffer but with a lifetime bound to the `client` argument. In situations where the `server` buffer's lifetime is shorter than the `client` buffer's, this can cause a use after free. This could cause the server to crash or to return arbitrary memory contents to the client.\n\n`openssl` 0.10.70 fixes the signature of `ssl::select_next_proto` to properly constrain the output buffer's lifetime to that of both input buffers.\n\nIn standard usage of `ssl::select_next_proto` in the callback passed to `SslContextBuilder::set_alpn_select_callback`, code is only affected if the `server` buffer is constructed *within* the callback. For example:\n\nNot vulnerable - the server buffer has a `'static` lifetime:\n```rust\nbuilder.set_alpn_select_callback(|_, client_protos| {\n    ssl::select_next_proto(b\"\\x02h2\", client_protos).ok_or_else(AlpnError::NOACK)\n});\n```\n\nNot vulnerable - the server buffer outlives the handshake:\n```rust\nlet server_protos = b\"\\x02h2\".to_vec();\nbuilder.set_alpn_select_callback(|_, client_protos| {\n    ssl::select_next_proto(&server_protos, client_protos).ok_or_else(AlpnError::NOACK)\n});\n```\n\nVulnerable - the server buffer is freed when the callback returns:\n```rust\nbuilder.set_alpn_select_callback(|_, client_protos| {\n    let server_protos = b\"\\x02h2\".to_vec();\n    ssl::select_next_proto(&server_protos, client_protos).ok_or_else(AlpnError::NOACK)\n});\n```",
                    "date": "2025-02-02",
                    "aliases": [
                      "GHSA-rpmj-rpgj-qmpm"
                    ],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "memory-exposure"
                    ],
                    "keywords": [
                      "ssl",
                      "tls",
                      "alpn"
                    ],
                    "cvss": null,
                    "informational": null,
                    "references": [
                      "https://github.com/sfackler/rust-openssl/pull/2360"
                    ],
                    "source": null,
                    "url": "https://github.com/sfackler/rust-openssl/security/advisories/GHSA-rpmj-rpgj-qmpm",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=0.10.70"
                    ],
                    "unaffected": []
                  },
                  "affected": {
                    "arch": [],
                    "os": [],
                    "functions": {
                      "openssl::ssl::select_next_proto": [
                        ">=0.10.0, <0.10.70"
                      ]
                    }
                  },
                  "package": {
                    "name": "openssl",
                    "version": "0.10.68",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "6174bc48f102d208783c2c84bf931bb75927a617866870de8a4ea85597f871f5",
                    "dependencies": [
                      {
                        "name": "bitflags",
                        "version": "2.6.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "cfg-if",
                        "version": "1.0.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "foreign-types",
                        "version": "0.3.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.166",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "once_cell",
                        "version": "1.20.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "openssl-macros",
                        "version": "0.1.1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "openssl-sys",
                        "version": "0.9.104",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  }
                },
                {
                  "advisory": {
                    "id": "RUSTSEC-2025-0022",
                    "package": "openssl",
                    "title": "Use-After-Free in `Md::fetch` and `Cipher::fetch`",
                    "description": "When a `Some(...)` value was passed to the `properties` argument of either of these functions, a use-after-free would result.\n\nIn practice this would nearly always result in OpenSSL treating the properties as an empty string (due to `CString::drop`'s behavior).\n\nThe maintainers thank [quitbug](https://github.com/quitbug/) for reporting this vulnerability to us.",
                    "date": "2025-04-04",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "memory-corruption"
                    ],
                    "keywords": [],
                    "cvss": null,
                    "informational": null,
                    "references": [],
                    "source": null,
                    "url": "https://github.com/sfackler/rust-openssl/pull/2390",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=0.10.72"
                    ],
                    "unaffected": [
                      "<0.10.39"
                    ]
                  },
                  "affected": {
                    "arch": [],
                    "os": [],
                    "functions": {
                      "openssl::cipher::Cipher::fetch": [
                        ">=0.10.39, <0.10.72"
                      ],
                      "openssl::md::Md::fetch": [
                        ">=0.10.39, <0.10.72"
                      ]
                    }
                  },
                  "package": {
                    "name": "openssl",
                    "version": "0.10.68",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "6174bc48f102d208783c2c84bf931bb75927a617866870de8a4ea85597f871f5",
                    "dependencies": [
                      {
                        "name": "bitflags",
                        "version": "2.6.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "cfg-if",
                        "version": "1.0.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "foreign-types",
                        "version": "0.3.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.166",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "once_cell",
                        "version": "1.20.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "openssl-macros",
                        "version": "0.1.1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "openssl-sys",
                        "version": "0.9.104",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  }
                }
              ]
            },
            "warnings": {
              "unmaintained": [
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "instant",
                    "version": "0.1.13",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "e0242819d153cba4b4b05a5a8f2a7e9bbf97b6055b2a002b395c96b5ff3c0222",
                    "dependencies": [
                      {
                        "name": "cfg-if",
                        "version": "1.0.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "js-sys",
                        "version": "0.3.72",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "wasm-bindgen",
                        "version": "0.2.95",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "web-sys",
                        "version": "0.3.72",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2024-0384",
                    "package": "instant",
                    "title": "`instant` is unmaintained",
                    "description": "This crate is no longer maintained, and the author recommends using the maintained [`web-time`] crate instead.\n\n[`web-time`]: https://crates.io/crates/web-time",
                    "date": "2024-09-01",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [
                      "https://crates.io/crates/instant/0.1.13",
                      "https://github.com/sebcrozet/instant/issues/52"
                    ],
                    "source": null,
                    "url": null,
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                }
              ],
              "unsound": [
                {
                  "kind": "unsound",
                  "package": {
                    "name": "lexical",
                    "version": "5.2.2",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "f404a90a744e32e8be729034fc33b90cf2a56418fbf594d69aa3c0214ad414e5",
                    "dependencies": [
                      {
                        "name": "cfg-if",
                        "version": "1.0.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "lexical-core",
                        "version": "0.7.6",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2023-0055",
                    "package": "lexical",
                    "title": "Multiple soundness issues",
                    "description": "`lexical` contains multiple soundness issues:\n\n 1. [Bytes::read() allows creating instances of types with invalid bit patterns](https://github.com/Alexhuszagh/rust-lexical/issues/102)\n 1. [BytesIter::read() advances iterators out of bounds](https://github.com/Alexhuszagh/rust-lexical/issues/101)\n 1. [The `BytesIter` trait has safety invariants but is public and not marked `unsafe`](https://github.com/Alexhuszagh/rust-lexical/issues/104)\n 1. [`write_float()` calls `MaybeUninit::assume_init()` on uninitialized data, which is is not allowed by the Rust abstract machine](https://github.com/Alexhuszagh/rust-lexical/issues/95)\n 1. [`radix()` calls `MaybeUninit::assume_init()` on uninitialized data, which is is not allowed by the Rust abstract machine](https://github.com/Alexhuszagh/rust-lexical/issues/126)\n\nThe crate also has some correctness issues.\n\n## Alternatives\n\nFor quickly parsing floating-point numbers third-party crates are no longer needed. A fast float parsing algorithm by the author of `lexical` has been [merged](https://github.com/rust-lang/rust/pull/86761) into libcore.\n\nFor quickly parsing integers, consider `atoi` and `btoi` crates (100% safe code). `atoi_radix10` provides even faster parsing, but only with `-C target-cpu=native`, and at the cost of some `unsafe`.\n\nFor formatting integers in a `#[no_std]` context consider the [`numtoa`](https://crates.io/crates/numtoa) crate.\n\nFor working with big numbers consider `num-bigint` and `num-traits`.",
                    "date": "2023-09-03",
                    "aliases": [
                      "GHSA-c2hm-mjxv-89r4"
                    ],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unsound",
                    "references": [
                      "https://github.com/Alexhuszagh/rust-lexical/issues/102",
                      "https://github.com/Alexhuszagh/rust-lexical/issues/101",
                      "https://github.com/Alexhuszagh/rust-lexical/issues/95",
                      "https://github.com/Alexhuszagh/rust-lexical/issues/104",
                      "https://github.com/Alexhuszagh/rust-lexical/issues/126"
                    ],
                    "source": null,
                    "url": null,
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [
                      ">=7.0.0"
                    ],
                    "unaffected": []
                  }
                },
                {
                  "kind": "unsound",
                  "package": {
                    "name": "lexical-core",
                    "version": "0.7.6",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "6607c62aa161d23d17a9072cc5da0be67cdfc89d3afb1e8d9c842bebc2525ffe",
                    "dependencies": [
                      {
                        "name": "arrayvec",
                        "version": "0.5.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "bitflags",
                        "version": "1.3.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "cfg-if",
                        "version": "1.0.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "ryu",
                        "version": "1.0.18",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "static_assertions",
                        "version": "1.1.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2023-0086",
                    "package": "lexical-core",
                    "title": "Multiple soundness issues",
                    "description": "`RUSTSEC-2024-0377` contains multiple soundness issues:\n\n 1. [Bytes::read() allows creating instances of types with invalid bit patterns](https://github.com/Alexhuszagh/rust-lexical/issues/102)\n 1. [BytesIter::read() advances iterators out of bounds](https://github.com/Alexhuszagh/rust-lexical/issues/101)\n 1. [The `BytesIter` trait has safety invariants but is public and not marked `unsafe`](https://github.com/Alexhuszagh/rust-lexical/issues/104)\n 1. [`write_float()` calls `MaybeUninit::assume_init()` on uninitialized data, which is is not allowed by the Rust abstract machine](https://github.com/Alexhuszagh/rust-lexical/issues/95)\n 1. [`radix()` calls `MaybeUninit::assume_init()` on uninitialized data, which is is not allowed by the Rust abstract machine](https://github.com/Alexhuszagh/rust-lexical/issues/126)\n\nVersion 1.0 fixes these issues, removes the vast majority of `unsafe` code, and also fixes some correctness issues.",
                    "date": "2023-09-03",
                    "aliases": [],
                    "related": [
                      "RUSTSEC-2023-0055"
                    ],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unsound",
                    "references": [
                      "https://github.com/Alexhuszagh/rust-lexical/issues/102",
                      "https://github.com/Alexhuszagh/rust-lexical/issues/101",
                      "https://github.com/Alexhuszagh/rust-lexical/issues/95",
                      "https://github.com/Alexhuszagh/rust-lexical/issues/104",
                      "https://github.com/Alexhuszagh/rust-lexical/issues/126"
                    ],
                    "source": null,
                    "url": null,
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [
                      ">=1.0.0"
                    ],
                    "unaffected": []
                  }
                },
                {
                  "kind": "unsound",
                  "package": {
                    "name": "tokio",
                    "version": "1.41.1",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "22cfb5bee7a6a52939ca9224d6ac897bb669134078daa8735560897f69de4d33",
                    "dependencies": [
                      {
                        "name": "backtrace",
                        "version": "0.3.74",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "bytes",
                        "version": "1.9.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.166",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "mio",
                        "version": "1.0.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "pin-project-lite",
                        "version": "0.2.15",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "socket2",
                        "version": "0.5.8",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "tokio-macros",
                        "version": "2.4.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "windows-sys",
                        "version": "0.52.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2025-0023",
                    "package": "tokio",
                    "title": "Broadcast channel calls clone in parallel, but does not require `Sync`",
                    "description": "The broadcast channel internally calls `clone` on the stored value when\nreceiving it, and only requires `T:Send`. This means that using the broadcast\nchannel with values that are `Send` but not `Sync` can trigger unsoundness if\nthe `clone` implementation makes use of the value being `!Sync`.\n\nThank you to Austin Bonander for finding and reporting this issue.",
                    "date": "2025-04-07",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "memory-corruption"
                    ],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unsound",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/tokio-rs/tokio/pull/7232",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [
                      ">=1.38.2, <1.39.0",
                      ">=1.42.1, <1.43.0",
                      ">=1.43.1, <1.44.0",
                      ">=1.44.2"
                    ],
                    "unaffected": [
                      "<0.2.5"
                    ]
                  }
                }
              ]
            }
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "three-d",
          "version": "0.18.2",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/three-d/latest/three_d/all.html \"show sidebar\")\n# Crate three_dCopy item path\n[Settings](https://docs.rs/three-d/latest/settings.html)\n[Help](https://docs.rs/three-d/latest/help.html)\nSummary[Source](https://docs.rs/three-d/latest/src/three_d/lib.rs.html#1-25)\nExpand description\nA 3D renderer which enables out-of-the-box build to both desktop and web with the same code. See the [README](https://crates.io/crates/three-d) for more information and the [examples](https://github.com/asny/three-d/tree/master/examples) for how to use it.\n## Re-exports[\u00a7](https://docs.rs/three-d/latest/three_d/#reexports)\n\n`pub use renderer[](https://docs.rs/three-d/latest/three_d/renderer/index.html \"mod three_d::renderer\")::*;`\n\n\n`pub use window[](https://docs.rs/three-d/latest/three_d/window/index.html \"mod three_d::window\")::*;`\n\n## Modules[\u00a7](https://docs.rs/three-d/latest/three_d/#modules)\n\n[context](https://docs.rs/three-d/latest/three_d/context/index.html \"mod three_d::context\")\n    Low-level graphics abstraction layer which maps one-to-one with the OpenGL graphics API on native and WebGL2 graphics API on web. This is just a re-export of the [glow](https://crates.io/crates/glow) crate. Use this if you want to have complete control of a feature but be aware that there are no safety checks.\n\n[core](https://docs.rs/three-d/latest/three_d/core/index.html \"mod three_d::core\")\n    Mid-level modular abstractions of common graphics concepts such as buffer, texture, program, render target and so on. Can be combined with low-level calls in the [context](https://docs.rs/three-d/latest/three_d/context/index.html \"mod three_d::context\") module as well as high-level functionality in the [renderer](https://docs.rs/three-d/latest/three_d/renderer/index.html \"mod three_d::renderer\") module.\n\n[renderer](https://docs.rs/three-d/latest/three_d/renderer/index.html \"mod three_d::renderer\")\n    High-level features for easy rendering of different types of objects with different types of shading. Can be combined seamlessly with the mid-level features in the [core](https://docs.rs/three-d/latest/three_d/core/index.html \"mod three_d::core\") module as well as functionality in the [context](https://docs.rs/three-d/latest/three_d/context/index.html \"mod three_d::context\") module.\n\n[window](https://docs.rs/three-d/latest/three_d/window/index.html \"mod three_d::window\")\n    Window, event handling and context creation for easy setup.\n## Structs[\u00a7](https://docs.rs/three-d/latest/three_d/#structs)\n\n[GUI](https://docs.rs/three-d/latest/three_d/struct.GUI.html \"struct three_d::GUI\")`egui-gui`\n    Integration of [egui](https://crates.io/crates/egui), an immediate mode GUI.\n",
            "markdown_with_citations": "[](https://docs.rs/three-d/latest/three_d/all.html \"show sidebar\")\n# Crate three_dCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA 3D renderer which enables out-of-the-box build to both desktop and web with the same code. See the README\u27e84\u27e9 for more information and the examples\u27e85\u27e9 for how to use it.\n## Re-exports\u00a7\u27e86\u27e9\n\n`pub use renderer[](https://docs.rs/three-d/latest/three_d/renderer/index.html \"mod three_d::renderer\")::*;`\n\n\n`pub use window[](https://docs.rs/three-d/latest/three_d/window/index.html \"mod three_d::window\")::*;`\n\n## Modules\u00a7\u27e87\u27e9\n\ncontext\u27e88\u27e9\n    Low-level graphics abstraction layer which maps one-to-one with the OpenGL graphics API on native and WebGL2 graphics API on web. This is just a re-export of the glow\u27e89\u27e9 crate. Use this if you want to have complete control of a feature but be aware that there are no safety checks.\n\ncore\u27e810\u27e9\n    Mid-level modular abstractions of common graphics concepts such as buffer, texture, program, render target and so on. Can be combined with low-level calls in the context\u27e88\u27e9 module as well as high-level functionality in the renderer\u27e811\u27e9 module.\n\nrenderer\u27e811\u27e9\n    High-level features for easy rendering of different types of objects with different types of shading. Can be combined seamlessly with the mid-level features in the core\u27e810\u27e9 module as well as functionality in the context\u27e88\u27e9 module.\n\nwindow\u27e812\u27e9\n    Window, event handling and context creation for easy setup.\n## Structs\u00a7\u27e813\u27e9\n\nGUI\u27e814\u27e9`egui-gui`\n    Integration of egui\u27e815\u27e9, an immediate mode GUI.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/three-d/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/three-d/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/three-d/latest/src/three_d/lib.rs.html#1-25: Source\n\u27e84\u27e9 https://crates.io/crates/three-d: README\n\u27e85\u27e9 https://github.com/asny/three-d/tree/master/examples: examples\n\u27e86\u27e9 https://docs.rs/three-d/latest/three_d/#reexports: \u00a7\n\u27e87\u27e9 https://docs.rs/three-d/latest/three_d/#modules: \u00a7\n\u27e88\u27e9 https://docs.rs/three-d/latest/three_d/context/index.html: mod three_d::context - context\n\u27e89\u27e9 https://crates.io/crates/glow: glow\n\u27e810\u27e9 https://docs.rs/three-d/latest/three_d/core/index.html: mod three_d::core - core\n\u27e811\u27e9 https://docs.rs/three-d/latest/three_d/renderer/index.html: mod three_d::renderer - renderer\n\u27e812\u27e9 https://docs.rs/three-d/latest/three_d/window/index.html: mod three_d::window - window\n\u27e813\u27e9 https://docs.rs/three-d/latest/three_d/#structs: \u00a7\n\u27e814\u27e9 https://docs.rs/three-d/latest/three_d/struct.GUI.html: struct three_d::GUI - GUI\n\u27e815\u27e9 https://crates.io/crates/egui: egui\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "three-d",
          "version": "0.18.2",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/three-d/latest/three_d/all.html \"show sidebar\")\n# Crate three_dCopy item path\n[Settings](https://docs.rs/three-d/latest/settings.html)\n[Help](https://docs.rs/three-d/latest/help.html)\nSummary[Source](https://docs.rs/three-d/latest/src/three_d/lib.rs.html#1-25)\nExpand description\nA 3D renderer which enables out-of-the-box build to both desktop and web with the same code. See the [README](https://crates.io/crates/three-d) for more information and the [examples](https://github.com/asny/three-d/tree/master/examples) for how to use it.\n## Re-exports[\u00a7](https://docs.rs/three-d/latest/three_d/#reexports)\n\n`pub use renderer[](https://docs.rs/three-d/latest/three_d/renderer/index.html \"mod three_d::renderer\")::*;`\n\n\n`pub use window[](https://docs.rs/three-d/latest/three_d/window/index.html \"mod three_d::window\")::*;`\n\n## Modules[\u00a7](https://docs.rs/three-d/latest/three_d/#modules)\n\n[context](https://docs.rs/three-d/latest/three_d/context/index.html \"mod three_d::context\")\n    Low-level graphics abstraction layer which maps one-to-one with the OpenGL graphics API on native and WebGL2 graphics API on web. This is just a re-export of the [glow](https://crates.io/crates/glow) crate. Use this if you want to have complete control of a feature but be aware that there are no safety checks.\n\n[core](https://docs.rs/three-d/latest/three_d/core/index.html \"mod three_d::core\")\n    Mid-level modular abstractions of common graphics concepts such as buffer, texture, program, render target and so on. Can be combined with low-level calls in the [context](https://docs.rs/three-d/latest/three_d/context/index.html \"mod three_d::context\") module as well as high-level functionality in the [renderer](https://docs.rs/three-d/latest/three_d/renderer/index.html \"mod three_d::renderer\") module.\n\n[renderer](https://docs.rs/three-d/latest/three_d/renderer/index.html \"mod three_d::renderer\")\n    High-level features for easy rendering of different types of objects with different types of shading. Can be combined seamlessly with the mid-level features in the [core](https://docs.rs/three-d/latest/three_d/core/index.html \"mod three_d::core\") module as well as functionality in the [context](https://docs.rs/three-d/latest/three_d/context/index.html \"mod three_d::context\") module.\n\n[window](https://docs.rs/three-d/latest/three_d/window/index.html \"mod three_d::window\")\n    Window, event handling and context creation for easy setup.\n## Structs[\u00a7](https://docs.rs/three-d/latest/three_d/#structs)\n\n[GUI](https://docs.rs/three-d/latest/three_d/struct.GUI.html \"struct three_d::GUI\")`egui-gui`\n    Integration of [egui](https://crates.io/crates/egui), an immediate mode GUI.\n",
            "markdown_with_citations": "[](https://docs.rs/three-d/latest/three_d/all.html \"show sidebar\")\n# Crate three_dCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA 3D renderer which enables out-of-the-box build to both desktop and web with the same code. See the README\u27e84\u27e9 for more information and the examples\u27e85\u27e9 for how to use it.\n## Re-exports\u00a7\u27e86\u27e9\n\n`pub use renderer[](https://docs.rs/three-d/latest/three_d/renderer/index.html \"mod three_d::renderer\")::*;`\n\n\n`pub use window[](https://docs.rs/three-d/latest/three_d/window/index.html \"mod three_d::window\")::*;`\n\n## Modules\u00a7\u27e87\u27e9\n\ncontext\u27e88\u27e9\n    Low-level graphics abstraction layer which maps one-to-one with the OpenGL graphics API on native and WebGL2 graphics API on web. This is just a re-export of the glow\u27e89\u27e9 crate. Use this if you want to have complete control of a feature but be aware that there are no safety checks.\n\ncore\u27e810\u27e9\n    Mid-level modular abstractions of common graphics concepts such as buffer, texture, program, render target and so on. Can be combined with low-level calls in the context\u27e88\u27e9 module as well as high-level functionality in the renderer\u27e811\u27e9 module.\n\nrenderer\u27e811\u27e9\n    High-level features for easy rendering of different types of objects with different types of shading. Can be combined seamlessly with the mid-level features in the core\u27e810\u27e9 module as well as functionality in the context\u27e88\u27e9 module.\n\nwindow\u27e812\u27e9\n    Window, event handling and context creation for easy setup.\n## Structs\u00a7\u27e813\u27e9\n\nGUI\u27e814\u27e9`egui-gui`\n    Integration of egui\u27e815\u27e9, an immediate mode GUI.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/three-d/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/three-d/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/three-d/latest/src/three_d/lib.rs.html#1-25: Source\n\u27e84\u27e9 https://crates.io/crates/three-d: README\n\u27e85\u27e9 https://github.com/asny/three-d/tree/master/examples: examples\n\u27e86\u27e9 https://docs.rs/three-d/latest/three_d/#reexports: \u00a7\n\u27e87\u27e9 https://docs.rs/three-d/latest/three_d/#modules: \u00a7\n\u27e88\u27e9 https://docs.rs/three-d/latest/three_d/context/index.html: mod three_d::context - context\n\u27e89\u27e9 https://crates.io/crates/glow: glow\n\u27e810\u27e9 https://docs.rs/three-d/latest/three_d/core/index.html: mod three_d::core - core\n\u27e811\u27e9 https://docs.rs/three-d/latest/three_d/renderer/index.html: mod three_d::renderer - renderer\n\u27e812\u27e9 https://docs.rs/three-d/latest/three_d/window/index.html: mod three_d::window - window\n\u27e813\u27e9 https://docs.rs/three-d/latest/three_d/#structs: \u00a7\n\u27e814\u27e9 https://docs.rs/three-d/latest/three_d/struct.GUI.html: struct three_d::GUI - GUI\n\u27e815\u27e9 https://crates.io/crates/egui: egui\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `three-d` crate is a versatile 3D rendering library that supports both desktop and web platforms using the same codebase. It offers a layered API with low-level graphics control via OpenGL/WebGL2 (`context`), modular mid-level abstractions (`core`), and high-level rendering features (`renderer`) for simplified object shading and rendering. Additionally, it includes tools for window management, event handling, and `egui` integration for GUI development.",
          "feature_summary": null,
          "use_case": "Unknown",
          "score": 7.0,
          "factual_counterfactual": "### Pair 1: Rendering Capabilities  \n\u2705 **Factual:** The `three-d` crate provides high-level features for rendering objects with various shading techniques, such as Phong shading and physically based rendering (PBR).  \n\u274c **Counterfactual:** The `three-d` crate only supports basic flat shading and does not provide any advanced shading techniques like PBR.  \n\n---\n\n### Pair 2: Platform Support  \n\u2705 **Factual:** The `three-d` crate allows developers to build applications that run on both desktop (using native OpenGL) and web (using WebGL2) without requiring separate codebases.  \n\u274c **Counterfactual:** The `three-d` crate is limited to desktop applications and does not support web-based rendering through WebGL2.  \n\n---\n\n### Pair 3: Integration with GUI Libraries  \n\u2705 **Factual:** The `three-d` crate integrates with the `egui` crate, enabling developers to create immediate mode GUIs alongside 3D rendering.  \n\u274c **Counterfactual:** The `three-d` crate requires developers to write custom GUI code from scratch and does not support integration with existing GUI libraries like `egui`.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-964eb20c-cd2f13d0-1751265556",
      "timestamp": "2025-06-30T06:39:16.424298+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]