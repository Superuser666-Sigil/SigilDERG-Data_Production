[
  {
    "execution_id": "exec-edf52620-e800beed-1751262558",
    "timestamp": "2025-06-30T05:49:18.216175+00:00",
    "sacred_chain": {
      "input_data": "sled",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'sled' -> 'sled'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "sled",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/sled",
            "title": "sled v0.34.7",
            "content": {
              "raw_markdown": "#  sled v0.34.7\nLightweight high-performance pure-rust transactional embedded database. \n  * [ #lmdb ](https://crates.io/keywords/lmdb)\n  * [ #mongo ](https://crates.io/keywords/mongo)\n  * [ #redis ](https://crates.io/keywords/redis)\n  * [ #rocksdb ](https://crates.io/keywords/rocksdb)\n  * [ #sqlite ](https://crates.io/keywords/sqlite)\n\n\n  * [ Readme ](https://crates.io/crates/sled)\n  * [ 105 Versions ](https://crates.io/crates/sled/versions)\n  * [ Dependencies ](https://crates.io/crates/sled/dependencies)\n  * [ Dependents ](https://crates.io/crates/sled/reverse_dependencies)\n\n\n## Metadata\nalmost 4 years ago \n2018 edition \n[ MIT ](https://choosealicense.com/licenses/mit) OR [ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0)\n474 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add sled\nOr add the following line to your Cargo.toml:\nsled = \"0.34.7\"\n## Documentation\n[ docs.rs/sled ](https://docs.rs/sled/)\n## Repository\n[ github.com/spacejam/sled ](https://github.com/spacejam/sled)\n## Owners\n## Categories\n  * [Algorithms](https://crates.io/categories/algorithms)\n  * [Caching](https://crates.io/categories/caching)\n  * [Concurrency](https://crates.io/categories/concurrency)\n  * [Data structures](https://crates.io/categories/data-structures)\n  * [Database implementations](https://crates.io/categories/database-implementations)\n\n\n[ Report crate ](https://crates.io/support?crate=sled&inquire=crate-violation)\n### Stats Overview\n6,668,242 Downloads all time\n105 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  sled v0.34.7\nLightweight high-performance pure-rust transactional embedded database. \n  *  #lmdb \u27e81\u27e9\n  *  #mongo \u27e82\u27e9\n  *  #redis \u27e83\u27e9\n  *  #rocksdb \u27e84\u27e9\n  *  #sqlite \u27e85\u27e9\n\n\n  *  Readme \u27e86\u27e9\n  *  105 Versions \u27e87\u27e9\n  *  Dependencies \u27e88\u27e9\n  *  Dependents \u27e89\u27e9\n\n\n## Metadata\nalmost 4 years ago \n2018 edition \n MIT \u27e810\u27e9 OR  Apache-2.0 \u27e811\u27e9\n474 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add sled\nOr add the following line to your Cargo.toml:\nsled = \"0.34.7\"\n## Documentation\n docs.rs/sled \u27e812\u27e9\n## Repository\n github.com/spacejam/sled \u27e813\u27e9\n## Owners\n## Categories\n  * Algorithms\u27e814\u27e9\n  * Caching\u27e815\u27e9\n  * Concurrency\u27e816\u27e9\n  * Data structures\u27e817\u27e9\n  * Database implementations\u27e818\u27e9\n\n\n Report crate \u27e819\u27e9\n### Stats Overview\n6,668,242 Downloads all time\n105 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/lmdb:  #lmdb \n\u27e82\u27e9 https://crates.io/keywords/mongo:  #mongo \n\u27e83\u27e9 https://crates.io/keywords/redis:  #redis \n\u27e84\u27e9 https://crates.io/keywords/rocksdb:  #rocksdb \n\u27e85\u27e9 https://crates.io/keywords/sqlite:  #sqlite \n\u27e86\u27e9 https://crates.io/crates/sled:  Readme \n\u27e87\u27e9 https://crates.io/crates/sled/versions:  105 Versions \n\u27e88\u27e9 https://crates.io/crates/sled/dependencies:  Dependencies \n\u27e89\u27e9 https://crates.io/crates/sled/reverse_dependencies:  Dependents \n\u27e810\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e811\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e812\u27e9 https://docs.rs/sled/:  docs.rs/sled \n\u27e813\u27e9 https://github.com/spacejam/sled:  github.com/spacejam/sled \n\u27e814\u27e9 https://crates.io/categories/algorithms: Algorithms\n\u27e815\u27e9 https://crates.io/categories/caching: Caching\n\u27e816\u27e9 https://crates.io/categories/concurrency: Concurrency\n\u27e817\u27e9 https://crates.io/categories/data-structures: Data structures\n\u27e818\u27e9 https://crates.io/categories/database-implementations: Database implementations\n\u27e819\u27e9 https://crates.io/support?crate=sled&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1633,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "116347.5997258"
          },
          "docs_rs": {
            "url": "https://docs.rs/sled",
            "title": "Crate sledCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/sled/latest/sled/all.html \"show sidebar\")\n# Crate sledCopy item path\n[Settings](https://docs.rs/sled/latest/settings.html)\n[Help](https://docs.rs/sled/latest/help.html)\nSummary[Source](https://docs.rs/sled/latest/src/sled/lib.rs.html#1-527)\nExpand description\n`sled` is a high-performance embedded database with an API that is similar to a `BTreeMap<[u8], [u8]>`, but with several additional capabilities for assisting creators of stateful systems.\nIt is fully thread-safe, and all operations are atomic. Multiple `Tree`s with isolated keyspaces are supported with the [`Db::open_tree`](https://docs.rs/sled/latest/sled/struct.Db.html#method.open_tree) method.\nACID transactions involving reads and writes to multiple items are supported with the [`Tree::transaction`](https://docs.rs/sled/latest/sled/struct.Tree.html#method.transaction) method. Transactions may also operate over multiple `Tree`s (see [`Tree::transaction`](https://docs.rs/sled/latest/sled/struct.Tree.html#method.transaction) docs for more info).\nUsers may also subscribe to updates on individual `Tree`s by using the [`Tree::watch_prefix`](https://docs.rs/sled/latest/sled/struct.Tree.html#method.watch_prefix) method, which returns a blocking `Iterator` over updates to keys that begin with the provided prefix. You may supply an empty prefix to subscribe to everything.\n[Merge operators](https://github.com/spacejam/sled/wiki/merge-operators) (aka read-modify-write operators) are supported. A merge operator is a function that specifies how new data can be merged into an existing value without requiring both a read and a write. Using the [`Tree::merge`](https://docs.rs/sled/latest/sled/struct.Tree.html#method.merge) method, you may \u201cpush\u201d data to a `Tree` value and have the provided merge operator combine it with the existing value, if there was one. They are set on a per-`Tree` basis, and essentially allow any sort of data structure to be built using merges as an atomic high-level operation.\n`sled` is built by experienced database engineers who think users should spend less time tuning and working against high-friction APIs. Expect significant ergonomic and performance improvements over time. Most surprises are bugs, so please let us know if something is high friction.\n## [\u00a7](https://docs.rs/sled/latest/sled/#examples)Examples\n```\nlet db: sled::Db = sled::open(\"my_db\").unwrap();\n// insert and get\ndb.insert(b\"yo!\", b\"v1\");\nassert_eq!(&db.get(b\"yo!\").unwrap().unwrap(), b\"v1\");\n// Atomic compare-and-swap.\ndb.compare_and_swap(\n  b\"yo!\",   // key\n  Some(b\"v1\"), // old value, None for not present\n  Some(b\"v2\"), // new value, None for delete\n)\n.unwrap();\n// Iterates over key-value pairs, starting at the given key.\nlet scan_key: &[u8] = b\"a non-present key before yo!\";\nlet mut iter = db.range(scan_key..);\nassert_eq!(&iter.next().unwrap().unwrap().0, b\"yo!\");\nassert_eq!(iter.next(), None);\ndb.remove(b\"yo!\");\nassert_eq!(db.get(b\"yo!\"), Ok(None));\nlet other_tree: sled::Tree = db.open_tree(b\"cool db facts\").unwrap();\nother_tree.insert(\n  b\"k1\",\n  &b\"a Db acts like a Tree due to implementing Deref<Target = Tree>\"[..]\n).unwrap();\n```\n\n## Re-exports[\u00a7](https://docs.rs/sled/latest/sled/#reexports)\n\n`pub use self::transaction::Transactional[](https://docs.rs/sled/latest/sled/transaction/trait.Transactional.html \"trait sled::transaction::Transactional\");`\n\n## Modules[\u00a7](https://docs.rs/sled/latest/sled/#modules)\n\n[doc](https://docs.rs/sled/latest/sled/doc/index.html \"mod sled::doc\")\n    what is sled?\n\n[transaction](https://docs.rs/sled/latest/sled/transaction/index.html \"mod sled::transaction\")\n    Fully serializable (ACID) multi-`Tree` transactions\n## Structs[\u00a7](https://docs.rs/sled/latest/sled/#structs)\n\n[Batch](https://docs.rs/sled/latest/sled/struct.Batch.html \"struct sled::Batch\")\n    A batch of updates that will be applied atomically to the Tree.\n\n[CompareAndSwapError](https://docs.rs/sled/latest/sled/struct.CompareAndSwapError.html \"struct sled::CompareAndSwapError\")\n    Compare and swap error.\n\n[Config](https://docs.rs/sled/latest/sled/struct.Config.html \"struct sled::Config\")\n    Top-level configuration for the system.\n\n[Db](https://docs.rs/sled/latest/sled/struct.Db.html \"struct sled::Db\")\n    The `sled` embedded database! Implements `Deref<Target = sled::Tree>` to refer to a default keyspace / namespace / bucket.\n\n[IVec](https://docs.rs/sled/latest/sled/struct.IVec.html \"struct sled::IVec\")\n    A buffer that may either be inline or remote and protected by an Arc\n\n[Iter](https://docs.rs/sled/latest/sled/struct.Iter.html \"struct sled::Iter\")\n    An iterator over keys and values in a `Tree`.\n\n[Subscriber](https://docs.rs/sled/latest/sled/struct.Subscriber.html \"struct sled::Subscriber\")\n    A subscriber listening on a specified prefix\n\n[Tree](https://docs.rs/sled/latest/sled/struct.Tree.html \"struct sled::Tree\")\n    A flash-sympathetic persistent lock-free B+ tree.\n## Enums[\u00a7](https://docs.rs/sled/latest/sled/#enums)\n\n[Error](https://docs.rs/sled/latest/sled/enum.Error.html \"enum sled::Error\")\n    An Error type encapsulating various issues that may come up in the operation of a `Db`.\n\n[Event](https://docs.rs/sled/latest/sled/enum.Event.html \"enum sled::Event\")\n    An event that happened to a key that a subscriber is interested in.\n\n[Mode](https://docs.rs/sled/latest/sled/enum.Mode.html \"enum sled::Mode\")\n    The high-level database mode, according to the trade-offs of the RUM conjecture.\n## Traits[\u00a7](https://docs.rs/sled/latest/sled/#traits)\n\n[MergeOperator](https://docs.rs/sled/latest/sled/trait.MergeOperator.html \"trait sled::MergeOperator\")\n    A function that may be configured on a particular shared `Tree` that will be applied as a kind of read-modify-write operator to any values that are written using the `Tree::merge` method.\n## Functions[\u00a7](https://docs.rs/sled/latest/sled/#functions)\n\n[open](https://docs.rs/sled/latest/sled/fn.open.html \"fn sled::open\")\n    Opens a `Db` with a default configuration at the specified path. This will create a new storage directory at the specified path if it does not already exist. You can use the `Db::was_recovered` method to determine if your database was recovered from a previous instance. You can use `Config::create_new` if you want to increase the chances that the database will be freshly created.\n## Type Aliases[\u00a7](https://docs.rs/sled/latest/sled/#types)\n\n[Result](https://docs.rs/sled/latest/sled/type.Result.html \"type sled::Result\")\n    The top-level result type for dealing with fallible operations. The errors tend to be fail-stop, and nested results are used in cases where the outer fail-stop error can have try `?` used on it, exposing the inner operation that is expected to fail under normal operation. The philosophy behind this is detailed [on the sled blog](https://sled.rs/errors).\n",
              "markdown_with_citations": "[](https://docs.rs/sled/latest/sled/all.html \"show sidebar\")\n# Crate sledCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n`sled` is a high-performance embedded database with an API that is similar to a `BTreeMap<[u8], [u8]>`, but with several additional capabilities for assisting creators of stateful systems.\nIt is fully thread-safe, and all operations are atomic. Multiple `Tree`s with isolated keyspaces are supported with the `Db::open_tree`\u27e84\u27e9 method.\nACID transactions involving reads and writes to multiple items are supported with the `Tree::transaction`\u27e85\u27e9 method. Transactions may also operate over multiple `Tree`s (see `Tree::transaction`\u27e85\u27e9 docs for more info).\nUsers may also subscribe to updates on individual `Tree`s by using the `Tree::watch_prefix`\u27e86\u27e9 method, which returns a blocking `Iterator` over updates to keys that begin with the provided prefix. You may supply an empty prefix to subscribe to everything.\nMerge operators\u27e87\u27e9 (aka read-modify-write operators) are supported. A merge operator is a function that specifies how new data can be merged into an existing value without requiring both a read and a write. Using the `Tree::merge`\u27e88\u27e9 method, you may \u201cpush\u201d data to a `Tree` value and have the provided merge operator combine it with the existing value, if there was one. They are set on a per-`Tree` basis, and essentially allow any sort of data structure to be built using merges as an atomic high-level operation.\n`sled` is built by experienced database engineers who think users should spend less time tuning and working against high-friction APIs. Expect significant ergonomic and performance improvements over time. Most surprises are bugs, so please let us know if something is high friction.\n## \u00a7\u27e89\u27e9Examples\n```\nlet db: sled::Db = sled::open(\"my_db\").unwrap();\n// insert and get\ndb.insert(b\"yo!\", b\"v1\");\nassert_eq!(&db.get(b\"yo!\").unwrap().unwrap(), b\"v1\");\n// Atomic compare-and-swap.\ndb.compare_and_swap(\n  b\"yo!\",   // key\n  Some(b\"v1\"), // old value, None for not present\n  Some(b\"v2\"), // new value, None for delete\n)\n.unwrap();\n// Iterates over key-value pairs, starting at the given key.\nlet scan_key: &[u8] = b\"a non-present key before yo!\";\nlet mut iter = db.range(scan_key..);\nassert_eq!(&iter.next().unwrap().unwrap().0, b\"yo!\");\nassert_eq!(iter.next(), None);\ndb.remove(b\"yo!\");\nassert_eq!(db.get(b\"yo!\"), Ok(None));\nlet other_tree: sled::Tree = db.open_tree(b\"cool db facts\").unwrap();\nother_tree.insert(\n  b\"k1\",\n  &b\"a Db acts like a Tree due to implementing Deref<Target = Tree>\"[..]\n).unwrap();\n```\n\n## Re-exports\u00a7\u27e810\u27e9\n\n`pub use self::transaction::Transactional[](https://docs.rs/sled/latest/sled/transaction/trait.Transactional.html \"trait sled::transaction::Transactional\");`\n\n## Modules\u00a7\u27e811\u27e9\n\ndoc\u27e812\u27e9\n    what is sled?\n\ntransaction\u27e813\u27e9\n    Fully serializable (ACID) multi-`Tree` transactions\n## Structs\u00a7\u27e814\u27e9\n\nBatch\u27e815\u27e9\n    A batch of updates that will be applied atomically to the Tree.\n\nCompareAndSwapError\u27e816\u27e9\n    Compare and swap error.\n\nConfig\u27e817\u27e9\n    Top-level configuration for the system.\n\nDb\u27e818\u27e9\n    The `sled` embedded database! Implements `Deref<Target = sled::Tree>` to refer to a default keyspace / namespace / bucket.\n\nIVec\u27e819\u27e9\n    A buffer that may either be inline or remote and protected by an Arc\n\nIter\u27e820\u27e9\n    An iterator over keys and values in a `Tree`.\n\nSubscriber\u27e821\u27e9\n    A subscriber listening on a specified prefix\n\nTree\u27e822\u27e9\n    A flash-sympathetic persistent lock-free B+ tree.\n## Enums\u00a7\u27e823\u27e9\n\nError\u27e824\u27e9\n    An Error type encapsulating various issues that may come up in the operation of a `Db`.\n\nEvent\u27e825\u27e9\n    An event that happened to a key that a subscriber is interested in.\n\nMode\u27e826\u27e9\n    The high-level database mode, according to the trade-offs of the RUM conjecture.\n## Traits\u00a7\u27e827\u27e9\n\nMergeOperator\u27e828\u27e9\n    A function that may be configured on a particular shared `Tree` that will be applied as a kind of read-modify-write operator to any values that are written using the `Tree::merge` method.\n## Functions\u00a7\u27e829\u27e9\n\nopen\u27e830\u27e9\n    Opens a `Db` with a default configuration at the specified path. This will create a new storage directory at the specified path if it does not already exist. You can use the `Db::was_recovered` method to determine if your database was recovered from a previous instance. You can use `Config::create_new` if you want to increase the chances that the database will be freshly created.\n## Type Aliases\u00a7\u27e831\u27e9\n\nResult\u27e832\u27e9\n    The top-level result type for dealing with fallible operations. The errors tend to be fail-stop, and nested results are used in cases where the outer fail-stop error can have try `?` used on it, exposing the inner operation that is expected to fail under normal operation. The philosophy behind this is detailed on the sled blog\u27e833\u27e9.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/sled/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/sled/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/sled/latest/src/sled/lib.rs.html#1-527: Source\n\u27e84\u27e9 https://docs.rs/sled/latest/sled/struct.Db.html#method.open_tree: `Db::open_tree`\n\u27e85\u27e9 https://docs.rs/sled/latest/sled/struct.Tree.html#method.transaction: `Tree::transaction`\n\u27e86\u27e9 https://docs.rs/sled/latest/sled/struct.Tree.html#method.watch_prefix: `Tree::watch_prefix`\n\u27e87\u27e9 https://github.com/spacejam/sled/wiki/merge-operators: Merge operators\n\u27e88\u27e9 https://docs.rs/sled/latest/sled/struct.Tree.html#method.merge: `Tree::merge`\n\u27e89\u27e9 https://docs.rs/sled/latest/sled/#examples: \u00a7\n\u27e810\u27e9 https://docs.rs/sled/latest/sled/#reexports: \u00a7\n\u27e811\u27e9 https://docs.rs/sled/latest/sled/#modules: \u00a7\n\u27e812\u27e9 https://docs.rs/sled/latest/sled/doc/index.html: mod sled::doc - doc\n\u27e813\u27e9 https://docs.rs/sled/latest/sled/transaction/index.html: mod sled::transaction - transaction\n\u27e814\u27e9 https://docs.rs/sled/latest/sled/#structs: \u00a7\n\u27e815\u27e9 https://docs.rs/sled/latest/sled/struct.Batch.html: struct sled::Batch - Batch\n\u27e816\u27e9 https://docs.rs/sled/latest/sled/struct.CompareAndSwapError.html: struct sled::CompareAndSwapError - CompareAndSwapError\n\u27e817\u27e9 https://docs.rs/sled/latest/sled/struct.Config.html: struct sled::Config - Config\n\u27e818\u27e9 https://docs.rs/sled/latest/sled/struct.Db.html: struct sled::Db - Db\n\u27e819\u27e9 https://docs.rs/sled/latest/sled/struct.IVec.html: struct sled::IVec - IVec\n\u27e820\u27e9 https://docs.rs/sled/latest/sled/struct.Iter.html: struct sled::Iter - Iter\n\u27e821\u27e9 https://docs.rs/sled/latest/sled/struct.Subscriber.html: struct sled::Subscriber - Subscriber\n\u27e822\u27e9 https://docs.rs/sled/latest/sled/struct.Tree.html: struct sled::Tree - Tree\n\u27e823\u27e9 https://docs.rs/sled/latest/sled/#enums: \u00a7\n\u27e824\u27e9 https://docs.rs/sled/latest/sled/enum.Error.html: enum sled::Error - Error\n\u27e825\u27e9 https://docs.rs/sled/latest/sled/enum.Event.html: enum sled::Event - Event\n\u27e826\u27e9 https://docs.rs/sled/latest/sled/enum.Mode.html: enum sled::Mode - Mode\n\u27e827\u27e9 https://docs.rs/sled/latest/sled/#traits: \u00a7\n\u27e828\u27e9 https://docs.rs/sled/latest/sled/trait.MergeOperator.html: trait sled::MergeOperator - MergeOperator\n\u27e829\u27e9 https://docs.rs/sled/latest/sled/#functions: \u00a7\n\u27e830\u27e9 https://docs.rs/sled/latest/sled/fn.open.html: fn sled::open - open\n\u27e831\u27e9 https://docs.rs/sled/latest/sled/#types: \u00a7\n\u27e832\u27e9 https://docs.rs/sled/latest/sled/type.Result.html: type sled::Result - Result\n\u27e833\u27e9 https://sled.rs/errors: on the sled blog\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 6820,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "116348.9063558"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/sled",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [102 releases](https://lib.rs/crates/sled/versions) ()\n1.0.0-alpha.124 |  Oct 11, 2024   \n---|---  \n1.0.0-alpha.121 |  Apr 14, 2024   \n1.0.0-alpha.120 |  Dec 25, 2023   \n1.0.0-alpha.118 |  Sep 11, 2023   \n0.14.1 |  Sep 9, 2017   \n#**22** in [Concurrency](https://lib.rs/concurrency \"Crates for implementing concurrent and parallel computation.\")\nDownload history 51923/week @ 2025-01-28 42577/week @ 2025-02-04 39522/week @ 2025-02-11 39674/week @ 2025-02-18 69198/week @ 2025-02-25 38897/week @ 2025-03-04 42824/week @ 2025-03-11 38695/week @ 2025-03-18 53245/week @ 2025-03-25 43951/week @ 2025-04-01 41386/week @ 2025-04-08 38458/week @ 2025-04-15 56701/week @ 2025-04-22 58396/week @ 2025-04-29 46114/week @ 2025-05-06 38901/week @ 2025-05-13\n**205,555** downloads per month Used in [**462** crates (326 directly)](https://lib.rs/crates/sled/rev)\n**MIT/Apache**\n405KB  5.5K  SLoC\n|  key  |  value   \n---|---  \n[buy a coffee for us to convert into databases](https://github.com/sponsors/spacejam) | [![](https://img.shields.io/github/sponsors/spacejam)](https://github.com/sponsors/spacejam)  \n[documentation](https://docs.rs/sled) | [![](https://img.gs/czjpqfbdkz/full/https://docs.rs/sled/badge.svg)](https://docs.rs/sled)  \n[chat about databases with us](https://discord.gg/Z6VsXds) | [![](https://img.shields.io/discord/509773073294295082.svg?logo=discord)](https://discord.gg/Z6VsXds)  \n![](https://img.gs/czjpqfbdkz/320/https://raw.githubusercontent.com/spacejam/sled/main/art/tree_face_anti-transphobia.png)  \n# sled - ~~it's all downhill from here!!!~~\nAn embedded database.\n```\n``let` tree `=` `sled`::``open`(```\"`/tmp/welcome-to-sled`\"```)``?``;`\n``//` insert and get, similar to std's BTreeMap`\n`let` old_value `=` tree`.``insert``(```\"`key`\"```,` ``\"`value`\"```)``?``;`\n`assert_eq!``(`\n tree`.``get``(``&```\"`key`\"```)``?``,`\n `Some``(``sled`::```IVec`::``from`(```\"`value`\"```)``)``,`\n`)``;`\n``//` range queries`\n`for` kv_result `in` tree`.``range``(```\"`key_1`\"```..```\"`key_9`\"```)` ``{````}``\n``//` deletion`\n`let` old_value `=` tree`.``remove``(``&```\"`key`\"```)``?``;`\n``//` atomic compare and swap`\ntree`.``compare_and_swap``(`\n ``\"`key`\"```,`\n `Some``(```\"`current_value`\"```)``,`\n `Some``(```\"`new_value`\"```)``,`\n`)``?``;`\n``//` block until all operations are stable on disk`\n``//` (flush_async also available to get a Future)`\ntree`.``flush``(``)``?``;`\n`\n```\n\nIf you would like to work with structured data without paying expensive deserialization costs, check out the [structured](https://github.com/spacejam/sled/blob/41a32937c33870f17cba10fd79d3cb7f6c924ea4/examples/structured.rs) example!\n# features\n  * [API](https://docs.rs/sled) similar to a threadsafe ```BTreeMap`<``[``u8``]`, `[``u8``]``>````\n  * serializable (ACID) [transactions](https://docs.rs/sled/latest/sled/struct.Tree.html#method.transaction) for atomically reading and writing to multiple keys in multiple keyspaces.\n  * fully atomic single-key operations, including [compare and swap](https://docs.rs/sled/latest/sled/struct.Tree.html#method.compare_and_swap)\n  * zero-copy reads\n  * [write batches](https://docs.rs/sled/latest/sled/struct.Tree.html#method.apply_batch)\n  * [subscribe to changes on key prefixes](https://docs.rs/sled/latest/sled/struct.Tree.html#method.watch_prefix)\n  * [multiple keyspaces](https://docs.rs/sled/latest/sled/struct.Db.html#method.open_tree)\n  * [merge operators](https://docs.rs/sled/latest/sled/doc/merge_operators/index.html)\n  * forward and reverse iterators over ranges of items\n  * a crash-safe monotonic [ID generator](https://docs.rs/sled/latest/sled/struct.Db.html#method.generate_id) capable of generating 75-125 million unique ID's per second\n  * [zstd](https://github.com/facebook/zstd) compression (use the ``compression`` build feature, disabled by default)\n  * cpu-scalable lock-free implementation\n  * flash-optimized log-structured storage\n  * uses modern b-tree techniques such as prefix encoding and suffix truncation for reducing the storage costs of long keys with shared prefixes. If keys are the same length and sequential then the system can avoid storing 99%+ of the key data in most cases, essentially acting like a learned index\n\n\n# expectations, gotchas, advice\n  * Maybe one of the first things that seems weird is the ``IVec`` type. This is an inlinable ``Arc``ed slice that makes some things more efficient.\n  * Durability: **sled automatically fsyncs every 500ms by default** , which can be configured with the ``flush_every_ms`` configurable, or you may call ``flush`` / ``flush_async`` manually after operations.\n  * **Transactions are optimistic** - do not interact with external state or perform IO from within a transaction closure unless it is [idempotent](https://en.wikipedia.org/wiki/Idempotent).\n  * Internal tree node optimizations: sled performs prefix encoding on long keys with similar prefixes that are grouped together in a range, as well as suffix truncation to further reduce the indexing costs of long keys. Nodes will skip potentially expensive length and offset pointers if keys or values are all the same length (tracked separately, don't worry about making keys the same length as values), so it may improve space usage slightly if you use fixed-length keys or values. This also makes it easier to use [structured access](https://github.com/spacejam/sled/blob/41a32937c33870f17cba10fd79d3cb7f6c924ea4/examples/structured.rs) as well.\n  * sled does not support multiple open instances for the time being. Please keep sled open for the duration of your process's lifespan. It's totally safe and often quite convenient to use a global lazy_static sled instance, modulo the normal global variable trade-offs. Every operation is threadsafe, and most are implemented under the hood with lock-free algorithms that avoid blocking in hot paths.\n\n\n# performance\n  * [LSM tree](https://en.wikipedia.org/wiki/Log-structured_merge-tree)-like write performance with [traditional B+ tree](https://en.wikipedia.org/wiki/B%2B_tree)-like read performance\n  * over a billion operations in under a minute at 95% read 5% writes on 16 cores on a small dataset\n  * measure your own workloads rather than relying on some marketing for contrived workloads\n\n\n# a note on lexicographic ordering and endianness\nIf you want to store numerical keys in a way that will play nicely with sled's iterators and ordered operations, please remember to store your numerical items in big-endian form. Little endian (the default of many things) will often appear to be doing the right thing until you start working with more than 256 items (more than 1 byte), causing lexicographic ordering of the serialized bytes to diverge from the lexicographic ordering of their deserialized numerical form.\n  * Rust integral types have built-in ``to_be_bytes`` and ``from_be_bytes`` [methods](https://doc.rust-lang.org/std/primitive.u64.html#method.from_be_bytes).\n  * bincode [can be configured](https://docs.rs/bincode/1.2.0/bincode/struct.Config.html#method.big_endian) to store integral types in big-endian form.\n\n\n# interaction with async\nIf your dataset resides entirely in cache (achievable at startup by setting the cache to a large enough value and performing a full iteration) then all reads and writes are non-blocking and async-friendly, without needing to use Futures or an async runtime.\nTo asynchronously suspend your async task on the durability of writes, we support the [``flush_async`` method](https://docs.rs/sled/latest/sled/struct.Tree.html#method.flush_async), which returns a Future that your async tasks can await the completion of if they require high durability guarantees and you are willing to pay the latency costs of fsync. Note that sled automatically tries to sync all data to disk several times per second in the background without blocking user threads.\nWe support async subscription to events that happen on key prefixes, because the ``Subscriber`` struct implements ```Future`<`Output=`Option``<`Event`>``>````:\n```\n``let` sled `=` `sled`::``open`(```\"`my_db`\"```)``.``unwrap``(``)``;`\n`let` `mut` sub `=` sled`.``watch_prefix``(```\"``\"```)``;`\nsled`.``insert``(```b``\"`a`\"```,` ``b``\"`a`\"```)``.``unwrap``(``)``;`\n`extreme`::``run`(`async `move` ``{`\n  `while` `let` `Some``(`event`)` `=` `(``&``mut` sub`)``.`await `{`\n    `println!``(```\"`got event `{:?}``\"```,` event`)``;`\n  `}`\n```}```)``;`\n`\n```\n\n# minimum supported Rust version (MSRV)\nWe support Rust 1.62 and up.\n# architecture\nlock-free tree on a lock-free pagecache on a lock-free log. the pagecache scatters partial page fragments across the log, rather than rewriting entire pages at a time as B+ trees for spinning disks historically have. on page reads, we concurrently scatter-gather reads across the log to materialize the page from its fragments. check out the [architectural outlook](https://github.com/spacejam/sled/wiki/sled-architectural-outlook) for a more detailed overview of where we're at and where we see things going!\n# philosophy\n  1. don't make the user think. the interface should be obvious.\n  2. don't surprise users with performance traps.\n  3. don't wake up operators. bring reliability techniques from academia into real-world practice.\n  4. don't use so much electricity. our data structures should play to modern hardware's strengths.\n\n\n# known issues, warnings\n  * if reliability is your primary constraint, use SQLite. sled is beta.\n  * if storage price performance is your primary constraint, use RocksDB. sled uses too much space sometimes.\n  * if you have a multi-process workload that rarely writes, use LMDB. sled is architected for use with long-running, highly-concurrent workloads such as stateful services or higher-level databases.\n  * quite young, should be considered unstable for the time being.\n  * the on-disk format is going to change in ways that require [manual migrations](https://docs.rs/sled/latest/sled/struct.Db.html#method.export) before the ```1.``0``.``0``` release!\n\n\n# priorities\n  1. A full rewrite of sled's storage subsystem is happening on a modular basis as part of the [komora project](https://github.com/komora-io), in particular the marble storage engine. This will dramatically lower both the disk space usage (space amplification) and garbage collection overhead (write amplification) of sled.\n  2. The memory layout of tree nodes is being completely rewritten to reduce fragmentation and eliminate serialization costs.\n  3. The merge operator feature will change into a trigger feature that resembles traditional database triggers, allowing state to be modified as part of the same atomic writebatch that triggered it for retaining serializability with reactive semantics.\n\n\n# fund feature development\nLike what we're doing? Help us out via [GitHub Sponsors](https://github.com/sponsors/spacejam)!\n#### Dependencies\n~6\u201313MB  ~134K SLoC\n  * [bincode](https://lib.rs/crates/bincode \"1.3.3\")\n  * [cache-advisor](https://lib.rs/crates/cache-advisor \"1.0.16\")\n  * [concurrent-map](https://lib.rs/crates/concurrent-map \"5.0.31\")[+serde](https://lib.rs/crates/concurrent-map/features#feature-serde)\n  * [crc32fast](https://lib.rs/crates/crc32fast \"1.3.2\")\n  * [crossbeam-channel](https://lib.rs/crates/crossbeam-channel \"0.5.8\")\n  * [crossbeam-queue](https://lib.rs/crates/crossbeam-queue \"0.3.8\")\n  * [ebr](https://lib.rs/crates/ebr \"0.2.13\")\n  * [fault-injection](https://lib.rs/crates/fault-injection \"1.0.10\")\n  * [fnv](https://lib.rs/crates/fnv \"1.0.7\")\n  * [fs2](https://lib.rs/crates/fs2 \"0.4.3\")\n  * [inline-array](https://lib.rs/crates/inline-array \"0.1.13\")[+serde](https://lib.rs/crates/inline-array/features#feature-serde)[+concurrent_map_minimum](https://lib.rs/crates/inline-array/features#feature-concurrent_map_minimum)\n  * [log](https://lib.rs/crates/log \"0.4.19\")\n  * [pagetable](https://lib.rs/crates/pagetable \"new\") 0.4.5\n  * [parking_lot](https://lib.rs/crates/parking_lot \"0.12.1\")[+arc_lock](https://lib.rs/crates/parking_lot/features#feature-arc_lock)\n  * [rayon](https://lib.rs/crates/rayon \"1.7.0\")\n  * [serde](https://lib.rs/crates/serde \"1.0\")[+derive](https://lib.rs/crates/serde/features#feature-derive)\n  * [stack-map](https://lib.rs/crates/stack-map \"1.0.5\")[+serde](https://lib.rs/crates/stack-map/features#feature-serde)\n  * [tempdir](https://lib.rs/crates/tempdir \"deprecated\") 0.3.7\n  * [zstd](https://lib.rs/crates/zstd \"obsolete\") 0.12.4\n\n\n  * dev  [env_logger](https://lib.rs/crates/env_logger \"outdated\") 0.10\n  * dev  [libc](https://lib.rs/crates/libc \"0.2.147\")\n  * dev  [num-format](https://lib.rs/crates/num-format \"0.4.4\")\n  * dev  [quickcheck](https://lib.rs/crates/quickcheck \"new\") 1.0\n  * dev  [rand](https://lib.rs/crates/rand \"outdated\") 0.8.5\n  * dev  [rand_distr](https://lib.rs/crates/rand_distr \"0.4.3\")\n\n\n#### [Other features](https://lib.rs/crates/sled/features)\n  * [for-internal-testing-only](https://lib.rs/crates/sled/features#feature-for-internal-testing-only)\n  * [monotonic-behavior](https://lib.rs/crates/sled/features#feature-monotonic-behavior)\n  * [testing-count-allocator](https://lib.rs/crates/sled/features#feature-testing-count-allocator)\n  * [testing-shred-allocator](https://lib.rs/crates/sled/features#feature-testing-shred-allocator)\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  102 releases\u27e81\u27e9 ()\n1.0.0-alpha.124 |  Oct 11, 2024   \n---|---  \n1.0.0-alpha.121 |  Apr 14, 2024   \n1.0.0-alpha.120 |  Dec 25, 2023   \n1.0.0-alpha.118 |  Sep 11, 2023   \n0.14.1 |  Sep 9, 2017   \n#**22** in Concurrency\u27e82\u27e9\nDownload history 51923/week @ 2025-01-28 42577/week @ 2025-02-04 39522/week @ 2025-02-11 39674/week @ 2025-02-18 69198/week @ 2025-02-25 38897/week @ 2025-03-04 42824/week @ 2025-03-11 38695/week @ 2025-03-18 53245/week @ 2025-03-25 43951/week @ 2025-04-01 41386/week @ 2025-04-08 38458/week @ 2025-04-15 56701/week @ 2025-04-22 58396/week @ 2025-04-29 46114/week @ 2025-05-06 38901/week @ 2025-05-13\n**205,555** downloads per month Used in **462** crates (326 directly)\u27e83\u27e9\n**MIT/Apache**\n405KB  5.5K  SLoC\n|  key  |  value   \n---|---  \nbuy a coffee for us to convert into databases\u27e84\u27e9 | ![\u27e85\u27e9](https://github.com/sponsors/spacejam)  \ndocumentation\u27e86\u27e9 | ![\u27e87\u27e9](https://docs.rs/sled)  \nchat about databases with us\u27e88\u27e9 | ![\u27e89\u27e9](https://discord.gg/Z6VsXds)  \n![](https://img.gs/czjpqfbdkz/320/https://raw.githubusercontent.com/spacejam/sled/main/art/tree_face_anti-transphobia.png)  \n# sled - ~~it's all downhill from here!!!~~\nAn embedded database.\n```\n``let` tree `=` `sled`::``open`(```\"`/tmp/welcome-to-sled`\"```)``?``;`\n``//` insert and get, similar to std's BTreeMap`\n`let` old_value `=` tree`.``insert``(```\"`key`\"```,` ``\"`value`\"```)``?``;`\n`assert_eq!``(`\n tree`.``get``(``&```\"`key`\"```)``?``,`\n `Some``(``sled`::```IVec`::``from`(```\"`value`\"```)``)``,`\n`)``;`\n``//` range queries`\n`for` kv_result `in` tree`.``range``(```\"`key_1`\"```..```\"`key_9`\"```)` ``{````}``\n``//` deletion`\n`let` old_value `=` tree`.``remove``(``&```\"`key`\"```)``?``;`\n``//` atomic compare and swap`\ntree`.``compare_and_swap``(`\n ``\"`key`\"```,`\n `Some``(```\"`current_value`\"```)``,`\n `Some``(```\"`new_value`\"```)``,`\n`)``?``;`\n``//` block until all operations are stable on disk`\n``//` (flush_async also available to get a Future)`\ntree`.``flush``(``)``?``;`\n`\n```\n\nIf you would like to work with structured data without paying expensive deserialization costs, check out the structured\u27e810\u27e9 example!\n# features\n  * API\u27e86\u27e9 similar to a threadsafe ```BTreeMap`<``[``u8``]`, `[``u8``]``>````\n  * serializable (ACID) transactions\u27e811\u27e9 for atomically reading and writing to multiple keys in multiple keyspaces.\n  * fully atomic single-key operations, including compare and swap\u27e812\u27e9\n  * zero-copy reads\n  * write batches\u27e813\u27e9\n  * subscribe to changes on key prefixes\u27e814\u27e9\n  * multiple keyspaces\u27e815\u27e9\n  * merge operators\u27e816\u27e9\n  * forward and reverse iterators over ranges of items\n  * a crash-safe monotonic ID generator\u27e817\u27e9 capable of generating 75-125 million unique ID's per second\n  * zstd\u27e818\u27e9 compression (use the ``compression`` build feature, disabled by default)\n  * cpu-scalable lock-free implementation\n  * flash-optimized log-structured storage\n  * uses modern b-tree techniques such as prefix encoding and suffix truncation for reducing the storage costs of long keys with shared prefixes. If keys are the same length and sequential then the system can avoid storing 99%+ of the key data in most cases, essentially acting like a learned index\n\n\n# expectations, gotchas, advice\n  * Maybe one of the first things that seems weird is the ``IVec`` type. This is an inlinable ``Arc``ed slice that makes some things more efficient.\n  * Durability: **sled automatically fsyncs every 500ms by default** , which can be configured with the ``flush_every_ms`` configurable, or you may call ``flush`` / ``flush_async`` manually after operations.\n  * **Transactions are optimistic** - do not interact with external state or perform IO from within a transaction closure unless it is idempotent\u27e819\u27e9.\n  * Internal tree node optimizations: sled performs prefix encoding on long keys with similar prefixes that are grouped together in a range, as well as suffix truncation to further reduce the indexing costs of long keys. Nodes will skip potentially expensive length and offset pointers if keys or values are all the same length (tracked separately, don't worry about making keys the same length as values), so it may improve space usage slightly if you use fixed-length keys or values. This also makes it easier to use structured access\u27e810\u27e9 as well.\n  * sled does not support multiple open instances for the time being. Please keep sled open for the duration of your process's lifespan. It's totally safe and often quite convenient to use a global lazy_static sled instance, modulo the normal global variable trade-offs. Every operation is threadsafe, and most are implemented under the hood with lock-free algorithms that avoid blocking in hot paths.\n\n\n# performance\n  * LSM tree\u27e820\u27e9-like write performance with traditional B+ tree\u27e821\u27e9-like read performance\n  * over a billion operations in under a minute at 95% read 5% writes on 16 cores on a small dataset\n  * measure your own workloads rather than relying on some marketing for contrived workloads\n\n\n# a note on lexicographic ordering and endianness\nIf you want to store numerical keys in a way that will play nicely with sled's iterators and ordered operations, please remember to store your numerical items in big-endian form. Little endian (the default of many things) will often appear to be doing the right thing until you start working with more than 256 items (more than 1 byte), causing lexicographic ordering of the serialized bytes to diverge from the lexicographic ordering of their deserialized numerical form.\n  * Rust integral types have built-in ``to_be_bytes`` and ``from_be_bytes`` methods\u27e822\u27e9.\n  * bincode can be configured\u27e823\u27e9 to store integral types in big-endian form.\n\n\n# interaction with async\nIf your dataset resides entirely in cache (achievable at startup by setting the cache to a large enough value and performing a full iteration) then all reads and writes are non-blocking and async-friendly, without needing to use Futures or an async runtime.\nTo asynchronously suspend your async task on the durability of writes, we support the ``flush_async`` method\u27e824\u27e9, which returns a Future that your async tasks can await the completion of if they require high durability guarantees and you are willing to pay the latency costs of fsync. Note that sled automatically tries to sync all data to disk several times per second in the background without blocking user threads.\nWe support async subscription to events that happen on key prefixes, because the ``Subscriber`` struct implements ```Future`<`Output=`Option``<`Event`>``>````:\n```\n``let` sled `=` `sled`::``open`(```\"`my_db`\"```)``.``unwrap``(``)``;`\n`let` `mut` sub `=` sled`.``watch_prefix``(```\"``\"```)``;`\nsled`.``insert``(```b``\"`a`\"```,` ``b``\"`a`\"```)``.``unwrap``(``)``;`\n`extreme`::``run`(`async `move` ``{`\n  `while` `let` `Some``(`event`)` `=` `(``&``mut` sub`)``.`await `{`\n    `println!``(```\"`got event `{:?}``\"```,` event`)``;`\n  `}`\n```}```)``;`\n`\n```\n\n# minimum supported Rust version (MSRV)\nWe support Rust 1.62 and up.\n# architecture\nlock-free tree on a lock-free pagecache on a lock-free log. the pagecache scatters partial page fragments across the log, rather than rewriting entire pages at a time as B+ trees for spinning disks historically have. on page reads, we concurrently scatter-gather reads across the log to materialize the page from its fragments. check out the architectural outlook\u27e825\u27e9 for a more detailed overview of where we're at and where we see things going!\n# philosophy\n  1. don't make the user think. the interface should be obvious.\n  2. don't surprise users with performance traps.\n  3. don't wake up operators. bring reliability techniques from academia into real-world practice.\n  4. don't use so much electricity. our data structures should play to modern hardware's strengths.\n\n\n# known issues, warnings\n  * if reliability is your primary constraint, use SQLite. sled is beta.\n  * if storage price performance is your primary constraint, use RocksDB. sled uses too much space sometimes.\n  * if you have a multi-process workload that rarely writes, use LMDB. sled is architected for use with long-running, highly-concurrent workloads such as stateful services or higher-level databases.\n  * quite young, should be considered unstable for the time being.\n  * the on-disk format is going to change in ways that require manual migrations\u27e826\u27e9 before the ```1.``0``.``0``` release!\n\n\n# priorities\n  1. A full rewrite of sled's storage subsystem is happening on a modular basis as part of the komora project\u27e827\u27e9, in particular the marble storage engine. This will dramatically lower both the disk space usage (space amplification) and garbage collection overhead (write amplification) of sled.\n  2. The memory layout of tree nodes is being completely rewritten to reduce fragmentation and eliminate serialization costs.\n  3. The merge operator feature will change into a trigger feature that resembles traditional database triggers, allowing state to be modified as part of the same atomic writebatch that triggered it for retaining serializability with reactive semantics.\n\n\n# fund feature development\nLike what we're doing? Help us out via GitHub Sponsors\u27e84\u27e9!\n#### Dependencies\n~6\u201313MB  ~134K SLoC\n  * bincode\u27e828\u27e9\n  * cache-advisor\u27e829\u27e9\n  * concurrent-map\u27e830\u27e9+serde\u27e831\u27e9\n  * crc32fast\u27e832\u27e9\n  * crossbeam-channel\u27e833\u27e9\n  * crossbeam-queue\u27e834\u27e9\n  * ebr\u27e835\u27e9\n  * fault-injection\u27e836\u27e9\n  * fnv\u27e837\u27e9\n  * fs2\u27e838\u27e9\n  * inline-array\u27e839\u27e9+serde\u27e840\u27e9+concurrent_map_minimum\u27e841\u27e9\n  * log\u27e842\u27e9\n  * pagetable\u27e843\u27e9 0.4.5\n  * parking_lot\u27e844\u27e9+arc_lock\u27e845\u27e9\n  * rayon\u27e846\u27e9\n  * serde\u27e847\u27e9+derive\u27e848\u27e9\n  * stack-map\u27e849\u27e9+serde\u27e850\u27e9\n  * tempdir\u27e851\u27e9 0.3.7\n  * zstd\u27e852\u27e9 0.12.4\n\n\n  * dev  env_logger\u27e853\u27e9 0.10\n  * dev  libc\u27e854\u27e9\n  * dev  num-format\u27e855\u27e9\n  * dev  quickcheck\u27e856\u27e9 1.0\n  * dev  rand\u27e857\u27e9 0.8.5\n  * dev  rand_distr\u27e858\u27e9\n\n\n#### Other features\u27e859\u27e9\n  * for-internal-testing-only\u27e860\u27e9\n  * monotonic-behavior\u27e861\u27e9\n  * testing-count-allocator\u27e862\u27e9\n  * testing-shred-allocator\u27e863\u27e9\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/sled/versions: 102 releases\n\u27e82\u27e9 https://lib.rs/concurrency: Crates for implementing concurrent and parallel computation. - Concurrency\n\u27e83\u27e9 https://lib.rs/crates/sled/rev: **462** crates (326 directly)\n\u27e84\u27e9 https://github.com/sponsors/spacejam: buy a coffee for us to convert into databases\n\u27e85\u27e9 https://img.shields.io/github/sponsors/spacejam: ![\n\u27e86\u27e9 https://docs.rs/sled: documentation\n\u27e87\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/sled/badge.svg: ![\n\u27e88\u27e9 https://discord.gg/Z6VsXds: chat about databases with us\n\u27e89\u27e9 https://img.shields.io/discord/509773073294295082.svg?logo=discord: ![\n\u27e810\u27e9 https://github.com/spacejam/sled/blob/41a32937c33870f17cba10fd79d3cb7f6c924ea4/examples/structured.rs: structured\n\u27e811\u27e9 https://docs.rs/sled/latest/sled/struct.Tree.html#method.transaction: transactions\n\u27e812\u27e9 https://docs.rs/sled/latest/sled/struct.Tree.html#method.compare_and_swap: compare and swap\n\u27e813\u27e9 https://docs.rs/sled/latest/sled/struct.Tree.html#method.apply_batch: write batches\n\u27e814\u27e9 https://docs.rs/sled/latest/sled/struct.Tree.html#method.watch_prefix: subscribe to changes on key prefixes\n\u27e815\u27e9 https://docs.rs/sled/latest/sled/struct.Db.html#method.open_tree: multiple keyspaces\n\u27e816\u27e9 https://docs.rs/sled/latest/sled/doc/merge_operators/index.html: merge operators\n\u27e817\u27e9 https://docs.rs/sled/latest/sled/struct.Db.html#method.generate_id: ID generator\n\u27e818\u27e9 https://github.com/facebook/zstd: zstd\n\u27e819\u27e9 https://en.wikipedia.org/wiki/Idempotent: idempotent\n\u27e820\u27e9 https://en.wikipedia.org/wiki/Log-structured_merge-tree: LSM tree\n\u27e821\u27e9 https://en.wikipedia.org/wiki/B%2B_tree: traditional B+ tree\n\u27e822\u27e9 https://doc.rust-lang.org/std/primitive.u64.html#method.from_be_bytes: methods\n\u27e823\u27e9 https://docs.rs/bincode/1.2.0/bincode/struct.Config.html#method.big_endian: can be configured\n\u27e824\u27e9 https://docs.rs/sled/latest/sled/struct.Tree.html#method.flush_async: ``flush_async`` method\n\u27e825\u27e9 https://github.com/spacejam/sled/wiki/sled-architectural-outlook: architectural outlook\n\u27e826\u27e9 https://docs.rs/sled/latest/sled/struct.Db.html#method.export: manual migrations\n\u27e827\u27e9 https://github.com/komora-io: komora project\n\u27e828\u27e9 https://lib.rs/crates/bincode: 1.3.3 - bincode\n\u27e829\u27e9 https://lib.rs/crates/cache-advisor: 1.0.16 - cache-advisor\n\u27e830\u27e9 https://lib.rs/crates/concurrent-map: 5.0.31 - concurrent-map\n\u27e831\u27e9 https://lib.rs/crates/concurrent-map/features#feature-serde: +serde\n\u27e832\u27e9 https://lib.rs/crates/crc32fast: 1.3.2 - crc32fast\n\u27e833\u27e9 https://lib.rs/crates/crossbeam-channel: 0.5.8 - crossbeam-channel\n\u27e834\u27e9 https://lib.rs/crates/crossbeam-queue: 0.3.8 - crossbeam-queue\n\u27e835\u27e9 https://lib.rs/crates/ebr: 0.2.13 - ebr\n\u27e836\u27e9 https://lib.rs/crates/fault-injection: 1.0.10 - fault-injection\n\u27e837\u27e9 https://lib.rs/crates/fnv: 1.0.7 - fnv\n\u27e838\u27e9 https://lib.rs/crates/fs2: 0.4.3 - fs2\n\u27e839\u27e9 https://lib.rs/crates/inline-array: 0.1.13 - inline-array\n\u27e840\u27e9 https://lib.rs/crates/inline-array/features#feature-serde: +serde\n\u27e841\u27e9 https://lib.rs/crates/inline-array/features#feature-concurrent_map_minimum: +concurrent_map_minimum\n\u27e842\u27e9 https://lib.rs/crates/log: 0.4.19 - log\n\u27e843\u27e9 https://lib.rs/crates/pagetable: new - pagetable\n\u27e844\u27e9 https://lib.rs/crates/parking_lot: 0.12.1 - parking_lot\n\u27e845\u27e9 https://lib.rs/crates/parking_lot/features#feature-arc_lock: +arc_lock\n\u27e846\u27e9 https://lib.rs/crates/rayon: 1.7.0 - rayon\n\u27e847\u27e9 https://lib.rs/crates/serde: 1.0 - serde\n\u27e848\u27e9 https://lib.rs/crates/serde/features#feature-derive: +derive\n\u27e849\u27e9 https://lib.rs/crates/stack-map: 1.0.5 - stack-map\n\u27e850\u27e9 https://lib.rs/crates/stack-map/features#feature-serde: +serde\n\u27e851\u27e9 https://lib.rs/crates/tempdir: deprecated - tempdir\n\u27e852\u27e9 https://lib.rs/crates/zstd: obsolete - zstd\n\u27e853\u27e9 https://lib.rs/crates/env_logger: outdated - env_logger\n\u27e854\u27e9 https://lib.rs/crates/libc: 0.2.147 - libc\n\u27e855\u27e9 https://lib.rs/crates/num-format: 0.4.4 - num-format\n\u27e856\u27e9 https://lib.rs/crates/quickcheck: new - quickcheck\n\u27e857\u27e9 https://lib.rs/crates/rand: outdated - rand\n\u27e858\u27e9 https://lib.rs/crates/rand_distr: 0.4.3 - rand_distr\n\u27e859\u27e9 https://lib.rs/crates/sled/features: Other features\n\u27e860\u27e9 https://lib.rs/crates/sled/features#feature-for-internal-testing-only: for-internal-testing-only\n\u27e861\u27e9 https://lib.rs/crates/sled/features#feature-monotonic-behavior: monotonic-behavior\n\u27e862\u27e9 https://lib.rs/crates/sled/features#feature-testing-count-allocator: testing-count-allocator\n\u27e863\u27e9 https://lib.rs/crates/sled/features#feature-testing-shred-allocator: testing-shred-allocator\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 13260,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "116349.3120093"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "scopeguard",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libscopeguard-b3036dac4c63d524.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.12\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.12\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libunicode_ident-bf7f156b09e9f547.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libunicode_ident-bf7f156b09e9f547.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#shlex@1.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\shlex-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "shlex",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\shlex-1.3.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libshlex-25724775bd6ea405.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libshlex-25724775bd6ea405.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.13.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.13.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.13.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libsmallvec-25de0ffaa5ec55c5.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zstd-safe@6.0.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zstd-safe-6.0.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zstd-safe-6.0.6\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "arrays",
                "legacy",
                "std",
                "zdict_builder"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\zstd-safe-e8573c382e4ae3b5\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\zstd-safe-e8573c382e4ae3b5\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\parking_lot_core-8bf117fcd88546af\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\parking_lot_core-8bf117fcd88546af\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crc32fast@1.4.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crc32fast-1.4.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crc32fast",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crc32fast-1.4.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libcrc32fast-6f26f1a08de28b99.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.86",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.86\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.86\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\proc-macro2-b029a0852e0f569d\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\proc-macro2-b029a0852e0f569d\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.209",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.209\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.209\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "derive",
                "serde_derive",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\serde-52986fe9c22ca893\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\serde-52986fe9c22ca893\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-core-1.12.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-core-1.12.1\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\rayon-core-8a97615c96d19aa8\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\rayon-core-8a97615c96d19aa8\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#jobserver@0.1.32",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\jobserver-0.1.32\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "jobserver",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\jobserver-0.1.32\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libjobserver-de3391caf3272945.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libjobserver-de3391caf3272945.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#either@1.13.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\either-1.13.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "either",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\either-1.13.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libeither-8aac4c06c66891db.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\parking_lot_core-ba234acc5b3f5844\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.20",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.20\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.20\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\crossbeam-utils-8ecd7c457390fab2\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\crossbeam-utils-8ecd7c457390fab2\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.22",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.22\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.22\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\liblog-e1e9087e6a7c95fb.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fnv",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libfnv-da722296a25cad98.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pagetable@0.4.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pagetable-0.4.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pagetable",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pagetable-0.4.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libpagetable-c2c18907a0237398.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.3.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libautocfg-e2a9d558a9c0d2ca.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libautocfg-e2a9d558a9c0d2ca.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.158",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.158\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.158\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\libc-890f1f050d0cad44\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\libc-890f1f050d0cad44\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.209",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\serde-8ffd177feca71e50\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.86",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\proc-macro2-282fd63ae200737c\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\rayon-core-a8f7ad3b36b987dc\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pkg-config@0.3.30",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pkg-config-0.3.30\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pkg_config",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pkg-config-0.3.30\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libpkg_config-bf826639708d3156.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libpkg_config-bf826639708d3156.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fault-injection@1.0.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fault-injection-1.0.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fault_injection",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fault-injection-1.0.10\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libfault_injection-6b1b2f81bda373f7.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.20",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\crossbeam-utils-fbd7776a98d63dc5\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "errhandlingapi",
                "fileapi",
                "handleapi",
                "minwindef",
                "ntsecapi",
                "processthreadsapi",
                "profileapi",
                "std",
                "winbase",
                "winerror",
                "winnt"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\winapi-7ec575e8fd55640c\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\winapi-7ec575e8fd55640c\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.158",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "freebsd11",
                "libc_priv_mod_use",
                "libc_union",
                "libc_const_size_of",
                "libc_align",
                "libc_int128",
                "libc_core_cvoid",
                "libc_packedN",
                "libc_cfg_target_vendor",
                "libc_non_exhaustive",
                "libc_long_array",
                "libc_ptr_addr_of",
                "libc_underscore_const_names",
                "libc_const_extern_fn"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\libc-151f344170de2f8e\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "linked_libs": [
                "dylib=advapi32",
                "dylib=cfgmgr32",
                "dylib=credui",
                "dylib=kernel32",
                "dylib=secur32",
                "dylib=user32"
              ],
              "linked_paths": [],
              "cfgs": [
                "feature=\"cfgmgr32\"",
                "feature=\"winreg\"",
                "feature=\"ntstatus\"",
                "feature=\"sspi\"",
                "feature=\"devpropdef\"",
                "feature=\"lsalookup\"",
                "feature=\"excpt\"",
                "feature=\"rpcndr\"",
                "feature=\"basetsd\"",
                "feature=\"vcruntime\"",
                "feature=\"libloaderapi\"",
                "feature=\"ntdef\"",
                "feature=\"cfg\"",
                "feature=\"vadefs\"",
                "feature=\"windef\"",
                "feature=\"ktmtypes\"",
                "feature=\"wincred\"",
                "feature=\"minwinbase\"",
                "feature=\"guiddef\"",
                "feature=\"reason\"",
                "feature=\"wtypesbase\"",
                "feature=\"subauth\""
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\winapi-8f6c07fb56c2fdd2\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "arc_lock",
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\lock_api-db5ccb8f5d84f10d\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\lock_api-db5ccb8f5d84f10d\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.158",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.158\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.158\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\liblibc-312b2bb1200a45ab.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libparking_lot_core-fd1376c5b538a575.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_const_fn_trait_bound"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\lock_api-bbc51b35707df81d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.20",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.20\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_utils",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.20\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libcrossbeam_utils-cd59948f6448795b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lock_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "arc_lock",
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\liblock_api-56b08dafb02d5f8a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.86",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.86\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.86\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libproc_macro2-656aaea2d14348f0.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libproc_macro2-656aaea2d14348f0.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-queue@0.3.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-queue-0.3.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_queue",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-queue-0.3.11\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libcrossbeam_queue-84dc920b6e91cb1d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.37\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.37\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libquote-02ea96628e176517.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libquote-02ea96628e176517.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot-0.12.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot-0.12.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "arc_lock",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libparking_lot-d10f955a10cabbc4.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cache-advisor@1.0.16",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cache-advisor-1.0.16\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cache_advisor",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cache-advisor-1.0.16\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libcache_advisor-6a96052c6e781d67.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-epoch@0.9.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-epoch-0.9.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_epoch",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-epoch-0.9.18\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libcrossbeam_epoch-0e27a4171e6febae.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#shared-local-state@0.1.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\shared-local-state-0.1.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "shared_local_state",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\shared-local-state-0.1.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libshared_local_state-5172f6f4b4b32ad1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ebr@0.2.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ebr-0.2.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ebr",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ebr-0.2.13\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libebr-edaac3be40d377c9.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-deque@0.8.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-deque-0.8.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_deque",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-deque-0.8.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libcrossbeam_deque-83016b586fd41c5c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-channel@0.5.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-channel-0.5.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_channel",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-channel-0.5.13\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libcrossbeam_channel-1779bd8cbb826fd6.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cc@1.1.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cc-1.1.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cc-1.1.15\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "parallel"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libcc-12cf19e21da02641.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libcc-12cf19e21da02641.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-core-1.12.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rayon_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-core-1.12.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\librayon_core-2d9c1a78911c642a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zstd-sys@2.0.13+zstd.1.5.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zstd-sys-2.0.13+zstd.1.5.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zstd-sys-2.0.13+zstd.1.5.6\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "legacy",
                "std",
                "zdict_builder"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\zstd-sys-b5f13435041f403c\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\zstd-sys-b5f13435041f403c\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "winapi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "errhandlingapi",
                "fileapi",
                "handleapi",
                "minwindef",
                "ntsecapi",
                "processthreadsapi",
                "profileapi",
                "std",
                "winbase",
                "winerror",
                "winnt"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libwinapi-b5370baa21f73686.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fs2@0.4.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fs2-0.4.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fs2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fs2-0.4.3\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libfs2-a3f9ce2127bdd312.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#remove_dir_all@0.5.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\remove_dir_all-0.5.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "remove_dir_all",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\remove_dir_all-0.5.3\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libremove_dir_all-fea217daaf1392dc.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rand@0.4.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rand-0.4.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rand",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rand-0.4.6\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "libc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\librand-1f0b4e270f05fecb.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tempdir@0.3.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tempdir-0.3.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tempdir",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tempdir-0.3.7\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libtempdir-50e92d4b5c9b03ba.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.77",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.77\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.77\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "derive",
                "parsing",
                "printing",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libsyn-1b3dc4430f8edf1b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libsyn-1b3dc4430f8edf1b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zstd-sys@2.0.13+zstd.1.5.6",
              "linked_libs": [
                "static=zstd"
              ],
              "linked_paths": [
                "native=C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\zstd-sys-fc2c10ed6b23b11a\\out"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\zstd-sys-fc2c10ed6b23b11a\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zstd-safe@6.0.6",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\zstd-safe-858e1cb405183678\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zstd-sys@2.0.13+zstd.1.5.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zstd-sys-2.0.13+zstd.1.5.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zstd_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zstd-sys-2.0.13+zstd.1.5.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": false,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "legacy",
                "std",
                "zdict_builder"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libzstd_sys-30571fc890e8e7f1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zstd-safe@6.0.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zstd-safe-6.0.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zstd_safe",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zstd-safe-6.0.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "arrays",
                "legacy",
                "std",
                "zdict_builder"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libzstd_safe-c6cac413bb9bf434.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zstd@0.12.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zstd-0.12.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zstd",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zstd-0.12.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "arrays",
                "default",
                "legacy",
                "zdict_builder"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libzstd-cb5bc129fb799f2c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rayon@1.10.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-1.10.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rayon",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-1.10.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\librayon-30c6675f9a578f13.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.209",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_derive-1.0.209\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "serde_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_derive-1.0.209\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\serde_derive-ba676ceaef6c23fb.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\serde_derive-ba676ceaef6c23fb.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\serde_derive-ba676ceaef6c23fb.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\serde_derive-ba676ceaef6c23fb.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.209",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.209\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "serde",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.209\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "derive",
                "serde_derive",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libserde-1d337bbb0238ef2c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#stack-map@1.0.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\stack-map-1.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "stack_map",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\stack-map-1.0.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "serde"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libstack_map-a02043a436febceb.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#concurrent-map@5.0.37",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\concurrent-map-5.0.37\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "concurrent_map",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\concurrent-map-5.0.37\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "serde"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libconcurrent_map-faaef402c2e13089.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bincode@1.3.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bincode-1.3.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bincode",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bincode-1.3.3\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libbincode-e577ece8d11cdfbf.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#inline-array@0.1.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\inline-array-0.1.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "inline_array",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\inline-array-0.1.13\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "concurrent-map",
                "concurrent_map_minimum",
                "serde"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libinline_array-efdef96999ae7aa4.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libsled-91435ba7c1c7c880.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.86",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.86\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.86\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\proc-macro2-b029a0852e0f569d\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\proc-macro2-b029a0852e0f569d\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.86",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\proc-macro2-282fd63ae200737c\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.12\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.12\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libunicode_ident-bf7f156b09e9f547.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libunicode_ident-bf7f156b09e9f547.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.20",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.20\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.20\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\crossbeam-utils-8ecd7c457390fab2\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\crossbeam-utils-8ecd7c457390fab2\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.3.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libautocfg-e2a9d558a9c0d2ca.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libautocfg-e2a9d558a9c0d2ca.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#shlex@1.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\shlex-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "shlex",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\shlex-1.3.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libshlex-25724775bd6ea405.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libshlex-25724775bd6ea405.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#jobserver@0.1.32",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\jobserver-0.1.32\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "jobserver",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\jobserver-0.1.32\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libjobserver-de3391caf3272945.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libjobserver-de3391caf3272945.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\parking_lot_core-8bf117fcd88546af\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\parking_lot_core-8bf117fcd88546af\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.13.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.13.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.13.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libsmallvec-25de0ffaa5ec55c5.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "errhandlingapi",
                "fileapi",
                "handleapi",
                "minwindef",
                "ntsecapi",
                "processthreadsapi",
                "profileapi",
                "std",
                "winbase",
                "winerror",
                "winnt"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\winapi-7ec575e8fd55640c\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\winapi-7ec575e8fd55640c\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "scopeguard",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libscopeguard-b3036dac4c63d524.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pkg-config@0.3.30",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pkg-config-0.3.30\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pkg_config",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pkg-config-0.3.30\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libpkg_config-bf826639708d3156.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libpkg_config-bf826639708d3156.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.209",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.209\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.209\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "derive",
                "serde_derive",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\serde-52986fe9c22ca893\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\serde-52986fe9c22ca893\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.158",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.158\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.158\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\libc-890f1f050d0cad44\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\libc-890f1f050d0cad44\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zstd-safe@6.0.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zstd-safe-6.0.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zstd-safe-6.0.6\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "arrays",
                "legacy",
                "std",
                "zdict_builder"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\zstd-safe-e8573c382e4ae3b5\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\zstd-safe-e8573c382e4ae3b5\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.86",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.86\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.86\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libproc_macro2-656aaea2d14348f0.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libproc_macro2-656aaea2d14348f0.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.20",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\crossbeam-utils-fbd7776a98d63dc5\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "arc_lock",
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\lock_api-db5ccb8f5d84f10d\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\lock_api-db5ccb8f5d84f10d\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cc@1.1.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cc-1.1.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cc-1.1.15\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "parallel"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libcc-12cf19e21da02641.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libcc-12cf19e21da02641.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\parking_lot_core-ba234acc5b3f5844\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.209",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\serde-8ffd177feca71e50\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "linked_libs": [
                "dylib=advapi32",
                "dylib=cfgmgr32",
                "dylib=credui",
                "dylib=kernel32",
                "dylib=secur32",
                "dylib=user32"
              ],
              "linked_paths": [],
              "cfgs": [
                "feature=\"cfgmgr32\"",
                "feature=\"winreg\"",
                "feature=\"ntstatus\"",
                "feature=\"sspi\"",
                "feature=\"devpropdef\"",
                "feature=\"lsalookup\"",
                "feature=\"excpt\"",
                "feature=\"rpcndr\"",
                "feature=\"basetsd\"",
                "feature=\"vcruntime\"",
                "feature=\"libloaderapi\"",
                "feature=\"ntdef\"",
                "feature=\"cfg\"",
                "feature=\"vadefs\"",
                "feature=\"windef\"",
                "feature=\"ktmtypes\"",
                "feature=\"wincred\"",
                "feature=\"minwinbase\"",
                "feature=\"guiddef\"",
                "feature=\"reason\"",
                "feature=\"wtypesbase\"",
                "feature=\"subauth\""
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\winapi-8f6c07fb56c2fdd2\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.158",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "freebsd11",
                "libc_priv_mod_use",
                "libc_union",
                "libc_const_size_of",
                "libc_align",
                "libc_int128",
                "libc_core_cvoid",
                "libc_packedN",
                "libc_cfg_target_vendor",
                "libc_non_exhaustive",
                "libc_long_array",
                "libc_ptr_addr_of",
                "libc_underscore_const_names",
                "libc_const_extern_fn"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\libc-151f344170de2f8e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-core-1.12.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-core-1.12.1\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\rayon-core-8a97615c96d19aa8\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\rayon-core-8a97615c96d19aa8\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#either@1.13.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\either-1.13.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "either",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\either-1.13.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libeither-8aac4c06c66891db.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crc32fast@1.4.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crc32fast-1.4.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crc32fast",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crc32fast-1.4.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libcrc32fast-6f26f1a08de28b99.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.22",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.22\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.22\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\liblog-e1e9087e6a7c95fb.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pagetable@0.4.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pagetable-0.4.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pagetable",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pagetable-0.4.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libpagetable-c2c18907a0237398.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fault-injection@1.0.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fault-injection-1.0.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fault_injection",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fault-injection-1.0.10\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libfault_injection-6b1b2f81bda373f7.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fnv",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libfnv-da722296a25cad98.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.37\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.37\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libquote-02ea96628e176517.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libquote-02ea96628e176517.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.20",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.20\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_utils",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.20\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libcrossbeam_utils-cd59948f6448795b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_const_fn_trait_bound"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\lock_api-bbc51b35707df81d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zstd-sys@2.0.13+zstd.1.5.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zstd-sys-2.0.13+zstd.1.5.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zstd-sys-2.0.13+zstd.1.5.6\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "legacy",
                "std",
                "zdict_builder"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\zstd-sys-b5f13435041f403c\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\zstd-sys-b5f13435041f403c\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "winapi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "errhandlingapi",
                "fileapi",
                "handleapi",
                "minwindef",
                "ntsecapi",
                "processthreadsapi",
                "profileapi",
                "std",
                "winbase",
                "winerror",
                "winnt"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libwinapi-b5370baa21f73686.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\rayon-core-a8f7ad3b36b987dc\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.158",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.158\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.158\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\liblibc-312b2bb1200a45ab.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.77",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.77\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.77\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "derive",
                "parsing",
                "printing",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libsyn-1b3dc4430f8edf1b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libsyn-1b3dc4430f8edf1b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lock_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "arc_lock",
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\liblock_api-56b08dafb02d5f8a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zstd-sys@2.0.13+zstd.1.5.6",
              "linked_libs": [
                "static=zstd"
              ],
              "linked_paths": [
                "native=C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\zstd-sys-fc2c10ed6b23b11a\\out"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\zstd-sys-fc2c10ed6b23b11a\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-epoch@0.9.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-epoch-0.9.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_epoch",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-epoch-0.9.18\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libcrossbeam_epoch-0e27a4171e6febae.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rand@0.4.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rand-0.4.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rand",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rand-0.4.6\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "libc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\librand-1f0b4e270f05fecb.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-queue@0.3.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-queue-0.3.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_queue",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-queue-0.3.11\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libcrossbeam_queue-84dc920b6e91cb1d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#remove_dir_all@0.5.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\remove_dir_all-0.5.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "remove_dir_all",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\remove_dir_all-0.5.3\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libremove_dir_all-fea217daaf1392dc.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-channel@0.5.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-channel-0.5.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_channel",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-channel-0.5.13\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libcrossbeam_channel-1779bd8cbb826fd6.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fs2@0.4.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fs2-0.4.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fs2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fs2-0.4.3\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libfs2-a3f9ce2127bdd312.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libparking_lot_core-fd1376c5b538a575.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.209",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_derive-1.0.209\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "serde_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_derive-1.0.209\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\serde_derive-ba676ceaef6c23fb.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\serde_derive-ba676ceaef6c23fb.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\serde_derive-ba676ceaef6c23fb.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\serde_derive-ba676ceaef6c23fb.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zstd-sys@2.0.13+zstd.1.5.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zstd-sys-2.0.13+zstd.1.5.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zstd_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zstd-sys-2.0.13+zstd.1.5.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": false,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "legacy",
                "std",
                "zdict_builder"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libzstd_sys-30571fc890e8e7f1.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-deque@0.8.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-deque-0.8.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_deque",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-deque-0.8.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libcrossbeam_deque-83016b586fd41c5c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zstd-safe@6.0.6",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\build\\zstd-safe-858e1cb405183678\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tempdir@0.3.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tempdir-0.3.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tempdir",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tempdir-0.3.7\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libtempdir-50e92d4b5c9b03ba.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cache-advisor@1.0.16",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cache-advisor-1.0.16\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cache_advisor",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cache-advisor-1.0.16\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libcache_advisor-6a96052c6e781d67.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot-0.12.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot-0.12.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "arc_lock",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libparking_lot-d10f955a10cabbc4.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.209",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.209\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "serde",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.209\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "derive",
                "serde_derive",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libserde-1d337bbb0238ef2c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zstd-safe@6.0.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zstd-safe-6.0.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zstd_safe",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zstd-safe-6.0.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "arrays",
                "legacy",
                "std",
                "zdict_builder"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libzstd_safe-c6cac413bb9bf434.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-core-1.12.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rayon_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-core-1.12.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\librayon_core-2d9c1a78911c642a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#shared-local-state@0.1.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\shared-local-state-0.1.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "shared_local_state",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\shared-local-state-0.1.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libshared_local_state-5172f6f4b4b32ad1.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#stack-map@1.0.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\stack-map-1.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "stack_map",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\stack-map-1.0.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "serde"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libstack_map-a02043a436febceb.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zstd@0.12.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zstd-0.12.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zstd",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zstd-0.12.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "arrays",
                "default",
                "legacy",
                "zdict_builder"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libzstd-cb5bc129fb799f2c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bincode@1.3.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bincode-1.3.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bincode",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bincode-1.3.3\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libbincode-e577ece8d11cdfbf.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rayon@1.10.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-1.10.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rayon",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rayon-1.10.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\librayon-30c6675f9a578f13.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ebr@0.2.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ebr-0.2.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ebr",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ebr-0.2.13\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libebr-edaac3be40d377c9.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#concurrent-map@5.0.37",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\concurrent-map-5.0.37\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "concurrent_map",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\concurrent-map-5.0.37\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "serde"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libconcurrent_map-faaef402c2e13089.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#inline-array@0.1.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\inline-array-0.1.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "inline_array",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\inline-array-0.1.13\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "concurrent-map",
                "concurrent_map_minimum",
                "serde"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\target\\debug\\deps\\libinline_array-efdef96999ae7aa4.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: redundant field names in struct initialization\n   --> src\\object_cache.rs:697:25\n    |\n697 |                         collection_id: collection_id,\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `collection_id`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n    = note: `#[warn(clippy::redundant_field_names)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::redundant_field_names)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace it with",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 25699,
                        "byte_start": 25671,
                        "column_end": 53,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\object_cache.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 697,
                        "line_start": 697,
                        "suggested_replacement": "collection_id",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 25,
                            "text": "                        collection_id: collection_id,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_field_names",
                  "explanation": null
                },
                "level": "warning",
                "message": "redundant field names in struct initialization",
                "spans": [
                  {
                    "byte_end": 25699,
                    "byte_start": 25671,
                    "column_end": 53,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\object_cache.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 697,
                    "line_start": 697,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 53,
                        "highlight_start": 25,
                        "text": "                        collection_id: collection_id,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\db.rs:57:48\n   |\n57 |         let mut debug_struct = w.debug_struct(&format!(\"Db<{}>\", LEAF_FANOUT));\n   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n   = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n   |\n57 -         let mut debug_struct = w.debug_struct(&format!(\"Db<{}>\", LEAF_FANOUT));\n57 +         let mut debug_struct = w.debug_struct(&format!(\"Db<{LEAF_FANOUT}>\"));\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::uninlined_format_args)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2234,
                        "byte_start": 2234,
                        "column_end": 61,
                        "column_start": 61,
                        "expansion": null,
                        "file_name": "src\\db.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 57,
                        "line_start": 57,
                        "suggested_replacement": "LEAF_FANOUT",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 61,
                            "highlight_start": 61,
                            "text": "        let mut debug_struct = w.debug_struct(&format!(\"Db<{}>\", LEAF_FANOUT));"
                          }
                        ]
                      },
                      {
                        "byte_end": 2250,
                        "byte_start": 2237,
                        "column_end": 77,
                        "column_start": 64,
                        "expansion": null,
                        "file_name": "src\\db.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 57,
                        "line_start": 57,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 77,
                            "highlight_start": 64,
                            "text": "        let mut debug_struct = w.debug_struct(&format!(\"Db<{}>\", LEAF_FANOUT));"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 2251,
                    "byte_start": 2221,
                    "column_end": 78,
                    "column_start": 48,
                    "expansion": null,
                    "file_name": "src\\db.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 57,
                    "line_start": 57,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 78,
                        "highlight_start": 48,
                        "text": "        let mut debug_struct = w.debug_struct(&format!(\"Db<{}>\", LEAF_FANOUT));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this can be `std::io::Error::other(_)`\n   --> src\\db.rs:100:34\n    |\n100 |                   cache.set_error(&io::Error::new(\n    |  __________________________________^\n101 | |                     io::ErrorKind::Other,\n102 | |                     \"Db flusher panicked while flushing\".to_string(),\n103 | |                 ));\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#io_other_error\n    = note: `#[warn(clippy::io_other_error)]` on by default\nhelp: use `std::io::Error::other`\n    |\n100 ~                 cache.set_error(&io::Error::other(\n101 ~                     \"Db flusher panicked while flushing\".to_string(),\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#io_other_error",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::io_other_error)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `std::io::Error::other`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3620,
                        "byte_start": 3617,
                        "column_end": 48,
                        "column_start": 45,
                        "expansion": null,
                        "file_name": "src\\db.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 100,
                        "line_start": 100,
                        "suggested_replacement": "other",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 45,
                            "text": "                cache.set_error(&io::Error::new("
                          }
                        ]
                      },
                      {
                        "byte_end": 3684,
                        "byte_start": 3642,
                        "column_end": 21,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\db.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 102,
                        "line_start": 101,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 21,
                            "text": "                    io::ErrorKind::Other,"
                          },
                          {
                            "highlight_end": 21,
                            "highlight_start": 1,
                            "text": "                    \"Db flusher panicked while flushing\".to_string(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::io_other_error",
                  "explanation": null
                },
                "level": "warning",
                "message": "this can be `std::io::Error::other(_)`",
                "spans": [
                  {
                    "byte_end": 3751,
                    "byte_start": 3606,
                    "column_end": 18,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\db.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 103,
                    "line_start": 100,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 34,
                        "text": "                cache.set_error(&io::Error::new("
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                    io::ErrorKind::Other,"
                      },
                      {
                        "highlight_end": 70,
                        "highlight_start": 1,
                        "text": "                    \"Db flusher panicked while flushing\".to_string(),"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                ));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this can be `std::io::Error::other(_)`\n   --> src\\db.rs:119:30\n    |\n119 |               cache.set_error(&io::Error::new(\n    |  ______________________________^\n120 | |                 io::ErrorKind::Other,\n121 | |                 \"system has been shut down\".to_string(),\n122 | |             ));\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#io_other_error\nhelp: use `std::io::Error::other`\n    |\n119 ~             cache.set_error(&io::Error::other(\n120 ~                 \"system has been shut down\".to_string(),\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#io_other_error",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `std::io::Error::other`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4245,
                        "byte_start": 4242,
                        "column_end": 44,
                        "column_start": 41,
                        "expansion": null,
                        "file_name": "src\\db.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 119,
                        "line_start": 119,
                        "suggested_replacement": "other",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 41,
                            "text": "            cache.set_error(&io::Error::new("
                          }
                        ]
                      },
                      {
                        "byte_end": 4301,
                        "byte_start": 4263,
                        "column_end": 17,
                        "column_start": 17,
                        "expansion": null,
                        "file_name": "src\\db.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 121,
                        "line_start": 120,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 38,
                            "highlight_start": 17,
                            "text": "                io::ErrorKind::Other,"
                          },
                          {
                            "highlight_end": 17,
                            "highlight_start": 1,
                            "text": "                \"system has been shut down\".to_string(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::io_other_error",
                  "explanation": null
                },
                "level": "warning",
                "message": "this can be `std::io::Error::other(_)`",
                "spans": [
                  {
                    "byte_end": 4355,
                    "byte_start": 4231,
                    "column_end": 14,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\db.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 122,
                    "line_start": 119,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 45,
                        "highlight_start": 30,
                        "text": "            cache.set_error(&io::Error::new("
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "                io::ErrorKind::Other,"
                      },
                      {
                        "highlight_end": 57,
                        "highlight_start": 1,
                        "text": "                \"system has been shut down\".to_string(),"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            ));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\db.rs:243:68\n    |\n243 |         let (cache, indices, was_recovered) = ObjectCache::recover(&config)?;\n    |                                                                    ^^^^^^^ help: change this to: `config`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_borrow)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8276,
                        "byte_start": 8269,
                        "column_end": 75,
                        "column_start": 68,
                        "expansion": null,
                        "file_name": "src\\db.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 243,
                        "line_start": 243,
                        "suggested_replacement": "config",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 75,
                            "highlight_start": 68,
                            "text": "        let (cache, indices, was_recovered) = ObjectCache::recover(&config)?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 8276,
                    "byte_start": 8269,
                    "column_end": 75,
                    "column_start": 68,
                    "expansion": null,
                    "file_name": "src\\db.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 243,
                    "line_start": 243,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 75,
                        "highlight_start": 68,
                        "text": "        let (cache, indices, was_recovered) = ObjectCache::recover(&config)?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\db.rs:255:17\n    |\n255 | /                 assert!(\n256 | |                     allocated_collection_ids.insert(collection_id.0),\n257 | |                     \"allocated_collection_ids already contained {:?}\",\n258 | |                     collection_id\n259 | |                 );\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8828,
                        "byte_start": 8828,
                        "column_end": 66,
                        "column_start": 66,
                        "expansion": null,
                        "file_name": "src\\db.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 257,
                        "line_start": 257,
                        "suggested_replacement": "collection_id",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 66,
                            "highlight_start": 66,
                            "text": "                    \"allocated_collection_ids already contained {:?}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 8867,
                        "byte_start": 8832,
                        "column_end": 34,
                        "column_start": 70,
                        "expansion": null,
                        "file_name": "src\\db.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 258,
                        "line_start": 257,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 71,
                            "highlight_start": 70,
                            "text": "                    \"allocated_collection_ids already contained {:?}\","
                          },
                          {
                            "highlight_end": 34,
                            "highlight_start": 1,
                            "text": "                    collection_id"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 8885,
                    "byte_start": 8684,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\db.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 259,
                    "line_start": 255,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 17,
                        "text": "                assert!("
                      },
                      {
                        "highlight_end": 70,
                        "highlight_start": 1,
                        "text": "                    allocated_collection_ids.insert(collection_id.0),"
                      },
                      {
                        "highlight_end": 71,
                        "highlight_start": 1,
                        "text": "                    \"allocated_collection_ids already contained {:?}\","
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "                    collection_id"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                );"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\db.rs:289:13\n    |\n289 | /             assert!(\n290 | |                 allocated_collection_ids.insert(collection_id.0),\n291 | |                 \"allocated_collection_ids already contained {:?}\",\n292 | |                 collection_id\n293 | |             );\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9981,
                        "byte_start": 9981,
                        "column_end": 62,
                        "column_start": 62,
                        "expansion": null,
                        "file_name": "src\\db.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 291,
                        "line_start": 291,
                        "suggested_replacement": "collection_id",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 62,
                            "highlight_start": 62,
                            "text": "                \"allocated_collection_ids already contained {:?}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 10016,
                        "byte_start": 9985,
                        "column_end": 30,
                        "column_start": 66,
                        "expansion": null,
                        "file_name": "src\\db.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 292,
                        "line_start": 291,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 67,
                            "highlight_start": 66,
                            "text": "                \"allocated_collection_ids already contained {:?}\","
                          },
                          {
                            "highlight_end": 30,
                            "highlight_start": 1,
                            "text": "                collection_id"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 10030,
                    "byte_start": 9845,
                    "column_end": 14,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\db.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 293,
                    "line_start": 289,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 13,
                        "text": "            assert!("
                      },
                      {
                        "highlight_end": 66,
                        "highlight_start": 1,
                        "text": "                allocated_collection_ids.insert(collection_id.0),"
                      },
                      {
                        "highlight_end": 67,
                        "highlight_start": 1,
                        "text": "                \"allocated_collection_ids already contained {:?}\","
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                collection_id"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            );"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this can be `std::io::Error::other(_)`\n   --> src\\db.rs:338:28\n    |\n338 |                   return Err(io::Error::new(\n    |  ____________________________^\n339 | |                     io::ErrorKind::Other,\n340 | |                     format!(\"unable to spawn flusher thread for sled database: {:?}\", e)\n341 | |                 ));\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#io_other_error\nhelp: use `std::io::Error::other`\n    |\n338 ~                 return Err(io::Error::other(\n339 ~                     format!(\"unable to spawn flusher thread for sled database: {:?}\", e)\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#io_other_error",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `std::io::Error::other`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11427,
                        "byte_start": 11424,
                        "column_end": 42,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\db.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 338,
                        "line_start": 338,
                        "suggested_replacement": "other",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 39,
                            "text": "                return Err(io::Error::new("
                          }
                        ]
                      },
                      {
                        "byte_end": 11491,
                        "byte_start": 11449,
                        "column_end": 21,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\db.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 340,
                        "line_start": 339,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 21,
                            "text": "                    io::ErrorKind::Other,"
                          },
                          {
                            "highlight_end": 21,
                            "highlight_start": 1,
                            "text": "                    format!(\"unable to spawn flusher thread for sled database: {:?}\", e)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::io_other_error",
                  "explanation": null
                },
                "level": "warning",
                "message": "this can be `std::io::Error::other(_)`",
                "spans": [
                  {
                    "byte_end": 11577,
                    "byte_start": 11413,
                    "column_end": 18,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\db.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 341,
                    "line_start": 338,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 43,
                        "highlight_start": 28,
                        "text": "                return Err(io::Error::new("
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                    io::ErrorKind::Other,"
                      },
                      {
                        "highlight_end": 89,
                        "highlight_start": 1,
                        "text": "                    format!(\"unable to spawn flusher thread for sled database: {:?}\", e)"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                ));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\db.rs:340:21\n    |\n340 |                     format!(\"unable to spawn flusher thread for sled database: {:?}\", e)\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n340 -                     format!(\"unable to spawn flusher thread for sled database: {:?}\", e)\n340 +                     format!(\"unable to spawn flusher thread for sled database: {e:?}\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11551,
                        "byte_start": 11551,
                        "column_end": 81,
                        "column_start": 81,
                        "expansion": null,
                        "file_name": "src\\db.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 340,
                        "line_start": 340,
                        "suggested_replacement": "e",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 81,
                            "highlight_start": 81,
                            "text": "                    format!(\"unable to spawn flusher thread for sled database: {:?}\", e)"
                          }
                        ]
                      },
                      {
                        "byte_end": 11558,
                        "byte_start": 11555,
                        "column_end": 88,
                        "column_start": 85,
                        "expansion": null,
                        "file_name": "src\\db.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 340,
                        "line_start": 340,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 88,
                            "highlight_start": 85,
                            "text": "                    format!(\"unable to spawn flusher thread for sled database: {:?}\", e)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 11559,
                    "byte_start": 11491,
                    "column_end": 89,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\db.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 340,
                    "line_start": 340,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 89,
                        "highlight_start": 21,
                        "text": "                    format!(\"unable to spawn flusher thread for sled database: {:?}\", e)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\db.rs:499:26\n    |\n499 |                 other => panic!(\"unknown collection type {:?}\", other),\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n499 -                 other => panic!(\"unknown collection type {:?}\", other),\n499 +                 other => panic!(\"unknown collection type {other:?}\"),\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 16626,
                        "byte_start": 16626,
                        "column_end": 59,
                        "column_start": 59,
                        "expansion": null,
                        "file_name": "src\\db.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 499,
                        "line_start": 499,
                        "suggested_replacement": "other",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 59,
                            "text": "                other => panic!(\"unknown collection type {:?}\", other),"
                          }
                        ]
                      },
                      {
                        "byte_end": 16637,
                        "byte_start": 16630,
                        "column_end": 70,
                        "column_start": 63,
                        "expansion": null,
                        "file_name": "src\\db.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 499,
                        "line_start": 499,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 70,
                            "highlight_start": 63,
                            "text": "                other => panic!(\"unknown collection type {:?}\", other),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 16638,
                    "byte_start": 16593,
                    "column_end": 71,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\db.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 499,
                    "line_start": 499,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 71,
                        "highlight_start": 26,
                        "text": "                other => panic!(\"unknown collection type {:?}\", other),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\flush_epoch.rs:237:13\n    |\n237 | /             assert_eq!(\n238 | |                 last & SEAL_BIT,\n239 | |                 0,\n240 | |                 \"epoch {} double-sealed\",\n241 | |                 flush_through\n242 | |             );\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6608,
                        "byte_start": 6608,
                        "column_end": 25,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\flush_epoch.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 240,
                        "line_start": 240,
                        "suggested_replacement": "flush_through",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 25,
                            "highlight_start": 25,
                            "text": "                \"epoch {} double-sealed\","
                          }
                        ]
                      },
                      {
                        "byte_end": 6655,
                        "byte_start": 6624,
                        "column_end": 30,
                        "column_start": 41,
                        "expansion": null,
                        "file_name": "src\\flush_epoch.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 241,
                        "line_start": 240,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 41,
                            "text": "                \"epoch {} double-sealed\","
                          },
                          {
                            "highlight_end": 30,
                            "highlight_start": 1,
                            "text": "                flush_through"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 6669,
                    "byte_start": 6520,
                    "column_end": 14,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\flush_epoch.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 242,
                    "line_start": 237,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 13,
                        "text": "            assert_eq!("
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "                last & SEAL_BIT,"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                0,"
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                \"epoch {} double-sealed\","
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                flush_through"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            );"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the loop variable `idx` is used to index `SLAB_SIZES`\n   --> src\\heap.rs:202:16\n    |\n202 |     for idx in 0..SLAB_SIZES.len() {\n    |                ^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n202 -     for idx in 0..SLAB_SIZES.len() {\n202 +     for (idx, <item>) in SLAB_SIZES.iter().enumerate() {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_range_loop)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using an iterator and enumerate()",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5657,
                        "byte_start": 5654,
                        "column_end": 12,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 202,
                        "line_start": 202,
                        "suggested_replacement": "(idx, <item>)",
                        "suggestion_applicability": "HasPlaceholders",
                        "text": [
                          {
                            "highlight_end": 12,
                            "highlight_start": 9,
                            "text": "    for idx in 0..SLAB_SIZES.len() {"
                          }
                        ]
                      },
                      {
                        "byte_end": 5680,
                        "byte_start": 5661,
                        "column_end": 35,
                        "column_start": 16,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 202,
                        "line_start": 202,
                        "suggested_replacement": "SLAB_SIZES.iter().enumerate()",
                        "suggestion_applicability": "HasPlaceholders",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 16,
                            "text": "    for idx in 0..SLAB_SIZES.len() {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_range_loop",
                  "explanation": null
                },
                "level": "warning",
                "message": "the loop variable `idx` is used to index `SLAB_SIZES`",
                "spans": [
                  {
                    "byte_end": 5680,
                    "byte_start": 5661,
                    "column_end": 35,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\heap.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 202,
                    "line_start": 202,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 16,
                        "text": "    for idx in 0..SLAB_SIZES.len() {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the borrowed expression implements the required traits\n   --> src\\heap.rs:245:47\n    |\n245 |                 std::fs::write(settings_path, &self.serialize())\n    |                                               ^^^^^^^^^^^^^^^^^ help: change this to: `self.serialize()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n    = note: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_borrows_for_generic_args)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6849,
                        "byte_start": 6832,
                        "column_end": 64,
                        "column_start": 47,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 245,
                        "line_start": 245,
                        "suggested_replacement": "self.serialize()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 64,
                            "highlight_start": 47,
                            "text": "                std::fs::write(settings_path, &self.serialize())"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrows_for_generic_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "the borrowed expression implements the required traits",
                "spans": [
                  {
                    "byte_end": 6849,
                    "byte_start": 6832,
                    "column_end": 64,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\heap.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 245,
                    "line_start": 245,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 64,
                        "highlight_start": 47,
                        "text": "                std::fs::write(settings_path, &self.serialize())"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\heap.rs:293:29\n    |\n293 | / ...                   format!(\n294 | | ...                       \"sled was already opened with a LEAF_FANOUT const generic of {}, \\\n295 | | ...                       and this may not be changed after initial creation. Please use \\\n296 | | ...                       Db::import / Db::export to migrate, if you wish to change the \\\n297 | | ...                       system's format.\", lf2\n298 | | ...                   )\n    | |_______________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n294 ~                                 \"sled was already opened with a LEAF_FANOUT const generic of {lf2}, \\\n295 |                                 and this may not be changed after initial creation. Please use \\\n296 |                                 Db::import / Db::export to migrate, if you wish to change the \\\n297 ~                                 system's format.\"\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8428,
                        "byte_start": 8428,
                        "column_end": 95,
                        "column_start": 95,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 294,
                        "line_start": 294,
                        "suggested_replacement": "lf2",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 95,
                            "highlight_start": 95,
                            "text": "                                \"sled was already opened with a LEAF_FANOUT const generic of {}, \\"
                          }
                        ]
                      },
                      {
                        "byte_end": 8680,
                        "byte_start": 8675,
                        "column_end": 55,
                        "column_start": 50,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 297,
                        "line_start": 297,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 55,
                            "highlight_start": 50,
                            "text": "                                system's format.\", lf2"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 8710,
                    "byte_start": 8325,
                    "column_end": 30,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\heap.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 298,
                    "line_start": 293,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 29,
                        "text": "                            format!("
                      },
                      {
                        "highlight_end": 99,
                        "highlight_start": 1,
                        "text": "                                \"sled was already opened with a LEAF_FANOUT const generic of {}, \\"
                      },
                      {
                        "highlight_end": 97,
                        "highlight_start": 1,
                        "text": "                                and this may not be changed after initial creation. Please use \\"
                      },
                      {
                        "highlight_end": 96,
                        "highlight_start": 1,
                        "text": "                                Db::import / Db::export to migrate, if you wish to change the \\"
                      },
                      {
                        "highlight_end": 55,
                        "highlight_start": 1,
                        "text": "                                system's format.\", lf2"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                            )"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> src\\heap.rs:386:1\n    |\n386 | impl Into<NonZeroU64> for SlabAddress {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n    = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<heap::SlabAddress>`\n    |\n386 ~ impl From<SlabAddress> for NonZeroU64 {\n387 ~     fn from(val: SlabAddress) -> Self {\n388 |         NonZeroU64::new(u64::from_be_bytes([\n389 ~             val.slab_id + 1,\n390 ~             val.slab_slot[0],\n391 ~             val.slab_slot[1],\n392 ~             val.slab_slot[2],\n393 ~             val.slab_slot[3],\n394 ~             val.slab_slot[4],\n395 ~             val.slab_slot[5],\n396 ~             val.slab_slot[6],\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "`impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\nhttps://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::from_over_into)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace the `Into` implementation with `From<heap::SlabAddress>`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10822,
                        "byte_start": 10818,
                        "column_end": 10,
                        "column_start": 6,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 386,
                        "line_start": 386,
                        "suggested_replacement": "From",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 10,
                            "highlight_start": 6,
                            "text": "impl Into<NonZeroU64> for SlabAddress {"
                          }
                        ]
                      },
                      {
                        "byte_end": 10833,
                        "byte_start": 10823,
                        "column_end": 21,
                        "column_start": 11,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 386,
                        "line_start": 386,
                        "suggested_replacement": "SlabAddress",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 21,
                            "highlight_start": 11,
                            "text": "impl Into<NonZeroU64> for SlabAddress {"
                          }
                        ]
                      },
                      {
                        "byte_end": 10850,
                        "byte_start": 10839,
                        "column_end": 38,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 386,
                        "line_start": 386,
                        "suggested_replacement": "NonZeroU64",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 38,
                            "highlight_start": 27,
                            "text": "impl Into<NonZeroU64> for SlabAddress {"
                          }
                        ]
                      },
                      {
                        "byte_end": 10864,
                        "byte_start": 10860,
                        "column_end": 12,
                        "column_start": 8,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 387,
                        "line_start": 387,
                        "suggested_replacement": "from",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 12,
                            "highlight_start": 8,
                            "text": "    fn into(self) -> NonZeroU64 {"
                          }
                        ]
                      },
                      {
                        "byte_end": 10869,
                        "byte_start": 10865,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 387,
                        "line_start": 387,
                        "suggested_replacement": "val: SlabAddress",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "    fn into(self) -> NonZeroU64 {"
                          }
                        ]
                      },
                      {
                        "byte_end": 10884,
                        "byte_start": 10874,
                        "column_end": 32,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 387,
                        "line_start": 387,
                        "suggested_replacement": "Self",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 22,
                            "text": "    fn into(self) -> NonZeroU64 {"
                          }
                        ]
                      },
                      {
                        "byte_end": 10948,
                        "byte_start": 10944,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 389,
                        "line_start": 389,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "            self.slab_id + 1,"
                          }
                        ]
                      },
                      {
                        "byte_end": 10978,
                        "byte_start": 10974,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 390,
                        "line_start": 390,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "            self.slab_slot[0],"
                          }
                        ]
                      },
                      {
                        "byte_end": 11009,
                        "byte_start": 11005,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 391,
                        "line_start": 391,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "            self.slab_slot[1],"
                          }
                        ]
                      },
                      {
                        "byte_end": 11040,
                        "byte_start": 11036,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 392,
                        "line_start": 392,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "            self.slab_slot[2],"
                          }
                        ]
                      },
                      {
                        "byte_end": 11071,
                        "byte_start": 11067,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 393,
                        "line_start": 393,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "            self.slab_slot[3],"
                          }
                        ]
                      },
                      {
                        "byte_end": 11102,
                        "byte_start": 11098,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 394,
                        "line_start": 394,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "            self.slab_slot[4],"
                          }
                        ]
                      },
                      {
                        "byte_end": 11133,
                        "byte_start": 11129,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 395,
                        "line_start": 395,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "            self.slab_slot[5],"
                          }
                        ]
                      },
                      {
                        "byte_end": 11164,
                        "byte_start": 11160,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 396,
                        "line_start": 396,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "            self.slab_slot[6],"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::from_over_into",
                  "explanation": null
                },
                "level": "warning",
                "message": "an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true",
                "spans": [
                  {
                    "byte_end": 10850,
                    "byte_start": 10813,
                    "column_end": 38,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\heap.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 386,
                    "line_start": 386,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "impl Into<NonZeroU64> for SlabAddress {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: calling `set_len()` immediately after reserving a buffer creates uninitialized values\n   --> src\\heap.rs:516:9\n    |\n516 |         let mut data = Vec::with_capacity(self.slot_size);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n517 |         unsafe {\n518 |             data.set_len(self.slot_size);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: initialize the buffer or wrap the content in `MaybeUninit`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninit_vec\n    = note: `#[deny(clippy::uninit_vec)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "initialize the buffer or wrap the content in `MaybeUninit`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninit_vec",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[deny(clippy::uninit_vec)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::uninit_vec",
                  "explanation": null
                },
                "level": "error",
                "message": "calling `set_len()` immediately after reserving a buffer creates uninitialized values",
                "spans": [
                  {
                    "byte_end": 14317,
                    "byte_start": 14267,
                    "column_end": 59,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\heap.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 516,
                    "line_start": 516,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 9,
                        "text": "        let mut data = Vec::with_capacity(self.slot_size);"
                      }
                    ]
                  },
                  {
                    "byte_end": 14375,
                    "byte_start": 14347,
                    "column_end": 41,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\heap.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 518,
                    "line_start": 518,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 13,
                        "text": "            data.set_len(self.slot_size);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the borrowed expression implements the required traits\n   --> src\\heap.rs:743:55\n    |\n743 |         let directory_lock = fallible!(fs::File::open(&path));\n    |                                                       ^^^^^ help: change this to: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 21214,
                        "byte_start": 21209,
                        "column_end": 60,
                        "column_start": 55,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 743,
                        "line_start": 743,
                        "suggested_replacement": "path",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 60,
                            "highlight_start": 55,
                            "text": "        let directory_lock = fallible!(fs::File::open(&path));"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrows_for_generic_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "the borrowed expression implements the required traits",
                "spans": [
                  {
                    "byte_end": 21214,
                    "byte_start": 21209,
                    "column_end": 60,
                    "column_start": 55,
                    "expansion": null,
                    "file_name": "src\\heap.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 743,
                    "line_start": 743,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 55,
                        "text": "        let directory_lock = fallible!(fs::File::open(&path));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the loop variable `i` is only used to index `SLAB_SIZES`\n   --> src\\heap.rs:788:18\n    |\n788 |         for i in 0..N_SLABS {\n    |                  ^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n788 -         for i in 0..N_SLABS {\n788 +         for <item> in SLAB_SIZES.iter().take(N_SLABS) {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using an iterator",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 22697,
                        "byte_start": 22696,
                        "column_end": 14,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 788,
                        "line_start": 788,
                        "suggested_replacement": "<item>",
                        "suggestion_applicability": "HasPlaceholders",
                        "text": [
                          {
                            "highlight_end": 14,
                            "highlight_start": 13,
                            "text": "        for i in 0..N_SLABS {"
                          }
                        ]
                      },
                      {
                        "byte_end": 22711,
                        "byte_start": 22701,
                        "column_end": 28,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 788,
                        "line_start": 788,
                        "suggested_replacement": "SLAB_SIZES.iter().take(N_SLABS)",
                        "suggestion_applicability": "HasPlaceholders",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 18,
                            "text": "        for i in 0..N_SLABS {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_range_loop",
                  "explanation": null
                },
                "level": "warning",
                "message": "the loop variable `i` is only used to index `SLAB_SIZES`",
                "spans": [
                  {
                    "byte_end": 22711,
                    "byte_start": 22701,
                    "column_end": 28,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "src\\heap.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 788,
                    "line_start": 788,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 18,
                        "text": "        for i in 0..N_SLABS {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\heap.rs:790:44\n    |\n790 |             let slab_path = slabs_dir.join(format!(\"{}\", slot_size));\n    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n790 -             let slab_path = slabs_dir.join(format!(\"{}\", slot_size));\n790 +             let slab_path = slabs_dir.join(format!(\"{slot_size}\"));\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 22810,
                        "byte_start": 22810,
                        "column_end": 54,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 790,
                        "line_start": 790,
                        "suggested_replacement": "slot_size",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 54,
                            "text": "            let slab_path = slabs_dir.join(format!(\"{}\", slot_size));"
                          }
                        ]
                      },
                      {
                        "byte_end": 22823,
                        "byte_start": 22812,
                        "column_end": 67,
                        "column_start": 56,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 790,
                        "line_start": 790,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 67,
                            "highlight_start": 56,
                            "text": "            let slab_path = slabs_dir.join(format!(\"{}\", slot_size));"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 22824,
                    "byte_start": 22800,
                    "column_end": 68,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "src\\heap.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 790,
                    "line_start": 790,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 68,
                        "highlight_start": 44,
                        "text": "            let slab_path = slabs_dir.join(format!(\"{}\", slot_size));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> src\\heap.rs:1051:17\n     |\n1051 | /                 assert!(\n1052 | |                     target_len >= currently_occupied_bytes,\n1053 | |                     \"target_len of {} is above actual occupied len of {}\",\n1054 | |                     target_len,\n1055 | |                     currently_occupied_bytes\n1056 | |                 );\n     | |_________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 31819,
                        "byte_start": 31819,
                        "column_end": 37,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1053,
                        "line_start": 1053,
                        "suggested_replacement": "target_len",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 37,
                            "highlight_start": 37,
                            "text": "                    \"target_len of {} is above actual occupied len of {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 31854,
                        "byte_start": 31854,
                        "column_end": 72,
                        "column_start": 72,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1053,
                        "line_start": 1053,
                        "suggested_replacement": "currently_occupied_bytes",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 72,
                            "highlight_start": 72,
                            "text": "                    \"target_len of {} is above actual occupied len of {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 31888,
                        "byte_start": 31856,
                        "column_end": 31,
                        "column_start": 74,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1054,
                        "line_start": 1053,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 75,
                            "highlight_start": 74,
                            "text": "                    \"target_len of {} is above actual occupied len of {}\","
                          },
                          {
                            "highlight_end": 31,
                            "highlight_start": 1,
                            "text": "                    target_len,"
                          }
                        ]
                      },
                      {
                        "byte_end": 31934,
                        "byte_start": 31888,
                        "column_end": 45,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\heap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1055,
                        "line_start": 1054,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 31,
                            "text": "                    target_len,"
                          },
                          {
                            "highlight_end": 45,
                            "highlight_start": 1,
                            "text": "                    currently_occupied_bytes"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 31952,
                    "byte_start": 31714,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\heap.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1056,
                    "line_start": 1051,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 17,
                        "text": "                assert!("
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "                    target_len >= currently_occupied_bytes,"
                      },
                      {
                        "highlight_end": 75,
                        "highlight_start": 1,
                        "text": "                    \"target_len of {} is above actual occupied len of {}\","
                      },
                      {
                        "highlight_end": 32,
                        "highlight_start": 1,
                        "text": "                    target_len,"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                    currently_occupied_bytes"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                );"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this can be `std::io::Error::other(_)`\n   --> src\\metadata_store.rs:240:25\n    |\n240 |           self.set_error(&io::Error::new(\n    |  _________________________^\n241 | |             io::ErrorKind::Other,\n242 | |             \"system has been shut down\".to_string(),\n243 | |         ));\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#io_other_error\nhelp: use `std::io::Error::other`\n    |\n240 ~         self.set_error(&io::Error::other(\n241 ~             \"system has been shut down\".to_string(),\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#io_other_error",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `std::io::Error::other`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6805,
                        "byte_start": 6802,
                        "column_end": 39,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "src\\metadata_store.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 240,
                        "line_start": 240,
                        "suggested_replacement": "other",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 36,
                            "text": "        self.set_error(&io::Error::new("
                          }
                        ]
                      },
                      {
                        "byte_end": 6853,
                        "byte_start": 6819,
                        "column_end": 13,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\metadata_store.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 242,
                        "line_start": 241,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 34,
                            "highlight_start": 13,
                            "text": "            io::ErrorKind::Other,"
                          },
                          {
                            "highlight_end": 13,
                            "highlight_start": 1,
                            "text": "            \"system has been shut down\".to_string(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::io_other_error",
                  "explanation": null
                },
                "level": "warning",
                "message": "this can be `std::io::Error::other(_)`",
                "spans": [
                  {
                    "byte_end": 6903,
                    "byte_start": 6791,
                    "column_end": 10,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\metadata_store.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 243,
                    "line_start": 240,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 25,
                        "text": "        self.set_error(&io::Error::new("
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "            io::ErrorKind::Other,"
                      },
                      {
                        "highlight_end": 53,
                        "highlight_start": 1,
                        "text": "            \"system has been shut down\".to_string(),"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        ));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this can be `std::io::Error::other(_)`\n   --> src\\metadata_store.rs:331:24\n    |\n331 |               return Err(io::Error::new(\n    |  ________________________^\n332 | |                 io::ErrorKind::Other,\n333 | |                 format!(\n334 | |                     \"unable to spawn metadata compactor thread for sled database: {:?}\",\n335 | |                     e\n336 | |                 ),\n337 | |             ));\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#io_other_error\nhelp: use `std::io::Error::other`\n    |\n331 ~             return Err(io::Error::other(\n332 ~                 format!(\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#io_other_error",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `std::io::Error::other`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9527,
                        "byte_start": 9524,
                        "column_end": 38,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\metadata_store.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 331,
                        "line_start": 331,
                        "suggested_replacement": "other",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 38,
                            "highlight_start": 35,
                            "text": "            return Err(io::Error::new("
                          }
                        ]
                      },
                      {
                        "byte_end": 9583,
                        "byte_start": 9545,
                        "column_end": 17,
                        "column_start": 17,
                        "expansion": null,
                        "file_name": "src\\metadata_store.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 333,
                        "line_start": 332,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 38,
                            "highlight_start": 17,
                            "text": "                io::ErrorKind::Other,"
                          },
                          {
                            "highlight_end": 17,
                            "highlight_start": 1,
                            "text": "                format!("
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::io_other_error",
                  "explanation": null
                },
                "level": "warning",
                "message": "this can be `std::io::Error::other(_)`",
                "spans": [
                  {
                    "byte_end": 9735,
                    "byte_start": 9513,
                    "column_end": 14,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\metadata_store.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 337,
                    "line_start": 331,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 24,
                        "text": "            return Err(io::Error::new("
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "                io::ErrorKind::Other,"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                format!("
                      },
                      {
                        "highlight_end": 89,
                        "highlight_start": 1,
                        "text": "                    \"unable to spawn metadata compactor thread for sled database: {:?}\","
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "                    e"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                ),"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            ));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\metadata_store.rs:333:17\n    |\n333 | /                 format!(\n334 | |                     \"unable to spawn metadata compactor thread for sled database: {:?}\",\n335 | |                     e\n336 | |                 ),\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9675,
                        "byte_start": 9675,
                        "column_end": 84,
                        "column_start": 84,
                        "expansion": null,
                        "file_name": "src\\metadata_store.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 334,
                        "line_start": 334,
                        "suggested_replacement": "e",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 84,
                            "highlight_start": 84,
                            "text": "                    \"unable to spawn metadata compactor thread for sled database: {:?}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 9702,
                        "byte_start": 9679,
                        "column_end": 22,
                        "column_start": 88,
                        "expansion": null,
                        "file_name": "src\\metadata_store.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 335,
                        "line_start": 334,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 89,
                            "highlight_start": 88,
                            "text": "                    \"unable to spawn metadata compactor thread for sled database: {:?}\","
                          },
                          {
                            "highlight_end": 22,
                            "highlight_start": 1,
                            "text": "                    e"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 9720,
                    "byte_start": 9583,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\metadata_store.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 336,
                    "line_start": 333,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 17,
                        "text": "                format!("
                      },
                      {
                        "highlight_end": 89,
                        "highlight_start": 1,
                        "text": "                    \"unable to spawn metadata compactor thread for sled database: {:?}\","
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "                    e"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                ),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\metadata_store.rs:461:41\n    |\n461 |                 batch_encoder.write_all(&low_key).unwrap();\n    |                                         ^^^^^^^^ help: change this to: `low_key`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 13940,
                        "byte_start": 13932,
                        "column_end": 49,
                        "column_start": 41,
                        "expansion": null,
                        "file_name": "src\\metadata_store.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 461,
                        "line_start": 461,
                        "suggested_replacement": "low_key",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 41,
                            "text": "                batch_encoder.write_all(&low_key).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 13940,
                    "byte_start": 13932,
                    "column_end": 49,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "src\\metadata_store.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 461,
                    "line_start": 461,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 41,
                        "text": "                batch_encoder.write_all(&low_key).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: calling `set_len()` immediately after reserving a buffer creates uninitialized values\n   --> src\\metadata_store.rs:526:5\n    |\n526 |     reusable_frame_buffer.reserve(len + 12);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n527 |     unsafe {\n528 |         reusable_frame_buffer.set_len(len + 12);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: initialize the buffer or wrap the content in `MaybeUninit`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninit_vec\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "initialize the buffer or wrap the content in `MaybeUninit`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninit_vec",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::uninit_vec",
                  "explanation": null
                },
                "level": "error",
                "message": "calling `set_len()` immediately after reserving a buffer creates uninitialized values",
                "spans": [
                  {
                    "byte_end": 16143,
                    "byte_start": 16103,
                    "column_end": 45,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\metadata_store.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 526,
                    "line_start": 526,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 45,
                        "highlight_start": 5,
                        "text": "    reusable_frame_buffer.reserve(len + 12);"
                      }
                    ]
                  },
                  {
                    "byte_end": 16204,
                    "byte_start": 16165,
                    "column_end": 48,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\metadata_store.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 528,
                    "line_start": 528,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 9,
                        "text": "        reusable_frame_buffer.set_len(len + 12);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: calling `set_len()` immediately after reserving a buffer creates uninitialized values\n   --> src\\metadata_store.rs:592:9\n    |\n592 |         low_key_buf.reserve(low_key_len);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n593 |         unsafe {\n594 |             low_key_buf.set_len(low_key_len);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: initialize the buffer or wrap the content in `MaybeUninit`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninit_vec\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "initialize the buffer or wrap the content in `MaybeUninit`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninit_vec",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::uninit_vec",
                  "explanation": null
                },
                "level": "error",
                "message": "calling `set_len()` immediately after reserving a buffer creates uninitialized values",
                "spans": [
                  {
                    "byte_end": 18460,
                    "byte_start": 18427,
                    "column_end": 42,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\metadata_store.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 592,
                    "line_start": 592,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 9,
                        "text": "        low_key_buf.reserve(low_key_len);"
                      }
                    ]
                  },
                  {
                    "byte_end": 18522,
                    "byte_start": 18490,
                    "column_end": 45,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\metadata_store.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 594,
                    "line_start": 594,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 45,
                        "highlight_start": 13,
                        "text": "            low_key_buf.set_len(low_key_len);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\metadata_store.rs:665:25\n    |\n665 |     directory_path.join(format!(\"{LOG_PREFIX}_{:016x}\", id))\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n665 -     directory_path.join(format!(\"{LOG_PREFIX}_{:016x}\", id))\n665 +     directory_path.join(format!(\"{LOG_PREFIX}_{id:016x}\"))\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20722,
                        "byte_start": 20722,
                        "column_end": 48,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\metadata_store.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 665,
                        "line_start": 665,
                        "suggested_replacement": "id",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 48,
                            "text": "    directory_path.join(format!(\"{LOG_PREFIX}_{:016x}\", id))"
                          }
                        ]
                      },
                      {
                        "byte_end": 20733,
                        "byte_start": 20729,
                        "column_end": 59,
                        "column_start": 55,
                        "expansion": null,
                        "file_name": "src\\metadata_store.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 665,
                        "line_start": 665,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 55,
                            "text": "    directory_path.join(format!(\"{LOG_PREFIX}_{:016x}\", id))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 20734,
                    "byte_start": 20699,
                    "column_end": 60,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\metadata_store.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 665,
                    "line_start": 665,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 25,
                        "text": "    directory_path.join(format!(\"{LOG_PREFIX}_{:016x}\", id))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\metadata_store.rs:671:19\n    |\n671 |             .join(format!(\"{SNAPSHOT_PREFIX}_{:016x}{TMP_SUFFIX}\", id))\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n671 -             .join(format!(\"{SNAPSHOT_PREFIX}_{:016x}{TMP_SUFFIX}\", id))\n671 +             .join(format!(\"{SNAPSHOT_PREFIX}_{id:016x}{TMP_SUFFIX}\"))\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20906,
                        "byte_start": 20906,
                        "column_end": 47,
                        "column_start": 47,
                        "expansion": null,
                        "file_name": "src\\metadata_store.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 671,
                        "line_start": 671,
                        "suggested_replacement": "id",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 47,
                            "text": "            .join(format!(\"{SNAPSHOT_PREFIX}_{:016x}{TMP_SUFFIX}\", id))"
                          }
                        ]
                      },
                      {
                        "byte_end": 20929,
                        "byte_start": 20925,
                        "column_end": 70,
                        "column_start": 66,
                        "expansion": null,
                        "file_name": "src\\metadata_store.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 671,
                        "line_start": 671,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 70,
                            "highlight_start": 66,
                            "text": "            .join(format!(\"{SNAPSHOT_PREFIX}_{:016x}{TMP_SUFFIX}\", id))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 20930,
                    "byte_start": 20878,
                    "column_end": 71,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "src\\metadata_store.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 671,
                    "line_start": 671,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 71,
                        "highlight_start": 19,
                        "text": "            .join(format!(\"{SNAPSHOT_PREFIX}_{:016x}{TMP_SUFFIX}\", id))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\metadata_store.rs:673:29\n    |\n673 |         directory_path.join(format!(\"{SNAPSHOT_PREFIX}_{:016x}\", id))\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n673 -         directory_path.join(format!(\"{SNAPSHOT_PREFIX}_{:016x}\", id))\n673 +         directory_path.join(format!(\"{SNAPSHOT_PREFIX}_{id:016x}\"))\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 21001,
                        "byte_start": 21001,
                        "column_end": 57,
                        "column_start": 57,
                        "expansion": null,
                        "file_name": "src\\metadata_store.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 673,
                        "line_start": 673,
                        "suggested_replacement": "id",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 57,
                            "highlight_start": 57,
                            "text": "        directory_path.join(format!(\"{SNAPSHOT_PREFIX}_{:016x}\", id))"
                          }
                        ]
                      },
                      {
                        "byte_end": 21012,
                        "byte_start": 21008,
                        "column_end": 68,
                        "column_start": 64,
                        "expansion": null,
                        "file_name": "src\\metadata_store.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 673,
                        "line_start": 673,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 68,
                            "highlight_start": 64,
                            "text": "        directory_path.join(format!(\"{SNAPSHOT_PREFIX}_{:016x}\", id))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 21013,
                    "byte_start": 20973,
                    "column_end": 69,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\metadata_store.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 673,
                    "line_start": 673,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 69,
                        "highlight_start": 29,
                        "text": "        directory_path.join(format!(\"{SNAPSHOT_PREFIX}_{:016x}\", id))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: useless conversion to the same type: `std::option::Option<std::boxed::Box<leaf::Leaf<LEAF_FANOUT>>>`\n   --> src\\object_cache.rs:325:23\n    |\n325 |                 leaf: Some(Box::new(Leaf::empty())).into(),\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `Some(Box::new(Leaf::empty()))`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::useless_conversion)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing `.into()`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10848,
                        "byte_start": 10812,
                        "column_end": 59,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "src\\object_cache.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 325,
                        "line_start": 325,
                        "suggested_replacement": "Some(Box::new(Leaf::empty()))",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 23,
                            "text": "                leaf: Some(Box::new(Leaf::empty())).into(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::useless_conversion",
                  "explanation": null
                },
                "level": "warning",
                "message": "useless conversion to the same type: `std::option::Option<std::boxed::Box<leaf::Leaf<LEAF_FANOUT>>>`",
                "spans": [
                  {
                    "byte_end": 10848,
                    "byte_start": 10812,
                    "column_end": 59,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\object_cache.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 325,
                    "line_start": 325,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 23,
                        "text": "                leaf: Some(Box::new(Leaf::empty())).into(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\object_cache.rs:384:13\n    |\n384 | /             assert!(\n385 | |                 !last_dirty.is_final_state(),\n386 | |                 \"tried to install another Dirty marker for a node that is already\n387 | |                 finalized for this flush epoch. \\nflush_epoch: {:?}\\nlast: {:?}\",\n388 | |                 flush_epoch, last_dirty,\n389 | |             );\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12731,
                        "byte_start": 12731,
                        "column_end": 65,
                        "column_start": 65,
                        "expansion": null,
                        "file_name": "src\\object_cache.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 387,
                        "line_start": 387,
                        "suggested_replacement": "flush_epoch",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 65,
                            "highlight_start": 65,
                            "text": "                finalized for this flush epoch. \\nflush_epoch: {:?}\\nlast: {:?}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 12743,
                        "byte_start": 12743,
                        "column_end": 77,
                        "column_start": 77,
                        "expansion": null,
                        "file_name": "src\\object_cache.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 387,
                        "line_start": 387,
                        "suggested_replacement": "last_dirty",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 77,
                            "highlight_start": 77,
                            "text": "                finalized for this flush epoch. \\nflush_epoch: {:?}\\nlast: {:?}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 12776,
                        "byte_start": 12747,
                        "column_end": 28,
                        "column_start": 81,
                        "expansion": null,
                        "file_name": "src\\object_cache.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 388,
                        "line_start": 387,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 82,
                            "highlight_start": 81,
                            "text": "                finalized for this flush epoch. \\nflush_epoch: {:?}\\nlast: {:?}\","
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "                flush_epoch, last_dirty,"
                          }
                        ]
                      },
                      {
                        "byte_end": 12788,
                        "byte_start": 12776,
                        "column_end": 40,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "src\\object_cache.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 388,
                        "line_start": 388,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 28,
                            "text": "                flush_epoch, last_dirty,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 12803,
                    "byte_start": 12530,
                    "column_end": 14,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\object_cache.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 389,
                    "line_start": 384,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 13,
                        "text": "            assert!("
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                !last_dirty.is_final_state(),"
                      },
                      {
                        "highlight_end": 82,
                        "highlight_start": 1,
                        "text": "                \"tried to install another Dirty marker for a node that is already"
                      },
                      {
                        "highlight_end": 82,
                        "highlight_start": 1,
                        "text": "                finalized for this flush epoch. \\nflush_epoch: {:?}\\nlast: {:?}\","
                      },
                      {
                        "highlight_end": 41,
                        "highlight_start": 1,
                        "text": "                flush_epoch, last_dirty,"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            );"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\object_cache.rs:583:21\n    |\n583 |                     assert_eq!(dirty_object_id, node.object_id, \"mismatched node ID for NotYetSerialized with low key {:?}\", low_key);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n583 -                     assert_eq!(dirty_object_id, node.object_id, \"mismatched node ID for NotYetSerialized with low key {:?}\", low_key);\n583 +                     assert_eq!(dirty_object_id, node.object_id, \"mismatched node ID for NotYetSerialized with low key {low_key:?}\");\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20127,
                        "byte_start": 20127,
                        "column_end": 120,
                        "column_start": 120,
                        "expansion": null,
                        "file_name": "src\\object_cache.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 583,
                        "line_start": 583,
                        "suggested_replacement": "low_key",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 120,
                            "highlight_start": 120,
                            "text": "                    assert_eq!(dirty_object_id, node.object_id, \"mismatched node ID for NotYetSerialized with low key {:?}\", low_key);"
                          }
                        ]
                      },
                      {
                        "byte_end": 20140,
                        "byte_start": 20131,
                        "column_end": 133,
                        "column_start": 124,
                        "expansion": null,
                        "file_name": "src\\object_cache.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 583,
                        "line_start": 583,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 133,
                            "highlight_start": 124,
                            "text": "                    assert_eq!(dirty_object_id, node.object_id, \"mismatched node ID for NotYetSerialized with low key {:?}\", low_key);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 20141,
                    "byte_start": 20028,
                    "column_end": 134,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\object_cache.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 583,
                    "line_start": 583,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 134,
                        "highlight_start": 21,
                        "text": "                    assert_eq!(dirty_object_id, node.object_id, \"mismatched node ID for NotYetSerialized with low key {:?}\", low_key);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: useless conversion to the same type: `std::option::Option<std::boxed::Box<leaf::Leaf<LEAF_FANOUT>>>`\n   --> src\\object_cache.rs:902:23\n    |\n902 |                 leaf: None.into(),\n    |                       ^^^^^^^^^^^ help: consider removing `.into()`: `None`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing `.into()`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 32689,
                        "byte_start": 32678,
                        "column_end": 34,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "src\\object_cache.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 902,
                        "line_start": 902,
                        "suggested_replacement": "None",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 34,
                            "highlight_start": 23,
                            "text": "                leaf: None.into(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::useless_conversion",
                  "explanation": null
                },
                "level": "warning",
                "message": "useless conversion to the same type: `std::option::Option<std::boxed::Box<leaf::Leaf<LEAF_FANOUT>>>`",
                "spans": [
                  {
                    "byte_end": 32689,
                    "byte_start": 32678,
                    "column_end": 34,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\object_cache.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 902,
                    "line_start": 902,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 23,
                        "text": "                leaf: None.into(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\object_cache.rs:911:9\n    |\n911 | /         assert!(\n912 | |             tree.insert(low_key.clone(), node).is_none(),\n913 | |             \"inserted multiple objects with low key {:?}\",\n914 | |             low_key\n915 | |         );\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 33039,
                        "byte_start": 33039,
                        "column_end": 54,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\object_cache.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 913,
                        "line_start": 913,
                        "suggested_replacement": "low_key",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 54,
                            "text": "            \"inserted multiple objects with low key {:?}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 33064,
                        "byte_start": 33043,
                        "column_end": 20,
                        "column_start": 58,
                        "expansion": null,
                        "file_name": "src\\object_cache.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 914,
                        "line_start": 913,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 58,
                            "text": "            \"inserted multiple objects with low key {:?}\","
                          },
                          {
                            "highlight_end": 20,
                            "highlight_start": 1,
                            "text": "            low_key"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 33074,
                    "byte_start": 32919,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\object_cache.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 915,
                    "line_start": 911,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 9,
                        "text": "        assert!("
                      },
                      {
                        "highlight_end": 58,
                        "highlight_start": 1,
                        "text": "            tree.insert(low_key.clone(), node).is_none(),"
                      },
                      {
                        "highlight_end": 59,
                        "highlight_start": 1,
                        "text": "            \"inserted multiple objects with low key {:?}\","
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "            low_key"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        );"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: useless conversion to the same type: `std::option::Option<std::boxed::Box<leaf::Leaf<LEAF_FANOUT>>>`\n   --> src\\object_cache.rs:932:27\n    |\n932 |                     leaf: Some(Box::new(Leaf::empty())).into(),\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `Some(Box::new(Leaf::empty()))`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing `.into()`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 33679,
                        "byte_start": 33643,
                        "column_end": 63,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\object_cache.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 932,
                        "line_start": 932,
                        "suggested_replacement": "Some(Box::new(Leaf::empty()))",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 63,
                            "highlight_start": 27,
                            "text": "                    leaf: Some(Box::new(Leaf::empty())).into(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::useless_conversion",
                  "explanation": null
                },
                "level": "warning",
                "message": "useless conversion to the same type: `std::option::Option<std::boxed::Box<leaf::Leaf<LEAF_FANOUT>>>`",
                "spans": [
                  {
                    "byte_end": 33679,
                    "byte_start": 33643,
                    "column_end": 63,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\object_cache.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 932,
                    "line_start": 932,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 63,
                        "highlight_start": 27,
                        "text": "                    leaf: Some(Box::new(Leaf::empty())).into(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\object_cache.rs:943:13\n    |\n943 | /             assert!(\n944 | |                 tree.contains_key(&InlineArray::MIN),\n945 | |                 \"tree {:?} had no minimum node\",\n946 | |                 collection_id\n947 | |             );\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 34082,
                        "byte_start": 34082,
                        "column_end": 24,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\object_cache.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 945,
                        "line_start": 945,
                        "suggested_replacement": "collection_id",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 24,
                            "text": "                \"tree {:?} had no minimum node\","
                          }
                        ]
                      },
                      {
                        "byte_end": 34137,
                        "byte_start": 34106,
                        "column_end": 30,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\object_cache.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 946,
                        "line_start": 945,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 48,
                            "text": "                \"tree {:?} had no minimum node\","
                          },
                          {
                            "highlight_end": 30,
                            "highlight_start": 1,
                            "text": "                collection_id"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 34151,
                    "byte_start": 33996,
                    "column_end": 14,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\object_cache.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 947,
                    "line_start": 943,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 13,
                        "text": "            assert!("
                      },
                      {
                        "highlight_end": 54,
                        "highlight_start": 1,
                        "text": "                tree.contains_key(&InlineArray::MIN),"
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "                \"tree {:?} had no minimum node\","
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                collection_id"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            );"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\object_cache.rs:952:9\n    |\n952 | /         assert!(\n953 | |             tree.contains_key(&InlineArray::MIN),\n954 | |             \"tree {:?} had no minimum node\",\n955 | |             cid\n956 | |         );\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 34288,
                        "byte_start": 34288,
                        "column_end": 20,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "src\\object_cache.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 954,
                        "line_start": 954,
                        "suggested_replacement": "cid",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 20,
                            "highlight_start": 20,
                            "text": "            \"tree {:?} had no minimum node\","
                          }
                        ]
                      },
                      {
                        "byte_end": 34329,
                        "byte_start": 34312,
                        "column_end": 16,
                        "column_start": 44,
                        "expansion": null,
                        "file_name": "src\\object_cache.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 955,
                        "line_start": 954,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 44,
                            "text": "            \"tree {:?} had no minimum node\","
                          },
                          {
                            "highlight_end": 16,
                            "highlight_start": 1,
                            "text": "            cid"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 34339,
                    "byte_start": 34210,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\object_cache.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 956,
                    "line_start": 952,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 9,
                        "text": "        assert!("
                      },
                      {
                        "highlight_end": 50,
                        "highlight_start": 1,
                        "text": "            tree.contains_key(&InlineArray::MIN),"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "            \"tree {:?} had no minimum node\","
                      },
                      {
                        "highlight_end": 16,
                        "highlight_start": 1,
                        "text": "            cid"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        );"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: useless conversion to the same type: `usize`\n   --> src\\object_location_mapper.rs:273:45\n    |\n273 |             let slab = &self.slab_tenancies[usize::from(slab_id)];\n    |                                             ^^^^^^^^^^^^^^^^^^^^ help: consider removing `usize::from()`: `slab_id`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing `usize::from()`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8177,
                        "byte_start": 8157,
                        "column_end": 65,
                        "column_start": 45,
                        "expansion": null,
                        "file_name": "src\\object_location_mapper.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 273,
                        "line_start": 273,
                        "suggested_replacement": "slab_id",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 65,
                            "highlight_start": 45,
                            "text": "            let slab = &self.slab_tenancies[usize::from(slab_id)];"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::useless_conversion",
                  "explanation": null
                },
                "level": "warning",
                "message": "useless conversion to the same type: `usize`",
                "spans": [
                  {
                    "byte_end": 8177,
                    "byte_start": 8157,
                    "column_end": 65,
                    "column_start": 45,
                    "expansion": null,
                    "file_name": "src\\object_location_mapper.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 273,
                    "line_start": 273,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 65,
                        "highlight_start": 45,
                        "text": "            let slab = &self.slab_tenancies[usize::from(slab_id)];"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\tree.rs:48:48\n   |\n48 |         let mut debug_struct = w.debug_struct(&format!(\"Db<{}>\", LEAF_FANOUT));\n   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n48 -         let mut debug_struct = w.debug_struct(&format!(\"Db<{}>\", LEAF_FANOUT));\n48 +         let mut debug_struct = w.debug_struct(&format!(\"Db<{LEAF_FANOUT}>\"));\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1371,
                        "byte_start": 1371,
                        "column_end": 61,
                        "column_start": 61,
                        "expansion": null,
                        "file_name": "src\\tree.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 48,
                        "line_start": 48,
                        "suggested_replacement": "LEAF_FANOUT",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 61,
                            "highlight_start": 61,
                            "text": "        let mut debug_struct = w.debug_struct(&format!(\"Db<{}>\", LEAF_FANOUT));"
                          }
                        ]
                      },
                      {
                        "byte_end": 1387,
                        "byte_start": 1374,
                        "column_end": 77,
                        "column_start": 64,
                        "expansion": null,
                        "file_name": "src\\tree.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 48,
                        "line_start": 48,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 77,
                            "highlight_start": 64,
                            "text": "        let mut debug_struct = w.debug_struct(&format!(\"Db<{}>\", LEAF_FANOUT));"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1388,
                    "byte_start": 1358,
                    "column_end": 78,
                    "column_start": 48,
                    "expansion": null,
                    "file_name": "src\\tree.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 48,
                    "line_start": 48,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 78,
                        "highlight_start": 48,
                        "text": "        let mut debug_struct = w.debug_struct(&format!(\"Db<{}>\", LEAF_FANOUT));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\tree.rs:577:13\n    |\n577 | /             assert!(\n578 | |                 &**hi > key,\n579 | |                 \"while retrieving the leaf for key {:?} \\\n580 | |                 we pulled a leaf with hi key of {:?}\",\n581 | |                 key,\n582 | |                 hi\n583 | |             );\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 19595,
                        "byte_start": 19595,
                        "column_end": 53,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "src\\tree.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 579,
                        "line_start": 579,
                        "suggested_replacement": "key",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 53,
                            "text": "                \"while retrieving the leaf for key {:?} \\"
                          }
                        ]
                      },
                      {
                        "byte_end": 19650,
                        "byte_start": 19650,
                        "column_end": 50,
                        "column_start": 50,
                        "expansion": null,
                        "file_name": "src\\tree.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 580,
                        "line_start": 580,
                        "suggested_replacement": "hi",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 50,
                            "highlight_start": 50,
                            "text": "                we pulled a leaf with hi key of {:?}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 19675,
                        "byte_start": 19654,
                        "column_end": 20,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\tree.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 581,
                        "line_start": 580,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 55,
                            "highlight_start": 54,
                            "text": "                we pulled a leaf with hi key of {:?}\","
                          },
                          {
                            "highlight_end": 20,
                            "highlight_start": 1,
                            "text": "                key,"
                          }
                        ]
                      },
                      {
                        "byte_end": 19695,
                        "byte_start": 19675,
                        "column_end": 19,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "src\\tree.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 582,
                        "line_start": 581,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 21,
                            "highlight_start": 20,
                            "text": "                key,"
                          },
                          {
                            "highlight_end": 19,
                            "highlight_start": 1,
                            "text": "                hi"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 19709,
                    "byte_start": 19505,
                    "column_end": 14,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\tree.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 583,
                    "line_start": 577,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 13,
                        "text": "            assert!("
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "                &**hi > key,"
                      },
                      {
                        "highlight_end": 58,
                        "highlight_start": 1,
                        "text": "                \"while retrieving the leaf for key {:?} \\"
                      },
                      {
                        "highlight_end": 55,
                        "highlight_start": 1,
                        "text": "                we pulled a leaf with hi key of {:?}\","
                      },
                      {
                        "highlight_end": 21,
                        "highlight_start": 1,
                        "text": "                key,"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                hi"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            );"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `if` statement can be collapsed\n   --> src\\tree.rs:891:13\n    |\n891 | /             if cfg!(not(feature = \"monotonic-behavior\")) {\n892 | |                 if leaf.data.is_empty()\n893 | |                     && leaf_guard.low_key != InlineArray::MIN\n...   |\n898 | |             }\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n891 ~             if cfg!(not(feature = \"monotonic-behavior\"))\n892 ~                 && leaf.data.is_empty()\n893 |                     && leaf_guard.low_key != InlineArray::MIN\n...\n896 |                     self.merge_leaf_into_left_sibling(leaf_guard)?;\n897 ~                 }\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::collapsible_if)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "collapse nested if block",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 29995,
                        "byte_start": 29993,
                        "column_end": 59,
                        "column_start": 57,
                        "expansion": null,
                        "file_name": "src\\tree.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 891,
                        "line_start": 891,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 57,
                            "text": "            if cfg!(not(feature = \"monotonic-behavior\")) {"
                          }
                        ]
                      },
                      {
                        "byte_end": 30290,
                        "byte_start": 30276,
                        "column_end": 14,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\tree.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 898,
                        "line_start": 897,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 18,
                            "highlight_start": 18,
                            "text": "                }"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "            }"
                          }
                        ]
                      },
                      {
                        "byte_end": 30014,
                        "byte_start": 30012,
                        "column_end": 19,
                        "column_start": 17,
                        "expansion": null,
                        "file_name": "src\\tree.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 892,
                        "line_start": 892,
                        "suggested_replacement": "&&",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 19,
                            "highlight_start": 17,
                            "text": "                if leaf.data.is_empty()"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::collapsible_if",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `if` statement can be collapsed",
                "spans": [
                  {
                    "byte_end": 30290,
                    "byte_start": 29949,
                    "column_end": 14,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\tree.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 898,
                    "line_start": 891,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 13,
                        "text": "            if cfg!(not(feature = \"monotonic-behavior\")) {"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "                if leaf.data.is_empty()"
                      },
                      {
                        "highlight_end": 62,
                        "highlight_start": 1,
                        "text": "                    && leaf_guard.low_key != InlineArray::MIN"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                {"
                      },
                      {
                        "highlight_end": 75,
                        "highlight_start": 1,
                        "text": "                    assert_ne!(leaf_guard.node.low_key, InlineArray::MIN);"
                      },
                      {
                        "highlight_end": 68,
                        "highlight_start": 1,
                        "text": "                    self.merge_leaf_into_left_sibling(leaf_guard)?;"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                }"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `if` statement can be collapsed\n    --> src\\tree.rs:1076:9\n     |\n1076 | /         if cfg!(not(feature = \"monotonic-behavior\")) {\n1077 | |             if leaf.data.is_empty() && leaf_guard.low_key != InlineArray::MIN {\n1078 | |                 assert!(!split_happened);\n1079 | |                 self.merge_leaf_into_left_sibling(leaf_guard)?;\n1080 | |             }\n1081 | |         }\n     | |_________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n     |\n1076 ~         if cfg!(not(feature = \"monotonic-behavior\"))\n1077 ~             && leaf.data.is_empty() && leaf_guard.low_key != InlineArray::MIN {\n1078 |                 assert!(!split_happened);\n1079 |                 self.merge_leaf_into_left_sibling(leaf_guard)?;\n1080 ~             }\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "collapse nested if block",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 36666,
                        "byte_start": 36664,
                        "column_end": 55,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "src\\tree.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1076,
                        "line_start": 1076,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 55,
                            "highlight_start": 53,
                            "text": "        if cfg!(not(feature = \"monotonic-behavior\")) {"
                          }
                        ]
                      },
                      {
                        "byte_end": 36876,
                        "byte_start": 36866,
                        "column_end": 10,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\tree.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1081,
                        "line_start": 1080,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 14,
                            "highlight_start": 14,
                            "text": "            }"
                          },
                          {
                            "highlight_end": 10,
                            "highlight_start": 1,
                            "text": "        }"
                          }
                        ]
                      },
                      {
                        "byte_end": 36681,
                        "byte_start": 36679,
                        "column_end": 15,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\tree.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1077,
                        "line_start": 1077,
                        "suggested_replacement": "&&",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 15,
                            "highlight_start": 13,
                            "text": "            if leaf.data.is_empty() && leaf_guard.low_key != InlineArray::MIN {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::collapsible_if",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `if` statement can be collapsed",
                "spans": [
                  {
                    "byte_end": 36876,
                    "byte_start": 36620,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\tree.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1081,
                    "line_start": 1076,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 55,
                        "highlight_start": 9,
                        "text": "        if cfg!(not(feature = \"monotonic-behavior\")) {"
                      },
                      {
                        "highlight_end": 80,
                        "highlight_start": 1,
                        "text": "            if leaf.data.is_empty() && leaf_guard.low_key != InlineArray::MIN {"
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                assert!(!split_happened);"
                      },
                      {
                        "highlight_end": 64,
                        "highlight_start": 1,
                        "text": "                self.merge_leaf_into_left_sibling(leaf_guard)?;"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            }"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the following explicit lifetimes could be elided: 'a\n    --> src\\tree.rs:1674:24\n     |\n1674 |     pub fn scan_prefix<'a, P>(&'a self, prefix: P) -> Iter<LEAF_FANOUT>\n     |                        ^^      ^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n     = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n     |\n1674 -     pub fn scan_prefix<'a, P>(&'a self, prefix: P) -> Iter<LEAF_FANOUT>\n1674 +     pub fn scan_prefix<P>(&self, prefix: P) -> Iter<LEAF_FANOUT>\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_lifetimes)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 56982,
                        "byte_start": 56978,
                        "column_end": 28,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\tree.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1674,
                        "line_start": 1674,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 24,
                            "text": "    pub fn scan_prefix<'a, P>(&'a self, prefix: P) -> Iter<LEAF_FANOUT>"
                          }
                        ]
                      },
                      {
                        "byte_end": 56989,
                        "byte_start": 56986,
                        "column_end": 35,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\tree.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1674,
                        "line_start": 1674,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 32,
                            "text": "    pub fn scan_prefix<'a, P>(&'a self, prefix: P) -> Iter<LEAF_FANOUT>"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 56980,
                    "byte_start": 56978,
                    "column_end": 26,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\tree.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1674,
                    "line_start": 1674,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 24,
                        "text": "    pub fn scan_prefix<'a, P>(&'a self, prefix: P) -> Iter<LEAF_FANOUT>"
                      }
                    ]
                  },
                  {
                    "byte_end": 56988,
                    "byte_start": 56986,
                    "column_end": 34,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\tree.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1674,
                    "line_start": 1674,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 32,
                        "text": "    pub fn scan_prefix<'a, P>(&'a self, prefix: P) -> Iter<LEAF_FANOUT>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: struct `Tree` has a public `len` method, but the `is_empty` method has an unexpected signature\n    --> src\\tree.rs:1941:5\n     |\n1941 |     pub fn len(&self) -> usize {\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\nnote: `is_empty` defined here\n    --> src\\tree.rs:1949:5\n     |\n1949 |     pub fn is_empty(&self) -> io::Result<bool> {\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     = note: expected signature: `(&self) -> bool`\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_without_is_empty\n     = note: `#[warn(clippy::len_without_is_empty)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`is_empty` defined here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 66067,
                        "byte_start": 66025,
                        "column_end": 47,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\tree.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1949,
                        "line_start": 1949,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 5,
                            "text": "    pub fn is_empty(&self) -> io::Result<bool> {"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "expected signature: `(&self) -> bool`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_without_is_empty",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::len_without_is_empty)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::len_without_is_empty",
                  "explanation": null
                },
                "level": "warning",
                "message": "struct `Tree` has a public `len` method, but the `is_empty` method has an unexpected signature",
                "spans": [
                  {
                    "byte_end": 65799,
                    "byte_start": 65773,
                    "column_end": 31,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\tree.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1941,
                    "line_start": 1941,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 5,
                        "text": "    pub fn len(&self) -> usize {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa3go9fn_/sled-1.0.0-alpha.124#sled@1.0.0-alpha.124",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sled",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa3go9fn_\\sled-1.0.0-alpha.124\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: useless conversion to the same type: `std::option::Option<std::boxed::Box<leaf::Leaf<LEAF_FANOUT>>>`\n    --> src\\tree.rs:2313:27\n     |\n2313 |                     leaf: Some(Box::new(rhs)).into(),\n     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `Some(Box::new(rhs))`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing `.into()`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 77763,
                        "byte_start": 77737,
                        "column_end": 53,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\tree.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2313,
                        "line_start": 2313,
                        "suggested_replacement": "Some(Box::new(rhs))",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 27,
                            "text": "                    leaf: Some(Box::new(rhs)).into(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::useless_conversion",
                  "explanation": null
                },
                "level": "warning",
                "message": "useless conversion to the same type: `std::option::Option<std::boxed::Box<leaf::Leaf<LEAF_FANOUT>>>`",
                "spans": [
                  {
                    "byte_end": 77763,
                    "byte_start": 77737,
                    "column_end": 53,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\tree.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 2313,
                    "line_start": 2313,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 53,
                        "highlight_start": 27,
                        "text": "                    leaf: Some(Box::new(rhs)).into(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "build-finished",
              "success": false
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 94
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": true,
              "count": 2,
              "list": [
                {
                  "advisory": {
                    "id": "RUSTSEC-2025-0024",
                    "package": "crossbeam-channel",
                    "title": "crossbeam-channel: double free on Drop",
                    "description": "The internal `Channel` type's `Drop` method has a race\nwhich could, in some circumstances, lead to a double-free.\nThis could result in memory corruption.\n\nQuoting from the\n[upstream description in merge request \\#1187](https://github.com/crossbeam-rs/crossbeam/pull/1187#issue-2980761131):\n\n> The problem lies in the fact that `dicard_all_messages` contained two paths that could lead to `head.block` being read but only one of them would swap the value. This meant that `dicard_all_messages` could end up observing a non-null block pointer (and therefore attempting to free it) without setting `head.block` to null. This would then lead to `Channel::drop` making a second attempt at dropping the same pointer.\n\nThe bug was introduced while fixing a memory leak, in\nupstream [MR \\#1084](https://github.com/crossbeam-rs/crossbeam/pull/1084),\nfirst published in 0.5.12.\n\nThe fix is in\nupstream [MR \\#1187](https://github.com/crossbeam-rs/crossbeam/pull/1187)\nand has been published in 0.5.15",
                    "date": "2025-04-08",
                    "aliases": [
                      "TROVE-2025-013"
                    ],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "memory-corruption"
                    ],
                    "keywords": [
                      "race"
                    ],
                    "cvss": null,
                    "informational": null,
                    "references": [],
                    "source": null,
                    "url": "https://github.com/crossbeam-rs/crossbeam/pull/1187",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=0.5.15"
                    ],
                    "unaffected": [
                      "<=0.5.11"
                    ]
                  },
                  "affected": null,
                  "package": {
                    "name": "crossbeam-channel",
                    "version": "0.5.13",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "33480d6946193aa8033910124896ca395333cae7e2d1113d1fef6c3272217df2",
                    "dependencies": [
                      {
                        "name": "crossbeam-utils",
                        "version": "0.8.20",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  }
                },
                {
                  "advisory": {
                    "id": "RUSTSEC-2023-0018",
                    "package": "remove_dir_all",
                    "title": "Race Condition Enabling Link Following and Time-of-check Time-of-use (TOCTOU)",
                    "description": "The remove_dir_all crate is a Rust library that offers additional features over the Rust\nstandard library fs::remove_dir_all function.\n\nIt was possible to trick a privileged process doing a recursive delete in an\nattacker controlled directory into deleting privileged files, on all operating systems.\n\nFor instance, consider deleting a tree called 'etc' in a parent directory\ncalled 'p'. Between calling `remove_dir_all(\"a\")` and remove_dir_all(\"a\")\nactually starting its work, the attacker can move 'p' to 'p-prime', and\nreplace 'p' with a symlink to '/'. Then the privileged process deletes 'p/etc'\nwhich is actually /etc, and now your system is broken. There are some\nmitigations for this exact scenario, such as CWD relative file lookup, but\nthey are not guaranteed - any code using absolute paths will not have that\nprotection in place.\n\nThe same attack could be performed at any point in the directory tree being\ndeleted: if 'a' contains a child directory called 'etc', attacking the\ndeletion by replacing 'a' with a link is possible.\n\nThe new code in this release mitigates the attack within the directory tree\nbeing deleted by using file-handle relative operations: to open 'a/etc', the\npath 'etc' relative to 'a' is opened, where 'a' is represented by a file\ndescriptor (Unix) or handle (Windows). With the exception of the entry points\ninto the directory deletion logic, this is robust against manipulation of the\ndirectory hierarchy, and remove_dir_all will only delete files and directories\ncontained in the tree it is deleting.\n\nThe entry path however is a challenge - as described above, there are some\npotential mitigations, but since using them must be done by the calling code,\nit is hard to be confident about the security properties of the path based\ninterface.\n\nThe new extension trait `RemoveDir` provides an interface where it is much\nharder to get it wrong.\n\n`somedir.remove_dir_contents(\"name-of-child\")`.\n\nCallers can then make their own security evaluation about how to securely get\na directory handle. That is still not particularly obvious, and we're going to\nfollow up with a helper of some sort (probably in the `fs_at` crate). Once\nthat is available, the path based entry points will get deprecated.\n\nIn the interim, processes that might run with elevated privileges should\nfigure out how to securely identify the directory they are going to delete, to\navoid the initial race. Pragmatically, other processes should be fine with the\npath based entry points : this is the same interface `std::fs::remove_dir_all`\noffers, and an unprivileged process running in an attacker controlled\ndirectory can't do anything that the attacker can't already do.",
                    "date": "2023-02-24",
                    "aliases": [
                      "GHSA-mc8h-8q98-g5hr"
                    ],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [
                      "TOCTOU"
                    ],
                    "cvss": null,
                    "informational": null,
                    "references": [
                      "https://github.com/advisories/GHSA-mc8h-8q98-g5hr"
                    ],
                    "source": null,
                    "url": "https://github.com/XAMPPRocky/remove_dir_all/commit/7247a8b6ee59fc99bbb69ca6b3ca4bfd8c809ead",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=0.8.0"
                    ],
                    "unaffected": []
                  },
                  "affected": {
                    "arch": [],
                    "os": [],
                    "functions": {
                      "remove_dir_all::ensure_empty_dir": [
                        "<0.8.0"
                      ],
                      "remove_dir_all::remove_dir_all": [
                        "<0.8.0"
                      ],
                      "remove_dir_all::remove_dir_contents": [
                        "<0.8.0"
                      ]
                    }
                  },
                  "package": {
                    "name": "remove_dir_all",
                    "version": "0.5.3",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "3acd125665422973a33ac9d3dd2df85edad0f4ae9b00dafb1a05e43a9f5ef8e7",
                    "dependencies": [
                      {
                        "name": "winapi",
                        "version": "0.3.9",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  }
                }
              ]
            },
            "warnings": {
              "unmaintained": [
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "tempdir",
                    "version": "0.3.7",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "15f2b5fb00ccdf689e0149d1b1b3c03fead81c2b37735d812fa8bddbbf41b6d8",
                    "dependencies": [
                      {
                        "name": "rand",
                        "version": "0.4.6",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "remove_dir_all",
                        "version": "0.5.3",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2018-0017",
                    "package": "tempdir",
                    "title": "`tempdir` crate has been deprecated; use `tempfile` instead",
                    "description": "The [`tempdir`](https://crates.io/crates/tempdir) crate has been deprecated\nand the functionality is merged into [`tempfile`](https://crates.io/crates/tempfile).",
                    "date": "2018-02-13",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/rust-lang-deprecated/tempdir/pull/46",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                }
              ],
              "yanked": [
                {
                  "kind": "yanked",
                  "package": {
                    "name": "crossbeam-channel",
                    "version": "0.5.13",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "33480d6946193aa8033910124896ca395333cae7e2d1113d1fef6c3272217df2",
                    "dependencies": [
                      {
                        "name": "crossbeam-utils",
                        "version": "0.8.20",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": null,
                  "affected": null,
                  "versions": null
                }
              ]
            }
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "sled",
          "version": "1.0.0-alpha.124",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/sled/latest/sled/all.html \"show sidebar\")\n# Crate sledCopy item path\n[Settings](https://docs.rs/sled/latest/settings.html)\n[Help](https://docs.rs/sled/latest/help.html)\nSummary[Source](https://docs.rs/sled/latest/src/sled/lib.rs.html#1-527)\nExpand description\n`sled` is a high-performance embedded database with an API that is similar to a `BTreeMap<[u8], [u8]>`, but with several additional capabilities for assisting creators of stateful systems.\nIt is fully thread-safe, and all operations are atomic. Multiple `Tree`s with isolated keyspaces are supported with the [`Db::open_tree`](https://docs.rs/sled/latest/sled/struct.Db.html#method.open_tree) method.\nACID transactions involving reads and writes to multiple items are supported with the [`Tree::transaction`](https://docs.rs/sled/latest/sled/struct.Tree.html#method.transaction) method. Transactions may also operate over multiple `Tree`s (see [`Tree::transaction`](https://docs.rs/sled/latest/sled/struct.Tree.html#method.transaction) docs for more info).\nUsers may also subscribe to updates on individual `Tree`s by using the [`Tree::watch_prefix`](https://docs.rs/sled/latest/sled/struct.Tree.html#method.watch_prefix) method, which returns a blocking `Iterator` over updates to keys that begin with the provided prefix. You may supply an empty prefix to subscribe to everything.\n[Merge operators](https://github.com/spacejam/sled/wiki/merge-operators) (aka read-modify-write operators) are supported. A merge operator is a function that specifies how new data can be merged into an existing value without requiring both a read and a write. Using the [`Tree::merge`](https://docs.rs/sled/latest/sled/struct.Tree.html#method.merge) method, you may \u201cpush\u201d data to a `Tree` value and have the provided merge operator combine it with the existing value, if there was one. They are set on a per-`Tree` basis, and essentially allow any sort of data structure to be built using merges as an atomic high-level operation.\n`sled` is built by experienced database engineers who think users should spend less time tuning and working against high-friction APIs. Expect significant ergonomic and performance improvements over time. Most surprises are bugs, so please let us know if something is high friction.\n## [\u00a7](https://docs.rs/sled/latest/sled/#examples)Examples\n```\nlet db: sled::Db = sled::open(\"my_db\").unwrap();\n// insert and get\ndb.insert(b\"yo!\", b\"v1\");\nassert_eq!(&db.get(b\"yo!\").unwrap().unwrap(), b\"v1\");\n// Atomic compare-and-swap.\ndb.compare_and_swap(\n  b\"yo!\",   // key\n  Some(b\"v1\"), // old value, None for not present\n  Some(b\"v2\"), // new value, None for delete\n)\n.unwrap();\n// Iterates over key-value pairs, starting at the given key.\nlet scan_key: &[u8] = b\"a non-present key before yo!\";\nlet mut iter = db.range(scan_key..);\nassert_eq!(&iter.next().unwrap().unwrap().0, b\"yo!\");\nassert_eq!(iter.next(), None);\ndb.remove(b\"yo!\");\nassert_eq!(db.get(b\"yo!\"), Ok(None));\nlet other_tree: sled::Tree = db.open_tree(b\"cool db facts\").unwrap();\nother_tree.insert(\n  b\"k1\",\n  &b\"a Db acts like a Tree due to implementing Deref<Target = Tree>\"[..]\n).unwrap();\n```\n\n## Re-exports[\u00a7](https://docs.rs/sled/latest/sled/#reexports)\n\n`pub use self::transaction::Transactional[](https://docs.rs/sled/latest/sled/transaction/trait.Transactional.html \"trait sled::transaction::Transactional\");`\n\n## Modules[\u00a7](https://docs.rs/sled/latest/sled/#modules)\n\n[doc](https://docs.rs/sled/latest/sled/doc/index.html \"mod sled::doc\")\n    what is sled?\n\n[transaction](https://docs.rs/sled/latest/sled/transaction/index.html \"mod sled::transaction\")\n    Fully serializable (ACID) multi-`Tree` transactions\n## Structs[\u00a7](https://docs.rs/sled/latest/sled/#structs)\n\n[Batch](https://docs.rs/sled/latest/sled/struct.Batch.html \"struct sled::Batch\")\n    A batch of updates that will be applied atomically to the Tree.\n\n[CompareAndSwapError](https://docs.rs/sled/latest/sled/struct.CompareAndSwapError.html \"struct sled::CompareAndSwapError\")\n    Compare and swap error.\n\n[Config](https://docs.rs/sled/latest/sled/struct.Config.html \"struct sled::Config\")\n    Top-level configuration for the system.\n\n[Db](https://docs.rs/sled/latest/sled/struct.Db.html \"struct sled::Db\")\n    The `sled` embedded database! Implements `Deref<Target = sled::Tree>` to refer to a default keyspace / namespace / bucket.\n\n[IVec](https://docs.rs/sled/latest/sled/struct.IVec.html \"struct sled::IVec\")\n    A buffer that may either be inline or remote and protected by an Arc\n\n[Iter](https://docs.rs/sled/latest/sled/struct.Iter.html \"struct sled::Iter\")\n    An iterator over keys and values in a `Tree`.\n\n[Subscriber](https://docs.rs/sled/latest/sled/struct.Subscriber.html \"struct sled::Subscriber\")\n    A subscriber listening on a specified prefix\n\n[Tree](https://docs.rs/sled/latest/sled/struct.Tree.html \"struct sled::Tree\")\n    A flash-sympathetic persistent lock-free B+ tree.\n## Enums[\u00a7](https://docs.rs/sled/latest/sled/#enums)\n\n[Error](https://docs.rs/sled/latest/sled/enum.Error.html \"enum sled::Error\")\n    An Error type encapsulating various issues that may come up in the operation of a `Db`.\n\n[Event](https://docs.rs/sled/latest/sled/enum.Event.html \"enum sled::Event\")\n    An event that happened to a key that a subscriber is interested in.\n\n[Mode](https://docs.rs/sled/latest/sled/enum.Mode.html \"enum sled::Mode\")\n    The high-level database mode, according to the trade-offs of the RUM conjecture.\n## Traits[\u00a7](https://docs.rs/sled/latest/sled/#traits)\n\n[MergeOperator](https://docs.rs/sled/latest/sled/trait.MergeOperator.html \"trait sled::MergeOperator\")\n    A function that may be configured on a particular shared `Tree` that will be applied as a kind of read-modify-write operator to any values that are written using the `Tree::merge` method.\n## Functions[\u00a7](https://docs.rs/sled/latest/sled/#functions)\n\n[open](https://docs.rs/sled/latest/sled/fn.open.html \"fn sled::open\")\n    Opens a `Db` with a default configuration at the specified path. This will create a new storage directory at the specified path if it does not already exist. You can use the `Db::was_recovered` method to determine if your database was recovered from a previous instance. You can use `Config::create_new` if you want to increase the chances that the database will be freshly created.\n## Type Aliases[\u00a7](https://docs.rs/sled/latest/sled/#types)\n\n[Result](https://docs.rs/sled/latest/sled/type.Result.html \"type sled::Result\")\n    The top-level result type for dealing with fallible operations. The errors tend to be fail-stop, and nested results are used in cases where the outer fail-stop error can have try `?` used on it, exposing the inner operation that is expected to fail under normal operation. The philosophy behind this is detailed [on the sled blog](https://sled.rs/errors).\n",
            "markdown_with_citations": "[](https://docs.rs/sled/latest/sled/all.html \"show sidebar\")\n# Crate sledCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n`sled` is a high-performance embedded database with an API that is similar to a `BTreeMap<[u8], [u8]>`, but with several additional capabilities for assisting creators of stateful systems.\nIt is fully thread-safe, and all operations are atomic. Multiple `Tree`s with isolated keyspaces are supported with the `Db::open_tree`\u27e84\u27e9 method.\nACID transactions involving reads and writes to multiple items are supported with the `Tree::transaction`\u27e85\u27e9 method. Transactions may also operate over multiple `Tree`s (see `Tree::transaction`\u27e85\u27e9 docs for more info).\nUsers may also subscribe to updates on individual `Tree`s by using the `Tree::watch_prefix`\u27e86\u27e9 method, which returns a blocking `Iterator` over updates to keys that begin with the provided prefix. You may supply an empty prefix to subscribe to everything.\nMerge operators\u27e87\u27e9 (aka read-modify-write operators) are supported. A merge operator is a function that specifies how new data can be merged into an existing value without requiring both a read and a write. Using the `Tree::merge`\u27e88\u27e9 method, you may \u201cpush\u201d data to a `Tree` value and have the provided merge operator combine it with the existing value, if there was one. They are set on a per-`Tree` basis, and essentially allow any sort of data structure to be built using merges as an atomic high-level operation.\n`sled` is built by experienced database engineers who think users should spend less time tuning and working against high-friction APIs. Expect significant ergonomic and performance improvements over time. Most surprises are bugs, so please let us know if something is high friction.\n## \u00a7\u27e89\u27e9Examples\n```\nlet db: sled::Db = sled::open(\"my_db\").unwrap();\n// insert and get\ndb.insert(b\"yo!\", b\"v1\");\nassert_eq!(&db.get(b\"yo!\").unwrap().unwrap(), b\"v1\");\n// Atomic compare-and-swap.\ndb.compare_and_swap(\n  b\"yo!\",   // key\n  Some(b\"v1\"), // old value, None for not present\n  Some(b\"v2\"), // new value, None for delete\n)\n.unwrap();\n// Iterates over key-value pairs, starting at the given key.\nlet scan_key: &[u8] = b\"a non-present key before yo!\";\nlet mut iter = db.range(scan_key..);\nassert_eq!(&iter.next().unwrap().unwrap().0, b\"yo!\");\nassert_eq!(iter.next(), None);\ndb.remove(b\"yo!\");\nassert_eq!(db.get(b\"yo!\"), Ok(None));\nlet other_tree: sled::Tree = db.open_tree(b\"cool db facts\").unwrap();\nother_tree.insert(\n  b\"k1\",\n  &b\"a Db acts like a Tree due to implementing Deref<Target = Tree>\"[..]\n).unwrap();\n```\n\n## Re-exports\u00a7\u27e810\u27e9\n\n`pub use self::transaction::Transactional[](https://docs.rs/sled/latest/sled/transaction/trait.Transactional.html \"trait sled::transaction::Transactional\");`\n\n## Modules\u00a7\u27e811\u27e9\n\ndoc\u27e812\u27e9\n    what is sled?\n\ntransaction\u27e813\u27e9\n    Fully serializable (ACID) multi-`Tree` transactions\n## Structs\u00a7\u27e814\u27e9\n\nBatch\u27e815\u27e9\n    A batch of updates that will be applied atomically to the Tree.\n\nCompareAndSwapError\u27e816\u27e9\n    Compare and swap error.\n\nConfig\u27e817\u27e9\n    Top-level configuration for the system.\n\nDb\u27e818\u27e9\n    The `sled` embedded database! Implements `Deref<Target = sled::Tree>` to refer to a default keyspace / namespace / bucket.\n\nIVec\u27e819\u27e9\n    A buffer that may either be inline or remote and protected by an Arc\n\nIter\u27e820\u27e9\n    An iterator over keys and values in a `Tree`.\n\nSubscriber\u27e821\u27e9\n    A subscriber listening on a specified prefix\n\nTree\u27e822\u27e9\n    A flash-sympathetic persistent lock-free B+ tree.\n## Enums\u00a7\u27e823\u27e9\n\nError\u27e824\u27e9\n    An Error type encapsulating various issues that may come up in the operation of a `Db`.\n\nEvent\u27e825\u27e9\n    An event that happened to a key that a subscriber is interested in.\n\nMode\u27e826\u27e9\n    The high-level database mode, according to the trade-offs of the RUM conjecture.\n## Traits\u00a7\u27e827\u27e9\n\nMergeOperator\u27e828\u27e9\n    A function that may be configured on a particular shared `Tree` that will be applied as a kind of read-modify-write operator to any values that are written using the `Tree::merge` method.\n## Functions\u00a7\u27e829\u27e9\n\nopen\u27e830\u27e9\n    Opens a `Db` with a default configuration at the specified path. This will create a new storage directory at the specified path if it does not already exist. You can use the `Db::was_recovered` method to determine if your database was recovered from a previous instance. You can use `Config::create_new` if you want to increase the chances that the database will be freshly created.\n## Type Aliases\u00a7\u27e831\u27e9\n\nResult\u27e832\u27e9\n    The top-level result type for dealing with fallible operations. The errors tend to be fail-stop, and nested results are used in cases where the outer fail-stop error can have try `?` used on it, exposing the inner operation that is expected to fail under normal operation. The philosophy behind this is detailed on the sled blog\u27e833\u27e9.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/sled/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/sled/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/sled/latest/src/sled/lib.rs.html#1-527: Source\n\u27e84\u27e9 https://docs.rs/sled/latest/sled/struct.Db.html#method.open_tree: `Db::open_tree`\n\u27e85\u27e9 https://docs.rs/sled/latest/sled/struct.Tree.html#method.transaction: `Tree::transaction`\n\u27e86\u27e9 https://docs.rs/sled/latest/sled/struct.Tree.html#method.watch_prefix: `Tree::watch_prefix`\n\u27e87\u27e9 https://github.com/spacejam/sled/wiki/merge-operators: Merge operators\n\u27e88\u27e9 https://docs.rs/sled/latest/sled/struct.Tree.html#method.merge: `Tree::merge`\n\u27e89\u27e9 https://docs.rs/sled/latest/sled/#examples: \u00a7\n\u27e810\u27e9 https://docs.rs/sled/latest/sled/#reexports: \u00a7\n\u27e811\u27e9 https://docs.rs/sled/latest/sled/#modules: \u00a7\n\u27e812\u27e9 https://docs.rs/sled/latest/sled/doc/index.html: mod sled::doc - doc\n\u27e813\u27e9 https://docs.rs/sled/latest/sled/transaction/index.html: mod sled::transaction - transaction\n\u27e814\u27e9 https://docs.rs/sled/latest/sled/#structs: \u00a7\n\u27e815\u27e9 https://docs.rs/sled/latest/sled/struct.Batch.html: struct sled::Batch - Batch\n\u27e816\u27e9 https://docs.rs/sled/latest/sled/struct.CompareAndSwapError.html: struct sled::CompareAndSwapError - CompareAndSwapError\n\u27e817\u27e9 https://docs.rs/sled/latest/sled/struct.Config.html: struct sled::Config - Config\n\u27e818\u27e9 https://docs.rs/sled/latest/sled/struct.Db.html: struct sled::Db - Db\n\u27e819\u27e9 https://docs.rs/sled/latest/sled/struct.IVec.html: struct sled::IVec - IVec\n\u27e820\u27e9 https://docs.rs/sled/latest/sled/struct.Iter.html: struct sled::Iter - Iter\n\u27e821\u27e9 https://docs.rs/sled/latest/sled/struct.Subscriber.html: struct sled::Subscriber - Subscriber\n\u27e822\u27e9 https://docs.rs/sled/latest/sled/struct.Tree.html: struct sled::Tree - Tree\n\u27e823\u27e9 https://docs.rs/sled/latest/sled/#enums: \u00a7\n\u27e824\u27e9 https://docs.rs/sled/latest/sled/enum.Error.html: enum sled::Error - Error\n\u27e825\u27e9 https://docs.rs/sled/latest/sled/enum.Event.html: enum sled::Event - Event\n\u27e826\u27e9 https://docs.rs/sled/latest/sled/enum.Mode.html: enum sled::Mode - Mode\n\u27e827\u27e9 https://docs.rs/sled/latest/sled/#traits: \u00a7\n\u27e828\u27e9 https://docs.rs/sled/latest/sled/trait.MergeOperator.html: trait sled::MergeOperator - MergeOperator\n\u27e829\u27e9 https://docs.rs/sled/latest/sled/#functions: \u00a7\n\u27e830\u27e9 https://docs.rs/sled/latest/sled/fn.open.html: fn sled::open - open\n\u27e831\u27e9 https://docs.rs/sled/latest/sled/#types: \u00a7\n\u27e832\u27e9 https://docs.rs/sled/latest/sled/type.Result.html: type sled::Result - Result\n\u27e833\u27e9 https://sled.rs/errors: on the sled blog\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "sled",
          "version": "1.0.0-alpha.124",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/sled/latest/sled/all.html \"show sidebar\")\n# Crate sledCopy item path\n[Settings](https://docs.rs/sled/latest/settings.html)\n[Help](https://docs.rs/sled/latest/help.html)\nSummary[Source](https://docs.rs/sled/latest/src/sled/lib.rs.html#1-527)\nExpand description\n`sled` is a high-performance embedded database with an API that is similar to a `BTreeMap<[u8], [u8]>`, but with several additional capabilities for assisting creators of stateful systems.\nIt is fully thread-safe, and all operations are atomic. Multiple `Tree`s with isolated keyspaces are supported with the [`Db::open_tree`](https://docs.rs/sled/latest/sled/struct.Db.html#method.open_tree) method.\nACID transactions involving reads and writes to multiple items are supported with the [`Tree::transaction`](https://docs.rs/sled/latest/sled/struct.Tree.html#method.transaction) method. Transactions may also operate over multiple `Tree`s (see [`Tree::transaction`](https://docs.rs/sled/latest/sled/struct.Tree.html#method.transaction) docs for more info).\nUsers may also subscribe to updates on individual `Tree`s by using the [`Tree::watch_prefix`](https://docs.rs/sled/latest/sled/struct.Tree.html#method.watch_prefix) method, which returns a blocking `Iterator` over updates to keys that begin with the provided prefix. You may supply an empty prefix to subscribe to everything.\n[Merge operators](https://github.com/spacejam/sled/wiki/merge-operators) (aka read-modify-write operators) are supported. A merge operator is a function that specifies how new data can be merged into an existing value without requiring both a read and a write. Using the [`Tree::merge`](https://docs.rs/sled/latest/sled/struct.Tree.html#method.merge) method, you may \u201cpush\u201d data to a `Tree` value and have the provided merge operator combine it with the existing value, if there was one. They are set on a per-`Tree` basis, and essentially allow any sort of data structure to be built using merges as an atomic high-level operation.\n`sled` is built by experienced database engineers who think users should spend less time tuning and working against high-friction APIs. Expect significant ergonomic and performance improvements over time. Most surprises are bugs, so please let us know if something is high friction.\n## [\u00a7](https://docs.rs/sled/latest/sled/#examples)Examples\n```\nlet db: sled::Db = sled::open(\"my_db\").unwrap();\n// insert and get\ndb.insert(b\"yo!\", b\"v1\");\nassert_eq!(&db.get(b\"yo!\").unwrap().unwrap(), b\"v1\");\n// Atomic compare-and-swap.\ndb.compare_and_swap(\n  b\"yo!\",   // key\n  Some(b\"v1\"), // old value, None for not present\n  Some(b\"v2\"), // new value, None for delete\n)\n.unwrap();\n// Iterates over key-value pairs, starting at the given key.\nlet scan_key: &[u8] = b\"a non-present key before yo!\";\nlet mut iter = db.range(scan_key..);\nassert_eq!(&iter.next().unwrap().unwrap().0, b\"yo!\");\nassert_eq!(iter.next(), None);\ndb.remove(b\"yo!\");\nassert_eq!(db.get(b\"yo!\"), Ok(None));\nlet other_tree: sled::Tree = db.open_tree(b\"cool db facts\").unwrap();\nother_tree.insert(\n  b\"k1\",\n  &b\"a Db acts like a Tree due to implementing Deref<Target = Tree>\"[..]\n).unwrap();\n```\n\n## Re-exports[\u00a7](https://docs.rs/sled/latest/sled/#reexports)\n\n`pub use self::transaction::Transactional[](https://docs.rs/sled/latest/sled/transaction/trait.Transactional.html \"trait sled::transaction::Transactional\");`\n\n## Modules[\u00a7](https://docs.rs/sled/latest/sled/#modules)\n\n[doc](https://docs.rs/sled/latest/sled/doc/index.html \"mod sled::doc\")\n    what is sled?\n\n[transaction](https://docs.rs/sled/latest/sled/transaction/index.html \"mod sled::transaction\")\n    Fully serializable (ACID) multi-`Tree` transactions\n## Structs[\u00a7](https://docs.rs/sled/latest/sled/#structs)\n\n[Batch](https://docs.rs/sled/latest/sled/struct.Batch.html \"struct sled::Batch\")\n    A batch of updates that will be applied atomically to the Tree.\n\n[CompareAndSwapError](https://docs.rs/sled/latest/sled/struct.CompareAndSwapError.html \"struct sled::CompareAndSwapError\")\n    Compare and swap error.\n\n[Config](https://docs.rs/sled/latest/sled/struct.Config.html \"struct sled::Config\")\n    Top-level configuration for the system.\n\n[Db](https://docs.rs/sled/latest/sled/struct.Db.html \"struct sled::Db\")\n    The `sled` embedded database! Implements `Deref<Target = sled::Tree>` to refer to a default keyspace / namespace / bucket.\n\n[IVec](https://docs.rs/sled/latest/sled/struct.IVec.html \"struct sled::IVec\")\n    A buffer that may either be inline or remote and protected by an Arc\n\n[Iter](https://docs.rs/sled/latest/sled/struct.Iter.html \"struct sled::Iter\")\n    An iterator over keys and values in a `Tree`.\n\n[Subscriber](https://docs.rs/sled/latest/sled/struct.Subscriber.html \"struct sled::Subscriber\")\n    A subscriber listening on a specified prefix\n\n[Tree](https://docs.rs/sled/latest/sled/struct.Tree.html \"struct sled::Tree\")\n    A flash-sympathetic persistent lock-free B+ tree.\n## Enums[\u00a7](https://docs.rs/sled/latest/sled/#enums)\n\n[Error](https://docs.rs/sled/latest/sled/enum.Error.html \"enum sled::Error\")\n    An Error type encapsulating various issues that may come up in the operation of a `Db`.\n\n[Event](https://docs.rs/sled/latest/sled/enum.Event.html \"enum sled::Event\")\n    An event that happened to a key that a subscriber is interested in.\n\n[Mode](https://docs.rs/sled/latest/sled/enum.Mode.html \"enum sled::Mode\")\n    The high-level database mode, according to the trade-offs of the RUM conjecture.\n## Traits[\u00a7](https://docs.rs/sled/latest/sled/#traits)\n\n[MergeOperator](https://docs.rs/sled/latest/sled/trait.MergeOperator.html \"trait sled::MergeOperator\")\n    A function that may be configured on a particular shared `Tree` that will be applied as a kind of read-modify-write operator to any values that are written using the `Tree::merge` method.\n## Functions[\u00a7](https://docs.rs/sled/latest/sled/#functions)\n\n[open](https://docs.rs/sled/latest/sled/fn.open.html \"fn sled::open\")\n    Opens a `Db` with a default configuration at the specified path. This will create a new storage directory at the specified path if it does not already exist. You can use the `Db::was_recovered` method to determine if your database was recovered from a previous instance. You can use `Config::create_new` if you want to increase the chances that the database will be freshly created.\n## Type Aliases[\u00a7](https://docs.rs/sled/latest/sled/#types)\n\n[Result](https://docs.rs/sled/latest/sled/type.Result.html \"type sled::Result\")\n    The top-level result type for dealing with fallible operations. The errors tend to be fail-stop, and nested results are used in cases where the outer fail-stop error can have try `?` used on it, exposing the inner operation that is expected to fail under normal operation. The philosophy behind this is detailed [on the sled blog](https://sled.rs/errors).\n",
            "markdown_with_citations": "[](https://docs.rs/sled/latest/sled/all.html \"show sidebar\")\n# Crate sledCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n`sled` is a high-performance embedded database with an API that is similar to a `BTreeMap<[u8], [u8]>`, but with several additional capabilities for assisting creators of stateful systems.\nIt is fully thread-safe, and all operations are atomic. Multiple `Tree`s with isolated keyspaces are supported with the `Db::open_tree`\u27e84\u27e9 method.\nACID transactions involving reads and writes to multiple items are supported with the `Tree::transaction`\u27e85\u27e9 method. Transactions may also operate over multiple `Tree`s (see `Tree::transaction`\u27e85\u27e9 docs for more info).\nUsers may also subscribe to updates on individual `Tree`s by using the `Tree::watch_prefix`\u27e86\u27e9 method, which returns a blocking `Iterator` over updates to keys that begin with the provided prefix. You may supply an empty prefix to subscribe to everything.\nMerge operators\u27e87\u27e9 (aka read-modify-write operators) are supported. A merge operator is a function that specifies how new data can be merged into an existing value without requiring both a read and a write. Using the `Tree::merge`\u27e88\u27e9 method, you may \u201cpush\u201d data to a `Tree` value and have the provided merge operator combine it with the existing value, if there was one. They are set on a per-`Tree` basis, and essentially allow any sort of data structure to be built using merges as an atomic high-level operation.\n`sled` is built by experienced database engineers who think users should spend less time tuning and working against high-friction APIs. Expect significant ergonomic and performance improvements over time. Most surprises are bugs, so please let us know if something is high friction.\n## \u00a7\u27e89\u27e9Examples\n```\nlet db: sled::Db = sled::open(\"my_db\").unwrap();\n// insert and get\ndb.insert(b\"yo!\", b\"v1\");\nassert_eq!(&db.get(b\"yo!\").unwrap().unwrap(), b\"v1\");\n// Atomic compare-and-swap.\ndb.compare_and_swap(\n  b\"yo!\",   // key\n  Some(b\"v1\"), // old value, None for not present\n  Some(b\"v2\"), // new value, None for delete\n)\n.unwrap();\n// Iterates over key-value pairs, starting at the given key.\nlet scan_key: &[u8] = b\"a non-present key before yo!\";\nlet mut iter = db.range(scan_key..);\nassert_eq!(&iter.next().unwrap().unwrap().0, b\"yo!\");\nassert_eq!(iter.next(), None);\ndb.remove(b\"yo!\");\nassert_eq!(db.get(b\"yo!\"), Ok(None));\nlet other_tree: sled::Tree = db.open_tree(b\"cool db facts\").unwrap();\nother_tree.insert(\n  b\"k1\",\n  &b\"a Db acts like a Tree due to implementing Deref<Target = Tree>\"[..]\n).unwrap();\n```\n\n## Re-exports\u00a7\u27e810\u27e9\n\n`pub use self::transaction::Transactional[](https://docs.rs/sled/latest/sled/transaction/trait.Transactional.html \"trait sled::transaction::Transactional\");`\n\n## Modules\u00a7\u27e811\u27e9\n\ndoc\u27e812\u27e9\n    what is sled?\n\ntransaction\u27e813\u27e9\n    Fully serializable (ACID) multi-`Tree` transactions\n## Structs\u00a7\u27e814\u27e9\n\nBatch\u27e815\u27e9\n    A batch of updates that will be applied atomically to the Tree.\n\nCompareAndSwapError\u27e816\u27e9\n    Compare and swap error.\n\nConfig\u27e817\u27e9\n    Top-level configuration for the system.\n\nDb\u27e818\u27e9\n    The `sled` embedded database! Implements `Deref<Target = sled::Tree>` to refer to a default keyspace / namespace / bucket.\n\nIVec\u27e819\u27e9\n    A buffer that may either be inline or remote and protected by an Arc\n\nIter\u27e820\u27e9\n    An iterator over keys and values in a `Tree`.\n\nSubscriber\u27e821\u27e9\n    A subscriber listening on a specified prefix\n\nTree\u27e822\u27e9\n    A flash-sympathetic persistent lock-free B+ tree.\n## Enums\u00a7\u27e823\u27e9\n\nError\u27e824\u27e9\n    An Error type encapsulating various issues that may come up in the operation of a `Db`.\n\nEvent\u27e825\u27e9\n    An event that happened to a key that a subscriber is interested in.\n\nMode\u27e826\u27e9\n    The high-level database mode, according to the trade-offs of the RUM conjecture.\n## Traits\u00a7\u27e827\u27e9\n\nMergeOperator\u27e828\u27e9\n    A function that may be configured on a particular shared `Tree` that will be applied as a kind of read-modify-write operator to any values that are written using the `Tree::merge` method.\n## Functions\u00a7\u27e829\u27e9\n\nopen\u27e830\u27e9\n    Opens a `Db` with a default configuration at the specified path. This will create a new storage directory at the specified path if it does not already exist. You can use the `Db::was_recovered` method to determine if your database was recovered from a previous instance. You can use `Config::create_new` if you want to increase the chances that the database will be freshly created.\n## Type Aliases\u00a7\u27e831\u27e9\n\nResult\u27e832\u27e9\n    The top-level result type for dealing with fallible operations. The errors tend to be fail-stop, and nested results are used in cases where the outer fail-stop error can have try `?` used on it, exposing the inner operation that is expected to fail under normal operation. The philosophy behind this is detailed on the sled blog\u27e833\u27e9.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/sled/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/sled/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/sled/latest/src/sled/lib.rs.html#1-527: Source\n\u27e84\u27e9 https://docs.rs/sled/latest/sled/struct.Db.html#method.open_tree: `Db::open_tree`\n\u27e85\u27e9 https://docs.rs/sled/latest/sled/struct.Tree.html#method.transaction: `Tree::transaction`\n\u27e86\u27e9 https://docs.rs/sled/latest/sled/struct.Tree.html#method.watch_prefix: `Tree::watch_prefix`\n\u27e87\u27e9 https://github.com/spacejam/sled/wiki/merge-operators: Merge operators\n\u27e88\u27e9 https://docs.rs/sled/latest/sled/struct.Tree.html#method.merge: `Tree::merge`\n\u27e89\u27e9 https://docs.rs/sled/latest/sled/#examples: \u00a7\n\u27e810\u27e9 https://docs.rs/sled/latest/sled/#reexports: \u00a7\n\u27e811\u27e9 https://docs.rs/sled/latest/sled/#modules: \u00a7\n\u27e812\u27e9 https://docs.rs/sled/latest/sled/doc/index.html: mod sled::doc - doc\n\u27e813\u27e9 https://docs.rs/sled/latest/sled/transaction/index.html: mod sled::transaction - transaction\n\u27e814\u27e9 https://docs.rs/sled/latest/sled/#structs: \u00a7\n\u27e815\u27e9 https://docs.rs/sled/latest/sled/struct.Batch.html: struct sled::Batch - Batch\n\u27e816\u27e9 https://docs.rs/sled/latest/sled/struct.CompareAndSwapError.html: struct sled::CompareAndSwapError - CompareAndSwapError\n\u27e817\u27e9 https://docs.rs/sled/latest/sled/struct.Config.html: struct sled::Config - Config\n\u27e818\u27e9 https://docs.rs/sled/latest/sled/struct.Db.html: struct sled::Db - Db\n\u27e819\u27e9 https://docs.rs/sled/latest/sled/struct.IVec.html: struct sled::IVec - IVec\n\u27e820\u27e9 https://docs.rs/sled/latest/sled/struct.Iter.html: struct sled::Iter - Iter\n\u27e821\u27e9 https://docs.rs/sled/latest/sled/struct.Subscriber.html: struct sled::Subscriber - Subscriber\n\u27e822\u27e9 https://docs.rs/sled/latest/sled/struct.Tree.html: struct sled::Tree - Tree\n\u27e823\u27e9 https://docs.rs/sled/latest/sled/#enums: \u00a7\n\u27e824\u27e9 https://docs.rs/sled/latest/sled/enum.Error.html: enum sled::Error - Error\n\u27e825\u27e9 https://docs.rs/sled/latest/sled/enum.Event.html: enum sled::Event - Event\n\u27e826\u27e9 https://docs.rs/sled/latest/sled/enum.Mode.html: enum sled::Mode - Mode\n\u27e827\u27e9 https://docs.rs/sled/latest/sled/#traits: \u00a7\n\u27e828\u27e9 https://docs.rs/sled/latest/sled/trait.MergeOperator.html: trait sled::MergeOperator - MergeOperator\n\u27e829\u27e9 https://docs.rs/sled/latest/sled/#functions: \u00a7\n\u27e830\u27e9 https://docs.rs/sled/latest/sled/fn.open.html: fn sled::open - open\n\u27e831\u27e9 https://docs.rs/sled/latest/sled/#types: \u00a7\n\u27e832\u27e9 https://docs.rs/sled/latest/sled/type.Result.html: type sled::Result - Result\n\u27e833\u27e9 https://sled.rs/errors: on the sled blog\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `sled` crate is a high-performance, embedded, thread-safe database designed for simplicity and reliability, offering an API similar to `BTreeMap<[u8], [u8]>`. It supports ACID transactions across multiple keyspaces (`Tree`s), atomic operations like compare-and-swap, and features such as prefix-based subscription, merge operators for efficient read-modify-write operations, and flash-friendly lock-free B+ trees. Ideal for stateful systems, it prioritizes ergonomic and performant design with minimal tuning required.",
          "feature_summary": null,
          "use_case": "Database",
          "score": 7.0,
          "factual_counterfactual": "### Pair 1: ACID Transactions  \n\u2705 **Factual:** `sled` supports fully serializable ACID transactions that can operate across multiple `Tree`s, ensuring atomicity and isolation for complex database operations.  \n\u274c **Counterfactual:** `sled` only supports single-key transactions and cannot perform atomic operations across multiple `Tree`s.  \n\n---\n\n### Pair 2: Thread Safety  \n\u2705 **Factual:** `sled` is fully thread-safe, allowing concurrent access and modification of the database without compromising data integrity.  \n\u274c **Counterfactual:** `sled` is single-threaded and does not support concurrent access, requiring external synchronization for multi-threaded applications.  \n\n---\n\n### Pair 3: Merge Operators  \n\u2705 **Factual:** `sled` provides merge operators, enabling atomic read-modify-write operations on `Tree` values without requiring separate read and write steps.  \n\u274c **Counterfactual:** `sled` does not support merge operators, requiring users to manually implement read-modify-write logic for atomic updates.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-edf52620-e800beed-1751262558",
      "timestamp": "2025-06-30T05:49:18.216175+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]