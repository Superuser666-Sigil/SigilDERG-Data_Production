[
  {
    "execution_id": "exec-e6d0a960-c14ac392-1751258092",
    "timestamp": "2025-06-30T04:34:52.867929+00:00",
    "sacred_chain": {
      "input_data": "viz",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'viz' -> 'viz'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "viz",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/viz",
            "title": "viz v0.10.0",
            "content": {
              "raw_markdown": "#  viz v0.10.0\nFast, robust, flexible, lightweight web framework for Rust \n  * [ #async ](https://crates.io/keywords/async)\n  * [ #framework ](https://crates.io/keywords/framework)\n  * [ #http ](https://crates.io/keywords/http)\n  * [ #service ](https://crates.io/keywords/service)\n  * [ #web ](https://crates.io/keywords/web)\n\n\n  * [ Readme ](https://crates.io/crates/viz)\n  * [ 65 Versions ](https://crates.io/crates/viz/versions)\n  * [ Dependencies ](https://crates.io/crates/viz/dependencies)\n  * [ Dependents ](https://crates.io/crates/viz/reverse_dependencies)\n\n\n## Metadata\n6 months ago \n2021 edition \n[ MIT ](https://choosealicense.com/licenses/mit)\n24.9 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add viz\nOr add the following line to your Cargo.toml:\nviz = \"0.10.0\"\n## Homepage\n[ viz.rs ](https://viz.rs)\n## Documentation\n[ docs.rs/viz ](https://docs.rs/viz)\n## Repository\n[ github.com/viz-rs/viz ](https://github.com/viz-rs/viz)\n## Owners\n## Categories\n  * [Network programming](https://crates.io/categories/network-programming)\n  * [Asynchronous](https://crates.io/categories/asynchronous)\n  * [Web programming](https://crates.io/categories/web-programming)\n\n\n[ Report crate ](https://crates.io/support?crate=viz&inquire=crate-violation)\n### Stats Overview\n182,633 Downloads all time\n65 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  viz v0.10.0\nFast, robust, flexible, lightweight web framework for Rust \n  *  #async \u27e81\u27e9\n  *  #framework \u27e82\u27e9\n  *  #http \u27e83\u27e9\n  *  #service \u27e84\u27e9\n  *  #web \u27e85\u27e9\n\n\n  *  Readme \u27e86\u27e9\n  *  65 Versions \u27e87\u27e9\n  *  Dependencies \u27e88\u27e9\n  *  Dependents \u27e89\u27e9\n\n\n## Metadata\n6 months ago \n2021 edition \n MIT \u27e810\u27e9\n24.9 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add viz\nOr add the following line to your Cargo.toml:\nviz = \"0.10.0\"\n## Homepage\n viz.rs \u27e811\u27e9\n## Documentation\n docs.rs/viz \u27e812\u27e9\n## Repository\n github.com/viz-rs/viz \u27e813\u27e9\n## Owners\n## Categories\n  * Network programming\u27e814\u27e9\n  * Asynchronous\u27e815\u27e9\n  * Web programming\u27e816\u27e9\n\n\n Report crate \u27e817\u27e9\n### Stats Overview\n182,633 Downloads all time\n65 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/async:  #async \n\u27e82\u27e9 https://crates.io/keywords/framework:  #framework \n\u27e83\u27e9 https://crates.io/keywords/http:  #http \n\u27e84\u27e9 https://crates.io/keywords/service:  #service \n\u27e85\u27e9 https://crates.io/keywords/web:  #web \n\u27e86\u27e9 https://crates.io/crates/viz:  Readme \n\u27e87\u27e9 https://crates.io/crates/viz/versions:  65 Versions \n\u27e88\u27e9 https://crates.io/crates/viz/dependencies:  Dependencies \n\u27e89\u27e9 https://crates.io/crates/viz/reverse_dependencies:  Dependents \n\u27e810\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e811\u27e9 https://viz.rs:  viz.rs \n\u27e812\u27e9 https://docs.rs/viz:  docs.rs/viz \n\u27e813\u27e9 https://github.com/viz-rs/viz:  github.com/viz-rs/viz \n\u27e814\u27e9 https://crates.io/categories/network-programming: Network programming\n\u27e815\u27e9 https://crates.io/categories/asynchronous: Asynchronous\n\u27e816\u27e9 https://crates.io/categories/web-programming: Web programming\n\u27e817\u27e9 https://crates.io/support?crate=viz&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1451,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "111882.7314824"
          },
          "docs_rs": {
            "url": "https://docs.rs/viz",
            "title": "Crate vizCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/viz/latest/viz/all.html \"show sidebar\")\n# Crate vizCopy item path\n[Settings](https://docs.rs/viz/latest/settings.html)\n[Help](https://docs.rs/viz/latest/help.html)\nSummary[Source](https://docs.rs/viz/latest/src/viz/lib.rs.html#1-548)\nExpand description\nViz\nFast, robust, flexible, lightweight web framework for Rust.\n## [\u00a7](https://docs.rs/viz/latest/viz/#features)Features\n  * **Safety** `#![forbid(unsafe_code)]`\n  * Lightweight\n  * Simple + Flexible [`Handler`](https://docs.rs/viz/latest/viz/#handler) & [`Middleware`](https://docs.rs/viz/latest/viz/#middleware)\n  * Handy [`Extractors`](https://docs.rs/viz/latest/viz/#extractors)\n  * Robust [`Routing`](https://docs.rs/viz/latest/viz/#routing)\n  * Supports Tower [`Service`](https://docs.rs/tower-service/latest/tower_service/trait.Service.html)\n\n\n## [\u00a7](https://docs.rs/viz/latest/viz/#hello-viz)Hello Viz\n```\nuse std::net::SocketAddr;\nuse tokio::net::TcpListener;\nuse viz::{serve, Request, Result, Router};\nasync fn index(_: Request) -> Result<&'static str> {\n  Ok(\"Hello, Viz!\")\n}\n#[tokio::main]\nasync fn main() -> Result<()> {\n  let addr = SocketAddr::from(([127, 0, 0, 1], 3000));\n  let listener = TcpListener::bind(addr).await?;\n  println!(\"listening on http://{addr}\");\n  let app = Router::new().get(\"/\", index);\n  if let Err(e) = serve(listener, app).await {\n    println!(\"{e}\");\n  }\n  Ok(())\n}\n```\n\nMore examples can be found [here](https://github.com/viz-rs/viz/tree/main/examples).\n## [\u00a7](https://docs.rs/viz/latest/viz/#handler)Handler\nA simple pattern `async fn(Request) -> Result<Response>` is used to handle requests in Viz.\n### [\u00a7](https://docs.rs/viz/latest/viz/#simple-handlers)Simple handlers\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(Response::text(\"Hello, World!\"))\n}\nasync fn about(_: Request) -> Result<&'static str> {\n  Ok(\"About Me!\")\n}\nasync fn not_found(_: Request) -> Result<impl IntoResponse> {\n  Ok(\"Not Found!\")\n}\n```\n\n### [\u00a7](https://docs.rs/viz/latest/viz/#implemented-handler-trait)Implemented Handler trait\nThe types can implement the [`Handler`](https://docs.rs/viz/latest/viz/trait.Handler.html \"trait viz::Handler\") trait to customize handlers.\n```\n#[derive(Clone)]\nstruct MyHandler {\n  code: Arc<AtomicUsize>,\n}\n#[async_trait]\nimpl Handler<Request> for MyHandler {\n  type Output = Result<Response>;\n  async fn call(&self, req: Request) -> Self::Output {\n    let path = req.path();\n    let method = req.method().clone();\n    let code = self.code.fetch_add(1, Ordering::SeqCst);\n    Ok(format!(\"code = {}, method = {}, path = {}\", code, method, path).into_response())\n  }\n}\n```\n\n### [\u00a7](https://docs.rs/viz/latest/viz/#with-extractors)With extractors\nSupports handler with `zero` or `one` or `more` extractors.\nExtractors must implement the [`FromRequest`](https://docs.rs/viz/latest/viz/trait.FromRequest.html \"trait viz::FromRequest\") trait for extracting data from the [`Request`](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\").\nWhen joining the routing system, it should first be converted to a handler using [`into_handler`](https://docs.rs/viz/latest/viz/trait.IntoHandler.html#tymethod.into_handler \"method viz::IntoHandler::into_handler\").\n```\nasync fn show_todo(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Hi, NO.{}\", id))\n}\nlet app = Router::new().route(\"/:id\", get(show_todo.into_handler()));\n```\n\n#### [\u00a7](https://docs.rs/viz/latest/viz/#why-not-supports-handler-with-extractors-by-default)Why not supports handler with extractors by default?\nViz allows more flexibility in organizing your code.\n```\nasync fn show_user(mut req: Request) -> Result<Response> {\n  let Params(id) = req.extract::<Params<u64>>().await?;\n  Ok(format!(\"post {}\", id).into_response())\n}\nasync fn show_user_ext(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Hi, NO.{}\", id))\n}\nasync fn show_user_wrap(req: Request) -> Result<impl IntoResponse> {\n  // https://github.com/rust-lang/rust/issues/48919\n  // show_user_ext.call(req).await\n  FnExt::call(&show_user_ext, req).await\n}\nlet app = Router::new()\n  .get(\"/users/:id\", show_user)\n  .get(\"/users_wrap/:id\", show_user_wrap)\n  .get(\"/users_ext/:id\", show_user_ext.into_handler());\n```\n\n#### [\u00a7](https://docs.rs/viz/latest/viz/#support-process-macros)Support process macros?\nSupport, you can enable the `macros` feature, using `#[handler]`.\nBut it\u2019s still recommended to use `into_handler` for conversion.\n[\u24d8](https://docs.rs/viz/latest/viz/ \"This example is not tested\")```\n\n#[handler]\nasync fn show_user(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Hi, NO.{}\", id))\n}\nasync fn update_user(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Updated, NO.{}\", id))\n}\nlet app = Router::new()\n  .get(\"/users/:id\", show_user)\n  .patch(\"/users/:id\", update_user.into_handler());\n```\n\n### [\u00a7](https://docs.rs/viz/latest/viz/#chaining-and-composing-handlers)Chaining and composing handlers\nThe [`HandlerExt`](https://docs.rs/viz/latest/viz/trait.HandlerExt.html \"trait viz::HandlerExt\") is an extension trait for [Handler](https://docs.rs/viz/latest/viz/trait.Handler.html \"trait viz::Handler\")s that provides a variety of convenient combinator functions.\nLikes the [`FutureExt`](https://docs.rs/futures/latest/futures/future/trait.FutureExt.html) and [`StreamExt`](https://docs.rs/futures/latest/futures/stream/trait.StreamExt.html) traits.\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(Response::text(\"hyper\"))\n}\nasync fn before(req: Request) -> Result<Request> {\n  if req.method() == Method::POST {\n    Ok(req)\n  } else {\n    Err(StatusCode::METHOD_NOT_ALLOWED.into_error())\n  }\n}\nasync fn around<H>((req, handler): Next<Request, H>) -> Result<Response>\nwhere\n  H: Handler<Request, Output = Result<Response>>,\n{\n  // before ...\n  let result = handler.call(req).await;\n  // after ...\n  result\n}\nasync fn after(result: Result<Response>) -> Result<Response> {\n  result.map(|mut res| {\n    *res.status_mut() = StatusCode::NO_CONTENT;\n    res\n  })\n}\nlet routing = Router::new()\n  .get(\"/\", index.before(before).around(around).after(after));\n```\n\n## [\u00a7](https://docs.rs/viz/latest/viz/#middleware)Middleware\nViz\u2019s middleware and handlers share a common [`Handler`](https://docs.rs/viz/latest/viz/trait.Handler.html \"trait viz::Handler\") trait, so its very easy to implement and extend the middleware.\nWe can add middleware to a single handler, or to all handlers.\nWe can also use [`Transform`](https://docs.rs/viz/latest/viz/trait.Transform.html \"trait viz::Transform\") trait for wrapping the inner handler during construction.\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(StatusCode::OK.into_response())\n}\nasync fn not_found(_: Request) -> Result<impl IntoResponse> {\n  Ok(StatusCode::OK)\n}\nasync fn show_user(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"post {}\", id))\n}\n// middleware fn\nasync fn around<H>((req, handler): Next<Request, H>) -> Result<Response>\nwhere\n  H: Handler<Request, Output = Result<Response>>,\n{\n  // before ...\n  let result = handler.call(req).await;\n  // after ...\n  result\n}\n// middleware struct\n#[derive(Clone)]\nstruct MyMiddleware {}\n#[async_trait]\nimpl<H> Handler<Next<Request, H>> for MyMiddleware\nwhere\n  H: Handler<Request>,\n{\n  type Output = H::Output;\n  async fn call(&self, (i, h): Next<Request, H>) -> Self::Output {\n    h.call(i).await\n  }\n}\n// A configuration for Timeout Middleware\nstruct Timeout {\n  delay: Duration,\n}\nimpl Timeout {\n  pub fn new(secs: u64) -> Self {\n    Self { delay: Duration::from_secs(secs) }\n  }\n}\nimpl<H: Clone> Transform<H> for Timeout {\n  type Output = TimeoutMiddleware<H>;\n  fn transform(&self, h: H) -> Self::Output {\n    TimeoutMiddleware(h, self.delay)\n  }\n}\n// Timeout Middleware\n#[derive(Clone)]\nstruct TimeoutMiddleware<H>(H, Duration);\n#[async_trait]\nimpl<H> Handler<Request> for TimeoutMiddleware<H>\nwhere\n  H: Handler<Request>,\n{\n  type Output = H::Output;\n  async fn call(&self, req: Request) -> Self::Output {\n    self.0.call(req).await\n  }\n}\nlet app = Router::new()\n  .get(\"/\", index\n    // handler level\n    .around(around)\n    .around(MyMiddleware {})\n    .with(Timeout::new(1))\n  )\n  .route(\"/users/:id\", get(\n    show_user\n      .into_handler()\n      .map_into_response()\n      // handler level\n      .around(around)\n      .with(Timeout::new(0))\n    )\n    .post(\n      (|_| async { Ok(Response::text(\"update\")) })\n      // handler level\n      .around(around)\n      .with(Timeout::new(0))\n    )\n    // route level\n    .with_handler(MyMiddleware {})\n    .with(Timeout::new(2))\n  )\n  .get(\"/*\", not_found\n    .map_into_response()\n    // handler level\n    .around(around)\n    .around(MyMiddleware {})\n  )\n  // router level\n  .with_handler(around)\n  .with_handler(MyMiddleware {})\n  .with(Timeout::new(4));\n```\n\n## [\u00a7](https://docs.rs/viz/latest/viz/#extractors)Extractors\nExtracts data from the [`Request`](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\").\n```\nstruct Counter(u16);\nimpl FromRequest for Counter {\n  type Error = Infallible;\n  async fn extract(req: &mut Request) -> Result<Self, Self::Error> {\n    let c = get_query_param(req.query_string());\n    Ok(Counter(c))\n  }\n}\nfn get_query_param(query: Option<&str>) -> u16 {\n  let query = query.unwrap_or(\"\");\n  let q = if let Some(pos) = query.find('q') {\n    query.split_at(pos + 2).1.parse().unwrap_or(1)\n  } else {\n    1\n  };\n  cmp::min(500, cmp::max(1, q))\n}\n```\n\n## [\u00a7](https://docs.rs/viz/latest/viz/#routing)Routing\nThe Viz router recognizes URLs and dispatches them to a handler.\n### [\u00a7](https://docs.rs/viz/latest/viz/#simple-routes)Simple routes\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(().into_response())\n}\nlet root = Router::new()\n .get(\"/\", index)\n .route(\"/about\", get(|_| async { Ok(\"about\") }));\nlet search = Router::new()\n .route(\"/\", Route::new().get(|_| async { Ok(\"search\") }));\n```\n\n### [\u00a7](https://docs.rs/viz/latest/viz/#crud-verbs)CRUD, Verbs\nAdds routes with the HTTP method.\n```\nasync fn index_todos(_: Request) -> Result<impl IntoResponse> {\n  Ok(())\n}\nasync fn create_todo(_: Request) -> Result<&'static str> {\n  Ok(\"created\")\n}\nasync fn new_todo(_: Request) -> Result<Response> {\n  Ok(Response::html(r#\"\n    <form method=\"post\" action=\"/\">\n      <input name=\"todo\" />\n      <button type=\"submit\">Create</button>\n    </form>\n  \"#))\n}\nasync fn show_todo(mut req: Request) -> Result<Response> {\n  let Params(id): Params<u64> = req.extract().await?;\n  Ok(Response::text(format!(\"todo's id is {}\", id)))\n}\nasync fn update_todo(_: Request) -> Result<()> {\n  Ok(())\n}\nasync fn destroy_todo(_: Request) -> Result<()> {\n  Ok(())\n}\nasync fn edit_todo(_: Request) -> Result<()> {\n  Ok(())\n}\nlet todos = Router::new()\n .route(\"/\", get(index_todos).post(create_todo))\n .post(\"/new\", new_todo)\n .route(\"/:id\", get(show_todo).patch(update_todo).delete(destroy_todo))\n .get(\"/:id/edit\", edit_todo);\n```\n\n### [\u00a7](https://docs.rs/viz/latest/viz/#resources)Resources\n```\n// GET `/search`\nasync fn search_users(_: Request) -> Result<Response> {\n  Ok(Response::json::<Vec<u64>>(vec![])?)\n}\n// GET `/`\nasync fn index_users(_: Request) -> Result<Response> {\n  Ok(Response::json::<Vec<u64>>(vec![])?)\n}\n// GET `/new`\nasync fn new_user(_: Request) -> Result<&'static str> {\n  Ok(\"User Form\")\n}\n// POST `/`\nasync fn create_user(_: Request) -> Result<&'static str> {\n  Ok(\"Created User\")\n}\n// GET `/user_id`\nasync fn show_user(_: Request) -> Result<&'static str> {\n  Ok(\"User ID 007\")\n}\n// GET `/user_id/edit`\nasync fn edit_user(_: Request) -> Result<&'static str> {\n  Ok(\"Edit User Form\")\n}\n// PUT `/user_id`\nasync fn update_user(_: Request) -> Result<&'static str> {\n  Ok(\"Updated User\")\n}\n// DELETE `/user_id`\nasync fn delete_user(_: Request) -> Result<&'static str> {\n  Ok(\"Deleted User\")\n}\nlet users = Resources::default()\n .named(\"user\")\n .route(\"/search\", get(search_users))\n .index(index_users)\n .new(new_user)\n .create(create_user)\n .show(show_user)\n .edit(edit_user)\n .update(update_user)\n .destroy(delete_user);\n```\n\n### [\u00a7](https://docs.rs/viz/latest/viz/#nested)Nested\n[\u24d8](https://docs.rs/viz/latest/viz/ \"This example is not tested\")```\nasync fn not_found(_: Request) -> Result<impl IntoResponse> {\n  Ok(StatusCode::NOT_FOUND)\n}\nlet app = Router::new()\n .nest(\"/\", root)\n .nest(\"/search\", search)\n .nest(\"/todos\", todos.clone())\n .nest(\"/users\", users.nest(\"todos\", todos))\n .route(\"/*\", any(not_found));\n```\n\n## Modules[\u00a7](https://docs.rs/viz/latest/viz/#modules)\n\n[future](https://docs.rs/viz/latest/viz/future/index.html \"mod viz::future\")\n    Asynchronous values.\n\n[handler](https://docs.rs/viz/latest/viz/handler/index.html \"mod viz::handler\")\n    Traits and types for handling an HTTP.\n\n[handlers](https://docs.rs/viz/latest/viz/handlers/index.html \"mod viz::handlers\")`handlers`\n    A collection of handlers for Viz.\n\n[header](https://docs.rs/viz/latest/viz/header/index.html \"mod viz::header\")\n    HTTP header types\n\n[headers](https://docs.rs/viz/latest/viz/headers/index.html \"mod viz::headers\")\n    Typed HTTP Headers\n\n[middleware](https://docs.rs/viz/latest/viz/middleware/index.html \"mod viz::middleware\")\n    Built-in Middleware.\n\n[tls](https://docs.rs/viz/latest/viz/tls/index.html \"mod viz::tls\")`native-tls` or `rustls`\n    TLS A TLS listener wrapper.\n\n[types](https://docs.rs/viz/latest/viz/types/index.html \"mod viz::types\")\n    Built-in Extractors types and traits.\n## Structs[\u00a7](https://docs.rs/viz/latest/viz/#structs)\n\n[BoxHandler](https://docs.rs/viz/latest/viz/struct.BoxHandler.html \"struct viz::BoxHandler\")\n    A [`Clone`](https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html \"trait core::clone::Clone\") + [`Send`](https://doc.rust-lang.org/nightly/core/marker/trait.Send.html \"trait core::marker::Send\") boxed [`Handler`](https://docs.rs/viz/latest/viz/trait.Handler.html \"trait viz::Handler\").\n\n[Bytes](https://docs.rs/viz/latest/viz/struct.Bytes.html \"struct viz::Bytes\")\n    A cheaply cloneable and sliceable chunk of contiguous memory.\n\n[BytesMut](https://docs.rs/viz/latest/viz/struct.BytesMut.html \"struct viz::BytesMut\")\n    A unique reference to a contiguous slice of memory.\n\n[Incoming](https://docs.rs/viz/latest/viz/struct.Incoming.html \"struct viz::Incoming\")\n    A stream of `Bytes`, used when receiving bodies from the network.\n\n[Io](https://docs.rs/viz/latest/viz/struct.Io.html \"struct viz::Io\")\n    A wrapper that implements Tokio\u2019s IO traits for an inner type that implements hyper\u2019s IO traits, or vice versa (implements hyper\u2019s IO traits for a type that implements Tokio\u2019s IO traits).\n\n[Method](https://docs.rs/viz/latest/viz/struct.Method.html \"struct viz::Method\")\n    The Request Method (VERB)\n\n[Path](https://docs.rs/viz/latest/viz/struct.Path.html \"struct viz::Path\")\n    Matched route path infomation.\n\n[PathTree](https://docs.rs/viz/latest/viz/struct.PathTree.html \"struct viz::PathTree\")\n    A path tree.\n\n[Resources](https://docs.rs/viz/latest/viz/struct.Resources.html \"struct viz::Resources\")\n    A resourceful route provides a mapping between HTTP verbs and URLs to handlers.\n\n[Responder](https://docs.rs/viz/latest/viz/struct.Responder.html \"struct viz::Responder\")\n    Handles the HTTP [`Request`](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\") and retures the HTTP [`Response`](https://docs.rs/viz/latest/viz/type.Response.html \"type viz::Response\").\n\n[Route](https://docs.rs/viz/latest/viz/struct.Route.html \"struct viz::Route\")\n    A collection of verb-handler pair.\n\n[Router](https://docs.rs/viz/latest/viz/struct.Router.html \"struct viz::Router\")\n    A routes collection.\n\n[Server](https://docs.rs/viz/latest/viz/struct.Server.html \"struct viz::Server\")\n    A listening HTTP server that accepts connections.\n\n[StatusCode](https://docs.rs/viz/latest/viz/struct.StatusCode.html \"struct viz::StatusCode\")\n    An HTTP status code (`status-code` in RFC 9110 et al.).\n\n[Tree](https://docs.rs/viz/latest/viz/struct.Tree.html \"struct viz::Tree\")\n    Store all final routes.\n## Enums[\u00a7](https://docs.rs/viz/latest/viz/#enums)\n\n[Body](https://docs.rs/viz/latest/viz/enum.Body.html \"enum viz::Body\")\n    A body for HTTP [`Request`](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\") and HTTP [`Response`](https://docs.rs/viz/latest/viz/type.Response.html \"type viz::Response\").\n\n[BodyState](https://docs.rs/viz/latest/viz/enum.BodyState.html \"enum viz::BodyState\")\n    A body state.\n\n[Error](https://docs.rs/viz/latest/viz/enum.Error.html \"enum viz::Error\")\n    Represents errors that can occur handling application.\n## Traits[\u00a7](https://docs.rs/viz/latest/viz/#traits)\n\n[FnExt](https://docs.rs/viz/latest/viz/trait.FnExt.html \"trait viz::FnExt\")\n    A handler with extractors.\n\n[FromRequest](https://docs.rs/viz/latest/viz/trait.FromRequest.html \"trait viz::FromRequest\")\n    An interface for extracting data from the HTTP [`Request`](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\").\n\n[Future](https://docs.rs/viz/latest/viz/trait.Future.html \"trait viz::Future\")\n    A future represents an asynchronous computation obtained by use of [`async`](https://docs.rs/viz/std/keyword.async.html).\n\n[Handler](https://docs.rs/viz/latest/viz/trait.Handler.html \"trait viz::Handler\")\n    A simplified asynchronous interface for handling input and output.\n\n[HandlerExt](https://docs.rs/viz/latest/viz/trait.HandlerExt.html \"trait viz::HandlerExt\")\n    The [`HandlerExt`](https://docs.rs/viz/latest/viz/trait.HandlerExt.html \"trait viz::HandlerExt\") trait, which provides adapters for chaining and composing handlers.\n\n[HttpBody](https://docs.rs/viz/latest/viz/trait.HttpBody.html \"trait viz::HttpBody\")\n    Trait representing a streaming body of a Request or Response.\n\n[IntoHandler](https://docs.rs/viz/latest/viz/trait.IntoHandler.html \"trait viz::IntoHandler\")\n    The trait implemented by types that can be converted to a [`Handler`](https://docs.rs/viz/latest/viz/trait.Handler.html \"trait viz::Handler\").\n\n[IntoResponse](https://docs.rs/viz/latest/viz/trait.IntoResponse.html \"trait viz::IntoResponse\")\n    Trait implemented by types that can be converted to an HTTP [`Response`](https://docs.rs/viz/latest/viz/type.Response.html \"type viz::Response\").\n\n[Listener](https://docs.rs/viz/latest/viz/trait.Listener.html \"trait viz::Listener\")\n    A trait for a listener: `TcpListener` and `UnixListener`.\n\n[RequestExt](https://docs.rs/viz/latest/viz/trait.RequestExt.html \"trait viz::RequestExt\")\n    The [`Request`](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\") Extension.\n\n[RequestLimitsExt](https://docs.rs/viz/latest/viz/trait.RequestLimitsExt.html \"trait viz::RequestLimitsExt\")\n    The [`Request`](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\") Extension with a limited body.\n\n[ResponseExt](https://docs.rs/viz/latest/viz/trait.ResponseExt.html \"trait viz::ResponseExt\")\n    The [`Response`](https://docs.rs/viz/latest/viz/type.Response.html \"type viz::Response\") Extension.\n\n[Transform](https://docs.rs/viz/latest/viz/trait.Transform.html \"trait viz::Transform\")\n    Then `Transform` trait defines the interface of a handler factory that wraps inner handler to a Handler during construction.\n## Functions[\u00a7](https://docs.rs/viz/latest/viz/#functions)\n\n[any](https://docs.rs/viz/latest/viz/fn.any.html \"fn viz::any\")\n    Creates a route with a handler and any HTTP verbs.\n\n[connect](https://docs.rs/viz/latest/viz/fn.connect.html \"fn viz::connect\")\n    Creates a route with a handler and HTTP `CONNECT` verb pair.\n\n[delete](https://docs.rs/viz/latest/viz/fn.delete.html \"fn viz::delete\")\n    Creates a route with a handler and HTTP `DELETE` verb pair.\n\n[get](https://docs.rs/viz/latest/viz/fn.get.html \"fn viz::get\")\n    Creates a route with a handler and HTTP `GET` verb pair.\n\n[head](https://docs.rs/viz/latest/viz/fn.head.html \"fn viz::head\")\n    Creates a route with a handler and HTTP `HEAD` verb pair.\n\n[on](https://docs.rs/viz/latest/viz/fn.on.html \"fn viz::on\")\n    Creates a route with a handler and HTTP verb pair.\n\n[options](https://docs.rs/viz/latest/viz/fn.options.html \"fn viz::options\")\n    Creates a route with a handler and HTTP `OPTIONS` verb pair.\n\n[patch](https://docs.rs/viz/latest/viz/fn.patch.html \"fn viz::patch\")\n    Creates a route with a handler and HTTP `PATCH` verb pair.\n\n[post](https://docs.rs/viz/latest/viz/fn.post.html \"fn viz::post\")\n    Creates a route with a handler and HTTP `POST` verb pair.\n\n[put](https://docs.rs/viz/latest/viz/fn.put.html \"fn viz::put\")\n    Creates a route with a handler and HTTP `PUT` verb pair.\n\n[serve](https://docs.rs/viz/latest/viz/fn.serve.html \"fn viz::serve\")\n    Starts a server and serves the connections.\n\n[trace](https://docs.rs/viz/latest/viz/fn.trace.html \"fn viz::trace\")\n    Creates a route with a handler and HTTP `TRACE` verb pair.\n## Type Aliases[\u00a7](https://docs.rs/viz/latest/viz/#types)\n\n[BoxError](https://docs.rs/viz/latest/viz/type.BoxError.html \"type viz::BoxError\")\n    An owned dynamically typed [`StdError`](https://doc.rust-lang.org/nightly/core/error/trait.Error.html \"trait core::error::Error\").\n\n[Next](https://docs.rs/viz/latest/viz/type.Next.html \"type viz::Next\")\n    Represents a middleware parameter, which is a tuple that includes Requset and `BoxHandler`.\n\n[Request](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\")\n    Represents an HTTP Request.\n\n[Response](https://docs.rs/viz/latest/viz/type.Response.html \"type viz::Response\")\n    Represents an HTTP Response.\n\n[Result](https://docs.rs/viz/latest/viz/type.Result.html \"type viz::Result\")\n    Represents either success (Ok) or failure (Err).\n## Attribute Macros[\u00a7](https://docs.rs/viz/latest/viz/#attributes)\n\n[async_trait](https://docs.rs/viz/latest/viz/attr.async_trait.html \"attr viz::async_trait\")\n\n\n[handler](https://docs.rs/viz/latest/viz/attr.handler.html \"attr viz::handler\")`macros`\n    Transforms `extract-handler` to a Handler instance.\n## Derive Macros[\u00a7](https://docs.rs/viz/latest/viz/#derives)\n\n[ThisError](https://docs.rs/viz/latest/viz/derive.ThisError.html \"derive viz::ThisError\")\n\n",
              "markdown_with_citations": "[](https://docs.rs/viz/latest/viz/all.html \"show sidebar\")\n# Crate vizCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nViz\nFast, robust, flexible, lightweight web framework for Rust.\n## \u00a7\u27e84\u27e9Features\n  * **Safety** `#![forbid(unsafe_code)]`\n  * Lightweight\n  * Simple + Flexible `Handler`\u27e85\u27e9 & `Middleware`\u27e86\u27e9\n  * Handy `Extractors`\u27e87\u27e9\n  * Robust `Routing`\u27e88\u27e9\n  * Supports Tower `Service`\u27e89\u27e9\n\n\n## \u00a7\u27e810\u27e9Hello Viz\n```\nuse std::net::SocketAddr;\nuse tokio::net::TcpListener;\nuse viz::{serve, Request, Result, Router};\nasync fn index(_: Request) -> Result<&'static str> {\n  Ok(\"Hello, Viz!\")\n}\n#[tokio::main]\nasync fn main() -> Result<()> {\n  let addr = SocketAddr::from(([127, 0, 0, 1], 3000));\n  let listener = TcpListener::bind(addr).await?;\n  println!(\"listening on http://{addr}\");\n  let app = Router::new().get(\"/\", index);\n  if let Err(e) = serve(listener, app).await {\n    println!(\"{e}\");\n  }\n  Ok(())\n}\n```\n\nMore examples can be found here\u27e811\u27e9.\n## \u00a7\u27e85\u27e9Handler\nA simple pattern `async fn(Request) -> Result<Response>` is used to handle requests in Viz.\n### \u00a7\u27e812\u27e9Simple handlers\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(Response::text(\"Hello, World!\"))\n}\nasync fn about(_: Request) -> Result<&'static str> {\n  Ok(\"About Me!\")\n}\nasync fn not_found(_: Request) -> Result<impl IntoResponse> {\n  Ok(\"Not Found!\")\n}\n```\n\n### \u00a7\u27e813\u27e9Implemented Handler trait\nThe types can implement the `Handler`\u27e814\u27e9 trait to customize handlers.\n```\n#[derive(Clone)]\nstruct MyHandler {\n  code: Arc<AtomicUsize>,\n}\n#[async_trait]\nimpl Handler<Request> for MyHandler {\n  type Output = Result<Response>;\n  async fn call(&self, req: Request) -> Self::Output {\n    let path = req.path();\n    let method = req.method().clone();\n    let code = self.code.fetch_add(1, Ordering::SeqCst);\n    Ok(format!(\"code = {}, method = {}, path = {}\", code, method, path).into_response())\n  }\n}\n```\n\n### \u00a7\u27e815\u27e9With extractors\nSupports handler with `zero` or `one` or `more` extractors.\nExtractors must implement the `FromRequest`\u27e816\u27e9 trait for extracting data from the `Request`\u27e817\u27e9.\nWhen joining the routing system, it should first be converted to a handler using `into_handler`\u27e818\u27e9.\n```\nasync fn show_todo(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Hi, NO.{}\", id))\n}\nlet app = Router::new().route(\"/:id\", get(show_todo.into_handler()));\n```\n\n#### \u00a7\u27e819\u27e9Why not supports handler with extractors by default?\nViz allows more flexibility in organizing your code.\n```\nasync fn show_user(mut req: Request) -> Result<Response> {\n  let Params(id) = req.extract::<Params<u64>>().await?;\n  Ok(format!(\"post {}\", id).into_response())\n}\nasync fn show_user_ext(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Hi, NO.{}\", id))\n}\nasync fn show_user_wrap(req: Request) -> Result<impl IntoResponse> {\n  // https://github.com/rust-lang/rust/issues/48919\n  // show_user_ext.call(req).await\n  FnExt::call(&show_user_ext, req).await\n}\nlet app = Router::new()\n  .get(\"/users/:id\", show_user)\n  .get(\"/users_wrap/:id\", show_user_wrap)\n  .get(\"/users_ext/:id\", show_user_ext.into_handler());\n```\n\n#### \u00a7\u27e820\u27e9Support process macros?\nSupport, you can enable the `macros` feature, using `#[handler]`.\nBut it\u2019s still recommended to use `into_handler` for conversion.\n\u24d8\u27e821\u27e9```\n\n#[handler]\nasync fn show_user(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Hi, NO.{}\", id))\n}\nasync fn update_user(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Updated, NO.{}\", id))\n}\nlet app = Router::new()\n  .get(\"/users/:id\", show_user)\n  .patch(\"/users/:id\", update_user.into_handler());\n```\n\n### \u00a7\u27e822\u27e9Chaining and composing handlers\nThe `HandlerExt`\u27e823\u27e9 is an extension trait for Handler\u27e814\u27e9s that provides a variety of convenient combinator functions.\nLikes the `FutureExt`\u27e824\u27e9 and `StreamExt`\u27e825\u27e9 traits.\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(Response::text(\"hyper\"))\n}\nasync fn before(req: Request) -> Result<Request> {\n  if req.method() == Method::POST {\n    Ok(req)\n  } else {\n    Err(StatusCode::METHOD_NOT_ALLOWED.into_error())\n  }\n}\nasync fn around<H>((req, handler): Next<Request, H>) -> Result<Response>\nwhere\n  H: Handler<Request, Output = Result<Response>>,\n{\n  // before ...\n  let result = handler.call(req).await;\n  // after ...\n  result\n}\nasync fn after(result: Result<Response>) -> Result<Response> {\n  result.map(|mut res| {\n    *res.status_mut() = StatusCode::NO_CONTENT;\n    res\n  })\n}\nlet routing = Router::new()\n  .get(\"/\", index.before(before).around(around).after(after));\n```\n\n## \u00a7\u27e86\u27e9Middleware\nViz\u2019s middleware and handlers share a common `Handler`\u27e814\u27e9 trait, so its very easy to implement and extend the middleware.\nWe can add middleware to a single handler, or to all handlers.\nWe can also use `Transform`\u27e826\u27e9 trait for wrapping the inner handler during construction.\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(StatusCode::OK.into_response())\n}\nasync fn not_found(_: Request) -> Result<impl IntoResponse> {\n  Ok(StatusCode::OK)\n}\nasync fn show_user(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"post {}\", id))\n}\n// middleware fn\nasync fn around<H>((req, handler): Next<Request, H>) -> Result<Response>\nwhere\n  H: Handler<Request, Output = Result<Response>>,\n{\n  // before ...\n  let result = handler.call(req).await;\n  // after ...\n  result\n}\n// middleware struct\n#[derive(Clone)]\nstruct MyMiddleware {}\n#[async_trait]\nimpl<H> Handler<Next<Request, H>> for MyMiddleware\nwhere\n  H: Handler<Request>,\n{\n  type Output = H::Output;\n  async fn call(&self, (i, h): Next<Request, H>) -> Self::Output {\n    h.call(i).await\n  }\n}\n// A configuration for Timeout Middleware\nstruct Timeout {\n  delay: Duration,\n}\nimpl Timeout {\n  pub fn new(secs: u64) -> Self {\n    Self { delay: Duration::from_secs(secs) }\n  }\n}\nimpl<H: Clone> Transform<H> for Timeout {\n  type Output = TimeoutMiddleware<H>;\n  fn transform(&self, h: H) -> Self::Output {\n    TimeoutMiddleware(h, self.delay)\n  }\n}\n// Timeout Middleware\n#[derive(Clone)]\nstruct TimeoutMiddleware<H>(H, Duration);\n#[async_trait]\nimpl<H> Handler<Request> for TimeoutMiddleware<H>\nwhere\n  H: Handler<Request>,\n{\n  type Output = H::Output;\n  async fn call(&self, req: Request) -> Self::Output {\n    self.0.call(req).await\n  }\n}\nlet app = Router::new()\n  .get(\"/\", index\n    // handler level\n    .around(around)\n    .around(MyMiddleware {})\n    .with(Timeout::new(1))\n  )\n  .route(\"/users/:id\", get(\n    show_user\n      .into_handler()\n      .map_into_response()\n      // handler level\n      .around(around)\n      .with(Timeout::new(0))\n    )\n    .post(\n      (|_| async { Ok(Response::text(\"update\")) })\n      // handler level\n      .around(around)\n      .with(Timeout::new(0))\n    )\n    // route level\n    .with_handler(MyMiddleware {})\n    .with(Timeout::new(2))\n  )\n  .get(\"/*\", not_found\n    .map_into_response()\n    // handler level\n    .around(around)\n    .around(MyMiddleware {})\n  )\n  // router level\n  .with_handler(around)\n  .with_handler(MyMiddleware {})\n  .with(Timeout::new(4));\n```\n\n## \u00a7\u27e87\u27e9Extractors\nExtracts data from the `Request`\u27e817\u27e9.\n```\nstruct Counter(u16);\nimpl FromRequest for Counter {\n  type Error = Infallible;\n  async fn extract(req: &mut Request) -> Result<Self, Self::Error> {\n    let c = get_query_param(req.query_string());\n    Ok(Counter(c))\n  }\n}\nfn get_query_param(query: Option<&str>) -> u16 {\n  let query = query.unwrap_or(\"\");\n  let q = if let Some(pos) = query.find('q') {\n    query.split_at(pos + 2).1.parse().unwrap_or(1)\n  } else {\n    1\n  };\n  cmp::min(500, cmp::max(1, q))\n}\n```\n\n## \u00a7\u27e88\u27e9Routing\nThe Viz router recognizes URLs and dispatches them to a handler.\n### \u00a7\u27e827\u27e9Simple routes\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(().into_response())\n}\nlet root = Router::new()\n .get(\"/\", index)\n .route(\"/about\", get(|_| async { Ok(\"about\") }));\nlet search = Router::new()\n .route(\"/\", Route::new().get(|_| async { Ok(\"search\") }));\n```\n\n### \u00a7\u27e828\u27e9CRUD, Verbs\nAdds routes with the HTTP method.\n```\nasync fn index_todos(_: Request) -> Result<impl IntoResponse> {\n  Ok(())\n}\nasync fn create_todo(_: Request) -> Result<&'static str> {\n  Ok(\"created\")\n}\nasync fn new_todo(_: Request) -> Result<Response> {\n  Ok(Response::html(r#\"\n    <form method=\"post\" action=\"/\">\n      <input name=\"todo\" />\n      <button type=\"submit\">Create</button>\n    </form>\n  \"#))\n}\nasync fn show_todo(mut req: Request) -> Result<Response> {\n  let Params(id): Params<u64> = req.extract().await?;\n  Ok(Response::text(format!(\"todo's id is {}\", id)))\n}\nasync fn update_todo(_: Request) -> Result<()> {\n  Ok(())\n}\nasync fn destroy_todo(_: Request) -> Result<()> {\n  Ok(())\n}\nasync fn edit_todo(_: Request) -> Result<()> {\n  Ok(())\n}\nlet todos = Router::new()\n .route(\"/\", get(index_todos).post(create_todo))\n .post(\"/new\", new_todo)\n .route(\"/:id\", get(show_todo).patch(update_todo).delete(destroy_todo))\n .get(\"/:id/edit\", edit_todo);\n```\n\n### \u00a7\u27e829\u27e9Resources\n```\n// GET `/search`\nasync fn search_users(_: Request) -> Result<Response> {\n  Ok(Response::json::<Vec<u64>>(vec![])?)\n}\n// GET `/`\nasync fn index_users(_: Request) -> Result<Response> {\n  Ok(Response::json::<Vec<u64>>(vec![])?)\n}\n// GET `/new`\nasync fn new_user(_: Request) -> Result<&'static str> {\n  Ok(\"User Form\")\n}\n// POST `/`\nasync fn create_user(_: Request) -> Result<&'static str> {\n  Ok(\"Created User\")\n}\n// GET `/user_id`\nasync fn show_user(_: Request) -> Result<&'static str> {\n  Ok(\"User ID 007\")\n}\n// GET `/user_id/edit`\nasync fn edit_user(_: Request) -> Result<&'static str> {\n  Ok(\"Edit User Form\")\n}\n// PUT `/user_id`\nasync fn update_user(_: Request) -> Result<&'static str> {\n  Ok(\"Updated User\")\n}\n// DELETE `/user_id`\nasync fn delete_user(_: Request) -> Result<&'static str> {\n  Ok(\"Deleted User\")\n}\nlet users = Resources::default()\n .named(\"user\")\n .route(\"/search\", get(search_users))\n .index(index_users)\n .new(new_user)\n .create(create_user)\n .show(show_user)\n .edit(edit_user)\n .update(update_user)\n .destroy(delete_user);\n```\n\n### \u00a7\u27e830\u27e9Nested\n\u24d8\u27e821\u27e9```\nasync fn not_found(_: Request) -> Result<impl IntoResponse> {\n  Ok(StatusCode::NOT_FOUND)\n}\nlet app = Router::new()\n .nest(\"/\", root)\n .nest(\"/search\", search)\n .nest(\"/todos\", todos.clone())\n .nest(\"/users\", users.nest(\"todos\", todos))\n .route(\"/*\", any(not_found));\n```\n\n## Modules\u00a7\u27e831\u27e9\n\nfuture\u27e832\u27e9\n    Asynchronous values.\n\nhandler\u27e833\u27e9\n    Traits and types for handling an HTTP.\n\nhandlers\u27e834\u27e9`handlers`\n    A collection of handlers for Viz.\n\nheader\u27e835\u27e9\n    HTTP header types\n\nheaders\u27e836\u27e9\n    Typed HTTP Headers\n\nmiddleware\u27e837\u27e9\n    Built-in Middleware.\n\ntls\u27e838\u27e9`native-tls` or `rustls`\n    TLS A TLS listener wrapper.\n\ntypes\u27e839\u27e9\n    Built-in Extractors types and traits.\n## Structs\u00a7\u27e840\u27e9\n\nBoxHandler\u27e841\u27e9\n    A `Clone`\u27e842\u27e9 + `Send`\u27e843\u27e9 boxed `Handler`\u27e814\u27e9.\n\nBytes\u27e844\u27e9\n    A cheaply cloneable and sliceable chunk of contiguous memory.\n\nBytesMut\u27e845\u27e9\n    A unique reference to a contiguous slice of memory.\n\nIncoming\u27e846\u27e9\n    A stream of `Bytes`, used when receiving bodies from the network.\n\nIo\u27e847\u27e9\n    A wrapper that implements Tokio\u2019s IO traits for an inner type that implements hyper\u2019s IO traits, or vice versa (implements hyper\u2019s IO traits for a type that implements Tokio\u2019s IO traits).\n\nMethod\u27e848\u27e9\n    The Request Method (VERB)\n\nPath\u27e849\u27e9\n    Matched route path infomation.\n\nPathTree\u27e850\u27e9\n    A path tree.\n\nResources\u27e851\u27e9\n    A resourceful route provides a mapping between HTTP verbs and URLs to handlers.\n\nResponder\u27e852\u27e9\n    Handles the HTTP `Request`\u27e817\u27e9 and retures the HTTP `Response`\u27e853\u27e9.\n\nRoute\u27e854\u27e9\n    A collection of verb-handler pair.\n\nRouter\u27e855\u27e9\n    A routes collection.\n\nServer\u27e856\u27e9\n    A listening HTTP server that accepts connections.\n\nStatusCode\u27e857\u27e9\n    An HTTP status code (`status-code` in RFC 9110 et al.).\n\nTree\u27e858\u27e9\n    Store all final routes.\n## Enums\u00a7\u27e859\u27e9\n\nBody\u27e860\u27e9\n    A body for HTTP `Request`\u27e817\u27e9 and HTTP `Response`\u27e853\u27e9.\n\nBodyState\u27e861\u27e9\n    A body state.\n\nError\u27e862\u27e9\n    Represents errors that can occur handling application.\n## Traits\u00a7\u27e863\u27e9\n\nFnExt\u27e864\u27e9\n    A handler with extractors.\n\nFromRequest\u27e816\u27e9\n    An interface for extracting data from the HTTP `Request`\u27e817\u27e9.\n\nFuture\u27e865\u27e9\n    A future represents an asynchronous computation obtained by use of `async`\u27e866\u27e9.\n\nHandler\u27e814\u27e9\n    A simplified asynchronous interface for handling input and output.\n\nHandlerExt\u27e823\u27e9\n    The `HandlerExt`\u27e823\u27e9 trait, which provides adapters for chaining and composing handlers.\n\nHttpBody\u27e867\u27e9\n    Trait representing a streaming body of a Request or Response.\n\nIntoHandler\u27e868\u27e9\n    The trait implemented by types that can be converted to a `Handler`\u27e814\u27e9.\n\nIntoResponse\u27e869\u27e9\n    Trait implemented by types that can be converted to an HTTP `Response`\u27e853\u27e9.\n\nListener\u27e870\u27e9\n    A trait for a listener: `TcpListener` and `UnixListener`.\n\nRequestExt\u27e871\u27e9\n    The `Request`\u27e817\u27e9 Extension.\n\nRequestLimitsExt\u27e872\u27e9\n    The `Request`\u27e817\u27e9 Extension with a limited body.\n\nResponseExt\u27e873\u27e9\n    The `Response`\u27e853\u27e9 Extension.\n\nTransform\u27e826\u27e9\n    Then `Transform` trait defines the interface of a handler factory that wraps inner handler to a Handler during construction.\n## Functions\u00a7\u27e874\u27e9\n\nany\u27e875\u27e9\n    Creates a route with a handler and any HTTP verbs.\n\nconnect\u27e876\u27e9\n    Creates a route with a handler and HTTP `CONNECT` verb pair.\n\ndelete\u27e877\u27e9\n    Creates a route with a handler and HTTP `DELETE` verb pair.\n\nget\u27e878\u27e9\n    Creates a route with a handler and HTTP `GET` verb pair.\n\nhead\u27e879\u27e9\n    Creates a route with a handler and HTTP `HEAD` verb pair.\n\non\u27e880\u27e9\n    Creates a route with a handler and HTTP verb pair.\n\noptions\u27e881\u27e9\n    Creates a route with a handler and HTTP `OPTIONS` verb pair.\n\npatch\u27e882\u27e9\n    Creates a route with a handler and HTTP `PATCH` verb pair.\n\npost\u27e883\u27e9\n    Creates a route with a handler and HTTP `POST` verb pair.\n\nput\u27e884\u27e9\n    Creates a route with a handler and HTTP `PUT` verb pair.\n\nserve\u27e885\u27e9\n    Starts a server and serves the connections.\n\ntrace\u27e886\u27e9\n    Creates a route with a handler and HTTP `TRACE` verb pair.\n## Type Aliases\u00a7\u27e887\u27e9\n\nBoxError\u27e888\u27e9\n    An owned dynamically typed `StdError`\u27e889\u27e9.\n\nNext\u27e890\u27e9\n    Represents a middleware parameter, which is a tuple that includes Requset and `BoxHandler`.\n\nRequest\u27e817\u27e9\n    Represents an HTTP Request.\n\nResponse\u27e853\u27e9\n    Represents an HTTP Response.\n\nResult\u27e891\u27e9\n    Represents either success (Ok) or failure (Err).\n## Attribute Macros\u00a7\u27e892\u27e9\n\nasync_trait\u27e893\u27e9\n\n\nhandler\u27e894\u27e9`macros`\n    Transforms `extract-handler` to a Handler instance.\n## Derive Macros\u00a7\u27e895\u27e9\n\nThisError\u27e896\u27e9\n\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/viz/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/viz/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/viz/latest/src/viz/lib.rs.html#1-548: Source\n\u27e84\u27e9 https://docs.rs/viz/latest/viz/#features: \u00a7\n\u27e85\u27e9 https://docs.rs/viz/latest/viz/#handler: `Handler`\n\u27e86\u27e9 https://docs.rs/viz/latest/viz/#middleware: `Middleware`\n\u27e87\u27e9 https://docs.rs/viz/latest/viz/#extractors: `Extractors`\n\u27e88\u27e9 https://docs.rs/viz/latest/viz/#routing: `Routing`\n\u27e89\u27e9 https://docs.rs/tower-service/latest/tower_service/trait.Service.html: `Service`\n\u27e810\u27e9 https://docs.rs/viz/latest/viz/#hello-viz: \u00a7\n\u27e811\u27e9 https://github.com/viz-rs/viz/tree/main/examples: here\n\u27e812\u27e9 https://docs.rs/viz/latest/viz/#simple-handlers: \u00a7\n\u27e813\u27e9 https://docs.rs/viz/latest/viz/#implemented-handler-trait: \u00a7\n\u27e814\u27e9 https://docs.rs/viz/latest/viz/trait.Handler.html: trait viz::Handler - `Handler`\n\u27e815\u27e9 https://docs.rs/viz/latest/viz/#with-extractors: \u00a7\n\u27e816\u27e9 https://docs.rs/viz/latest/viz/trait.FromRequest.html: trait viz::FromRequest - `FromRequest`\n\u27e817\u27e9 https://docs.rs/viz/latest/viz/type.Request.html: type viz::Request - `Request`\n\u27e818\u27e9 https://docs.rs/viz/latest/viz/trait.IntoHandler.html#tymethod.into_handler: method viz::IntoHandler::into_handler - `into_handler`\n\u27e819\u27e9 https://docs.rs/viz/latest/viz/#why-not-supports-handler-with-extractors-by-default: \u00a7\n\u27e820\u27e9 https://docs.rs/viz/latest/viz/#support-process-macros: \u00a7\n\u27e821\u27e9 https://docs.rs/viz/latest/viz/: This example is not tested - \u24d8\n\u27e822\u27e9 https://docs.rs/viz/latest/viz/#chaining-and-composing-handlers: \u00a7\n\u27e823\u27e9 https://docs.rs/viz/latest/viz/trait.HandlerExt.html: trait viz::HandlerExt - `HandlerExt`\n\u27e824\u27e9 https://docs.rs/futures/latest/futures/future/trait.FutureExt.html: `FutureExt`\n\u27e825\u27e9 https://docs.rs/futures/latest/futures/stream/trait.StreamExt.html: `StreamExt`\n\u27e826\u27e9 https://docs.rs/viz/latest/viz/trait.Transform.html: trait viz::Transform - `Transform`\n\u27e827\u27e9 https://docs.rs/viz/latest/viz/#simple-routes: \u00a7\n\u27e828\u27e9 https://docs.rs/viz/latest/viz/#crud-verbs: \u00a7\n\u27e829\u27e9 https://docs.rs/viz/latest/viz/#resources: \u00a7\n\u27e830\u27e9 https://docs.rs/viz/latest/viz/#nested: \u00a7\n\u27e831\u27e9 https://docs.rs/viz/latest/viz/#modules: \u00a7\n\u27e832\u27e9 https://docs.rs/viz/latest/viz/future/index.html: mod viz::future - future\n\u27e833\u27e9 https://docs.rs/viz/latest/viz/handler/index.html: mod viz::handler - handler\n\u27e834\u27e9 https://docs.rs/viz/latest/viz/handlers/index.html: mod viz::handlers - handlers\n\u27e835\u27e9 https://docs.rs/viz/latest/viz/header/index.html: mod viz::header - header\n\u27e836\u27e9 https://docs.rs/viz/latest/viz/headers/index.html: mod viz::headers - headers\n\u27e837\u27e9 https://docs.rs/viz/latest/viz/middleware/index.html: mod viz::middleware - middleware\n\u27e838\u27e9 https://docs.rs/viz/latest/viz/tls/index.html: mod viz::tls - tls\n\u27e839\u27e9 https://docs.rs/viz/latest/viz/types/index.html: mod viz::types - types\n\u27e840\u27e9 https://docs.rs/viz/latest/viz/#structs: \u00a7\n\u27e841\u27e9 https://docs.rs/viz/latest/viz/struct.BoxHandler.html: struct viz::BoxHandler - BoxHandler\n\u27e842\u27e9 https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html: trait core::clone::Clone - `Clone`\n\u27e843\u27e9 https://doc.rust-lang.org/nightly/core/marker/trait.Send.html: trait core::marker::Send - `Send`\n\u27e844\u27e9 https://docs.rs/viz/latest/viz/struct.Bytes.html: struct viz::Bytes - Bytes\n\u27e845\u27e9 https://docs.rs/viz/latest/viz/struct.BytesMut.html: struct viz::BytesMut - BytesMut\n\u27e846\u27e9 https://docs.rs/viz/latest/viz/struct.Incoming.html: struct viz::Incoming - Incoming\n\u27e847\u27e9 https://docs.rs/viz/latest/viz/struct.Io.html: struct viz::Io - Io\n\u27e848\u27e9 https://docs.rs/viz/latest/viz/struct.Method.html: struct viz::Method - Method\n\u27e849\u27e9 https://docs.rs/viz/latest/viz/struct.Path.html: struct viz::Path - Path\n\u27e850\u27e9 https://docs.rs/viz/latest/viz/struct.PathTree.html: struct viz::PathTree - PathTree\n\u27e851\u27e9 https://docs.rs/viz/latest/viz/struct.Resources.html: struct viz::Resources - Resources\n\u27e852\u27e9 https://docs.rs/viz/latest/viz/struct.Responder.html: struct viz::Responder - Responder\n\u27e853\u27e9 https://docs.rs/viz/latest/viz/type.Response.html: type viz::Response - `Response`\n\u27e854\u27e9 https://docs.rs/viz/latest/viz/struct.Route.html: struct viz::Route - Route\n\u27e855\u27e9 https://docs.rs/viz/latest/viz/struct.Router.html: struct viz::Router - Router\n\u27e856\u27e9 https://docs.rs/viz/latest/viz/struct.Server.html: struct viz::Server - Server\n\u27e857\u27e9 https://docs.rs/viz/latest/viz/struct.StatusCode.html: struct viz::StatusCode - StatusCode\n\u27e858\u27e9 https://docs.rs/viz/latest/viz/struct.Tree.html: struct viz::Tree - Tree\n\u27e859\u27e9 https://docs.rs/viz/latest/viz/#enums: \u00a7\n\u27e860\u27e9 https://docs.rs/viz/latest/viz/enum.Body.html: enum viz::Body - Body\n\u27e861\u27e9 https://docs.rs/viz/latest/viz/enum.BodyState.html: enum viz::BodyState - BodyState\n\u27e862\u27e9 https://docs.rs/viz/latest/viz/enum.Error.html: enum viz::Error - Error\n\u27e863\u27e9 https://docs.rs/viz/latest/viz/#traits: \u00a7\n\u27e864\u27e9 https://docs.rs/viz/latest/viz/trait.FnExt.html: trait viz::FnExt - FnExt\n\u27e865\u27e9 https://docs.rs/viz/latest/viz/trait.Future.html: trait viz::Future - Future\n\u27e866\u27e9 https://docs.rs/viz/std/keyword.async.html: `async`\n\u27e867\u27e9 https://docs.rs/viz/latest/viz/trait.HttpBody.html: trait viz::HttpBody - HttpBody\n\u27e868\u27e9 https://docs.rs/viz/latest/viz/trait.IntoHandler.html: trait viz::IntoHandler - IntoHandler\n\u27e869\u27e9 https://docs.rs/viz/latest/viz/trait.IntoResponse.html: trait viz::IntoResponse - IntoResponse\n\u27e870\u27e9 https://docs.rs/viz/latest/viz/trait.Listener.html: trait viz::Listener - Listener\n\u27e871\u27e9 https://docs.rs/viz/latest/viz/trait.RequestExt.html: trait viz::RequestExt - RequestExt\n\u27e872\u27e9 https://docs.rs/viz/latest/viz/trait.RequestLimitsExt.html: trait viz::RequestLimitsExt - RequestLimitsExt\n\u27e873\u27e9 https://docs.rs/viz/latest/viz/trait.ResponseExt.html: trait viz::ResponseExt - ResponseExt\n\u27e874\u27e9 https://docs.rs/viz/latest/viz/#functions: \u00a7\n\u27e875\u27e9 https://docs.rs/viz/latest/viz/fn.any.html: fn viz::any - any\n\u27e876\u27e9 https://docs.rs/viz/latest/viz/fn.connect.html: fn viz::connect - connect\n\u27e877\u27e9 https://docs.rs/viz/latest/viz/fn.delete.html: fn viz::delete - delete\n\u27e878\u27e9 https://docs.rs/viz/latest/viz/fn.get.html: fn viz::get - get\n\u27e879\u27e9 https://docs.rs/viz/latest/viz/fn.head.html: fn viz::head - head\n\u27e880\u27e9 https://docs.rs/viz/latest/viz/fn.on.html: fn viz::on - on\n\u27e881\u27e9 https://docs.rs/viz/latest/viz/fn.options.html: fn viz::options - options\n\u27e882\u27e9 https://docs.rs/viz/latest/viz/fn.patch.html: fn viz::patch - patch\n\u27e883\u27e9 https://docs.rs/viz/latest/viz/fn.post.html: fn viz::post - post\n\u27e884\u27e9 https://docs.rs/viz/latest/viz/fn.put.html: fn viz::put - put\n\u27e885\u27e9 https://docs.rs/viz/latest/viz/fn.serve.html: fn viz::serve - serve\n\u27e886\u27e9 https://docs.rs/viz/latest/viz/fn.trace.html: fn viz::trace - trace\n\u27e887\u27e9 https://docs.rs/viz/latest/viz/#types: \u00a7\n\u27e888\u27e9 https://docs.rs/viz/latest/viz/type.BoxError.html: type viz::BoxError - BoxError\n\u27e889\u27e9 https://doc.rust-lang.org/nightly/core/error/trait.Error.html: trait core::error::Error - `StdError`\n\u27e890\u27e9 https://docs.rs/viz/latest/viz/type.Next.html: type viz::Next - Next\n\u27e891\u27e9 https://docs.rs/viz/latest/viz/type.Result.html: type viz::Result - Result\n\u27e892\u27e9 https://docs.rs/viz/latest/viz/#attributes: \u00a7\n\u27e893\u27e9 https://docs.rs/viz/latest/viz/attr.async_trait.html: attr viz::async_trait - async_trait\n\u27e894\u27e9 https://docs.rs/viz/latest/viz/attr.handler.html: attr viz::handler - handler\n\u27e895\u27e9 https://docs.rs/viz/latest/viz/#derives: \u00a7\n\u27e896\u27e9 https://docs.rs/viz/latest/viz/derive.ThisError.html: derive viz::ThisError - ThisError\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 22059,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "111883.5203675"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/viz",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [64 releases](https://lib.rs/crates/viz/versions)\n0.10.0 |  Dec 28, 2024   \n---|---  \n0.9.0 |  Oct 3, 2024   \n0.8.8 |  Jun 23, 2024   \n0.8.4 |  Mar 23, 2024   \n0.1.0-alpha |  Jun 28, 2020   \n#**239** in [Asynchronous](https://lib.rs/asynchronous \"Crates to help you deal with events independently of the main program flow, using techniques like futures, promises, waiting, or eventing.\")\nDownload history 165/week @ 2025-03-02 112/week @ 2025-03-09 1140/week @ 2025-03-16 191/week @ 2025-03-23 94/week @ 2025-03-30 114/week @ 2025-04-06 217/week @ 2025-04-13 201/week @ 2025-04-20 57/week @ 2025-04-27 45/week @ 2025-05-04 111/week @ 2025-05-11 200/week @ 2025-05-18 170/week @ 2025-05-25 150/week @ 2025-06-01 147/week @ 2025-06-08 98/week @ 2025-06-15\n**574** downloads per month Used in [ **3** crates](https://lib.rs/crates/viz/rev)\n**MIT** license \n290KB  7K  SLoC\n![](https://img.gs/czjpqfbdkz/200/https://raw.githubusercontent.com/viz-rs/viz-rs.github.io/gh-pages/logo.svg)\n#  [Viz](https://viz.rs)\n**Fast, robust, flexible, lightweight web framework for Rust**\n[ ![Safety!](https://img.shields.io/badge/-safety!-success?style=flat-square)](https://github.com/) [ ![Docs.rs docs](https://img.shields.io/badge/docs-latest-blue.svg?style=flat-square)](https://docs.rs/viz) [ ![Crates.io version](https://img.shields.io/crates/v/viz.svg?style=flat-square)](https://crates.io/crates/viz) [ ![Download](https://img.shields.io/crates/d/viz.svg?style=flat-square)](https://crates.io/crates/viz) [ ![Codecov](https://img.shields.io/codecov/c/github/viz-rs/viz?style=flat-square)](https://app.codecov.io/gh/viz-rs/viz) [ ![Discord](https://img.shields.io/discord/699908392105541722?logo=discord&style=flat-square)](https://discord.gg/m9yAsf6jg6)\n## Features\n  * **Safety** ````#!``[``forbid```(```unsafe_code```)```]````\n  * Lightweight\n  * Robust ``Routing``\n  * Handy ``Extractors``\n  * Simple + Flexible ``Handler`` & ``Middleware``\n  * Supports Tower ``Service``\n\n\n## Hello Viz\n```\n``use` `std`::```net`::``SocketAddr`;`\n`use` `tokio`::```net`::``TcpListener`;`\n`use` `viz`::````{`serve`,` Request`,` `Result``,` Router```}```;`\nasync ``fn` `index`````(``_`: Request```)```` ``->` ``Result``<``&``'static` `str``>``` ````{`\n  `Ok``(```\"`Hello, Viz!`\"```)`\n```}```\n``#``[``tokio`::`main``]``\nasync ``fn` `main`````(````)```` ``->` ``Result``<``(``)``>``` ````{`\n  `let` addr `=` `SocketAddr`::``from`(``(``[``127``,` `0``,` `0``,` `1``]``,` `3000``)``)``;`\n  `let` listener `=` `TcpListener`::``bind`(`addr`)``.`await`?``;`\n  `println!``(```\"`listening on http://`{addr}``\"```)``;`\n  `let` app `=` `Router`::``new`(``)``.``get``(```\"`/`\"```,` index`)``;`\n  `if` `let` `Err``(`e`)` `=` `serve``(`listener`,` app`)``.`await `{`\n    `println!``(```\"``{e}``\"```)``;`\n  `}`\n  `Ok``(``(``)``)`\n```}```\n`\n```\n\nMore examples can be found [here](https://github.com/viz-rs/viz/tree/main/examples).\n## Get started\nOpen [Viz.rs](https://viz.rs), select language or version.\n## License\nThis project is licensed under the [MIT license](https://github.com/viz-rs/viz/blob/bb5332b9e4b56d09de0115c431af05ee76f45f28/viz/LICENSE).\n## Author\n  * [@fundon@fosstodon.org](https://fosstodon.org/@fundon)\n  * @_fundon\n\n\n#### Dependencies\n~7\u201323MB  ~376K SLoC\n  * [http1](https://lib.rs/crates/viz/features#feature-http1 \"default feature\") [http2?](https://lib.rs/crates/viz/features#feature-http2 \"optional feature\") [hyper](https://lib.rs/crates/hyper \"new\") 1.5\n  * [http1](https://lib.rs/crates/viz/features#feature-http1 \"default feature\") [http2?](https://lib.rs/crates/viz/features#feature-http2 \"optional feature\") [hyper-util](https://lib.rs/crates/hyper-util \"0.1.10\")[+server](https://lib.rs/crates/hyper-util/features#feature-server)[+tokio](https://lib.rs/crates/hyper-util/features#feature-tokio)[+server-auto](https://lib.rs/crates/hyper-util/features#feature-server-auto)[+server-graceful](https://lib.rs/crates/hyper-util/features#feature-server-graceful)\n  * [tokio](https://lib.rs/crates/tokio \"1.38\")[+net](https://lib.rs/crates/tokio/features#feature-net)[+macros](https://lib.rs/crates/tokio/features#feature-macros)\n  * [tokio-util](https://lib.rs/crates/tokio-util \"0.7\")[+net](https://lib.rs/crates/tokio-util/features#feature-net)\n  * [tracing](https://lib.rs/crates/tracing \"0.1\")\n  * [viz-core](https://lib.rs/crates/viz-core \"new\") 0.10\n  * [viz-router](https://lib.rs/crates/viz-router \"new\") 0.10\n  * [native-tls?](https://lib.rs/crates/viz/features#feature-native-tls \"optional feature\") [rustls?](https://lib.rs/crates/viz/features#feature-rustls \"optional feature\") [futures-util](https://lib.rs/crates/futures-util \"0.3\")\n  * [rustls?](https://lib.rs/crates/viz/features#feature-rustls \"optional feature\") [rustls-pemfile](https://lib.rs/crates/rustls-pemfile \"new\") 2.1\n  * [rustls?](https://lib.rs/crates/viz/features#feature-rustls \"optional feature\") [tokio-rustls](https://lib.rs/crates/tokio-rustls \"new\") 0.26\n  * [native-tls?](https://lib.rs/crates/viz/features#feature-native-tls \"optional feature\") [tokio-native-tls](https://lib.rs/crates/tokio-native-tls \"0.3\")\n  * [embed?](https://lib.rs/crates/viz/features#feature-embed \"optional feature\") [handlers?](https://lib.rs/crates/viz/features#feature-handlers \"optional feature\") [otel-prometheus?](https://lib.rs/crates/viz/features#feature-otel-prometheus \"optional feature\") [serve?](https://lib.rs/crates/viz/features#feature-serve \"optional feature\") [viz-handlers](https://lib.rs/crates/viz-handlers \"0.10.0\")\n  * [macros?](https://lib.rs/crates/viz/features#feature-macros \"optional feature\") [viz-macros](https://lib.rs/crates/viz-macros \"0.2.0\")\n\n\n#### [Other features](https://lib.rs/crates/viz/features)\n  * [compression](https://lib.rs/crates/viz/features#feature-compression)\n  * [cookie](https://lib.rs/crates/viz/features#feature-cookie)\n  * [cookie-private](https://lib.rs/crates/viz/features#feature-cookie-private)\n  * [cookie-signed](https://lib.rs/crates/viz/features#feature-cookie-signed)\n  * [cors](https://lib.rs/crates/viz/features#feature-cors)\n  * [csrf](https://lib.rs/crates/viz/features#feature-csrf)\n  * [form](https://lib.rs/crates/viz/features#feature-form)\n  * [fs](https://lib.rs/crates/viz/features#feature-fs)\n  * [json](https://lib.rs/crates/viz/features#feature-json)\n  * [limits](https://lib.rs/crates/viz/features#feature-limits)\n  * [multipart](https://lib.rs/crates/viz/features#feature-multipart)\n  * [otel](https://lib.rs/crates/viz/features#feature-otel)\n  * [otel-metrics](https://lib.rs/crates/viz/features#feature-otel-metrics)\n  * [otel-tracing](https://lib.rs/crates/viz/features#feature-otel-tracing)\n  * [params](https://lib.rs/crates/viz/features#feature-params)\n  * [query](https://lib.rs/crates/viz/features#feature-query)\n  * [session](https://lib.rs/crates/viz/features#feature-session)\n  * [sse](https://lib.rs/crates/viz/features#feature-sse)\n  * [state](https://lib.rs/crates/viz/features#feature-state)\n  * [unix-socket](https://lib.rs/crates/viz/features#feature-unix-socket)\n  * [and more](https://lib.rs/crates/viz/features)\u2026\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  64 releases\u27e81\u27e9\n0.10.0 |  Dec 28, 2024   \n---|---  \n0.9.0 |  Oct 3, 2024   \n0.8.8 |  Jun 23, 2024   \n0.8.4 |  Mar 23, 2024   \n0.1.0-alpha |  Jun 28, 2020   \n#**239** in Asynchronous\u27e82\u27e9\nDownload history 165/week @ 2025-03-02 112/week @ 2025-03-09 1140/week @ 2025-03-16 191/week @ 2025-03-23 94/week @ 2025-03-30 114/week @ 2025-04-06 217/week @ 2025-04-13 201/week @ 2025-04-20 57/week @ 2025-04-27 45/week @ 2025-05-04 111/week @ 2025-05-11 200/week @ 2025-05-18 170/week @ 2025-05-25 150/week @ 2025-06-01 147/week @ 2025-06-08 98/week @ 2025-06-15\n**574** downloads per month Used in  **3** crates\u27e83\u27e9\n**MIT** license \n290KB  7K  SLoC\n![](https://img.gs/czjpqfbdkz/200/https://raw.githubusercontent.com/viz-rs/viz-rs.github.io/gh-pages/logo.svg)\n#  Viz\u27e84\u27e9\n**Fast, robust, flexible, lightweight web framework for Rust**\n ![Safety!\u27e85\u27e9](https://github.com/)  ![Docs.rs docs\u27e86\u27e9](https://docs.rs/viz)  ![Crates.io version\u27e87\u27e9](https://crates.io/crates/viz)  ![Download\u27e88\u27e9](https://crates.io/crates/viz)  ![Codecov\u27e89\u27e9](https://app.codecov.io/gh/viz-rs/viz)  ![Discord\u27e810\u27e9](https://discord.gg/m9yAsf6jg6)\n## Features\n  * **Safety** ````#!``[``forbid```(```unsafe_code```)```]````\n  * Lightweight\n  * Robust ``Routing``\n  * Handy ``Extractors``\n  * Simple + Flexible ``Handler`` & ``Middleware``\n  * Supports Tower ``Service``\n\n\n## Hello Viz\n```\n``use` `std`::```net`::``SocketAddr`;`\n`use` `tokio`::```net`::``TcpListener`;`\n`use` `viz`::````{`serve`,` Request`,` `Result``,` Router```}```;`\nasync ``fn` `index`````(``_`: Request```)```` ``->` ``Result``<``&``'static` `str``>``` ````{`\n  `Ok``(```\"`Hello, Viz!`\"```)`\n```}```\n``#``[``tokio`::`main``]``\nasync ``fn` `main`````(````)```` ``->` ``Result``<``(``)``>``` ````{`\n  `let` addr `=` `SocketAddr`::``from`(``(``[``127``,` `0``,` `0``,` `1``]``,` `3000``)``)``;`\n  `let` listener `=` `TcpListener`::``bind`(`addr`)``.`await`?``;`\n  `println!``(```\"`listening on http://`{addr}``\"```)``;`\n  `let` app `=` `Router`::``new`(``)``.``get``(```\"`/`\"```,` index`)``;`\n  `if` `let` `Err``(`e`)` `=` `serve``(`listener`,` app`)``.`await `{`\n    `println!``(```\"``{e}``\"```)``;`\n  `}`\n  `Ok``(``(``)``)`\n```}```\n`\n```\n\nMore examples can be found here\u27e811\u27e9.\n## Get started\nOpen Viz.rs\u27e84\u27e9, select language or version.\n## License\nThis project is licensed under the MIT license\u27e812\u27e9.\n## Author\n  * @fundon@fosstodon.org\u27e813\u27e9\n  * @_fundon\n\n\n#### Dependencies\n~7\u201323MB  ~376K SLoC\n  * http1\u27e814\u27e9 http2?\u27e815\u27e9 hyper\u27e816\u27e9 1.5\n  * http1\u27e814\u27e9 http2?\u27e815\u27e9 hyper-util\u27e817\u27e9+server\u27e818\u27e9+tokio\u27e819\u27e9+server-auto\u27e820\u27e9+server-graceful\u27e821\u27e9\n  * tokio\u27e822\u27e9+net\u27e823\u27e9+macros\u27e824\u27e9\n  * tokio-util\u27e825\u27e9+net\u27e826\u27e9\n  * tracing\u27e827\u27e9\n  * viz-core\u27e828\u27e9 0.10\n  * viz-router\u27e829\u27e9 0.10\n  * native-tls?\u27e830\u27e9 rustls?\u27e831\u27e9 futures-util\u27e832\u27e9\n  * rustls?\u27e831\u27e9 rustls-pemfile\u27e833\u27e9 2.1\n  * rustls?\u27e831\u27e9 tokio-rustls\u27e834\u27e9 0.26\n  * native-tls?\u27e830\u27e9 tokio-native-tls\u27e835\u27e9\n  * embed?\u27e836\u27e9 handlers?\u27e837\u27e9 otel-prometheus?\u27e838\u27e9 serve?\u27e839\u27e9 viz-handlers\u27e840\u27e9\n  * macros?\u27e841\u27e9 viz-macros\u27e842\u27e9\n\n\n#### Other features\u27e843\u27e9\n  * compression\u27e844\u27e9\n  * cookie\u27e845\u27e9\n  * cookie-private\u27e846\u27e9\n  * cookie-signed\u27e847\u27e9\n  * cors\u27e848\u27e9\n  * csrf\u27e849\u27e9\n  * form\u27e850\u27e9\n  * fs\u27e851\u27e9\n  * json\u27e852\u27e9\n  * limits\u27e853\u27e9\n  * multipart\u27e854\u27e9\n  * otel\u27e855\u27e9\n  * otel-metrics\u27e856\u27e9\n  * otel-tracing\u27e857\u27e9\n  * params\u27e858\u27e9\n  * query\u27e859\u27e9\n  * session\u27e860\u27e9\n  * sse\u27e861\u27e9\n  * state\u27e862\u27e9\n  * unix-socket\u27e863\u27e9\n  * and more\u27e843\u27e9\u2026\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/viz/versions: 64 releases\n\u27e82\u27e9 https://lib.rs/asynchronous: Crates to help you deal with events independently of the main program flow, using techniques like futures, promises, waiting, or eventing. - Asynchronous\n\u27e83\u27e9 https://lib.rs/crates/viz/rev:  **3** crates\n\u27e84\u27e9 https://viz.rs: Viz\n\u27e85\u27e9 https://img.shields.io/badge/-safety!-success?style=flat-square:  ![Safety!\n\u27e86\u27e9 https://img.shields.io/badge/docs-latest-blue.svg?style=flat-square:  ![Docs.rs docs\n\u27e87\u27e9 https://img.shields.io/crates/v/viz.svg?style=flat-square:  ![Crates.io version\n\u27e88\u27e9 https://img.shields.io/crates/d/viz.svg?style=flat-square:  ![Download\n\u27e89\u27e9 https://img.shields.io/codecov/c/github/viz-rs/viz?style=flat-square:  ![Codecov\n\u27e810\u27e9 https://img.shields.io/discord/699908392105541722?logo=discord&style=flat-square:  ![Discord\n\u27e811\u27e9 https://github.com/viz-rs/viz/tree/main/examples: here\n\u27e812\u27e9 https://github.com/viz-rs/viz/blob/bb5332b9e4b56d09de0115c431af05ee76f45f28/viz/LICENSE: MIT license\n\u27e813\u27e9 https://fosstodon.org/@fundon: @fundon@fosstodon.org\n\u27e814\u27e9 https://lib.rs/crates/viz/features#feature-http1: default feature - http1\n\u27e815\u27e9 https://lib.rs/crates/viz/features#feature-http2: optional feature - http2?\n\u27e816\u27e9 https://lib.rs/crates/hyper: new - hyper\n\u27e817\u27e9 https://lib.rs/crates/hyper-util: 0.1.10 - hyper-util\n\u27e818\u27e9 https://lib.rs/crates/hyper-util/features#feature-server: +server\n\u27e819\u27e9 https://lib.rs/crates/hyper-util/features#feature-tokio: +tokio\n\u27e820\u27e9 https://lib.rs/crates/hyper-util/features#feature-server-auto: +server-auto\n\u27e821\u27e9 https://lib.rs/crates/hyper-util/features#feature-server-graceful: +server-graceful\n\u27e822\u27e9 https://lib.rs/crates/tokio: 1.38 - tokio\n\u27e823\u27e9 https://lib.rs/crates/tokio/features#feature-net: +net\n\u27e824\u27e9 https://lib.rs/crates/tokio/features#feature-macros: +macros\n\u27e825\u27e9 https://lib.rs/crates/tokio-util: 0.7 - tokio-util\n\u27e826\u27e9 https://lib.rs/crates/tokio-util/features#feature-net: +net\n\u27e827\u27e9 https://lib.rs/crates/tracing: 0.1 - tracing\n\u27e828\u27e9 https://lib.rs/crates/viz-core: new - viz-core\n\u27e829\u27e9 https://lib.rs/crates/viz-router: new - viz-router\n\u27e830\u27e9 https://lib.rs/crates/viz/features#feature-native-tls: optional feature - native-tls?\n\u27e831\u27e9 https://lib.rs/crates/viz/features#feature-rustls: optional feature - rustls?\n\u27e832\u27e9 https://lib.rs/crates/futures-util: 0.3 - futures-util\n\u27e833\u27e9 https://lib.rs/crates/rustls-pemfile: new - rustls-pemfile\n\u27e834\u27e9 https://lib.rs/crates/tokio-rustls: new - tokio-rustls\n\u27e835\u27e9 https://lib.rs/crates/tokio-native-tls: 0.3 - tokio-native-tls\n\u27e836\u27e9 https://lib.rs/crates/viz/features#feature-embed: optional feature - embed?\n\u27e837\u27e9 https://lib.rs/crates/viz/features#feature-handlers: optional feature - handlers?\n\u27e838\u27e9 https://lib.rs/crates/viz/features#feature-otel-prometheus: optional feature - otel-prometheus?\n\u27e839\u27e9 https://lib.rs/crates/viz/features#feature-serve: optional feature - serve?\n\u27e840\u27e9 https://lib.rs/crates/viz-handlers: 0.10.0 - viz-handlers\n\u27e841\u27e9 https://lib.rs/crates/viz/features#feature-macros: optional feature - macros?\n\u27e842\u27e9 https://lib.rs/crates/viz-macros: 0.2.0 - viz-macros\n\u27e843\u27e9 https://lib.rs/crates/viz/features: Other features\n\u27e844\u27e9 https://lib.rs/crates/viz/features#feature-compression: compression\n\u27e845\u27e9 https://lib.rs/crates/viz/features#feature-cookie: cookie\n\u27e846\u27e9 https://lib.rs/crates/viz/features#feature-cookie-private: cookie-private\n\u27e847\u27e9 https://lib.rs/crates/viz/features#feature-cookie-signed: cookie-signed\n\u27e848\u27e9 https://lib.rs/crates/viz/features#feature-cors: cors\n\u27e849\u27e9 https://lib.rs/crates/viz/features#feature-csrf: csrf\n\u27e850\u27e9 https://lib.rs/crates/viz/features#feature-form: form\n\u27e851\u27e9 https://lib.rs/crates/viz/features#feature-fs: fs\n\u27e852\u27e9 https://lib.rs/crates/viz/features#feature-json: json\n\u27e853\u27e9 https://lib.rs/crates/viz/features#feature-limits: limits\n\u27e854\u27e9 https://lib.rs/crates/viz/features#feature-multipart: multipart\n\u27e855\u27e9 https://lib.rs/crates/viz/features#feature-otel: otel\n\u27e856\u27e9 https://lib.rs/crates/viz/features#feature-otel-metrics: otel-metrics\n\u27e857\u27e9 https://lib.rs/crates/viz/features#feature-otel-tracing: otel-tracing\n\u27e858\u27e9 https://lib.rs/crates/viz/features#feature-params: params\n\u27e859\u27e9 https://lib.rs/crates/viz/features#feature-query: query\n\u27e860\u27e9 https://lib.rs/crates/viz/features#feature-session: session\n\u27e861\u27e9 https://lib.rs/crates/viz/features#feature-sse: sse\n\u27e862\u27e9 https://lib.rs/crates/viz/features#feature-state: state\n\u27e863\u27e9 https://lib.rs/crates/viz/features#feature-unix-socket: unix-socket\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 7112,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "111883.9150737"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pin_project_lite",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.15\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libpin_project_lite-4072af2875183aba.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fnv",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libfnv-da722296a25cad98.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cpufeatures@0.2.16",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cpufeatures-0.2.16\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cpufeatures",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cpufeatures-0.2.16\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libcpufeatures-9cf053b407f38876.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.14",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\itoa-1.0.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "itoa",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\itoa-1.0.14\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libitoa-af991b26e9b1ce36.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.14",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.14\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libunicode_ident-6d74e9fad9aef6d6.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libunicode_ident-6d74e9fad9aef6d6.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-core-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-core-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libfutures_core-308f9a7b9ba0908e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.20.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.20.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "once_cell",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.20.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "race",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libonce_cell-aee3b9768c8bcaf5.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-io@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-io-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_io",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-io-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libfutures_io-76ff1e12022b56d6.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pin-utils@0.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-utils-0.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pin_utils",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-utils-0.1.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libpin_utils-9d9a9e5e1b2c045c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.2.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "getrandom",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.2.15\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libgetrandom-76a7c1f034b56ee0.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\subtle-2.6.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "subtle",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\subtle-2.6.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "i128",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libsubtle-bde6055ebb0e03cb.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-task-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_task",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-task-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libfutures_task-ecc531f5e570f7c2.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#opaque-debug@0.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\opaque-debug-0.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "opaque_debug",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\opaque-debug-0.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libopaque_debug-3bfd2b91078f8694.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "byteorder",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libbyteorder-0ff5a2bbb0a25f50.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.92\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.92\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\proc-macro2-8c9ab50c3af1cc80\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\proc-macro2-8c9ab50c3af1cc80\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "equivalent",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.1\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libequivalent-1ddcc1c34f146777.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-sink-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_sink",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-sink-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libfutures_sink-39699e5e37bf0478.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.217",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.217\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.217\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "derive",
                "serde_derive",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\serde-bab4837791f58441\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\serde-bab4837791f58441\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\version_check-0.9.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "version_check",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\version_check-0.9.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libversion_check-8a7cb6ed787a6dad.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libversion_check-8a7cb6ed787a6dad.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rand_core-0.6.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rand_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rand_core-0.6.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "getrandom",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\librand_core-49237eda3e682635.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bytes@1.9.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytes-1.9.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytes",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytes-1.9.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libbytes-3349875314fc735b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#httpdate@1.0.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httpdate-1.0.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "httpdate",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httpdate-1.0.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libhttpdate-77358cb654aeba2b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#time-core@0.1.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\time-core-0.1.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "time_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\time-core-0.1.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libtime_core-551b0531ee4c4ec6.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libtime_core-551b0531ee4c4ec6.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\proc-macro2-d4cbd6b92c18c9b0\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.217",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\serde-1e90055f719ce720\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#httparse@1.9.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httparse-1.9.5\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httparse-1.9.5\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\httparse-5233984f98c1eeb7\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\httparse-5233984f98c1eeb7\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.17.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.17.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.17.0\\build\\main.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\typenum-1ede41c9f5fe6591\\build-script-main.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\typenum-1ede41c9f5fe6591\\build_script_main.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\memchr-2.7.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "memchr",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\memchr-2.7.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libmemchr-e48551b26f942822.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#powerfmt@0.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\powerfmt-0.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "powerfmt",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\powerfmt-0.2.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libpowerfmt-b5a769e72545940a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing-core@0.1.33",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-core-0.1.33\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tracing_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-core-0.1.33\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "once_cell",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libtracing_core-c50b9dbba68fa614.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-conv@0.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-conv-0.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_conv",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-conv-0.1.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libnum_conv-f55f3240717315a6.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libnum_conv-f55f3240717315a6.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#httparse@1.9.5",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "httparse_simd_neon_intrinsics",
                "httparse_simd"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\httparse-fb8df6f6887778a1\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ryu-1.0.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ryu",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ryu-1.0.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libryu-fa255a51d092fdd1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.13.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.13.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.13.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "const_generics",
                "const_new"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libsmallvec-a5e663bcba0fc4dc.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\generic-array-0.14.7\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\generic-array-0.14.7\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "more_lengths"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\generic-array-8e5b32e26f9f36b6\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\generic-array-8e5b32e26f9f36b6\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#uncased@0.9.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\uncased-0.9.10\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\uncased-0.9.10\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\uncased-9daea56c9ef076d2\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\uncased-9daea56c9ef076d2\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#atomic-waker@1.1.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\atomic-waker-1.1.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "atomic_waker",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\atomic-waker-1.1.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libatomic_waker-51a570a3292c2eef.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.17.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\typenum-2aff0e15c6771793\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\percent-encoding-2.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "percent_encoding",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\percent-encoding-2.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libpercent_encoding-3e311531e44ed010.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "relaxed_coherence"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\generic-array-2379b21334ff8e3d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.9\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.9\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\thiserror-89df4f400560b7c2\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\thiserror-89df4f400560b7c2\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.134",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_json-1.0.134\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_json-1.0.134\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\serde_json-9c6ad190edf2311d\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\serde_json-9c6ad190edf2311d\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\slab-3fa685af315ea699\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\slab-3fa685af315ea699\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#uncased@0.9.10",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "const_fn_transmute"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\uncased-1cc0b825efd205b2\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#httparse@1.9.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httparse-1.9.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "httparse",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httparse-1.9.5\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libhttparse-775706677f7443c1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cookie@0.18.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cookie-0.18.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cookie-0.18.1\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "aes-gcm",
                "base64",
                "percent-encode",
                "percent-encoding",
                "private",
                "rand",
                "subtle"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\cookie-6b769143fb810a58\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\cookie-6b769143fb810a58\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hashbrown",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libhashbrown-89ab50377b31b71f.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-conv@0.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-conv-0.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_conv",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-conv-0.1.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libnum_conv-44c875d5f379c963.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.134",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "fast_arithmetic=\"64\""
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\serde_json-97e5058f09e4c5f0\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.9",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\thiserror-7444e2cd9fa670c7\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#mime@0.3.17",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\mime-0.3.17\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "mime",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\mime-0.3.17\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libmime-d7c0949541c6c582.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-channel@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-channel-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_channel",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-channel-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libfutures_channel-1664bbe1dae9f701.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\slab-ad85cae5ab0b1648\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#time-core@0.1.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\time-core-0.1.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "time_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\time-core-0.1.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libtime_core-10bcba958eeefd22.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cookie@0.18.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\cookie-08e02b5760dda2b1\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#http@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-1.2.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libhttp-e103293f10ff02d0.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#sync_wrapper@1.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\sync_wrapper-1.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sync_wrapper",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\sync_wrapper-1.0.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libsync_wrapper-a82ed70061a64475.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#form_urlencoded@1.2.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\form_urlencoded-1.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "form_urlencoded",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\form_urlencoded-1.2.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libform_urlencoded-9704b762345f949f.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#uncased@0.9.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\uncased-0.9.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "uncased",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\uncased-0.9.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libuncased-d79b6c0af2aa49ff.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "slab",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libslab-f2a6797c9ae73fcb.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.92\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.92\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libproc_macro2-d5fd467c52aaa1fd.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libproc_macro2-d5fd467c52aaa1fd.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#headers-core@0.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\headers-core-0.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "headers_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\headers-core-0.3.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libheaders_core-ff8602b7f393d78e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#http-body@1.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-body-1.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http_body",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-body-1.0.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libhttp_body-8e7dfd9560c2ca08.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.38\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.38\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libquote-78373907426ec2ca.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libquote-78373907426ec2ca.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rfc7239@0.1.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rfc7239-0.1.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rfc7239",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rfc7239-0.1.3\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\librfc7239-8f5ab0a00532d9cc.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#path-tree@0.8.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\path-tree-0.8.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "path_tree",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\path-tree-0.8.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libpath_tree-971ded66b3e43eab.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64-0.22.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "base64",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64-0.22.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libbase64-86bc57838984083e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#base64@0.21.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64-0.21.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "base64",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64-0.21.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libbase64-11112dfb4e94ae4e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#deranged@0.3.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\deranged-0.3.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "deranged",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\deranged-0.3.11\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "powerfmt",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libderanged-5988c00c8330134a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.17.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.17.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "typenum",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.17.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libtypenum-3a52b75683a35e9c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.7.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\indexmap-2.7.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "indexmap",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\indexmap-2.7.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libindexmap-6a7ed67640a6e741.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\generic-array-0.14.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "generic_array",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\generic-array-0.14.7\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "more_lengths"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libgeneric_array-bdbdc4fa57285d44.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.1.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crypto-common-0.1.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crypto_common",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crypto-common-0.1.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "getrandom",
                "rand_core",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libcrypto_common-c0bb51e24f1a6fcc.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#block-buffer@0.10.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\block-buffer-0.10.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "block_buffer",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\block-buffer-0.10.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libblock_buffer-7ffa67b463ebbbbb.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#time-macros@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\time-macros-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "time_macros",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\time-macros-0.2.19\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "formatting",
                "parsing"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\time_macros-a763f7cf8700126b.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\time_macros-a763f7cf8700126b.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\time_macros-a763f7cf8700126b.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\time_macros-a763f7cf8700126b.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#inout@0.1.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\inout-0.1.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "inout",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\inout-0.1.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libinout-1a6fd018d4fcec79.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#universal-hash@0.5.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\universal-hash-0.5.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "universal_hash",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\universal-hash-0.5.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libuniversal_hash-10c1c18a93909a99.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#aead@0.5.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\aead-0.5.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "aead",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\aead-0.5.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "getrandom",
                "rand_core"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libaead-934e8b34d5496c46.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\digest-0.10.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "digest",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\digest-0.10.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "block-buffer",
                "core-api",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libdigest-1e1c92d483eb8bf7.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#polyval@0.6.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\polyval-0.6.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "polyval",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\polyval-0.6.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libpolyval-05c13dd277b3c4d1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cipher-0.4.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cipher",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cipher-0.4.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libcipher-fde9ad5bb4292337.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ghash@0.5.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ghash-0.5.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ghash",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ghash-0.5.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libghash-4b1b53d25c51217c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#sha1@0.10.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\sha1-0.10.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sha1",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\sha1-0.10.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libsha1-7219d086a8f5c185.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ctr@0.9.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ctr-0.9.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ctr",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ctr-0.9.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libctr-6f1ff9f2604e577a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.52.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Wdk",
                "Wdk_Foundation",
                "Wdk_Storage",
                "Wdk_Storage_FileSystem",
                "Wdk_System",
                "Wdk_System_IO",
                "Win32",
                "Win32_Foundation",
                "Win32_Networking",
                "Win32_Networking_WinSock",
                "Win32_Security",
                "Win32_Storage",
                "Win32_Storage_FileSystem",
                "Win32_System",
                "Win32_System_IO",
                "Win32_System_Pipes",
                "Win32_System_SystemServices",
                "Win32_System_Threading",
                "Win32_System_WindowsProgramming",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libwindows_sys-57f3f00a0d5fa83e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#aes@0.8.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\aes-0.8.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "aes",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\aes-0.8.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libaes-2029052dda94d020.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#aes-gcm@0.10.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\aes-gcm-0.10.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "aes_gcm",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\aes-gcm-0.10.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "aes",
                "alloc",
                "default",
                "getrandom",
                "rand_core"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libaes_gcm-f7f5a86069f75bcc.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#socket2@0.5.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\socket2-0.5.8\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "socket2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\socket2-0.5.8\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "all"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libsocket2-e8957009044418b4.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#headers@0.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\headers-0.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "headers",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\headers-0.4.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libheaders-ce451532ad7a9e50.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#mio@1.0.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\mio-1.0.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "mio",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\mio-1.0.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "net",
                "os-ext",
                "os-poll"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libmio-f1320216a75abe91.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#time@0.3.37",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\time-0.3.37\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "time",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\time-0.3.37\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "formatting",
                "macros",
                "parsing",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libtime-6131a278deb46066.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.92",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.92\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.92\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "extra-traits",
                "full",
                "parsing",
                "printing",
                "proc-macro",
                "visit-mut"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libsyn-a2fad76d61cc1286.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libsyn-a2fad76d61cc1286.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tokio-macros@2.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-macros-2.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "tokio_macros",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-macros-2.4.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\tokio_macros-5f82ac9e9d5066b3.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\tokio_macros-5f82ac9e9d5066b3.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\tokio_macros-5f82ac9e9d5066b3.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\tokio_macros-5f82ac9e9d5066b3.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zerocopy-derive@0.7.35",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerocopy-derive-0.7.35\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "zerocopy_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerocopy-derive-0.7.35\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\zerocopy_derive-6171cb464888fbdd.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\zerocopy_derive-6171cb464888fbdd.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\zerocopy_derive-6171cb464888fbdd.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\zerocopy_derive-6171cb464888fbdd.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-macro@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-macro-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "futures_macro",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-macro-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\futures_macro-809293a5499e525d.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\futures_macro-809293a5499e525d.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\futures_macro-809293a5499e525d.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\futures_macro-809293a5499e525d.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#async-trait@0.1.83",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-trait-0.1.83\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "async_trait",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-trait-0.1.83\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\async_trait-e70a964e305a41f3.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\async_trait-e70a964e305a41f3.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\async_trait-e70a964e305a41f3.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\async_trait-e70a964e305a41f3.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing-attributes@0.1.28",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-attributes-0.1.28\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "tracing_attributes",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-attributes-0.1.28\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\tracing_attributes-af6eb5246ad78c67.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\tracing_attributes-af6eb5246ad78c67.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\tracing_attributes-af6eb5246ad78c67.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\tracing_attributes-af6eb5246ad78c67.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@2.0.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-2.0.9\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "thiserror_impl",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-2.0.9\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\thiserror_impl-ff8a2fb861e0d8a4.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\thiserror_impl-ff8a2fb861e0d8a4.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\thiserror_impl-ff8a2fb861e0d8a4.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\thiserror_impl-ff8a2fb861e0d8a4.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-0.1.41\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tracing",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-0.1.41\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "attributes",
                "default",
                "std",
                "tracing-attributes"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libtracing-1e483d27e2dd109e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "thiserror",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.9\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libthiserror-d0d85adef3cfd7ad.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.7.35",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerocopy-0.7.35\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zerocopy",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerocopy-0.7.35\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "byteorder",
                "default",
                "derive",
                "simd",
                "zerocopy-derive"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libzerocopy-b6674179a7bc0da0.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ppv-lite86@0.2.20",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ppv-lite86-0.2.20\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ppv_lite86",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ppv-lite86-0.2.20\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "simd",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libppv_lite86-e4a48b79e822a205.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rand_chacha@0.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rand_chacha-0.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rand_chacha",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rand_chacha-0.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\librand_chacha-0ab7caca6239f671.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rand-0.8.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rand",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rand-0.8.5\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "getrandom",
                "libc",
                "rand_chacha",
                "std",
                "std_rng"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\librand-6007b020acac6b14.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.217",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_derive-1.0.217\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "serde_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_derive-1.0.217\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\serde_derive-04d991cf4f33dbd6.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\serde_derive-04d991cf4f33dbd6.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\serde_derive-04d991cf4f33dbd6.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\serde_derive-04d991cf4f33dbd6.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cookie@0.18.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cookie-0.18.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cookie",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cookie-0.18.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "aes-gcm",
                "base64",
                "percent-encode",
                "percent-encoding",
                "private",
                "rand",
                "subtle"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libcookie-292a61c62ca0656b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-util-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_util",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-util-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "async-await",
                "async-await-macro",
                "default",
                "futures-io",
                "futures-macro",
                "io",
                "memchr",
                "slab",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libfutures_util-3b4eb22b737b4853.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#http-body-util@0.1.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-body-util-0.1.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http_body_util",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-body-util-0.1.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libhttp_body_util-c2d17d0769ae2253.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.217",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.217\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "serde",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.217\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "derive",
                "serde_derive",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libserde-6b1c99bf6a962805.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_urlencoded@0.7.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_urlencoded-0.7.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "serde_urlencoded",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_urlencoded-0.7.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libserde_urlencoded-6a792181c20a2885.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#form-data@0.6.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\form-data-0.6.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "form_data",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\form-data-0.6.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "async",
                "default",
                "futures-util"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libform_data-85a913ccdb3032da.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.134",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_json-1.0.134\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "serde_json",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_json-1.0.134\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libserde_json-6fa79c00eebcd869.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#sessions-core@0.7.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\sessions-core-0.7.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sessions_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\sessions-core-0.7.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libsessions_core-0c158f85d6bd8d6b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tokio@1.42.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-1.42.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tokio",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-1.42.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "bytes",
                "default",
                "io-util",
                "libc",
                "macros",
                "mio",
                "net",
                "rt",
                "socket2",
                "sync",
                "time",
                "tokio-macros",
                "windows-sys"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libtokio-e7398583d01e5f9e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tokio-util@0.7.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-util-0.7.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tokio_util",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-util-0.7.13\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "codec",
                "default",
                "io",
                "net"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libtokio_util-f3613ad1723dd6a4.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#h2@0.4.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\h2-0.4.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "h2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\h2-0.4.7\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libh2-ebdc893661ba1c41.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hyper@1.5.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hyper-1.5.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hyper",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hyper-1.5.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "http1",
                "http2",
                "server"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libhyper-c73bf1471ee944db.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hyper-util@0.1.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hyper-util-0.1.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hyper_util",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hyper-util-0.1.10\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "http1",
                "http2",
                "server",
                "server-auto",
                "server-graceful",
                "tokio"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libhyper_util-8c5cd0f800b3729d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#viz-core@0.10.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\viz-core-0.10.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "viz_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\viz-core-0.10.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "cookie",
                "cookie-private",
                "default",
                "form",
                "json",
                "limits",
                "multipart",
                "params",
                "query",
                "session",
                "state"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libviz_core-87778e40d3403c72.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#viz-router@0.10.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\viz-router-0.10.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "viz_router",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\viz-router-0.10.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libviz_router-a25b8157e10ee1dd.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpjrpvvg7_/viz-0.10.0#viz@0.10.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "viz",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "cookie",
                "cookie-private",
                "default",
                "form",
                "http1",
                "json",
                "limits",
                "multipart",
                "params",
                "query",
                "session",
                "state"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libviz-99d273192820033f.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.92\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.92\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\proc-macro2-8c9ab50c3af1cc80\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\proc-macro2-8c9ab50c3af1cc80\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\proc-macro2-d4cbd6b92c18c9b0\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.14",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.14\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libunicode_ident-6d74e9fad9aef6d6.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libunicode_ident-6d74e9fad9aef6d6.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\version_check-0.9.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "version_check",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\version_check-0.9.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libversion_check-8a7cb6ed787a6dad.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libversion_check-8a7cb6ed787a6dad.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.17.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.17.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.17.0\\build\\main.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\typenum-1ede41c9f5fe6591\\build-script-main.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\typenum-1ede41c9f5fe6591\\build_script_main.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.14",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\itoa-1.0.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "itoa",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\itoa-1.0.14\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libitoa-af991b26e9b1ce36.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bytes@1.9.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytes-1.9.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytes",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytes-1.9.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libbytes-3349875314fc735b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fnv",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libfnv-da722296a25cad98.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pin_project_lite",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.15\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libpin_project_lite-4072af2875183aba.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-core-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-core-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libfutures_core-308f9a7b9ba0908e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cpufeatures@0.2.16",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cpufeatures-0.2.16\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cpufeatures",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cpufeatures-0.2.16\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libcpufeatures-9cf053b407f38876.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\memchr-2.7.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "memchr",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\memchr-2.7.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libmemchr-e48551b26f942822.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.217",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.217\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.217\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "derive",
                "serde_derive",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\serde-bab4837791f58441\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\serde-bab4837791f58441\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.20.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.20.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "once_cell",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.20.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "race",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libonce_cell-aee3b9768c8bcaf5.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.92\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.92\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libproc_macro2-d5fd467c52aaa1fd.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libproc_macro2-d5fd467c52aaa1fd.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.17.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\typenum-2aff0e15c6771793\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\generic-array-0.14.7\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\generic-array-0.14.7\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "more_lengths"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\generic-array-8e5b32e26f9f36b6\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\generic-array-8e5b32e26f9f36b6\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.2.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "getrandom",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.2.15\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libgetrandom-76a7c1f034b56ee0.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\slab-3fa685af315ea699\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\slab-3fa685af315ea699\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#http@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-1.2.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libhttp-e103293f10ff02d0.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.217",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\serde-1e90055f719ce720\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing-core@0.1.33",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-core-0.1.33\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tracing_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-core-0.1.33\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "once_cell",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libtracing_core-c50b9dbba68fa614.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-task-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_task",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-task-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libfutures_task-ecc531f5e570f7c2.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pin-utils@0.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-utils-0.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pin_utils",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-utils-0.1.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libpin_utils-9d9a9e5e1b2c045c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#httparse@1.9.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httparse-1.9.5\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httparse-1.9.5\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\httparse-5233984f98c1eeb7\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\httparse-5233984f98c1eeb7\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-io@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-io-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_io",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-io-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libfutures_io-76ff1e12022b56d6.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "byteorder",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libbyteorder-0ff5a2bbb0a25f50.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\subtle-2.6.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "subtle",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\subtle-2.6.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "i128",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libsubtle-bde6055ebb0e03cb.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "equivalent",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.1\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libequivalent-1ddcc1c34f146777.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.38\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.38\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libquote-78373907426ec2ca.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libquote-78373907426ec2ca.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.17.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.17.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "typenum",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.17.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libtypenum-3a52b75683a35e9c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "relaxed_coherence"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\generic-array-2379b21334ff8e3d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rand_core-0.6.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rand_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rand_core-0.6.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "getrandom",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\librand_core-49237eda3e682635.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\slab-ad85cae5ab0b1648\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#httparse@1.9.5",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "httparse_simd_neon_intrinsics",
                "httparse_simd"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\httparse-fb8df6f6887778a1\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hashbrown",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libhashbrown-89ab50377b31b71f.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#opaque-debug@0.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\opaque-debug-0.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "opaque_debug",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\opaque-debug-0.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libopaque_debug-3bfd2b91078f8694.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-sink-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_sink",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-sink-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libfutures_sink-39699e5e37bf0478.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#http-body@1.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-body-1.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http_body",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-body-1.0.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libhttp_body-8e7dfd9560c2ca08.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#uncased@0.9.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\uncased-0.9.10\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\uncased-0.9.10\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\uncased-9daea56c9ef076d2\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\uncased-9daea56c9ef076d2\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.9\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.9\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\thiserror-89df4f400560b7c2\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\thiserror-89df4f400560b7c2\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.134",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_json-1.0.134\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_json-1.0.134\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\serde_json-9c6ad190edf2311d\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\serde_json-9c6ad190edf2311d\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#atomic-waker@1.1.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\atomic-waker-1.1.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "atomic_waker",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\atomic-waker-1.1.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libatomic_waker-51a570a3292c2eef.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\percent-encoding-2.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "percent_encoding",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\percent-encoding-2.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libpercent_encoding-3e311531e44ed010.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.92",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.92\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.92\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "extra-traits",
                "full",
                "parsing",
                "printing",
                "proc-macro",
                "visit-mut"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libsyn-a2fad76d61cc1286.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libsyn-a2fad76d61cc1286.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\generic-array-0.14.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "generic_array",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\generic-array-0.14.7\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "more_lengths"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libgeneric_array-bdbdc4fa57285d44.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "slab",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libslab-f2a6797c9ae73fcb.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.7.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\indexmap-2.7.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "indexmap",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\indexmap-2.7.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libindexmap-6a7ed67640a6e741.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#httparse@1.9.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httparse-1.9.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "httparse",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httparse-1.9.5\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libhttparse-775706677f7443c1.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-conv@0.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-conv-0.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_conv",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-conv-0.1.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libnum_conv-f55f3240717315a6.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libnum_conv-f55f3240717315a6.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.13.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.13.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.13.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "const_generics",
                "const_new"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libsmallvec-a5e663bcba0fc4dc.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#time-core@0.1.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\time-core-0.1.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "time_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\time-core-0.1.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libtime_core-551b0531ee4c4ec6.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libtime_core-551b0531ee4c4ec6.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ryu-1.0.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ryu",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ryu-1.0.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libryu-fa255a51d092fdd1.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#powerfmt@0.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\powerfmt-0.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "powerfmt",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\powerfmt-0.2.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libpowerfmt-b5a769e72545940a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#httpdate@1.0.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httpdate-1.0.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "httpdate",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httpdate-1.0.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libhttpdate-77358cb654aeba2b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#uncased@0.9.10",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "const_fn_transmute"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\uncased-1cc0b825efd205b2\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.134",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "fast_arithmetic=\"64\""
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\serde_json-97e5058f09e4c5f0\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.9",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\thiserror-7444e2cd9fa670c7\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cookie@0.18.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cookie-0.18.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cookie-0.18.1\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "aes-gcm",
                "base64",
                "percent-encode",
                "percent-encoding",
                "private",
                "rand",
                "subtle"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\cookie-6b769143fb810a58\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\cookie-6b769143fb810a58\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.1.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crypto-common-0.1.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crypto_common",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crypto-common-0.1.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "getrandom",
                "rand_core",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libcrypto_common-c0bb51e24f1a6fcc.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.52.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Wdk",
                "Wdk_Foundation",
                "Wdk_Storage",
                "Wdk_Storage_FileSystem",
                "Wdk_System",
                "Wdk_System_IO",
                "Win32",
                "Win32_Foundation",
                "Win32_Networking",
                "Win32_Networking_WinSock",
                "Win32_Security",
                "Win32_Storage",
                "Win32_Storage_FileSystem",
                "Win32_System",
                "Win32_System_IO",
                "Win32_System_Pipes",
                "Win32_System_SystemServices",
                "Win32_System_Threading",
                "Win32_System_WindowsProgramming",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libwindows_sys-57f3f00a0d5fa83e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zerocopy-derive@0.7.35",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerocopy-derive-0.7.35\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "zerocopy_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerocopy-derive-0.7.35\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\zerocopy_derive-6171cb464888fbdd.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\zerocopy_derive-6171cb464888fbdd.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\zerocopy_derive-6171cb464888fbdd.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\zerocopy_derive-6171cb464888fbdd.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#inout@0.1.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\inout-0.1.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "inout",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\inout-0.1.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libinout-1a6fd018d4fcec79.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing-attributes@0.1.28",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-attributes-0.1.28\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "tracing_attributes",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-attributes-0.1.28\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\tracing_attributes-af6eb5246ad78c67.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\tracing_attributes-af6eb5246ad78c67.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\tracing_attributes-af6eb5246ad78c67.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\tracing_attributes-af6eb5246ad78c67.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tokio-macros@2.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-macros-2.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "tokio_macros",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-macros-2.4.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\tokio_macros-5f82ac9e9d5066b3.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\tokio_macros-5f82ac9e9d5066b3.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\tokio_macros-5f82ac9e9d5066b3.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\tokio_macros-5f82ac9e9d5066b3.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.217",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_derive-1.0.217\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "serde_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_derive-1.0.217\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\serde_derive-04d991cf4f33dbd6.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\serde_derive-04d991cf4f33dbd6.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\serde_derive-04d991cf4f33dbd6.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\serde_derive-04d991cf4f33dbd6.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-macro@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-macro-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "futures_macro",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-macro-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\futures_macro-809293a5499e525d.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\futures_macro-809293a5499e525d.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\futures_macro-809293a5499e525d.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\futures_macro-809293a5499e525d.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#block-buffer@0.10.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\block-buffer-0.10.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "block_buffer",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\block-buffer-0.10.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libblock_buffer-7ffa67b463ebbbbb.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#time-macros@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\time-macros-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "time_macros",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\time-macros-0.2.19\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "formatting",
                "parsing"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\time_macros-a763f7cf8700126b.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\time_macros-a763f7cf8700126b.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\time_macros-a763f7cf8700126b.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\time_macros-a763f7cf8700126b.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@2.0.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-2.0.9\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "thiserror_impl",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-2.0.9\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\thiserror_impl-ff8a2fb861e0d8a4.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\thiserror_impl-ff8a2fb861e0d8a4.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\thiserror_impl-ff8a2fb861e0d8a4.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\thiserror_impl-ff8a2fb861e0d8a4.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#deranged@0.3.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\deranged-0.3.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "deranged",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\deranged-0.3.11\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "powerfmt",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libderanged-5988c00c8330134a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-channel@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-channel-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_channel",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-channel-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libfutures_channel-1664bbe1dae9f701.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#mime@0.3.17",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\mime-0.3.17\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "mime",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\mime-0.3.17\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libmime-d7c0949541c6c582.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#time-core@0.1.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\time-core-0.1.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "time_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\time-core-0.1.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libtime_core-10bcba958eeefd22.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-conv@0.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-conv-0.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_conv",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-conv-0.1.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libnum_conv-44c875d5f379c963.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#socket2@0.5.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\socket2-0.5.8\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "socket2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\socket2-0.5.8\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "all"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libsocket2-e8957009044418b4.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#mio@1.0.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\mio-1.0.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "mio",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\mio-1.0.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "net",
                "os-ext",
                "os-poll"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libmio-f1320216a75abe91.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-util-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_util",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-util-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "async-await",
                "async-await-macro",
                "default",
                "futures-io",
                "futures-macro",
                "io",
                "memchr",
                "slab",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libfutures_util-3b4eb22b737b4853.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.7.35",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerocopy-0.7.35\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zerocopy",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerocopy-0.7.35\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "byteorder",
                "default",
                "derive",
                "simd",
                "zerocopy-derive"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libzerocopy-b6674179a7bc0da0.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cipher-0.4.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cipher",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cipher-0.4.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libcipher-fde9ad5bb4292337.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.217",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.217\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "serde",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.217\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "derive",
                "serde_derive",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libserde-6b1c99bf6a962805.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#universal-hash@0.5.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\universal-hash-0.5.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "universal_hash",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\universal-hash-0.5.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libuniversal_hash-10c1c18a93909a99.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-0.1.41\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tracing",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-0.1.41\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "attributes",
                "default",
                "std",
                "tracing-attributes"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libtracing-1e483d27e2dd109e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#aead@0.5.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\aead-0.5.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "aead",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\aead-0.5.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "getrandom",
                "rand_core"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libaead-934e8b34d5496c46.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\digest-0.10.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "digest",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\digest-0.10.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "block-buffer",
                "core-api",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libdigest-1e1c92d483eb8bf7.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#time@0.3.37",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\time-0.3.37\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "time",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\time-0.3.37\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "formatting",
                "macros",
                "parsing",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libtime-6131a278deb46066.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "thiserror",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.9\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libthiserror-d0d85adef3cfd7ad.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cookie@0.18.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\build\\cookie-08e02b5760dda2b1\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#uncased@0.9.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\uncased-0.9.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "uncased",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\uncased-0.9.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libuncased-d79b6c0af2aa49ff.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#form_urlencoded@1.2.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\form_urlencoded-1.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "form_urlencoded",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\form_urlencoded-1.2.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libform_urlencoded-9704b762345f949f.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#headers-core@0.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\headers-core-0.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "headers_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\headers-core-0.3.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libheaders_core-ff8602b7f393d78e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tokio@1.42.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-1.42.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tokio",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-1.42.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "bytes",
                "default",
                "io-util",
                "libc",
                "macros",
                "mio",
                "net",
                "rt",
                "socket2",
                "sync",
                "time",
                "tokio-macros",
                "windows-sys"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libtokio-e7398583d01e5f9e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#polyval@0.6.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\polyval-0.6.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "polyval",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\polyval-0.6.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libpolyval-05c13dd277b3c4d1.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ppv-lite86@0.2.20",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ppv-lite86-0.2.20\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ppv_lite86",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ppv-lite86-0.2.20\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "simd",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libppv_lite86-e4a48b79e822a205.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#aes@0.8.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\aes-0.8.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "aes",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\aes-0.8.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libaes-2029052dda94d020.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ctr@0.9.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ctr-0.9.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ctr",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ctr-0.9.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libctr-6f1ff9f2604e577a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#sha1@0.10.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\sha1-0.10.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sha1",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\sha1-0.10.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libsha1-7219d086a8f5c185.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.134",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_json-1.0.134\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "serde_json",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_json-1.0.134\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libserde_json-6fa79c00eebcd869.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64-0.22.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "base64",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64-0.22.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libbase64-86bc57838984083e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#base64@0.21.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64-0.21.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "base64",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64-0.21.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libbase64-11112dfb4e94ae4e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rfc7239@0.1.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rfc7239-0.1.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rfc7239",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rfc7239-0.1.3\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\librfc7239-8f5ab0a00532d9cc.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_urlencoded@0.7.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_urlencoded-0.7.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "serde_urlencoded",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_urlencoded-0.7.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libserde_urlencoded-6a792181c20a2885.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#http-body-util@0.1.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-body-util-0.1.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http_body_util",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-body-util-0.1.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libhttp_body_util-c2d17d0769ae2253.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#form-data@0.6.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\form-data-0.6.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "form_data",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\form-data-0.6.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "async",
                "default",
                "futures-util"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libform_data-85a913ccdb3032da.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#async-trait@0.1.83",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-trait-0.1.83\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "async_trait",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-trait-0.1.83\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\async_trait-e70a964e305a41f3.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\async_trait-e70a964e305a41f3.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\async_trait-e70a964e305a41f3.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\async_trait-e70a964e305a41f3.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#sync_wrapper@1.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\sync_wrapper-1.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sync_wrapper",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\sync_wrapper-1.0.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libsync_wrapper-a82ed70061a64475.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#path-tree@0.8.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\path-tree-0.8.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "path_tree",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\path-tree-0.8.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libpath_tree-971ded66b3e43eab.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tokio-util@0.7.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-util-0.7.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tokio_util",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-util-0.7.13\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "codec",
                "default",
                "io",
                "net"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libtokio_util-f3613ad1723dd6a4.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rand_chacha@0.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rand_chacha-0.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rand_chacha",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rand_chacha-0.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\librand_chacha-0ab7caca6239f671.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ghash@0.5.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ghash-0.5.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ghash",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ghash-0.5.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libghash-4b1b53d25c51217c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#sessions-core@0.7.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\sessions-core-0.7.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "sessions_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\sessions-core-0.7.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libsessions_core-0c158f85d6bd8d6b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#headers@0.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\headers-0.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "headers",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\headers-0.4.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libheaders-ce451532ad7a9e50.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#h2@0.4.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\h2-0.4.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "h2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\h2-0.4.7\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libh2-ebdc893661ba1c41.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#aes-gcm@0.10.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\aes-gcm-0.10.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "aes_gcm",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\aes-gcm-0.10.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "aes",
                "alloc",
                "default",
                "getrandom",
                "rand_core"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libaes_gcm-f7f5a86069f75bcc.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rand-0.8.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rand",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rand-0.8.5\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "getrandom",
                "libc",
                "rand_chacha",
                "std",
                "std_rng"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\librand-6007b020acac6b14.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hyper@1.5.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hyper-1.5.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hyper",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hyper-1.5.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "http1",
                "http2",
                "server"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libhyper-c73bf1471ee944db.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cookie@0.18.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cookie-0.18.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cookie",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cookie-0.18.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "aes-gcm",
                "base64",
                "percent-encode",
                "percent-encoding",
                "private",
                "rand",
                "subtle"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libcookie-292a61c62ca0656b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hyper-util@0.1.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hyper-util-0.1.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hyper_util",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hyper-util-0.1.10\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "http1",
                "http2",
                "server",
                "server-auto",
                "server-graceful",
                "tokio"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libhyper_util-8c5cd0f800b3729d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#viz-core@0.10.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\viz-core-0.10.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "viz_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\viz-core-0.10.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "cookie",
                "cookie-private",
                "default",
                "form",
                "json",
                "limits",
                "multipart",
                "params",
                "query",
                "session",
                "state"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libviz_core-87778e40d3403c72.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#viz-router@0.10.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\viz-router-0.10.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "viz_router",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\viz-router-0.10.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libviz_router-a25b8157e10ee1dd.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpjrpvvg7_/viz-0.10.0#viz@0.10.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "viz",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "cookie",
                "cookie-private",
                "default",
                "form",
                "http1",
                "json",
                "limits",
                "multipart",
                "params",
                "query",
                "session",
                "state"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjrpvvg7_\\viz-0.10.0\\target\\debug\\deps\\libviz-37a382d3c11deef8.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 225
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": true,
              "count": 4,
              "list": [
                {
                  "advisory": {
                    "id": "RUSTSEC-2025-0004",
                    "package": "openssl",
                    "title": "ssl::select_next_proto use after free",
                    "description": "In `openssl` versions before `0.10.70`, `ssl::select_next_proto` can return a slice pointing into the `server` argument's buffer but with a lifetime bound to the `client` argument. In situations where the `server` buffer's lifetime is shorter than the `client` buffer's, this can cause a use after free. This could cause the server to crash or to return arbitrary memory contents to the client.\n\n`openssl` 0.10.70 fixes the signature of `ssl::select_next_proto` to properly constrain the output buffer's lifetime to that of both input buffers.\n\nIn standard usage of `ssl::select_next_proto` in the callback passed to `SslContextBuilder::set_alpn_select_callback`, code is only affected if the `server` buffer is constructed *within* the callback. For example:\n\nNot vulnerable - the server buffer has a `'static` lifetime:\n```rust\nbuilder.set_alpn_select_callback(|_, client_protos| {\n    ssl::select_next_proto(b\"\\x02h2\", client_protos).ok_or_else(AlpnError::NOACK)\n});\n```\n\nNot vulnerable - the server buffer outlives the handshake:\n```rust\nlet server_protos = b\"\\x02h2\".to_vec();\nbuilder.set_alpn_select_callback(|_, client_protos| {\n    ssl::select_next_proto(&server_protos, client_protos).ok_or_else(AlpnError::NOACK)\n});\n```\n\nVulnerable - the server buffer is freed when the callback returns:\n```rust\nbuilder.set_alpn_select_callback(|_, client_protos| {\n    let server_protos = b\"\\x02h2\".to_vec();\n    ssl::select_next_proto(&server_protos, client_protos).ok_or_else(AlpnError::NOACK)\n});\n```",
                    "date": "2025-02-02",
                    "aliases": [
                      "GHSA-rpmj-rpgj-qmpm"
                    ],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "memory-exposure"
                    ],
                    "keywords": [
                      "ssl",
                      "tls",
                      "alpn"
                    ],
                    "cvss": null,
                    "informational": null,
                    "references": [
                      "https://github.com/sfackler/rust-openssl/pull/2360"
                    ],
                    "source": null,
                    "url": "https://github.com/sfackler/rust-openssl/security/advisories/GHSA-rpmj-rpgj-qmpm",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=0.10.70"
                    ],
                    "unaffected": []
                  },
                  "affected": {
                    "arch": [],
                    "os": [],
                    "functions": {
                      "openssl::ssl::select_next_proto": [
                        ">=0.10.0, <0.10.70"
                      ]
                    }
                  },
                  "package": {
                    "name": "openssl",
                    "version": "0.10.68",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "6174bc48f102d208783c2c84bf931bb75927a617866870de8a4ea85597f871f5",
                    "dependencies": [
                      {
                        "name": "bitflags",
                        "version": "2.6.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "cfg-if",
                        "version": "1.0.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "foreign-types",
                        "version": "0.3.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.169",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "once_cell",
                        "version": "1.20.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "openssl-macros",
                        "version": "0.1.1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "openssl-sys",
                        "version": "0.9.104",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  }
                },
                {
                  "advisory": {
                    "id": "RUSTSEC-2025-0022",
                    "package": "openssl",
                    "title": "Use-After-Free in `Md::fetch` and `Cipher::fetch`",
                    "description": "When a `Some(...)` value was passed to the `properties` argument of either of these functions, a use-after-free would result.\n\nIn practice this would nearly always result in OpenSSL treating the properties as an empty string (due to `CString::drop`'s behavior).\n\nThe maintainers thank [quitbug](https://github.com/quitbug/) for reporting this vulnerability to us.",
                    "date": "2025-04-04",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "memory-corruption"
                    ],
                    "keywords": [],
                    "cvss": null,
                    "informational": null,
                    "references": [],
                    "source": null,
                    "url": "https://github.com/sfackler/rust-openssl/pull/2390",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=0.10.72"
                    ],
                    "unaffected": [
                      "<0.10.39"
                    ]
                  },
                  "affected": {
                    "arch": [],
                    "os": [],
                    "functions": {
                      "openssl::cipher::Cipher::fetch": [
                        ">=0.10.39, <0.10.72"
                      ],
                      "openssl::md::Md::fetch": [
                        ">=0.10.39, <0.10.72"
                      ]
                    }
                  },
                  "package": {
                    "name": "openssl",
                    "version": "0.10.68",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "6174bc48f102d208783c2c84bf931bb75927a617866870de8a4ea85597f871f5",
                    "dependencies": [
                      {
                        "name": "bitflags",
                        "version": "2.6.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "cfg-if",
                        "version": "1.0.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "foreign-types",
                        "version": "0.3.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.169",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "once_cell",
                        "version": "1.20.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "openssl-macros",
                        "version": "0.1.1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "openssl-sys",
                        "version": "0.9.104",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  }
                },
                {
                  "advisory": {
                    "id": "RUSTSEC-2024-0437",
                    "package": "protobuf",
                    "title": "Crash due to uncontrolled recursion in protobuf crate",
                    "description": "Affected version of this crate did not properly parse unknown fields when parsing a user-supplied input.\n\nThis allows an attacker to cause a stack overflow when parsing the mssage on untrusted data.",
                    "date": "2024-12-12",
                    "aliases": [],
                    "related": [
                      "GHSA-735f-pc8j-v9w8"
                    ],
                    "collection": "crates",
                    "categories": [
                      "denial-of-service"
                    ],
                    "keywords": [
                      "panic"
                    ],
                    "cvss": null,
                    "informational": null,
                    "references": [],
                    "source": null,
                    "url": "https://github.com/stepancheg/rust-protobuf/issues/749",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=3.7.2"
                    ],
                    "unaffected": []
                  },
                  "affected": {
                    "arch": [],
                    "os": [],
                    "functions": {
                      "protobuf::coded_input_stream::CodedInputStream::skip_group": [
                        "<=3.4.0"
                      ]
                    }
                  },
                  "package": {
                    "name": "protobuf",
                    "version": "2.28.0",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "106dd99e98437432fed6519dedecfade6a06a73bb7b2a1e019fdd2bee5778d94",
                    "replace": null
                  }
                },
                {
                  "advisory": {
                    "id": "RUSTSEC-2025-0009",
                    "package": "ring",
                    "title": "Some AES functions may panic when overflow checking is enabled.",
                    "description": "`ring::aead::quic::HeaderProtectionKey::new_mask()` may panic when overflow\nchecking is enabled. In the QUIC protocol, an attacker can induce this panic by\nsending a specially-crafted packet. Even unintentionally it is likely to occur\nin 1 out of every 2**32 packets sent and/or received.\n\nOn 64-bit targets operations using `ring::aead::{AES_128_GCM, AES_256_GCM}` may\npanic when overflow checking is enabled, when encrypting/decrypting approximately\n68,719,476,700 bytes (about 64 gigabytes) of data in a single chunk. Protocols\nlike TLS and SSH are not affected by this because those protocols break large\namounts of data into small chunks. Similarly, most applications will not\nattempt to encrypt/decrypt 64GB of data in one chunk.\n\nOverflow checking is not enabled in release mode by default, but\n`RUSTFLAGS=\"-C overflow-checks\"` or `overflow-checks = true` in the Cargo.toml\nprofile can override this. Overflow checking is usually enabled by default in\ndebug mode.",
                    "date": "2025-03-06",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "denial-of-service"
                    ],
                    "keywords": [],
                    "cvss": null,
                    "informational": null,
                    "references": [],
                    "source": null,
                    "url": "https://github.com/briansmith/ring/blob/main/RELEASES.md#version-01712-2025-03-05",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=0.17.12"
                    ],
                    "unaffected": []
                  },
                  "affected": null,
                  "package": {
                    "name": "ring",
                    "version": "0.17.8",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d",
                    "dependencies": [
                      {
                        "name": "cc",
                        "version": "1.2.6",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "cfg-if",
                        "version": "1.0.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "getrandom",
                        "version": "0.2.15",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.169",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "spin",
                        "version": "0.9.8",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "untrusted",
                        "version": "0.9.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "windows-sys",
                        "version": "0.52.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  }
                }
              ]
            },
            "warnings": {
              "unmaintained": [
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "paste",
                    "version": "1.0.15",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a",
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2024-0436",
                    "package": "paste",
                    "title": "paste - no longer maintained",
                    "description": "The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \nthat this project is not longer maintained as well as archived the repository",
                    "date": "2024-10-07",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/dtolnay/paste",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                }
              ],
              "unsound": [
                {
                  "kind": "unsound",
                  "package": {
                    "name": "tokio",
                    "version": "1.42.0",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "5cec9b21b0450273377fc97bd4c33a8acffc8c996c987a7c5b319a0083707551",
                    "dependencies": [
                      {
                        "name": "backtrace",
                        "version": "0.3.74",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "bytes",
                        "version": "1.9.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.169",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "mio",
                        "version": "1.0.3",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "pin-project-lite",
                        "version": "0.2.15",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "socket2",
                        "version": "0.5.8",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "tokio-macros",
                        "version": "2.4.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "windows-sys",
                        "version": "0.52.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2025-0023",
                    "package": "tokio",
                    "title": "Broadcast channel calls clone in parallel, but does not require `Sync`",
                    "description": "The broadcast channel internally calls `clone` on the stored value when\nreceiving it, and only requires `T:Send`. This means that using the broadcast\nchannel with values that are `Send` but not `Sync` can trigger unsoundness if\nthe `clone` implementation makes use of the value being `!Sync`.\n\nThank you to Austin Bonander for finding and reporting this issue.",
                    "date": "2025-04-07",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "memory-corruption"
                    ],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unsound",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/tokio-rs/tokio/pull/7232",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [
                      ">=1.38.2, <1.39.0",
                      ">=1.42.1, <1.43.0",
                      ">=1.43.1, <1.44.0",
                      ">=1.44.2"
                    ],
                    "unaffected": [
                      "<0.2.5"
                    ]
                  }
                }
              ],
              "yanked": [
                {
                  "kind": "yanked",
                  "package": {
                    "name": "path-tree",
                    "version": "0.8.2",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "8ae304bdc177794a8fef24c52bd14b101b3f47ac5ba5e6acadb204c0878e8e2e",
                    "dependencies": [
                      {
                        "name": "smallvec",
                        "version": "1.13.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": null,
                  "affected": null,
                  "versions": null
                }
              ]
            }
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "viz",
          "version": "0.10.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/viz/latest/viz/all.html \"show sidebar\")\n# Crate vizCopy item path\n[Settings](https://docs.rs/viz/latest/settings.html)\n[Help](https://docs.rs/viz/latest/help.html)\nSummary[Source](https://docs.rs/viz/latest/src/viz/lib.rs.html#1-548)\nExpand description\nViz\nFast, robust, flexible, lightweight web framework for Rust.\n## [\u00a7](https://docs.rs/viz/latest/viz/#features)Features\n  * **Safety** `#![forbid(unsafe_code)]`\n  * Lightweight\n  * Simple + Flexible [`Handler`](https://docs.rs/viz/latest/viz/#handler) & [`Middleware`](https://docs.rs/viz/latest/viz/#middleware)\n  * Handy [`Extractors`](https://docs.rs/viz/latest/viz/#extractors)\n  * Robust [`Routing`](https://docs.rs/viz/latest/viz/#routing)\n  * Supports Tower [`Service`](https://docs.rs/tower-service/latest/tower_service/trait.Service.html)\n\n\n## [\u00a7](https://docs.rs/viz/latest/viz/#hello-viz)Hello Viz\n```\nuse std::net::SocketAddr;\nuse tokio::net::TcpListener;\nuse viz::{serve, Request, Result, Router};\nasync fn index(_: Request) -> Result<&'static str> {\n  Ok(\"Hello, Viz!\")\n}\n#[tokio::main]\nasync fn main() -> Result<()> {\n  let addr = SocketAddr::from(([127, 0, 0, 1], 3000));\n  let listener = TcpListener::bind(addr).await?;\n  println!(\"listening on http://{addr}\");\n  let app = Router::new().get(\"/\", index);\n  if let Err(e) = serve(listener, app).await {\n    println!(\"{e}\");\n  }\n  Ok(())\n}\n```\n\nMore examples can be found [here](https://github.com/viz-rs/viz/tree/main/examples).\n## [\u00a7](https://docs.rs/viz/latest/viz/#handler)Handler\nA simple pattern `async fn(Request) -> Result<Response>` is used to handle requests in Viz.\n### [\u00a7](https://docs.rs/viz/latest/viz/#simple-handlers)Simple handlers\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(Response::text(\"Hello, World!\"))\n}\nasync fn about(_: Request) -> Result<&'static str> {\n  Ok(\"About Me!\")\n}\nasync fn not_found(_: Request) -> Result<impl IntoResponse> {\n  Ok(\"Not Found!\")\n}\n```\n\n### [\u00a7](https://docs.rs/viz/latest/viz/#implemented-handler-trait)Implemented Handler trait\nThe types can implement the [`Handler`](https://docs.rs/viz/latest/viz/trait.Handler.html \"trait viz::Handler\") trait to customize handlers.\n```\n#[derive(Clone)]\nstruct MyHandler {\n  code: Arc<AtomicUsize>,\n}\n#[async_trait]\nimpl Handler<Request> for MyHandler {\n  type Output = Result<Response>;\n  async fn call(&self, req: Request) -> Self::Output {\n    let path = req.path();\n    let method = req.method().clone();\n    let code = self.code.fetch_add(1, Ordering::SeqCst);\n    Ok(format!(\"code = {}, method = {}, path = {}\", code, method, path).into_response())\n  }\n}\n```\n\n### [\u00a7](https://docs.rs/viz/latest/viz/#with-extractors)With extractors\nSupports handler with `zero` or `one` or `more` extractors.\nExtractors must implement the [`FromRequest`](https://docs.rs/viz/latest/viz/trait.FromRequest.html \"trait viz::FromRequest\") trait for extracting data from the [`Request`](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\").\nWhen joining the routing system, it should first be converted to a handler using [`into_handler`](https://docs.rs/viz/latest/viz/trait.IntoHandler.html#tymethod.into_handler \"method viz::IntoHandler::into_handler\").\n```\nasync fn show_todo(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Hi, NO.{}\", id))\n}\nlet app = Router::new().route(\"/:id\", get(show_todo.into_handler()));\n```\n\n#### [\u00a7](https://docs.rs/viz/latest/viz/#why-not-supports-handler-with-extractors-by-default)Why not supports handler with extractors by default?\nViz allows more flexibility in organizing your code.\n```\nasync fn show_user(mut req: Request) -> Result<Response> {\n  let Params(id) = req.extract::<Params<u64>>().await?;\n  Ok(format!(\"post {}\", id).into_response())\n}\nasync fn show_user_ext(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Hi, NO.{}\", id))\n}\nasync fn show_user_wrap(req: Request) -> Result<impl IntoResponse> {\n  // https://github.com/rust-lang/rust/issues/48919\n  // show_user_ext.call(req).await\n  FnExt::call(&show_user_ext, req).await\n}\nlet app = Router::new()\n  .get(\"/users/:id\", show_user)\n  .get(\"/users_wrap/:id\", show_user_wrap)\n  .get(\"/users_ext/:id\", show_user_ext.into_handler());\n```\n\n#### [\u00a7](https://docs.rs/viz/latest/viz/#support-process-macros)Support process macros?\nSupport, you can enable the `macros` feature, using `#[handler]`.\nBut it\u2019s still recommended to use `into_handler` for conversion.\n[\u24d8](https://docs.rs/viz/latest/viz/ \"This example is not tested\")```\n\n#[handler]\nasync fn show_user(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Hi, NO.{}\", id))\n}\nasync fn update_user(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Updated, NO.{}\", id))\n}\nlet app = Router::new()\n  .get(\"/users/:id\", show_user)\n  .patch(\"/users/:id\", update_user.into_handler());\n```\n\n### [\u00a7](https://docs.rs/viz/latest/viz/#chaining-and-composing-handlers)Chaining and composing handlers\nThe [`HandlerExt`](https://docs.rs/viz/latest/viz/trait.HandlerExt.html \"trait viz::HandlerExt\") is an extension trait for [Handler](https://docs.rs/viz/latest/viz/trait.Handler.html \"trait viz::Handler\")s that provides a variety of convenient combinator functions.\nLikes the [`FutureExt`](https://docs.rs/futures/latest/futures/future/trait.FutureExt.html) and [`StreamExt`](https://docs.rs/futures/latest/futures/stream/trait.StreamExt.html) traits.\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(Response::text(\"hyper\"))\n}\nasync fn before(req: Request) -> Result<Request> {\n  if req.method() == Method::POST {\n    Ok(req)\n  } else {\n    Err(StatusCode::METHOD_NOT_ALLOWED.into_error())\n  }\n}\nasync fn around<H>((req, handler): Next<Request, H>) -> Result<Response>\nwhere\n  H: Handler<Request, Output = Result<Response>>,\n{\n  // before ...\n  let result = handler.call(req).await;\n  // after ...\n  result\n}\nasync fn after(result: Result<Response>) -> Result<Response> {\n  result.map(|mut res| {\n    *res.status_mut() = StatusCode::NO_CONTENT;\n    res\n  })\n}\nlet routing = Router::new()\n  .get(\"/\", index.before(before).around(around).after(after));\n```\n\n## [\u00a7](https://docs.rs/viz/latest/viz/#middleware)Middleware\nViz\u2019s middleware and handlers share a common [`Handler`](https://docs.rs/viz/latest/viz/trait.Handler.html \"trait viz::Handler\") trait, so its very easy to implement and extend the middleware.\nWe can add middleware to a single handler, or to all handlers.\nWe can also use [`Transform`](https://docs.rs/viz/latest/viz/trait.Transform.html \"trait viz::Transform\") trait for wrapping the inner handler during construction.\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(StatusCode::OK.into_response())\n}\nasync fn not_found(_: Request) -> Result<impl IntoResponse> {\n  Ok(StatusCode::OK)\n}\nasync fn show_user(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"post {}\", id))\n}\n// middleware fn\nasync fn around<H>((req, handler): Next<Request, H>) -> Result<Response>\nwhere\n  H: Handler<Request, Output = Result<Response>>,\n{\n  // before ...\n  let result = handler.call(req).await;\n  // after ...\n  result\n}\n// middleware struct\n#[derive(Clone)]\nstruct MyMiddleware {}\n#[async_trait]\nimpl<H> Handler<Next<Request, H>> for MyMiddleware\nwhere\n  H: Handler<Request>,\n{\n  type Output = H::Output;\n  async fn call(&self, (i, h): Next<Request, H>) -> Self::Output {\n    h.call(i).await\n  }\n}\n// A configuration for Timeout Middleware\nstruct Timeout {\n  delay: Duration,\n}\nimpl Timeout {\n  pub fn new(secs: u64) -> Self {\n    Self { delay: Duration::from_secs(secs) }\n  }\n}\nimpl<H: Clone> Transform<H> for Timeout {\n  type Output = TimeoutMiddleware<H>;\n  fn transform(&self, h: H) -> Self::Output {\n    TimeoutMiddleware(h, self.delay)\n  }\n}\n// Timeout Middleware\n#[derive(Clone)]\nstruct TimeoutMiddleware<H>(H, Duration);\n#[async_trait]\nimpl<H> Handler<Request> for TimeoutMiddleware<H>\nwhere\n  H: Handler<Request>,\n{\n  type Output = H::Output;\n  async fn call(&self, req: Request) -> Self::Output {\n    self.0.call(req).await\n  }\n}\nlet app = Router::new()\n  .get(\"/\", index\n    // handler level\n    .around(around)\n    .around(MyMiddleware {})\n    .with(Timeout::new(1))\n  )\n  .route(\"/users/:id\", get(\n    show_user\n      .into_handler()\n      .map_into_response()\n      // handler level\n      .around(around)\n      .with(Timeout::new(0))\n    )\n    .post(\n      (|_| async { Ok(Response::text(\"update\")) })\n      // handler level\n      .around(around)\n      .with(Timeout::new(0))\n    )\n    // route level\n    .with_handler(MyMiddleware {})\n    .with(Timeout::new(2))\n  )\n  .get(\"/*\", not_found\n    .map_into_response()\n    // handler level\n    .around(around)\n    .around(MyMiddleware {})\n  )\n  // router level\n  .with_handler(around)\n  .with_handler(MyMiddleware {})\n  .with(Timeout::new(4));\n```\n\n## [\u00a7](https://docs.rs/viz/latest/viz/#extractors)Extractors\nExtracts data from the [`Request`](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\").\n```\nstruct Counter(u16);\nimpl FromRequest for Counter {\n  type Error = Infallible;\n  async fn extract(req: &mut Request) -> Result<Self, Self::Error> {\n    let c = get_query_param(req.query_string());\n    Ok(Counter(c))\n  }\n}\nfn get_query_param(query: Option<&str>) -> u16 {\n  let query = query.unwrap_or(\"\");\n  let q = if let Some(pos) = query.find('q') {\n    query.split_at(pos + 2).1.parse().unwrap_or(1)\n  } else {\n    1\n  };\n  cmp::min(500, cmp::max(1, q))\n}\n```\n\n## [\u00a7](https://docs.rs/viz/latest/viz/#routing)Routing\nThe Viz router recognizes URLs and dispatches them to a handler.\n### [\u00a7](https://docs.rs/viz/latest/viz/#simple-routes)Simple routes\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(().into_response())\n}\nlet root = Router::new()\n .get(\"/\", index)\n .route(\"/about\", get(|_| async { Ok(\"about\") }));\nlet search = Router::new()\n .route(\"/\", Route::new().get(|_| async { Ok(\"search\") }));\n```\n\n### [\u00a7](https://docs.rs/viz/latest/viz/#crud-verbs)CRUD, Verbs\nAdds routes with the HTTP method.\n```\nasync fn index_todos(_: Request) -> Result<impl IntoResponse> {\n  Ok(())\n}\nasync fn create_todo(_: Request) -> Result<&'static str> {\n  Ok(\"created\")\n}\nasync fn new_todo(_: Request) -> Result<Response> {\n  Ok(Response::html(r#\"\n    <form method=\"post\" action=\"/\">\n      <input name=\"todo\" />\n      <button type=\"submit\">Create</button>\n    </form>\n  \"#))\n}\nasync fn show_todo(mut req: Request) -> Result<Response> {\n  let Params(id): Params<u64> = req.extract().await?;\n  Ok(Response::text(format!(\"todo's id is {}\", id)))\n}\nasync fn update_todo(_: Request) -> Result<()> {\n  Ok(())\n}\nasync fn destroy_todo(_: Request) -> Result<()> {\n  Ok(())\n}\nasync fn edit_todo(_: Request) -> Result<()> {\n  Ok(())\n}\nlet todos = Router::new()\n .route(\"/\", get(index_todos).post(create_todo))\n .post(\"/new\", new_todo)\n .route(\"/:id\", get(show_todo).patch(update_todo).delete(destroy_todo))\n .get(\"/:id/edit\", edit_todo);\n```\n\n### [\u00a7](https://docs.rs/viz/latest/viz/#resources)Resources\n```\n// GET `/search`\nasync fn search_users(_: Request) -> Result<Response> {\n  Ok(Response::json::<Vec<u64>>(vec![])?)\n}\n// GET `/`\nasync fn index_users(_: Request) -> Result<Response> {\n  Ok(Response::json::<Vec<u64>>(vec![])?)\n}\n// GET `/new`\nasync fn new_user(_: Request) -> Result<&'static str> {\n  Ok(\"User Form\")\n}\n// POST `/`\nasync fn create_user(_: Request) -> Result<&'static str> {\n  Ok(\"Created User\")\n}\n// GET `/user_id`\nasync fn show_user(_: Request) -> Result<&'static str> {\n  Ok(\"User ID 007\")\n}\n// GET `/user_id/edit`\nasync fn edit_user(_: Request) -> Result<&'static str> {\n  Ok(\"Edit User Form\")\n}\n// PUT `/user_id`\nasync fn update_user(_: Request) -> Result<&'static str> {\n  Ok(\"Updated User\")\n}\n// DELETE `/user_id`\nasync fn delete_user(_: Request) -> Result<&'static str> {\n  Ok(\"Deleted User\")\n}\nlet users = Resources::default()\n .named(\"user\")\n .route(\"/search\", get(search_users))\n .index(index_users)\n .new(new_user)\n .create(create_user)\n .show(show_user)\n .edit(edit_user)\n .update(update_user)\n .destroy(delete_user);\n```\n\n### [\u00a7](https://docs.rs/viz/latest/viz/#nested)Nested\n[\u24d8](https://docs.rs/viz/latest/viz/ \"This example is not tested\")```\nasync fn not_found(_: Request) -> Result<impl IntoResponse> {\n  Ok(StatusCode::NOT_FOUND)\n}\nlet app = Router::new()\n .nest(\"/\", root)\n .nest(\"/search\", search)\n .nest(\"/todos\", todos.clone())\n .nest(\"/users\", users.nest(\"todos\", todos))\n .route(\"/*\", any(not_found));\n```\n\n## Modules[\u00a7](https://docs.rs/viz/latest/viz/#modules)\n\n[future](https://docs.rs/viz/latest/viz/future/index.html \"mod viz::future\")\n    Asynchronous values.\n\n[handler](https://docs.rs/viz/latest/viz/handler/index.html \"mod viz::handler\")\n    Traits and types for handling an HTTP.\n\n[handlers](https://docs.rs/viz/latest/viz/handlers/index.html \"mod viz::handlers\")`handlers`\n    A collection of handlers for Viz.\n\n[header](https://docs.rs/viz/latest/viz/header/index.html \"mod viz::header\")\n    HTTP header types\n\n[headers](https://docs.rs/viz/latest/viz/headers/index.html \"mod viz::headers\")\n    Typed HTTP Headers\n\n[middleware](https://docs.rs/viz/latest/viz/middleware/index.html \"mod viz::middleware\")\n    Built-in Middleware.\n\n[tls](https://docs.rs/viz/latest/viz/tls/index.html \"mod viz::tls\")`native-tls` or `rustls`\n    TLS A TLS listener wrapper.\n\n[types](https://docs.rs/viz/latest/viz/types/index.html \"mod viz::types\")\n    Built-in Extractors types and traits.\n## Structs[\u00a7](https://docs.rs/viz/latest/viz/#structs)\n\n[BoxHandler](https://docs.rs/viz/latest/viz/struct.BoxHandler.html \"struct viz::BoxHandler\")\n    A [`Clone`](https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html \"trait core::clone::Clone\") + [`Send`](https://doc.rust-lang.org/nightly/core/marker/trait.Send.html \"trait core::marker::Send\") boxed [`Handler`](https://docs.rs/viz/latest/viz/trait.Handler.html \"trait viz::Handler\").\n\n[Bytes](https://docs.rs/viz/latest/viz/struct.Bytes.html \"struct viz::Bytes\")\n    A cheaply cloneable and sliceable chunk of contiguous memory.\n\n[BytesMut](https://docs.rs/viz/latest/viz/struct.BytesMut.html \"struct viz::BytesMut\")\n    A unique reference to a contiguous slice of memory.\n\n[Incoming](https://docs.rs/viz/latest/viz/struct.Incoming.html \"struct viz::Incoming\")\n    A stream of `Bytes`, used when receiving bodies from the network.\n\n[Io](https://docs.rs/viz/latest/viz/struct.Io.html \"struct viz::Io\")\n    A wrapper that implements Tokio\u2019s IO traits for an inner type that implements hyper\u2019s IO traits, or vice versa (implements hyper\u2019s IO traits for a type that implements Tokio\u2019s IO traits).\n\n[Method](https://docs.rs/viz/latest/viz/struct.Method.html \"struct viz::Method\")\n    The Request Method (VERB)\n\n[Path](https://docs.rs/viz/latest/viz/struct.Path.html \"struct viz::Path\")\n    Matched route path infomation.\n\n[PathTree](https://docs.rs/viz/latest/viz/struct.PathTree.html \"struct viz::PathTree\")\n    A path tree.\n\n[Resources](https://docs.rs/viz/latest/viz/struct.Resources.html \"struct viz::Resources\")\n    A resourceful route provides a mapping between HTTP verbs and URLs to handlers.\n\n[Responder](https://docs.rs/viz/latest/viz/struct.Responder.html \"struct viz::Responder\")\n    Handles the HTTP [`Request`](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\") and retures the HTTP [`Response`](https://docs.rs/viz/latest/viz/type.Response.html \"type viz::Response\").\n\n[Route](https://docs.rs/viz/latest/viz/struct.Route.html \"struct viz::Route\")\n    A collection of verb-handler pair.\n\n[Router](https://docs.rs/viz/latest/viz/struct.Router.html \"struct viz::Router\")\n    A routes collection.\n\n[Server](https://docs.rs/viz/latest/viz/struct.Server.html \"struct viz::Server\")\n    A listening HTTP server that accepts connections.\n\n[StatusCode](https://docs.rs/viz/latest/viz/struct.StatusCode.html \"struct viz::StatusCode\")\n    An HTTP status code (`status-code` in RFC 9110 et al.).\n\n[Tree](https://docs.rs/viz/latest/viz/struct.Tree.html \"struct viz::Tree\")\n    Store all final routes.\n## Enums[\u00a7](https://docs.rs/viz/latest/viz/#enums)\n\n[Body](https://docs.rs/viz/latest/viz/enum.Body.html \"enum viz::Body\")\n    A body for HTTP [`Request`](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\") and HTTP [`Response`](https://docs.rs/viz/latest/viz/type.Response.html \"type viz::Response\").\n\n[BodyState](https://docs.rs/viz/latest/viz/enum.BodyState.html \"enum viz::BodyState\")\n    A body state.\n\n[Error](https://docs.rs/viz/latest/viz/enum.Error.html \"enum viz::Error\")\n    Represents errors that can occur handling application.\n## Traits[\u00a7](https://docs.rs/viz/latest/viz/#traits)\n\n[FnExt](https://docs.rs/viz/latest/viz/trait.FnExt.html \"trait viz::FnExt\")\n    A handler with extractors.\n\n[FromRequest](https://docs.rs/viz/latest/viz/trait.FromRequest.html \"trait viz::FromRequest\")\n    An interface for extracting data from the HTTP [`Request`](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\").\n\n[Future](https://docs.rs/viz/latest/viz/trait.Future.html \"trait viz::Future\")\n    A future represents an asynchronous computation obtained by use of [`async`](https://docs.rs/viz/std/keyword.async.html).\n\n[Handler](https://docs.rs/viz/latest/viz/trait.Handler.html \"trait viz::Handler\")\n    A simplified asynchronous interface for handling input and output.\n\n[HandlerExt](https://docs.rs/viz/latest/viz/trait.HandlerExt.html \"trait viz::HandlerExt\")\n    The [`HandlerExt`](https://docs.rs/viz/latest/viz/trait.HandlerExt.html \"trait viz::HandlerExt\") trait, which provides adapters for chaining and composing handlers.\n\n[HttpBody](https://docs.rs/viz/latest/viz/trait.HttpBody.html \"trait viz::HttpBody\")\n    Trait representing a streaming body of a Request or Response.\n\n[IntoHandler](https://docs.rs/viz/latest/viz/trait.IntoHandler.html \"trait viz::IntoHandler\")\n    The trait implemented by types that can be converted to a [`Handler`](https://docs.rs/viz/latest/viz/trait.Handler.html \"trait viz::Handler\").\n\n[IntoResponse](https://docs.rs/viz/latest/viz/trait.IntoResponse.html \"trait viz::IntoResponse\")\n    Trait implemented by types that can be converted to an HTTP [`Response`](https://docs.rs/viz/latest/viz/type.Response.html \"type viz::Response\").\n\n[Listener](https://docs.rs/viz/latest/viz/trait.Listener.html \"trait viz::Listener\")\n    A trait for a listener: `TcpListener` and `UnixListener`.\n\n[RequestExt](https://docs.rs/viz/latest/viz/trait.RequestExt.html \"trait viz::RequestExt\")\n    The [`Request`](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\") Extension.\n\n[RequestLimitsExt](https://docs.rs/viz/latest/viz/trait.RequestLimitsExt.html \"trait viz::RequestLimitsExt\")\n    The [`Request`](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\") Extension with a limited body.\n\n[ResponseExt](https://docs.rs/viz/latest/viz/trait.ResponseExt.html \"trait viz::ResponseExt\")\n    The [`Response`](https://docs.rs/viz/latest/viz/type.Response.html \"type viz::Response\") Extension.\n\n[Transform](https://docs.rs/viz/latest/viz/trait.Transform.html \"trait viz::Transform\")\n    Then `Transform` trait defines the interface of a handler factory that wraps inner handler to a Handler during construction.\n## Functions[\u00a7](https://docs.rs/viz/latest/viz/#functions)\n\n[any](https://docs.rs/viz/latest/viz/fn.any.html \"fn viz::any\")\n    Creates a route with a handler and any HTTP verbs.\n\n[connect](https://docs.rs/viz/latest/viz/fn.connect.html \"fn viz::connect\")\n    Creates a route with a handler and HTTP `CONNECT` verb pair.\n\n[delete](https://docs.rs/viz/latest/viz/fn.delete.html \"fn viz::delete\")\n    Creates a route with a handler and HTTP `DELETE` verb pair.\n\n[get](https://docs.rs/viz/latest/viz/fn.get.html \"fn viz::get\")\n    Creates a route with a handler and HTTP `GET` verb pair.\n\n[head](https://docs.rs/viz/latest/viz/fn.head.html \"fn viz::head\")\n    Creates a route with a handler and HTTP `HEAD` verb pair.\n\n[on](https://docs.rs/viz/latest/viz/fn.on.html \"fn viz::on\")\n    Creates a route with a handler and HTTP verb pair.\n\n[options](https://docs.rs/viz/latest/viz/fn.options.html \"fn viz::options\")\n    Creates a route with a handler and HTTP `OPTIONS` verb pair.\n\n[patch](https://docs.rs/viz/latest/viz/fn.patch.html \"fn viz::patch\")\n    Creates a route with a handler and HTTP `PATCH` verb pair.\n\n[post](https://docs.rs/viz/latest/viz/fn.post.html \"fn viz::post\")\n    Creates a route with a handler and HTTP `POST` verb pair.\n\n[put](https://docs.rs/viz/latest/viz/fn.put.html \"fn viz::put\")\n    Creates a route with a handler and HTTP `PUT` verb pair.\n\n[serve](https://docs.rs/viz/latest/viz/fn.serve.html \"fn viz::serve\")\n    Starts a server and serves the connections.\n\n[trace](https://docs.rs/viz/latest/viz/fn.trace.html \"fn viz::trace\")\n    Creates a route with a handler and HTTP `TRACE` verb pair.\n## Type Aliases[\u00a7](https://docs.rs/viz/latest/viz/#types)\n\n[BoxError](https://docs.rs/viz/latest/viz/type.BoxError.html \"type viz::BoxError\")\n    An owned dynamically typed [`StdError`](https://doc.rust-lang.org/nightly/core/error/trait.Error.html \"trait core::error::Error\").\n\n[Next](https://docs.rs/viz/latest/viz/type.Next.html \"type viz::Next\")\n    Represents a middleware parameter, which is a tuple that includes Requset and `BoxHandler`.\n\n[Request](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\")\n    Represents an HTTP Request.\n\n[Response](https://docs.rs/viz/latest/viz/type.Response.html \"type viz::Response\")\n    Represents an HTTP Response.\n\n[Result](https://docs.rs/viz/latest/viz/type.Result.html \"type viz::Result\")\n    Represents either success (Ok) or failure (Err).\n## Attribute Macros[\u00a7](https://docs.rs/viz/latest/viz/#attributes)\n\n[async_trait](https://docs.rs/viz/latest/viz/attr.async_trait.html \"attr viz::async_trait\")\n\n\n[handler](https://docs.rs/viz/latest/viz/attr.handler.html \"attr viz::handler\")`macros`\n    Transforms `extract-handler` to a Handler instance.\n## Derive Macros[\u00a7](https://docs.rs/viz/latest/viz/#derives)\n\n[ThisError](https://docs.rs/viz/latest/viz/derive.ThisError.html \"derive viz::ThisError\")\n\n",
            "markdown_with_citations": "[](https://docs.rs/viz/latest/viz/all.html \"show sidebar\")\n# Crate vizCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nViz\nFast, robust, flexible, lightweight web framework for Rust.\n## \u00a7\u27e84\u27e9Features\n  * **Safety** `#![forbid(unsafe_code)]`\n  * Lightweight\n  * Simple + Flexible `Handler`\u27e85\u27e9 & `Middleware`\u27e86\u27e9\n  * Handy `Extractors`\u27e87\u27e9\n  * Robust `Routing`\u27e88\u27e9\n  * Supports Tower `Service`\u27e89\u27e9\n\n\n## \u00a7\u27e810\u27e9Hello Viz\n```\nuse std::net::SocketAddr;\nuse tokio::net::TcpListener;\nuse viz::{serve, Request, Result, Router};\nasync fn index(_: Request) -> Result<&'static str> {\n  Ok(\"Hello, Viz!\")\n}\n#[tokio::main]\nasync fn main() -> Result<()> {\n  let addr = SocketAddr::from(([127, 0, 0, 1], 3000));\n  let listener = TcpListener::bind(addr).await?;\n  println!(\"listening on http://{addr}\");\n  let app = Router::new().get(\"/\", index);\n  if let Err(e) = serve(listener, app).await {\n    println!(\"{e}\");\n  }\n  Ok(())\n}\n```\n\nMore examples can be found here\u27e811\u27e9.\n## \u00a7\u27e85\u27e9Handler\nA simple pattern `async fn(Request) -> Result<Response>` is used to handle requests in Viz.\n### \u00a7\u27e812\u27e9Simple handlers\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(Response::text(\"Hello, World!\"))\n}\nasync fn about(_: Request) -> Result<&'static str> {\n  Ok(\"About Me!\")\n}\nasync fn not_found(_: Request) -> Result<impl IntoResponse> {\n  Ok(\"Not Found!\")\n}\n```\n\n### \u00a7\u27e813\u27e9Implemented Handler trait\nThe types can implement the `Handler`\u27e814\u27e9 trait to customize handlers.\n```\n#[derive(Clone)]\nstruct MyHandler {\n  code: Arc<AtomicUsize>,\n}\n#[async_trait]\nimpl Handler<Request> for MyHandler {\n  type Output = Result<Response>;\n  async fn call(&self, req: Request) -> Self::Output {\n    let path = req.path();\n    let method = req.method().clone();\n    let code = self.code.fetch_add(1, Ordering::SeqCst);\n    Ok(format!(\"code = {}, method = {}, path = {}\", code, method, path).into_response())\n  }\n}\n```\n\n### \u00a7\u27e815\u27e9With extractors\nSupports handler with `zero` or `one` or `more` extractors.\nExtractors must implement the `FromRequest`\u27e816\u27e9 trait for extracting data from the `Request`\u27e817\u27e9.\nWhen joining the routing system, it should first be converted to a handler using `into_handler`\u27e818\u27e9.\n```\nasync fn show_todo(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Hi, NO.{}\", id))\n}\nlet app = Router::new().route(\"/:id\", get(show_todo.into_handler()));\n```\n\n#### \u00a7\u27e819\u27e9Why not supports handler with extractors by default?\nViz allows more flexibility in organizing your code.\n```\nasync fn show_user(mut req: Request) -> Result<Response> {\n  let Params(id) = req.extract::<Params<u64>>().await?;\n  Ok(format!(\"post {}\", id).into_response())\n}\nasync fn show_user_ext(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Hi, NO.{}\", id))\n}\nasync fn show_user_wrap(req: Request) -> Result<impl IntoResponse> {\n  // https://github.com/rust-lang/rust/issues/48919\n  // show_user_ext.call(req).await\n  FnExt::call(&show_user_ext, req).await\n}\nlet app = Router::new()\n  .get(\"/users/:id\", show_user)\n  .get(\"/users_wrap/:id\", show_user_wrap)\n  .get(\"/users_ext/:id\", show_user_ext.into_handler());\n```\n\n#### \u00a7\u27e820\u27e9Support process macros?\nSupport, you can enable the `macros` feature, using `#[handler]`.\nBut it\u2019s still recommended to use `into_handler` for conversion.\n\u24d8\u27e821\u27e9```\n\n#[handler]\nasync fn show_user(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Hi, NO.{}\", id))\n}\nasync fn update_user(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Updated, NO.{}\", id))\n}\nlet app = Router::new()\n  .get(\"/users/:id\", show_user)\n  .patch(\"/users/:id\", update_user.into_handler());\n```\n\n### \u00a7\u27e822\u27e9Chaining and composing handlers\nThe `HandlerExt`\u27e823\u27e9 is an extension trait for Handler\u27e814\u27e9s that provides a variety of convenient combinator functions.\nLikes the `FutureExt`\u27e824\u27e9 and `StreamExt`\u27e825\u27e9 traits.\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(Response::text(\"hyper\"))\n}\nasync fn before(req: Request) -> Result<Request> {\n  if req.method() == Method::POST {\n    Ok(req)\n  } else {\n    Err(StatusCode::METHOD_NOT_ALLOWED.into_error())\n  }\n}\nasync fn around<H>((req, handler): Next<Request, H>) -> Result<Response>\nwhere\n  H: Handler<Request, Output = Result<Response>>,\n{\n  // before ...\n  let result = handler.call(req).await;\n  // after ...\n  result\n}\nasync fn after(result: Result<Response>) -> Result<Response> {\n  result.map(|mut res| {\n    *res.status_mut() = StatusCode::NO_CONTENT;\n    res\n  })\n}\nlet routing = Router::new()\n  .get(\"/\", index.before(before).around(around).after(after));\n```\n\n## \u00a7\u27e86\u27e9Middleware\nViz\u2019s middleware and handlers share a common `Handler`\u27e814\u27e9 trait, so its very easy to implement and extend the middleware.\nWe can add middleware to a single handler, or to all handlers.\nWe can also use `Transform`\u27e826\u27e9 trait for wrapping the inner handler during construction.\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(StatusCode::OK.into_response())\n}\nasync fn not_found(_: Request) -> Result<impl IntoResponse> {\n  Ok(StatusCode::OK)\n}\nasync fn show_user(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"post {}\", id))\n}\n// middleware fn\nasync fn around<H>((req, handler): Next<Request, H>) -> Result<Response>\nwhere\n  H: Handler<Request, Output = Result<Response>>,\n{\n  // before ...\n  let result = handler.call(req).await;\n  // after ...\n  result\n}\n// middleware struct\n#[derive(Clone)]\nstruct MyMiddleware {}\n#[async_trait]\nimpl<H> Handler<Next<Request, H>> for MyMiddleware\nwhere\n  H: Handler<Request>,\n{\n  type Output = H::Output;\n  async fn call(&self, (i, h): Next<Request, H>) -> Self::Output {\n    h.call(i).await\n  }\n}\n// A configuration for Timeout Middleware\nstruct Timeout {\n  delay: Duration,\n}\nimpl Timeout {\n  pub fn new(secs: u64) -> Self {\n    Self { delay: Duration::from_secs(secs) }\n  }\n}\nimpl<H: Clone> Transform<H> for Timeout {\n  type Output = TimeoutMiddleware<H>;\n  fn transform(&self, h: H) -> Self::Output {\n    TimeoutMiddleware(h, self.delay)\n  }\n}\n// Timeout Middleware\n#[derive(Clone)]\nstruct TimeoutMiddleware<H>(H, Duration);\n#[async_trait]\nimpl<H> Handler<Request> for TimeoutMiddleware<H>\nwhere\n  H: Handler<Request>,\n{\n  type Output = H::Output;\n  async fn call(&self, req: Request) -> Self::Output {\n    self.0.call(req).await\n  }\n}\nlet app = Router::new()\n  .get(\"/\", index\n    // handler level\n    .around(around)\n    .around(MyMiddleware {})\n    .with(Timeout::new(1))\n  )\n  .route(\"/users/:id\", get(\n    show_user\n      .into_handler()\n      .map_into_response()\n      // handler level\n      .around(around)\n      .with(Timeout::new(0))\n    )\n    .post(\n      (|_| async { Ok(Response::text(\"update\")) })\n      // handler level\n      .around(around)\n      .with(Timeout::new(0))\n    )\n    // route level\n    .with_handler(MyMiddleware {})\n    .with(Timeout::new(2))\n  )\n  .get(\"/*\", not_found\n    .map_into_response()\n    // handler level\n    .around(around)\n    .around(MyMiddleware {})\n  )\n  // router level\n  .with_handler(around)\n  .with_handler(MyMiddleware {})\n  .with(Timeout::new(4));\n```\n\n## \u00a7\u27e87\u27e9Extractors\nExtracts data from the `Request`\u27e817\u27e9.\n```\nstruct Counter(u16);\nimpl FromRequest for Counter {\n  type Error = Infallible;\n  async fn extract(req: &mut Request) -> Result<Self, Self::Error> {\n    let c = get_query_param(req.query_string());\n    Ok(Counter(c))\n  }\n}\nfn get_query_param(query: Option<&str>) -> u16 {\n  let query = query.unwrap_or(\"\");\n  let q = if let Some(pos) = query.find('q') {\n    query.split_at(pos + 2).1.parse().unwrap_or(1)\n  } else {\n    1\n  };\n  cmp::min(500, cmp::max(1, q))\n}\n```\n\n## \u00a7\u27e88\u27e9Routing\nThe Viz router recognizes URLs and dispatches them to a handler.\n### \u00a7\u27e827\u27e9Simple routes\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(().into_response())\n}\nlet root = Router::new()\n .get(\"/\", index)\n .route(\"/about\", get(|_| async { Ok(\"about\") }));\nlet search = Router::new()\n .route(\"/\", Route::new().get(|_| async { Ok(\"search\") }));\n```\n\n### \u00a7\u27e828\u27e9CRUD, Verbs\nAdds routes with the HTTP method.\n```\nasync fn index_todos(_: Request) -> Result<impl IntoResponse> {\n  Ok(())\n}\nasync fn create_todo(_: Request) -> Result<&'static str> {\n  Ok(\"created\")\n}\nasync fn new_todo(_: Request) -> Result<Response> {\n  Ok(Response::html(r#\"\n    <form method=\"post\" action=\"/\">\n      <input name=\"todo\" />\n      <button type=\"submit\">Create</button>\n    </form>\n  \"#))\n}\nasync fn show_todo(mut req: Request) -> Result<Response> {\n  let Params(id): Params<u64> = req.extract().await?;\n  Ok(Response::text(format!(\"todo's id is {}\", id)))\n}\nasync fn update_todo(_: Request) -> Result<()> {\n  Ok(())\n}\nasync fn destroy_todo(_: Request) -> Result<()> {\n  Ok(())\n}\nasync fn edit_todo(_: Request) -> Result<()> {\n  Ok(())\n}\nlet todos = Router::new()\n .route(\"/\", get(index_todos).post(create_todo))\n .post(\"/new\", new_todo)\n .route(\"/:id\", get(show_todo).patch(update_todo).delete(destroy_todo))\n .get(\"/:id/edit\", edit_todo);\n```\n\n### \u00a7\u27e829\u27e9Resources\n```\n// GET `/search`\nasync fn search_users(_: Request) -> Result<Response> {\n  Ok(Response::json::<Vec<u64>>(vec![])?)\n}\n// GET `/`\nasync fn index_users(_: Request) -> Result<Response> {\n  Ok(Response::json::<Vec<u64>>(vec![])?)\n}\n// GET `/new`\nasync fn new_user(_: Request) -> Result<&'static str> {\n  Ok(\"User Form\")\n}\n// POST `/`\nasync fn create_user(_: Request) -> Result<&'static str> {\n  Ok(\"Created User\")\n}\n// GET `/user_id`\nasync fn show_user(_: Request) -> Result<&'static str> {\n  Ok(\"User ID 007\")\n}\n// GET `/user_id/edit`\nasync fn edit_user(_: Request) -> Result<&'static str> {\n  Ok(\"Edit User Form\")\n}\n// PUT `/user_id`\nasync fn update_user(_: Request) -> Result<&'static str> {\n  Ok(\"Updated User\")\n}\n// DELETE `/user_id`\nasync fn delete_user(_: Request) -> Result<&'static str> {\n  Ok(\"Deleted User\")\n}\nlet users = Resources::default()\n .named(\"user\")\n .route(\"/search\", get(search_users))\n .index(index_users)\n .new(new_user)\n .create(create_user)\n .show(show_user)\n .edit(edit_user)\n .update(update_user)\n .destroy(delete_user);\n```\n\n### \u00a7\u27e830\u27e9Nested\n\u24d8\u27e821\u27e9```\nasync fn not_found(_: Request) -> Result<impl IntoResponse> {\n  Ok(StatusCode::NOT_FOUND)\n}\nlet app = Router::new()\n .nest(\"/\", root)\n .nest(\"/search\", search)\n .nest(\"/todos\", todos.clone())\n .nest(\"/users\", users.nest(\"todos\", todos))\n .route(\"/*\", any(not_found));\n```\n\n## Modules\u00a7\u27e831\u27e9\n\nfuture\u27e832\u27e9\n    Asynchronous values.\n\nhandler\u27e833\u27e9\n    Traits and types for handling an HTTP.\n\nhandlers\u27e834\u27e9`handlers`\n    A collection of handlers for Viz.\n\nheader\u27e835\u27e9\n    HTTP header types\n\nheaders\u27e836\u27e9\n    Typed HTTP Headers\n\nmiddleware\u27e837\u27e9\n    Built-in Middleware.\n\ntls\u27e838\u27e9`native-tls` or `rustls`\n    TLS A TLS listener wrapper.\n\ntypes\u27e839\u27e9\n    Built-in Extractors types and traits.\n## Structs\u00a7\u27e840\u27e9\n\nBoxHandler\u27e841\u27e9\n    A `Clone`\u27e842\u27e9 + `Send`\u27e843\u27e9 boxed `Handler`\u27e814\u27e9.\n\nBytes\u27e844\u27e9\n    A cheaply cloneable and sliceable chunk of contiguous memory.\n\nBytesMut\u27e845\u27e9\n    A unique reference to a contiguous slice of memory.\n\nIncoming\u27e846\u27e9\n    A stream of `Bytes`, used when receiving bodies from the network.\n\nIo\u27e847\u27e9\n    A wrapper that implements Tokio\u2019s IO traits for an inner type that implements hyper\u2019s IO traits, or vice versa (implements hyper\u2019s IO traits for a type that implements Tokio\u2019s IO traits).\n\nMethod\u27e848\u27e9\n    The Request Method (VERB)\n\nPath\u27e849\u27e9\n    Matched route path infomation.\n\nPathTree\u27e850\u27e9\n    A path tree.\n\nResources\u27e851\u27e9\n    A resourceful route provides a mapping between HTTP verbs and URLs to handlers.\n\nResponder\u27e852\u27e9\n    Handles the HTTP `Request`\u27e817\u27e9 and retures the HTTP `Response`\u27e853\u27e9.\n\nRoute\u27e854\u27e9\n    A collection of verb-handler pair.\n\nRouter\u27e855\u27e9\n    A routes collection.\n\nServer\u27e856\u27e9\n    A listening HTTP server that accepts connections.\n\nStatusCode\u27e857\u27e9\n    An HTTP status code (`status-code` in RFC 9110 et al.).\n\nTree\u27e858\u27e9\n    Store all final routes.\n## Enums\u00a7\u27e859\u27e9\n\nBody\u27e860\u27e9\n    A body for HTTP `Request`\u27e817\u27e9 and HTTP `Response`\u27e853\u27e9.\n\nBodyState\u27e861\u27e9\n    A body state.\n\nError\u27e862\u27e9\n    Represents errors that can occur handling application.\n## Traits\u00a7\u27e863\u27e9\n\nFnExt\u27e864\u27e9\n    A handler with extractors.\n\nFromRequest\u27e816\u27e9\n    An interface for extracting data from the HTTP `Request`\u27e817\u27e9.\n\nFuture\u27e865\u27e9\n    A future represents an asynchronous computation obtained by use of `async`\u27e866\u27e9.\n\nHandler\u27e814\u27e9\n    A simplified asynchronous interface for handling input and output.\n\nHandlerExt\u27e823\u27e9\n    The `HandlerExt`\u27e823\u27e9 trait, which provides adapters for chaining and composing handlers.\n\nHttpBody\u27e867\u27e9\n    Trait representing a streaming body of a Request or Response.\n\nIntoHandler\u27e868\u27e9\n    The trait implemented by types that can be converted to a `Handler`\u27e814\u27e9.\n\nIntoResponse\u27e869\u27e9\n    Trait implemented by types that can be converted to an HTTP `Response`\u27e853\u27e9.\n\nListener\u27e870\u27e9\n    A trait for a listener: `TcpListener` and `UnixListener`.\n\nRequestExt\u27e871\u27e9\n    The `Request`\u27e817\u27e9 Extension.\n\nRequestLimitsExt\u27e872\u27e9\n    The `Request`\u27e817\u27e9 Extension with a limited body.\n\nResponseExt\u27e873\u27e9\n    The `Response`\u27e853\u27e9 Extension.\n\nTransform\u27e826\u27e9\n    Then `Transform` trait defines the interface of a handler factory that wraps inner handler to a Handler during construction.\n## Functions\u00a7\u27e874\u27e9\n\nany\u27e875\u27e9\n    Creates a route with a handler and any HTTP verbs.\n\nconnect\u27e876\u27e9\n    Creates a route with a handler and HTTP `CONNECT` verb pair.\n\ndelete\u27e877\u27e9\n    Creates a route with a handler and HTTP `DELETE` verb pair.\n\nget\u27e878\u27e9\n    Creates a route with a handler and HTTP `GET` verb pair.\n\nhead\u27e879\u27e9\n    Creates a route with a handler and HTTP `HEAD` verb pair.\n\non\u27e880\u27e9\n    Creates a route with a handler and HTTP verb pair.\n\noptions\u27e881\u27e9\n    Creates a route with a handler and HTTP `OPTIONS` verb pair.\n\npatch\u27e882\u27e9\n    Creates a route with a handler and HTTP `PATCH` verb pair.\n\npost\u27e883\u27e9\n    Creates a route with a handler and HTTP `POST` verb pair.\n\nput\u27e884\u27e9\n    Creates a route with a handler and HTTP `PUT` verb pair.\n\nserve\u27e885\u27e9\n    Starts a server and serves the connections.\n\ntrace\u27e886\u27e9\n    Creates a route with a handler and HTTP `TRACE` verb pair.\n## Type Aliases\u00a7\u27e887\u27e9\n\nBoxError\u27e888\u27e9\n    An owned dynamically typed `StdError`\u27e889\u27e9.\n\nNext\u27e890\u27e9\n    Represents a middleware parameter, which is a tuple that includes Requset and `BoxHandler`.\n\nRequest\u27e817\u27e9\n    Represents an HTTP Request.\n\nResponse\u27e853\u27e9\n    Represents an HTTP Response.\n\nResult\u27e891\u27e9\n    Represents either success (Ok) or failure (Err).\n## Attribute Macros\u00a7\u27e892\u27e9\n\nasync_trait\u27e893\u27e9\n\n\nhandler\u27e894\u27e9`macros`\n    Transforms `extract-handler` to a Handler instance.\n## Derive Macros\u00a7\u27e895\u27e9\n\nThisError\u27e896\u27e9\n\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/viz/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/viz/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/viz/latest/src/viz/lib.rs.html#1-548: Source\n\u27e84\u27e9 https://docs.rs/viz/latest/viz/#features: \u00a7\n\u27e85\u27e9 https://docs.rs/viz/latest/viz/#handler: `Handler`\n\u27e86\u27e9 https://docs.rs/viz/latest/viz/#middleware: `Middleware`\n\u27e87\u27e9 https://docs.rs/viz/latest/viz/#extractors: `Extractors`\n\u27e88\u27e9 https://docs.rs/viz/latest/viz/#routing: `Routing`\n\u27e89\u27e9 https://docs.rs/tower-service/latest/tower_service/trait.Service.html: `Service`\n\u27e810\u27e9 https://docs.rs/viz/latest/viz/#hello-viz: \u00a7\n\u27e811\u27e9 https://github.com/viz-rs/viz/tree/main/examples: here\n\u27e812\u27e9 https://docs.rs/viz/latest/viz/#simple-handlers: \u00a7\n\u27e813\u27e9 https://docs.rs/viz/latest/viz/#implemented-handler-trait: \u00a7\n\u27e814\u27e9 https://docs.rs/viz/latest/viz/trait.Handler.html: trait viz::Handler - `Handler`\n\u27e815\u27e9 https://docs.rs/viz/latest/viz/#with-extractors: \u00a7\n\u27e816\u27e9 https://docs.rs/viz/latest/viz/trait.FromRequest.html: trait viz::FromRequest - `FromRequest`\n\u27e817\u27e9 https://docs.rs/viz/latest/viz/type.Request.html: type viz::Request - `Request`\n\u27e818\u27e9 https://docs.rs/viz/latest/viz/trait.IntoHandler.html#tymethod.into_handler: method viz::IntoHandler::into_handler - `into_handler`\n\u27e819\u27e9 https://docs.rs/viz/latest/viz/#why-not-supports-handler-with-extractors-by-default: \u00a7\n\u27e820\u27e9 https://docs.rs/viz/latest/viz/#support-process-macros: \u00a7\n\u27e821\u27e9 https://docs.rs/viz/latest/viz/: This example is not tested - \u24d8\n\u27e822\u27e9 https://docs.rs/viz/latest/viz/#chaining-and-composing-handlers: \u00a7\n\u27e823\u27e9 https://docs.rs/viz/latest/viz/trait.HandlerExt.html: trait viz::HandlerExt - `HandlerExt`\n\u27e824\u27e9 https://docs.rs/futures/latest/futures/future/trait.FutureExt.html: `FutureExt`\n\u27e825\u27e9 https://docs.rs/futures/latest/futures/stream/trait.StreamExt.html: `StreamExt`\n\u27e826\u27e9 https://docs.rs/viz/latest/viz/trait.Transform.html: trait viz::Transform - `Transform`\n\u27e827\u27e9 https://docs.rs/viz/latest/viz/#simple-routes: \u00a7\n\u27e828\u27e9 https://docs.rs/viz/latest/viz/#crud-verbs: \u00a7\n\u27e829\u27e9 https://docs.rs/viz/latest/viz/#resources: \u00a7\n\u27e830\u27e9 https://docs.rs/viz/latest/viz/#nested: \u00a7\n\u27e831\u27e9 https://docs.rs/viz/latest/viz/#modules: \u00a7\n\u27e832\u27e9 https://docs.rs/viz/latest/viz/future/index.html: mod viz::future - future\n\u27e833\u27e9 https://docs.rs/viz/latest/viz/handler/index.html: mod viz::handler - handler\n\u27e834\u27e9 https://docs.rs/viz/latest/viz/handlers/index.html: mod viz::handlers - handlers\n\u27e835\u27e9 https://docs.rs/viz/latest/viz/header/index.html: mod viz::header - header\n\u27e836\u27e9 https://docs.rs/viz/latest/viz/headers/index.html: mod viz::headers - headers\n\u27e837\u27e9 https://docs.rs/viz/latest/viz/middleware/index.html: mod viz::middleware - middleware\n\u27e838\u27e9 https://docs.rs/viz/latest/viz/tls/index.html: mod viz::tls - tls\n\u27e839\u27e9 https://docs.rs/viz/latest/viz/types/index.html: mod viz::types - types\n\u27e840\u27e9 https://docs.rs/viz/latest/viz/#structs: \u00a7\n\u27e841\u27e9 https://docs.rs/viz/latest/viz/struct.BoxHandler.html: struct viz::BoxHandler - BoxHandler\n\u27e842\u27e9 https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html: trait core::clone::Clone - `Clone`\n\u27e843\u27e9 https://doc.rust-lang.org/nightly/core/marker/trait.Send.html: trait core::marker::Send - `Send`\n\u27e844\u27e9 https://docs.rs/viz/latest/viz/struct.Bytes.html: struct viz::Bytes - Bytes\n\u27e845\u27e9 https://docs.rs/viz/latest/viz/struct.BytesMut.html: struct viz::BytesMut - BytesMut\n\u27e846\u27e9 https://docs.rs/viz/latest/viz/struct.Incoming.html: struct viz::Incoming - Incoming\n\u27e847\u27e9 https://docs.rs/viz/latest/viz/struct.Io.html: struct viz::Io - Io\n\u27e848\u27e9 https://docs.rs/viz/latest/viz/struct.Method.html: struct viz::Method - Method\n\u27e849\u27e9 https://docs.rs/viz/latest/viz/struct.Path.html: struct viz::Path - Path\n\u27e850\u27e9 https://docs.rs/viz/latest/viz/struct.PathTree.html: struct viz::PathTree - PathTree\n\u27e851\u27e9 https://docs.rs/viz/latest/viz/struct.Resources.html: struct viz::Resources - Resources\n\u27e852\u27e9 https://docs.rs/viz/latest/viz/struct.Responder.html: struct viz::Responder - Responder\n\u27e853\u27e9 https://docs.rs/viz/latest/viz/type.Response.html: type viz::Response - `Response`\n\u27e854\u27e9 https://docs.rs/viz/latest/viz/struct.Route.html: struct viz::Route - Route\n\u27e855\u27e9 https://docs.rs/viz/latest/viz/struct.Router.html: struct viz::Router - Router\n\u27e856\u27e9 https://docs.rs/viz/latest/viz/struct.Server.html: struct viz::Server - Server\n\u27e857\u27e9 https://docs.rs/viz/latest/viz/struct.StatusCode.html: struct viz::StatusCode - StatusCode\n\u27e858\u27e9 https://docs.rs/viz/latest/viz/struct.Tree.html: struct viz::Tree - Tree\n\u27e859\u27e9 https://docs.rs/viz/latest/viz/#enums: \u00a7\n\u27e860\u27e9 https://docs.rs/viz/latest/viz/enum.Body.html: enum viz::Body - Body\n\u27e861\u27e9 https://docs.rs/viz/latest/viz/enum.BodyState.html: enum viz::BodyState - BodyState\n\u27e862\u27e9 https://docs.rs/viz/latest/viz/enum.Error.html: enum viz::Error - Error\n\u27e863\u27e9 https://docs.rs/viz/latest/viz/#traits: \u00a7\n\u27e864\u27e9 https://docs.rs/viz/latest/viz/trait.FnExt.html: trait viz::FnExt - FnExt\n\u27e865\u27e9 https://docs.rs/viz/latest/viz/trait.Future.html: trait viz::Future - Future\n\u27e866\u27e9 https://docs.rs/viz/std/keyword.async.html: `async`\n\u27e867\u27e9 https://docs.rs/viz/latest/viz/trait.HttpBody.html: trait viz::HttpBody - HttpBody\n\u27e868\u27e9 https://docs.rs/viz/latest/viz/trait.IntoHandler.html: trait viz::IntoHandler - IntoHandler\n\u27e869\u27e9 https://docs.rs/viz/latest/viz/trait.IntoResponse.html: trait viz::IntoResponse - IntoResponse\n\u27e870\u27e9 https://docs.rs/viz/latest/viz/trait.Listener.html: trait viz::Listener - Listener\n\u27e871\u27e9 https://docs.rs/viz/latest/viz/trait.RequestExt.html: trait viz::RequestExt - RequestExt\n\u27e872\u27e9 https://docs.rs/viz/latest/viz/trait.RequestLimitsExt.html: trait viz::RequestLimitsExt - RequestLimitsExt\n\u27e873\u27e9 https://docs.rs/viz/latest/viz/trait.ResponseExt.html: trait viz::ResponseExt - ResponseExt\n\u27e874\u27e9 https://docs.rs/viz/latest/viz/#functions: \u00a7\n\u27e875\u27e9 https://docs.rs/viz/latest/viz/fn.any.html: fn viz::any - any\n\u27e876\u27e9 https://docs.rs/viz/latest/viz/fn.connect.html: fn viz::connect - connect\n\u27e877\u27e9 https://docs.rs/viz/latest/viz/fn.delete.html: fn viz::delete - delete\n\u27e878\u27e9 https://docs.rs/viz/latest/viz/fn.get.html: fn viz::get - get\n\u27e879\u27e9 https://docs.rs/viz/latest/viz/fn.head.html: fn viz::head - head\n\u27e880\u27e9 https://docs.rs/viz/latest/viz/fn.on.html: fn viz::on - on\n\u27e881\u27e9 https://docs.rs/viz/latest/viz/fn.options.html: fn viz::options - options\n\u27e882\u27e9 https://docs.rs/viz/latest/viz/fn.patch.html: fn viz::patch - patch\n\u27e883\u27e9 https://docs.rs/viz/latest/viz/fn.post.html: fn viz::post - post\n\u27e884\u27e9 https://docs.rs/viz/latest/viz/fn.put.html: fn viz::put - put\n\u27e885\u27e9 https://docs.rs/viz/latest/viz/fn.serve.html: fn viz::serve - serve\n\u27e886\u27e9 https://docs.rs/viz/latest/viz/fn.trace.html: fn viz::trace - trace\n\u27e887\u27e9 https://docs.rs/viz/latest/viz/#types: \u00a7\n\u27e888\u27e9 https://docs.rs/viz/latest/viz/type.BoxError.html: type viz::BoxError - BoxError\n\u27e889\u27e9 https://doc.rust-lang.org/nightly/core/error/trait.Error.html: trait core::error::Error - `StdError`\n\u27e890\u27e9 https://docs.rs/viz/latest/viz/type.Next.html: type viz::Next - Next\n\u27e891\u27e9 https://docs.rs/viz/latest/viz/type.Result.html: type viz::Result - Result\n\u27e892\u27e9 https://docs.rs/viz/latest/viz/#attributes: \u00a7\n\u27e893\u27e9 https://docs.rs/viz/latest/viz/attr.async_trait.html: attr viz::async_trait - async_trait\n\u27e894\u27e9 https://docs.rs/viz/latest/viz/attr.handler.html: attr viz::handler - handler\n\u27e895\u27e9 https://docs.rs/viz/latest/viz/#derives: \u00a7\n\u27e896\u27e9 https://docs.rs/viz/latest/viz/derive.ThisError.html: derive viz::ThisError - ThisError\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "viz",
          "version": "0.10.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/viz/latest/viz/all.html \"show sidebar\")\n# Crate vizCopy item path\n[Settings](https://docs.rs/viz/latest/settings.html)\n[Help](https://docs.rs/viz/latest/help.html)\nSummary[Source](https://docs.rs/viz/latest/src/viz/lib.rs.html#1-548)\nExpand description\nViz\nFast, robust, flexible, lightweight web framework for Rust.\n## [\u00a7](https://docs.rs/viz/latest/viz/#features)Features\n  * **Safety** `#![forbid(unsafe_code)]`\n  * Lightweight\n  * Simple + Flexible [`Handler`](https://docs.rs/viz/latest/viz/#handler) & [`Middleware`](https://docs.rs/viz/latest/viz/#middleware)\n  * Handy [`Extractors`](https://docs.rs/viz/latest/viz/#extractors)\n  * Robust [`Routing`](https://docs.rs/viz/latest/viz/#routing)\n  * Supports Tower [`Service`](https://docs.rs/tower-service/latest/tower_service/trait.Service.html)\n\n\n## [\u00a7](https://docs.rs/viz/latest/viz/#hello-viz)Hello Viz\n```\nuse std::net::SocketAddr;\nuse tokio::net::TcpListener;\nuse viz::{serve, Request, Result, Router};\nasync fn index(_: Request) -> Result<&'static str> {\n  Ok(\"Hello, Viz!\")\n}\n#[tokio::main]\nasync fn main() -> Result<()> {\n  let addr = SocketAddr::from(([127, 0, 0, 1], 3000));\n  let listener = TcpListener::bind(addr).await?;\n  println!(\"listening on http://{addr}\");\n  let app = Router::new().get(\"/\", index);\n  if let Err(e) = serve(listener, app).await {\n    println!(\"{e}\");\n  }\n  Ok(())\n}\n```\n\nMore examples can be found [here](https://github.com/viz-rs/viz/tree/main/examples).\n## [\u00a7](https://docs.rs/viz/latest/viz/#handler)Handler\nA simple pattern `async fn(Request) -> Result<Response>` is used to handle requests in Viz.\n### [\u00a7](https://docs.rs/viz/latest/viz/#simple-handlers)Simple handlers\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(Response::text(\"Hello, World!\"))\n}\nasync fn about(_: Request) -> Result<&'static str> {\n  Ok(\"About Me!\")\n}\nasync fn not_found(_: Request) -> Result<impl IntoResponse> {\n  Ok(\"Not Found!\")\n}\n```\n\n### [\u00a7](https://docs.rs/viz/latest/viz/#implemented-handler-trait)Implemented Handler trait\nThe types can implement the [`Handler`](https://docs.rs/viz/latest/viz/trait.Handler.html \"trait viz::Handler\") trait to customize handlers.\n```\n#[derive(Clone)]\nstruct MyHandler {\n  code: Arc<AtomicUsize>,\n}\n#[async_trait]\nimpl Handler<Request> for MyHandler {\n  type Output = Result<Response>;\n  async fn call(&self, req: Request) -> Self::Output {\n    let path = req.path();\n    let method = req.method().clone();\n    let code = self.code.fetch_add(1, Ordering::SeqCst);\n    Ok(format!(\"code = {}, method = {}, path = {}\", code, method, path).into_response())\n  }\n}\n```\n\n### [\u00a7](https://docs.rs/viz/latest/viz/#with-extractors)With extractors\nSupports handler with `zero` or `one` or `more` extractors.\nExtractors must implement the [`FromRequest`](https://docs.rs/viz/latest/viz/trait.FromRequest.html \"trait viz::FromRequest\") trait for extracting data from the [`Request`](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\").\nWhen joining the routing system, it should first be converted to a handler using [`into_handler`](https://docs.rs/viz/latest/viz/trait.IntoHandler.html#tymethod.into_handler \"method viz::IntoHandler::into_handler\").\n```\nasync fn show_todo(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Hi, NO.{}\", id))\n}\nlet app = Router::new().route(\"/:id\", get(show_todo.into_handler()));\n```\n\n#### [\u00a7](https://docs.rs/viz/latest/viz/#why-not-supports-handler-with-extractors-by-default)Why not supports handler with extractors by default?\nViz allows more flexibility in organizing your code.\n```\nasync fn show_user(mut req: Request) -> Result<Response> {\n  let Params(id) = req.extract::<Params<u64>>().await?;\n  Ok(format!(\"post {}\", id).into_response())\n}\nasync fn show_user_ext(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Hi, NO.{}\", id))\n}\nasync fn show_user_wrap(req: Request) -> Result<impl IntoResponse> {\n  // https://github.com/rust-lang/rust/issues/48919\n  // show_user_ext.call(req).await\n  FnExt::call(&show_user_ext, req).await\n}\nlet app = Router::new()\n  .get(\"/users/:id\", show_user)\n  .get(\"/users_wrap/:id\", show_user_wrap)\n  .get(\"/users_ext/:id\", show_user_ext.into_handler());\n```\n\n#### [\u00a7](https://docs.rs/viz/latest/viz/#support-process-macros)Support process macros?\nSupport, you can enable the `macros` feature, using `#[handler]`.\nBut it\u2019s still recommended to use `into_handler` for conversion.\n[\u24d8](https://docs.rs/viz/latest/viz/ \"This example is not tested\")```\n\n#[handler]\nasync fn show_user(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Hi, NO.{}\", id))\n}\nasync fn update_user(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Updated, NO.{}\", id))\n}\nlet app = Router::new()\n  .get(\"/users/:id\", show_user)\n  .patch(\"/users/:id\", update_user.into_handler());\n```\n\n### [\u00a7](https://docs.rs/viz/latest/viz/#chaining-and-composing-handlers)Chaining and composing handlers\nThe [`HandlerExt`](https://docs.rs/viz/latest/viz/trait.HandlerExt.html \"trait viz::HandlerExt\") is an extension trait for [Handler](https://docs.rs/viz/latest/viz/trait.Handler.html \"trait viz::Handler\")s that provides a variety of convenient combinator functions.\nLikes the [`FutureExt`](https://docs.rs/futures/latest/futures/future/trait.FutureExt.html) and [`StreamExt`](https://docs.rs/futures/latest/futures/stream/trait.StreamExt.html) traits.\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(Response::text(\"hyper\"))\n}\nasync fn before(req: Request) -> Result<Request> {\n  if req.method() == Method::POST {\n    Ok(req)\n  } else {\n    Err(StatusCode::METHOD_NOT_ALLOWED.into_error())\n  }\n}\nasync fn around<H>((req, handler): Next<Request, H>) -> Result<Response>\nwhere\n  H: Handler<Request, Output = Result<Response>>,\n{\n  // before ...\n  let result = handler.call(req).await;\n  // after ...\n  result\n}\nasync fn after(result: Result<Response>) -> Result<Response> {\n  result.map(|mut res| {\n    *res.status_mut() = StatusCode::NO_CONTENT;\n    res\n  })\n}\nlet routing = Router::new()\n  .get(\"/\", index.before(before).around(around).after(after));\n```\n\n## [\u00a7](https://docs.rs/viz/latest/viz/#middleware)Middleware\nViz\u2019s middleware and handlers share a common [`Handler`](https://docs.rs/viz/latest/viz/trait.Handler.html \"trait viz::Handler\") trait, so its very easy to implement and extend the middleware.\nWe can add middleware to a single handler, or to all handlers.\nWe can also use [`Transform`](https://docs.rs/viz/latest/viz/trait.Transform.html \"trait viz::Transform\") trait for wrapping the inner handler during construction.\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(StatusCode::OK.into_response())\n}\nasync fn not_found(_: Request) -> Result<impl IntoResponse> {\n  Ok(StatusCode::OK)\n}\nasync fn show_user(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"post {}\", id))\n}\n// middleware fn\nasync fn around<H>((req, handler): Next<Request, H>) -> Result<Response>\nwhere\n  H: Handler<Request, Output = Result<Response>>,\n{\n  // before ...\n  let result = handler.call(req).await;\n  // after ...\n  result\n}\n// middleware struct\n#[derive(Clone)]\nstruct MyMiddleware {}\n#[async_trait]\nimpl<H> Handler<Next<Request, H>> for MyMiddleware\nwhere\n  H: Handler<Request>,\n{\n  type Output = H::Output;\n  async fn call(&self, (i, h): Next<Request, H>) -> Self::Output {\n    h.call(i).await\n  }\n}\n// A configuration for Timeout Middleware\nstruct Timeout {\n  delay: Duration,\n}\nimpl Timeout {\n  pub fn new(secs: u64) -> Self {\n    Self { delay: Duration::from_secs(secs) }\n  }\n}\nimpl<H: Clone> Transform<H> for Timeout {\n  type Output = TimeoutMiddleware<H>;\n  fn transform(&self, h: H) -> Self::Output {\n    TimeoutMiddleware(h, self.delay)\n  }\n}\n// Timeout Middleware\n#[derive(Clone)]\nstruct TimeoutMiddleware<H>(H, Duration);\n#[async_trait]\nimpl<H> Handler<Request> for TimeoutMiddleware<H>\nwhere\n  H: Handler<Request>,\n{\n  type Output = H::Output;\n  async fn call(&self, req: Request) -> Self::Output {\n    self.0.call(req).await\n  }\n}\nlet app = Router::new()\n  .get(\"/\", index\n    // handler level\n    .around(around)\n    .around(MyMiddleware {})\n    .with(Timeout::new(1))\n  )\n  .route(\"/users/:id\", get(\n    show_user\n      .into_handler()\n      .map_into_response()\n      // handler level\n      .around(around)\n      .with(Timeout::new(0))\n    )\n    .post(\n      (|_| async { Ok(Response::text(\"update\")) })\n      // handler level\n      .around(around)\n      .with(Timeout::new(0))\n    )\n    // route level\n    .with_handler(MyMiddleware {})\n    .with(Timeout::new(2))\n  )\n  .get(\"/*\", not_found\n    .map_into_response()\n    // handler level\n    .around(around)\n    .around(MyMiddleware {})\n  )\n  // router level\n  .with_handler(around)\n  .with_handler(MyMiddleware {})\n  .with(Timeout::new(4));\n```\n\n## [\u00a7](https://docs.rs/viz/latest/viz/#extractors)Extractors\nExtracts data from the [`Request`](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\").\n```\nstruct Counter(u16);\nimpl FromRequest for Counter {\n  type Error = Infallible;\n  async fn extract(req: &mut Request) -> Result<Self, Self::Error> {\n    let c = get_query_param(req.query_string());\n    Ok(Counter(c))\n  }\n}\nfn get_query_param(query: Option<&str>) -> u16 {\n  let query = query.unwrap_or(\"\");\n  let q = if let Some(pos) = query.find('q') {\n    query.split_at(pos + 2).1.parse().unwrap_or(1)\n  } else {\n    1\n  };\n  cmp::min(500, cmp::max(1, q))\n}\n```\n\n## [\u00a7](https://docs.rs/viz/latest/viz/#routing)Routing\nThe Viz router recognizes URLs and dispatches them to a handler.\n### [\u00a7](https://docs.rs/viz/latest/viz/#simple-routes)Simple routes\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(().into_response())\n}\nlet root = Router::new()\n .get(\"/\", index)\n .route(\"/about\", get(|_| async { Ok(\"about\") }));\nlet search = Router::new()\n .route(\"/\", Route::new().get(|_| async { Ok(\"search\") }));\n```\n\n### [\u00a7](https://docs.rs/viz/latest/viz/#crud-verbs)CRUD, Verbs\nAdds routes with the HTTP method.\n```\nasync fn index_todos(_: Request) -> Result<impl IntoResponse> {\n  Ok(())\n}\nasync fn create_todo(_: Request) -> Result<&'static str> {\n  Ok(\"created\")\n}\nasync fn new_todo(_: Request) -> Result<Response> {\n  Ok(Response::html(r#\"\n    <form method=\"post\" action=\"/\">\n      <input name=\"todo\" />\n      <button type=\"submit\">Create</button>\n    </form>\n  \"#))\n}\nasync fn show_todo(mut req: Request) -> Result<Response> {\n  let Params(id): Params<u64> = req.extract().await?;\n  Ok(Response::text(format!(\"todo's id is {}\", id)))\n}\nasync fn update_todo(_: Request) -> Result<()> {\n  Ok(())\n}\nasync fn destroy_todo(_: Request) -> Result<()> {\n  Ok(())\n}\nasync fn edit_todo(_: Request) -> Result<()> {\n  Ok(())\n}\nlet todos = Router::new()\n .route(\"/\", get(index_todos).post(create_todo))\n .post(\"/new\", new_todo)\n .route(\"/:id\", get(show_todo).patch(update_todo).delete(destroy_todo))\n .get(\"/:id/edit\", edit_todo);\n```\n\n### [\u00a7](https://docs.rs/viz/latest/viz/#resources)Resources\n```\n// GET `/search`\nasync fn search_users(_: Request) -> Result<Response> {\n  Ok(Response::json::<Vec<u64>>(vec![])?)\n}\n// GET `/`\nasync fn index_users(_: Request) -> Result<Response> {\n  Ok(Response::json::<Vec<u64>>(vec![])?)\n}\n// GET `/new`\nasync fn new_user(_: Request) -> Result<&'static str> {\n  Ok(\"User Form\")\n}\n// POST `/`\nasync fn create_user(_: Request) -> Result<&'static str> {\n  Ok(\"Created User\")\n}\n// GET `/user_id`\nasync fn show_user(_: Request) -> Result<&'static str> {\n  Ok(\"User ID 007\")\n}\n// GET `/user_id/edit`\nasync fn edit_user(_: Request) -> Result<&'static str> {\n  Ok(\"Edit User Form\")\n}\n// PUT `/user_id`\nasync fn update_user(_: Request) -> Result<&'static str> {\n  Ok(\"Updated User\")\n}\n// DELETE `/user_id`\nasync fn delete_user(_: Request) -> Result<&'static str> {\n  Ok(\"Deleted User\")\n}\nlet users = Resources::default()\n .named(\"user\")\n .route(\"/search\", get(search_users))\n .index(index_users)\n .new(new_user)\n .create(create_user)\n .show(show_user)\n .edit(edit_user)\n .update(update_user)\n .destroy(delete_user);\n```\n\n### [\u00a7](https://docs.rs/viz/latest/viz/#nested)Nested\n[\u24d8](https://docs.rs/viz/latest/viz/ \"This example is not tested\")```\nasync fn not_found(_: Request) -> Result<impl IntoResponse> {\n  Ok(StatusCode::NOT_FOUND)\n}\nlet app = Router::new()\n .nest(\"/\", root)\n .nest(\"/search\", search)\n .nest(\"/todos\", todos.clone())\n .nest(\"/users\", users.nest(\"todos\", todos))\n .route(\"/*\", any(not_found));\n```\n\n## Modules[\u00a7](https://docs.rs/viz/latest/viz/#modules)\n\n[future](https://docs.rs/viz/latest/viz/future/index.html \"mod viz::future\")\n    Asynchronous values.\n\n[handler](https://docs.rs/viz/latest/viz/handler/index.html \"mod viz::handler\")\n    Traits and types for handling an HTTP.\n\n[handlers](https://docs.rs/viz/latest/viz/handlers/index.html \"mod viz::handlers\")`handlers`\n    A collection of handlers for Viz.\n\n[header](https://docs.rs/viz/latest/viz/header/index.html \"mod viz::header\")\n    HTTP header types\n\n[headers](https://docs.rs/viz/latest/viz/headers/index.html \"mod viz::headers\")\n    Typed HTTP Headers\n\n[middleware](https://docs.rs/viz/latest/viz/middleware/index.html \"mod viz::middleware\")\n    Built-in Middleware.\n\n[tls](https://docs.rs/viz/latest/viz/tls/index.html \"mod viz::tls\")`native-tls` or `rustls`\n    TLS A TLS listener wrapper.\n\n[types](https://docs.rs/viz/latest/viz/types/index.html \"mod viz::types\")\n    Built-in Extractors types and traits.\n## Structs[\u00a7](https://docs.rs/viz/latest/viz/#structs)\n\n[BoxHandler](https://docs.rs/viz/latest/viz/struct.BoxHandler.html \"struct viz::BoxHandler\")\n    A [`Clone`](https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html \"trait core::clone::Clone\") + [`Send`](https://doc.rust-lang.org/nightly/core/marker/trait.Send.html \"trait core::marker::Send\") boxed [`Handler`](https://docs.rs/viz/latest/viz/trait.Handler.html \"trait viz::Handler\").\n\n[Bytes](https://docs.rs/viz/latest/viz/struct.Bytes.html \"struct viz::Bytes\")\n    A cheaply cloneable and sliceable chunk of contiguous memory.\n\n[BytesMut](https://docs.rs/viz/latest/viz/struct.BytesMut.html \"struct viz::BytesMut\")\n    A unique reference to a contiguous slice of memory.\n\n[Incoming](https://docs.rs/viz/latest/viz/struct.Incoming.html \"struct viz::Incoming\")\n    A stream of `Bytes`, used when receiving bodies from the network.\n\n[Io](https://docs.rs/viz/latest/viz/struct.Io.html \"struct viz::Io\")\n    A wrapper that implements Tokio\u2019s IO traits for an inner type that implements hyper\u2019s IO traits, or vice versa (implements hyper\u2019s IO traits for a type that implements Tokio\u2019s IO traits).\n\n[Method](https://docs.rs/viz/latest/viz/struct.Method.html \"struct viz::Method\")\n    The Request Method (VERB)\n\n[Path](https://docs.rs/viz/latest/viz/struct.Path.html \"struct viz::Path\")\n    Matched route path infomation.\n\n[PathTree](https://docs.rs/viz/latest/viz/struct.PathTree.html \"struct viz::PathTree\")\n    A path tree.\n\n[Resources](https://docs.rs/viz/latest/viz/struct.Resources.html \"struct viz::Resources\")\n    A resourceful route provides a mapping between HTTP verbs and URLs to handlers.\n\n[Responder](https://docs.rs/viz/latest/viz/struct.Responder.html \"struct viz::Responder\")\n    Handles the HTTP [`Request`](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\") and retures the HTTP [`Response`](https://docs.rs/viz/latest/viz/type.Response.html \"type viz::Response\").\n\n[Route](https://docs.rs/viz/latest/viz/struct.Route.html \"struct viz::Route\")\n    A collection of verb-handler pair.\n\n[Router](https://docs.rs/viz/latest/viz/struct.Router.html \"struct viz::Router\")\n    A routes collection.\n\n[Server](https://docs.rs/viz/latest/viz/struct.Server.html \"struct viz::Server\")\n    A listening HTTP server that accepts connections.\n\n[StatusCode](https://docs.rs/viz/latest/viz/struct.StatusCode.html \"struct viz::StatusCode\")\n    An HTTP status code (`status-code` in RFC 9110 et al.).\n\n[Tree](https://docs.rs/viz/latest/viz/struct.Tree.html \"struct viz::Tree\")\n    Store all final routes.\n## Enums[\u00a7](https://docs.rs/viz/latest/viz/#enums)\n\n[Body](https://docs.rs/viz/latest/viz/enum.Body.html \"enum viz::Body\")\n    A body for HTTP [`Request`](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\") and HTTP [`Response`](https://docs.rs/viz/latest/viz/type.Response.html \"type viz::Response\").\n\n[BodyState](https://docs.rs/viz/latest/viz/enum.BodyState.html \"enum viz::BodyState\")\n    A body state.\n\n[Error](https://docs.rs/viz/latest/viz/enum.Error.html \"enum viz::Error\")\n    Represents errors that can occur handling application.\n## Traits[\u00a7](https://docs.rs/viz/latest/viz/#traits)\n\n[FnExt](https://docs.rs/viz/latest/viz/trait.FnExt.html \"trait viz::FnExt\")\n    A handler with extractors.\n\n[FromRequest](https://docs.rs/viz/latest/viz/trait.FromRequest.html \"trait viz::FromRequest\")\n    An interface for extracting data from the HTTP [`Request`](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\").\n\n[Future](https://docs.rs/viz/latest/viz/trait.Future.html \"trait viz::Future\")\n    A future represents an asynchronous computation obtained by use of [`async`](https://docs.rs/viz/std/keyword.async.html).\n\n[Handler](https://docs.rs/viz/latest/viz/trait.Handler.html \"trait viz::Handler\")\n    A simplified asynchronous interface for handling input and output.\n\n[HandlerExt](https://docs.rs/viz/latest/viz/trait.HandlerExt.html \"trait viz::HandlerExt\")\n    The [`HandlerExt`](https://docs.rs/viz/latest/viz/trait.HandlerExt.html \"trait viz::HandlerExt\") trait, which provides adapters for chaining and composing handlers.\n\n[HttpBody](https://docs.rs/viz/latest/viz/trait.HttpBody.html \"trait viz::HttpBody\")\n    Trait representing a streaming body of a Request or Response.\n\n[IntoHandler](https://docs.rs/viz/latest/viz/trait.IntoHandler.html \"trait viz::IntoHandler\")\n    The trait implemented by types that can be converted to a [`Handler`](https://docs.rs/viz/latest/viz/trait.Handler.html \"trait viz::Handler\").\n\n[IntoResponse](https://docs.rs/viz/latest/viz/trait.IntoResponse.html \"trait viz::IntoResponse\")\n    Trait implemented by types that can be converted to an HTTP [`Response`](https://docs.rs/viz/latest/viz/type.Response.html \"type viz::Response\").\n\n[Listener](https://docs.rs/viz/latest/viz/trait.Listener.html \"trait viz::Listener\")\n    A trait for a listener: `TcpListener` and `UnixListener`.\n\n[RequestExt](https://docs.rs/viz/latest/viz/trait.RequestExt.html \"trait viz::RequestExt\")\n    The [`Request`](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\") Extension.\n\n[RequestLimitsExt](https://docs.rs/viz/latest/viz/trait.RequestLimitsExt.html \"trait viz::RequestLimitsExt\")\n    The [`Request`](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\") Extension with a limited body.\n\n[ResponseExt](https://docs.rs/viz/latest/viz/trait.ResponseExt.html \"trait viz::ResponseExt\")\n    The [`Response`](https://docs.rs/viz/latest/viz/type.Response.html \"type viz::Response\") Extension.\n\n[Transform](https://docs.rs/viz/latest/viz/trait.Transform.html \"trait viz::Transform\")\n    Then `Transform` trait defines the interface of a handler factory that wraps inner handler to a Handler during construction.\n## Functions[\u00a7](https://docs.rs/viz/latest/viz/#functions)\n\n[any](https://docs.rs/viz/latest/viz/fn.any.html \"fn viz::any\")\n    Creates a route with a handler and any HTTP verbs.\n\n[connect](https://docs.rs/viz/latest/viz/fn.connect.html \"fn viz::connect\")\n    Creates a route with a handler and HTTP `CONNECT` verb pair.\n\n[delete](https://docs.rs/viz/latest/viz/fn.delete.html \"fn viz::delete\")\n    Creates a route with a handler and HTTP `DELETE` verb pair.\n\n[get](https://docs.rs/viz/latest/viz/fn.get.html \"fn viz::get\")\n    Creates a route with a handler and HTTP `GET` verb pair.\n\n[head](https://docs.rs/viz/latest/viz/fn.head.html \"fn viz::head\")\n    Creates a route with a handler and HTTP `HEAD` verb pair.\n\n[on](https://docs.rs/viz/latest/viz/fn.on.html \"fn viz::on\")\n    Creates a route with a handler and HTTP verb pair.\n\n[options](https://docs.rs/viz/latest/viz/fn.options.html \"fn viz::options\")\n    Creates a route with a handler and HTTP `OPTIONS` verb pair.\n\n[patch](https://docs.rs/viz/latest/viz/fn.patch.html \"fn viz::patch\")\n    Creates a route with a handler and HTTP `PATCH` verb pair.\n\n[post](https://docs.rs/viz/latest/viz/fn.post.html \"fn viz::post\")\n    Creates a route with a handler and HTTP `POST` verb pair.\n\n[put](https://docs.rs/viz/latest/viz/fn.put.html \"fn viz::put\")\n    Creates a route with a handler and HTTP `PUT` verb pair.\n\n[serve](https://docs.rs/viz/latest/viz/fn.serve.html \"fn viz::serve\")\n    Starts a server and serves the connections.\n\n[trace](https://docs.rs/viz/latest/viz/fn.trace.html \"fn viz::trace\")\n    Creates a route with a handler and HTTP `TRACE` verb pair.\n## Type Aliases[\u00a7](https://docs.rs/viz/latest/viz/#types)\n\n[BoxError](https://docs.rs/viz/latest/viz/type.BoxError.html \"type viz::BoxError\")\n    An owned dynamically typed [`StdError`](https://doc.rust-lang.org/nightly/core/error/trait.Error.html \"trait core::error::Error\").\n\n[Next](https://docs.rs/viz/latest/viz/type.Next.html \"type viz::Next\")\n    Represents a middleware parameter, which is a tuple that includes Requset and `BoxHandler`.\n\n[Request](https://docs.rs/viz/latest/viz/type.Request.html \"type viz::Request\")\n    Represents an HTTP Request.\n\n[Response](https://docs.rs/viz/latest/viz/type.Response.html \"type viz::Response\")\n    Represents an HTTP Response.\n\n[Result](https://docs.rs/viz/latest/viz/type.Result.html \"type viz::Result\")\n    Represents either success (Ok) or failure (Err).\n## Attribute Macros[\u00a7](https://docs.rs/viz/latest/viz/#attributes)\n\n[async_trait](https://docs.rs/viz/latest/viz/attr.async_trait.html \"attr viz::async_trait\")\n\n\n[handler](https://docs.rs/viz/latest/viz/attr.handler.html \"attr viz::handler\")`macros`\n    Transforms `extract-handler` to a Handler instance.\n## Derive Macros[\u00a7](https://docs.rs/viz/latest/viz/#derives)\n\n[ThisError](https://docs.rs/viz/latest/viz/derive.ThisError.html \"derive viz::ThisError\")\n\n",
            "markdown_with_citations": "[](https://docs.rs/viz/latest/viz/all.html \"show sidebar\")\n# Crate vizCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nViz\nFast, robust, flexible, lightweight web framework for Rust.\n## \u00a7\u27e84\u27e9Features\n  * **Safety** `#![forbid(unsafe_code)]`\n  * Lightweight\n  * Simple + Flexible `Handler`\u27e85\u27e9 & `Middleware`\u27e86\u27e9\n  * Handy `Extractors`\u27e87\u27e9\n  * Robust `Routing`\u27e88\u27e9\n  * Supports Tower `Service`\u27e89\u27e9\n\n\n## \u00a7\u27e810\u27e9Hello Viz\n```\nuse std::net::SocketAddr;\nuse tokio::net::TcpListener;\nuse viz::{serve, Request, Result, Router};\nasync fn index(_: Request) -> Result<&'static str> {\n  Ok(\"Hello, Viz!\")\n}\n#[tokio::main]\nasync fn main() -> Result<()> {\n  let addr = SocketAddr::from(([127, 0, 0, 1], 3000));\n  let listener = TcpListener::bind(addr).await?;\n  println!(\"listening on http://{addr}\");\n  let app = Router::new().get(\"/\", index);\n  if let Err(e) = serve(listener, app).await {\n    println!(\"{e}\");\n  }\n  Ok(())\n}\n```\n\nMore examples can be found here\u27e811\u27e9.\n## \u00a7\u27e85\u27e9Handler\nA simple pattern `async fn(Request) -> Result<Response>` is used to handle requests in Viz.\n### \u00a7\u27e812\u27e9Simple handlers\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(Response::text(\"Hello, World!\"))\n}\nasync fn about(_: Request) -> Result<&'static str> {\n  Ok(\"About Me!\")\n}\nasync fn not_found(_: Request) -> Result<impl IntoResponse> {\n  Ok(\"Not Found!\")\n}\n```\n\n### \u00a7\u27e813\u27e9Implemented Handler trait\nThe types can implement the `Handler`\u27e814\u27e9 trait to customize handlers.\n```\n#[derive(Clone)]\nstruct MyHandler {\n  code: Arc<AtomicUsize>,\n}\n#[async_trait]\nimpl Handler<Request> for MyHandler {\n  type Output = Result<Response>;\n  async fn call(&self, req: Request) -> Self::Output {\n    let path = req.path();\n    let method = req.method().clone();\n    let code = self.code.fetch_add(1, Ordering::SeqCst);\n    Ok(format!(\"code = {}, method = {}, path = {}\", code, method, path).into_response())\n  }\n}\n```\n\n### \u00a7\u27e815\u27e9With extractors\nSupports handler with `zero` or `one` or `more` extractors.\nExtractors must implement the `FromRequest`\u27e816\u27e9 trait for extracting data from the `Request`\u27e817\u27e9.\nWhen joining the routing system, it should first be converted to a handler using `into_handler`\u27e818\u27e9.\n```\nasync fn show_todo(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Hi, NO.{}\", id))\n}\nlet app = Router::new().route(\"/:id\", get(show_todo.into_handler()));\n```\n\n#### \u00a7\u27e819\u27e9Why not supports handler with extractors by default?\nViz allows more flexibility in organizing your code.\n```\nasync fn show_user(mut req: Request) -> Result<Response> {\n  let Params(id) = req.extract::<Params<u64>>().await?;\n  Ok(format!(\"post {}\", id).into_response())\n}\nasync fn show_user_ext(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Hi, NO.{}\", id))\n}\nasync fn show_user_wrap(req: Request) -> Result<impl IntoResponse> {\n  // https://github.com/rust-lang/rust/issues/48919\n  // show_user_ext.call(req).await\n  FnExt::call(&show_user_ext, req).await\n}\nlet app = Router::new()\n  .get(\"/users/:id\", show_user)\n  .get(\"/users_wrap/:id\", show_user_wrap)\n  .get(\"/users_ext/:id\", show_user_ext.into_handler());\n```\n\n#### \u00a7\u27e820\u27e9Support process macros?\nSupport, you can enable the `macros` feature, using `#[handler]`.\nBut it\u2019s still recommended to use `into_handler` for conversion.\n\u24d8\u27e821\u27e9```\n\n#[handler]\nasync fn show_user(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Hi, NO.{}\", id))\n}\nasync fn update_user(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"Updated, NO.{}\", id))\n}\nlet app = Router::new()\n  .get(\"/users/:id\", show_user)\n  .patch(\"/users/:id\", update_user.into_handler());\n```\n\n### \u00a7\u27e822\u27e9Chaining and composing handlers\nThe `HandlerExt`\u27e823\u27e9 is an extension trait for Handler\u27e814\u27e9s that provides a variety of convenient combinator functions.\nLikes the `FutureExt`\u27e824\u27e9 and `StreamExt`\u27e825\u27e9 traits.\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(Response::text(\"hyper\"))\n}\nasync fn before(req: Request) -> Result<Request> {\n  if req.method() == Method::POST {\n    Ok(req)\n  } else {\n    Err(StatusCode::METHOD_NOT_ALLOWED.into_error())\n  }\n}\nasync fn around<H>((req, handler): Next<Request, H>) -> Result<Response>\nwhere\n  H: Handler<Request, Output = Result<Response>>,\n{\n  // before ...\n  let result = handler.call(req).await;\n  // after ...\n  result\n}\nasync fn after(result: Result<Response>) -> Result<Response> {\n  result.map(|mut res| {\n    *res.status_mut() = StatusCode::NO_CONTENT;\n    res\n  })\n}\nlet routing = Router::new()\n  .get(\"/\", index.before(before).around(around).after(after));\n```\n\n## \u00a7\u27e86\u27e9Middleware\nViz\u2019s middleware and handlers share a common `Handler`\u27e814\u27e9 trait, so its very easy to implement and extend the middleware.\nWe can add middleware to a single handler, or to all handlers.\nWe can also use `Transform`\u27e826\u27e9 trait for wrapping the inner handler during construction.\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(StatusCode::OK.into_response())\n}\nasync fn not_found(_: Request) -> Result<impl IntoResponse> {\n  Ok(StatusCode::OK)\n}\nasync fn show_user(Params(id): Params<u64>) -> Result<impl IntoResponse> {\n  Ok(format!(\"post {}\", id))\n}\n// middleware fn\nasync fn around<H>((req, handler): Next<Request, H>) -> Result<Response>\nwhere\n  H: Handler<Request, Output = Result<Response>>,\n{\n  // before ...\n  let result = handler.call(req).await;\n  // after ...\n  result\n}\n// middleware struct\n#[derive(Clone)]\nstruct MyMiddleware {}\n#[async_trait]\nimpl<H> Handler<Next<Request, H>> for MyMiddleware\nwhere\n  H: Handler<Request>,\n{\n  type Output = H::Output;\n  async fn call(&self, (i, h): Next<Request, H>) -> Self::Output {\n    h.call(i).await\n  }\n}\n// A configuration for Timeout Middleware\nstruct Timeout {\n  delay: Duration,\n}\nimpl Timeout {\n  pub fn new(secs: u64) -> Self {\n    Self { delay: Duration::from_secs(secs) }\n  }\n}\nimpl<H: Clone> Transform<H> for Timeout {\n  type Output = TimeoutMiddleware<H>;\n  fn transform(&self, h: H) -> Self::Output {\n    TimeoutMiddleware(h, self.delay)\n  }\n}\n// Timeout Middleware\n#[derive(Clone)]\nstruct TimeoutMiddleware<H>(H, Duration);\n#[async_trait]\nimpl<H> Handler<Request> for TimeoutMiddleware<H>\nwhere\n  H: Handler<Request>,\n{\n  type Output = H::Output;\n  async fn call(&self, req: Request) -> Self::Output {\n    self.0.call(req).await\n  }\n}\nlet app = Router::new()\n  .get(\"/\", index\n    // handler level\n    .around(around)\n    .around(MyMiddleware {})\n    .with(Timeout::new(1))\n  )\n  .route(\"/users/:id\", get(\n    show_user\n      .into_handler()\n      .map_into_response()\n      // handler level\n      .around(around)\n      .with(Timeout::new(0))\n    )\n    .post(\n      (|_| async { Ok(Response::text(\"update\")) })\n      // handler level\n      .around(around)\n      .with(Timeout::new(0))\n    )\n    // route level\n    .with_handler(MyMiddleware {})\n    .with(Timeout::new(2))\n  )\n  .get(\"/*\", not_found\n    .map_into_response()\n    // handler level\n    .around(around)\n    .around(MyMiddleware {})\n  )\n  // router level\n  .with_handler(around)\n  .with_handler(MyMiddleware {})\n  .with(Timeout::new(4));\n```\n\n## \u00a7\u27e87\u27e9Extractors\nExtracts data from the `Request`\u27e817\u27e9.\n```\nstruct Counter(u16);\nimpl FromRequest for Counter {\n  type Error = Infallible;\n  async fn extract(req: &mut Request) -> Result<Self, Self::Error> {\n    let c = get_query_param(req.query_string());\n    Ok(Counter(c))\n  }\n}\nfn get_query_param(query: Option<&str>) -> u16 {\n  let query = query.unwrap_or(\"\");\n  let q = if let Some(pos) = query.find('q') {\n    query.split_at(pos + 2).1.parse().unwrap_or(1)\n  } else {\n    1\n  };\n  cmp::min(500, cmp::max(1, q))\n}\n```\n\n## \u00a7\u27e88\u27e9Routing\nThe Viz router recognizes URLs and dispatches them to a handler.\n### \u00a7\u27e827\u27e9Simple routes\n```\nasync fn index(_: Request) -> Result<Response> {\n  Ok(().into_response())\n}\nlet root = Router::new()\n .get(\"/\", index)\n .route(\"/about\", get(|_| async { Ok(\"about\") }));\nlet search = Router::new()\n .route(\"/\", Route::new().get(|_| async { Ok(\"search\") }));\n```\n\n### \u00a7\u27e828\u27e9CRUD, Verbs\nAdds routes with the HTTP method.\n```\nasync fn index_todos(_: Request) -> Result<impl IntoResponse> {\n  Ok(())\n}\nasync fn create_todo(_: Request) -> Result<&'static str> {\n  Ok(\"created\")\n}\nasync fn new_todo(_: Request) -> Result<Response> {\n  Ok(Response::html(r#\"\n    <form method=\"post\" action=\"/\">\n      <input name=\"todo\" />\n      <button type=\"submit\">Create</button>\n    </form>\n  \"#))\n}\nasync fn show_todo(mut req: Request) -> Result<Response> {\n  let Params(id): Params<u64> = req.extract().await?;\n  Ok(Response::text(format!(\"todo's id is {}\", id)))\n}\nasync fn update_todo(_: Request) -> Result<()> {\n  Ok(())\n}\nasync fn destroy_todo(_: Request) -> Result<()> {\n  Ok(())\n}\nasync fn edit_todo(_: Request) -> Result<()> {\n  Ok(())\n}\nlet todos = Router::new()\n .route(\"/\", get(index_todos).post(create_todo))\n .post(\"/new\", new_todo)\n .route(\"/:id\", get(show_todo).patch(update_todo).delete(destroy_todo))\n .get(\"/:id/edit\", edit_todo);\n```\n\n### \u00a7\u27e829\u27e9Resources\n```\n// GET `/search`\nasync fn search_users(_: Request) -> Result<Response> {\n  Ok(Response::json::<Vec<u64>>(vec![])?)\n}\n// GET `/`\nasync fn index_users(_: Request) -> Result<Response> {\n  Ok(Response::json::<Vec<u64>>(vec![])?)\n}\n// GET `/new`\nasync fn new_user(_: Request) -> Result<&'static str> {\n  Ok(\"User Form\")\n}\n// POST `/`\nasync fn create_user(_: Request) -> Result<&'static str> {\n  Ok(\"Created User\")\n}\n// GET `/user_id`\nasync fn show_user(_: Request) -> Result<&'static str> {\n  Ok(\"User ID 007\")\n}\n// GET `/user_id/edit`\nasync fn edit_user(_: Request) -> Result<&'static str> {\n  Ok(\"Edit User Form\")\n}\n// PUT `/user_id`\nasync fn update_user(_: Request) -> Result<&'static str> {\n  Ok(\"Updated User\")\n}\n// DELETE `/user_id`\nasync fn delete_user(_: Request) -> Result<&'static str> {\n  Ok(\"Deleted User\")\n}\nlet users = Resources::default()\n .named(\"user\")\n .route(\"/search\", get(search_users))\n .index(index_users)\n .new(new_user)\n .create(create_user)\n .show(show_user)\n .edit(edit_user)\n .update(update_user)\n .destroy(delete_user);\n```\n\n### \u00a7\u27e830\u27e9Nested\n\u24d8\u27e821\u27e9```\nasync fn not_found(_: Request) -> Result<impl IntoResponse> {\n  Ok(StatusCode::NOT_FOUND)\n}\nlet app = Router::new()\n .nest(\"/\", root)\n .nest(\"/search\", search)\n .nest(\"/todos\", todos.clone())\n .nest(\"/users\", users.nest(\"todos\", todos))\n .route(\"/*\", any(not_found));\n```\n\n## Modules\u00a7\u27e831\u27e9\n\nfuture\u27e832\u27e9\n    Asynchronous values.\n\nhandler\u27e833\u27e9\n    Traits and types for handling an HTTP.\n\nhandlers\u27e834\u27e9`handlers`\n    A collection of handlers for Viz.\n\nheader\u27e835\u27e9\n    HTTP header types\n\nheaders\u27e836\u27e9\n    Typed HTTP Headers\n\nmiddleware\u27e837\u27e9\n    Built-in Middleware.\n\ntls\u27e838\u27e9`native-tls` or `rustls`\n    TLS A TLS listener wrapper.\n\ntypes\u27e839\u27e9\n    Built-in Extractors types and traits.\n## Structs\u00a7\u27e840\u27e9\n\nBoxHandler\u27e841\u27e9\n    A `Clone`\u27e842\u27e9 + `Send`\u27e843\u27e9 boxed `Handler`\u27e814\u27e9.\n\nBytes\u27e844\u27e9\n    A cheaply cloneable and sliceable chunk of contiguous memory.\n\nBytesMut\u27e845\u27e9\n    A unique reference to a contiguous slice of memory.\n\nIncoming\u27e846\u27e9\n    A stream of `Bytes`, used when receiving bodies from the network.\n\nIo\u27e847\u27e9\n    A wrapper that implements Tokio\u2019s IO traits for an inner type that implements hyper\u2019s IO traits, or vice versa (implements hyper\u2019s IO traits for a type that implements Tokio\u2019s IO traits).\n\nMethod\u27e848\u27e9\n    The Request Method (VERB)\n\nPath\u27e849\u27e9\n    Matched route path infomation.\n\nPathTree\u27e850\u27e9\n    A path tree.\n\nResources\u27e851\u27e9\n    A resourceful route provides a mapping between HTTP verbs and URLs to handlers.\n\nResponder\u27e852\u27e9\n    Handles the HTTP `Request`\u27e817\u27e9 and retures the HTTP `Response`\u27e853\u27e9.\n\nRoute\u27e854\u27e9\n    A collection of verb-handler pair.\n\nRouter\u27e855\u27e9\n    A routes collection.\n\nServer\u27e856\u27e9\n    A listening HTTP server that accepts connections.\n\nStatusCode\u27e857\u27e9\n    An HTTP status code (`status-code` in RFC 9110 et al.).\n\nTree\u27e858\u27e9\n    Store all final routes.\n## Enums\u00a7\u27e859\u27e9\n\nBody\u27e860\u27e9\n    A body for HTTP `Request`\u27e817\u27e9 and HTTP `Response`\u27e853\u27e9.\n\nBodyState\u27e861\u27e9\n    A body state.\n\nError\u27e862\u27e9\n    Represents errors that can occur handling application.\n## Traits\u00a7\u27e863\u27e9\n\nFnExt\u27e864\u27e9\n    A handler with extractors.\n\nFromRequest\u27e816\u27e9\n    An interface for extracting data from the HTTP `Request`\u27e817\u27e9.\n\nFuture\u27e865\u27e9\n    A future represents an asynchronous computation obtained by use of `async`\u27e866\u27e9.\n\nHandler\u27e814\u27e9\n    A simplified asynchronous interface for handling input and output.\n\nHandlerExt\u27e823\u27e9\n    The `HandlerExt`\u27e823\u27e9 trait, which provides adapters for chaining and composing handlers.\n\nHttpBody\u27e867\u27e9\n    Trait representing a streaming body of a Request or Response.\n\nIntoHandler\u27e868\u27e9\n    The trait implemented by types that can be converted to a `Handler`\u27e814\u27e9.\n\nIntoResponse\u27e869\u27e9\n    Trait implemented by types that can be converted to an HTTP `Response`\u27e853\u27e9.\n\nListener\u27e870\u27e9\n    A trait for a listener: `TcpListener` and `UnixListener`.\n\nRequestExt\u27e871\u27e9\n    The `Request`\u27e817\u27e9 Extension.\n\nRequestLimitsExt\u27e872\u27e9\n    The `Request`\u27e817\u27e9 Extension with a limited body.\n\nResponseExt\u27e873\u27e9\n    The `Response`\u27e853\u27e9 Extension.\n\nTransform\u27e826\u27e9\n    Then `Transform` trait defines the interface of a handler factory that wraps inner handler to a Handler during construction.\n## Functions\u00a7\u27e874\u27e9\n\nany\u27e875\u27e9\n    Creates a route with a handler and any HTTP verbs.\n\nconnect\u27e876\u27e9\n    Creates a route with a handler and HTTP `CONNECT` verb pair.\n\ndelete\u27e877\u27e9\n    Creates a route with a handler and HTTP `DELETE` verb pair.\n\nget\u27e878\u27e9\n    Creates a route with a handler and HTTP `GET` verb pair.\n\nhead\u27e879\u27e9\n    Creates a route with a handler and HTTP `HEAD` verb pair.\n\non\u27e880\u27e9\n    Creates a route with a handler and HTTP verb pair.\n\noptions\u27e881\u27e9\n    Creates a route with a handler and HTTP `OPTIONS` verb pair.\n\npatch\u27e882\u27e9\n    Creates a route with a handler and HTTP `PATCH` verb pair.\n\npost\u27e883\u27e9\n    Creates a route with a handler and HTTP `POST` verb pair.\n\nput\u27e884\u27e9\n    Creates a route with a handler and HTTP `PUT` verb pair.\n\nserve\u27e885\u27e9\n    Starts a server and serves the connections.\n\ntrace\u27e886\u27e9\n    Creates a route with a handler and HTTP `TRACE` verb pair.\n## Type Aliases\u00a7\u27e887\u27e9\n\nBoxError\u27e888\u27e9\n    An owned dynamically typed `StdError`\u27e889\u27e9.\n\nNext\u27e890\u27e9\n    Represents a middleware parameter, which is a tuple that includes Requset and `BoxHandler`.\n\nRequest\u27e817\u27e9\n    Represents an HTTP Request.\n\nResponse\u27e853\u27e9\n    Represents an HTTP Response.\n\nResult\u27e891\u27e9\n    Represents either success (Ok) or failure (Err).\n## Attribute Macros\u00a7\u27e892\u27e9\n\nasync_trait\u27e893\u27e9\n\n\nhandler\u27e894\u27e9`macros`\n    Transforms `extract-handler` to a Handler instance.\n## Derive Macros\u00a7\u27e895\u27e9\n\nThisError\u27e896\u27e9\n\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/viz/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/viz/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/viz/latest/src/viz/lib.rs.html#1-548: Source\n\u27e84\u27e9 https://docs.rs/viz/latest/viz/#features: \u00a7\n\u27e85\u27e9 https://docs.rs/viz/latest/viz/#handler: `Handler`\n\u27e86\u27e9 https://docs.rs/viz/latest/viz/#middleware: `Middleware`\n\u27e87\u27e9 https://docs.rs/viz/latest/viz/#extractors: `Extractors`\n\u27e88\u27e9 https://docs.rs/viz/latest/viz/#routing: `Routing`\n\u27e89\u27e9 https://docs.rs/tower-service/latest/tower_service/trait.Service.html: `Service`\n\u27e810\u27e9 https://docs.rs/viz/latest/viz/#hello-viz: \u00a7\n\u27e811\u27e9 https://github.com/viz-rs/viz/tree/main/examples: here\n\u27e812\u27e9 https://docs.rs/viz/latest/viz/#simple-handlers: \u00a7\n\u27e813\u27e9 https://docs.rs/viz/latest/viz/#implemented-handler-trait: \u00a7\n\u27e814\u27e9 https://docs.rs/viz/latest/viz/trait.Handler.html: trait viz::Handler - `Handler`\n\u27e815\u27e9 https://docs.rs/viz/latest/viz/#with-extractors: \u00a7\n\u27e816\u27e9 https://docs.rs/viz/latest/viz/trait.FromRequest.html: trait viz::FromRequest - `FromRequest`\n\u27e817\u27e9 https://docs.rs/viz/latest/viz/type.Request.html: type viz::Request - `Request`\n\u27e818\u27e9 https://docs.rs/viz/latest/viz/trait.IntoHandler.html#tymethod.into_handler: method viz::IntoHandler::into_handler - `into_handler`\n\u27e819\u27e9 https://docs.rs/viz/latest/viz/#why-not-supports-handler-with-extractors-by-default: \u00a7\n\u27e820\u27e9 https://docs.rs/viz/latest/viz/#support-process-macros: \u00a7\n\u27e821\u27e9 https://docs.rs/viz/latest/viz/: This example is not tested - \u24d8\n\u27e822\u27e9 https://docs.rs/viz/latest/viz/#chaining-and-composing-handlers: \u00a7\n\u27e823\u27e9 https://docs.rs/viz/latest/viz/trait.HandlerExt.html: trait viz::HandlerExt - `HandlerExt`\n\u27e824\u27e9 https://docs.rs/futures/latest/futures/future/trait.FutureExt.html: `FutureExt`\n\u27e825\u27e9 https://docs.rs/futures/latest/futures/stream/trait.StreamExt.html: `StreamExt`\n\u27e826\u27e9 https://docs.rs/viz/latest/viz/trait.Transform.html: trait viz::Transform - `Transform`\n\u27e827\u27e9 https://docs.rs/viz/latest/viz/#simple-routes: \u00a7\n\u27e828\u27e9 https://docs.rs/viz/latest/viz/#crud-verbs: \u00a7\n\u27e829\u27e9 https://docs.rs/viz/latest/viz/#resources: \u00a7\n\u27e830\u27e9 https://docs.rs/viz/latest/viz/#nested: \u00a7\n\u27e831\u27e9 https://docs.rs/viz/latest/viz/#modules: \u00a7\n\u27e832\u27e9 https://docs.rs/viz/latest/viz/future/index.html: mod viz::future - future\n\u27e833\u27e9 https://docs.rs/viz/latest/viz/handler/index.html: mod viz::handler - handler\n\u27e834\u27e9 https://docs.rs/viz/latest/viz/handlers/index.html: mod viz::handlers - handlers\n\u27e835\u27e9 https://docs.rs/viz/latest/viz/header/index.html: mod viz::header - header\n\u27e836\u27e9 https://docs.rs/viz/latest/viz/headers/index.html: mod viz::headers - headers\n\u27e837\u27e9 https://docs.rs/viz/latest/viz/middleware/index.html: mod viz::middleware - middleware\n\u27e838\u27e9 https://docs.rs/viz/latest/viz/tls/index.html: mod viz::tls - tls\n\u27e839\u27e9 https://docs.rs/viz/latest/viz/types/index.html: mod viz::types - types\n\u27e840\u27e9 https://docs.rs/viz/latest/viz/#structs: \u00a7\n\u27e841\u27e9 https://docs.rs/viz/latest/viz/struct.BoxHandler.html: struct viz::BoxHandler - BoxHandler\n\u27e842\u27e9 https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html: trait core::clone::Clone - `Clone`\n\u27e843\u27e9 https://doc.rust-lang.org/nightly/core/marker/trait.Send.html: trait core::marker::Send - `Send`\n\u27e844\u27e9 https://docs.rs/viz/latest/viz/struct.Bytes.html: struct viz::Bytes - Bytes\n\u27e845\u27e9 https://docs.rs/viz/latest/viz/struct.BytesMut.html: struct viz::BytesMut - BytesMut\n\u27e846\u27e9 https://docs.rs/viz/latest/viz/struct.Incoming.html: struct viz::Incoming - Incoming\n\u27e847\u27e9 https://docs.rs/viz/latest/viz/struct.Io.html: struct viz::Io - Io\n\u27e848\u27e9 https://docs.rs/viz/latest/viz/struct.Method.html: struct viz::Method - Method\n\u27e849\u27e9 https://docs.rs/viz/latest/viz/struct.Path.html: struct viz::Path - Path\n\u27e850\u27e9 https://docs.rs/viz/latest/viz/struct.PathTree.html: struct viz::PathTree - PathTree\n\u27e851\u27e9 https://docs.rs/viz/latest/viz/struct.Resources.html: struct viz::Resources - Resources\n\u27e852\u27e9 https://docs.rs/viz/latest/viz/struct.Responder.html: struct viz::Responder - Responder\n\u27e853\u27e9 https://docs.rs/viz/latest/viz/type.Response.html: type viz::Response - `Response`\n\u27e854\u27e9 https://docs.rs/viz/latest/viz/struct.Route.html: struct viz::Route - Route\n\u27e855\u27e9 https://docs.rs/viz/latest/viz/struct.Router.html: struct viz::Router - Router\n\u27e856\u27e9 https://docs.rs/viz/latest/viz/struct.Server.html: struct viz::Server - Server\n\u27e857\u27e9 https://docs.rs/viz/latest/viz/struct.StatusCode.html: struct viz::StatusCode - StatusCode\n\u27e858\u27e9 https://docs.rs/viz/latest/viz/struct.Tree.html: struct viz::Tree - Tree\n\u27e859\u27e9 https://docs.rs/viz/latest/viz/#enums: \u00a7\n\u27e860\u27e9 https://docs.rs/viz/latest/viz/enum.Body.html: enum viz::Body - Body\n\u27e861\u27e9 https://docs.rs/viz/latest/viz/enum.BodyState.html: enum viz::BodyState - BodyState\n\u27e862\u27e9 https://docs.rs/viz/latest/viz/enum.Error.html: enum viz::Error - Error\n\u27e863\u27e9 https://docs.rs/viz/latest/viz/#traits: \u00a7\n\u27e864\u27e9 https://docs.rs/viz/latest/viz/trait.FnExt.html: trait viz::FnExt - FnExt\n\u27e865\u27e9 https://docs.rs/viz/latest/viz/trait.Future.html: trait viz::Future - Future\n\u27e866\u27e9 https://docs.rs/viz/std/keyword.async.html: `async`\n\u27e867\u27e9 https://docs.rs/viz/latest/viz/trait.HttpBody.html: trait viz::HttpBody - HttpBody\n\u27e868\u27e9 https://docs.rs/viz/latest/viz/trait.IntoHandler.html: trait viz::IntoHandler - IntoHandler\n\u27e869\u27e9 https://docs.rs/viz/latest/viz/trait.IntoResponse.html: trait viz::IntoResponse - IntoResponse\n\u27e870\u27e9 https://docs.rs/viz/latest/viz/trait.Listener.html: trait viz::Listener - Listener\n\u27e871\u27e9 https://docs.rs/viz/latest/viz/trait.RequestExt.html: trait viz::RequestExt - RequestExt\n\u27e872\u27e9 https://docs.rs/viz/latest/viz/trait.RequestLimitsExt.html: trait viz::RequestLimitsExt - RequestLimitsExt\n\u27e873\u27e9 https://docs.rs/viz/latest/viz/trait.ResponseExt.html: trait viz::ResponseExt - ResponseExt\n\u27e874\u27e9 https://docs.rs/viz/latest/viz/#functions: \u00a7\n\u27e875\u27e9 https://docs.rs/viz/latest/viz/fn.any.html: fn viz::any - any\n\u27e876\u27e9 https://docs.rs/viz/latest/viz/fn.connect.html: fn viz::connect - connect\n\u27e877\u27e9 https://docs.rs/viz/latest/viz/fn.delete.html: fn viz::delete - delete\n\u27e878\u27e9 https://docs.rs/viz/latest/viz/fn.get.html: fn viz::get - get\n\u27e879\u27e9 https://docs.rs/viz/latest/viz/fn.head.html: fn viz::head - head\n\u27e880\u27e9 https://docs.rs/viz/latest/viz/fn.on.html: fn viz::on - on\n\u27e881\u27e9 https://docs.rs/viz/latest/viz/fn.options.html: fn viz::options - options\n\u27e882\u27e9 https://docs.rs/viz/latest/viz/fn.patch.html: fn viz::patch - patch\n\u27e883\u27e9 https://docs.rs/viz/latest/viz/fn.post.html: fn viz::post - post\n\u27e884\u27e9 https://docs.rs/viz/latest/viz/fn.put.html: fn viz::put - put\n\u27e885\u27e9 https://docs.rs/viz/latest/viz/fn.serve.html: fn viz::serve - serve\n\u27e886\u27e9 https://docs.rs/viz/latest/viz/fn.trace.html: fn viz::trace - trace\n\u27e887\u27e9 https://docs.rs/viz/latest/viz/#types: \u00a7\n\u27e888\u27e9 https://docs.rs/viz/latest/viz/type.BoxError.html: type viz::BoxError - BoxError\n\u27e889\u27e9 https://doc.rust-lang.org/nightly/core/error/trait.Error.html: trait core::error::Error - `StdError`\n\u27e890\u27e9 https://docs.rs/viz/latest/viz/type.Next.html: type viz::Next - Next\n\u27e891\u27e9 https://docs.rs/viz/latest/viz/type.Result.html: type viz::Result - Result\n\u27e892\u27e9 https://docs.rs/viz/latest/viz/#attributes: \u00a7\n\u27e893\u27e9 https://docs.rs/viz/latest/viz/attr.async_trait.html: attr viz::async_trait - async_trait\n\u27e894\u27e9 https://docs.rs/viz/latest/viz/attr.handler.html: attr viz::handler - handler\n\u27e895\u27e9 https://docs.rs/viz/latest/viz/#derives: \u00a7\n\u27e896\u27e9 https://docs.rs/viz/latest/viz/derive.ThisError.html: derive viz::ThisError - ThisError\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `viz` crate is a fast, lightweight, and flexible web framework for Rust, designed with safety (`#![forbid(unsafe_code]`) and simplicity in mind. It offers robust routing, customizable handlers, middleware support, and handy extractors for processing requests. Additionally, it integrates with Tower services and supports process macros for enhanced developer productivity.",
          "feature_summary": null,
          "use_case": "Web Framework",
          "score": 6.0,
          "factual_counterfactual": "### Pair 1: Safety and Code Restrictions  \n\u2705 **Factual:** The `viz` crate explicitly forbids the use of `unsafe` code by including `#![forbid(unsafe_code)]` in its design, ensuring a high level of safety in its implementation.  \n\u274c **Counterfactual:** The `viz` crate allows the use of `unsafe` code in certain performance-critical sections to optimize request handling.  \n\n---\n\n### Pair 2: Routing System  \n\u2705 **Factual:** The `viz` crate provides robust routing capabilities, allowing developers to define routes with dynamic path parameters using extractors like `Params`.  \n\u274c **Counterfactual:** The `viz` crate does not support dynamic routing and requires all routes to be hardcoded without parameters.  \n\n---\n\n### Pair 3: Middleware Support  \n\u2705 **Factual:** The `viz` crate supports middleware integration, enabling developers to add custom logic for request preprocessing and response postprocessing.  \n\u274c **Counterfactual:** The `viz` crate does not support middleware and requires all request handling logic to be implemented directly in route handlers.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-e6d0a960-c14ac392-1751258092",
      "timestamp": "2025-06-30T04:34:52.867929+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]