[
  {
    "execution_id": "exec-f86e1720-05f40c86-1751261690",
    "timestamp": "2025-06-30T05:34:50.974992+00:00",
    "sacred_chain": {
      "input_data": "httparse",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'httparse' -> 'httparse'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "httparse",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/httparse",
            "title": "httparse v1.10.1",
            "content": {
              "raw_markdown": "#  httparse v1.10.1\nA tiny, safe, speedy, zero-copy HTTP/1.x parser. \n  * [ #http ](https://crates.io/keywords/http)\n  * [ #no_std ](https://crates.io/keywords/no_std)\n  * [ #parser ](https://crates.io/keywords/parser)\n\n\n  * [ Readme ](https://crates.io/crates/httparse)\n  * [ 46 Versions ](https://crates.io/crates/httparse/versions)\n  * [ Dependencies ](https://crates.io/crates/httparse/dependencies)\n  * [ Dependents ](https://crates.io/crates/httparse/reverse_dependencies)\n\n\n## Metadata\n4 months ago \n2018 edition \n[ MIT ](https://choosealicense.com/licenses/mit) OR [ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0)\n44.1 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add httparse\nOr add the following line to your Cargo.toml:\nhttparse = \"1.10.1\"\n## Documentation\n[ docs.rs/httparse ](https://docs.rs/httparse)\n## Repository\n[ github.com/seanmonstar/httparse ](https://github.com/seanmonstar/httparse)\n## Owners\n## Categories\n  * [Network programming](https://crates.io/categories/network-programming)\n  * [No standard library](https://crates.io/categories/no-std)\n  * [Parser implementations](https://crates.io/categories/parser-implementations)\n  * [Web programming](https://crates.io/categories/web-programming)\n\n\n[ Report crate ](https://crates.io/support?crate=httparse&inquire=crate-violation)\n### Stats Overview\n265,547,697 Downloads all time\n46 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  httparse v1.10.1\nA tiny, safe, speedy, zero-copy HTTP/1.x parser. \n  *  #http \u27e81\u27e9\n  *  #no_std \u27e82\u27e9\n  *  #parser \u27e83\u27e9\n\n\n  *  Readme \u27e84\u27e9\n  *  46 Versions \u27e85\u27e9\n  *  Dependencies \u27e86\u27e9\n  *  Dependents \u27e87\u27e9\n\n\n## Metadata\n4 months ago \n2018 edition \n MIT \u27e88\u27e9 OR  Apache-2.0 \u27e89\u27e9\n44.1 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add httparse\nOr add the following line to your Cargo.toml:\nhttparse = \"1.10.1\"\n## Documentation\n docs.rs/httparse \u27e810\u27e9\n## Repository\n github.com/seanmonstar/httparse \u27e811\u27e9\n## Owners\n## Categories\n  * Network programming\u27e812\u27e9\n  * No standard library\u27e813\u27e9\n  * Parser implementations\u27e814\u27e9\n  * Web programming\u27e815\u27e9\n\n\n Report crate \u27e816\u27e9\n### Stats Overview\n265,547,697 Downloads all time\n46 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/http:  #http \n\u27e82\u27e9 https://crates.io/keywords/no_std:  #no_std \n\u27e83\u27e9 https://crates.io/keywords/parser:  #parser \n\u27e84\u27e9 https://crates.io/crates/httparse:  Readme \n\u27e85\u27e9 https://crates.io/crates/httparse/versions:  46 Versions \n\u27e86\u27e9 https://crates.io/crates/httparse/dependencies:  Dependencies \n\u27e87\u27e9 https://crates.io/crates/httparse/reverse_dependencies:  Dependents \n\u27e88\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e89\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e810\u27e9 https://docs.rs/httparse:  docs.rs/httparse \n\u27e811\u27e9 https://github.com/seanmonstar/httparse:  github.com/seanmonstar/httparse \n\u27e812\u27e9 https://crates.io/categories/network-programming: Network programming\n\u27e813\u27e9 https://crates.io/categories/no-std: No standard library\n\u27e814\u27e9 https://crates.io/categories/parser-implementations: Parser implementations\n\u27e815\u27e9 https://crates.io/categories/web-programming: Web programming\n\u27e816\u27e9 https://crates.io/support?crate=httparse&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1523,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "115480.8157009"
          },
          "docs_rs": {
            "url": "https://docs.rs/httparse",
            "title": "Crate httparseCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/httparse/latest/httparse/all.html \"show sidebar\")\n# Crate httparseCopy item path\n[Settings](https://docs.rs/httparse/latest/settings.html)\n[Help](https://docs.rs/httparse/latest/help.html)\nSummary[Source](https://docs.rs/httparse/latest/src/httparse/lib.rs.html#1-2798)\nExpand description\n## [\u00a7](https://docs.rs/httparse/latest/httparse/#httparse)httparse\nA push library for parsing HTTP/1.x requests and responses.\nThe focus is on speed and safety. Unsafe code is used to keep parsing fast, but unsafety is contained in a submodule, with invariants enforced. The parsing internals use an `Iterator` instead of direct indexing, while skipping bounds checks.\nWith Rust 1.27.0 or later, support for SIMD is enabled automatically. If building an executable to be run on multiple platforms, and thus not passing `target_feature` or `target_cpu` flags to the compiler, runtime detection can still detect SSE4.2 or AVX2 support to provide massive wins.\nIf compiling for a specific target, remembering to include `-C target_cpu=native` allows the detection to become compile time checks, making it _even_ faster.\n## Structs[\u00a7](https://docs.rs/httparse/latest/httparse/#structs)\n\n[Header](https://docs.rs/httparse/latest/httparse/struct.Header.html \"struct httparse::Header\")\n    Represents a parsed header.\n\n[InvalidChunkSize](https://docs.rs/httparse/latest/httparse/struct.InvalidChunkSize.html \"struct httparse::InvalidChunkSize\")\n    An error in parsing a chunk size.\n\n[ParserConfig](https://docs.rs/httparse/latest/httparse/struct.ParserConfig.html \"struct httparse::ParserConfig\")\n    Parser configuration.\n\n[Request](https://docs.rs/httparse/latest/httparse/struct.Request.html \"struct httparse::Request\")\n    A parsed Request.\n\n[Response](https://docs.rs/httparse/latest/httparse/struct.Response.html \"struct httparse::Response\")\n    A parsed Response.\n## Enums[\u00a7](https://docs.rs/httparse/latest/httparse/#enums)\n\n[Error](https://docs.rs/httparse/latest/httparse/enum.Error.html \"enum httparse::Error\")\n    An error in parsing.\n\n[Status](https://docs.rs/httparse/latest/httparse/enum.Status.html \"enum httparse::Status\")\n    The result of a successful parse pass.\n## Constants[\u00a7](https://docs.rs/httparse/latest/httparse/#constants)\n\n[EMPTY_HEADER](https://docs.rs/httparse/latest/httparse/constant.EMPTY_HEADER.html \"constant httparse::EMPTY_HEADER\")\n    An empty header, useful for constructing a `Header` array to pass in for parsing.\n## Functions[\u00a7](https://docs.rs/httparse/latest/httparse/#functions)\n\n[parse_chunk_size](https://docs.rs/httparse/latest/httparse/fn.parse_chunk_size.html \"fn httparse::parse_chunk_size\")\n    Parse a buffer of bytes as a chunk size.\n\n[parse_headers](https://docs.rs/httparse/latest/httparse/fn.parse_headers.html \"fn httparse::parse_headers\")\n    Parse a buffer of bytes as headers.\n## Type Aliases[\u00a7](https://docs.rs/httparse/latest/httparse/#types)\n\n[Result](https://docs.rs/httparse/latest/httparse/type.Result.html \"type httparse::Result\")\n    A Result of any parsing action.\n",
              "markdown_with_citations": "[](https://docs.rs/httparse/latest/httparse/all.html \"show sidebar\")\n# Crate httparseCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9httparse\nA push library for parsing HTTP/1.x requests and responses.\nThe focus is on speed and safety. Unsafe code is used to keep parsing fast, but unsafety is contained in a submodule, with invariants enforced. The parsing internals use an `Iterator` instead of direct indexing, while skipping bounds checks.\nWith Rust 1.27.0 or later, support for SIMD is enabled automatically. If building an executable to be run on multiple platforms, and thus not passing `target_feature` or `target_cpu` flags to the compiler, runtime detection can still detect SSE4.2 or AVX2 support to provide massive wins.\nIf compiling for a specific target, remembering to include `-C target_cpu=native` allows the detection to become compile time checks, making it _even_ faster.\n## Structs\u00a7\u27e85\u27e9\n\nHeader\u27e86\u27e9\n    Represents a parsed header.\n\nInvalidChunkSize\u27e87\u27e9\n    An error in parsing a chunk size.\n\nParserConfig\u27e88\u27e9\n    Parser configuration.\n\nRequest\u27e89\u27e9\n    A parsed Request.\n\nResponse\u27e810\u27e9\n    A parsed Response.\n## Enums\u00a7\u27e811\u27e9\n\nError\u27e812\u27e9\n    An error in parsing.\n\nStatus\u27e813\u27e9\n    The result of a successful parse pass.\n## Constants\u00a7\u27e814\u27e9\n\nEMPTY_HEADER\u27e815\u27e9\n    An empty header, useful for constructing a `Header` array to pass in for parsing.\n## Functions\u00a7\u27e816\u27e9\n\nparse_chunk_size\u27e817\u27e9\n    Parse a buffer of bytes as a chunk size.\n\nparse_headers\u27e818\u27e9\n    Parse a buffer of bytes as headers.\n## Type Aliases\u00a7\u27e819\u27e9\n\nResult\u27e820\u27e9\n    A Result of any parsing action.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/httparse/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/httparse/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/httparse/latest/src/httparse/lib.rs.html#1-2798: Source\n\u27e84\u27e9 https://docs.rs/httparse/latest/httparse/#httparse: \u00a7\n\u27e85\u27e9 https://docs.rs/httparse/latest/httparse/#structs: \u00a7\n\u27e86\u27e9 https://docs.rs/httparse/latest/httparse/struct.Header.html: struct httparse::Header - Header\n\u27e87\u27e9 https://docs.rs/httparse/latest/httparse/struct.InvalidChunkSize.html: struct httparse::InvalidChunkSize - InvalidChunkSize\n\u27e88\u27e9 https://docs.rs/httparse/latest/httparse/struct.ParserConfig.html: struct httparse::ParserConfig - ParserConfig\n\u27e89\u27e9 https://docs.rs/httparse/latest/httparse/struct.Request.html: struct httparse::Request - Request\n\u27e810\u27e9 https://docs.rs/httparse/latest/httparse/struct.Response.html: struct httparse::Response - Response\n\u27e811\u27e9 https://docs.rs/httparse/latest/httparse/#enums: \u00a7\n\u27e812\u27e9 https://docs.rs/httparse/latest/httparse/enum.Error.html: enum httparse::Error - Error\n\u27e813\u27e9 https://docs.rs/httparse/latest/httparse/enum.Status.html: enum httparse::Status - Status\n\u27e814\u27e9 https://docs.rs/httparse/latest/httparse/#constants: \u00a7\n\u27e815\u27e9 https://docs.rs/httparse/latest/httparse/constant.EMPTY_HEADER.html: constant httparse::EMPTY_HEADER - EMPTY_HEADER\n\u27e816\u27e9 https://docs.rs/httparse/latest/httparse/#functions: \u00a7\n\u27e817\u27e9 https://docs.rs/httparse/latest/httparse/fn.parse_chunk_size.html: fn httparse::parse_chunk_size - parse_chunk_size\n\u27e818\u27e9 https://docs.rs/httparse/latest/httparse/fn.parse_headers.html: fn httparse::parse_headers - parse_headers\n\u27e819\u27e9 https://docs.rs/httparse/latest/httparse/#types: \u00a7\n\u27e820\u27e9 https://docs.rs/httparse/latest/httparse/type.Result.html: type httparse::Result - Result\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 3039,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "115481.6788846"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/httparse",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [43 releases](https://lib.rs/crates/httparse/versions) (stable)\n1.10.1 |  Mar 3, 2025   \n---|---  \n1.9.5 |  Sep 30, 2024   \n1.9.4 |  Jun 17, 2024   \n1.8.0 |  Aug 30, 2022   \n0.0.5 |  Mar 21, 2015   \n#**3** in [Web programming](https://lib.rs/web-programming \"Crates to create applications for the web.\")\nDownload history 3184795/week @ 2025-03-08 3416236/week @ 2025-03-15 3670761/week @ 2025-03-22 3057820/week @ 2025-03-29 3230643/week @ 2025-04-05 2878959/week @ 2025-04-12 2850642/week @ 2025-04-19 2739971/week @ 2025-04-26 2854866/week @ 2025-05-03 2930143/week @ 2025-05-10 2980782/week @ 2025-05-17 2725436/week @ 2025-05-24 2914085/week @ 2025-05-31 2956721/week @ 2025-06-07 3116745/week @ 2025-06-14 2820948/week @ 2025-06-21\n**12,290,695** downloads per month Used in [**27,471** crates (355 directly)](https://lib.rs/crates/httparse/rev)\n**MIT/Apache**\n150KB  3K  SLoC\n# httparse\n[![crates.io](https://img.shields.io/crates/v/httparse.svg)](https://crates.io/crates/httparse) [![Released API docs](https://img.gs/czjpqfbdkz/full/https://docs.rs/httparse/badge.svg)](https://docs.rs/httparse) [![MIT licensed](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/seanmonstar/httparse/blob/9f29e79f9832dbd0ae5220acb17c1866745bdecd/LICENSE-MIT) [![CI](https://img.gs/czjpqfbdkz/full/https://github.com/seanmonstar/httparse/workflows/CI/badge.svg)](https://github.com/seanmonstar/httparse/actions?query=workflow%3ACI) [![Discord chat](https://img.shields.io/discord/500028886025895936.svg?logo=discord)](https://discord.gg/kkwpueZ)\nA push parser for the HTTP 1.x protocol. Avoids allocations. No copy. **Fast.**\nWorks with ``no_std``, simply disable the ``std`` Cargo feature.\n[Changelog](https://github.com/seanmonstar/httparse/releases)\n## Usage\n```\n``let` `mut` headers `=` `[``httparse`::```EMPTY_HEADER``;` `64``]``;`\n`let` `mut` req `=` `httparse`::```Request`::``new`(``&``mut` headers`)``;`\n`let` buf `=` ``b``\"`GET /index.html HTTP/1.1`\\r``\\n`Host`\"```;`\n`assert!``(`req`.``parse``(`buf`)``?``.``is_partial``(``)``)``;`\n``//` a partial request, so we try again once we have more data`\n`let` buf `=` ``b``\"`GET /index.html HTTP/1.1`\\r``\\n`Host: example.domain`\\r``\\n``\\r``\\n``\"```;`\n`assert!``(`req`.``parse``(`buf`)``?``.``is_complete``(``)``)``;`\n`\n```\n\n## License\nLicensed under either of\n  * Apache License, Version 2.0 ([LICENSE-APACHE](https://github.com/seanmonstar/httparse/blob/9f29e79f9832dbd0ae5220acb17c1866745bdecd/LICENSE-APACHE) or <https://apache.org/licenses/LICENSE-2.0>)\n  * MIT license ([LICENSE-MIT](https://github.com/seanmonstar/httparse/blob/9f29e79f9832dbd0ae5220acb17c1866745bdecd/LICENSE-MIT) or <https://opensource.org/licenses/MIT>)\n\n\n### Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n#### No runtime deps\n  * build `build.rs`\n  * dev  [criterion](https://lib.rs/crates/criterion \"obsolete\") 0.3.5\n  * dev  [rand](https://lib.rs/crates/rand \"outdated\") 0.8.5\n\n\n#### [Other feature](https://lib.rs/crates/httparse/features)\n  * [std](https://lib.rs/crates/httparse/features#feature-std)\n\n\n  *[SLoC]: Lines of code, excluding comments\n",
              "markdown_with_citations": "###  43 releases\u27e81\u27e9 (stable)\n1.10.1 |  Mar 3, 2025   \n---|---  \n1.9.5 |  Sep 30, 2024   \n1.9.4 |  Jun 17, 2024   \n1.8.0 |  Aug 30, 2022   \n0.0.5 |  Mar 21, 2015   \n#**3** in Web programming\u27e82\u27e9\nDownload history 3184795/week @ 2025-03-08 3416236/week @ 2025-03-15 3670761/week @ 2025-03-22 3057820/week @ 2025-03-29 3230643/week @ 2025-04-05 2878959/week @ 2025-04-12 2850642/week @ 2025-04-19 2739971/week @ 2025-04-26 2854866/week @ 2025-05-03 2930143/week @ 2025-05-10 2980782/week @ 2025-05-17 2725436/week @ 2025-05-24 2914085/week @ 2025-05-31 2956721/week @ 2025-06-07 3116745/week @ 2025-06-14 2820948/week @ 2025-06-21\n**12,290,695** downloads per month Used in **27,471** crates (355 directly)\u27e83\u27e9\n**MIT/Apache**\n150KB  3K  SLoC\n# httparse\n![crates.io\u27e84\u27e9](https://crates.io/crates/httparse) ![Released API docs\u27e85\u27e9](https://docs.rs/httparse) ![MIT licensed\u27e86\u27e9](https://github.com/seanmonstar/httparse/blob/9f29e79f9832dbd0ae5220acb17c1866745bdecd/LICENSE-MIT) ![CI\u27e87\u27e9](https://github.com/seanmonstar/httparse/actions?query=workflow%3ACI) ![Discord chat\u27e88\u27e9](https://discord.gg/kkwpueZ)\nA push parser for the HTTP 1.x protocol. Avoids allocations. No copy. **Fast.**\nWorks with ``no_std``, simply disable the ``std`` Cargo feature.\nChangelog\u27e89\u27e9\n## Usage\n```\n``let` `mut` headers `=` `[``httparse`::```EMPTY_HEADER``;` `64``]``;`\n`let` `mut` req `=` `httparse`::```Request`::``new`(``&``mut` headers`)``;`\n`let` buf `=` ``b``\"`GET /index.html HTTP/1.1`\\r``\\n`Host`\"```;`\n`assert!``(`req`.``parse``(`buf`)``?``.``is_partial``(``)``)``;`\n``//` a partial request, so we try again once we have more data`\n`let` buf `=` ``b``\"`GET /index.html HTTP/1.1`\\r``\\n`Host: example.domain`\\r``\\n``\\r``\\n``\"```;`\n`assert!``(`req`.``parse``(`buf`)``?``.``is_complete``(``)``)``;`\n`\n```\n\n## License\nLicensed under either of\n  * Apache License, Version 2.0 (LICENSE-APACHE\u27e810\u27e9 or <https://apache.org/licenses/LICENSE-2.0>)\n  * MIT license (LICENSE-MIT\u27e811\u27e9 or <https://opensource.org/licenses/MIT>)\n\n\n### Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n#### No runtime deps\n  * build `build.rs`\n  * dev  criterion\u27e812\u27e9 0.3.5\n  * dev  rand\u27e813\u27e9 0.8.5\n\n\n#### Other feature\u27e814\u27e9\n  * std\u27e815\u27e9\n\n\n  *[SLoC]: Lines of code, excluding comments\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/httparse/versions: 43 releases\n\u27e82\u27e9 https://lib.rs/web-programming: Crates to create applications for the web. - Web programming\n\u27e83\u27e9 https://lib.rs/crates/httparse/rev: **27,471** crates (355 directly)\n\u27e84\u27e9 https://img.shields.io/crates/v/httparse.svg: ![crates.io\n\u27e85\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/httparse/badge.svg: ![Released API docs\n\u27e86\u27e9 https://img.shields.io/badge/license-MIT-blue.svg: ![MIT licensed\n\u27e87\u27e9 https://img.gs/czjpqfbdkz/full/https://github.com/seanmonstar/httparse/workflows/CI/badge.svg: ![CI\n\u27e88\u27e9 https://img.shields.io/discord/500028886025895936.svg?logo=discord: ![Discord chat\n\u27e89\u27e9 https://github.com/seanmonstar/httparse/releases: Changelog\n\u27e810\u27e9 https://github.com/seanmonstar/httparse/blob/9f29e79f9832dbd0ae5220acb17c1866745bdecd/LICENSE-APACHE: LICENSE-APACHE\n\u27e811\u27e9 https://github.com/seanmonstar/httparse/blob/9f29e79f9832dbd0ae5220acb17c1866745bdecd/LICENSE-MIT: LICENSE-MIT\n\u27e812\u27e9 https://lib.rs/crates/criterion: obsolete - criterion\n\u27e813\u27e9 https://lib.rs/crates/rand: outdated - rand\n\u27e814\u27e9 https://lib.rs/crates/httparse/features: Other feature\n\u27e815\u27e9 https://lib.rs/crates/httparse/features#feature-std: std\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 3298,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "115482.0615748"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp5iyo_apr/httparse-1.10.1#httparse@1.10.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp5iyo_apr\\httparse-1.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp5iyo_apr\\httparse-1.10.1\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp5iyo_apr\\httparse-1.10.1\\target\\debug\\build\\httparse-5f4eb955801f4e0a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp5iyo_apr\\httparse-1.10.1\\target\\debug\\build\\httparse-5f4eb955801f4e0a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp5iyo_apr/httparse-1.10.1#httparse@1.10.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "httparse_simd_neon_intrinsics",
                "httparse_simd"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp5iyo_apr\\httparse-1.10.1\\target\\debug\\build\\httparse-00ec03306e23148f\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp5iyo_apr/httparse-1.10.1#httparse@1.10.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp5iyo_apr\\httparse-1.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "httparse",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp5iyo_apr\\httparse-1.10.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp5iyo_apr\\httparse-1.10.1\\target\\debug\\deps\\libhttparse-7a45c7c0d30ea626.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp5iyo_apr/httparse-1.10.1#httparse@1.10.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp5iyo_apr\\httparse-1.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp5iyo_apr\\httparse-1.10.1\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp5iyo_apr\\httparse-1.10.1\\target\\debug\\build\\httparse-d62595522c972555\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp5iyo_apr\\httparse-1.10.1\\target\\debug\\build\\httparse-d62595522c972555\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp5iyo_apr/httparse-1.10.1#httparse@1.10.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "httparse_simd_neon_intrinsics",
                "httparse_simd"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp5iyo_apr\\httparse-1.10.1\\target\\debug\\build\\httparse-80b20f839f1a7cdf\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp5iyo_apr/httparse-1.10.1#httparse@1.10.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp5iyo_apr\\httparse-1.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "httparse",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp5iyo_apr\\httparse-1.10.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp5iyo_apr\\httparse-1.10.1\\target\\debug\\deps\\libhttparse-bf2555a1fcad87af.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 76
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {
              "unmaintained": [
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "atty",
                    "version": "0.2.14",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8",
                    "dependencies": [
                      {
                        "name": "hermit-abi",
                        "version": "0.1.19",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.169",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "winapi",
                        "version": "0.3.9",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2024-0375",
                    "package": "atty",
                    "title": "`atty` is unmaintained",
                    "description": "The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\n\n## Alternative(s)\n\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0",
                    "date": "2024-09-25",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/softprops/atty/issues/57",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                },
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "serde_cbor",
                    "version": "0.11.2",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "2bef2ebfde456fb76bbcf9f59315333decc4fda0b2b44b420243c11e0f5ec1f5",
                    "dependencies": [
                      {
                        "name": "half",
                        "version": "1.8.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "serde",
                        "version": "1.0.140",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2021-0127",
                    "package": "serde_cbor",
                    "title": "serde_cbor is unmaintained",
                    "description": "The `serde_cbor` crate is unmaintained. The author has archived the github repository.\n\nAlternatives proposed by the author:\n\n * [`ciborium`](https://crates.io/crates/ciborium)\n * [`minicbor`](https://crates.io/crates/minicbor)",
                    "date": "2021-08-15",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/pyfisch/cbor",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                }
              ],
              "unsound": [
                {
                  "kind": "unsound",
                  "package": {
                    "name": "atty",
                    "version": "0.2.14",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8",
                    "dependencies": [
                      {
                        "name": "hermit-abi",
                        "version": "0.1.19",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.169",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "winapi",
                        "version": "0.3.9",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2021-0145",
                    "package": "atty",
                    "title": "Potential unaligned read",
                    "description": "On windows, `atty` dereferences a potentially unaligned pointer.\n\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\n\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\n\n# atty is Unmaintained\n\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\n\nLast release of `atty` was almost 3 years ago.\n\n## Possible Alternative(s)\n\nThe below list has not been vetted in any way and may or may not contain alternatives;\n\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0",
                    "date": "2021-07-04",
                    "aliases": [
                      "GHSA-g98v-hv3f-hcfr"
                    ],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [
                      "unaligned-read"
                    ],
                    "cvss": null,
                    "informational": "unsound",
                    "references": [
                      "https://github.com/softprops/atty/pull/51",
                      "https://github.com/softprops/atty/issues/57"
                    ],
                    "source": null,
                    "url": "https://github.com/softprops/atty/issues/50",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": {
                    "arch": [],
                    "os": [
                      "windows"
                    ],
                    "functions": {}
                  },
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                },
                {
                  "kind": "unsound",
                  "package": {
                    "name": "bumpalo",
                    "version": "3.10.0",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "37ccbd214614c6783386c1af30caf03192f17891059cecc394b4fb119e363de3",
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2022-0078",
                    "package": "bumpalo",
                    "title": "Use-after-free due to a lifetime error in `Vec::into_iter()`",
                    "description": "In affected versions of this crate, the lifetime of the iterator produced by\n`Vec::into_iter()` is not constrained to the lifetime of the `Bump` that\nallocated the vector's memory. Using the iterator after the `Bump` is dropped\ncauses use-after-free accesses.\n\nThe following example demonstrates memory corruption arising from a misuse of\nthis unsoundness.\n\n```rust\nuse bumpalo::{collections::Vec, Bump};\n\nfn main() {\n    let bump = Bump::new();\n    let mut vec = Vec::new_in(&bump);\n    vec.extend([0x01u8; 32]);\n    let into_iter = vec.into_iter();\n    drop(bump);\n\n    for _ in 0..100 {\n        let reuse_bump = Bump::new();\n        let _reuse_alloc = reuse_bump.alloc([0x41u8; 10]);\n    }\n\n    for x in into_iter {\n        print!(\"0x{:02x} \", x);\n    }\n    println!();\n}\n```\n\nThe issue was corrected in version 3.11.1 by adding a lifetime to the `IntoIter`\ntype, and updating the signature of `Vec::into_iter()` to constrain this\nlifetime.",
                    "date": "2022-01-14",
                    "aliases": [
                      "GHSA-f85w-wvc7-crwc"
                    ],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "memory-corruption",
                      "memory-exposure"
                    ],
                    "keywords": [
                      "use-after-free"
                    ],
                    "cvss": null,
                    "informational": "unsound",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/fitzgen/bumpalo/blob/main/CHANGELOG.md#3111",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": {
                    "arch": [],
                    "os": [],
                    "functions": {
                      "bumpalo::collections::vec::Vec::into_iter": [
                        "<3.11.1"
                      ]
                    }
                  },
                  "versions": {
                    "patched": [
                      ">=3.11.1"
                    ],
                    "unaffected": [
                      "<1.1.0"
                    ]
                  }
                }
              ],
              "yanked": [
                {
                  "kind": "yanked",
                  "package": {
                    "name": "crossbeam-channel",
                    "version": "0.5.6",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "c2dd04ddaf88237dc3b8d8f9a3c1004b506b54b3313403944054d23c0870c521",
                    "dependencies": [
                      {
                        "name": "cfg-if",
                        "version": "1.0.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "crossbeam-utils",
                        "version": "0.8.11",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": null,
                  "affected": null,
                  "versions": null
                },
                {
                  "kind": "yanked",
                  "package": {
                    "name": "plotters",
                    "version": "0.3.2",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "9428003b84df1496fb9d6eeee9c5f8145cb41ca375eb0dad204328888832811f",
                    "dependencies": [
                      {
                        "name": "num-traits",
                        "version": "0.2.15",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "plotters-backend",
                        "version": "0.3.4",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "plotters-svg",
                        "version": "0.3.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "wasm-bindgen",
                        "version": "0.2.82",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "web-sys",
                        "version": "0.3.59",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": null,
                  "affected": null,
                  "versions": null
                }
              ]
            }
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "httparse",
          "version": "1.10.1",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/httparse/latest/httparse/all.html \"show sidebar\")\n# Crate httparseCopy item path\n[Settings](https://docs.rs/httparse/latest/settings.html)\n[Help](https://docs.rs/httparse/latest/help.html)\nSummary[Source](https://docs.rs/httparse/latest/src/httparse/lib.rs.html#1-2798)\nExpand description\n## [\u00a7](https://docs.rs/httparse/latest/httparse/#httparse)httparse\nA push library for parsing HTTP/1.x requests and responses.\nThe focus is on speed and safety. Unsafe code is used to keep parsing fast, but unsafety is contained in a submodule, with invariants enforced. The parsing internals use an `Iterator` instead of direct indexing, while skipping bounds checks.\nWith Rust 1.27.0 or later, support for SIMD is enabled automatically. If building an executable to be run on multiple platforms, and thus not passing `target_feature` or `target_cpu` flags to the compiler, runtime detection can still detect SSE4.2 or AVX2 support to provide massive wins.\nIf compiling for a specific target, remembering to include `-C target_cpu=native` allows the detection to become compile time checks, making it _even_ faster.\n## Structs[\u00a7](https://docs.rs/httparse/latest/httparse/#structs)\n\n[Header](https://docs.rs/httparse/latest/httparse/struct.Header.html \"struct httparse::Header\")\n    Represents a parsed header.\n\n[InvalidChunkSize](https://docs.rs/httparse/latest/httparse/struct.InvalidChunkSize.html \"struct httparse::InvalidChunkSize\")\n    An error in parsing a chunk size.\n\n[ParserConfig](https://docs.rs/httparse/latest/httparse/struct.ParserConfig.html \"struct httparse::ParserConfig\")\n    Parser configuration.\n\n[Request](https://docs.rs/httparse/latest/httparse/struct.Request.html \"struct httparse::Request\")\n    A parsed Request.\n\n[Response](https://docs.rs/httparse/latest/httparse/struct.Response.html \"struct httparse::Response\")\n    A parsed Response.\n## Enums[\u00a7](https://docs.rs/httparse/latest/httparse/#enums)\n\n[Error](https://docs.rs/httparse/latest/httparse/enum.Error.html \"enum httparse::Error\")\n    An error in parsing.\n\n[Status](https://docs.rs/httparse/latest/httparse/enum.Status.html \"enum httparse::Status\")\n    The result of a successful parse pass.\n## Constants[\u00a7](https://docs.rs/httparse/latest/httparse/#constants)\n\n[EMPTY_HEADER](https://docs.rs/httparse/latest/httparse/constant.EMPTY_HEADER.html \"constant httparse::EMPTY_HEADER\")\n    An empty header, useful for constructing a `Header` array to pass in for parsing.\n## Functions[\u00a7](https://docs.rs/httparse/latest/httparse/#functions)\n\n[parse_chunk_size](https://docs.rs/httparse/latest/httparse/fn.parse_chunk_size.html \"fn httparse::parse_chunk_size\")\n    Parse a buffer of bytes as a chunk size.\n\n[parse_headers](https://docs.rs/httparse/latest/httparse/fn.parse_headers.html \"fn httparse::parse_headers\")\n    Parse a buffer of bytes as headers.\n## Type Aliases[\u00a7](https://docs.rs/httparse/latest/httparse/#types)\n\n[Result](https://docs.rs/httparse/latest/httparse/type.Result.html \"type httparse::Result\")\n    A Result of any parsing action.\n",
            "markdown_with_citations": "[](https://docs.rs/httparse/latest/httparse/all.html \"show sidebar\")\n# Crate httparseCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9httparse\nA push library for parsing HTTP/1.x requests and responses.\nThe focus is on speed and safety. Unsafe code is used to keep parsing fast, but unsafety is contained in a submodule, with invariants enforced. The parsing internals use an `Iterator` instead of direct indexing, while skipping bounds checks.\nWith Rust 1.27.0 or later, support for SIMD is enabled automatically. If building an executable to be run on multiple platforms, and thus not passing `target_feature` or `target_cpu` flags to the compiler, runtime detection can still detect SSE4.2 or AVX2 support to provide massive wins.\nIf compiling for a specific target, remembering to include `-C target_cpu=native` allows the detection to become compile time checks, making it _even_ faster.\n## Structs\u00a7\u27e85\u27e9\n\nHeader\u27e86\u27e9\n    Represents a parsed header.\n\nInvalidChunkSize\u27e87\u27e9\n    An error in parsing a chunk size.\n\nParserConfig\u27e88\u27e9\n    Parser configuration.\n\nRequest\u27e89\u27e9\n    A parsed Request.\n\nResponse\u27e810\u27e9\n    A parsed Response.\n## Enums\u00a7\u27e811\u27e9\n\nError\u27e812\u27e9\n    An error in parsing.\n\nStatus\u27e813\u27e9\n    The result of a successful parse pass.\n## Constants\u00a7\u27e814\u27e9\n\nEMPTY_HEADER\u27e815\u27e9\n    An empty header, useful for constructing a `Header` array to pass in for parsing.\n## Functions\u00a7\u27e816\u27e9\n\nparse_chunk_size\u27e817\u27e9\n    Parse a buffer of bytes as a chunk size.\n\nparse_headers\u27e818\u27e9\n    Parse a buffer of bytes as headers.\n## Type Aliases\u00a7\u27e819\u27e9\n\nResult\u27e820\u27e9\n    A Result of any parsing action.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/httparse/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/httparse/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/httparse/latest/src/httparse/lib.rs.html#1-2798: Source\n\u27e84\u27e9 https://docs.rs/httparse/latest/httparse/#httparse: \u00a7\n\u27e85\u27e9 https://docs.rs/httparse/latest/httparse/#structs: \u00a7\n\u27e86\u27e9 https://docs.rs/httparse/latest/httparse/struct.Header.html: struct httparse::Header - Header\n\u27e87\u27e9 https://docs.rs/httparse/latest/httparse/struct.InvalidChunkSize.html: struct httparse::InvalidChunkSize - InvalidChunkSize\n\u27e88\u27e9 https://docs.rs/httparse/latest/httparse/struct.ParserConfig.html: struct httparse::ParserConfig - ParserConfig\n\u27e89\u27e9 https://docs.rs/httparse/latest/httparse/struct.Request.html: struct httparse::Request - Request\n\u27e810\u27e9 https://docs.rs/httparse/latest/httparse/struct.Response.html: struct httparse::Response - Response\n\u27e811\u27e9 https://docs.rs/httparse/latest/httparse/#enums: \u00a7\n\u27e812\u27e9 https://docs.rs/httparse/latest/httparse/enum.Error.html: enum httparse::Error - Error\n\u27e813\u27e9 https://docs.rs/httparse/latest/httparse/enum.Status.html: enum httparse::Status - Status\n\u27e814\u27e9 https://docs.rs/httparse/latest/httparse/#constants: \u00a7\n\u27e815\u27e9 https://docs.rs/httparse/latest/httparse/constant.EMPTY_HEADER.html: constant httparse::EMPTY_HEADER - EMPTY_HEADER\n\u27e816\u27e9 https://docs.rs/httparse/latest/httparse/#functions: \u00a7\n\u27e817\u27e9 https://docs.rs/httparse/latest/httparse/fn.parse_chunk_size.html: fn httparse::parse_chunk_size - parse_chunk_size\n\u27e818\u27e9 https://docs.rs/httparse/latest/httparse/fn.parse_headers.html: fn httparse::parse_headers - parse_headers\n\u27e819\u27e9 https://docs.rs/httparse/latest/httparse/#types: \u00a7\n\u27e820\u27e9 https://docs.rs/httparse/latest/httparse/type.Result.html: type httparse::Result - Result\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "httparse",
          "version": "1.10.1",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/httparse/latest/httparse/all.html \"show sidebar\")\n# Crate httparseCopy item path\n[Settings](https://docs.rs/httparse/latest/settings.html)\n[Help](https://docs.rs/httparse/latest/help.html)\nSummary[Source](https://docs.rs/httparse/latest/src/httparse/lib.rs.html#1-2798)\nExpand description\n## [\u00a7](https://docs.rs/httparse/latest/httparse/#httparse)httparse\nA push library for parsing HTTP/1.x requests and responses.\nThe focus is on speed and safety. Unsafe code is used to keep parsing fast, but unsafety is contained in a submodule, with invariants enforced. The parsing internals use an `Iterator` instead of direct indexing, while skipping bounds checks.\nWith Rust 1.27.0 or later, support for SIMD is enabled automatically. If building an executable to be run on multiple platforms, and thus not passing `target_feature` or `target_cpu` flags to the compiler, runtime detection can still detect SSE4.2 or AVX2 support to provide massive wins.\nIf compiling for a specific target, remembering to include `-C target_cpu=native` allows the detection to become compile time checks, making it _even_ faster.\n## Structs[\u00a7](https://docs.rs/httparse/latest/httparse/#structs)\n\n[Header](https://docs.rs/httparse/latest/httparse/struct.Header.html \"struct httparse::Header\")\n    Represents a parsed header.\n\n[InvalidChunkSize](https://docs.rs/httparse/latest/httparse/struct.InvalidChunkSize.html \"struct httparse::InvalidChunkSize\")\n    An error in parsing a chunk size.\n\n[ParserConfig](https://docs.rs/httparse/latest/httparse/struct.ParserConfig.html \"struct httparse::ParserConfig\")\n    Parser configuration.\n\n[Request](https://docs.rs/httparse/latest/httparse/struct.Request.html \"struct httparse::Request\")\n    A parsed Request.\n\n[Response](https://docs.rs/httparse/latest/httparse/struct.Response.html \"struct httparse::Response\")\n    A parsed Response.\n## Enums[\u00a7](https://docs.rs/httparse/latest/httparse/#enums)\n\n[Error](https://docs.rs/httparse/latest/httparse/enum.Error.html \"enum httparse::Error\")\n    An error in parsing.\n\n[Status](https://docs.rs/httparse/latest/httparse/enum.Status.html \"enum httparse::Status\")\n    The result of a successful parse pass.\n## Constants[\u00a7](https://docs.rs/httparse/latest/httparse/#constants)\n\n[EMPTY_HEADER](https://docs.rs/httparse/latest/httparse/constant.EMPTY_HEADER.html \"constant httparse::EMPTY_HEADER\")\n    An empty header, useful for constructing a `Header` array to pass in for parsing.\n## Functions[\u00a7](https://docs.rs/httparse/latest/httparse/#functions)\n\n[parse_chunk_size](https://docs.rs/httparse/latest/httparse/fn.parse_chunk_size.html \"fn httparse::parse_chunk_size\")\n    Parse a buffer of bytes as a chunk size.\n\n[parse_headers](https://docs.rs/httparse/latest/httparse/fn.parse_headers.html \"fn httparse::parse_headers\")\n    Parse a buffer of bytes as headers.\n## Type Aliases[\u00a7](https://docs.rs/httparse/latest/httparse/#types)\n\n[Result](https://docs.rs/httparse/latest/httparse/type.Result.html \"type httparse::Result\")\n    A Result of any parsing action.\n",
            "markdown_with_citations": "[](https://docs.rs/httparse/latest/httparse/all.html \"show sidebar\")\n# Crate httparseCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9httparse\nA push library for parsing HTTP/1.x requests and responses.\nThe focus is on speed and safety. Unsafe code is used to keep parsing fast, but unsafety is contained in a submodule, with invariants enforced. The parsing internals use an `Iterator` instead of direct indexing, while skipping bounds checks.\nWith Rust 1.27.0 or later, support for SIMD is enabled automatically. If building an executable to be run on multiple platforms, and thus not passing `target_feature` or `target_cpu` flags to the compiler, runtime detection can still detect SSE4.2 or AVX2 support to provide massive wins.\nIf compiling for a specific target, remembering to include `-C target_cpu=native` allows the detection to become compile time checks, making it _even_ faster.\n## Structs\u00a7\u27e85\u27e9\n\nHeader\u27e86\u27e9\n    Represents a parsed header.\n\nInvalidChunkSize\u27e87\u27e9\n    An error in parsing a chunk size.\n\nParserConfig\u27e88\u27e9\n    Parser configuration.\n\nRequest\u27e89\u27e9\n    A parsed Request.\n\nResponse\u27e810\u27e9\n    A parsed Response.\n## Enums\u00a7\u27e811\u27e9\n\nError\u27e812\u27e9\n    An error in parsing.\n\nStatus\u27e813\u27e9\n    The result of a successful parse pass.\n## Constants\u00a7\u27e814\u27e9\n\nEMPTY_HEADER\u27e815\u27e9\n    An empty header, useful for constructing a `Header` array to pass in for parsing.\n## Functions\u00a7\u27e816\u27e9\n\nparse_chunk_size\u27e817\u27e9\n    Parse a buffer of bytes as a chunk size.\n\nparse_headers\u27e818\u27e9\n    Parse a buffer of bytes as headers.\n## Type Aliases\u00a7\u27e819\u27e9\n\nResult\u27e820\u27e9\n    A Result of any parsing action.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/httparse/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/httparse/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/httparse/latest/src/httparse/lib.rs.html#1-2798: Source\n\u27e84\u27e9 https://docs.rs/httparse/latest/httparse/#httparse: \u00a7\n\u27e85\u27e9 https://docs.rs/httparse/latest/httparse/#structs: \u00a7\n\u27e86\u27e9 https://docs.rs/httparse/latest/httparse/struct.Header.html: struct httparse::Header - Header\n\u27e87\u27e9 https://docs.rs/httparse/latest/httparse/struct.InvalidChunkSize.html: struct httparse::InvalidChunkSize - InvalidChunkSize\n\u27e88\u27e9 https://docs.rs/httparse/latest/httparse/struct.ParserConfig.html: struct httparse::ParserConfig - ParserConfig\n\u27e89\u27e9 https://docs.rs/httparse/latest/httparse/struct.Request.html: struct httparse::Request - Request\n\u27e810\u27e9 https://docs.rs/httparse/latest/httparse/struct.Response.html: struct httparse::Response - Response\n\u27e811\u27e9 https://docs.rs/httparse/latest/httparse/#enums: \u00a7\n\u27e812\u27e9 https://docs.rs/httparse/latest/httparse/enum.Error.html: enum httparse::Error - Error\n\u27e813\u27e9 https://docs.rs/httparse/latest/httparse/enum.Status.html: enum httparse::Status - Status\n\u27e814\u27e9 https://docs.rs/httparse/latest/httparse/#constants: \u00a7\n\u27e815\u27e9 https://docs.rs/httparse/latest/httparse/constant.EMPTY_HEADER.html: constant httparse::EMPTY_HEADER - EMPTY_HEADER\n\u27e816\u27e9 https://docs.rs/httparse/latest/httparse/#functions: \u00a7\n\u27e817\u27e9 https://docs.rs/httparse/latest/httparse/fn.parse_chunk_size.html: fn httparse::parse_chunk_size - parse_chunk_size\n\u27e818\u27e9 https://docs.rs/httparse/latest/httparse/fn.parse_headers.html: fn httparse::parse_headers - parse_headers\n\u27e819\u27e9 https://docs.rs/httparse/latest/httparse/#types: \u00a7\n\u27e820\u27e9 https://docs.rs/httparse/latest/httparse/type.Result.html: type httparse::Result - Result\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `httparse` crate is a fast and safe library for parsing HTTP/1.x requests and responses, optimized with SIMD support and runtime detection for enhanced performance. It provides lightweight parsing utilities, including structs for headers, requests, and responses, as well as functions like `parse_headers` and `parse_chunk_size`. The crate uses contained unsafe code and iterator-based parsing to ensure speed while maintaining safety.",
          "feature_summary": null,
          "use_case": "Web Framework",
          "score": 7.0,
          "factual_counterfactual": "### Pair 1: Parsing HTTP Headers  \n\u2705 **Factual:** The `httparse` crate provides the `parse_headers` function, which efficiently parses a buffer of bytes into HTTP headers using a zero-copy approach.  \n\u274c **Counterfactual:** The `httparse` crate requires copying the input buffer into a new data structure before parsing HTTP headers, which increases memory usage.  \n\n---\n\n### Pair 2: SIMD Optimization  \n\u2705 **Factual:** With Rust 1.27.0 or later, `httparse` automatically enables SIMD optimizations for parsing HTTP/1.x requests and responses, detecting runtime support for SSE4.2 or AVX2 to improve performance.  \n\u274c **Counterfactual:** The `httparse` crate requires manual configuration of SIMD optimizations via feature flags, as it does not automatically detect hardware capabilities.  \n\n---\n\n### Pair 3: Error Handling  \n\u2705 **Factual:** The `httparse` crate uses the `Error` enum to represent various parsing errors, such as invalid chunk sizes or incomplete headers, ensuring robust error handling.  \n\u274c **Counterfactual:** The `httparse` crate panics on parsing errors instead of using an error enum, making it unsuitable for production environments.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-f86e1720-05f40c86-1751261690",
      "timestamp": "2025-06-30T05:34:50.974992+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]