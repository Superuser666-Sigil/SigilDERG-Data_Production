[
  {
    "execution_id": "exec-f2736f2e-82f4d337-1751265499",
    "timestamp": "2025-06-30T06:38:19.455790+00:00",
    "sacred_chain": {
      "input_data": "glium",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'glium' -> 'glium'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "glium",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/glium",
            "title": "glium v0.36.0",
            "content": {
              "raw_markdown": "#  glium v0.36.0\nElegant and safe OpenGL wrapper. Glium is an intermediate layer between OpenGL and your application. You still need to manually handle the graphics pipeline, but without having to use OpenGL's old and error-prone API. Its objectives: - Be safe to use. Many aspects of OpenGL that can trigger a crash if misused are automatically handled by glium. - Provide an API that enforces good pratices such as RAII or stateless function calls. - Be compatible with all OpenGL versions that support shaders, providing unified API when things diverge. - Avoid all OpenGL errors beforehand. - Produce optimized OpenGL function calls, and allow the user to easily use modern OpenGL techniques. \n  * [ #gamedev ](https://crates.io/keywords/gamedev)\n  * [ #opengl ](https://crates.io/keywords/opengl)\n\n\n  * [ Readme ](https://crates.io/crates/glium)\n  * [ 98 Versions ](https://crates.io/crates/glium/versions)\n  * [ Dependencies ](https://crates.io/crates/glium/dependencies)\n  * [ Dependents ](https://crates.io/crates/glium/reverse_dependencies)\n\n\n## Metadata\n9 months ago \n2021 edition \n[ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0)\n934 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add glium\nOr add the following line to your Cargo.toml:\nglium = \"0.36.0\"\n## Documentation\n[ docs.rs/glium ](https://docs.rs/glium)\n## Repository\n[ github.com/glium/glium ](https://github.com/glium/glium)\n## Owners\n## Categories\n  * [API bindings](https://crates.io/categories/api-bindings)\n  * [Graphics APIs](https://crates.io/categories/rendering::graphics-api)\n\n\n[ Report crate ](https://crates.io/support?crate=glium&inquire=crate-violation)\n### Stats Overview\n2,310,229 Downloads all time\n98 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  glium v0.36.0\nElegant and safe OpenGL wrapper. Glium is an intermediate layer between OpenGL and your application. You still need to manually handle the graphics pipeline, but without having to use OpenGL's old and error-prone API. Its objectives: - Be safe to use. Many aspects of OpenGL that can trigger a crash if misused are automatically handled by glium. - Provide an API that enforces good pratices such as RAII or stateless function calls. - Be compatible with all OpenGL versions that support shaders, providing unified API when things diverge. - Avoid all OpenGL errors beforehand. - Produce optimized OpenGL function calls, and allow the user to easily use modern OpenGL techniques. \n  *  #gamedev \u27e81\u27e9\n  *  #opengl \u27e82\u27e9\n\n\n  *  Readme \u27e83\u27e9\n  *  98 Versions \u27e84\u27e9\n  *  Dependencies \u27e85\u27e9\n  *  Dependents \u27e86\u27e9\n\n\n## Metadata\n9 months ago \n2021 edition \n Apache-2.0 \u27e87\u27e9\n934 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add glium\nOr add the following line to your Cargo.toml:\nglium = \"0.36.0\"\n## Documentation\n docs.rs/glium \u27e88\u27e9\n## Repository\n github.com/glium/glium \u27e89\u27e9\n## Owners\n## Categories\n  * API bindings\u27e810\u27e9\n  * Graphics APIs\u27e811\u27e9\n\n\n Report crate \u27e812\u27e9\n### Stats Overview\n2,310,229 Downloads all time\n98 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/gamedev:  #gamedev \n\u27e82\u27e9 https://crates.io/keywords/opengl:  #opengl \n\u27e83\u27e9 https://crates.io/crates/glium:  Readme \n\u27e84\u27e9 https://crates.io/crates/glium/versions:  98 Versions \n\u27e85\u27e9 https://crates.io/crates/glium/dependencies:  Dependencies \n\u27e86\u27e9 https://crates.io/crates/glium/reverse_dependencies:  Dependents \n\u27e87\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e88\u27e9 https://docs.rs/glium:  docs.rs/glium \n\u27e89\u27e9 https://github.com/glium/glium:  github.com/glium/glium \n\u27e810\u27e9 https://crates.io/categories/api-bindings: API bindings\n\u27e811\u27e9 https://crates.io/categories/rendering::graphics-api: Graphics APIs\n\u27e812\u27e9 https://crates.io/support?crate=glium&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1853,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "119289.0245121"
          },
          "docs_rs": {
            "url": "https://docs.rs/glium",
            "title": "Crate gliumCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/glium/latest/glium/all.html \"show sidebar\")\n# Crate gliumCopy item path\n[Settings](https://docs.rs/glium/latest/settings.html)\n[Help](https://docs.rs/glium/latest/help.html)\nSummary[Source](https://docs.rs/glium/latest/src/glium/lib.rs.html#1-1407)\nExpand description\nEasy-to-use, high-level, OpenGL3+ wrapper.\nGlium is based on glutin - a cross-platform crate for building an OpenGL window and handling application events.\nGlium provides a [`Display`](https://docs.rs/glium/latest/glium/backend/glutin/struct.Display.html \"struct glium::backend::glutin::Display\") which uses `glutin` for the Window and its associated GL Context.\n## [\u00a7](https://docs.rs/glium/latest/glium/#initialization)Initialization\nThe initialisation of a simple glium display occurs in two steps.\n```\nextern crate glium;\n// Use the re-exported winit dependency to avoid version mismatches.\n// Requires the `simple_window_builder` feature.\nuse glium::winit;\nfn main() {\n  // 1. The **winit::EventLoop** for handling events.\n  let event_loop = winit::event_loop::EventLoopBuilder::new().build().unwrap();\n  // 2. Create a glutin context and glium Display\n  let (window, display) = glium::backend::glutin::SimpleWindowBuilder::new().build(&event_loop);\n}\n```\n\nThe `display` object is the most important object of this library and is used when you build buffers, textures, etc. and when you draw.\nYou can clone it and pass it around. However it doesn\u2019t implement the `Send` and `Sync` traits, meaning that you can\u2019t pass it to another thread.\nThe display has ownership of both the window and context, and also provides some methods related to domains such as events handling.\n## [\u00a7](https://docs.rs/glium/latest/glium/#overview)Overview\nOpenGL is similar to drawing software: you draw something, then draw over it, then over it again, etc. until you are satisfied of the result.\nOnce you have a `display`, you can call `let mut frame = display.draw();` to start drawing. This `frame` object implements [the `Surface` trait](https://docs.rs/glium/latest/glium/trait.Surface.html \"trait glium::Surface\") and provides some functions such as `clear_color`, but also allows you to draw with the rendering pipeline.\nIn order to draw something, you will need to pass:\n  * A source of vertices (see the [`vertex`](https://docs.rs/glium/latest/glium/vertex/index.html \"mod glium::vertex\") module)\n  * A source of indices (see the [`index`](https://docs.rs/glium/latest/glium/index/index.html \"mod glium::index\") module)\n  * A program that contains the shader that the GPU will execute (see the [`program`](https://docs.rs/glium/latest/glium/program/index.html \"mod glium::program\") module)\n  * A list of uniforms for the program (see the [`uniforms`](https://docs.rs/glium/latest/glium/uniforms/index.html \"mod glium::uniforms\") module)\n  * Draw parameters to customize the drawing process (see the [`draw_parameters`](https://docs.rs/glium/latest/glium/draw_parameters/index.html \"mod glium::draw_parameters\") module)\n\n\nOnce you have finished drawing, you can call `frame.finish()` to swap buffers and present the result to the user.\n## [\u00a7](https://docs.rs/glium/latest/glium/#opengl-equivalents-in-glium)OpenGL equivalents in glium\n  * **Bind points** : Glium automatically binds and unbinds buffers, textures, etc. in an optimized way.\n  * **Buffers** : Buffers are strongly typed and can be used through `vertex::VertexBuffer`, `index::IndexBuffer` or `uniforms::UniformBuffer`.\n  * **Debug output** : If you compile in debug mode, glium registers a debug output callback and panics if an OpenGL error happens.\n  * **Framebuffer Objects** : FBOs are automatically managed by glium and are stored in the `Context` object. You can specify the attachments that you wish with the `framebuffer` module.\n  * **Instancing** : Instancing is done either by passing a `vertex::EmptyInstanceAttributes` marker or one or several references to vertex buffers wrapped inside a `PerInstance` struct. See the `vertex` module for more infos.\n  * **Memory barriers** : Calling `glMemoryBarrier` is automatically handled by glium, however you still need to call `memoryBarrier()` in your GLSL code in some situations.\n  * **Programs** : See the `program` module.\n  * **Query objects** : The corresponding structs are in the `draw_parameters` module. They are passed as draw parameters.\n  * **Renderbuffer** : See the `framebuffer` module.\n  * **Render to texture** : If you just want to draw on a texture, you can call `texture.as_surface()`. For more advanced options, see the `framebuffer` module.\n  * **Samplers** : Samplers are automatically managed by glium and are stored in the `Context` object. You can specify how a texture should be sampled by using a `Sampler` dummy object in the `uniforms` module.\n  * **Shaders** : You can\u2019t manually create individual shaders. Instead you must create whole programs at once.\n  * **Textures** : Textures are strongly typed and are found in the `texture` module.\n  * **Uniform blocks** : If your program uses uniform blocks, you must pass a reference to a uniform buffer for the name of the block when drawing.\n  * **Vertex array objects** : VAOs are automatically managed by glium if the backend supports them.\n\n\n## Re-exports[\u00a7](https://docs.rs/glium/latest/glium/#reexports)\n\n`pub use crate::draw_parameters::Blend[](https://docs.rs/glium/latest/glium/draw_parameters/struct.Blend.html \"struct glium::draw_parameters::Blend\");`\n\n\n`pub use crate::draw_parameters::BlendingFunction[](https://docs.rs/glium/latest/glium/draw_parameters/enum.BlendingFunction.html \"enum glium::draw_parameters::BlendingFunction\");`\n\n\n`pub use crate::draw_parameters::LinearBlendingFactor[](https://docs.rs/glium/latest/glium/draw_parameters/enum.LinearBlendingFactor.html \"enum glium::draw_parameters::LinearBlendingFactor\");`\n\n\n`pub use crate::draw_parameters::BackfaceCullingMode[](https://docs.rs/glium/latest/glium/draw_parameters/enum.BackfaceCullingMode.html \"enum glium::draw_parameters::BackfaceCullingMode\");`\n\n\n`pub use crate::draw_parameters::Depth[](https://docs.rs/glium/latest/glium/draw_parameters/struct.Depth.html \"struct glium::draw_parameters::Depth\");`\n\n\n`pub use crate::draw_parameters::DepthTest[](https://docs.rs/glium/latest/glium/draw_parameters/enum.DepthTest.html \"enum glium::draw_parameters::DepthTest\");`\n\n\n`pub use crate::draw_parameters::PolygonMode[](https://docs.rs/glium/latest/glium/draw_parameters/enum.PolygonMode.html \"enum glium::draw_parameters::PolygonMode\");`\n\n\n`pub use crate::draw_parameters::DrawParameters[](https://docs.rs/glium/latest/glium/draw_parameters/struct.DrawParameters.html \"struct glium::draw_parameters::DrawParameters\");`\n\n\n`pub use crate::draw_parameters::StencilTest[](https://docs.rs/glium/latest/glium/draw_parameters/enum.StencilTest.html \"enum glium::draw_parameters::StencilTest\");`\n\n\n`pub use crate::draw_parameters::StencilOperation[](https://docs.rs/glium/latest/glium/draw_parameters/enum.StencilOperation.html \"enum glium::draw_parameters::StencilOperation\");`\n\n\n`pub use crate::draw_parameters::Smooth[](https://docs.rs/glium/latest/glium/draw_parameters/enum.Smooth.html \"enum glium::draw_parameters::Smooth\");`\n\n\n`pub use crate::index::IndexBuffer[](https://docs.rs/glium/latest/glium/index/struct.IndexBuffer.html \"struct glium::index::IndexBuffer\");`\n\n\n`pub use crate::vertex::VertexBuffer[](https://docs.rs/glium/latest/glium/vertex/struct.VertexBuffer.html \"struct glium::vertex::VertexBuffer\");`\n\n\n`pub use crate::vertex::Vertex[](https://docs.rs/glium/latest/glium/vertex/trait.Vertex.html \"trait glium::vertex::Vertex\");`\n\n\n`pub use crate::vertex::VertexFormat[](https://docs.rs/glium/latest/glium/vertex/type.VertexFormat.html \"type glium::vertex::VertexFormat\");`\n\n\n`pub use crate::program::Program[](https://docs.rs/glium/latest/glium/program/struct.Program.html \"struct glium::program::Program\");`\n\n\n`pub use crate::program::ProgramCreationError[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::program::ProgramCreationError::CompilationError[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::program::ProgramCreationError::LinkingError[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::program::ProgramCreationError::ShaderTypeNotSupported[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::texture::Texture2d[](https://docs.rs/glium/latest/glium/texture/struct.Texture2d.html \"struct glium::texture::Texture2d\");`\n\n\n`pub use crate::backend::glutin::Display[](https://docs.rs/glium/latest/glium/backend/glutin/struct.Display.html \"struct glium::backend::glutin::Display\");`\n\n\n`pub use crate::backend::glutin::glutin[](https://docs.rs/glutin/0.32.3/x86_64-unknown-linux-gnu/glutin/index.html \"mod glutin\");`\n\n\n`pub use crate::backend::winit[](https://docs.rs/winit/0.30.10/x86_64-unknown-linux-gnu/winit/index.html \"mod winit\");`\n\n## Modules[\u00a7](https://docs.rs/glium/latest/glium/#modules)\n\n[backend](https://docs.rs/glium/latest/glium/backend/index.html \"mod glium::backend\")\n    The `backend` module allows one to link between glium and the OpenGL context..\n\n[buffer](https://docs.rs/glium/latest/glium/buffer/index.html \"mod glium::buffer\")\n    A buffer is a memory location accessible to the video card.\n\n[debug](https://docs.rs/glium/latest/glium/debug/index.html \"mod glium::debug\")\n\n\n[draw_parameters](https://docs.rs/glium/latest/glium/draw_parameters/index.html \"mod glium::draw_parameters\")\n    Describes miscellaneous parameters to be used when drawing.\n\n[field](https://docs.rs/glium/latest/glium/field/index.html \"mod glium::field\")\n    Field utils\n\n[framebuffer](https://docs.rs/glium/latest/glium/framebuffer/index.html \"mod glium::framebuffer\")\n    Framebuffers allow you to customize the color, depth and stencil buffers you will draw on.\n\n[index](https://docs.rs/glium/latest/glium/index/index.html \"mod glium::index\")\n    In order to draw, you need to provide a way for the video card to know how to link primitives together.\n\n[memory_object](https://docs.rs/glium/latest/glium/memory_object/index.html \"mod glium::memory_object\")\n    Contains everything related to external API memory objects.\n\n[pixel_buffer](https://docs.rs/glium/latest/glium/pixel_buffer/index.html \"mod glium::pixel_buffer\")Deprecated\n    Moved to the `texture` module.\n\n[program](https://docs.rs/glium/latest/glium/program/index.html \"mod glium::program\")\n    Items related to creating an OpenGL program.\n\n[semaphore](https://docs.rs/glium/latest/glium/semaphore/index.html \"mod glium::semaphore\")\n    Contains everything related to external API semaphores.\n\n[texture](https://docs.rs/glium/latest/glium/texture/index.html \"mod glium::texture\")\n    A texture is an image loaded in video memory, which can be sampled in your shaders.\n\n[uniforms](https://docs.rs/glium/latest/glium/uniforms/index.html \"mod glium::uniforms\")\n    A uniform is a global variable in your program. In order to draw something, you will need to give `glium` the values of all your uniforms. Objects that implement the `Uniform` trait are here to do that.\n\n[vertex](https://docs.rs/glium/latest/glium/vertex/index.html \"mod glium::vertex\")\n    Contains everything related to vertex sources.\n## Macros[\u00a7](https://docs.rs/glium/latest/glium/#macros)\n\n[assert_no_gl_error](https://docs.rs/glium/latest/glium/macro.assert_no_gl_error.html \"macro glium::assert_no_gl_error\")\n    Calls the `assert_no_error` method on a `glium::Display` instance with file and line number information.\n\n[dynamic_uniform](https://docs.rs/glium/latest/glium/macro.dynamic_uniform.html \"macro glium::dynamic_uniform\")\n    Returns a Dynamic Uniforms Container to which values can be added later.\n\n[field](https://docs.rs/glium/latest/glium/macro.field.html \"macro glium::field\")\n    A macro to create a `Field`.\n\n[implement_buffer_content](https://docs.rs/glium/latest/glium/macro.implement_buffer_content.html \"macro glium::implement_buffer_content\")\n    Implements the `glium::buffer::Content` trait for the given type.\n\n[implement_uniform_block](https://docs.rs/glium/latest/glium/macro.implement_uniform_block.html \"macro glium::implement_uniform_block\")\n    Implements the `glium::uniforms::UniformBlock` trait for the given type.\n\n[implement_vertex](https://docs.rs/glium/latest/glium/macro.implement_vertex.html \"macro glium::implement_vertex\")\n    Implements the `glium::vertex::Vertex` trait for the given type.\n\n[program](https://docs.rs/glium/latest/glium/macro.program.html \"macro glium::program\")\n    Builds a program depending on the GLSL version supported by the backend.\n\n[uniform](https://docs.rs/glium/latest/glium/macro.uniform.html \"macro glium::uniform\")\n    Returns an implementation-defined type which implements the `Uniform` trait.\n## Structs[\u00a7](https://docs.rs/glium/latest/glium/#structs)\n\n[BlitMask](https://docs.rs/glium/latest/glium/struct.BlitMask.html \"struct glium::BlitMask\")\n    Mask specifying, which kinds of buffers to copy when blitting between two frame buffers.\n\n[BlitTarget](https://docs.rs/glium/latest/glium/struct.BlitTarget.html \"struct glium::BlitTarget\")\n    Area of a surface in pixels. Similar to a `Rect` except that dimensions can be negative.\n\n[Capabilities](https://docs.rs/glium/latest/glium/struct.Capabilities.html \"struct glium::Capabilities\")\n    Represents the capabilities of the context.\n\n[ExtensionsList](https://docs.rs/glium/latest/glium/struct.ExtensionsList.html \"struct glium::ExtensionsList\")\n    Contains data about the list of extensions.\n\n[Frame](https://docs.rs/glium/latest/glium/struct.Frame.html \"struct glium::Frame\")\n    Implementation of `Surface`, targeting the default framebuffer.\n\n[IncompatibleOpenGl](https://docs.rs/glium/latest/glium/struct.IncompatibleOpenGl.html \"struct glium::IncompatibleOpenGl\")\n    Returned during Context creation if the OpenGL implementation is too old.\n\n[LinearSyncFence](https://docs.rs/glium/latest/glium/struct.LinearSyncFence.html \"struct glium::LinearSyncFence\")\n    Prototype for a `SyncFence`.\n\n[Rect](https://docs.rs/glium/latest/glium/struct.Rect.html \"struct glium::Rect\")\n    Area of a surface in pixels.\n\n[SyncFence](https://docs.rs/glium/latest/glium/struct.SyncFence.html \"struct glium::SyncFence\")\n    Provides a way to wait for a server-side operation to be finished.\n\n[Version](https://docs.rs/glium/latest/glium/struct.Version.html \"struct glium::Version\")\n    Describes a version.\n## Enums[\u00a7](https://docs.rs/glium/latest/glium/#enums)\n\n[Api](https://docs.rs/glium/latest/glium/enum.Api.html \"enum glium::Api\")\n    Describes an OpenGL-related API.\n\n[DrawError](https://docs.rs/glium/latest/glium/enum.DrawError.html \"enum glium::DrawError\")\n    Error that can happen while drawing.\n\n[Handle](https://docs.rs/glium/latest/glium/enum.Handle.html \"enum glium::Handle\")\n    Handle to a shader or a program.\n\n[Profile](https://docs.rs/glium/latest/glium/enum.Profile.html \"enum glium::Profile\")\n    Describes the OpenGL context profile.\n\n[RawUniformValue](https://docs.rs/glium/latest/glium/enum.RawUniformValue.html \"enum glium::RawUniformValue\")\n    A raw value of a uniform. \u201cRaw\u201d means that it\u2019s passed directly with `glUniform`. Textures for example are just passed as integers.\n\n[ReadError](https://docs.rs/glium/latest/glium/enum.ReadError.html \"enum glium::ReadError\")\n    Error that can happen while reading.\n\n[SwapBuffersError](https://docs.rs/glium/latest/glium/enum.SwapBuffersError.html \"enum glium::SwapBuffersError\")\n    Error that can happen when swapping buffers.\n\n[UuidError](https://docs.rs/glium/latest/glium/enum.UuidError.html \"enum glium::UuidError\")\n    Describes an error preventing the retrieval of the uuid.\n## Traits[\u00a7](https://docs.rs/glium/latest/glium/#traits)\n\n[CapabilitiesSource](https://docs.rs/glium/latest/glium/trait.CapabilitiesSource.html \"trait glium::CapabilitiesSource\")\n    Trait for objects that describe the capabilities of an OpenGL backend.\n\n[GlObject](https://docs.rs/glium/latest/glium/trait.GlObject.html \"trait glium::GlObject\")\n    Trait for objects that are OpenGL objects.\n\n[Surface](https://docs.rs/glium/latest/glium/trait.Surface.html \"trait glium::Surface\")\n    Object that can be drawn upon.\n## Functions[\u00a7](https://docs.rs/glium/latest/glium/#functions)\n\n[get_supported_glsl_version](https://docs.rs/glium/latest/glium/fn.get_supported_glsl_version.html \"fn glium::get_supported_glsl_version\")\n    Given an API version, this function returns the GLSL version that the implementation is required to support.\n",
              "markdown_with_citations": "[](https://docs.rs/glium/latest/glium/all.html \"show sidebar\")\n# Crate gliumCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nEasy-to-use, high-level, OpenGL3+ wrapper.\nGlium is based on glutin - a cross-platform crate for building an OpenGL window and handling application events.\nGlium provides a `Display`\u27e84\u27e9 which uses `glutin` for the Window and its associated GL Context.\n## \u00a7\u27e85\u27e9Initialization\nThe initialisation of a simple glium display occurs in two steps.\n```\nextern crate glium;\n// Use the re-exported winit dependency to avoid version mismatches.\n// Requires the `simple_window_builder` feature.\nuse glium::winit;\nfn main() {\n  // 1. The **winit::EventLoop** for handling events.\n  let event_loop = winit::event_loop::EventLoopBuilder::new().build().unwrap();\n  // 2. Create a glutin context and glium Display\n  let (window, display) = glium::backend::glutin::SimpleWindowBuilder::new().build(&event_loop);\n}\n```\n\nThe `display` object is the most important object of this library and is used when you build buffers, textures, etc. and when you draw.\nYou can clone it and pass it around. However it doesn\u2019t implement the `Send` and `Sync` traits, meaning that you can\u2019t pass it to another thread.\nThe display has ownership of both the window and context, and also provides some methods related to domains such as events handling.\n## \u00a7\u27e86\u27e9Overview\nOpenGL is similar to drawing software: you draw something, then draw over it, then over it again, etc. until you are satisfied of the result.\nOnce you have a `display`, you can call `let mut frame = display.draw();` to start drawing. This `frame` object implements the `Surface` trait\u27e87\u27e9 and provides some functions such as `clear_color`, but also allows you to draw with the rendering pipeline.\nIn order to draw something, you will need to pass:\n  * A source of vertices (see the `vertex`\u27e88\u27e9 module)\n  * A source of indices (see the `index`\u27e89\u27e9 module)\n  * A program that contains the shader that the GPU will execute (see the `program`\u27e810\u27e9 module)\n  * A list of uniforms for the program (see the `uniforms`\u27e811\u27e9 module)\n  * Draw parameters to customize the drawing process (see the `draw_parameters`\u27e812\u27e9 module)\n\n\nOnce you have finished drawing, you can call `frame.finish()` to swap buffers and present the result to the user.\n## \u00a7\u27e813\u27e9OpenGL equivalents in glium\n  * **Bind points** : Glium automatically binds and unbinds buffers, textures, etc. in an optimized way.\n  * **Buffers** : Buffers are strongly typed and can be used through `vertex::VertexBuffer`, `index::IndexBuffer` or `uniforms::UniformBuffer`.\n  * **Debug output** : If you compile in debug mode, glium registers a debug output callback and panics if an OpenGL error happens.\n  * **Framebuffer Objects** : FBOs are automatically managed by glium and are stored in the `Context` object. You can specify the attachments that you wish with the `framebuffer` module.\n  * **Instancing** : Instancing is done either by passing a `vertex::EmptyInstanceAttributes` marker or one or several references to vertex buffers wrapped inside a `PerInstance` struct. See the `vertex` module for more infos.\n  * **Memory barriers** : Calling `glMemoryBarrier` is automatically handled by glium, however you still need to call `memoryBarrier()` in your GLSL code in some situations.\n  * **Programs** : See the `program` module.\n  * **Query objects** : The corresponding structs are in the `draw_parameters` module. They are passed as draw parameters.\n  * **Renderbuffer** : See the `framebuffer` module.\n  * **Render to texture** : If you just want to draw on a texture, you can call `texture.as_surface()`. For more advanced options, see the `framebuffer` module.\n  * **Samplers** : Samplers are automatically managed by glium and are stored in the `Context` object. You can specify how a texture should be sampled by using a `Sampler` dummy object in the `uniforms` module.\n  * **Shaders** : You can\u2019t manually create individual shaders. Instead you must create whole programs at once.\n  * **Textures** : Textures are strongly typed and are found in the `texture` module.\n  * **Uniform blocks** : If your program uses uniform blocks, you must pass a reference to a uniform buffer for the name of the block when drawing.\n  * **Vertex array objects** : VAOs are automatically managed by glium if the backend supports them.\n\n\n## Re-exports\u00a7\u27e814\u27e9\n\n`pub use crate::draw_parameters::Blend[](https://docs.rs/glium/latest/glium/draw_parameters/struct.Blend.html \"struct glium::draw_parameters::Blend\");`\n\n\n`pub use crate::draw_parameters::BlendingFunction[](https://docs.rs/glium/latest/glium/draw_parameters/enum.BlendingFunction.html \"enum glium::draw_parameters::BlendingFunction\");`\n\n\n`pub use crate::draw_parameters::LinearBlendingFactor[](https://docs.rs/glium/latest/glium/draw_parameters/enum.LinearBlendingFactor.html \"enum glium::draw_parameters::LinearBlendingFactor\");`\n\n\n`pub use crate::draw_parameters::BackfaceCullingMode[](https://docs.rs/glium/latest/glium/draw_parameters/enum.BackfaceCullingMode.html \"enum glium::draw_parameters::BackfaceCullingMode\");`\n\n\n`pub use crate::draw_parameters::Depth[](https://docs.rs/glium/latest/glium/draw_parameters/struct.Depth.html \"struct glium::draw_parameters::Depth\");`\n\n\n`pub use crate::draw_parameters::DepthTest[](https://docs.rs/glium/latest/glium/draw_parameters/enum.DepthTest.html \"enum glium::draw_parameters::DepthTest\");`\n\n\n`pub use crate::draw_parameters::PolygonMode[](https://docs.rs/glium/latest/glium/draw_parameters/enum.PolygonMode.html \"enum glium::draw_parameters::PolygonMode\");`\n\n\n`pub use crate::draw_parameters::DrawParameters[](https://docs.rs/glium/latest/glium/draw_parameters/struct.DrawParameters.html \"struct glium::draw_parameters::DrawParameters\");`\n\n\n`pub use crate::draw_parameters::StencilTest[](https://docs.rs/glium/latest/glium/draw_parameters/enum.StencilTest.html \"enum glium::draw_parameters::StencilTest\");`\n\n\n`pub use crate::draw_parameters::StencilOperation[](https://docs.rs/glium/latest/glium/draw_parameters/enum.StencilOperation.html \"enum glium::draw_parameters::StencilOperation\");`\n\n\n`pub use crate::draw_parameters::Smooth[](https://docs.rs/glium/latest/glium/draw_parameters/enum.Smooth.html \"enum glium::draw_parameters::Smooth\");`\n\n\n`pub use crate::index::IndexBuffer[](https://docs.rs/glium/latest/glium/index/struct.IndexBuffer.html \"struct glium::index::IndexBuffer\");`\n\n\n`pub use crate::vertex::VertexBuffer[](https://docs.rs/glium/latest/glium/vertex/struct.VertexBuffer.html \"struct glium::vertex::VertexBuffer\");`\n\n\n`pub use crate::vertex::Vertex[](https://docs.rs/glium/latest/glium/vertex/trait.Vertex.html \"trait glium::vertex::Vertex\");`\n\n\n`pub use crate::vertex::VertexFormat[](https://docs.rs/glium/latest/glium/vertex/type.VertexFormat.html \"type glium::vertex::VertexFormat\");`\n\n\n`pub use crate::program::Program[](https://docs.rs/glium/latest/glium/program/struct.Program.html \"struct glium::program::Program\");`\n\n\n`pub use crate::program::ProgramCreationError[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::program::ProgramCreationError::CompilationError[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::program::ProgramCreationError::LinkingError[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::program::ProgramCreationError::ShaderTypeNotSupported[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::texture::Texture2d[](https://docs.rs/glium/latest/glium/texture/struct.Texture2d.html \"struct glium::texture::Texture2d\");`\n\n\n`pub use crate::backend::glutin::Display[](https://docs.rs/glium/latest/glium/backend/glutin/struct.Display.html \"struct glium::backend::glutin::Display\");`\n\n\n`pub use crate::backend::glutin::glutin[](https://docs.rs/glutin/0.32.3/x86_64-unknown-linux-gnu/glutin/index.html \"mod glutin\");`\n\n\n`pub use crate::backend::winit[](https://docs.rs/winit/0.30.10/x86_64-unknown-linux-gnu/winit/index.html \"mod winit\");`\n\n## Modules\u00a7\u27e815\u27e9\n\nbackend\u27e816\u27e9\n    The `backend` module allows one to link between glium and the OpenGL context..\n\nbuffer\u27e817\u27e9\n    A buffer is a memory location accessible to the video card.\n\ndebug\u27e818\u27e9\n\n\ndraw_parameters\u27e812\u27e9\n    Describes miscellaneous parameters to be used when drawing.\n\nfield\u27e819\u27e9\n    Field utils\n\nframebuffer\u27e820\u27e9\n    Framebuffers allow you to customize the color, depth and stencil buffers you will draw on.\n\nindex\u27e89\u27e9\n    In order to draw, you need to provide a way for the video card to know how to link primitives together.\n\nmemory_object\u27e821\u27e9\n    Contains everything related to external API memory objects.\n\npixel_buffer\u27e822\u27e9Deprecated\n    Moved to the `texture` module.\n\nprogram\u27e810\u27e9\n    Items related to creating an OpenGL program.\n\nsemaphore\u27e823\u27e9\n    Contains everything related to external API semaphores.\n\ntexture\u27e824\u27e9\n    A texture is an image loaded in video memory, which can be sampled in your shaders.\n\nuniforms\u27e811\u27e9\n    A uniform is a global variable in your program. In order to draw something, you will need to give `glium` the values of all your uniforms. Objects that implement the `Uniform` trait are here to do that.\n\nvertex\u27e88\u27e9\n    Contains everything related to vertex sources.\n## Macros\u00a7\u27e825\u27e9\n\nassert_no_gl_error\u27e826\u27e9\n    Calls the `assert_no_error` method on a `glium::Display` instance with file and line number information.\n\ndynamic_uniform\u27e827\u27e9\n    Returns a Dynamic Uniforms Container to which values can be added later.\n\nfield\u27e828\u27e9\n    A macro to create a `Field`.\n\nimplement_buffer_content\u27e829\u27e9\n    Implements the `glium::buffer::Content` trait for the given type.\n\nimplement_uniform_block\u27e830\u27e9\n    Implements the `glium::uniforms::UniformBlock` trait for the given type.\n\nimplement_vertex\u27e831\u27e9\n    Implements the `glium::vertex::Vertex` trait for the given type.\n\nprogram\u27e832\u27e9\n    Builds a program depending on the GLSL version supported by the backend.\n\nuniform\u27e833\u27e9\n    Returns an implementation-defined type which implements the `Uniform` trait.\n## Structs\u00a7\u27e834\u27e9\n\nBlitMask\u27e835\u27e9\n    Mask specifying, which kinds of buffers to copy when blitting between two frame buffers.\n\nBlitTarget\u27e836\u27e9\n    Area of a surface in pixels. Similar to a `Rect` except that dimensions can be negative.\n\nCapabilities\u27e837\u27e9\n    Represents the capabilities of the context.\n\nExtensionsList\u27e838\u27e9\n    Contains data about the list of extensions.\n\nFrame\u27e839\u27e9\n    Implementation of `Surface`, targeting the default framebuffer.\n\nIncompatibleOpenGl\u27e840\u27e9\n    Returned during Context creation if the OpenGL implementation is too old.\n\nLinearSyncFence\u27e841\u27e9\n    Prototype for a `SyncFence`.\n\nRect\u27e842\u27e9\n    Area of a surface in pixels.\n\nSyncFence\u27e843\u27e9\n    Provides a way to wait for a server-side operation to be finished.\n\nVersion\u27e844\u27e9\n    Describes a version.\n## Enums\u00a7\u27e845\u27e9\n\nApi\u27e846\u27e9\n    Describes an OpenGL-related API.\n\nDrawError\u27e847\u27e9\n    Error that can happen while drawing.\n\nHandle\u27e848\u27e9\n    Handle to a shader or a program.\n\nProfile\u27e849\u27e9\n    Describes the OpenGL context profile.\n\nRawUniformValue\u27e850\u27e9\n    A raw value of a uniform. \u201cRaw\u201d means that it\u2019s passed directly with `glUniform`. Textures for example are just passed as integers.\n\nReadError\u27e851\u27e9\n    Error that can happen while reading.\n\nSwapBuffersError\u27e852\u27e9\n    Error that can happen when swapping buffers.\n\nUuidError\u27e853\u27e9\n    Describes an error preventing the retrieval of the uuid.\n## Traits\u00a7\u27e854\u27e9\n\nCapabilitiesSource\u27e855\u27e9\n    Trait for objects that describe the capabilities of an OpenGL backend.\n\nGlObject\u27e856\u27e9\n    Trait for objects that are OpenGL objects.\n\nSurface\u27e87\u27e9\n    Object that can be drawn upon.\n## Functions\u00a7\u27e857\u27e9\n\nget_supported_glsl_version\u27e858\u27e9\n    Given an API version, this function returns the GLSL version that the implementation is required to support.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/glium/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/glium/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/glium/latest/src/glium/lib.rs.html#1-1407: Source\n\u27e84\u27e9 https://docs.rs/glium/latest/glium/backend/glutin/struct.Display.html: struct glium::backend::glutin::Display - `Display`\n\u27e85\u27e9 https://docs.rs/glium/latest/glium/#initialization: \u00a7\n\u27e86\u27e9 https://docs.rs/glium/latest/glium/#overview: \u00a7\n\u27e87\u27e9 https://docs.rs/glium/latest/glium/trait.Surface.html: trait glium::Surface - the `Surface` trait\n\u27e88\u27e9 https://docs.rs/glium/latest/glium/vertex/index.html: mod glium::vertex - `vertex`\n\u27e89\u27e9 https://docs.rs/glium/latest/glium/index/index.html: mod glium::index - `index`\n\u27e810\u27e9 https://docs.rs/glium/latest/glium/program/index.html: mod glium::program - `program`\n\u27e811\u27e9 https://docs.rs/glium/latest/glium/uniforms/index.html: mod glium::uniforms - `uniforms`\n\u27e812\u27e9 https://docs.rs/glium/latest/glium/draw_parameters/index.html: mod glium::draw_parameters - `draw_parameters`\n\u27e813\u27e9 https://docs.rs/glium/latest/glium/#opengl-equivalents-in-glium: \u00a7\n\u27e814\u27e9 https://docs.rs/glium/latest/glium/#reexports: \u00a7\n\u27e815\u27e9 https://docs.rs/glium/latest/glium/#modules: \u00a7\n\u27e816\u27e9 https://docs.rs/glium/latest/glium/backend/index.html: mod glium::backend - backend\n\u27e817\u27e9 https://docs.rs/glium/latest/glium/buffer/index.html: mod glium::buffer - buffer\n\u27e818\u27e9 https://docs.rs/glium/latest/glium/debug/index.html: mod glium::debug - debug\n\u27e819\u27e9 https://docs.rs/glium/latest/glium/field/index.html: mod glium::field - field\n\u27e820\u27e9 https://docs.rs/glium/latest/glium/framebuffer/index.html: mod glium::framebuffer - framebuffer\n\u27e821\u27e9 https://docs.rs/glium/latest/glium/memory_object/index.html: mod glium::memory_object - memory_object\n\u27e822\u27e9 https://docs.rs/glium/latest/glium/pixel_buffer/index.html: mod glium::pixel_buffer - pixel_buffer\n\u27e823\u27e9 https://docs.rs/glium/latest/glium/semaphore/index.html: mod glium::semaphore - semaphore\n\u27e824\u27e9 https://docs.rs/glium/latest/glium/texture/index.html: mod glium::texture - texture\n\u27e825\u27e9 https://docs.rs/glium/latest/glium/#macros: \u00a7\n\u27e826\u27e9 https://docs.rs/glium/latest/glium/macro.assert_no_gl_error.html: macro glium::assert_no_gl_error - assert_no_gl_error\n\u27e827\u27e9 https://docs.rs/glium/latest/glium/macro.dynamic_uniform.html: macro glium::dynamic_uniform - dynamic_uniform\n\u27e828\u27e9 https://docs.rs/glium/latest/glium/macro.field.html: macro glium::field - field\n\u27e829\u27e9 https://docs.rs/glium/latest/glium/macro.implement_buffer_content.html: macro glium::implement_buffer_content - implement_buffer_content\n\u27e830\u27e9 https://docs.rs/glium/latest/glium/macro.implement_uniform_block.html: macro glium::implement_uniform_block - implement_uniform_block\n\u27e831\u27e9 https://docs.rs/glium/latest/glium/macro.implement_vertex.html: macro glium::implement_vertex - implement_vertex\n\u27e832\u27e9 https://docs.rs/glium/latest/glium/macro.program.html: macro glium::program - program\n\u27e833\u27e9 https://docs.rs/glium/latest/glium/macro.uniform.html: macro glium::uniform - uniform\n\u27e834\u27e9 https://docs.rs/glium/latest/glium/#structs: \u00a7\n\u27e835\u27e9 https://docs.rs/glium/latest/glium/struct.BlitMask.html: struct glium::BlitMask - BlitMask\n\u27e836\u27e9 https://docs.rs/glium/latest/glium/struct.BlitTarget.html: struct glium::BlitTarget - BlitTarget\n\u27e837\u27e9 https://docs.rs/glium/latest/glium/struct.Capabilities.html: struct glium::Capabilities - Capabilities\n\u27e838\u27e9 https://docs.rs/glium/latest/glium/struct.ExtensionsList.html: struct glium::ExtensionsList - ExtensionsList\n\u27e839\u27e9 https://docs.rs/glium/latest/glium/struct.Frame.html: struct glium::Frame - Frame\n\u27e840\u27e9 https://docs.rs/glium/latest/glium/struct.IncompatibleOpenGl.html: struct glium::IncompatibleOpenGl - IncompatibleOpenGl\n\u27e841\u27e9 https://docs.rs/glium/latest/glium/struct.LinearSyncFence.html: struct glium::LinearSyncFence - LinearSyncFence\n\u27e842\u27e9 https://docs.rs/glium/latest/glium/struct.Rect.html: struct glium::Rect - Rect\n\u27e843\u27e9 https://docs.rs/glium/latest/glium/struct.SyncFence.html: struct glium::SyncFence - SyncFence\n\u27e844\u27e9 https://docs.rs/glium/latest/glium/struct.Version.html: struct glium::Version - Version\n\u27e845\u27e9 https://docs.rs/glium/latest/glium/#enums: \u00a7\n\u27e846\u27e9 https://docs.rs/glium/latest/glium/enum.Api.html: enum glium::Api - Api\n\u27e847\u27e9 https://docs.rs/glium/latest/glium/enum.DrawError.html: enum glium::DrawError - DrawError\n\u27e848\u27e9 https://docs.rs/glium/latest/glium/enum.Handle.html: enum glium::Handle - Handle\n\u27e849\u27e9 https://docs.rs/glium/latest/glium/enum.Profile.html: enum glium::Profile - Profile\n\u27e850\u27e9 https://docs.rs/glium/latest/glium/enum.RawUniformValue.html: enum glium::RawUniformValue - RawUniformValue\n\u27e851\u27e9 https://docs.rs/glium/latest/glium/enum.ReadError.html: enum glium::ReadError - ReadError\n\u27e852\u27e9 https://docs.rs/glium/latest/glium/enum.SwapBuffersError.html: enum glium::SwapBuffersError - SwapBuffersError\n\u27e853\u27e9 https://docs.rs/glium/latest/glium/enum.UuidError.html: enum glium::UuidError - UuidError\n\u27e854\u27e9 https://docs.rs/glium/latest/glium/#traits: \u00a7\n\u27e855\u27e9 https://docs.rs/glium/latest/glium/trait.CapabilitiesSource.html: trait glium::CapabilitiesSource - CapabilitiesSource\n\u27e856\u27e9 https://docs.rs/glium/latest/glium/trait.GlObject.html: trait glium::GlObject - GlObject\n\u27e857\u27e9 https://docs.rs/glium/latest/glium/#functions: \u00a7\n\u27e858\u27e9 https://docs.rs/glium/latest/glium/fn.get_supported_glsl_version.html: fn glium::get_supported_glsl_version - get_supported_glsl_version\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 16777,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "119289.9994885"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/glium",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [98 releases](https://lib.rs/crates/glium/versions)\n0.36.0 |  Oct 11, 2024   \n---|---  \n0.34.0 |  Jan 3, 2024   \n0.33.0 |  Nov 1, 2023   \n0.32.1 |  Jul 30, 2022   \n0.2.0 |  Mar 30, 2015   \n#**585** in [Graphics APIs](https://lib.rs/rendering/graphics-api \"Crates that provide direct access to the hardware's or the operating system's rendering capabilities.\")\nDownload history 6022/week @ 2025-03-02 8453/week @ 2025-03-09 9813/week @ 2025-03-16 8845/week @ 2025-03-23 5024/week @ 2025-03-30 5843/week @ 2025-04-06 5458/week @ 2025-04-13 7264/week @ 2025-04-20 8734/week @ 2025-04-27 6402/week @ 2025-05-04 4716/week @ 2025-05-11 4120/week @ 2025-05-18 4278/week @ 2025-05-25 3095/week @ 2025-06-01 3800/week @ 2025-06-08 4713/week @ 2025-06-15\n**16,544** downloads per month Used in [fewer than **155** crates](https://lib.rs/crates/glium/rev)\n**Apache-2.0**\n1.5MB  **28K** SLoC\n# glium\n[![Build Status](https://img.gs/czjpqfbdkz/full/https://github.com/glium/glium/actions/workflows/ci.yml/badge.svg)](https://github.com/glium/glium/actions/workflows/ci.yml) [![Coverage Status](https://img.gs/czjpqfbdkz/full/https://coveralls.io/repos/tomaka/glium/badge.svg?branch=master&service=github)](https://coveralls.io/github/tomaka/glium?branch=master)\n[![crates.io page](https://img.shields.io/crates/v/glium.svg)](https://crates.io/crates/glium)\n## Note to current and future Glium users:\nGlium is [no longer actively developed by its original author](https://users.rust-lang.org/t/glium-post-mortem/7063). That said, PRs are still welcome and maintenance is continued by the surrounding community.\nElegant and safe OpenGL wrapper.\nGlium is an intermediate layer between OpenGL and your application. You still need to manually handle the graphics pipeline, but without having to use OpenGL's old and error-prone API.\n```\n```[``dependencies``]`\n`glium ``=` ``\"`*`\"``\n``\n```\n\nIts objectives:\n  * Be safe to use. Many aspects of OpenGL that can trigger a crash if misused are automatically handled by glium.\n  * Provide an API that enforces good practices such as RAII or stateless function calls.\n  * Be compatible with all OpenGL versions that support shaders, providing a unified API when things diverge.\n  * Avoid all OpenGL errors beforehand.\n  * Produce optimized OpenGL function calls, and allow the user to easily use modern OpenGL techniques.\n\n\n## [Link to the documentation](https://docs.rs/glium)\nIf you have some knowledge of OpenGL, the documentation and the examples should get you easily started.\n## [Link to a work-in-progress tutorial](https://glium.github.io/glium/book/)\n## Why should I use Glium instead of raw OpenGL calls?\nEasy to use:\n  * Functions are higher level in glium than in OpenGL. Glium's API tries to be as Rusty as possible, and shouldn't be much different than using any other Rust library. Glium should allow you to do everything that OpenGL allows you to do, just through high-level functions. If something is missing, please open an issue.\n  * You can directly pass vectors, matrices and images to glium instead of manipulating low-level data.\n  * Thanks to glutin, glium is very easy to setup compared to raw OpenGL.\n  * Glium provides easier ways to do common tasks. For example the ``VertexBuffer`` struct contains information about the vertex bindings, because you usually don't use several different bindings with the same vertex buffer. This reduces the overall complexity of OpenGL.\n  * Glium handles framebuffer objects, samplers, and vertex array objects for you. You no longer need to create them explicitly as they are automatically created when needed and destroyed when their corresponding object is destroyed.\n  * Glium is stateless. There are no ```set_something``(``)``` functions in the entire library, and everything is done by parameter passing. The same set of function calls will always produce the same results, which greatly reduces the number of potential problems.\n\n\nSafety:\n  * Glium detects what would normally be errors or undefined behaviors in OpenGL, and panics, without calling ``glGetError`` which would be too slow. Examples include requesting a depth test when you don't have a depth buffer available, not binding any value to an attribute or uniform, or binding multiple textures with different dimensions to the same framebuffer.\n  * If the OpenGL context triggers an error, then you have found a bug in glium. Please open an issue. Just like Rust does everything it can to avoid crashes, glium does everything it can to avoid OpenGL errors.\n  * The OpenGL context is automatically handled by glium. You don't need to worry about thread safety, as it is forbidden to change the thread in which OpenGL objects operate. Glium also allows you to safely replace the current OpenGL context with another one that shares the same lists.\n  * Glium enforces RAII. Creating a ``Texture2d`` struct creates a texture, and destroying the struct destroys the texture. It also uses Rust's borrow system to ensure that objects are still alive and in the right state when you use them. Glium provides the same guarantees with OpenGL objects that you have with regular objects in Rust.\n  * High-level functions are much easier to use and thus less error-prone. For example there is no risk of making a mistake while specifying the names and offsets of your vertex attributes, since Glium automatically generates this data for you.\n  * Robustness is automatically handled. If the OpenGL context is lost (because of a crash in the driver for example) then swapping buffers will return an error.\n\n\nCompatibility:\n  * In its default mode, Glium should be compatible with both OpenGL and OpenGL ES. If something doesn't work on OpenGL ES, please open an issue.\n  * During initialization, Glium detects whether the context provides all the required functionality, and returns an ```Err``` if the device is too old. Glium tries to be as tolerant as possible, and should work with the majority of the OpenGL2-era devices.\n  * Glium will attempt to use the latest, optimized versions of OpenGL functions. This includes buffer and texture immutable storage and direct state access. It will automatically fall back to older functions if they are not available.\n  * Glium comes with a set of tests that you can run with ````cargo``` test```. If your project/game doesn't work on specific hardware, you can try running Glium's tests on it to see what is wrong.\n\n\nPerformances:\n  * State changes are optimized. The OpenGL state is only modified if the state actually differs. For example if you call ``draw`` with the ``IfLess`` depth test twice in a row, then ``glDepthFunc`(``GL_LESS``)``` and ``glEnable`(``GL_DEPTH_TEST``)``` will only be called the first time. If you then call ``draw`` with ``IfGreater``, then only ``glDepthFunc`(``GL_GREATER``)``` will be called.\n  * Just like Rust is theoretically slower than C because of additional safety checks, glium is theoretically slower than well-prepared and optimized raw OpenGL calls. However in practice the difference is very low.\n  * Fully optimized OpenGL code uses advanced techniques such as persistent mapping or bindless textures. These are hard to do and error-prone, but trivially easy to do with glium. You can easily get a huge performance boost just by doing the right function calls.\n  * Since glium automatically avoids all OpenGL errors, you can safely use the ``GL_KHR_no_error`` extension when it is available. Using this extension should provide a good performance boost (but it is also very recent and not available anywhere for the moment).\n\n\nLimitations:\n  * Robustness isn't supported everywhere yet, so you can still get crashes if you do incorrect things in your shaders.\n  * Glium gives you access to all the tools but doesn't prevent you from doing horribly slow things. Some knowledge of modern techniques is required if you want to reach maximum performances.\n  * Glium pushes the Rust compiler to its limits. Stack overflows (inside the compiler), internal compiler errors, one-hour compile time, etc. happen more often than in smaller libraries.\n  * Macros are yet work-in-progress; see [``glium-derive``](https://github.com/glium/glium_derive) for details.\n\n\n#### Dependencies\n~5\u201326MB  ~348K SLoC\n  * [backtrace](https://lib.rs/crates/backtrace \"0.3.2\")\n  * [fnv](https://lib.rs/crates/fnv \"1.0.5\")\n  * [default](https://lib.rs/crates/glium/features#feature-default \"default feature\") [glutin](https://lib.rs/crates/glutin \"new\") 0.32\n  * [default](https://lib.rs/crates/glium/features#feature-default \"default feature\") [glutin-winit](https://lib.rs/crates/glutin-winit \"new\") 0.5\n  * [default](https://lib.rs/crates/glium/features#feature-default \"default feature\") [winit](https://lib.rs/crates/winit \"new\") 0.30\n  * [memoffset](https://lib.rs/crates/memoffset \"new\") 0.9\n  * [simple_window_builder](https://lib.rs/crates/glium/features#feature-simple_window_builder \"default feature\") [raw-window-handle](https://lib.rs/crates/raw-window-handle \"new\") 0.6\n  * [smallvec](https://lib.rs/crates/smallvec \"1.0\")\n\n\n  * build `build.rs`\n  * build  [gl_generator](https://lib.rs/crates/gl_generator \"0.14\")\n  * dev  [cgmath](https://lib.rs/crates/cgmath \"new\") 0.18\n  * dev  [genmesh](https://lib.rs/crates/genmesh \"new\") 0.6\n  * dev  [image](https://lib.rs/crates/image \"new\") 0.25\n  * dev  [libc](https://lib.rs/crates/libc \"0.2.62\")\n  * dev  [obj](https://lib.rs/crates/obj \"new\") 0.10[+genmesh](https://lib.rs/crates/obj/features#feature-genmesh)\n  * dev  [ouroboros](https://lib.rs/crates/ouroboros \"new\") 0.18\n  * dev  [rand](https://lib.rs/crates/rand \"outdated\") 0.8\n  * dev  [takeable-option](https://lib.rs/crates/takeable-option \"0.5\")\n\n\n#### [Other features](https://lib.rs/crates/glium/features)\n  * [glutin_backend](https://lib.rs/crates/glium/features#feature-glutin_backend)\n  * [unstable](https://lib.rs/crates/glium/features#feature-unstable)\n  * [vk_interop](https://lib.rs/crates/glium/features#feature-vk_interop)\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  98 releases\u27e81\u27e9\n0.36.0 |  Oct 11, 2024   \n---|---  \n0.34.0 |  Jan 3, 2024   \n0.33.0 |  Nov 1, 2023   \n0.32.1 |  Jul 30, 2022   \n0.2.0 |  Mar 30, 2015   \n#**585** in Graphics APIs\u27e82\u27e9\nDownload history 6022/week @ 2025-03-02 8453/week @ 2025-03-09 9813/week @ 2025-03-16 8845/week @ 2025-03-23 5024/week @ 2025-03-30 5843/week @ 2025-04-06 5458/week @ 2025-04-13 7264/week @ 2025-04-20 8734/week @ 2025-04-27 6402/week @ 2025-05-04 4716/week @ 2025-05-11 4120/week @ 2025-05-18 4278/week @ 2025-05-25 3095/week @ 2025-06-01 3800/week @ 2025-06-08 4713/week @ 2025-06-15\n**16,544** downloads per month Used in fewer than **155** crates\u27e83\u27e9\n**Apache-2.0**\n1.5MB  **28K** SLoC\n# glium\n![Build Status\u27e84\u27e9](https://github.com/glium/glium/actions/workflows/ci.yml) ![Coverage Status\u27e85\u27e9](https://coveralls.io/github/tomaka/glium?branch=master)\n![crates.io page\u27e86\u27e9](https://crates.io/crates/glium)\n## Note to current and future Glium users:\nGlium is no longer actively developed by its original author\u27e87\u27e9. That said, PRs are still welcome and maintenance is continued by the surrounding community.\nElegant and safe OpenGL wrapper.\nGlium is an intermediate layer between OpenGL and your application. You still need to manually handle the graphics pipeline, but without having to use OpenGL's old and error-prone API.\n```\n```[``dependencies``]`\n`glium ``=` ``\"`*`\"``\n``\n```\n\nIts objectives:\n  * Be safe to use. Many aspects of OpenGL that can trigger a crash if misused are automatically handled by glium.\n  * Provide an API that enforces good practices such as RAII or stateless function calls.\n  * Be compatible with all OpenGL versions that support shaders, providing a unified API when things diverge.\n  * Avoid all OpenGL errors beforehand.\n  * Produce optimized OpenGL function calls, and allow the user to easily use modern OpenGL techniques.\n\n\n## Link to the documentation\u27e88\u27e9\nIf you have some knowledge of OpenGL, the documentation and the examples should get you easily started.\n## Link to a work-in-progress tutorial\u27e89\u27e9\n## Why should I use Glium instead of raw OpenGL calls?\nEasy to use:\n  * Functions are higher level in glium than in OpenGL. Glium's API tries to be as Rusty as possible, and shouldn't be much different than using any other Rust library. Glium should allow you to do everything that OpenGL allows you to do, just through high-level functions. If something is missing, please open an issue.\n  * You can directly pass vectors, matrices and images to glium instead of manipulating low-level data.\n  * Thanks to glutin, glium is very easy to setup compared to raw OpenGL.\n  * Glium provides easier ways to do common tasks. For example the ``VertexBuffer`` struct contains information about the vertex bindings, because you usually don't use several different bindings with the same vertex buffer. This reduces the overall complexity of OpenGL.\n  * Glium handles framebuffer objects, samplers, and vertex array objects for you. You no longer need to create them explicitly as they are automatically created when needed and destroyed when their corresponding object is destroyed.\n  * Glium is stateless. There are no ```set_something``(``)``` functions in the entire library, and everything is done by parameter passing. The same set of function calls will always produce the same results, which greatly reduces the number of potential problems.\n\n\nSafety:\n  * Glium detects what would normally be errors or undefined behaviors in OpenGL, and panics, without calling ``glGetError`` which would be too slow. Examples include requesting a depth test when you don't have a depth buffer available, not binding any value to an attribute or uniform, or binding multiple textures with different dimensions to the same framebuffer.\n  * If the OpenGL context triggers an error, then you have found a bug in glium. Please open an issue. Just like Rust does everything it can to avoid crashes, glium does everything it can to avoid OpenGL errors.\n  * The OpenGL context is automatically handled by glium. You don't need to worry about thread safety, as it is forbidden to change the thread in which OpenGL objects operate. Glium also allows you to safely replace the current OpenGL context with another one that shares the same lists.\n  * Glium enforces RAII. Creating a ``Texture2d`` struct creates a texture, and destroying the struct destroys the texture. It also uses Rust's borrow system to ensure that objects are still alive and in the right state when you use them. Glium provides the same guarantees with OpenGL objects that you have with regular objects in Rust.\n  * High-level functions are much easier to use and thus less error-prone. For example there is no risk of making a mistake while specifying the names and offsets of your vertex attributes, since Glium automatically generates this data for you.\n  * Robustness is automatically handled. If the OpenGL context is lost (because of a crash in the driver for example) then swapping buffers will return an error.\n\n\nCompatibility:\n  * In its default mode, Glium should be compatible with both OpenGL and OpenGL ES. If something doesn't work on OpenGL ES, please open an issue.\n  * During initialization, Glium detects whether the context provides all the required functionality, and returns an ```Err``` if the device is too old. Glium tries to be as tolerant as possible, and should work with the majority of the OpenGL2-era devices.\n  * Glium will attempt to use the latest, optimized versions of OpenGL functions. This includes buffer and texture immutable storage and direct state access. It will automatically fall back to older functions if they are not available.\n  * Glium comes with a set of tests that you can run with ````cargo``` test```. If your project/game doesn't work on specific hardware, you can try running Glium's tests on it to see what is wrong.\n\n\nPerformances:\n  * State changes are optimized. The OpenGL state is only modified if the state actually differs. For example if you call ``draw`` with the ``IfLess`` depth test twice in a row, then ``glDepthFunc`(``GL_LESS``)``` and ``glEnable`(``GL_DEPTH_TEST``)``` will only be called the first time. If you then call ``draw`` with ``IfGreater``, then only ``glDepthFunc`(``GL_GREATER``)``` will be called.\n  * Just like Rust is theoretically slower than C because of additional safety checks, glium is theoretically slower than well-prepared and optimized raw OpenGL calls. However in practice the difference is very low.\n  * Fully optimized OpenGL code uses advanced techniques such as persistent mapping or bindless textures. These are hard to do and error-prone, but trivially easy to do with glium. You can easily get a huge performance boost just by doing the right function calls.\n  * Since glium automatically avoids all OpenGL errors, you can safely use the ``GL_KHR_no_error`` extension when it is available. Using this extension should provide a good performance boost (but it is also very recent and not available anywhere for the moment).\n\n\nLimitations:\n  * Robustness isn't supported everywhere yet, so you can still get crashes if you do incorrect things in your shaders.\n  * Glium gives you access to all the tools but doesn't prevent you from doing horribly slow things. Some knowledge of modern techniques is required if you want to reach maximum performances.\n  * Glium pushes the Rust compiler to its limits. Stack overflows (inside the compiler), internal compiler errors, one-hour compile time, etc. happen more often than in smaller libraries.\n  * Macros are yet work-in-progress; see ``glium-derive``\u27e810\u27e9 for details.\n\n\n#### Dependencies\n~5\u201326MB  ~348K SLoC\n  * backtrace\u27e811\u27e9\n  * fnv\u27e812\u27e9\n  * default\u27e813\u27e9 glutin\u27e814\u27e9 0.32\n  * default\u27e813\u27e9 glutin-winit\u27e815\u27e9 0.5\n  * default\u27e813\u27e9 winit\u27e816\u27e9 0.30\n  * memoffset\u27e817\u27e9 0.9\n  * simple_window_builder\u27e818\u27e9 raw-window-handle\u27e819\u27e9 0.6\n  * smallvec\u27e820\u27e9\n\n\n  * build `build.rs`\n  * build  gl_generator\u27e821\u27e9\n  * dev  cgmath\u27e822\u27e9 0.18\n  * dev  genmesh\u27e823\u27e9 0.6\n  * dev  image\u27e824\u27e9 0.25\n  * dev  libc\u27e825\u27e9\n  * dev  obj\u27e826\u27e9 0.10+genmesh\u27e827\u27e9\n  * dev  ouroboros\u27e828\u27e9 0.18\n  * dev  rand\u27e829\u27e9 0.8\n  * dev  takeable-option\u27e830\u27e9\n\n\n#### Other features\u27e831\u27e9\n  * glutin_backend\u27e832\u27e9\n  * unstable\u27e833\u27e9\n  * vk_interop\u27e834\u27e9\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/glium/versions: 98 releases\n\u27e82\u27e9 https://lib.rs/rendering/graphics-api: Crates that provide direct access to the hardware's or the operating system's rendering capabilities. - Graphics APIs\n\u27e83\u27e9 https://lib.rs/crates/glium/rev: fewer than **155** crates\n\u27e84\u27e9 https://img.gs/czjpqfbdkz/full/https://github.com/glium/glium/actions/workflows/ci.yml/badge.svg: ![Build Status\n\u27e85\u27e9 https://img.gs/czjpqfbdkz/full/https://coveralls.io/repos/tomaka/glium/badge.svg?branch=master&service=github: ![Coverage Status\n\u27e86\u27e9 https://img.shields.io/crates/v/glium.svg: ![crates.io page\n\u27e87\u27e9 https://users.rust-lang.org/t/glium-post-mortem/7063: no longer actively developed by its original author\n\u27e88\u27e9 https://docs.rs/glium: Link to the documentation\n\u27e89\u27e9 https://glium.github.io/glium/book/: Link to a work-in-progress tutorial\n\u27e810\u27e9 https://github.com/glium/glium_derive: ``glium-derive``\n\u27e811\u27e9 https://lib.rs/crates/backtrace: 0.3.2 - backtrace\n\u27e812\u27e9 https://lib.rs/crates/fnv: 1.0.5 - fnv\n\u27e813\u27e9 https://lib.rs/crates/glium/features#feature-default: default feature - default\n\u27e814\u27e9 https://lib.rs/crates/glutin: new - glutin\n\u27e815\u27e9 https://lib.rs/crates/glutin-winit: new - glutin-winit\n\u27e816\u27e9 https://lib.rs/crates/winit: new - winit\n\u27e817\u27e9 https://lib.rs/crates/memoffset: new - memoffset\n\u27e818\u27e9 https://lib.rs/crates/glium/features#feature-simple_window_builder: default feature - simple_window_builder\n\u27e819\u27e9 https://lib.rs/crates/raw-window-handle: new - raw-window-handle\n\u27e820\u27e9 https://lib.rs/crates/smallvec: 1.0 - smallvec\n\u27e821\u27e9 https://lib.rs/crates/gl_generator: 0.14 - gl_generator\n\u27e822\u27e9 https://lib.rs/crates/cgmath: new - cgmath\n\u27e823\u27e9 https://lib.rs/crates/genmesh: new - genmesh\n\u27e824\u27e9 https://lib.rs/crates/image: new - image\n\u27e825\u27e9 https://lib.rs/crates/libc: 0.2.62 - libc\n\u27e826\u27e9 https://lib.rs/crates/obj: new - obj\n\u27e827\u27e9 https://lib.rs/crates/obj/features#feature-genmesh: +genmesh\n\u27e828\u27e9 https://lib.rs/crates/ouroboros: new - ouroboros\n\u27e829\u27e9 https://lib.rs/crates/rand: outdated - rand\n\u27e830\u27e9 https://lib.rs/crates/takeable-option: 0.5 - takeable-option\n\u27e831\u27e9 https://lib.rs/crates/glium/features: Other features\n\u27e832\u27e9 https://lib.rs/crates/glium/features#feature-glutin_backend: glutin_backend\n\u27e833\u27e9 https://lib.rs/crates/glium/features#feature-unstable: unstable\n\u27e834\u27e9 https://lib.rs/crates/glium/features#feature-vk_interop: vk_interop\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 10010,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "119290.5953533"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg_aliases@0.2.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg_aliases-0.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_aliases",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg_aliases-0.2.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libcfg_aliases-17c3a515ffbaf083.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libcfg_aliases-17c3a515ffbaf083.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.14",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pin_project_lite",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.14\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libpin_project_lite-549961073d782a96.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cursor-icon@1.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cursor-icon-1.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cursor_icon",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cursor-icon-1.1.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libcursor_icon-1999bfe77305ea2a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smol_str@0.2.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smol_str-0.2.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smol_str",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smol_str-0.2.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libsmol_str-b7abd2466138098b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#dpi@0.1.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\dpi-0.1.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "dpi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\dpi-0.1.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libdpi-e767a3d473176dff.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#raw-window-handle@0.6.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\raw-window-handle-0.6.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "raw_window_handle",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\raw-window-handle-0.6.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libraw_window_handle-2036ae068b998de1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.20.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.20.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "once_cell",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.20.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "race",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libonce_cell-aee3b9768c8bcaf5.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fnv",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libfnv-da722296a25cad98.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.22",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.22\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.22\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\liblog-3da876c1190a34ea.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\liblog-3da876c1190a34ea.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.6.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.6.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.6.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libbitflags-16a5b712b3ec41e2.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos_api@3.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\khronos_api-1a0d65ec9bed582f\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\khronos_api-1a0d65ec9bed582f\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustc-demangle@0.1.24",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustc-demangle-0.1.24\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rustc_demangle",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustc-demangle-0.1.24\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\librustc_demangle-68f4fddebde2bfb7.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.13.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.13.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.13.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libsmallvec-25de0ffaa5ec55c5.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos_api@3.1.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\khronos_api-96b65c82ef4c8d63\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-segmentation@1.12.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-segmentation-1.12.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_segmentation",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-segmentation-1.12.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libunicode_segmentation-ed3d48af618dcd80.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing-core@0.1.32",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-core-0.1.32\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tracing_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-core-0.1.32\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libtracing_core-5a8a8513457cdfe7.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winit@0.30.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winit-0.30.5\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winit-0.30.5\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "ahash",
                "bytemuck",
                "default",
                "memmap2",
                "percent-encoding",
                "rwh_06",
                "sctk",
                "sctk-adwaita",
                "wayland",
                "wayland-backend",
                "wayland-client",
                "wayland-csd-adwaita",
                "wayland-dlopen",
                "wayland-protocols",
                "wayland-protocols-plasma",
                "x11",
                "x11-dl",
                "x11rb"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\winit-f702542d99c454b1\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\winit-f702542d99c454b1\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos_api@3.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "khronos_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libkhronos_api-3da21ebdc038de2b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libkhronos_api-3da21ebdc038de2b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin@0.32.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-0.32.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-0.32.1\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "egl",
                "glutin_egl_sys",
                "glutin_glx_sys",
                "glutin_wgl_sys",
                "glx",
                "libloading",
                "wayland",
                "wayland-sys",
                "wgl",
                "windows-sys",
                "x11",
                "x11-dl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin-c6109fa9d2d6a7f7\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin-c6109fa9d2d6a7f7\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin-winit@0.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-winit-0.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-winit-0.5.0\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "egl",
                "glx",
                "wayland",
                "wgl",
                "x11"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin-winit-fa8953a4f3963bf2\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin-winit-fa8953a4f3963bf2\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winit@0.30.5",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "windows_platform"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\winit-bd3b75c4bb00cab0\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin@0.32.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "egl_backend",
                "wgl_backend"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin-e579f9e97c239bab\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libloading@0.8.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libloading-0.8.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libloading",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libloading-0.8.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\liblibloading-1bb3dcf2927bfe19.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#memoffset@0.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\memoffset-0.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\memoffset-0.9.1\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\memoffset-53f2f3ffebd8c3b9\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\memoffset-53f2f3ffebd8c3b9\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin-winit@0.5.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "egl_backend",
                "wgl_backend"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin-winit-5dc93eaa1c588d11\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.40",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-0.1.40\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tracing",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-0.1.40\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libtracing-20bf68121aeca6a9.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#memoffset@0.9.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "tuple_ty",
                "allow_clippy",
                "maybe_uninit",
                "doctests",
                "raw_ref_macros",
                "stable_const",
                "stable_offset_of"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\memoffset-171b578662314556\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#backtrace@0.3.74",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\backtrace-0.3.74\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "backtrace",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\backtrace-0.3.74\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libbacktrace-d6154ed4365eb515.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#memoffset@0.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\memoffset-0.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "memoffset",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\memoffset-0.9.1\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libmemoffset-f98582e532268230.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#xml-rs@0.8.22",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\xml-rs-0.8.22\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "xml",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\xml-rs-0.8.22\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libxml-43beb7c87c6c9199.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libxml-43beb7c87c6c9199.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gl_generator@0.14.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gl_generator-0.14.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gl_generator",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gl_generator-0.14.0\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libgl_generator-8708905006b6517f.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libgl_generator-8708905006b6517f.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_egl_sys@0.7.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_egl_sys-0.7.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_egl_sys-0.7.0\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin_egl_sys-4d187ed002ebb992\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin_egl_sys-4d187ed002ebb992\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_wgl_sys@0.6.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.6.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.6.0\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin_wgl_sys-470cc9be3870293a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin_wgl_sys-470cc9be3870293a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_egl_sys@0.7.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin_egl_sys-a8607a052bdf3319\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_wgl_sys@0.6.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin_wgl_sys-761479b0b7344f0f\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "glutin",
                "glutin-winit",
                "glutin_backend",
                "raw-window-handle",
                "simple_window_builder",
                "winit"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glium-164b750d6ae614bf\\build-script-main.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glium-164b750d6ae614bf\\build_script_main.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_wgl_sys@0.6.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.6.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glutin_wgl_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.6.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libglutin_wgl_sys-983cf3aec3a53926.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glium-48af660059d0b630\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.52.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Devices",
                "Win32_Devices_HumanInterfaceDevice",
                "Win32_Foundation",
                "Win32_Globalization",
                "Win32_Graphics",
                "Win32_Graphics_Dwm",
                "Win32_Graphics_Gdi",
                "Win32_Graphics_OpenGL",
                "Win32_Media",
                "Win32_System",
                "Win32_System_Com",
                "Win32_System_Com_StructuredStorage",
                "Win32_System_LibraryLoader",
                "Win32_System_Ole",
                "Win32_System_SystemInformation",
                "Win32_System_SystemServices",
                "Win32_System_Threading",
                "Win32_System_WindowsProgramming",
                "Win32_UI",
                "Win32_UI_Accessibility",
                "Win32_UI_Controls",
                "Win32_UI_HiDpi",
                "Win32_UI_Input",
                "Win32_UI_Input_Ime",
                "Win32_UI_Input_KeyboardAndMouse",
                "Win32_UI_Input_Pointer",
                "Win32_UI_Input_Touch",
                "Win32_UI_Shell",
                "Win32_UI_TextServices",
                "Win32_UI_WindowsAndMessaging",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libwindows_sys-d38bddd483f747fc.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_egl_sys@0.7.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_egl_sys-0.7.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glutin_egl_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_egl_sys-0.7.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libglutin_egl_sys-19b2c5a696930b75.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin@0.32.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-0.32.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glutin",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-0.32.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "egl",
                "glutin_egl_sys",
                "glutin_glx_sys",
                "glutin_wgl_sys",
                "glx",
                "libloading",
                "wayland",
                "wayland-sys",
                "wgl",
                "windows-sys",
                "x11",
                "x11-dl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libglutin-2391d19d86c120e7.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winit@0.30.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winit-0.30.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "winit",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winit-0.30.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "ahash",
                "bytemuck",
                "default",
                "memmap2",
                "percent-encoding",
                "rwh_06",
                "sctk",
                "sctk-adwaita",
                "wayland",
                "wayland-backend",
                "wayland-client",
                "wayland-csd-adwaita",
                "wayland-dlopen",
                "wayland-protocols",
                "wayland-protocols-plasma",
                "x11",
                "x11-dl",
                "x11rb"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libwinit-76febc3bd73f2d1c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin-winit@0.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-winit-0.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glutin_winit",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-winit-0.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "egl",
                "glx",
                "wayland",
                "wgl",
                "x11"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libglutin_winit-231bcb52dac6b6f8.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "glutin",
                "glutin-winit",
                "glutin_backend",
                "raw-window-handle",
                "simple_window_builder",
                "winit"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libglium-33a10ad23ea88ac0.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos_api@3.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\khronos_api-1a0d65ec9bed582f\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\khronos_api-1a0d65ec9bed582f\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos_api@3.1.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\khronos_api-96b65c82ef4c8d63\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.22",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.22\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.22\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\liblog-3da876c1190a34ea.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\liblog-3da876c1190a34ea.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#xml-rs@0.8.22",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\xml-rs-0.8.22\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "xml",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\xml-rs-0.8.22\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libxml-43beb7c87c6c9199.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libxml-43beb7c87c6c9199.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg_aliases@0.2.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg_aliases-0.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_aliases",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg_aliases-0.2.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libcfg_aliases-17c3a515ffbaf083.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libcfg_aliases-17c3a515ffbaf083.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#raw-window-handle@0.6.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\raw-window-handle-0.6.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "raw_window_handle",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\raw-window-handle-0.6.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libraw_window_handle-2036ae068b998de1.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.6.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.6.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.6.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libbitflags-16a5b712b3ec41e2.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.14",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pin_project_lite",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.14\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libpin_project_lite-549961073d782a96.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing-core@0.1.32",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-core-0.1.32\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tracing_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-core-0.1.32\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libtracing_core-5a8a8513457cdfe7.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.20.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.20.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "once_cell",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.20.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "race",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libonce_cell-aee3b9768c8bcaf5.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-segmentation@1.12.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-segmentation-1.12.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_segmentation",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-segmentation-1.12.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libunicode_segmentation-ed3d48af618dcd80.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#dpi@0.1.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\dpi-0.1.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "dpi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\dpi-0.1.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libdpi-e767a3d473176dff.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smol_str@0.2.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smol_str-0.2.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smol_str",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smol_str-0.2.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libsmol_str-b7abd2466138098b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cursor-icon@1.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cursor-icon-1.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cursor_icon",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cursor-icon-1.1.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libcursor_icon-1999bfe77305ea2a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos_api@3.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "khronos_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libkhronos_api-3da21ebdc038de2b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libkhronos_api-3da21ebdc038de2b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin@0.32.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-0.32.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-0.32.1\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "egl",
                "glutin_egl_sys",
                "glutin_glx_sys",
                "glutin_wgl_sys",
                "glx",
                "libloading",
                "wayland",
                "wayland-sys",
                "wgl",
                "windows-sys",
                "x11",
                "x11-dl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin-c6109fa9d2d6a7f7\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin-c6109fa9d2d6a7f7\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winit@0.30.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winit-0.30.5\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winit-0.30.5\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "ahash",
                "bytemuck",
                "default",
                "memmap2",
                "percent-encoding",
                "rwh_06",
                "sctk",
                "sctk-adwaita",
                "wayland",
                "wayland-backend",
                "wayland-client",
                "wayland-csd-adwaita",
                "wayland-dlopen",
                "wayland-protocols",
                "wayland-protocols-plasma",
                "x11",
                "x11-dl",
                "x11rb"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\winit-f702542d99c454b1\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\winit-f702542d99c454b1\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin-winit@0.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-winit-0.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-winit-0.5.0\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "egl",
                "glx",
                "wayland",
                "wgl",
                "x11"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin-winit-fa8953a4f3963bf2\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin-winit-fa8953a4f3963bf2\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.40",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-0.1.40\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tracing",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-0.1.40\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libtracing-20bf68121aeca6a9.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#memoffset@0.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\memoffset-0.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\memoffset-0.9.1\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\memoffset-53f2f3ffebd8c3b9\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\memoffset-53f2f3ffebd8c3b9\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustc-demangle@0.1.24",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustc-demangle-0.1.24\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rustc_demangle",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustc-demangle-0.1.24\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\librustc_demangle-68f4fddebde2bfb7.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.13.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.13.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.13.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libsmallvec-25de0ffaa5ec55c5.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fnv",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libfnv-da722296a25cad98.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gl_generator@0.14.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gl_generator-0.14.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gl_generator",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gl_generator-0.14.0\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libgl_generator-8708905006b6517f.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libgl_generator-8708905006b6517f.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin@0.32.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "egl_backend",
                "wgl_backend"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin-e579f9e97c239bab\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winit@0.30.5",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "windows_platform"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\winit-bd3b75c4bb00cab0\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#memoffset@0.9.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "tuple_ty",
                "allow_clippy",
                "maybe_uninit",
                "doctests",
                "raw_ref_macros",
                "stable_const",
                "stable_offset_of"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\memoffset-171b578662314556\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin-winit@0.5.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "egl_backend",
                "wgl_backend"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin-winit-5dc93eaa1c588d11\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_egl_sys@0.7.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_egl_sys-0.7.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_egl_sys-0.7.0\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin_egl_sys-4d187ed002ebb992\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin_egl_sys-4d187ed002ebb992\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_wgl_sys@0.6.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.6.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.6.0\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin_wgl_sys-470cc9be3870293a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin_wgl_sys-470cc9be3870293a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#memoffset@0.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\memoffset-0.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "memoffset",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\memoffset-0.9.1\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libmemoffset-f98582e532268230.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.52.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Devices",
                "Win32_Devices_HumanInterfaceDevice",
                "Win32_Foundation",
                "Win32_Globalization",
                "Win32_Graphics",
                "Win32_Graphics_Dwm",
                "Win32_Graphics_Gdi",
                "Win32_Graphics_OpenGL",
                "Win32_Media",
                "Win32_System",
                "Win32_System_Com",
                "Win32_System_Com_StructuredStorage",
                "Win32_System_LibraryLoader",
                "Win32_System_Ole",
                "Win32_System_SystemInformation",
                "Win32_System_SystemServices",
                "Win32_System_Threading",
                "Win32_System_WindowsProgramming",
                "Win32_UI",
                "Win32_UI_Accessibility",
                "Win32_UI_Controls",
                "Win32_UI_HiDpi",
                "Win32_UI_Input",
                "Win32_UI_Input_Ime",
                "Win32_UI_Input_KeyboardAndMouse",
                "Win32_UI_Input_Pointer",
                "Win32_UI_Input_Touch",
                "Win32_UI_Shell",
                "Win32_UI_TextServices",
                "Win32_UI_WindowsAndMessaging",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libwindows_sys-d38bddd483f747fc.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_egl_sys@0.7.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin_egl_sys-a8607a052bdf3319\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_wgl_sys@0.6.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glutin_wgl_sys-761479b0b7344f0f\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libloading@0.8.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libloading-0.8.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libloading",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libloading-0.8.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\liblibloading-1bb3dcf2927bfe19.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#backtrace@0.3.74",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\backtrace-0.3.74\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "backtrace",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\backtrace-0.3.74\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libbacktrace-d6154ed4365eb515.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_wgl_sys@0.6.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.6.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glutin_wgl_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.6.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libglutin_wgl_sys-983cf3aec3a53926.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_egl_sys@0.7.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_egl_sys-0.7.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glutin_egl_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_egl_sys-0.7.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libglutin_egl_sys-19b2c5a696930b75.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winit@0.30.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winit-0.30.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "winit",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winit-0.30.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "ahash",
                "bytemuck",
                "default",
                "memmap2",
                "percent-encoding",
                "rwh_06",
                "sctk",
                "sctk-adwaita",
                "wayland",
                "wayland-backend",
                "wayland-client",
                "wayland-csd-adwaita",
                "wayland-dlopen",
                "wayland-protocols",
                "wayland-protocols-plasma",
                "x11",
                "x11-dl",
                "x11rb"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libwinit-76febc3bd73f2d1c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin@0.32.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-0.32.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glutin",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-0.32.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "egl",
                "glutin_egl_sys",
                "glutin_glx_sys",
                "glutin_wgl_sys",
                "glx",
                "libloading",
                "wayland",
                "wayland-sys",
                "wgl",
                "windows-sys",
                "x11",
                "x11-dl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libglutin-2391d19d86c120e7.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin-winit@0.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-winit-0.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glutin_winit",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin-winit-0.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "egl",
                "glx",
                "wayland",
                "wgl",
                "x11"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\deps\\libglutin_winit-231bcb52dac6b6f8.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: match expression looks like `matches!` macro\n  --> build\\textures.rs:31:9\n   |\n31 | /         match self {\n32 | |             TextureDimensions::Texture1dArray => true,\n33 | |             TextureDimensions::Texture2dArray => true,\n34 | |             TextureDimensions::Texture2dMultisampleArray => true,\n35 | |             TextureDimensions::CubemapArray => true,\n36 | |             _ => false\n37 | |         }\n   | |_________^ help: try: `matches!(self, TextureDimensions::Texture1dArray | TextureDimensions::Texture2dArray | TextureDimensions::Texture2dMultisampleArray | TextureDimensions::CubemapArray)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro\n   = note: `#[warn(clippy::match_like_matches_macro)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::match_like_matches_macro)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 803,
                        "byte_start": 529,
                        "column_end": 10,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 37,
                        "line_start": 31,
                        "suggested_replacement": "matches!(self, TextureDimensions::Texture1dArray | TextureDimensions::Texture2dArray | TextureDimensions::Texture2dMultisampleArray | TextureDimensions::CubemapArray)",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 21,
                            "highlight_start": 9,
                            "text": "        match self {"
                          },
                          {
                            "highlight_end": 55,
                            "highlight_start": 1,
                            "text": "            TextureDimensions::Texture1dArray => true,"
                          },
                          {
                            "highlight_end": 55,
                            "highlight_start": 1,
                            "text": "            TextureDimensions::Texture2dArray => true,"
                          },
                          {
                            "highlight_end": 66,
                            "highlight_start": 1,
                            "text": "            TextureDimensions::Texture2dMultisampleArray => true,"
                          },
                          {
                            "highlight_end": 53,
                            "highlight_start": 1,
                            "text": "            TextureDimensions::CubemapArray => true,"
                          },
                          {
                            "highlight_end": 23,
                            "highlight_start": 1,
                            "text": "            _ => false"
                          },
                          {
                            "highlight_end": 10,
                            "highlight_start": 1,
                            "text": "        }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::match_like_matches_macro",
                  "explanation": null
                },
                "level": "warning",
                "message": "match expression looks like `matches!` macro",
                "spans": [
                  {
                    "byte_end": 803,
                    "byte_start": 529,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 37,
                    "line_start": 31,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 9,
                        "text": "        match self {"
                      },
                      {
                        "highlight_end": 55,
                        "highlight_start": 1,
                        "text": "            TextureDimensions::Texture1dArray => true,"
                      },
                      {
                        "highlight_end": 55,
                        "highlight_start": 1,
                        "text": "            TextureDimensions::Texture2dArray => true,"
                      },
                      {
                        "highlight_end": 66,
                        "highlight_start": 1,
                        "text": "            TextureDimensions::Texture2dMultisampleArray => true,"
                      },
                      {
                        "highlight_end": 53,
                        "highlight_start": 1,
                        "text": "            TextureDimensions::CubemapArray => true,"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "            _ => false"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: match expression looks like `matches!` macro\n  --> build\\textures.rs:41:9\n   |\n41 | /         match self {\n42 | |             TextureDimensions::Texture2dMultisample => true,\n43 | |             TextureDimensions::Texture2dMultisampleArray => true,\n44 | |             _ => false\n45 | |         }\n   | |_________^ help: try: `matches!(self, TextureDimensions::Texture2dMultisample | TextureDimensions::Texture2dMultisampleArray)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1030,
                        "byte_start": 858,
                        "column_end": 10,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 45,
                        "line_start": 41,
                        "suggested_replacement": "matches!(self, TextureDimensions::Texture2dMultisample | TextureDimensions::Texture2dMultisampleArray)",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 21,
                            "highlight_start": 9,
                            "text": "        match self {"
                          },
                          {
                            "highlight_end": 61,
                            "highlight_start": 1,
                            "text": "            TextureDimensions::Texture2dMultisample => true,"
                          },
                          {
                            "highlight_end": 66,
                            "highlight_start": 1,
                            "text": "            TextureDimensions::Texture2dMultisampleArray => true,"
                          },
                          {
                            "highlight_end": 23,
                            "highlight_start": 1,
                            "text": "            _ => false"
                          },
                          {
                            "highlight_end": 10,
                            "highlight_start": 1,
                            "text": "        }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::match_like_matches_macro",
                  "explanation": null
                },
                "level": "warning",
                "message": "match expression looks like `matches!` macro",
                "spans": [
                  {
                    "byte_end": 1030,
                    "byte_start": 858,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 45,
                    "line_start": 41,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 9,
                        "text": "        match self {"
                      },
                      {
                        "highlight_end": 61,
                        "highlight_start": 1,
                        "text": "            TextureDimensions::Texture2dMultisample => true,"
                      },
                      {
                        "highlight_end": 66,
                        "highlight_start": 1,
                        "text": "            TextureDimensions::Texture2dMultisampleArray => true,"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "            _ => false"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: match expression looks like `matches!` macro\n  --> build\\textures.rs:49:9\n   |\n49 | /         match self {\n50 | |             TextureDimensions::Cubemap => true,\n51 | |             TextureDimensions::CubemapArray => true,\n52 | |             _ => false\n53 | |         }\n   | |_________^ help: try: `matches!(self, TextureDimensions::Cubemap | TextureDimensions::CubemapArray)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1224,
                        "byte_start": 1078,
                        "column_end": 10,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 53,
                        "line_start": 49,
                        "suggested_replacement": "matches!(self, TextureDimensions::Cubemap | TextureDimensions::CubemapArray)",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 21,
                            "highlight_start": 9,
                            "text": "        match self {"
                          },
                          {
                            "highlight_end": 48,
                            "highlight_start": 1,
                            "text": "            TextureDimensions::Cubemap => true,"
                          },
                          {
                            "highlight_end": 53,
                            "highlight_start": 1,
                            "text": "            TextureDimensions::CubemapArray => true,"
                          },
                          {
                            "highlight_end": 23,
                            "highlight_start": 1,
                            "text": "            _ => false"
                          },
                          {
                            "highlight_end": 10,
                            "highlight_start": 1,
                            "text": "        }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::match_like_matches_macro",
                  "explanation": null
                },
                "level": "warning",
                "message": "match expression looks like `matches!` macro",
                "spans": [
                  {
                    "byte_end": 1224,
                    "byte_start": 1078,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 53,
                    "line_start": 49,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 9,
                        "text": "        match self {"
                      },
                      {
                        "highlight_end": 48,
                        "highlight_start": 1,
                        "text": "            TextureDimensions::Cubemap => true,"
                      },
                      {
                        "highlight_end": 53,
                        "highlight_start": 1,
                        "text": "            TextureDimensions::CubemapArray => true,"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "            _ => false"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:164:9\n    |\n164 |         format!(\"{}{}\", prefix, suffix)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n    = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n    |\n164 -         format!(\"{}{}\", prefix, suffix)\n164 +         format!(\"{prefix}{suffix}\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::uninlined_format_args)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8931,
                        "byte_start": 8931,
                        "column_end": 19,
                        "column_start": 19,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 164,
                        "line_start": 164,
                        "suggested_replacement": "prefix",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 19,
                            "highlight_start": 19,
                            "text": "        format!(\"{}{}\", prefix, suffix)"
                          }
                        ]
                      },
                      {
                        "byte_end": 8933,
                        "byte_start": 8933,
                        "column_end": 21,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 164,
                        "line_start": 164,
                        "suggested_replacement": "suffix",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 21,
                            "highlight_start": 21,
                            "text": "        format!(\"{}{}\", prefix, suffix)"
                          }
                        ]
                      },
                      {
                        "byte_end": 8943,
                        "byte_start": 8935,
                        "column_end": 31,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 164,
                        "line_start": 164,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 31,
                            "highlight_start": 23,
                            "text": "        format!(\"{}{}\", prefix, suffix)"
                          }
                        ]
                      },
                      {
                        "byte_end": 8951,
                        "byte_start": 8943,
                        "column_end": 39,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 164,
                        "line_start": 164,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 31,
                            "text": "        format!(\"{}{}\", prefix, suffix)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 8952,
                    "byte_start": 8921,
                    "column_end": 40,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 164,
                    "line_start": 164,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 9,
                        "text": "        format!(\"{}{}\", prefix, suffix)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:193:9\n    |\n193 |         format!(\"{}{}\", prefix, suffix)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n193 -         format!(\"{}{}\", prefix, suffix)\n193 +         format!(\"{prefix}{suffix}\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10174,
                        "byte_start": 10174,
                        "column_end": 19,
                        "column_start": 19,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 193,
                        "line_start": 193,
                        "suggested_replacement": "prefix",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 19,
                            "highlight_start": 19,
                            "text": "        format!(\"{}{}\", prefix, suffix)"
                          }
                        ]
                      },
                      {
                        "byte_end": 10176,
                        "byte_start": 10176,
                        "column_end": 21,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 193,
                        "line_start": 193,
                        "suggested_replacement": "suffix",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 21,
                            "highlight_start": 21,
                            "text": "        format!(\"{}{}\", prefix, suffix)"
                          }
                        ]
                      },
                      {
                        "byte_end": 10186,
                        "byte_start": 10178,
                        "column_end": 31,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 193,
                        "line_start": 193,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 31,
                            "highlight_start": 23,
                            "text": "        format!(\"{}{}\", prefix, suffix)"
                          }
                        ]
                      },
                      {
                        "byte_end": 10194,
                        "byte_start": 10186,
                        "column_end": 39,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 193,
                        "line_start": 193,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 31,
                            "text": "        format!(\"{}{}\", prefix, suffix)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 10195,
                    "byte_start": 10164,
                    "column_end": 40,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 193,
                    "line_start": 193,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 9,
                        "text": "        format!(\"{}{}\", prefix, suffix)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:298:5\n    |\n298 |     writeln!(dest, \"pub use self::{}::{};\", module_name, name).unwrap();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n298 -     writeln!(dest, \"pub use self::{}::{};\", module_name, name).unwrap();\n298 +     writeln!(dest, \"pub use self::{module_name}::{name};\").unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 15168,
                        "byte_start": 15168,
                        "column_end": 36,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 298,
                        "line_start": 298,
                        "suggested_replacement": "module_name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 36,
                            "text": "    writeln!(dest, \"pub use self::{}::{};\", module_name, name).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 15172,
                        "byte_start": 15172,
                        "column_end": 40,
                        "column_start": 40,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 298,
                        "line_start": 298,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 40,
                            "text": "    writeln!(dest, \"pub use self::{}::{};\", module_name, name).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 15188,
                        "byte_start": 15175,
                        "column_end": 56,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 298,
                        "line_start": 298,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 56,
                            "highlight_start": 43,
                            "text": "    writeln!(dest, \"pub use self::{}::{};\", module_name, name).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 15194,
                        "byte_start": 15188,
                        "column_end": 62,
                        "column_start": 56,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 298,
                        "line_start": 298,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 62,
                            "highlight_start": 56,
                            "text": "    writeln!(dest, \"pub use self::{}::{};\", module_name, name).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 15195,
                    "byte_start": 15137,
                    "column_end": 63,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 298,
                    "line_start": 298,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 63,
                        "highlight_start": 5,
                        "text": "    writeln!(dest, \"pub use self::{}::{};\", module_name, name).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:301:5\n    |\n301 | /     writeln!(dest, \"\n302 | |         /// Contains the implementation of `{}`.\n303 | |         pub mod {} {{\\\n...   |\n335 | |     \", name, module_name).unwrap();\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n302 ~         /// Contains the implementation of `{name}`.\n303 ~         pub mod {module_name} {{\\\n304 |             // the list of imports we need depends on the texture type, don't bother with this\n...\n334 |\n335 ~     \").unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 15303,
                        "byte_start": 15303,
                        "column_end": 46,
                        "column_start": 46,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 302,
                        "line_start": 302,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 46,
                            "text": "        /// Contains the implementation of `{}`."
                          }
                        ]
                      },
                      {
                        "byte_end": 15324,
                        "byte_start": 15324,
                        "column_end": 18,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 303,
                        "line_start": 303,
                        "suggested_replacement": "module_name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 18,
                            "highlight_start": 18,
                            "text": "        pub mod {} {{\\"
                          }
                        ]
                      },
                      {
                        "byte_end": 17045,
                        "byte_start": 17039,
                        "column_end": 12,
                        "column_start": 6,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 335,
                        "line_start": 335,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 12,
                            "highlight_start": 6,
                            "text": "    \", name, module_name).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 17058,
                        "byte_start": 17045,
                        "column_end": 25,
                        "column_start": 12,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 335,
                        "line_start": 335,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 25,
                            "highlight_start": 12,
                            "text": "    \", name, module_name).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 17059,
                    "byte_start": 15241,
                    "column_end": 26,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 335,
                    "line_start": 301,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    writeln!(dest, \""
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "        /// Contains the implementation of `{}`."
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "        pub mod {} {{\\"
                      },
                      {
                        "highlight_end": 95,
                        "highlight_start": 1,
                        "text": "            // the list of imports we need depends on the texture type, don't bother with this"
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "            #![allow(unused_imports)]"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "            use std::borrow::Cow;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 94,
                        "highlight_start": 1,
                        "text": "            use crate::texture::any::{{self, TextureAny, TextureAnyLayer, TextureAnyMipmap}};"
                      },
                      {
                        "highlight_end": 93,
                        "highlight_start": 1,
                        "text": "            use crate::texture::any::{{TextureAnyLayerMipmap, TextureAnyImage, Dimensions}};"
                      },
                      {
                        "highlight_end": 98,
                        "highlight_start": 1,
                        "text": "            use crate::texture::bindless::{{ResidentTexture, BindlessTexturesNotSupportedError}};"
                      },
                      {
                        "highlight_end": 100,
                        "highlight_start": 1,
                        "text": "            use crate::texture::get_format::{{InternalFormat, InternalFormatType, GetFormatError}};"
                      },
                      {
                        "highlight_end": 59,
                        "highlight_start": 1,
                        "text": "            use crate::texture::pixel_buffer::PixelBuffer;"
                      },
                      {
                        "highlight_end": 100,
                        "highlight_start": 1,
                        "text": "            use crate::texture::{{TextureCreationError, Texture1dDataSource, Texture2dDataSource}};"
                      },
                      {
                        "highlight_end": 116,
                        "highlight_start": 1,
                        "text": "            use crate::texture::{{Texture3dDataSource, Texture2dDataSink, MipmapsOption, CompressedMipmapsOption}};"
                      },
                      {
                        "highlight_end": 83,
                        "highlight_start": 1,
                        "text": "            use crate::texture::{{RawImage1d, RawImage2d, RawImage3d, CubeLayer}};"
                      },
                      {
                        "highlight_end": 51,
                        "highlight_start": 1,
                        "text": "            use crate::texture::pixel::PixelValue;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 80,
                        "highlight_start": 1,
                        "text": "            use crate::image_format::{{ClientFormatAny, TextureFormatRequest}};"
                      },
                      {
                        "highlight_end": 89,
                        "highlight_start": 1,
                        "text": "            use crate::image_format::{{UncompressedFloatFormat, UncompressedIntFormat}};"
                      },
                      {
                        "highlight_end": 107,
                        "highlight_start": 1,
                        "text": "            use crate::image_format::{{CompressedFormat, DepthFormat, DepthStencilFormat, StencilFormat}};"
                      },
                      {
                        "highlight_end": 99,
                        "highlight_start": 1,
                        "text": "            use crate::image_format::{{CompressedSrgbFormat, SrgbFormat, UncompressedUintFormat}};"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "            use crate::backend::Facade;"
                      },
                      {
                        "highlight_end": 120,
                        "highlight_start": 1,
                        "text": "            use crate::uniforms::{{UniformValue, AsUniformValue, Sampler, ImageUnit, ImageUnitError, ImageUnitFormat}};"
                      },
                      {
                        "highlight_end": 36,
                        "highlight_start": 1,
                        "text": "            use crate::framebuffer;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "            use crate::Rect;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "            use crate::GlObject;"
                      },
                      {
                        "highlight_end": 35,
                        "highlight_start": 1,
                        "text": "            use crate::TextureExt;"
                      },
                      {
                        "highlight_end": 41,
                        "highlight_start": 1,
                        "text": "            use crate::TextureMipmapExt;"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "            use crate::gl;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "    \", name, module_name).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:377:6\n    |\n377 |     (writeln!(dest, \"pub struct {}(TextureAny);\", name)).unwrap();\n    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n377 -     (writeln!(dest, \"pub struct {}(TextureAny);\", name)).unwrap();\n377 +     (writeln!(dest, \"pub struct {name}(TextureAny);\")).unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 19298,
                        "byte_start": 19298,
                        "column_end": 34,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 377,
                        "line_start": 377,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 34,
                            "highlight_start": 34,
                            "text": "    (writeln!(dest, \"pub struct {}(TextureAny);\", name)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 19319,
                        "byte_start": 19313,
                        "column_end": 55,
                        "column_start": 49,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 377,
                        "line_start": 377,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 55,
                            "highlight_start": 49,
                            "text": "    (writeln!(dest, \"pub struct {}(TextureAny);\", name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 19320,
                    "byte_start": 19270,
                    "column_end": 56,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 377,
                    "line_start": 377,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 6,
                        "text": "    (writeln!(dest, \"pub struct {}(TextureAny);\", name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:380:6\n    |\n380 |       (writeln!(dest, \"\n    |  ______^\n381 | |                 impl GlObject for {} {{\n382 | |                     type Id = gl::types::GLuint;\n...   |\n388 | |                 }}\n389 | |             \", name)).unwrap();\n    | |____________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n381 ~                 impl GlObject for {name} {{\n382 |                     type Id = gl::types::GLuint;\n...\n388 |                 }}\n389 ~             \")).unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 19419,
                        "byte_start": 19419,
                        "column_end": 36,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 381,
                        "line_start": 381,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 36,
                            "text": "                impl GlObject for {} {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 19666,
                        "byte_start": 19660,
                        "column_end": 20,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 389,
                        "line_start": 389,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 20,
                            "highlight_start": 14,
                            "text": "            \", name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 19667,
                    "byte_start": 19367,
                    "column_end": 21,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 389,
                    "line_start": 380,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 22,
                        "highlight_start": 6,
                        "text": "    (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "                impl GlObject for {} {{"
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "                    type Id = gl::types::GLuint;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                    #[inline]"
                      },
                      {
                        "highlight_end": 61,
                        "highlight_start": 1,
                        "text": "                    fn get_id(&self) -> gl::types::GLuint {{"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "                        self.0.get_id()"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    }}"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 21,
                        "highlight_start": 1,
                        "text": "            \", name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:392:6\n    |\n392 |       (writeln!(dest, \"\n    |  ______^\n393 | |                 impl ::std::fmt::Debug for {} {{\n394 | |                     #[inline]\n395 | |                     fn fmt(&self, f: &mut ::std::fmt::Formatter) -> Result<(), ::std::fmt::Error>\n...   |\n399 | |                 }}\n400 | |             \", name)).unwrap();\n    | |____________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n393 ~                 impl ::std::fmt::Debug for {name} {{\n394 |                     #[inline]\n...\n399 |                 }}\n400 ~             \")).unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 19772,
                        "byte_start": 19772,
                        "column_end": 45,
                        "column_start": 45,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 393,
                        "line_start": 393,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 45,
                            "text": "                impl ::std::fmt::Debug for {} {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 20027,
                        "byte_start": 20021,
                        "column_end": 20,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 400,
                        "line_start": 400,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 20,
                            "highlight_start": 14,
                            "text": "            \", name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 20028,
                    "byte_start": 19711,
                    "column_end": 21,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 400,
                    "line_start": 392,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 22,
                        "highlight_start": 6,
                        "text": "    (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "                impl ::std::fmt::Debug for {} {{"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                    #[inline]"
                      },
                      {
                        "highlight_end": 98,
                        "highlight_start": 1,
                        "text": "                    fn fmt(&self, f: &mut ::std::fmt::Formatter) -> Result<(), ::std::fmt::Error>"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    {{"
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "                        self.0.fmt(f)"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    }}"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 21,
                        "highlight_start": 1,
                        "text": "            \", name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:403:6\n    |\n403 |       (writeln!(dest, \"\n    |  ______^\n404 | |                 impl ::std::ops::Deref for {} {{\n405 | |                     type Target = TextureAny;\n...   |\n411 | |                 }}\n412 | |             \", name)).unwrap();\n    | |____________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n404 ~                 impl ::std::ops::Deref for {name} {{\n405 |                     type Target = TextureAny;\n...\n411 |                 }}\n412 ~             \")).unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20143,
                        "byte_start": 20143,
                        "column_end": 45,
                        "column_start": 45,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 404,
                        "line_start": 404,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 45,
                            "text": "                impl ::std::ops::Deref for {} {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 20382,
                        "byte_start": 20376,
                        "column_end": 20,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 412,
                        "line_start": 412,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 20,
                            "highlight_start": 14,
                            "text": "            \", name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 20383,
                    "byte_start": 20082,
                    "column_end": 21,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 412,
                    "line_start": 403,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 22,
                        "highlight_start": 6,
                        "text": "    (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "                impl ::std::ops::Deref for {} {{"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                    type Target = TextureAny;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                    #[inline]"
                      },
                      {
                        "highlight_end": 64,
                        "highlight_start": 1,
                        "text": "                    fn deref<'a>(&'a self) -> &'a TextureAny {{"
                      },
                      {
                        "highlight_end": 32,
                        "highlight_start": 1,
                        "text": "                        &self.0"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    }}"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 21,
                        "highlight_start": 1,
                        "text": "            \", name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:420:18\n    |\n420 |                   (writeln!(dest, \"\n    |  __________________^\n421 | |                             impl<'a> AsUniformValue for &'a {myname} {{\n422 | |                                 #[inline]\n423 | |                                 fn as_uniform_value(&self) -> UniformValue {{\n...   |\n460 | |                             }}\n461 | |                         \", myname = name)).unwrap();\n    | |_________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n421 ~                             impl<'a> AsUniformValue for &'a {name} {{\n422 |                                 #[inline]\n423 |                                 fn as_uniform_value(&self) -> UniformValue {{\n424 ~                                     UniformValue::{name}(*self, None)\n425 |                                 }}\n426 |                             }}\n427 |\n428 ~                             impl AsUniformValue for {name} {{\n429 |                                 #[inline]\n430 |                                 fn as_uniform_value(&self) -> UniformValue {{\n431 ~                                     UniformValue::{name}(self, None)\n432 |                                 }}\n433 |                             }}\n434 |\n435 ~                             impl<'a> AsUniformValue for Sampler<'a, {name}> {{\n436 |                                 #[inline]\n437 |                                 fn as_uniform_value(&self) -> UniformValue {{\n438 ~                                     UniformValue::{name}(self.0, Some(self.1))\n439 |                                 }}\n440 |                             }}\n441 |\n442 ~                             impl {name} {{\n443 |                                 /// Builds a `Sampler` marker object that allows you to indicate\n...\n456 |                                 #[inline]\n457 ~                                 pub fn sampled(&self) -> Sampler<{name}> {{\n458 |                                     Sampler(self, Default::default())\n459 |                                 }}\n460 |                             }}\n461 ~                         \")).unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20775,
                        "byte_start": 20769,
                        "column_end": 68,
                        "column_start": 62,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 421,
                        "line_start": 421,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 68,
                            "highlight_start": 62,
                            "text": "                            impl<'a> AsUniformValue for &'a {myname} {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 20957,
                        "byte_start": 20951,
                        "column_end": 58,
                        "column_start": 52,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 424,
                        "line_start": 424,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 52,
                            "text": "                                    UniformValue::{myname}(*self, None)"
                          }
                        ]
                      },
                      {
                        "byte_end": 21098,
                        "byte_start": 21092,
                        "column_end": 60,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 428,
                        "line_start": 428,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 60,
                            "highlight_start": 54,
                            "text": "                            impl AsUniformValue for {myname} {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 21280,
                        "byte_start": 21274,
                        "column_end": 58,
                        "column_start": 52,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 431,
                        "line_start": 431,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 52,
                            "text": "                                    UniformValue::{myname}(self, None)"
                          }
                        ]
                      },
                      {
                        "byte_end": 21436,
                        "byte_start": 21430,
                        "column_end": 76,
                        "column_start": 70,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 435,
                        "line_start": 435,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 76,
                            "highlight_start": 70,
                            "text": "                            impl<'a> AsUniformValue for Sampler<'a, {myname}> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 21619,
                        "byte_start": 21613,
                        "column_end": 58,
                        "column_start": 52,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 438,
                        "line_start": 438,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 52,
                            "text": "                                    UniformValue::{myname}(self.0, Some(self.1))"
                          }
                        ]
                      },
                      {
                        "byte_end": 21750,
                        "byte_start": 21744,
                        "column_end": 41,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 442,
                        "line_start": 442,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 35,
                            "text": "                            impl {myname} {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 22701,
                        "byte_start": 22695,
                        "column_end": 73,
                        "column_start": 67,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 457,
                        "line_start": 457,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 73,
                            "highlight_start": 67,
                            "text": "                                pub fn sampled(&self) -> Sampler<{myname}> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 22883,
                        "byte_start": 22868,
                        "column_end": 41,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 461,
                        "line_start": 461,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 26,
                            "text": "                        \", myname = name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 22884,
                    "byte_start": 20691,
                    "column_end": 42,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 461,
                    "line_start": 420,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 18,
                        "text": "                (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 72,
                        "highlight_start": 1,
                        "text": "                            impl<'a> AsUniformValue for &'a {myname} {{"
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                                #[inline]"
                      },
                      {
                        "highlight_end": 78,
                        "highlight_start": 1,
                        "text": "                                fn as_uniform_value(&self) -> UniformValue {{"
                      },
                      {
                        "highlight_end": 72,
                        "highlight_start": 1,
                        "text": "                                    UniformValue::{myname}(*self, None)"
                      },
                      {
                        "highlight_end": 35,
                        "highlight_start": 1,
                        "text": "                                }}"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                            }}"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 64,
                        "highlight_start": 1,
                        "text": "                            impl AsUniformValue for {myname} {{"
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                                #[inline]"
                      },
                      {
                        "highlight_end": 78,
                        "highlight_start": 1,
                        "text": "                                fn as_uniform_value(&self) -> UniformValue {{"
                      },
                      {
                        "highlight_end": 71,
                        "highlight_start": 1,
                        "text": "                                    UniformValue::{myname}(self, None)"
                      },
                      {
                        "highlight_end": 35,
                        "highlight_start": 1,
                        "text": "                                }}"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                            }}"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 81,
                        "highlight_start": 1,
                        "text": "                            impl<'a> AsUniformValue for Sampler<'a, {myname}> {{"
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                                #[inline]"
                      },
                      {
                        "highlight_end": 78,
                        "highlight_start": 1,
                        "text": "                                fn as_uniform_value(&self) -> UniformValue {{"
                      },
                      {
                        "highlight_end": 81,
                        "highlight_start": 1,
                        "text": "                                    UniformValue::{myname}(self.0, Some(self.1))"
                      },
                      {
                        "highlight_end": 35,
                        "highlight_start": 1,
                        "text": "                                }}"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                            }}"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                            impl {myname} {{"
                      },
                      {
                        "highlight_end": 97,
                        "highlight_start": 1,
                        "text": "                                /// Builds a `Sampler` marker object that allows you to indicate"
                      },
                      {
                        "highlight_end": 92,
                        "highlight_start": 1,
                        "text": "                                /// how the texture should be sampled from inside a shader."
                      },
                      {
                        "highlight_end": 36,
                        "highlight_start": 1,
                        "text": "                                ///"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                                /// # Example"
                      },
                      {
                        "highlight_end": 36,
                        "highlight_start": 1,
                        "text": "                                ///"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                                /// ```no_run"
                      },
                      {
                        "highlight_end": 71,
                        "highlight_start": 1,
                        "text": "                                /// # #[macro_use] extern crate glium;"
                      },
                      {
                        "highlight_end": 88,
                        "highlight_start": 1,
                        "text": "                                /// # fn example(texture: glium::texture::Texture2d) {{"
                      },
                      {
                        "highlight_end": 63,
                        "highlight_start": 1,
                        "text": "                                /// let uniforms = uniform! {{"
                      },
                      {
                        "highlight_end": 136,
                        "highlight_start": 1,
                        "text": "                                ///     color_texture: texture.sampled().magnify_filter(glium::uniforms::MagnifySamplerFilter::Nearest)"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "                                /// }};"
                      },
                      {
                        "highlight_end": 41,
                        "highlight_start": 1,
                        "text": "                                /// # }}"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "                                /// ```"
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                                #[inline]"
                      },
                      {
                        "highlight_end": 78,
                        "highlight_start": 1,
                        "text": "                                pub fn sampled(&self) -> Sampler<{myname}> {{"
                      },
                      {
                        "highlight_end": 70,
                        "highlight_start": 1,
                        "text": "                                    Sampler(self, Default::default())"
                      },
                      {
                        "highlight_end": 35,
                        "highlight_start": 1,
                        "text": "                                }}"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                            }}"
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                        \", myname = name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:471:9\n    |\n471 | /         writeln!(dest, \"\n472 | |                     impl<'a> AsUniformValue for ImageUnit<'a, {myname}> {{\n473 | |                         #[inline]\n474 | |                         fn as_uniform_value(&self) -> UniformValue  {{\n...   |\n486 | |                     }}\n487 | |                 \", myname = name, valname = image_variant).unwrap();\n    | |__________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n472 ~                     impl<'a> AsUniformValue for ImageUnit<'a, {name}> {{\n473 |                         #[inline]\n474 |                         fn as_uniform_value(&self) -> UniformValue  {{\n475 ~                             UniformValue::{image_variant}(self.0, Some(self.1))\n476 |                         }}\n477 |                     }}\n478 |\n479 ~                     impl {name} {{\n480 |                         /// Builds an image unit marker object that allows you to indicate how the\n481 |                         /// texture should be bound to an image unit.\n482 |                         #[inline]\n483 ~                         pub fn image_unit(&self, format: ImageUnitFormat) -> Result<ImageUnit<{name}>, ImageUnitError> {{\n484 |                              ImageUnit::new(self, format)\n485 |                         }}\n486 |                     }}\n487 ~                 \").unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 23411,
                        "byte_start": 23405,
                        "column_end": 70,
                        "column_start": 64,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 472,
                        "line_start": 472,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 70,
                            "highlight_start": 64,
                            "text": "                    impl<'a> AsUniformValue for ImageUnit<'a, {myname}> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 23572,
                        "byte_start": 23565,
                        "column_end": 51,
                        "column_start": 44,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 475,
                        "line_start": 475,
                        "suggested_replacement": "image_variant",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 44,
                            "text": "                            UniformValue::{valname}(self.0, Some(self.1))"
                          }
                        ]
                      },
                      {
                        "byte_end": 23679,
                        "byte_start": 23673,
                        "column_end": 33,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 479,
                        "line_start": 479,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 27,
                            "text": "                    impl {myname} {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 23988,
                        "byte_start": 23982,
                        "column_end": 102,
                        "column_start": 96,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 483,
                        "line_start": 483,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 102,
                            "highlight_start": 96,
                            "text": "                        pub fn image_unit(&self, format: ImageUnitFormat) -> Result<ImageUnit<{myname}>, ImageUnitError> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 24151,
                        "byte_start": 24136,
                        "column_end": 33,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 487,
                        "line_start": 487,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 18,
                            "text": "                \", myname = name, valname = image_variant).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 24176,
                        "byte_start": 24151,
                        "column_end": 58,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 487,
                        "line_start": 487,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 33,
                            "text": "                \", myname = name, valname = image_variant).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 24177,
                    "byte_start": 23325,
                    "column_end": 59,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 487,
                    "line_start": 471,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 9,
                        "text": "        writeln!(dest, \""
                      },
                      {
                        "highlight_end": 75,
                        "highlight_start": 1,
                        "text": "                    impl<'a> AsUniformValue for ImageUnit<'a, {myname}> {{"
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "                        #[inline]"
                      },
                      {
                        "highlight_end": 71,
                        "highlight_start": 1,
                        "text": "                        fn as_uniform_value(&self) -> UniformValue  {{"
                      },
                      {
                        "highlight_end": 74,
                        "highlight_start": 1,
                        "text": "                            UniformValue::{valname}(self.0, Some(self.1))"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                        }}"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    }}"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 37,
                        "highlight_start": 1,
                        "text": "                    impl {myname} {{"
                      },
                      {
                        "highlight_end": 99,
                        "highlight_start": 1,
                        "text": "                        /// Builds an image unit marker object that allows you to indicate how the"
                      },
                      {
                        "highlight_end": 70,
                        "highlight_start": 1,
                        "text": "                        /// texture should be bound to an image unit."
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "                        #[inline]"
                      },
                      {
                        "highlight_end": 124,
                        "highlight_start": 1,
                        "text": "                        pub fn image_unit(&self, format: ImageUnitFormat) -> Result<ImageUnit<{myname}>, ImageUnitError> {{"
                      },
                      {
                        "highlight_end": 58,
                        "highlight_start": 1,
                        "text": "                             ImageUnit::new(self, format)"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                        }}"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    }}"
                      },
                      {
                        "highlight_end": 59,
                        "highlight_start": 1,
                        "text": "                \", myname = name, valname = image_variant).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:496:18\n    |\n496 |                   (writeln!(dest, \"\n    |  __________________^\n497 | |                         impl<'t> crate::framebuffer::ToColorAttachment<'t> for &'t {name} {{\n498 | |                             #[inline]\n499 | |                             fn to_color_attachment(self) -> crate::framebuffer::ColorAttachment<'t> {{\n...   |\n502 | |                         }}\n503 | |                     \", name = name)).unwrap();\n    | |___________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n497 |                         impl<'t> crate::framebuffer::ToColorAttachment<'t> for &'t {name} {{\n...\n502 |                         }}\n503 ~                     \")).unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 24644,
                        "byte_start": 24640,
                        "column_end": 89,
                        "column_start": 85,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 497,
                        "line_start": 497,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 89,
                            "highlight_start": 85,
                            "text": "                        impl<'t> crate::framebuffer::ToColorAttachment<'t> for &'t {name} {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 25020,
                        "byte_start": 25007,
                        "column_end": 35,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 503,
                        "line_start": 503,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 22,
                            "text": "                    \", name = name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 25021,
                    "byte_start": 24539,
                    "column_end": 36,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 503,
                    "line_start": 496,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 18,
                        "text": "                (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 93,
                        "highlight_start": 1,
                        "text": "                        impl<'t> crate::framebuffer::ToColorAttachment<'t> for &'t {name} {{"
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "                            #[inline]"
                      },
                      {
                        "highlight_end": 103,
                        "highlight_start": 1,
                        "text": "                            fn to_color_attachment(self) -> crate::framebuffer::ColorAttachment<'t> {{"
                      },
                      {
                        "highlight_end": 138,
                        "highlight_start": 1,
                        "text": "                                crate::framebuffer::ColorAttachment::Texture(self.0.main_level().first_layer().into_image(None).unwrap())"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                            }}"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                        }}"
                      },
                      {
                        "highlight_end": 36,
                        "highlight_start": 1,
                        "text": "                    \", name = name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:506:18\n    |\n506 |                   (writeln!(dest, \"\n    |  __________________^\n507 | |                         impl<'t> crate::framebuffer::ToDepthAttachment<'t> for &'t {name} {{\n508 | |                             #[inline]\n509 | |                             fn to_depth_attachment(self) -> crate::framebuffer::DepthAttachment<'t> {{\n...   |\n512 | |                         }}\n513 | |                     \", name = name)).unwrap();\n    | |___________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n507 |                         impl<'t> crate::framebuffer::ToDepthAttachment<'t> for &'t {name} {{\n...\n512 |                         }}\n513 ~                     \")).unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 25206,
                        "byte_start": 25202,
                        "column_end": 89,
                        "column_start": 85,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 507,
                        "line_start": 507,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 89,
                            "highlight_start": 85,
                            "text": "                        impl<'t> crate::framebuffer::ToDepthAttachment<'t> for &'t {name} {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 25582,
                        "byte_start": 25569,
                        "column_end": 35,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 513,
                        "line_start": 513,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 22,
                            "text": "                    \", name = name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 25583,
                    "byte_start": 25101,
                    "column_end": 36,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 513,
                    "line_start": 506,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 18,
                        "text": "                (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 93,
                        "highlight_start": 1,
                        "text": "                        impl<'t> crate::framebuffer::ToDepthAttachment<'t> for &'t {name} {{"
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "                            #[inline]"
                      },
                      {
                        "highlight_end": 103,
                        "highlight_start": 1,
                        "text": "                            fn to_depth_attachment(self) -> crate::framebuffer::DepthAttachment<'t> {{"
                      },
                      {
                        "highlight_end": 138,
                        "highlight_start": 1,
                        "text": "                                crate::framebuffer::DepthAttachment::Texture(self.0.main_level().first_layer().into_image(None).unwrap())"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                            }}"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                        }}"
                      },
                      {
                        "highlight_end": 36,
                        "highlight_start": 1,
                        "text": "                    \", name = name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:516:18\n    |\n516 |                   (writeln!(dest, \"\n    |  __________________^\n517 | |                         impl<'t> crate::framebuffer::ToStencilAttachment<'t> for &'t {name} {{\n518 | |                             #[inline]\n519 | |                             fn to_stencil_attachment(self) -> crate::framebuffer::StencilAttachment<'t> {{\n...   |\n522 | |                         }}\n523 | |                     \", name = name)).unwrap();\n    | |___________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n517 |                         impl<'t> crate::framebuffer::ToStencilAttachment<'t> for &'t {name} {{\n...\n522 |                         }}\n523 ~                     \")).unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 25772,
                        "byte_start": 25768,
                        "column_end": 91,
                        "column_start": 87,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 517,
                        "line_start": 517,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 91,
                            "highlight_start": 87,
                            "text": "                        impl<'t> crate::framebuffer::ToStencilAttachment<'t> for &'t {name} {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 26154,
                        "byte_start": 26141,
                        "column_end": 35,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 523,
                        "line_start": 523,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 22,
                            "text": "                    \", name = name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 26155,
                    "byte_start": 25665,
                    "column_end": 36,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 523,
                    "line_start": 516,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 18,
                        "text": "                (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 95,
                        "highlight_start": 1,
                        "text": "                        impl<'t> crate::framebuffer::ToStencilAttachment<'t> for &'t {name} {{"
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "                            #[inline]"
                      },
                      {
                        "highlight_end": 107,
                        "highlight_start": 1,
                        "text": "                            fn to_stencil_attachment(self) -> crate::framebuffer::StencilAttachment<'t> {{"
                      },
                      {
                        "highlight_end": 140,
                        "highlight_start": 1,
                        "text": "                                crate::framebuffer::StencilAttachment::Texture(self.0.main_level().first_layer().into_image(None).unwrap())"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                            }}"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                        }}"
                      },
                      {
                        "highlight_end": 36,
                        "highlight_start": 1,
                        "text": "                    \", name = name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:526:18\n    |\n526 |                   (writeln!(dest, \"\n    |  __________________^\n527 | |                         impl<'t> crate::framebuffer::ToDepthStencilAttachment<'t> for &'t {name} {{\n528 | |                             #[inline]\n529 | |                             fn to_depth_stencil_attachment(self) -> crate::framebuffer::DepthStencilAttachment<'t> {{\n...   |\n532 | |                         }}\n533 | |                     \", name = name)).unwrap();\n    | |___________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n527 |                         impl<'t> crate::framebuffer::ToDepthStencilAttachment<'t> for &'t {name} {{\n...\n532 |                         }}\n533 ~                     \")).unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 26354,
                        "byte_start": 26350,
                        "column_end": 96,
                        "column_start": 92,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 527,
                        "line_start": 527,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 96,
                            "highlight_start": 92,
                            "text": "                        impl<'t> crate::framebuffer::ToDepthStencilAttachment<'t> for &'t {name} {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 26752,
                        "byte_start": 26739,
                        "column_end": 35,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 533,
                        "line_start": 533,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 22,
                            "text": "                    \", name = name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 26753,
                    "byte_start": 26242,
                    "column_end": 36,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 533,
                    "line_start": 526,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 18,
                        "text": "                (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 100,
                        "highlight_start": 1,
                        "text": "                        impl<'t> crate::framebuffer::ToDepthStencilAttachment<'t> for &'t {name} {{"
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "                            #[inline]"
                      },
                      {
                        "highlight_end": 118,
                        "highlight_start": 1,
                        "text": "                            fn to_depth_stencil_attachment(self) -> crate::framebuffer::DepthStencilAttachment<'t> {{"
                      },
                      {
                        "highlight_end": 145,
                        "highlight_start": 1,
                        "text": "                                crate::framebuffer::DepthStencilAttachment::Texture(self.0.main_level().first_layer().into_image(None).unwrap())"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                            }}"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                        }}"
                      },
                      {
                        "highlight_end": 36,
                        "highlight_start": 1,
                        "text": "                    \", name = name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:540:6\n    |\n540 |     (writeln!(dest, \"impl {} {{\", name)).unwrap();\n    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n540 -     (writeln!(dest, \"impl {} {{\", name)).unwrap();\n540 +     (writeln!(dest, \"impl {name} {{\")).unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 26880,
                        "byte_start": 26880,
                        "column_end": 28,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 540,
                        "line_start": 540,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 28,
                            "text": "    (writeln!(dest, \"impl {} {{\", name)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 26891,
                        "byte_start": 26885,
                        "column_end": 39,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 540,
                        "line_start": 540,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 33,
                            "text": "    (writeln!(dest, \"impl {} {{\", name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 26892,
                    "byte_start": 26858,
                    "column_end": 40,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 540,
                    "line_start": 540,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 6,
                        "text": "    (writeln!(dest, \"impl {} {{\", name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:572:10\n    |\n572 |           (writeln!(dest, \"\n    |  __________^\n573 | |                 /// Builds a new texture by uploading data.\n574 | |                 ///\n575 | |                 {gen_doc}\n...   |\n583 | |             \", data_source_trait = data_source_trait, param = param, name = name,\n584 | |                mipmap_default = mipmap_default, gen_doc = gen_doc)).unwrap();\n    | |__________________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 28157,
                        "byte_start": 28150,
                        "column_end": 25,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 575,
                        "line_start": 575,
                        "suggested_replacement": "gen_doc",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 25,
                            "highlight_start": 18,
                            "text": "                {gen_doc}"
                          }
                        ]
                      },
                      {
                        "byte_end": 28254,
                        "byte_start": 28249,
                        "column_end": 70,
                        "column_start": 65,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 577,
                        "line_start": 577,
                        "suggested_replacement": "param",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 70,
                            "highlight_start": 65,
                            "text": "                pub fn new<'a, F: ?Sized, T>(facade: &F, data: {param})"
                          }
                        ]
                      },
                      {
                        "byte_end": 28302,
                        "byte_start": 28298,
                        "column_end": 46,
                        "column_start": 42,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 578,
                        "line_start": 578,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 42,
                            "text": "                              -> Result<{name}, TextureCreationError>"
                          }
                        ]
                      },
                      {
                        "byte_end": 28384,
                        "byte_start": 28367,
                        "column_end": 58,
                        "column_start": 41,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 579,
                        "line_start": 579,
                        "suggested_replacement": "data_source_trait",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 41,
                            "text": "                              where T: {data_source_trait}<'a>, F: Facade"
                          }
                        ]
                      },
                      {
                        "byte_end": 28445,
                        "byte_start": 28441,
                        "column_end": 26,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 581,
                        "line_start": 581,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 22,
                            "text": "                    {name}::new_impl(facade, data, None, {mipmap_default})"
                          }
                        ]
                      },
                      {
                        "byte_end": 28492,
                        "byte_start": 28478,
                        "column_end": 73,
                        "column_start": 59,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 581,
                        "line_start": 581,
                        "suggested_replacement": "mipmap_default",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 73,
                            "highlight_start": 59,
                            "text": "                    {name}::new_impl(facade, data, None, {mipmap_default})"
                          }
                        ]
                      },
                      {
                        "byte_end": 28566,
                        "byte_start": 28527,
                        "column_end": 53,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 583,
                        "line_start": 583,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 14,
                            "text": "            \", data_source_trait = data_source_trait, param = param, name = name,"
                          }
                        ]
                      },
                      {
                        "byte_end": 28581,
                        "byte_start": 28566,
                        "column_end": 68,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 583,
                        "line_start": 583,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 68,
                            "highlight_start": 53,
                            "text": "            \", data_source_trait = data_source_trait, param = param, name = name,"
                          }
                        ]
                      },
                      {
                        "byte_end": 28594,
                        "byte_start": 28581,
                        "column_end": 81,
                        "column_start": 68,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 583,
                        "line_start": 583,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 81,
                            "highlight_start": 68,
                            "text": "            \", data_source_trait = data_source_trait, param = param, name = name,"
                          }
                        ]
                      },
                      {
                        "byte_end": 28642,
                        "byte_start": 28594,
                        "column_end": 47,
                        "column_start": 81,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 584,
                        "line_start": 583,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 82,
                            "highlight_start": 81,
                            "text": "            \", data_source_trait = data_source_trait, param = param, name = name,"
                          },
                          {
                            "highlight_end": 47,
                            "highlight_start": 1,
                            "text": "               mipmap_default = mipmap_default, gen_doc = gen_doc)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 28661,
                        "byte_start": 28642,
                        "column_end": 66,
                        "column_start": 47,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 584,
                        "line_start": 584,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 66,
                            "highlight_start": 47,
                            "text": "               mipmap_default = mipmap_default, gen_doc = gen_doc)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 28662,
                    "byte_start": 28036,
                    "column_end": 67,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 584,
                    "line_start": 572,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 10,
                        "text": "        (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "                /// Builds a new texture by uploading data."
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "                ///"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                {gen_doc}"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                #[inline]"
                      },
                      {
                        "highlight_end": 72,
                        "highlight_start": 1,
                        "text": "                pub fn new<'a, F: ?Sized, T>(facade: &F, data: {param})"
                      },
                      {
                        "highlight_end": 70,
                        "highlight_start": 1,
                        "text": "                              -> Result<{name}, TextureCreationError>"
                      },
                      {
                        "highlight_end": 74,
                        "highlight_start": 1,
                        "text": "                              where T: {data_source_trait}<'a>, F: Facade"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                {{"
                      },
                      {
                        "highlight_end": 75,
                        "highlight_start": 1,
                        "text": "                    {name}::new_impl(facade, data, None, {mipmap_default})"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 82,
                        "highlight_start": 1,
                        "text": "            \", data_source_trait = data_source_trait, param = param, name = name,"
                      },
                      {
                        "highlight_end": 67,
                        "highlight_start": 1,
                        "text": "               mipmap_default = mipmap_default, gen_doc = gen_doc)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:599:10\n    |\n599 |           (writeln!(dest, \"\n    |  __________^\n600 | |                 /// Builds a new texture by uploading data.\n601 | |                 #[inline]\n602 | |                 pub fn with_mipmaps<'a, F: ?Sized, T>(facade: &F, data: {param}, mipmaps: {mipmaps})\n...   |\n608 | |             \", data_source_trait = data_source_trait, param = param, name = name,\n609 | |                mipmaps = mipmaps_option_ty)).unwrap();\n    | |___________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 29292,
                        "byte_start": 29287,
                        "column_end": 79,
                        "column_start": 74,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 602,
                        "line_start": 602,
                        "suggested_replacement": "param",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 79,
                            "highlight_start": 74,
                            "text": "                pub fn with_mipmaps<'a, F: ?Sized, T>(facade: &F, data: {param}, mipmaps: {mipmaps})"
                          }
                        ]
                      },
                      {
                        "byte_end": 29312,
                        "byte_start": 29305,
                        "column_end": 99,
                        "column_start": 92,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 602,
                        "line_start": 602,
                        "suggested_replacement": "mipmaps_option_ty",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 99,
                            "highlight_start": 92,
                            "text": "                pub fn with_mipmaps<'a, F: ?Sized, T>(facade: &F, data: {param}, mipmaps: {mipmaps})"
                          }
                        ]
                      },
                      {
                        "byte_end": 29376,
                        "byte_start": 29372,
                        "column_end": 62,
                        "column_start": 58,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 603,
                        "line_start": 603,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 62,
                            "highlight_start": 58,
                            "text": "                                              -> Result<{name}, TextureCreationError>"
                          }
                        ]
                      },
                      {
                        "byte_end": 29474,
                        "byte_start": 29457,
                        "column_end": 74,
                        "column_start": 57,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 604,
                        "line_start": 604,
                        "suggested_replacement": "data_source_trait",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 74,
                            "highlight_start": 57,
                            "text": "                                              where T: {data_source_trait}<'a>, F: Facade"
                          }
                        ]
                      },
                      {
                        "byte_end": 29535,
                        "byte_start": 29531,
                        "column_end": 26,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 606,
                        "line_start": 606,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 22,
                            "text": "                    {name}::new_impl(facade, data, None, mipmaps)"
                          }
                        ]
                      },
                      {
                        "byte_end": 29647,
                        "byte_start": 29608,
                        "column_end": 53,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 608,
                        "line_start": 608,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 14,
                            "text": "            \", data_source_trait = data_source_trait, param = param, name = name,"
                          }
                        ]
                      },
                      {
                        "byte_end": 29662,
                        "byte_start": 29647,
                        "column_end": 68,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 608,
                        "line_start": 608,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 68,
                            "highlight_start": 53,
                            "text": "            \", data_source_trait = data_source_trait, param = param, name = name,"
                          }
                        ]
                      },
                      {
                        "byte_end": 29675,
                        "byte_start": 29662,
                        "column_end": 81,
                        "column_start": 68,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 608,
                        "line_start": 608,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 81,
                            "highlight_start": 68,
                            "text": "            \", data_source_trait = data_source_trait, param = param, name = name,"
                          }
                        ]
                      },
                      {
                        "byte_end": 29719,
                        "byte_start": 29675,
                        "column_end": 43,
                        "column_start": 81,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 609,
                        "line_start": 608,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 82,
                            "highlight_start": 81,
                            "text": "            \", data_source_trait = data_source_trait, param = param, name = name,"
                          },
                          {
                            "highlight_end": 43,
                            "highlight_start": 1,
                            "text": "               mipmaps = mipmaps_option_ty)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 29720,
                    "byte_start": 29111,
                    "column_end": 44,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 609,
                    "line_start": 599,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 10,
                        "text": "        (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "                /// Builds a new texture by uploading data."
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                #[inline]"
                      },
                      {
                        "highlight_end": 101,
                        "highlight_start": 1,
                        "text": "                pub fn with_mipmaps<'a, F: ?Sized, T>(facade: &F, data: {param}, mipmaps: {mipmaps})"
                      },
                      {
                        "highlight_end": 86,
                        "highlight_start": 1,
                        "text": "                                              -> Result<{name}, TextureCreationError>"
                      },
                      {
                        "highlight_end": 90,
                        "highlight_start": 1,
                        "text": "                                              where T: {data_source_trait}<'a>, F: Facade"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                {{"
                      },
                      {
                        "highlight_end": 66,
                        "highlight_start": 1,
                        "text": "                    {name}::new_impl(facade, data, None, mipmaps)"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 82,
                        "highlight_start": 1,
                        "text": "            \", data_source_trait = data_source_trait, param = param, name = name,"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "               mipmaps = mipmaps_option_ty)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:624:10\n    |\n624 |           (writeln!(dest, \"\n    |  __________^\n625 | |                 /// Builds a new texture with a specific format. The input data must also be of the\n626 | |                 /// specified compressed format.\n627 | |                 #[inline]\n...   |\n640 | |                name = name, format = relevant_format, default_format = default_format,\n641 | |                mipmaps = mipmaps_option_ty).unwrap());\n    | |___________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 30473,
                        "byte_start": 30468,
                        "column_end": 80,
                        "column_start": 75,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 628,
                        "line_start": 628,
                        "suggested_replacement": "param",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 80,
                            "highlight_start": 75,
                            "text": "                pub fn with_compressed_data<F: ?Sized>(facade: &F, data: {param}, {dim_params},"
                          }
                        ]
                      },
                      {
                        "byte_end": 30487,
                        "byte_start": 30477,
                        "column_end": 94,
                        "column_start": 84,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 628,
                        "line_start": 628,
                        "suggested_replacement": "dimensions_parameters_input",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 94,
                            "highlight_start": 84,
                            "text": "                pub fn with_compressed_data<F: ?Sized>(facade: &F, data: {param}, {dim_params},"
                          }
                        ]
                      },
                      {
                        "byte_end": 30559,
                        "byte_start": 30553,
                        "column_end": 70,
                        "column_start": 64,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 629,
                        "line_start": 629,
                        "suggested_replacement": "relevant_format",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 70,
                            "highlight_start": 64,
                            "text": "                                                      format: {format}, mipmaps: {mipmaps})"
                          }
                        ]
                      },
                      {
                        "byte_end": 30579,
                        "byte_start": 30572,
                        "column_end": 90,
                        "column_start": 83,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 629,
                        "line_start": 629,
                        "suggested_replacement": "mipmaps_option_ty",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 90,
                            "highlight_start": 83,
                            "text": "                                                      format: {format}, mipmaps: {mipmaps})"
                          }
                        ]
                      },
                      {
                        "byte_end": 30651,
                        "byte_start": 30647,
                        "column_end": 70,
                        "column_start": 66,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 630,
                        "line_start": 630,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 70,
                            "highlight_start": 66,
                            "text": "                                                      -> Result<{name}, TextureCreationError>"
                          }
                        ]
                      },
                      {
                        "byte_end": 30885,
                        "byte_start": 30868,
                        "column_end": 59,
                        "column_start": 42,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 634,
                        "line_start": 634,
                        "suggested_replacement": "client_format_any_ty",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 42,
                            "text": "                    let client_format = {client_format_any}(format);"
                          }
                        ]
                      },
                      {
                        "byte_end": 30924,
                        "byte_start": 30920,
                        "column_end": 29,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 635,
                        "line_start": 635,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 25,
                            "text": "                    Ok({name}(any::new_texture(facade, {default_format}, Some((client_format, data)),"
                          }
                        ]
                      },
                      {
                        "byte_end": 30966,
                        "byte_start": 30952,
                        "column_end": 71,
                        "column_start": 57,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 635,
                        "line_start": 635,
                        "suggested_replacement": "default_format",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 71,
                            "highlight_start": 57,
                            "text": "                    Ok({name}(any::new_texture(facade, {default_format}, Some((client_format, data)),"
                          }
                        ]
                      },
                      {
                        "byte_end": 31085,
                        "byte_start": 31067,
                        "column_end": 88,
                        "column_start": 70,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 636,
                        "line_start": 636,
                        "suggested_replacement": "dimensions_parameters_passing",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 88,
                            "highlight_start": 70,
                            "text": "                                                    mipmaps.into(), {dim_params_passing})?))"
                          }
                        ]
                      },
                      {
                        "byte_end": 31165,
                        "byte_start": 31123,
                        "column_end": 56,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 638,
                        "line_start": 638,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 56,
                            "highlight_start": 14,
                            "text": "            \", dim_params = dimensions_parameters_input, dim_params_passing = dimensions_parameters_passing,"
                          }
                        ]
                      },
                      {
                        "byte_end": 31217,
                        "byte_start": 31165,
                        "column_end": 108,
                        "column_start": 56,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 638,
                        "line_start": 638,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 108,
                            "highlight_start": 56,
                            "text": "            \", dim_params = dimensions_parameters_input, dim_params_passing = dimensions_parameters_passing,"
                          }
                        ]
                      },
                      {
                        "byte_end": 31247,
                        "byte_start": 31217,
                        "column_end": 29,
                        "column_start": 108,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 639,
                        "line_start": 638,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 109,
                            "highlight_start": 108,
                            "text": "            \", dim_params = dimensions_parameters_input, dim_params_passing = dimensions_parameters_passing,"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "               param = param, client_format_any = client_format_any_ty,"
                          }
                        ]
                      },
                      {
                        "byte_end": 31289,
                        "byte_start": 31247,
                        "column_end": 71,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 639,
                        "line_start": 639,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 71,
                            "highlight_start": 29,
                            "text": "               param = param, client_format_any = client_format_any_ty,"
                          }
                        ]
                      },
                      {
                        "byte_end": 31317,
                        "byte_start": 31289,
                        "column_end": 27,
                        "column_start": 71,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 640,
                        "line_start": 639,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 72,
                            "highlight_start": 71,
                            "text": "               param = param, client_format_any = client_format_any_ty,"
                          },
                          {
                            "highlight_end": 27,
                            "highlight_start": 1,
                            "text": "               name = name, format = relevant_format, default_format = default_format,"
                          }
                        ]
                      },
                      {
                        "byte_end": 31343,
                        "byte_start": 31317,
                        "column_end": 53,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 640,
                        "line_start": 640,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 27,
                            "text": "               name = name, format = relevant_format, default_format = default_format,"
                          }
                        ]
                      },
                      {
                        "byte_end": 31376,
                        "byte_start": 31343,
                        "column_end": 86,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 640,
                        "line_start": 640,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 86,
                            "highlight_start": 53,
                            "text": "               name = name, format = relevant_format, default_format = default_format,"
                          }
                        ]
                      },
                      {
                        "byte_end": 31420,
                        "byte_start": 31376,
                        "column_end": 43,
                        "column_start": 86,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 641,
                        "line_start": 640,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 87,
                            "highlight_start": 86,
                            "text": "               name = name, format = relevant_format, default_format = default_format,"
                          },
                          {
                            "highlight_end": 43,
                            "highlight_start": 1,
                            "text": "               mipmaps = mipmaps_option_ty).unwrap());"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 31421,
                    "byte_start": 30202,
                    "column_end": 44,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 641,
                    "line_start": 624,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 10,
                        "text": "        (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 100,
                        "highlight_start": 1,
                        "text": "                /// Builds a new texture with a specific format. The input data must also be of the"
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "                /// specified compressed format."
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                #[inline]"
                      },
                      {
                        "highlight_end": 96,
                        "highlight_start": 1,
                        "text": "                pub fn with_compressed_data<F: ?Sized>(facade: &F, data: {param}, {dim_params},"
                      },
                      {
                        "highlight_end": 92,
                        "highlight_start": 1,
                        "text": "                                                      format: {format}, mipmaps: {mipmaps})"
                      },
                      {
                        "highlight_end": 94,
                        "highlight_start": 1,
                        "text": "                                                      -> Result<{name}, TextureCreationError>"
                      },
                      {
                        "highlight_end": 71,
                        "highlight_start": 1,
                        "text": "                                                       where F: Facade"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                {{"
                      },
                      {
                        "highlight_end": 61,
                        "highlight_start": 1,
                        "text": "                    let data = Cow::Borrowed(data.as_ref());"
                      },
                      {
                        "highlight_end": 69,
                        "highlight_start": 1,
                        "text": "                    let client_format = {client_format_any}(format);"
                      },
                      {
                        "highlight_end": 102,
                        "highlight_start": 1,
                        "text": "                    Ok({name}(any::new_texture(facade, {default_format}, Some((client_format, data)),"
                      },
                      {
                        "highlight_end": 93,
                        "highlight_start": 1,
                        "text": "                                                    mipmaps.into(), {dim_params_passing})?))"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 109,
                        "highlight_start": 1,
                        "text": "            \", dim_params = dimensions_parameters_input, dim_params_passing = dimensions_parameters_passing,"
                      },
                      {
                        "highlight_end": 72,
                        "highlight_start": 1,
                        "text": "               param = param, client_format_any = client_format_any_ty,"
                      },
                      {
                        "highlight_end": 87,
                        "highlight_start": 1,
                        "text": "               name = name, format = relevant_format, default_format = default_format,"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "               mipmaps = mipmaps_option_ty).unwrap());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:656:10\n    |\n656 |           (writeln!(dest, \"\n    |  __________^\n657 | |                 /// Builds a new texture with a specific format.\n658 | |                 #[inline]\n659 | |                 pub fn with_format<'a, F: ?Sized, T>(facade: &F, data: {param},\n...   |\n667 | |                format = relevant_format, name = name,\n668 | |                mipmaps = mipmaps_option_ty)).unwrap();\n    | |___________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 32054,
                        "byte_start": 32049,
                        "column_end": 78,
                        "column_start": 73,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 659,
                        "line_start": 659,
                        "suggested_replacement": "param",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 78,
                            "highlight_start": 73,
                            "text": "                pub fn with_format<'a, F: ?Sized, T>(facade: &F, data: {param},"
                          }
                        ]
                      },
                      {
                        "byte_end": 32114,
                        "byte_start": 32108,
                        "column_end": 58,
                        "column_start": 52,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 660,
                        "line_start": 660,
                        "suggested_replacement": "relevant_format",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 52,
                            "text": "                                          format: {format}, mipmaps: {mipmaps})"
                          }
                        ]
                      },
                      {
                        "byte_end": 32134,
                        "byte_start": 32127,
                        "column_end": 78,
                        "column_start": 71,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 660,
                        "line_start": 660,
                        "suggested_replacement": "mipmaps_option_ty",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 78,
                            "highlight_start": 71,
                            "text": "                                          format: {format}, mipmaps: {mipmaps})"
                          }
                        ]
                      },
                      {
                        "byte_end": 32194,
                        "byte_start": 32190,
                        "column_end": 58,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 661,
                        "line_start": 661,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 54,
                            "text": "                                          -> Result<{name}, TextureCreationError>"
                          }
                        ]
                      },
                      {
                        "byte_end": 32288,
                        "byte_start": 32271,
                        "column_end": 70,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 662,
                        "line_start": 662,
                        "suggested_replacement": "data_source_trait",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 70,
                            "highlight_start": 53,
                            "text": "                                          where T: {data_source_trait}<'a>, F: Facade"
                          }
                        ]
                      },
                      {
                        "byte_end": 32349,
                        "byte_start": 32345,
                        "column_end": 26,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 664,
                        "line_start": 664,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 22,
                            "text": "                    {name}::new_impl(facade, data, Some(format), mipmaps)"
                          }
                        ]
                      },
                      {
                        "byte_end": 32469,
                        "byte_start": 32430,
                        "column_end": 53,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 666,
                        "line_start": 666,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 14,
                            "text": "            \", data_source_trait = data_source_trait, param = param,"
                          }
                        ]
                      },
                      {
                        "byte_end": 32484,
                        "byte_start": 32469,
                        "column_end": 68,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 666,
                        "line_start": 666,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 68,
                            "highlight_start": 53,
                            "text": "            \", data_source_trait = data_source_trait, param = param,"
                          }
                        ]
                      },
                      {
                        "byte_end": 32525,
                        "byte_start": 32484,
                        "column_end": 40,
                        "column_start": 68,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 667,
                        "line_start": 666,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 69,
                            "highlight_start": 68,
                            "text": "            \", data_source_trait = data_source_trait, param = param,"
                          },
                          {
                            "highlight_end": 40,
                            "highlight_start": 1,
                            "text": "               format = relevant_format, name = name,"
                          }
                        ]
                      },
                      {
                        "byte_end": 32538,
                        "byte_start": 32525,
                        "column_end": 53,
                        "column_start": 40,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 667,
                        "line_start": 667,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 40,
                            "text": "               format = relevant_format, name = name,"
                          }
                        ]
                      },
                      {
                        "byte_end": 32582,
                        "byte_start": 32538,
                        "column_end": 43,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 668,
                        "line_start": 667,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 53,
                            "text": "               format = relevant_format, name = name,"
                          },
                          {
                            "highlight_end": 43,
                            "highlight_start": 1,
                            "text": "               mipmaps = mipmaps_option_ty)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 32583,
                    "byte_start": 31869,
                    "column_end": 44,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 668,
                    "line_start": 656,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 10,
                        "text": "        (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 65,
                        "highlight_start": 1,
                        "text": "                /// Builds a new texture with a specific format."
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                #[inline]"
                      },
                      {
                        "highlight_end": 80,
                        "highlight_start": 1,
                        "text": "                pub fn with_format<'a, F: ?Sized, T>(facade: &F, data: {param},"
                      },
                      {
                        "highlight_end": 80,
                        "highlight_start": 1,
                        "text": "                                          format: {format}, mipmaps: {mipmaps})"
                      },
                      {
                        "highlight_end": 82,
                        "highlight_start": 1,
                        "text": "                                          -> Result<{name}, TextureCreationError>"
                      },
                      {
                        "highlight_end": 86,
                        "highlight_start": 1,
                        "text": "                                          where T: {data_source_trait}<'a>, F: Facade"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                {{"
                      },
                      {
                        "highlight_end": 74,
                        "highlight_start": 1,
                        "text": "                    {name}::new_impl(facade, data, Some(format), mipmaps)"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 69,
                        "highlight_start": 1,
                        "text": "            \", data_source_trait = data_source_trait, param = param,"
                      },
                      {
                        "highlight_end": 54,
                        "highlight_start": 1,
                        "text": "               format = relevant_format, name = name,"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "               mipmaps = mipmaps_option_ty)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:683:10\n    |\n683 |           (writeln!(dest, \"\n    |  __________^\n684 | |                 #[inline]\n685 | |                 fn new_impl<'a, F: ?Sized, T>(facade: &F, data: {param},\n686 | |                                    format: Option<{relevant_format}>, mipmaps: {mipmaps})\n...   |\n692 | |                relevant_format = relevant_format,\n693 | |                mipmaps = mipmaps_option_ty)).unwrap();\n    | |___________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 33141,
                        "byte_start": 33136,
                        "column_end": 71,
                        "column_start": 66,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 685,
                        "line_start": 685,
                        "suggested_replacement": "param",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 71,
                            "highlight_start": 66,
                            "text": "                fn new_impl<'a, F: ?Sized, T>(facade: &F, data: {param},"
                          }
                        ]
                      },
                      {
                        "byte_end": 33210,
                        "byte_start": 33195,
                        "column_end": 67,
                        "column_start": 52,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 686,
                        "line_start": 686,
                        "suggested_replacement": "relevant_format",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 67,
                            "highlight_start": 52,
                            "text": "                                   format: Option<{relevant_format}>, mipmaps: {mipmaps})"
                          }
                        ]
                      },
                      {
                        "byte_end": 33231,
                        "byte_start": 33224,
                        "column_end": 88,
                        "column_start": 81,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 686,
                        "line_start": 686,
                        "suggested_replacement": "mipmaps_option_ty",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 88,
                            "highlight_start": 81,
                            "text": "                                   format: Option<{relevant_format}>, mipmaps: {mipmaps})"
                          }
                        ]
                      },
                      {
                        "byte_end": 33284,
                        "byte_start": 33280,
                        "column_end": 51,
                        "column_start": 47,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 687,
                        "line_start": 687,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 47,
                            "text": "                                   -> Result<{name}, TextureCreationError>"
                          }
                        ]
                      },
                      {
                        "byte_end": 33371,
                        "byte_start": 33354,
                        "column_end": 63,
                        "column_start": 46,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 688,
                        "line_start": 688,
                        "suggested_replacement": "data_source_trait",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 63,
                            "highlight_start": 46,
                            "text": "                                   where T: {data_source_trait}<'a>, F: Facade"
                          }
                        ]
                      },
                      {
                        "byte_end": 33459,
                        "byte_start": 33420,
                        "column_end": 53,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 690,
                        "line_start": 690,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 14,
                            "text": "            \", data_source_trait = data_source_trait,"
                          }
                        ]
                      },
                      {
                        "byte_end": 33489,
                        "byte_start": 33459,
                        "column_end": 29,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 691,
                        "line_start": 690,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 53,
                            "text": "            \", data_source_trait = data_source_trait,"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "               param = param, name = name,"
                          }
                        ]
                      },
                      {
                        "byte_end": 33502,
                        "byte_start": 33489,
                        "column_end": 42,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 691,
                        "line_start": 691,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 29,
                            "text": "               param = param, name = name,"
                          }
                        ]
                      },
                      {
                        "byte_end": 33552,
                        "byte_start": 33502,
                        "column_end": 49,
                        "column_start": 42,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 692,
                        "line_start": 691,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 42,
                            "text": "               param = param, name = name,"
                          },
                          {
                            "highlight_end": 49,
                            "highlight_start": 1,
                            "text": "               relevant_format = relevant_format,"
                          }
                        ]
                      },
                      {
                        "byte_end": 33596,
                        "byte_start": 33552,
                        "column_end": 43,
                        "column_start": 49,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 693,
                        "line_start": 692,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 50,
                            "highlight_start": 49,
                            "text": "               relevant_format = relevant_format,"
                          },
                          {
                            "highlight_end": 43,
                            "highlight_start": 1,
                            "text": "               mipmaps = mipmaps_option_ty)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 33597,
                    "byte_start": 33028,
                    "column_end": 44,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 693,
                    "line_start": 683,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 10,
                        "text": "        (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                #[inline]"
                      },
                      {
                        "highlight_end": 73,
                        "highlight_start": 1,
                        "text": "                fn new_impl<'a, F: ?Sized, T>(facade: &F, data: {param},"
                      },
                      {
                        "highlight_end": 90,
                        "highlight_start": 1,
                        "text": "                                   format: Option<{relevant_format}>, mipmaps: {mipmaps})"
                      },
                      {
                        "highlight_end": 75,
                        "highlight_start": 1,
                        "text": "                                   -> Result<{name}, TextureCreationError>"
                      },
                      {
                        "highlight_end": 79,
                        "highlight_start": 1,
                        "text": "                                   where T: {data_source_trait}<'a>, F: Facade"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                {{"
                      },
                      {
                        "highlight_end": 54,
                        "highlight_start": 1,
                        "text": "            \", data_source_trait = data_source_trait,"
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "               param = param, name = name,"
                      },
                      {
                        "highlight_end": 50,
                        "highlight_start": 1,
                        "text": "               relevant_format = relevant_format,"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "               mipmaps = mipmaps_option_ty)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:696:10\n    |\n696 |           (write!(dest, \"let format = format.map(|f| {{\n    |  __________^\n697 | |                            TextureFormatRequest::Specific(f.to_texture_format())\n698 | |                        }}).unwrap_or({});\", default_format)).unwrap();\n    | |___________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n698 -                        }}).unwrap_or({});\", default_format)).unwrap();\n698 +                        }}).unwrap_or({default_format});\")).unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 33830,
                        "byte_start": 33830,
                        "column_end": 39,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 698,
                        "line_start": 698,
                        "suggested_replacement": "default_format",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 39,
                            "text": "                       }}).unwrap_or({});\", default_format)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 33850,
                        "byte_start": 33834,
                        "column_end": 59,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 698,
                        "line_start": 698,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 43,
                            "text": "                       }}).unwrap_or({});\", default_format)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 33851,
                    "byte_start": 33666,
                    "column_end": 60,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 698,
                    "line_start": 696,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 10,
                        "text": "        (write!(dest, \"let format = format.map(|f| {{"
                      },
                      {
                        "highlight_end": 81,
                        "highlight_start": 1,
                        "text": "                           TextureFormatRequest::Specific(f.to_texture_format())"
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "                       }}).unwrap_or({});\", default_format)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:731:10\n    |\n731 |           (write!(dest, \"Ok({}(any::new_texture(facade, format, \\\n    |  __________^\n732 | |                        Some((client_format, data)), mipmaps.into(), {}\", name, dimensions_parameters_passing)).unwrap();\n    | |_____________________________________________________________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n731 ~         (write!(dest, \"Ok({name}(any::new_texture(facade, format, \\\n732 ~                        Some((client_format, data)), mipmaps.into(), {dimensions_parameters_passing}\")).unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 35501,
                        "byte_start": 35501,
                        "column_end": 28,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 731,
                        "line_start": 731,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 28,
                            "text": "        (write!(dest, \"Ok({}(any::new_texture(facade, format, \\"
                          }
                        ]
                      },
                      {
                        "byte_end": 35607,
                        "byte_start": 35607,
                        "column_end": 70,
                        "column_start": 70,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 732,
                        "line_start": 732,
                        "suggested_replacement": "dimensions_parameters_passing",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 70,
                            "highlight_start": 70,
                            "text": "                       Some((client_format, data)), mipmaps.into(), {}\", name, dimensions_parameters_passing)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 35615,
                        "byte_start": 35609,
                        "column_end": 78,
                        "column_start": 72,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 732,
                        "line_start": 732,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 78,
                            "highlight_start": 72,
                            "text": "                       Some((client_format, data)), mipmaps.into(), {}\", name, dimensions_parameters_passing)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 35646,
                        "byte_start": 35615,
                        "column_end": 109,
                        "column_start": 78,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 732,
                        "line_start": 732,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 109,
                            "highlight_start": 78,
                            "text": "                       Some((client_format, data)), mipmaps.into(), {}\", name, dimensions_parameters_passing)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 35647,
                    "byte_start": 35483,
                    "column_end": 110,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 732,
                    "line_start": 731,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 64,
                        "highlight_start": 10,
                        "text": "        (write!(dest, \"Ok({}(any::new_texture(facade, format, \\"
                      },
                      {
                        "highlight_end": 110,
                        "highlight_start": 1,
                        "text": "                       Some((client_format, data)), mipmaps.into(), {}\", name, dimensions_parameters_passing)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:742:10\n    |\n742 |           (writeln!(dest, \"\n    |  __________^\n743 | |                 /// Creates an empty texture.\n744 | |                 ///\n745 | |                 /// No mipmap level (except for the main level) will be allocated or generated.\n...   |\n754 | |             \", format = default_format, dim_params = dimensions_parameters_input, name = name,\n755 | |                )).unwrap();\n    | |________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n749 ~                 pub fn empty<F: ?Sized>(facade: &F, {dimensions_parameters_input})\n750 |                                 -> Result<{name}, TextureCreationError>\n751 |                                 where F: Facade\n752 |                 {{\n753 ~                     let format = {default_format};\n754 ~             \",\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 36236,
                        "byte_start": 36226,
                        "column_end": 64,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 749,
                        "line_start": 749,
                        "suggested_replacement": "dimensions_parameters_input",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 64,
                            "highlight_start": 54,
                            "text": "                pub fn empty<F: ?Sized>(facade: &F, {dim_params})"
                          }
                        ]
                      },
                      {
                        "byte_end": 36286,
                        "byte_start": 36282,
                        "column_end": 48,
                        "column_start": 44,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 750,
                        "line_start": 750,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 44,
                            "text": "                                -> Result<{name}, TextureCreationError>"
                          }
                        ]
                      },
                      {
                        "byte_end": 36418,
                        "byte_start": 36412,
                        "column_end": 41,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 753,
                        "line_start": 753,
                        "suggested_replacement": "default_format",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 35,
                            "text": "                    let format = {format};"
                          }
                        ]
                      },
                      {
                        "byte_end": 36459,
                        "byte_start": 36434,
                        "column_end": 39,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 754,
                        "line_start": 754,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 14,
                            "text": "            \", format = default_format, dim_params = dimensions_parameters_input, name = name,"
                          }
                        ]
                      },
                      {
                        "byte_end": 36501,
                        "byte_start": 36459,
                        "column_end": 81,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 754,
                        "line_start": 754,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 81,
                            "highlight_start": 39,
                            "text": "            \", format = default_format, dim_params = dimensions_parameters_input, name = name,"
                          }
                        ]
                      },
                      {
                        "byte_end": 36514,
                        "byte_start": 36501,
                        "column_end": 94,
                        "column_start": 81,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 754,
                        "line_start": 754,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 94,
                            "highlight_start": 81,
                            "text": "            \", format = default_format, dim_params = dimensions_parameters_input, name = name,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 36532,
                    "byte_start": 35887,
                    "column_end": 17,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 755,
                    "line_start": 742,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 10,
                        "text": "        (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                /// Creates an empty texture."
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "                ///"
                      },
                      {
                        "highlight_end": 96,
                        "highlight_start": 1,
                        "text": "                /// No mipmap level (except for the main level) will be allocated or generated."
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "                ///"
                      },
                      {
                        "highlight_end": 61,
                        "highlight_start": 1,
                        "text": "                /// The texture will contain undefined data."
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                #[inline]"
                      },
                      {
                        "highlight_end": 66,
                        "highlight_start": 1,
                        "text": "                pub fn empty<F: ?Sized>(facade: &F, {dim_params})"
                      },
                      {
                        "highlight_end": 72,
                        "highlight_start": 1,
                        "text": "                                -> Result<{name}, TextureCreationError>"
                      },
                      {
                        "highlight_end": 48,
                        "highlight_start": 1,
                        "text": "                                where F: Facade"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                {{"
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "                    let format = {format};"
                      },
                      {
                        "highlight_end": 95,
                        "highlight_start": 1,
                        "text": "            \", format = default_format, dim_params = dimensions_parameters_input, name = name,"
                      },
                      {
                        "highlight_end": 17,
                        "highlight_start": 1,
                        "text": "               )).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:758:10\n    |\n758 |           (write!(dest, \"any::new_texture::<_, u8>(facade, format, None, {mipmap}::NoMipmap.into(), {}).map(|t| {}(t))\",\n    |  __________^\n759 | |                 dimensions_parameters_passing, name, mipmap = mipmaps_option_ty)).unwrap();\n    | |________________________________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 36658,
                        "byte_start": 36652,
                        "column_end": 79,
                        "column_start": 73,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 758,
                        "line_start": 758,
                        "suggested_replacement": "mipmaps_option_ty",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 79,
                            "highlight_start": 73,
                            "text": "        (write!(dest, \"any::new_texture::<_, u8>(facade, format, None, {mipmap}::NoMipmap.into(), {}).map(|t| {}(t))\","
                          }
                        ]
                      },
                      {
                        "byte_end": 36679,
                        "byte_start": 36679,
                        "column_end": 100,
                        "column_start": 100,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 758,
                        "line_start": 758,
                        "suggested_replacement": "dimensions_parameters_passing",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 100,
                            "highlight_start": 100,
                            "text": "        (write!(dest, \"any::new_texture::<_, u8>(facade, format, None, {mipmap}::NoMipmap.into(), {}).map(|t| {}(t))\","
                          }
                        ]
                      },
                      {
                        "byte_end": 36691,
                        "byte_start": 36691,
                        "column_end": 112,
                        "column_start": 112,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 758,
                        "line_start": 758,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 112,
                            "highlight_start": 112,
                            "text": "        (write!(dest, \"any::new_texture::<_, u8>(facade, format, None, {mipmap}::NoMipmap.into(), {}).map(|t| {}(t))\","
                          }
                        ]
                      },
                      {
                        "byte_end": 36744,
                        "byte_start": 36697,
                        "column_end": 46,
                        "column_start": 118,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 759,
                        "line_start": 758,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 119,
                            "highlight_start": 118,
                            "text": "        (write!(dest, \"any::new_texture::<_, u8>(facade, format, None, {mipmap}::NoMipmap.into(), {}).map(|t| {}(t))\","
                          },
                          {
                            "highlight_end": 46,
                            "highlight_start": 1,
                            "text": "                dimensions_parameters_passing, name, mipmap = mipmaps_option_ty)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 36750,
                        "byte_start": 36744,
                        "column_end": 52,
                        "column_start": 46,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 759,
                        "line_start": 759,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 52,
                            "highlight_start": 46,
                            "text": "                dimensions_parameters_passing, name, mipmap = mipmaps_option_ty)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 36778,
                        "byte_start": 36750,
                        "column_end": 80,
                        "column_start": 52,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 759,
                        "line_start": 759,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 80,
                            "highlight_start": 52,
                            "text": "                dimensions_parameters_passing, name, mipmap = mipmaps_option_ty)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 36779,
                    "byte_start": 36589,
                    "column_end": 81,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 759,
                    "line_start": 758,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 119,
                        "highlight_start": 10,
                        "text": "        (write!(dest, \"any::new_texture::<_, u8>(facade, format, None, {mipmap}::NoMipmap.into(), {}).map(|t| {}(t))\","
                      },
                      {
                        "highlight_end": 81,
                        "highlight_start": 1,
                        "text": "                dimensions_parameters_passing, name, mipmap = mipmaps_option_ty)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:768:10\n    |\n768 |           (writeln!(dest, \"\n    |  __________^\n769 | |                 /// Creates an empty texture with a specific format.\n770 | |                 ///\n771 | |                 /// The texture (and its mipmaps) will contain undefined data.\n...   |\n776 | |             \", format = relevant_format, dim_params = dimensions_parameters_input, name = name,\n777 | |                mipmaps = mipmaps_option_ty)).unwrap();\n    | |___________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 37257,
                        "byte_start": 37251,
                        "column_end": 80,
                        "column_start": 74,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 773,
                        "line_start": 773,
                        "suggested_replacement": "relevant_format",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 80,
                            "highlight_start": 74,
                            "text": "                pub fn empty_with_format<F: ?Sized>(facade: &F, format: {format}, mipmaps: {mipmaps}, {dim_params}) -> Result<{name}, TextureCreationError> where F: Facade {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 37277,
                        "byte_start": 37270,
                        "column_end": 100,
                        "column_start": 93,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 773,
                        "line_start": 773,
                        "suggested_replacement": "mipmaps_option_ty",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 100,
                            "highlight_start": 93,
                            "text": "                pub fn empty_with_format<F: ?Sized>(facade: &F, format: {format}, mipmaps: {mipmaps}, {dim_params}) -> Result<{name}, TextureCreationError> where F: Facade {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 37291,
                        "byte_start": 37281,
                        "column_end": 114,
                        "column_start": 104,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 773,
                        "line_start": 773,
                        "suggested_replacement": "dimensions_parameters_input",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 114,
                            "highlight_start": 104,
                            "text": "                pub fn empty_with_format<F: ?Sized>(facade: &F, format: {format}, mipmaps: {mipmaps}, {dim_params}) -> Result<{name}, TextureCreationError> where F: Facade {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 37309,
                        "byte_start": 37305,
                        "column_end": 132,
                        "column_start": 128,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 773,
                        "line_start": 773,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 132,
                            "highlight_start": 128,
                            "text": "                pub fn empty_with_format<F: ?Sized>(facade: &F, format: {format}, mipmaps: {mipmaps}, {dim_params}) -> Result<{name}, TextureCreationError> where F: Facade {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 37526,
                        "byte_start": 37500,
                        "column_end": 40,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 776,
                        "line_start": 776,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 14,
                            "text": "            \", format = relevant_format, dim_params = dimensions_parameters_input, name = name,"
                          }
                        ]
                      },
                      {
                        "byte_end": 37568,
                        "byte_start": 37526,
                        "column_end": 82,
                        "column_start": 40,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 776,
                        "line_start": 776,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 82,
                            "highlight_start": 40,
                            "text": "            \", format = relevant_format, dim_params = dimensions_parameters_input, name = name,"
                          }
                        ]
                      },
                      {
                        "byte_end": 37581,
                        "byte_start": 37568,
                        "column_end": 95,
                        "column_start": 82,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 776,
                        "line_start": 776,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 95,
                            "highlight_start": 82,
                            "text": "            \", format = relevant_format, dim_params = dimensions_parameters_input, name = name,"
                          }
                        ]
                      },
                      {
                        "byte_end": 37625,
                        "byte_start": 37581,
                        "column_end": 43,
                        "column_start": 95,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 777,
                        "line_start": 776,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 96,
                            "highlight_start": 95,
                            "text": "            \", format = relevant_format, dim_params = dimensions_parameters_input, name = name,"
                          },
                          {
                            "highlight_end": 43,
                            "highlight_start": 1,
                            "text": "               mipmaps = mipmaps_option_ty)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 37626,
                    "byte_start": 36967,
                    "column_end": 44,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 777,
                    "line_start": 768,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 10,
                        "text": "        (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 69,
                        "highlight_start": 1,
                        "text": "                /// Creates an empty texture with a specific format."
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "                ///"
                      },
                      {
                        "highlight_end": 79,
                        "highlight_start": 1,
                        "text": "                /// The texture (and its mipmaps) will contain undefined data."
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                #[inline]"
                      },
                      {
                        "highlight_end": 175,
                        "highlight_start": 1,
                        "text": "                pub fn empty_with_format<F: ?Sized>(facade: &F, format: {format}, mipmaps: {mipmaps}, {dim_params}) -> Result<{name}, TextureCreationError> where F: Facade {{"
                      },
                      {
                        "highlight_end": 61,
                        "highlight_start": 1,
                        "text": "                    let format = format.to_texture_format();"
                      },
                      {
                        "highlight_end": 73,
                        "highlight_start": 1,
                        "text": "                    let format = TextureFormatRequest::Specific(format);"
                      },
                      {
                        "highlight_end": 96,
                        "highlight_start": 1,
                        "text": "            \", format = relevant_format, dim_params = dimensions_parameters_input, name = name,"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "               mipmaps = mipmaps_option_ty)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:780:10\n    |\n780 | ...   (write!(dest, \"let t = any::new_texture::<_, u8>(facade, format, None, mipmaps.into(), {});\", dimensions_parameters_passing)).unwra...\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n780 -         (write!(dest, \"let t = any::new_texture::<_, u8>(facade, format, None, mipmaps.into(), {});\", dimensions_parameters_passing)).unwrap();\n780 +         (write!(dest, \"let t = any::new_texture::<_, u8>(facade, format, None, mipmaps.into(), {dimensions_parameters_passing});\")).unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 37770,
                        "byte_start": 37770,
                        "column_end": 97,
                        "column_start": 97,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 780,
                        "line_start": 780,
                        "suggested_replacement": "dimensions_parameters_passing",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 97,
                            "highlight_start": 97,
                            "text": "        (write!(dest, \"let t = any::new_texture::<_, u8>(facade, format, None, mipmaps.into(), {});\", dimensions_parameters_passing)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 37805,
                        "byte_start": 37774,
                        "column_end": 132,
                        "column_start": 101,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 780,
                        "line_start": 780,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 132,
                            "highlight_start": 101,
                            "text": "        (write!(dest, \"let t = any::new_texture::<_, u8>(facade, format, None, mipmaps.into(), {});\", dimensions_parameters_passing)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 37806,
                    "byte_start": 37683,
                    "column_end": 133,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 780,
                    "line_start": 780,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 133,
                        "highlight_start": 10,
                        "text": "        (write!(dest, \"let t = any::new_texture::<_, u8>(facade, format, None, mipmaps.into(), {});\", dimensions_parameters_passing)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:781:10\n    |\n781 |           (writeln!(dest, \"\n    |  __________^\n782 | |             t.map(|t| {}(t))\", name)).unwrap();\n    | |____________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n782 -             t.map(|t| {}(t))\", name)).unwrap();\n782 +             t.map(|t| {name}(t))\")).unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 37867,
                        "byte_start": 37867,
                        "column_end": 24,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 782,
                        "line_start": 782,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 24,
                            "text": "            t.map(|t| {}(t))\", name)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 37879,
                        "byte_start": 37873,
                        "column_end": 36,
                        "column_start": 30,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 782,
                        "line_start": 782,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 30,
                            "text": "            t.map(|t| {}(t))\", name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 37880,
                    "byte_start": 37827,
                    "column_end": 37,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 782,
                    "line_start": 781,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 10,
                        "text": "        (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 37,
                        "highlight_start": 1,
                        "text": "            t.map(|t| {}(t))\", name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:791:10\n    |\n791 |           (writeln!(dest, \"\n    |  __________^\n792 | |                 /// Creates an empty texture. Specifies whether is has mipmaps.\n793 | |                 ///\n794 | |                 /// The texture (and its mipmaps) will contain undefined data.\n...   |\n798 | |             \", format = default_format, dim_params = dimensions_parameters_input, name = name,\n799 | |                mipmaps = mipmaps_option_ty)).unwrap();\n    | |___________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 38383,
                        "byte_start": 38376,
                        "column_end": 83,
                        "column_start": 76,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 796,
                        "line_start": 796,
                        "suggested_replacement": "mipmaps_option_ty",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 83,
                            "highlight_start": 76,
                            "text": "                pub fn empty_with_mipmaps<F: ?Sized>(facade: &F, mipmaps: {mipmaps}, {dim_params}) -> Result<{name}, TextureCreationError> where F: Facade {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 38397,
                        "byte_start": 38387,
                        "column_end": 97,
                        "column_start": 87,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 796,
                        "line_start": 796,
                        "suggested_replacement": "dimensions_parameters_input",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 97,
                            "highlight_start": 87,
                            "text": "                pub fn empty_with_mipmaps<F: ?Sized>(facade: &F, mipmaps: {mipmaps}, {dim_params}) -> Result<{name}, TextureCreationError> where F: Facade {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 38415,
                        "byte_start": 38411,
                        "column_end": 115,
                        "column_start": 111,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 796,
                        "line_start": 796,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 115,
                            "highlight_start": 111,
                            "text": "                pub fn empty_with_mipmaps<F: ?Sized>(facade: &F, mipmaps: {mipmaps}, {dim_params}) -> Result<{name}, TextureCreationError> where F: Facade {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 38499,
                        "byte_start": 38493,
                        "column_end": 41,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 797,
                        "line_start": 797,
                        "suggested_replacement": "default_format",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 35,
                            "text": "                    let format = {format};"
                          }
                        ]
                      },
                      {
                        "byte_end": 38540,
                        "byte_start": 38515,
                        "column_end": 39,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 798,
                        "line_start": 798,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 14,
                            "text": "            \", format = default_format, dim_params = dimensions_parameters_input, name = name,"
                          }
                        ]
                      },
                      {
                        "byte_end": 38582,
                        "byte_start": 38540,
                        "column_end": 81,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 798,
                        "line_start": 798,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 81,
                            "highlight_start": 39,
                            "text": "            \", format = default_format, dim_params = dimensions_parameters_input, name = name,"
                          }
                        ]
                      },
                      {
                        "byte_end": 38595,
                        "byte_start": 38582,
                        "column_end": 94,
                        "column_start": 81,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 798,
                        "line_start": 798,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 94,
                            "highlight_start": 81,
                            "text": "            \", format = default_format, dim_params = dimensions_parameters_input, name = name,"
                          }
                        ]
                      },
                      {
                        "byte_end": 38639,
                        "byte_start": 38595,
                        "column_end": 43,
                        "column_start": 94,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 799,
                        "line_start": 798,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 95,
                            "highlight_start": 94,
                            "text": "            \", format = default_format, dim_params = dimensions_parameters_input, name = name,"
                          },
                          {
                            "highlight_end": 43,
                            "highlight_start": 1,
                            "text": "               mipmaps = mipmaps_option_ty)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 38640,
                    "byte_start": 38079,
                    "column_end": 44,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 799,
                    "line_start": 791,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 10,
                        "text": "        (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 80,
                        "highlight_start": 1,
                        "text": "                /// Creates an empty texture. Specifies whether is has mipmaps."
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "                ///"
                      },
                      {
                        "highlight_end": 79,
                        "highlight_start": 1,
                        "text": "                /// The texture (and its mipmaps) will contain undefined data."
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                #[inline]"
                      },
                      {
                        "highlight_end": 158,
                        "highlight_start": 1,
                        "text": "                pub fn empty_with_mipmaps<F: ?Sized>(facade: &F, mipmaps: {mipmaps}, {dim_params}) -> Result<{name}, TextureCreationError> where F: Facade {{"
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "                    let format = {format};"
                      },
                      {
                        "highlight_end": 95,
                        "highlight_start": 1,
                        "text": "            \", format = default_format, dim_params = dimensions_parameters_input, name = name,"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "               mipmaps = mipmaps_option_ty)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:802:10\n    |\n802 |         (write!(dest, \"any::new_texture::<_, u8>(facade, format, None, mipmaps.into(), {})\", dimensions_parameters_passing)).unwrap();\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n802 -         (write!(dest, \"any::new_texture::<_, u8>(facade, format, None, mipmaps.into(), {})\", dimensions_parameters_passing)).unwrap();\n802 +         (write!(dest, \"any::new_texture::<_, u8>(facade, format, None, mipmaps.into(), {dimensions_parameters_passing})\")).unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 38776,
                        "byte_start": 38776,
                        "column_end": 89,
                        "column_start": 89,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 802,
                        "line_start": 802,
                        "suggested_replacement": "dimensions_parameters_passing",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 89,
                            "highlight_start": 89,
                            "text": "        (write!(dest, \"any::new_texture::<_, u8>(facade, format, None, mipmaps.into(), {})\", dimensions_parameters_passing)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 38810,
                        "byte_start": 38779,
                        "column_end": 123,
                        "column_start": 92,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 802,
                        "line_start": 802,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 123,
                            "highlight_start": 92,
                            "text": "        (write!(dest, \"any::new_texture::<_, u8>(facade, format, None, mipmaps.into(), {})\", dimensions_parameters_passing)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 38811,
                    "byte_start": 38697,
                    "column_end": 124,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 802,
                    "line_start": 802,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 124,
                        "highlight_start": 10,
                        "text": "        (write!(dest, \"any::new_texture::<_, u8>(facade, format, None, mipmaps.into(), {})\", dimensions_parameters_passing)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:803:10\n    |\n803 |         (writeln!(dest, \".map(|t| {}(t))\", name)).unwrap();\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n803 -         (writeln!(dest, \".map(|t| {}(t))\", name)).unwrap();\n803 +         (writeln!(dest, \".map(|t| {name}(t))\")).unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 38858,
                        "byte_start": 38858,
                        "column_end": 36,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 803,
                        "line_start": 803,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 36,
                            "text": "        (writeln!(dest, \".map(|t| {}(t))\", name)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 38870,
                        "byte_start": 38864,
                        "column_end": 48,
                        "column_start": 42,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 803,
                        "line_start": 803,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 42,
                            "text": "        (writeln!(dest, \".map(|t| {}(t))\", name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 38871,
                    "byte_start": 38832,
                    "column_end": 49,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 803,
                    "line_start": 803,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 10,
                        "text": "        (writeln!(dest, \".map(|t| {}(t))\", name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:810:6\n    |\n810 |       (writeln!(dest, \"\n    |  ______^\n811 | |                 /// Builds a new texture reference from an existing, externally created OpenGL texture.\n812 | |                 /// If `owned` is true, this reference will take ownership of the texture and be responsible\n813 | |                 /// for cleaning it up. Otherwise, the texture must be cleaned up externally, but only\n...   |\n825 | |                 }}\n826 | |         \", format = relevant_format, name = name)).unwrap();\n    | |_________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n816 ~                                                  format: {relevant_format},\n817 |                                                  id: gl::types::GLuint,\n...\n825 |                 }}\n826 ~         \")).unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 39533,
                        "byte_start": 39527,
                        "column_end": 65,
                        "column_start": 59,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 816,
                        "line_start": 816,
                        "suggested_replacement": "relevant_format",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 65,
                            "highlight_start": 59,
                            "text": "                                                 format: {format},"
                          }
                        ]
                      },
                      {
                        "byte_end": 39864,
                        "byte_start": 39860,
                        "column_end": 58,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 821,
                        "line_start": 821,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 54,
                            "text": "                                                 -> {name} {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 40028,
                        "byte_start": 40024,
                        "column_end": 26,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 824,
                        "line_start": 824,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 22,
                            "text": "                    {name}(any::from_id(facade, format, id, owned, mipmap, ty))"
                          }
                        ]
                      },
                      {
                        "byte_end": 40137,
                        "byte_start": 40111,
                        "column_end": 36,
                        "column_start": 10,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 826,
                        "line_start": 826,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 10,
                            "text": "        \", format = relevant_format, name = name)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 40150,
                        "byte_start": 40137,
                        "column_end": 49,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 826,
                        "line_start": 826,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 36,
                            "text": "        \", format = relevant_format, name = name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 40151,
                    "byte_start": 39003,
                    "column_end": 50,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 826,
                    "line_start": 810,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 22,
                        "highlight_start": 6,
                        "text": "    (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 104,
                        "highlight_start": 1,
                        "text": "                /// Builds a new texture reference from an existing, externally created OpenGL texture."
                      },
                      {
                        "highlight_end": 109,
                        "highlight_start": 1,
                        "text": "                /// If `owned` is true, this reference will take ownership of the texture and be responsible"
                      },
                      {
                        "highlight_end": 103,
                        "highlight_start": 1,
                        "text": "                /// for cleaning it up. Otherwise, the texture must be cleaned up externally, but only"
                      },
                      {
                        "highlight_end": 63,
                        "highlight_start": 1,
                        "text": "                /// after this reference's lifetime has ended."
                      },
                      {
                        "highlight_end": 70,
                        "highlight_start": 1,
                        "text": "                pub unsafe fn from_id<F: Facade + ?Sized>(facade: &F,"
                      },
                      {
                        "highlight_end": 67,
                        "highlight_start": 1,
                        "text": "                                                 format: {format},"
                      },
                      {
                        "highlight_end": 72,
                        "highlight_start": 1,
                        "text": "                                                 id: gl::types::GLuint,"
                      },
                      {
                        "highlight_end": 62,
                        "highlight_start": 1,
                        "text": "                                                 owned: bool,"
                      },
                      {
                        "highlight_end": 72,
                        "highlight_start": 1,
                        "text": "                                                 mipmap: MipmapsOption,"
                      },
                      {
                        "highlight_end": 65,
                        "highlight_start": 1,
                        "text": "                                                 ty: Dimensions)"
                      },
                      {
                        "highlight_end": 62,
                        "highlight_start": 1,
                        "text": "                                                 -> {name} {{"
                      },
                      {
                        "highlight_end": 61,
                        "highlight_start": 1,
                        "text": "                    let format = format.to_texture_format();"
                      },
                      {
                        "highlight_end": 73,
                        "highlight_start": 1,
                        "text": "                    let format = TextureFormatRequest::Specific(format);"
                      },
                      {
                        "highlight_end": 80,
                        "highlight_start": 1,
                        "text": "                    {name}(any::from_id(facade, format, id, owned, mipmap, ty))"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 50,
                        "highlight_start": 1,
                        "text": "        \", format = relevant_format, name = name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:829:6\n    |\n829 |       (writeln!(dest, r#\"\n    |  ______^\n830 | |                 /// Builds a new texture reference from an existing texture, externally created by a foreign\n831 | |                 /// API like Vulkan. The texture is imported via an opaque file descriptor. You must make\n832 | |                 /// sure all of the texture parameters match those used to create the texture in Vulkan.\n...   |\n843 | |                 }}\n844 | |         \"#, format = relevant_format, name = name)).unwrap();\n    | |__________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n835 ~                                                  format: {relevant_format},\n836 |                                                  mipmaps: MipmapsOption,\n...\n843 |                 }}\n844 ~         \"#)).unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 40732,
                        "byte_start": 40726,
                        "column_end": 65,
                        "column_start": 59,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 835,
                        "line_start": 835,
                        "suggested_replacement": "relevant_format",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 65,
                            "highlight_start": 59,
                            "text": "                                                 format: {format},"
                          }
                        ]
                      },
                      {
                        "byte_end": 41096,
                        "byte_start": 41092,
                        "column_end": 65,
                        "column_start": 61,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 840,
                        "line_start": 840,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 65,
                            "highlight_start": 61,
                            "text": "                                                 -> Result<{name}, crate::texture::TextureImportError> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 41227,
                        "byte_start": 41223,
                        "column_end": 29,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 842,
                        "line_start": 842,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 25,
                            "text": "                    Ok({name}(any::new_from_fd(facade, format, mipmaps, ty, params, fd)?))"
                          }
                        ]
                      },
                      {
                        "byte_end": 41345,
                        "byte_start": 41319,
                        "column_end": 37,
                        "column_start": 11,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 844,
                        "line_start": 844,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 37,
                            "highlight_start": 11,
                            "text": "        \"#, format = relevant_format, name = name)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 41358,
                        "byte_start": 41345,
                        "column_end": 50,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 844,
                        "line_start": 844,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 50,
                            "highlight_start": 37,
                            "text": "        \"#, format = relevant_format, name = name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 41359,
                    "byte_start": 40211,
                    "column_end": 51,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 844,
                    "line_start": 829,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 6,
                        "text": "    (writeln!(dest, r#\""
                      },
                      {
                        "highlight_end": 109,
                        "highlight_start": 1,
                        "text": "                /// Builds a new texture reference from an existing texture, externally created by a foreign"
                      },
                      {
                        "highlight_end": 106,
                        "highlight_start": 1,
                        "text": "                /// API like Vulkan. The texture is imported via an opaque file descriptor. You must make"
                      },
                      {
                        "highlight_end": 105,
                        "highlight_start": 1,
                        "text": "                /// sure all of the texture parameters match those used to create the texture in Vulkan."
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "                #[cfg(target_os = \"linux\")]"
                      },
                      {
                        "highlight_end": 74,
                        "highlight_start": 1,
                        "text": "                pub unsafe fn new_from_fd<F: Facade + ?Sized>(facade: &F,"
                      },
                      {
                        "highlight_end": 67,
                        "highlight_start": 1,
                        "text": "                                                 format: {format},"
                      },
                      {
                        "highlight_end": 73,
                        "highlight_start": 1,
                        "text": "                                                 mipmaps: MipmapsOption,"
                      },
                      {
                        "highlight_end": 65,
                        "highlight_start": 1,
                        "text": "                                                 ty: Dimensions,"
                      },
                      {
                        "highlight_end": 91,
                        "highlight_start": 1,
                        "text": "                                                 params: crate::texture::ImportParameters,"
                      },
                      {
                        "highlight_end": 68,
                        "highlight_start": 1,
                        "text": "                                                 fd: std::fs::File)"
                      },
                      {
                        "highlight_end": 106,
                        "highlight_start": 1,
                        "text": "                                                 -> Result<{name}, crate::texture::TextureImportError> {{"
                      },
                      {
                        "highlight_end": 61,
                        "highlight_start": 1,
                        "text": "                    let format = format.to_texture_format();"
                      },
                      {
                        "highlight_end": 91,
                        "highlight_start": 1,
                        "text": "                    Ok({name}(any::new_from_fd(facade, format, mipmaps, ty, params, fd)?))"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 51,
                        "highlight_start": 1,
                        "text": "        \"#, format = relevant_format, name = name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> build\\textures.rs:971:10\n    |\n971 |           (write!(dest, r#\"\n    |  __________^\n972 | |                 /// Reads the content of the texture to RAM without decompressing it before.\n973 | |                 ///\n974 | |                 /// You should avoid doing this at all cost during performance-critical\n...   |\n982 | |                 }}\n983 | |             \"#, format = relevant_format)).unwrap();\n    | |_________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n980 ~                 pub fn read_compressed_data(&self) -> Option<({relevant_format}, Vec<u8>)> {{\n981 |                     self.main_level().read_compressed_data()\n982 |                 }}\n983 ~             \"#)).unwrap();\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 48417,
                        "byte_start": 48411,
                        "column_end": 70,
                        "column_start": 64,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 980,
                        "line_start": 980,
                        "suggested_replacement": "relevant_format",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 70,
                            "highlight_start": 64,
                            "text": "                pub fn read_compressed_data(&self) -> Option<({format}, Vec<u8>)> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 48553,
                        "byte_start": 48527,
                        "column_end": 41,
                        "column_start": 15,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 983,
                        "line_start": 983,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 15,
                            "text": "            \"#, format = relevant_format)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 48554,
                    "byte_start": 47833,
                    "column_end": 42,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 983,
                    "line_start": 971,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 10,
                        "text": "        (write!(dest, r#\""
                      },
                      {
                        "highlight_end": 93,
                        "highlight_start": 1,
                        "text": "                /// Reads the content of the texture to RAM without decompressing it before."
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "                ///"
                      },
                      {
                        "highlight_end": 88,
                        "highlight_start": 1,
                        "text": "                /// You should avoid doing this at all cost during performance-critical"
                      },
                      {
                        "highlight_end": 68,
                        "highlight_start": 1,
                        "text": "                /// operations (for example, while you're drawing)."
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "                ///"
                      },
                      {
                        "highlight_end": 96,
                        "highlight_start": 1,
                        "text": "                /// Returns the compressed format of the texture and the compressed data, gives"
                      },
                      {
                        "highlight_end": 87,
                        "highlight_start": 1,
                        "text": "                /// `None` when the internal compression format is generic or unknown."
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                #[inline]"
                      },
                      {
                        "highlight_end": 85,
                        "highlight_start": 1,
                        "text": "                pub fn read_compressed_data(&self) -> Option<({format}, Vec<u8>)> {{"
                      },
                      {
                        "highlight_end": 61,
                        "highlight_start": 1,
                        "text": "                    self.main_level().read_compressed_data()"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "            \"#, format = relevant_format)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1004:10\n     |\n1004 |           (write!(dest, r#\"\n     |  __________^\n1005 | |                 /// Uploads some data in the texture.\n1006 | |                 ///\n1007 | |                 /// Note that this may cause a synchronization if you use the texture right before\n...    |\n1019 | |             \"#, data_source_trait = data_source_trait,\n1020 | |                 compressed_restrictions = compressed_restrictions)).unwrap();\n     | |__________________________________________________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 49912,
                        "byte_start": 49889,
                        "column_end": 41,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1014,
                        "line_start": 1014,
                        "suggested_replacement": "compressed_restrictions",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 18,
                            "text": "                {compressed_restrictions}"
                          }
                        ]
                      },
                      {
                        "byte_end": 50031,
                        "byte_start": 50014,
                        "column_end": 92,
                        "column_start": 75,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1016,
                        "line_start": 1016,
                        "suggested_replacement": "data_source_trait",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 92,
                            "highlight_start": 75,
                            "text": "                pub fn write<'a, T>(&self, rect: Rect, data: T) where T: {data_source_trait}<'a> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 50168,
                        "byte_start": 50129,
                        "column_end": 54,
                        "column_start": 15,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1019,
                        "line_start": 1019,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 15,
                            "text": "            \"#, data_source_trait = data_source_trait,"
                          }
                        ]
                      },
                      {
                        "byte_end": 50235,
                        "byte_start": 50168,
                        "column_end": 66,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1020,
                        "line_start": 1019,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 55,
                            "highlight_start": 54,
                            "text": "            \"#, data_source_trait = data_source_trait,"
                          },
                          {
                            "highlight_end": 66,
                            "highlight_start": 1,
                            "text": "                compressed_restrictions = compressed_restrictions)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 50236,
                    "byte_start": 49395,
                    "column_end": 67,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1020,
                    "line_start": 1004,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 10,
                        "text": "        (write!(dest, r#\""
                      },
                      {
                        "highlight_end": 54,
                        "highlight_start": 1,
                        "text": "                /// Uploads some data in the texture."
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "                ///"
                      },
                      {
                        "highlight_end": 99,
                        "highlight_start": 1,
                        "text": "                /// Note that this may cause a synchronization if you use the texture right before"
                      },
                      {
                        "highlight_end": 98,
                        "highlight_start": 1,
                        "text": "                /// or right after this call. Prefer creating a whole new texture if you change a"
                      },
                      {
                        "highlight_end": 37,
                        "highlight_start": 1,
                        "text": "                /// huge part of it."
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "                ///"
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "                /// ## Panic"
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "                ///"
                      },
                      {
                        "highlight_end": 83,
                        "highlight_start": 1,
                        "text": "                /// Panics if the the dimensions of `data` don't match the `Rect`."
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                {compressed_restrictions}"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                #[inline]"
                      },
                      {
                        "highlight_end": 100,
                        "highlight_start": 1,
                        "text": "                pub fn write<'a, T>(&self, rect: Rect, data: T) where T: {data_source_trait}<'a> {{"
                      },
                      {
                        "highlight_end": 56,
                        "highlight_start": 1,
                        "text": "                    self.main_level().write(rect, data)"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 55,
                        "highlight_start": 1,
                        "text": "            \"#, data_source_trait = data_source_trait,"
                      },
                      {
                        "highlight_end": 67,
                        "highlight_start": 1,
                        "text": "                compressed_restrictions = compressed_restrictions)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1027:10\n     |\n1027 |           (write!(dest, r#\"\n     |  __________^\n1028 | |                 /// Uploads some data in the texture by using a compressed format as input.\n1029 | |                 ///\n1030 | |                 /// Note that this may cause a synchronization if you use the texture right before\n...    |\n1051 | |                 }}\n1052 | |             \"#, format = relevant_format)).unwrap();\n     | |_________________________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1045 ~                                              width: u32, height: u32, format: {relevant_format})\n1046 |                                              -> Result<(), ()>\n ...\n1051 |                 }}\n1052 ~             \"#)).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 51649,
                        "byte_start": 51643,
                        "column_end": 86,
                        "column_start": 80,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1045,
                        "line_start": 1045,
                        "suggested_replacement": "relevant_format",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 86,
                            "highlight_start": 80,
                            "text": "                                             width: u32, height: u32, format: {format})"
                          }
                        ]
                      },
                      {
                        "byte_end": 52030,
                        "byte_start": 52004,
                        "column_end": 41,
                        "column_start": 15,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1052,
                        "line_start": 1052,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 15,
                            "text": "            \"#, format = relevant_format)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 52031,
                    "byte_start": 50432,
                    "column_end": 42,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1052,
                    "line_start": 1027,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 10,
                        "text": "        (write!(dest, r#\""
                      },
                      {
                        "highlight_end": 92,
                        "highlight_start": 1,
                        "text": "                /// Uploads some data in the texture by using a compressed format as input."
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "                ///"
                      },
                      {
                        "highlight_end": 99,
                        "highlight_start": 1,
                        "text": "                /// Note that this may cause a synchronization if you use the texture right before"
                      },
                      {
                        "highlight_end": 98,
                        "highlight_start": 1,
                        "text": "                /// or right after this call. Prefer creating a whole new texture if you change a"
                      },
                      {
                        "highlight_end": 37,
                        "highlight_start": 1,
                        "text": "                /// huge part of it."
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "                ///"
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "                /// ## Panic"
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "                ///"
                      },
                      {
                        "highlight_end": 83,
                        "highlight_start": 1,
                        "text": "                /// Panics if the the dimensions of `data` don't match the `Rect`."
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "                ///"
                      },
                      {
                        "highlight_end": 105,
                        "highlight_start": 1,
                        "text": "                /// Calling this will result in a panic of type INVALID_OPERATION error if `Rect::width`"
                      },
                      {
                        "highlight_end": 108,
                        "highlight_start": 1,
                        "text": "                /// or `Rect::height` is not equal to 0 (border), or if the written dimensions do not match"
                      },
                      {
                        "highlight_end": 107,
                        "highlight_start": 1,
                        "text": "                /// the original texture dimensions. The contents of any texel outside the region modified"
                      },
                      {
                        "highlight_end": 105,
                        "highlight_start": 1,
                        "text": "                /// by the call are undefined. These restrictions may be relaxed for specific compressed"
                      },
                      {
                        "highlight_end": 69,
                        "highlight_start": 1,
                        "text": "                /// internal formats whose images are easily edited."
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                #[inline]"
                      },
                      {
                        "highlight_end": 77,
                        "highlight_start": 1,
                        "text": "                pub fn write_compressed_data(&self, rect: Rect, data: &[u8],"
                      },
                      {
                        "highlight_end": 88,
                        "highlight_start": 1,
                        "text": "                                             width: u32, height: u32, format: {format})"
                      },
                      {
                        "highlight_end": 63,
                        "highlight_start": 1,
                        "text": "                                             -> Result<(), ()>"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                {{"
                      },
                      {
                        "highlight_end": 96,
                        "highlight_start": 1,
                        "text": "                    // FIXME is having width and height as parameter redundant as rect kinda of"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                    // already provides them?"
                      },
                      {
                        "highlight_end": 95,
                        "highlight_start": 1,
                        "text": "                    self.main_level().write_compressed_data(rect, data, width, height, format)"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "            \"#, format = relevant_format)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1071:10\n     |\n1071 |           (write!(dest, r#\"\n     |  __________^\n1072 | |                 /// Access the first layer of this texture.\n1073 | |                 #[inline]\n1074 | |                 pub fn first_layer(&self) -> {name}Layer {{\n...    |\n1082 | |                 }}\n1083 | |             \"#, name = name)).unwrap();\n     | |____________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1074 |                 pub fn first_layer(&self) -> {name}Layer {{\n ...\n1082 |                 }}\n1083 ~             \"#)).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 52904,
                        "byte_start": 52900,
                        "column_end": 51,
                        "column_start": 47,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1074,
                        "line_start": 1074,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 47,
                            "text": "                pub fn first_layer(&self) -> {name}Layer {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 53125,
                        "byte_start": 53121,
                        "column_end": 64,
                        "column_start": 60,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1080,
                        "line_start": 1080,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 64,
                            "highlight_start": 60,
                            "text": "                pub fn layer(&self, layer: u32) -> Option<{name}Layer> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 53189,
                        "byte_start": 53185,
                        "column_end": 54,
                        "column_start": 50,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1081,
                        "line_start": 1081,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 50,
                            "text": "                    self.0.layer(layer).map(|l| {name}Layer(l, self))"
                          }
                        ]
                      },
                      {
                        "byte_end": 53252,
                        "byte_start": 53239,
                        "column_end": 28,
                        "column_start": 15,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1083,
                        "line_start": 1083,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 15,
                            "text": "            \"#, name = name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 53253,
                    "byte_start": 52751,
                    "column_end": 29,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1083,
                    "line_start": 1071,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 10,
                        "text": "        (write!(dest, r#\""
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "                /// Access the first layer of this texture."
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                #[inline]"
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "                pub fn first_layer(&self) -> {name}Layer {{"
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "                    self.layer(0).unwrap()"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 59,
                        "highlight_start": 1,
                        "text": "                /// Access a single layer of this texture."
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                #[inline]"
                      },
                      {
                        "highlight_end": 74,
                        "highlight_start": 1,
                        "text": "                pub fn layer(&self, layer: u32) -> Option<{name}Layer> {{"
                      },
                      {
                        "highlight_end": 70,
                        "highlight_start": 1,
                        "text": "                    self.0.layer(layer).map(|l| {name}Layer(l, self))"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "            \"#, name = name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1086:6\n     |\n1086 |       (write!(dest, r#\"\n     |  ______^\n1087 | |             /// Access a single mipmap level of this texture.\n1088 | |             #[inline]\n1089 | |             pub fn mipmap(&self, level: u32) -> Option<{name}Mipmap> {{\n...    |\n1097 | |             }}\n1098 | |         \"#, name = name)).unwrap();\n     | |________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1089 |             pub fn mipmap(&self, level: u32) -> Option<{name}Mipmap> {{\n ...\n1097 |             }}\n1098 ~         \"#)).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 53438,
                        "byte_start": 53434,
                        "column_end": 61,
                        "column_start": 57,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1089,
                        "line_start": 1089,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 61,
                            "highlight_start": 57,
                            "text": "            pub fn mipmap(&self, level: u32) -> Option<{name}Mipmap> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 53500,
                        "byte_start": 53496,
                        "column_end": 51,
                        "column_start": 47,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1090,
                        "line_start": 1090,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 47,
                            "text": "                self.0.mipmap(level).map(|m| {name}Mipmap(m, self))"
                          }
                        ]
                      },
                      {
                        "byte_end": 53663,
                        "byte_start": 53659,
                        "column_end": 46,
                        "column_start": 42,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1095,
                        "line_start": 1095,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 42,
                            "text": "            pub fn main_level(&self) -> {name}Mipmap {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 53752,
                        "byte_start": 53739,
                        "column_end": 24,
                        "column_start": 11,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1098,
                        "line_start": 1098,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 11,
                            "text": "        \"#, name = name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 53753,
                    "byte_start": 53277,
                    "column_end": 25,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1098,
                    "line_start": 1086,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 22,
                        "highlight_start": 6,
                        "text": "    (write!(dest, r#\""
                      },
                      {
                        "highlight_end": 62,
                        "highlight_start": 1,
                        "text": "            /// Access a single mipmap level of this texture."
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "            #[inline]"
                      },
                      {
                        "highlight_end": 72,
                        "highlight_start": 1,
                        "text": "            pub fn mipmap(&self, level: u32) -> Option<{name}Mipmap> {{"
                      },
                      {
                        "highlight_end": 68,
                        "highlight_start": 1,
                        "text": "                self.0.mipmap(level).map(|m| {name}Mipmap(m, self))"
                      },
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "            }}"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 62,
                        "highlight_start": 1,
                        "text": "            /// Access the main mipmap level of this texture."
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "            #[inline]"
                      },
                      {
                        "highlight_end": 56,
                        "highlight_start": 1,
                        "text": "            pub fn main_level(&self) -> {name}Mipmap {{"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "                self.mipmap(0).unwrap()"
                      },
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "            }}"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "        \"#, name = name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1106:10\n     |\n1106 |           (write!(dest, r#\"\n     |  __________^\n1107 | |                 /// Represents a single layer of a `{name}`.\n1108 | |                 ///\n1109 | |                 /// Can be obtained by calling `{name}::layer()`.\n1110 | |                 #[derive(Copy, Clone)]\n1111 | |                 pub struct {name}Layer<'t>(TextureAnyLayer<'t>, &'t {name});\n1112 | |             \"#, name = name)).unwrap();\n     | |____________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1107 |                 /// Represents a single layer of a `{name}`.\n ...\n1111 |                 pub struct {name}Layer<'t>(TextureAnyLayer<'t>, &'t {name});\n1112 ~             \"#)).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 54010,
                        "byte_start": 54006,
                        "column_end": 58,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1107,
                        "line_start": 1107,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 54,
                            "text": "                /// Represents a single layer of a `{name}`."
                          }
                        ]
                      },
                      {
                        "byte_end": 54087,
                        "byte_start": 54083,
                        "column_end": 54,
                        "column_start": 50,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1109,
                        "line_start": 1109,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 50,
                            "text": "                /// Can be obtained by calling `{name}::layer()`."
                          }
                        ]
                      },
                      {
                        "byte_end": 54171,
                        "byte_start": 54167,
                        "column_end": 33,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1111,
                        "line_start": 1111,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 29,
                            "text": "                pub struct {name}Layer<'t>(TextureAnyLayer<'t>, &'t {name});"
                          }
                        ]
                      },
                      {
                        "byte_end": 54212,
                        "byte_start": 54208,
                        "column_end": 74,
                        "column_start": 70,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1111,
                        "line_start": 1111,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 74,
                            "highlight_start": 70,
                            "text": "                pub struct {name}Layer<'t>(TextureAnyLayer<'t>, &'t {name});"
                          }
                        ]
                      },
                      {
                        "byte_end": 54243,
                        "byte_start": 54230,
                        "column_end": 28,
                        "column_start": 15,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1112,
                        "line_start": 1112,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 15,
                            "text": "            \"#, name = name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 54244,
                    "byte_start": 53936,
                    "column_end": 29,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1112,
                    "line_start": 1106,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 10,
                        "text": "        (write!(dest, r#\""
                      },
                      {
                        "highlight_end": 61,
                        "highlight_start": 1,
                        "text": "                /// Represents a single layer of a `{name}`."
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "                ///"
                      },
                      {
                        "highlight_end": 66,
                        "highlight_start": 1,
                        "text": "                /// Can be obtained by calling `{name}::layer()`."
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "                #[derive(Copy, Clone)]"
                      },
                      {
                        "highlight_end": 77,
                        "highlight_start": 1,
                        "text": "                pub struct {name}Layer<'t>(TextureAnyLayer<'t>, &'t {name});"
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "            \"#, name = name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1115:10\n     |\n1115 |         (writeln!(dest, \"impl<'t> {}Layer<'t> {{\", name)).unwrap();\n     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1115 -         (writeln!(dest, \"impl<'t> {}Layer<'t> {{\", name)).unwrap();\n1115 +         (writeln!(dest, \"impl<'t> {name}Layer<'t> {{\")).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 54330,
                        "byte_start": 54330,
                        "column_end": 36,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1115,
                        "line_start": 1115,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 36,
                            "text": "        (writeln!(dest, \"impl<'t> {}Layer<'t> {{\", name)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 54350,
                        "byte_start": 54344,
                        "column_end": 56,
                        "column_start": 50,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1115,
                        "line_start": 1115,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 56,
                            "highlight_start": 50,
                            "text": "        (writeln!(dest, \"impl<'t> {}Layer<'t> {{\", name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 54351,
                    "byte_start": 54304,
                    "column_end": 57,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1115,
                    "line_start": 1115,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 10,
                        "text": "        (writeln!(dest, \"impl<'t> {}Layer<'t> {{\", name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1121:10\n     |\n1121 |           (write!(dest, \"\n     |  __________^\n1122 | |                 /// Returns the corresponding texture.\n1123 | |                 #[inline]\n1124 | |                 pub fn get_texture(&self) -> &'t {name} {{\n...    |\n1132 | |                 }}\n1133 | |             \", name = name)).unwrap();\n     | |___________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1124 |                 pub fn get_texture(&self) -> &'t {name} {{\n ...\n1132 |                 }}\n1133 ~             \")).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 54690,
                        "byte_start": 54686,
                        "column_end": 55,
                        "column_start": 51,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1124,
                        "line_start": 1124,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 55,
                            "highlight_start": 51,
                            "text": "                pub fn get_texture(&self) -> &'t {name} {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 54948,
                        "byte_start": 54935,
                        "column_end": 27,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1133,
                        "line_start": 1133,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 14,
                            "text": "            \", name = name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 54949,
                    "byte_start": 54540,
                    "column_end": 28,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1133,
                    "line_start": 1121,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 10,
                        "text": "        (write!(dest, \""
                      },
                      {
                        "highlight_end": 55,
                        "highlight_start": 1,
                        "text": "                /// Returns the corresponding texture."
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                #[inline]"
                      },
                      {
                        "highlight_end": 59,
                        "highlight_start": 1,
                        "text": "                pub fn get_texture(&self) -> &'t {name} {{"
                      },
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "                    &self.1"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                /// Returns the layer index."
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                #[inline]"
                      },
                      {
                        "highlight_end": 50,
                        "highlight_start": 1,
                        "text": "                pub fn get_layer(&self) -> u32 {{"
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "                    self.0.get_layer()"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "            \", name = name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1147:10\n     |\n1147 |           (write!(dest, r#\"\n     |  __________^\n1148 | |             /// Access a single mipmap level of this layer.\n1149 | |             #[inline]\n1150 | |             pub fn mipmap(&self, level: u32) -> Option<{name}LayerMipmap<'t>> {{\n...    |\n1158 | |             }}\n1159 | |         \"#, name = name)).unwrap();\n     | |________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1150 |             pub fn mipmap(&self, level: u32) -> Option<{name}LayerMipmap<'t>> {{\n ...\n1158 |             }}\n1159 ~         \"#)).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 55626,
                        "byte_start": 55622,
                        "column_end": 61,
                        "column_start": 57,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1150,
                        "line_start": 1150,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 61,
                            "highlight_start": 57,
                            "text": "            pub fn mipmap(&self, level: u32) -> Option<{name}LayerMipmap<'t>> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 55697,
                        "byte_start": 55693,
                        "column_end": 51,
                        "column_start": 47,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1151,
                        "line_start": 1151,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 47,
                            "text": "                self.0.mipmap(level).map(|m| {name}LayerMipmap(m, self.1))"
                          }
                        ]
                      },
                      {
                        "byte_end": 55865,
                        "byte_start": 55861,
                        "column_end": 46,
                        "column_start": 42,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1156,
                        "line_start": 1156,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 42,
                            "text": "            pub fn main_level(&self) -> {name}LayerMipmap<'t> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 55963,
                        "byte_start": 55950,
                        "column_end": 24,
                        "column_start": 11,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1159,
                        "line_start": 1159,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 11,
                            "text": "        \"#, name = name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 55964,
                    "byte_start": 55467,
                    "column_end": 25,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1159,
                    "line_start": 1147,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 10,
                        "text": "        (write!(dest, r#\""
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "            /// Access a single mipmap level of this layer."
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "            #[inline]"
                      },
                      {
                        "highlight_end": 81,
                        "highlight_start": 1,
                        "text": "            pub fn mipmap(&self, level: u32) -> Option<{name}LayerMipmap<'t>> {{"
                      },
                      {
                        "highlight_end": 75,
                        "highlight_start": 1,
                        "text": "                self.0.mipmap(level).map(|m| {name}LayerMipmap(m, self.1))"
                      },
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "            }}"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "            /// Access the main mipmap level of this layer."
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "            #[inline]"
                      },
                      {
                        "highlight_end": 65,
                        "highlight_start": 1,
                        "text": "            pub fn main_level(&self) -> {name}LayerMipmap<'t> {{"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "                self.mipmap(0).unwrap()"
                      },
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "            }}"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "        \"#, name = name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1168:10\n     |\n1168 |           (write!(dest, r#\"\n     |  __________^\n1169 | |                 /// Represents a single mipmap level of a `{name}`.\n1170 | |                 ///\n1171 | |                 /// Can be obtained by calling `{name}::mipmap()`, `{name}::main_level()`,\n...    |\n1183 | |                 }}\n1184 | |             \"#, name = name)).unwrap();\n     | |____________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1169 |                 /// Represents a single mipmap level of a `{name}`.\n ...\n1183 |                 }}\n1184 ~             \"#)).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 56216,
                        "byte_start": 56212,
                        "column_end": 65,
                        "column_start": 61,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1169,
                        "line_start": 1169,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 65,
                            "highlight_start": 61,
                            "text": "                /// Represents a single mipmap level of a `{name}`."
                          }
                        ]
                      },
                      {
                        "byte_end": 56293,
                        "byte_start": 56289,
                        "column_end": 54,
                        "column_start": 50,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1171,
                        "line_start": 1171,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 50,
                            "text": "                /// Can be obtained by calling `{name}::mipmap()`, `{name}::main_level()`,"
                          }
                        ]
                      },
                      {
                        "byte_end": 56313,
                        "byte_start": 56309,
                        "column_end": 74,
                        "column_start": 70,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1171,
                        "line_start": 1171,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 74,
                            "highlight_start": 70,
                            "text": "                /// Can be obtained by calling `{name}::mipmap()`, `{name}::main_level()`,"
                          }
                        ]
                      },
                      {
                        "byte_end": 56357,
                        "byte_start": 56353,
                        "column_end": 27,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1172,
                        "line_start": 1172,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 23,
                            "text": "                /// `{name}Layer::mipmap()` or `{name}Layer::main_level()`."
                          }
                        ]
                      },
                      {
                        "byte_end": 56384,
                        "byte_start": 56380,
                        "column_end": 54,
                        "column_start": 50,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1172,
                        "line_start": 1172,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 50,
                            "text": "                /// `{name}Layer::mipmap()` or `{name}Layer::main_level()`."
                          }
                        ]
                      },
                      {
                        "byte_end": 56478,
                        "byte_start": 56474,
                        "column_end": 33,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1174,
                        "line_start": 1174,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 29,
                            "text": "                pub struct {name}Mipmap<'t>(TextureAnyMipmap<'t>, &'t {name});"
                          }
                        ]
                      },
                      {
                        "byte_end": 56521,
                        "byte_start": 56517,
                        "column_end": 76,
                        "column_start": 72,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1174,
                        "line_start": 1174,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 76,
                            "highlight_start": 72,
                            "text": "                pub struct {name}Mipmap<'t>(TextureAnyMipmap<'t>, &'t {name});"
                          }
                        ]
                      },
                      {
                        "byte_end": 56578,
                        "byte_start": 56574,
                        "column_end": 53,
                        "column_start": 49,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1176,
                        "line_start": 1176,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 49,
                            "text": "                impl<'a> ::std::ops::Deref for {name}Mipmap<'a> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 56845,
                        "byte_start": 56832,
                        "column_end": 28,
                        "column_start": 15,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1184,
                        "line_start": 1184,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 15,
                            "text": "            \"#, name = name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 56846,
                    "byte_start": 56135,
                    "column_end": 29,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1184,
                    "line_start": 1168,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 10,
                        "text": "        (write!(dest, r#\""
                      },
                      {
                        "highlight_end": 68,
                        "highlight_start": 1,
                        "text": "                /// Represents a single mipmap level of a `{name}`."
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "                ///"
                      },
                      {
                        "highlight_end": 91,
                        "highlight_start": 1,
                        "text": "                /// Can be obtained by calling `{name}::mipmap()`, `{name}::main_level()`,"
                      },
                      {
                        "highlight_end": 76,
                        "highlight_start": 1,
                        "text": "                /// `{name}Layer::mipmap()` or `{name}Layer::main_level()`."
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "                #[derive(Copy, Clone)]"
                      },
                      {
                        "highlight_end": 79,
                        "highlight_start": 1,
                        "text": "                pub struct {name}Mipmap<'t>(TextureAnyMipmap<'t>, &'t {name});"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 67,
                        "highlight_start": 1,
                        "text": "                impl<'a> ::std::ops::Deref for {name}Mipmap<'a> {{"
                      },
                      {
                        "highlight_end": 56,
                        "highlight_start": 1,
                        "text": "                    type Target = TextureAnyMipmap<'a>;"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                    #[inline]"
                      },
                      {
                        "highlight_end": 64,
                        "highlight_start": 1,
                        "text": "                    fn deref(&self) -> &TextureAnyMipmap<'a> {{"
                      },
                      {
                        "highlight_end": 32,
                        "highlight_start": 1,
                        "text": "                        &self.0"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    }}"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "            \"#, name = name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1187:10\n     |\n1187 |         (writeln!(dest, \"impl<'t> {}Mipmap<'t> {{\", name)).unwrap();\n     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1187 -         (writeln!(dest, \"impl<'t> {}Mipmap<'t> {{\", name)).unwrap();\n1187 +         (writeln!(dest, \"impl<'t> {name}Mipmap<'t> {{\")).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 56933,
                        "byte_start": 56933,
                        "column_end": 36,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1187,
                        "line_start": 1187,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 36,
                            "text": "        (writeln!(dest, \"impl<'t> {}Mipmap<'t> {{\", name)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 56954,
                        "byte_start": 56948,
                        "column_end": 57,
                        "column_start": 51,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1187,
                        "line_start": 1187,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 57,
                            "highlight_start": 51,
                            "text": "        (writeln!(dest, \"impl<'t> {}Mipmap<'t> {{\", name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 56955,
                    "byte_start": 56907,
                    "column_end": 58,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1187,
                    "line_start": 1187,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 10,
                        "text": "        (writeln!(dest, \"impl<'t> {}Mipmap<'t> {{\", name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1209:14\n     |\n1209 |               (write!(dest, r#\"\n     |  ______________^\n1210 | |                     /// Uploads some data in the texture level.\n1211 | |                     ///\n1212 | |                     /// Note that this may cause a synchronization if you use the texture right before\n...    |\n1231 | |                 \"#, data_source_trait = data_source_trait,\n1232 | |                     compressed_restrictions = compressed_restrictions)).unwrap();\n     | |______________________________________________________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 58439,
                        "byte_start": 58416,
                        "column_end": 45,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1218,
                        "line_start": 1218,
                        "suggested_replacement": "compressed_restrictions",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 22,
                            "text": "                    {compressed_restrictions}"
                          }
                        ]
                      },
                      {
                        "byte_end": 58536,
                        "byte_start": 58519,
                        "column_end": 96,
                        "column_start": 79,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1219,
                        "line_start": 1219,
                        "suggested_replacement": "data_source_trait",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 96,
                            "highlight_start": 79,
                            "text": "                    pub fn write<'a, T>(&self, rect: Rect, data: T) where T: {data_source_trait}<'a> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 59169,
                        "byte_start": 59130,
                        "column_end": 58,
                        "column_start": 19,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1231,
                        "line_start": 1231,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 19,
                            "text": "                \"#, data_source_trait = data_source_trait,"
                          }
                        ]
                      },
                      {
                        "byte_end": 59240,
                        "byte_start": 59169,
                        "column_end": 70,
                        "column_start": 58,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1232,
                        "line_start": 1231,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 58,
                            "text": "                \"#, data_source_trait = data_source_trait,"
                          },
                          {
                            "highlight_end": 70,
                            "highlight_start": 1,
                            "text": "                    compressed_restrictions = compressed_restrictions)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 59241,
                    "byte_start": 57969,
                    "column_end": 71,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1232,
                    "line_start": 1209,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 14,
                        "text": "            (write!(dest, r#\""
                      },
                      {
                        "highlight_end": 64,
                        "highlight_start": 1,
                        "text": "                    /// Uploads some data in the texture level."
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                    ///"
                      },
                      {
                        "highlight_end": 103,
                        "highlight_start": 1,
                        "text": "                    /// Note that this may cause a synchronization if you use the texture right before"
                      },
                      {
                        "highlight_end": 50,
                        "highlight_start": 1,
                        "text": "                    /// or right after this call."
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                    ///"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "                    /// ## Panic"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                    ///"
                      },
                      {
                        "highlight_end": 87,
                        "highlight_start": 1,
                        "text": "                    /// Panics if the the dimensions of `data` don't match the `Rect`."
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                    {compressed_restrictions}"
                      },
                      {
                        "highlight_end": 104,
                        "highlight_start": 1,
                        "text": "                    pub fn write<'a, T>(&self, rect: Rect, data: T) where T: {data_source_trait}<'a> {{"
                      },
                      {
                        "highlight_end": 90,
                        "highlight_start": 1,
                        "text": "                        let RawImage2d {{ data, width, height, format: client_format }} ="
                      },
                      {
                        "highlight_end": 65,
                        "highlight_start": 1,
                        "text": "                                                data.into_raw();"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 55,
                        "highlight_start": 1,
                        "text": "                        assert_eq!(width, rect.width);"
                      },
                      {
                        "highlight_end": 57,
                        "highlight_start": 1,
                        "text": "                        assert_eq!(height, rect.height);"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 90,
                        "highlight_start": 1,
                        "text": "                        let client_format = ClientFormatAny::ClientFormat(client_format);"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 96,
                        "highlight_start": 1,
                        "text": "                        self.0.upload_texture(rect.left, rect.bottom, 0, (client_format, data),"
                      },
                      {
                        "highlight_end": 88,
                        "highlight_start": 1,
                        "text": "                                              width, Some(height), None, true).unwrap()"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    }}"
                      },
                      {
                        "highlight_end": 59,
                        "highlight_start": 1,
                        "text": "                \"#, data_source_trait = data_source_trait,"
                      },
                      {
                        "highlight_end": 71,
                        "highlight_start": 1,
                        "text": "                    compressed_restrictions = compressed_restrictions)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1239:14\n     |\n1239 |               (write!(dest, r#\"\n     |  ______________^\n1240 | |                     /// Uploads some data in the texture level by using a compressed format as input.\n1241 | |                     ///\n1242 | |                     /// Note that this may cause a synchronization if you use the texture right before\n...    |\n1269 | |                     }}\n1270 | |                 \"#, format = relevant_format, client_format_any = client_format_any_ty)).unwrap();\n     | |_______________________________________________________________________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1255 ~                                                  width: u32, height: u32, format: {relevant_format})\n1256 |                                                  -> Result<(), ()>\n ...\n1264 |                         let data = Cow::Borrowed(data.as_ref());\n1265 ~                         let client_format = {client_format_any_ty}(format);\n1266 |\n ...\n1269 |                     }}\n1270 ~                 \"#)).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 60646,
                        "byte_start": 60640,
                        "column_end": 90,
                        "column_start": 84,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1255,
                        "line_start": 1255,
                        "suggested_replacement": "relevant_format",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 90,
                            "highlight_start": 84,
                            "text": "                                                 width: u32, height: u32, format: {format})"
                          }
                        ]
                      },
                      {
                        "byte_end": 61130,
                        "byte_start": 61113,
                        "column_end": 63,
                        "column_start": 46,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1265,
                        "line_start": 1265,
                        "suggested_replacement": "client_format_any_ty",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 63,
                            "highlight_start": 46,
                            "text": "                        let client_format = {client_format_any}(format);"
                          }
                        ]
                      },
                      {
                        "byte_end": 61385,
                        "byte_start": 61359,
                        "column_end": 45,
                        "column_start": 19,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1270,
                        "line_start": 1270,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 19,
                            "text": "                \"#, format = relevant_format, client_format_any = client_format_any_ty)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 61427,
                        "byte_start": 61385,
                        "column_end": 87,
                        "column_start": 45,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1270,
                        "line_start": 1270,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 87,
                            "highlight_start": 45,
                            "text": "                \"#, format = relevant_format, client_format_any = client_format_any_ty)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 61428,
                    "byte_start": 59474,
                    "column_end": 88,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1270,
                    "line_start": 1239,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 14,
                        "text": "            (write!(dest, r#\""
                      },
                      {
                        "highlight_end": 102,
                        "highlight_start": 1,
                        "text": "                    /// Uploads some data in the texture level by using a compressed format as input."
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                    ///"
                      },
                      {
                        "highlight_end": 103,
                        "highlight_start": 1,
                        "text": "                    /// Note that this may cause a synchronization if you use the texture right before"
                      },
                      {
                        "highlight_end": 50,
                        "highlight_start": 1,
                        "text": "                    /// or right after this call."
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                    ///"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "                    /// ## Panic"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                    ///"
                      },
                      {
                        "highlight_end": 87,
                        "highlight_start": 1,
                        "text": "                    /// Panics if the the dimensions of `data` don't match the `Rect`."
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                    ///"
                      },
                      {
                        "highlight_end": 109,
                        "highlight_start": 1,
                        "text": "                    /// Calling this will result in a panic of type INVALID_OPERATION error if `Rect::width`"
                      },
                      {
                        "highlight_end": 112,
                        "highlight_start": 1,
                        "text": "                    /// or `Rect::height` is not equal to 0 (border), or if the written dimensions do not match"
                      },
                      {
                        "highlight_end": 111,
                        "highlight_start": 1,
                        "text": "                    /// the original texture dimensions. The contents of any texel outside the region modified"
                      },
                      {
                        "highlight_end": 109,
                        "highlight_start": 1,
                        "text": "                    /// by the call are undefined. These restrictions may be relaxed for specific compressed"
                      },
                      {
                        "highlight_end": 73,
                        "highlight_start": 1,
                        "text": "                    /// internal formats whose images are easily edited."
                      },
                      {
                        "highlight_end": 81,
                        "highlight_start": 1,
                        "text": "                    pub fn write_compressed_data(&self, rect: Rect, data: &[u8],"
                      },
                      {
                        "highlight_end": 92,
                        "highlight_start": 1,
                        "text": "                                                 width: u32, height: u32, format: {format})"
                      },
                      {
                        "highlight_end": 67,
                        "highlight_start": 1,
                        "text": "                                                 -> Result<(), ()>"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    {{"
                      },
                      {
                        "highlight_end": 100,
                        "highlight_start": 1,
                        "text": "                        // FIXME is having width and height as parameter redundant as rect kinda of"
                      },
                      {
                        "highlight_end": 50,
                        "highlight_start": 1,
                        "text": "                        // already provides them?"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 55,
                        "highlight_start": 1,
                        "text": "                        assert_eq!(width, rect.width);"
                      },
                      {
                        "highlight_end": 57,
                        "highlight_start": 1,
                        "text": "                        assert_eq!(height, rect.height);"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 65,
                        "highlight_start": 1,
                        "text": "                        let data = Cow::Borrowed(data.as_ref());"
                      },
                      {
                        "highlight_end": 73,
                        "highlight_start": 1,
                        "text": "                        let client_format = {client_format_any}(format);"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 96,
                        "highlight_start": 1,
                        "text": "                        self.0.upload_texture(rect.left, rect.bottom, 0, (client_format, data),"
                      },
                      {
                        "highlight_end": 80,
                        "highlight_start": 1,
                        "text": "                                              width, Some(height), None, false)"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    }}"
                      },
                      {
                        "highlight_end": 88,
                        "highlight_start": 1,
                        "text": "                \"#, format = relevant_format, client_format_any = client_format_any_ty)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1275:14\n     |\n1275 |               (write!(dest, r#\"\n     |  ______________^\n1276 | |                     /// Reads the content of the texture level to RAM without decompressing it before.\n1277 | |                     ///\n1278 | |                     /// You should avoid doing this at all cost during performance-critical\n...    |\n1290 | |                     }}\n1291 | |                 \"#, format = relevant_format, client_format_any = client_format_any_ty)).unwrap();\n     | |_______________________________________________________________________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1284 ~                     pub fn read_compressed_data(&self) -> Option<({relevant_format}, Vec<u8>)> {{\n1285 |                         match self.0.download_compressed_data() {{\n1286 ~                             Some(({client_format_any_ty}(format), buf)) => Some((format, buf)),\n1287 |                             None => None,\n ...\n1290 |                     }}\n1291 ~                 \"#)).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 62210,
                        "byte_start": 62204,
                        "column_end": 74,
                        "column_start": 68,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1284,
                        "line_start": 1284,
                        "suggested_replacement": "relevant_format",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 74,
                            "highlight_start": 68,
                            "text": "                    pub fn read_compressed_data(&self) -> Option<({format}, Vec<u8>)> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 62345,
                        "byte_start": 62328,
                        "column_end": 53,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1286,
                        "line_start": 1286,
                        "suggested_replacement": "client_format_any_ty",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 36,
                            "text": "                            Some(({client_format_any}(format), buf)) => Some((format, buf)),"
                          }
                        ]
                      },
                      {
                        "byte_end": 62571,
                        "byte_start": 62545,
                        "column_end": 45,
                        "column_start": 19,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1291,
                        "line_start": 1291,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 19,
                            "text": "                \"#, format = relevant_format, client_format_any = client_format_any_ty)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 62613,
                        "byte_start": 62571,
                        "column_end": 87,
                        "column_start": 45,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1291,
                        "line_start": 1291,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 87,
                            "highlight_start": 45,
                            "text": "                \"#, format = relevant_format, client_format_any = client_format_any_ty)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 62614,
                    "byte_start": 61584,
                    "column_end": 88,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1291,
                    "line_start": 1275,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 14,
                        "text": "            (write!(dest, r#\""
                      },
                      {
                        "highlight_end": 103,
                        "highlight_start": 1,
                        "text": "                    /// Reads the content of the texture level to RAM without decompressing it before."
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                    ///"
                      },
                      {
                        "highlight_end": 92,
                        "highlight_start": 1,
                        "text": "                    /// You should avoid doing this at all cost during performance-critical"
                      },
                      {
                        "highlight_end": 72,
                        "highlight_start": 1,
                        "text": "                    /// operations (for example, while you're drawing)."
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                    ///"
                      },
                      {
                        "highlight_end": 100,
                        "highlight_start": 1,
                        "text": "                    /// Returns the compressed format of the texture and the compressed data, gives"
                      },
                      {
                        "highlight_end": 91,
                        "highlight_start": 1,
                        "text": "                    /// `None` when the internal compression format is generic or unknown."
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                    #[inline]"
                      },
                      {
                        "highlight_end": 89,
                        "highlight_start": 1,
                        "text": "                    pub fn read_compressed_data(&self) -> Option<({format}, Vec<u8>)> {{"
                      },
                      {
                        "highlight_end": 67,
                        "highlight_start": 1,
                        "text": "                        match self.0.download_compressed_data() {{"
                      },
                      {
                        "highlight_end": 93,
                        "highlight_start": 1,
                        "text": "                            Some(({client_format_any}(format), buf)) => Some((format, buf)),"
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                            None => None,"
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "                            _ => unreachable!(),"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                        }}"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    }}"
                      },
                      {
                        "highlight_end": 88,
                        "highlight_start": 1,
                        "text": "                \"#, format = relevant_format, client_format_any = client_format_any_ty)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1295:10\n     |\n1295 |           (write!(dest, \"\n     |  __________^\n1296 | |                 /// Returns the corresponding texture.\n1297 | |                 #[inline]\n1298 | |                 pub fn get_texture(&self) -> &'t {name} {{\n...    |\n1306 | |                 }}\n1307 | |         \", name = name)).unwrap();\n     | |_______________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1298 |                 pub fn get_texture(&self) -> &'t {name} {{\n ...\n1306 |                 }}\n1307 ~         \")).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 62859,
                        "byte_start": 62855,
                        "column_end": 55,
                        "column_start": 51,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1298,
                        "line_start": 1298,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 55,
                            "highlight_start": 51,
                            "text": "                pub fn get_texture(&self) -> &'t {name} {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 63114,
                        "byte_start": 63101,
                        "column_end": 23,
                        "column_start": 10,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1307,
                        "line_start": 1307,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 10,
                            "text": "        \", name = name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 63115,
                    "byte_start": 62709,
                    "column_end": 24,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1307,
                    "line_start": 1295,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 10,
                        "text": "        (write!(dest, \""
                      },
                      {
                        "highlight_end": 55,
                        "highlight_start": 1,
                        "text": "                /// Returns the corresponding texture."
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                #[inline]"
                      },
                      {
                        "highlight_end": 59,
                        "highlight_start": 1,
                        "text": "                pub fn get_texture(&self) -> &'t {name} {{"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                    self.1"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 47,
                        "highlight_start": 1,
                        "text": "                /// Returns the texture level."
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                #[inline]"
                      },
                      {
                        "highlight_end": 50,
                        "highlight_start": 1,
                        "text": "                pub fn get_level(&self) -> u32 {{"
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "                    self.0.get_level()"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "        \", name = name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1310:14\n     |\n1310 |               (write!(dest, \"\n     |  ______________^\n1311 | |                     /// Access the first layer of this texture.\n1312 | |                     #[inline]\n1313 | |                     pub fn first_layer(&self) -> {name}LayerMipmap<'t> {{\n...    |\n1321 | |                     }}\n1322 | |                 \", name = name)).unwrap();\n     | |_______________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1313 |                     pub fn first_layer(&self) -> {name}LayerMipmap<'t> {{\n ...\n1321 |                     }}\n1322 ~                 \")).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 63339,
                        "byte_start": 63335,
                        "column_end": 55,
                        "column_start": 51,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1313,
                        "line_start": 1313,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 55,
                            "highlight_start": 51,
                            "text": "                    pub fn first_layer(&self) -> {name}LayerMipmap<'t> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 63590,
                        "byte_start": 63586,
                        "column_end": 68,
                        "column_start": 64,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1319,
                        "line_start": 1319,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 68,
                            "highlight_start": 64,
                            "text": "                    pub fn layer(&self, layer: u32) -> Option<{name}LayerMipmap<'t>> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 63668,
                        "byte_start": 63664,
                        "column_end": 58,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1320,
                        "line_start": 1320,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 54,
                            "text": "                        self.0.layer(layer).map(|l| {name}LayerMipmap(l, self.1))"
                          }
                        ]
                      },
                      {
                        "byte_end": 63746,
                        "byte_start": 63733,
                        "column_end": 31,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1322,
                        "line_start": 1322,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 31,
                            "highlight_start": 18,
                            "text": "                \", name = name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 63747,
                    "byte_start": 63176,
                    "column_end": 32,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1322,
                    "line_start": 1310,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 14,
                        "text": "            (write!(dest, \""
                      },
                      {
                        "highlight_end": 64,
                        "highlight_start": 1,
                        "text": "                    /// Access the first layer of this texture."
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                    #[inline]"
                      },
                      {
                        "highlight_end": 74,
                        "highlight_start": 1,
                        "text": "                    pub fn first_layer(&self) -> {name}LayerMipmap<'t> {{"
                      },
                      {
                        "highlight_end": 47,
                        "highlight_start": 1,
                        "text": "                        self.layer(0).unwrap()"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    }}"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 63,
                        "highlight_start": 1,
                        "text": "                    /// Access a single layer of this texture."
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                    #[inline]"
                      },
                      {
                        "highlight_end": 88,
                        "highlight_start": 1,
                        "text": "                    pub fn layer(&self, layer: u32) -> Option<{name}LayerMipmap<'t>> {{"
                      },
                      {
                        "highlight_end": 82,
                        "highlight_start": 1,
                        "text": "                        self.0.layer(layer).map(|l| {name}LayerMipmap(l, self.1))"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    }}"
                      },
                      {
                        "highlight_end": 32,
                        "highlight_start": 1,
                        "text": "                \", name = name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1326:13\n     |\n1326 | /             writeln!(dest,\n1327 | |                 \"/// Provides an object representing a single layer of this cubemap.\n1328 | |                 pub fn image(&self, layer: CubeLayer) -> {name}Image<'t> {{\n1329 | |                     {name}Image(self.0.first_layer().into_image(Some(layer)).unwrap(), self.1)\n1330 | |                 }}\", name = name).unwrap();\n     | |_________________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1328 |                 pub fn image(&self, layer: CubeLayer) -> {name}Image<'t> {{\n1329 |                     {name}Image(self.0.first_layer().into_image(Some(layer)).unwrap(), self.1)\n1330 ~                 }}\").unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 64004,
                        "byte_start": 64000,
                        "column_end": 63,
                        "column_start": 59,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1328,
                        "line_start": 1328,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 63,
                            "highlight_start": 59,
                            "text": "                pub fn image(&self, layer: CubeLayer) -> {name}Image<'t> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 64043,
                        "byte_start": 64039,
                        "column_end": 26,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1329,
                        "line_start": 1329,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 22,
                            "text": "                    {name}Image(self.0.first_layer().into_image(Some(layer)).unwrap(), self.1)"
                          }
                        ]
                      },
                      {
                        "byte_end": 64145,
                        "byte_start": 64132,
                        "column_end": 33,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1330,
                        "line_start": 1330,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 20,
                            "text": "                }}\", name = name).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 64146,
                    "byte_start": 63842,
                    "column_end": 34,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1330,
                    "line_start": 1326,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 13,
                        "text": "            writeln!(dest,"
                      },
                      {
                        "highlight_end": 85,
                        "highlight_start": 1,
                        "text": "                \"/// Provides an object representing a single layer of this cubemap."
                      },
                      {
                        "highlight_end": 76,
                        "highlight_start": 1,
                        "text": "                pub fn image(&self, layer: CubeLayer) -> {name}Image<'t> {{"
                      },
                      {
                        "highlight_end": 95,
                        "highlight_start": 1,
                        "text": "                    {name}Image(self.0.first_layer().into_image(Some(layer)).unwrap(), self.1)"
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "                }}\", name = name).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1338:14\n     |\n1338 |               (writeln!(dest, \"impl<'t> Into<TextureAnyImage<'t>> for {name}Mipmap<'t> {{\n     |  ______________^\n1339 | |                                 fn into(self) -> TextureAnyImage<'t> {{\n1340 | |                                     self.0.first_layer().into_image(None).unwrap()\n1341 | |                                 }}\n1342 | |                              }}\", name = name)).unwrap();\n     | |______________________________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1338 |             (writeln!(dest, \"impl<'t> Into<TextureAnyImage<'t>> for {name}Mipmap<'t> {{\n ...\n1341 |                                 }}\n1342 ~                              }}\")).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 64413,
                        "byte_start": 64409,
                        "column_end": 74,
                        "column_start": 70,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1338,
                        "line_start": 1338,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 74,
                            "highlight_start": 70,
                            "text": "            (writeln!(dest, \"impl<'t> Into<TextureAnyImage<'t>> for {name}Mipmap<'t> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 64663,
                        "byte_start": 64650,
                        "column_end": 46,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1342,
                        "line_start": 1342,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 33,
                            "text": "                             }}\", name = name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 64664,
                    "byte_start": 64353,
                    "column_end": 47,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1342,
                    "line_start": 1338,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 88,
                        "highlight_start": 14,
                        "text": "            (writeln!(dest, \"impl<'t> Into<TextureAnyImage<'t>> for {name}Mipmap<'t> {{"
                      },
                      {
                        "highlight_end": 72,
                        "highlight_start": 1,
                        "text": "                                fn into(self) -> TextureAnyImage<'t> {{"
                      },
                      {
                        "highlight_end": 83,
                        "highlight_start": 1,
                        "text": "                                    self.0.first_layer().into_image(None).unwrap()"
                      },
                      {
                        "highlight_end": 35,
                        "highlight_start": 1,
                        "text": "                                }}"
                      },
                      {
                        "highlight_end": 47,
                        "highlight_start": 1,
                        "text": "                             }}\", name = name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1349:10\n     |\n1349 |           (write!(dest, r#\"\n     |  __________^\n1350 | |                 /// Represents a single layer of a mipmap level of a `{name}`.\n1351 | |                 #[derive(Copy, Clone)]\n1352 | |                 pub struct {name}LayerMipmap<'t>(TextureAnyLayerMipmap<'t>, &'t {name});\n1353 | |             \"#, name = name)).unwrap();\n     | |____________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1350 |                 /// Represents a single layer of a mipmap level of a `{name}`.\n1351 |                 #[derive(Copy, Clone)]\n1352 |                 pub struct {name}LayerMipmap<'t>(TextureAnyLayerMipmap<'t>, &'t {name});\n1353 ~             \"#)).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 64887,
                        "byte_start": 64883,
                        "column_end": 76,
                        "column_start": 72,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1350,
                        "line_start": 1350,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 76,
                            "highlight_start": 72,
                            "text": "                /// Represents a single layer of a mipmap level of a `{name}`."
                          }
                        ]
                      },
                      {
                        "byte_end": 64962,
                        "byte_start": 64958,
                        "column_end": 33,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1352,
                        "line_start": 1352,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 29,
                            "text": "                pub struct {name}LayerMipmap<'t>(TextureAnyLayerMipmap<'t>, &'t {name});"
                          }
                        ]
                      },
                      {
                        "byte_end": 65015,
                        "byte_start": 65011,
                        "column_end": 86,
                        "column_start": 82,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1352,
                        "line_start": 1352,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 86,
                            "highlight_start": 82,
                            "text": "                pub struct {name}LayerMipmap<'t>(TextureAnyLayerMipmap<'t>, &'t {name});"
                          }
                        ]
                      },
                      {
                        "byte_end": 65046,
                        "byte_start": 65033,
                        "column_end": 28,
                        "column_start": 15,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1353,
                        "line_start": 1353,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 15,
                            "text": "            \"#, name = name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 65047,
                    "byte_start": 64795,
                    "column_end": 29,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1353,
                    "line_start": 1349,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 10,
                        "text": "        (write!(dest, r#\""
                      },
                      {
                        "highlight_end": 79,
                        "highlight_start": 1,
                        "text": "                /// Represents a single layer of a mipmap level of a `{name}`."
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "                #[derive(Copy, Clone)]"
                      },
                      {
                        "highlight_end": 89,
                        "highlight_start": 1,
                        "text": "                pub struct {name}LayerMipmap<'t>(TextureAnyLayerMipmap<'t>, &'t {name});"
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "            \"#, name = name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1356:10\n     |\n1356 |         (writeln!(dest, \"impl<'t> {}LayerMipmap<'t> {{\", name)).unwrap();\n     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1356 -         (writeln!(dest, \"impl<'t> {}LayerMipmap<'t> {{\", name)).unwrap();\n1356 +         (writeln!(dest, \"impl<'t> {name}LayerMipmap<'t> {{\")).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 65139,
                        "byte_start": 65139,
                        "column_end": 36,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1356,
                        "line_start": 1356,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 36,
                            "text": "        (writeln!(dest, \"impl<'t> {}LayerMipmap<'t> {{\", name)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 65165,
                        "byte_start": 65159,
                        "column_end": 62,
                        "column_start": 56,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1356,
                        "line_start": 1356,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 62,
                            "highlight_start": 56,
                            "text": "        (writeln!(dest, \"impl<'t> {}LayerMipmap<'t> {{\", name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 65166,
                    "byte_start": 65113,
                    "column_end": 63,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1356,
                    "line_start": 1356,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 63,
                        "highlight_start": 10,
                        "text": "        (writeln!(dest, \"impl<'t> {}LayerMipmap<'t> {{\", name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1363:13\n     |\n1363 | /             writeln!(dest,\n1364 | |                 \"/// Provides an object representing a single layer of this cubemap.\n1365 | |                 pub fn image(&self, layer: CubeLayer) -> {name}Image<'t> {{\n1366 | |                     {name}Image(self.0.into_image(Some(layer)).unwrap(), self.1)\n1367 | |                 }}\", name = name).unwrap();\n     | |_________________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1365 |                 pub fn image(&self, layer: CubeLayer) -> {name}Image<'t> {{\n1366 |                     {name}Image(self.0.into_image(Some(layer)).unwrap(), self.1)\n1367 ~                 }}\").unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 65518,
                        "byte_start": 65514,
                        "column_end": 63,
                        "column_start": 59,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1365,
                        "line_start": 1365,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 63,
                            "highlight_start": 59,
                            "text": "                pub fn image(&self, layer: CubeLayer) -> {name}Image<'t> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 65557,
                        "byte_start": 65553,
                        "column_end": 26,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1366,
                        "line_start": 1366,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 22,
                            "text": "                    {name}Image(self.0.into_image(Some(layer)).unwrap(), self.1)"
                          }
                        ]
                      },
                      {
                        "byte_end": 65645,
                        "byte_start": 65632,
                        "column_end": 33,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1367,
                        "line_start": 1367,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 20,
                            "text": "                }}\", name = name).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 65646,
                    "byte_start": 65356,
                    "column_end": 34,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1367,
                    "line_start": 1363,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 13,
                        "text": "            writeln!(dest,"
                      },
                      {
                        "highlight_end": 85,
                        "highlight_start": 1,
                        "text": "                \"/// Provides an object representing a single layer of this cubemap."
                      },
                      {
                        "highlight_end": 76,
                        "highlight_start": 1,
                        "text": "                pub fn image(&self, layer: CubeLayer) -> {name}Image<'t> {{"
                      },
                      {
                        "highlight_end": 81,
                        "highlight_start": 1,
                        "text": "                    {name}Image(self.0.into_image(Some(layer)).unwrap(), self.1)"
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "                }}\", name = name).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1376:14\n     |\n1376 |               (writeln!(dest, \"impl<'t> Into<TextureAnyImage<'t>> for {name}LayerMipmap<'t> {{\n     |  ______________^\n1377 | |                                 fn into(self) -> TextureAnyImage<'t> {{\n1378 | |                                     self.0.into_image(None).unwrap()\n1379 | |                                 }}\n1380 | |                              }}\", name = name)).unwrap();\n     | |______________________________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1376 |             (writeln!(dest, \"impl<'t> Into<TextureAnyImage<'t>> for {name}LayerMipmap<'t> {{\n ...\n1379 |                                 }}\n1380 ~                              }}\")).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 65921,
                        "byte_start": 65917,
                        "column_end": 74,
                        "column_start": 70,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1376,
                        "line_start": 1376,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 74,
                            "highlight_start": 70,
                            "text": "            (writeln!(dest, \"impl<'t> Into<TextureAnyImage<'t>> for {name}LayerMipmap<'t> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 66162,
                        "byte_start": 66149,
                        "column_end": 46,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1380,
                        "line_start": 1380,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 33,
                            "text": "                             }}\", name = name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 66163,
                    "byte_start": 65861,
                    "column_end": 47,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1380,
                    "line_start": 1376,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 93,
                        "highlight_start": 14,
                        "text": "            (writeln!(dest, \"impl<'t> Into<TextureAnyImage<'t>> for {name}LayerMipmap<'t> {{"
                      },
                      {
                        "highlight_end": 72,
                        "highlight_start": 1,
                        "text": "                                fn into(self) -> TextureAnyImage<'t> {{"
                      },
                      {
                        "highlight_end": 69,
                        "highlight_start": 1,
                        "text": "                                    self.0.into_image(None).unwrap()"
                      },
                      {
                        "highlight_end": 35,
                        "highlight_start": 1,
                        "text": "                                }}"
                      },
                      {
                        "highlight_end": 47,
                        "highlight_start": 1,
                        "text": "                             }}\", name = name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1387:10\n     |\n1387 |           (write!(dest, r#\"\n     |  __________^\n1388 | |                 /// Represents a single image of a mipmap level of a layer of `{name}`.\n1389 | |                 #[derive(Copy, Clone)]\n1390 | |                 pub struct {name}Image<'t>(TextureAnyImage<'t>, &'t {name});\n1391 | |             \"#, name = name)).unwrap();\n     | |____________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1388 |                 /// Represents a single image of a mipmap level of a layer of `{name}`.\n1389 |                 #[derive(Copy, Clone)]\n1390 |                 pub struct {name}Image<'t>(TextureAnyImage<'t>, &'t {name});\n1391 ~             \"#)).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 66407,
                        "byte_start": 66403,
                        "column_end": 85,
                        "column_start": 81,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1388,
                        "line_start": 1388,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 85,
                            "highlight_start": 81,
                            "text": "                /// Represents a single image of a mipmap level of a layer of `{name}`."
                          }
                        ]
                      },
                      {
                        "byte_end": 66482,
                        "byte_start": 66478,
                        "column_end": 33,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1390,
                        "line_start": 1390,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 29,
                            "text": "                pub struct {name}Image<'t>(TextureAnyImage<'t>, &'t {name});"
                          }
                        ]
                      },
                      {
                        "byte_end": 66523,
                        "byte_start": 66519,
                        "column_end": 74,
                        "column_start": 70,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1390,
                        "line_start": 1390,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 74,
                            "highlight_start": 70,
                            "text": "                pub struct {name}Image<'t>(TextureAnyImage<'t>, &'t {name});"
                          }
                        ]
                      },
                      {
                        "byte_end": 66554,
                        "byte_start": 66541,
                        "column_end": 28,
                        "column_start": 15,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1391,
                        "line_start": 1391,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 15,
                            "text": "            \"#, name = name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 66555,
                    "byte_start": 66306,
                    "column_end": 29,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1391,
                    "line_start": 1387,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 10,
                        "text": "        (write!(dest, r#\""
                      },
                      {
                        "highlight_end": 88,
                        "highlight_start": 1,
                        "text": "                /// Represents a single image of a mipmap level of a layer of `{name}`."
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "                #[derive(Copy, Clone)]"
                      },
                      {
                        "highlight_end": 77,
                        "highlight_start": 1,
                        "text": "                pub struct {name}Image<'t>(TextureAnyImage<'t>, &'t {name});"
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "            \"#, name = name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1394:10\n     |\n1394 |         (writeln!(dest, \"impl<'t> {}Image<'t> {{\", name)).unwrap();\n     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1394 -         (writeln!(dest, \"impl<'t> {}Image<'t> {{\", name)).unwrap();\n1394 +         (writeln!(dest, \"impl<'t> {name}Image<'t> {{\")).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 66641,
                        "byte_start": 66641,
                        "column_end": 36,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1394,
                        "line_start": 1394,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 36,
                            "text": "        (writeln!(dest, \"impl<'t> {}Image<'t> {{\", name)).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 66661,
                        "byte_start": 66655,
                        "column_end": 56,
                        "column_start": 50,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1394,
                        "line_start": 1394,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 56,
                            "highlight_start": 50,
                            "text": "        (writeln!(dest, \"impl<'t> {}Image<'t> {{\", name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 66662,
                    "byte_start": 66615,
                    "column_end": 57,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1394,
                    "line_start": 1394,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 10,
                        "text": "        (writeln!(dest, \"impl<'t> {}Image<'t> {{\", name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1403:10\n     |\n1403 |           (writeln!(dest, \"impl<'t> Into<TextureAnyImage<'t>> for {name}Image<'t> {{\n     |  __________^\n1404 | |                             fn into(self) -> TextureAnyImage<'t> {{\n1405 | |                                 self.0\n1406 | |                             }}\n1407 | |                          }}\", name = name)).unwrap();\n     | |__________________________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1403 |         (writeln!(dest, \"impl<'t> Into<TextureAnyImage<'t>> for {name}Image<'t> {{\n ...\n1406 |                             }}\n1407 ~                          }}\")).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 66950,
                        "byte_start": 66946,
                        "column_end": 70,
                        "column_start": 66,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1403,
                        "line_start": 1403,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 70,
                            "highlight_start": 66,
                            "text": "        (writeln!(dest, \"impl<'t> Into<TextureAnyImage<'t>> for {name}Image<'t> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 67143,
                        "byte_start": 67130,
                        "column_end": 42,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1407,
                        "line_start": 1407,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 29,
                            "text": "                         }}\", name = name)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 67144,
                    "byte_start": 66890,
                    "column_end": 43,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1407,
                    "line_start": 1403,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 83,
                        "highlight_start": 10,
                        "text": "        (writeln!(dest, \"impl<'t> Into<TextureAnyImage<'t>> for {name}Image<'t> {{"
                      },
                      {
                        "highlight_end": 68,
                        "highlight_start": 1,
                        "text": "                            fn into(self) -> TextureAnyImage<'t> {{"
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "                                self.0"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                            }}"
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "                         }}\", name = name)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1413:13\n     |\n1413 |             format!(\"{}Image\", name)\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1413 -             format!(\"{}Image\", name)\n1413 +             format!(\"{name}Image\")\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 67287,
                        "byte_start": 67287,
                        "column_end": 23,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1413,
                        "line_start": 1413,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 23,
                            "text": "            format!(\"{}Image\", name)"
                          }
                        ]
                      },
                      {
                        "byte_end": 67300,
                        "byte_start": 67294,
                        "column_end": 36,
                        "column_start": 30,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1413,
                        "line_start": 1413,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 30,
                            "text": "            format!(\"{}Image\", name)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 67301,
                    "byte_start": 67277,
                    "column_end": 37,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1413,
                    "line_start": 1413,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 13,
                        "text": "            format!(\"{}Image\", name)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1415:13\n     |\n1415 |             format!(\"{}LayerMipmap\", name)\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1415 -             format!(\"{}LayerMipmap\", name)\n1415 +             format!(\"{name}LayerMipmap\")\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 67366,
                        "byte_start": 67366,
                        "column_end": 23,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1415,
                        "line_start": 1415,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 23,
                            "text": "            format!(\"{}LayerMipmap\", name)"
                          }
                        ]
                      },
                      {
                        "byte_end": 67385,
                        "byte_start": 67379,
                        "column_end": 42,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1415,
                        "line_start": 1415,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 36,
                            "text": "            format!(\"{}LayerMipmap\", name)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 67386,
                    "byte_start": 67356,
                    "column_end": 43,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1415,
                    "line_start": 1415,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 43,
                        "highlight_start": 13,
                        "text": "            format!(\"{}LayerMipmap\", name)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1417:13\n     |\n1417 |             format!(\"{}Mipmap\", name)\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1417 -             format!(\"{}Mipmap\", name)\n1417 +             format!(\"{name}Mipmap\")\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 67426,
                        "byte_start": 67426,
                        "column_end": 23,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1417,
                        "line_start": 1417,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 23,
                            "text": "            format!(\"{}Mipmap\", name)"
                          }
                        ]
                      },
                      {
                        "byte_end": 67440,
                        "byte_start": 67434,
                        "column_end": 37,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1417,
                        "line_start": 1417,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 37,
                            "highlight_start": 31,
                            "text": "            format!(\"{}Mipmap\", name)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 67441,
                    "byte_start": 67416,
                    "column_end": 38,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1417,
                    "line_start": 1417,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 13,
                        "text": "            format!(\"{}Mipmap\", name)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1422:18\n     |\n1422 |                   (writeln!(dest, \"\n     |  __________________^\n1423 | |                         impl<'t> crate::framebuffer::ToColorAttachment<'t> for {ty}<'t> {{\n1424 | |                             #[inline]\n1425 | |                             fn to_color_attachment(self) -> crate::framebuffer::ColorAttachment<'t> {{\n...    |\n1428 | |                         }}\n1429 | |                     \", ty = attachment_type)).unwrap();\n     | |____________________________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1423 ~                         impl<'t> crate::framebuffer::ToColorAttachment<'t> for {attachment_type}<'t> {{\n1424 |                             #[inline]\n ...\n1428 |                         }}\n1429 ~                     \")).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 67695,
                        "byte_start": 67693,
                        "column_end": 83,
                        "column_start": 81,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1423,
                        "line_start": 1423,
                        "suggested_replacement": "attachment_type",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 83,
                            "highlight_start": 81,
                            "text": "                        impl<'t> crate::framebuffer::ToColorAttachment<'t> for {ty}<'t> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 68036,
                        "byte_start": 68014,
                        "column_end": 44,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1429,
                        "line_start": 1429,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 22,
                            "text": "                    \", ty = attachment_type)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 68037,
                    "byte_start": 67596,
                    "column_end": 45,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1429,
                    "line_start": 1422,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 18,
                        "text": "                (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 91,
                        "highlight_start": 1,
                        "text": "                        impl<'t> crate::framebuffer::ToColorAttachment<'t> for {ty}<'t> {{"
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "                            #[inline]"
                      },
                      {
                        "highlight_end": 103,
                        "highlight_start": 1,
                        "text": "                            fn to_color_attachment(self) -> crate::framebuffer::ColorAttachment<'t> {{"
                      },
                      {
                        "highlight_end": 90,
                        "highlight_start": 1,
                        "text": "                                crate::framebuffer::ColorAttachment::Texture(self.into())"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                            }}"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                        }}"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                    \", ty = attachment_type)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1432:18\n     |\n1432 |                   (writeln!(dest, \"\n     |  __________________^\n1433 | |                         impl<'t> crate::framebuffer::ToDepthAttachment<'t> for {ty}<'t> {{\n1434 | |                             #[inline]\n1435 | |                             fn to_depth_attachment(self) -> crate::framebuffer::DepthAttachment<'t> {{\n...    |\n1438 | |                         }}\n1439 | |                     \", ty = attachment_type)).unwrap();\n     | |____________________________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1433 ~                         impl<'t> crate::framebuffer::ToDepthAttachment<'t> for {attachment_type}<'t> {{\n1434 |                             #[inline]\n ...\n1438 |                         }}\n1439 ~                     \")).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 68216,
                        "byte_start": 68214,
                        "column_end": 83,
                        "column_start": 81,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1433,
                        "line_start": 1433,
                        "suggested_replacement": "attachment_type",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 83,
                            "highlight_start": 81,
                            "text": "                        impl<'t> crate::framebuffer::ToDepthAttachment<'t> for {ty}<'t> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 68557,
                        "byte_start": 68535,
                        "column_end": 44,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1439,
                        "line_start": 1439,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 22,
                            "text": "                    \", ty = attachment_type)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 68558,
                    "byte_start": 68117,
                    "column_end": 45,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1439,
                    "line_start": 1432,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 18,
                        "text": "                (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 91,
                        "highlight_start": 1,
                        "text": "                        impl<'t> crate::framebuffer::ToDepthAttachment<'t> for {ty}<'t> {{"
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "                            #[inline]"
                      },
                      {
                        "highlight_end": 103,
                        "highlight_start": 1,
                        "text": "                            fn to_depth_attachment(self) -> crate::framebuffer::DepthAttachment<'t> {{"
                      },
                      {
                        "highlight_end": 90,
                        "highlight_start": 1,
                        "text": "                                crate::framebuffer::DepthAttachment::Texture(self.into())"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                            }}"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                        }}"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                    \", ty = attachment_type)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1442:18\n     |\n1442 |                   (writeln!(dest, \"\n     |  __________________^\n1443 | |                         impl<'t> crate::framebuffer::ToStencilAttachment<'t> for {ty}<'t> {{\n1444 | |                             #[inline]\n1445 | |                             fn to_stencil_attachment(self) -> crate::framebuffer::StencilAttachment<'t> {{\n...    |\n1448 | |                         }}\n1449 | |                     \", ty = attachment_type)).unwrap();\n     | |____________________________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1443 ~                         impl<'t> crate::framebuffer::ToStencilAttachment<'t> for {attachment_type}<'t> {{\n1444 |                             #[inline]\n ...\n1448 |                         }}\n1449 ~                     \")).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 68741,
                        "byte_start": 68739,
                        "column_end": 85,
                        "column_start": 83,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1443,
                        "line_start": 1443,
                        "suggested_replacement": "attachment_type",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 85,
                            "highlight_start": 83,
                            "text": "                        impl<'t> crate::framebuffer::ToStencilAttachment<'t> for {ty}<'t> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 69088,
                        "byte_start": 69066,
                        "column_end": 44,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1449,
                        "line_start": 1449,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 22,
                            "text": "                    \", ty = attachment_type)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 69089,
                    "byte_start": 68640,
                    "column_end": 45,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1449,
                    "line_start": 1442,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 18,
                        "text": "                (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 93,
                        "highlight_start": 1,
                        "text": "                        impl<'t> crate::framebuffer::ToStencilAttachment<'t> for {ty}<'t> {{"
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "                            #[inline]"
                      },
                      {
                        "highlight_end": 107,
                        "highlight_start": 1,
                        "text": "                            fn to_stencil_attachment(self) -> crate::framebuffer::StencilAttachment<'t> {{"
                      },
                      {
                        "highlight_end": 92,
                        "highlight_start": 1,
                        "text": "                                crate::framebuffer::StencilAttachment::Texture(self.into())"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                            }}"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                        }}"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                    \", ty = attachment_type)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1452:18\n     |\n1452 |                   (writeln!(dest, \"\n     |  __________________^\n1453 | |                         impl<'t> crate::framebuffer::ToDepthStencilAttachment<'t> for {ty}<'t> {{\n1454 | |                             #[inline]\n1455 | |                             fn to_depth_stencil_attachment(self) -> crate::framebuffer::DepthStencilAttachment<'t> {{\n...    |\n1458 | |                         }}\n1459 | |                     \", ty = attachment_type)).unwrap();\n     | |____________________________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1453 ~                         impl<'t> crate::framebuffer::ToDepthStencilAttachment<'t> for {attachment_type}<'t> {{\n1454 |                             #[inline]\n ...\n1458 |                         }}\n1459 ~                     \")).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 69282,
                        "byte_start": 69280,
                        "column_end": 90,
                        "column_start": 88,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1453,
                        "line_start": 1453,
                        "suggested_replacement": "attachment_type",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 90,
                            "highlight_start": 88,
                            "text": "                        impl<'t> crate::framebuffer::ToDepthStencilAttachment<'t> for {ty}<'t> {{"
                          }
                        ]
                      },
                      {
                        "byte_end": 69645,
                        "byte_start": 69623,
                        "column_end": 44,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1459,
                        "line_start": 1459,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 22,
                            "text": "                    \", ty = attachment_type)).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 69646,
                    "byte_start": 69176,
                    "column_end": 45,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1459,
                    "line_start": 1452,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 18,
                        "text": "                (writeln!(dest, \""
                      },
                      {
                        "highlight_end": 98,
                        "highlight_start": 1,
                        "text": "                        impl<'t> crate::framebuffer::ToDepthStencilAttachment<'t> for {ty}<'t> {{"
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "                            #[inline]"
                      },
                      {
                        "highlight_end": 118,
                        "highlight_start": 1,
                        "text": "                            fn to_depth_stencil_attachment(self) -> crate::framebuffer::DepthStencilAttachment<'t> {{"
                      },
                      {
                        "highlight_end": 97,
                        "highlight_start": 1,
                        "text": "                                crate::framebuffer::DepthStencilAttachment::Texture(self.into())"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                            }}"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                        }}"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                    \", ty = attachment_type)).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1472:5\n     |\n1472 | /     writeln!(dest, r#\"\n1473 | |         /// Returns the width of that image.\n1474 | |         #[inline]\n1475 | |         pub fn width(&self) -> u32 {{\n1476 | |             {}.get_width()\n1477 | |         }}\n1478 | |     \"#, accessor).unwrap();\n     | |_________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1476 ~             {accessor}.get_width()\n1477 |         }}\n1478 ~     \"#).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 70078,
                        "byte_start": 70078,
                        "column_end": 14,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1476,
                        "line_start": 1476,
                        "suggested_replacement": "accessor",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 14,
                            "highlight_start": 14,
                            "text": "            {}.get_width()"
                          }
                        ]
                      },
                      {
                        "byte_end": 70119,
                        "byte_start": 70109,
                        "column_end": 17,
                        "column_start": 7,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1478,
                        "line_start": 1478,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 7,
                            "text": "    \"#, accessor).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 70120,
                    "byte_start": 69945,
                    "column_end": 18,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1478,
                    "line_start": 1472,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 5,
                        "text": "    writeln!(dest, r#\""
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "        /// Returns the width of that image."
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "        #[inline]"
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "        pub fn width(&self) -> u32 {{"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "            {}.get_width()"
                      },
                      {
                        "highlight_end": 11,
                        "highlight_start": 1,
                        "text": "        }}"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "    \"#, accessor).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1485:13\n     |\n1485 | /             writeln!(dest, r#\"\n1486 | |                 /// Returns the height of that image.\n1487 | |                 #[inline]\n1488 | |                 pub fn height(&self) -> u32 {{\n1489 | |                     {}.get_height().unwrap()\n1490 | |                 }}\n1491 | |             \"#, accessor).unwrap();\n     | |_________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1489 ~                     {accessor}.get_height().unwrap()\n1490 |                 }}\n1491 ~             \"#).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 70619,
                        "byte_start": 70619,
                        "column_end": 22,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1489,
                        "line_start": 1489,
                        "suggested_replacement": "accessor",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 22,
                            "highlight_start": 22,
                            "text": "                    {}.get_height().unwrap()"
                          }
                        ]
                      },
                      {
                        "byte_end": 70686,
                        "byte_start": 70676,
                        "column_end": 25,
                        "column_start": 15,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1491,
                        "line_start": 1491,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 25,
                            "highlight_start": 15,
                            "text": "            \"#, accessor).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 70687,
                    "byte_start": 70452,
                    "column_end": 26,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1491,
                    "line_start": 1485,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 13,
                        "text": "            writeln!(dest, r#\""
                      },
                      {
                        "highlight_end": 54,
                        "highlight_start": 1,
                        "text": "                /// Returns the height of that image."
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                #[inline]"
                      },
                      {
                        "highlight_end": 47,
                        "highlight_start": 1,
                        "text": "                pub fn height(&self) -> u32 {{"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                    {}.get_height().unwrap()"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "            \"#, accessor).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: you seem to be trying to use `match` for an equality check. Consider using `if`\n    --> build\\textures.rs:1496:5\n     |\n1496 | /     match dimensions {\n1497 | |         TextureDimensions::Texture3d => {\n1498 | |             writeln!(dest, r#\"\n1499 | |                 /// Returns the depth of that image.\n...    |\n1506 | |         _ => ()\n1507 | |     };\n     | |_____^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n     = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n     |\n1496 ~     if dimensions == TextureDimensions::Texture3d {\n1497 +         writeln!(dest, r#\"\n1498 +             /// Returns the depth of that image.\n1499 +             #[inline]\n1500 +             pub fn depth(&self) -> u32 {{\n1501 +                 {}.get_depth().unwrap()\n1502 +             }}\n1503 +         \"#, accessor).unwrap();\n1504 ~     };\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::single_match)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 71085,
                        "byte_start": 70737,
                        "column_end": 6,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1507,
                        "line_start": 1496,
                        "suggested_replacement": "if dimensions == TextureDimensions::Texture3d {\n        writeln!(dest, r#\"\n            /// Returns the depth of that image.\n            #[inline]\n            pub fn depth(&self) -> u32 {{\n                {}.get_depth().unwrap()\n            }}\n        \"#, accessor).unwrap();\n    }",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 5,
                            "text": "    match dimensions {"
                          },
                          {
                            "highlight_end": 42,
                            "highlight_start": 1,
                            "text": "        TextureDimensions::Texture3d => {"
                          },
                          {
                            "highlight_end": 31,
                            "highlight_start": 1,
                            "text": "            writeln!(dest, r#\""
                          },
                          {
                            "highlight_end": 53,
                            "highlight_start": 1,
                            "text": "                /// Returns the depth of that image."
                          },
                          {
                            "highlight_end": 26,
                            "highlight_start": 1,
                            "text": "                #[inline]"
                          },
                          {
                            "highlight_end": 46,
                            "highlight_start": 1,
                            "text": "                pub fn depth(&self) -> u32 {{"
                          },
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "                    {}.get_depth().unwrap()"
                          },
                          {
                            "highlight_end": 19,
                            "highlight_start": 1,
                            "text": "                }}"
                          },
                          {
                            "highlight_end": 36,
                            "highlight_start": 1,
                            "text": "            \"#, accessor).unwrap();"
                          },
                          {
                            "highlight_end": 11,
                            "highlight_start": 1,
                            "text": "        },"
                          },
                          {
                            "highlight_end": 16,
                            "highlight_start": 1,
                            "text": "        _ => ()"
                          },
                          {
                            "highlight_end": 6,
                            "highlight_start": 1,
                            "text": "    };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::single_match",
                  "explanation": null
                },
                "level": "warning",
                "message": "you seem to be trying to use `match` for an equality check. Consider using `if`",
                "spans": [
                  {
                    "byte_end": 71085,
                    "byte_start": 70737,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1507,
                    "line_start": 1496,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 5,
                        "text": "    match dimensions {"
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "        TextureDimensions::Texture3d => {"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "            writeln!(dest, r#\""
                      },
                      {
                        "highlight_end": 53,
                        "highlight_start": 1,
                        "text": "                /// Returns the depth of that image."
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                #[inline]"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                pub fn depth(&self) -> u32 {{"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "                    {}.get_depth().unwrap()"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 36,
                        "highlight_start": 1,
                        "text": "            \"#, accessor).unwrap();"
                      },
                      {
                        "highlight_end": 11,
                        "highlight_start": 1,
                        "text": "        },"
                      },
                      {
                        "highlight_end": 16,
                        "highlight_start": 1,
                        "text": "        _ => ()"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1498:13\n     |\n1498 | /             writeln!(dest, r#\"\n1499 | |                 /// Returns the depth of that image.\n1500 | |                 #[inline]\n1501 | |                 pub fn depth(&self) -> u32 {{\n1502 | |                     {}.get_depth().unwrap()\n1503 | |                 }}\n1504 | |             \"#, accessor).unwrap();\n     | |_________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1502 ~                     {accessor}.get_depth().unwrap()\n1503 |                 }}\n1504 ~             \"#).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 70975,
                        "byte_start": 70975,
                        "column_end": 22,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1502,
                        "line_start": 1502,
                        "suggested_replacement": "accessor",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 22,
                            "highlight_start": 22,
                            "text": "                    {}.get_depth().unwrap()"
                          }
                        ]
                      },
                      {
                        "byte_end": 71041,
                        "byte_start": 71031,
                        "column_end": 25,
                        "column_start": 15,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1504,
                        "line_start": 1504,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 25,
                            "highlight_start": 15,
                            "text": "            \"#, accessor).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 71042,
                    "byte_start": 70810,
                    "column_end": 26,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1504,
                    "line_start": 1498,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 13,
                        "text": "            writeln!(dest, r#\""
                      },
                      {
                        "highlight_end": 53,
                        "highlight_start": 1,
                        "text": "                /// Returns the depth of that image."
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                #[inline]"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                pub fn depth(&self) -> u32 {{"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "                    {}.get_depth().unwrap()"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "            \"#, accessor).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1513:17\n     |\n1513 | /                 writeln!(dest, r#\"\n1514 | |                     /// Returns the number of array layers.\n1515 | |                     #[inline]\n1516 | |                     pub fn array_size(&self) -> u32 {{\n1517 | |                         {}.get_array_size().unwrap()\n1518 | |                     }}\n1519 | |                 \"#, accessor).unwrap();\n     | |_____________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1517 ~                         {accessor}.get_array_size().unwrap()\n1518 |                     }}\n1519 ~                 \"#).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 71490,
                        "byte_start": 71490,
                        "column_end": 26,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1517,
                        "line_start": 1517,
                        "suggested_replacement": "accessor",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 26,
                            "text": "                        {}.get_array_size().unwrap()"
                          }
                        ]
                      },
                      {
                        "byte_end": 71569,
                        "byte_start": 71559,
                        "column_end": 29,
                        "column_start": 19,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1519,
                        "line_start": 1519,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 19,
                            "text": "                \"#, accessor).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 71570,
                    "byte_start": 71301,
                    "column_end": 30,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1519,
                    "line_start": 1513,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 17,
                        "text": "                writeln!(dest, r#\""
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "                    /// Returns the number of array layers."
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                    #[inline]"
                      },
                      {
                        "highlight_end": 55,
                        "highlight_start": 1,
                        "text": "                    pub fn array_size(&self) -> u32 {{"
                      },
                      {
                        "highlight_end": 53,
                        "highlight_start": 1,
                        "text": "                        {}.get_array_size().unwrap()"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    }}"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                \"#, accessor).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> build\\textures.rs:1527:13\n     |\n1527 | /             writeln!(dest, r#\"\n1528 | |                 /// Returns the number of samples of that image.\n1529 | |                 #[inline]\n1530 | |                 pub fn samples(&self) -> u32 {{\n1531 | |                     {}.get_samples().unwrap()\n1532 | |                 }}\n1533 | |             \"#, accessor).unwrap();\n     | |_________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1531 ~                     {accessor}.get_samples().unwrap()\n1532 |                 }}\n1533 ~             \"#).unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 71948,
                        "byte_start": 71948,
                        "column_end": 22,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1531,
                        "line_start": 1531,
                        "suggested_replacement": "accessor",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 22,
                            "highlight_start": 22,
                            "text": "                    {}.get_samples().unwrap()"
                          }
                        ]
                      },
                      {
                        "byte_end": 72016,
                        "byte_start": 72006,
                        "column_end": 25,
                        "column_start": 15,
                        "expansion": null,
                        "file_name": "build\\textures.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1533,
                        "line_start": 1533,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 25,
                            "highlight_start": 15,
                            "text": "            \"#, accessor).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 72017,
                    "byte_start": 71769,
                    "column_end": 26,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "build\\textures.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1533,
                    "line_start": 1527,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 13,
                        "text": "            writeln!(dest, r#\""
                      },
                      {
                        "highlight_end": 65,
                        "highlight_start": 1,
                        "text": "                /// Returns the number of samples of that image."
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                #[inline]"
                      },
                      {
                        "highlight_end": 48,
                        "highlight_start": 1,
                        "text": "                pub fn samples(&self) -> u32 {{"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                    {}.get_samples().unwrap()"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                }}"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "            \"#, accessor).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: the borrowed expression implements the required traits\n  --> build\\main.rs:13:52\n   |\n13 |     textures::build_texture_file(&mut File::create(&dest.join(\"textures.rs\")).unwrap());\n   |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `dest.join(\"textures.rs\")`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n   = note: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_borrows_for_generic_args)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 312,
                        "byte_start": 287,
                        "column_end": 77,
                        "column_start": 52,
                        "expansion": null,
                        "file_name": "build\\main.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 13,
                        "line_start": 13,
                        "suggested_replacement": "dest.join(\"textures.rs\")",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 77,
                            "highlight_start": 52,
                            "text": "    textures::build_texture_file(&mut File::create(&dest.join(\"textures.rs\")).unwrap());"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrows_for_generic_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "the borrowed expression implements the required traits",
                "spans": [
                  {
                    "byte_end": 312,
                    "byte_start": 287,
                    "column_end": 77,
                    "column_start": 52,
                    "expansion": null,
                    "file_name": "build\\main.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 13,
                    "line_start": 13,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 77,
                        "highlight_start": 52,
                        "text": "    textures::build_texture_file(&mut File::create(&dest.join(\"textures.rs\")).unwrap());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "message": {
                "rendered": "warning: the borrowed expression implements the required traits\n  --> build\\main.rs:16:40\n   |\n16 |     let mut file_output = File::create(&dest.join(\"gl_bindings.rs\")).unwrap();\n   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `dest.join(\"gl_bindings.rs\")`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 447,
                        "byte_start": 419,
                        "column_end": 68,
                        "column_start": 40,
                        "expansion": null,
                        "file_name": "build\\main.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "dest.join(\"gl_bindings.rs\")",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 68,
                            "highlight_start": 40,
                            "text": "    let mut file_output = File::create(&dest.join(\"gl_bindings.rs\")).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrows_for_generic_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "the borrowed expression implements the required traits",
                "spans": [
                  {
                    "byte_end": 447,
                    "byte_start": 419,
                    "column_end": 68,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "build\\main.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 16,
                    "line_start": 16,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 68,
                        "highlight_start": 40,
                        "text": "    let mut file_output = File::create(&dest.join(\"gl_bindings.rs\")).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\build\\main.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "glutin",
                "glutin-winit",
                "glutin_backend",
                "raw-window-handle",
                "simple_window_builder",
                "winit"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glium-ecdbdfc165fd53e3\\build-script-main.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glium-ecdbdfc165fd53e3\\build_script_main.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\target\\debug\\build\\glium-40801a1296e30cdb\\out"
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: duplicated attribute\n  --> src\\backend\\glutin\\mod.rs:1:8\n   |\n1  | #![cfg(feature = \"glutin\")]\n   |        ^^^^^^^^^^^^^^^^^^\n   |\nnote: first defined here\n  --> src\\backend\\mod.rs:29:7\n   |\n29 | #[cfg(feature = \"glutin\")]\n   |       ^^^^^^^^^^^^^^^^^^\nhelp: remove this attribute\n  --> src\\backend\\glutin\\mod.rs:1:8\n   |\n1  | #![cfg(feature = \"glutin\")]\n   |        ^^^^^^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#duplicated_attributes\n   = note: `#[warn(clippy::duplicated_attributes)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "first defined here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 894,
                        "byte_start": 876,
                        "column_end": 25,
                        "column_start": 7,
                        "expansion": null,
                        "file_name": "src\\backend\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 29,
                        "line_start": 29,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 25,
                            "highlight_start": 7,
                            "text": "#[cfg(feature = \"glutin\")]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "remove this attribute",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 25,
                        "byte_start": 7,
                        "column_end": 26,
                        "column_start": 8,
                        "expansion": null,
                        "file_name": "src\\backend\\glutin\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 8,
                            "text": "#![cfg(feature = \"glutin\")]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#duplicated_attributes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::duplicated_attributes)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::duplicated_attributes",
                  "explanation": null
                },
                "level": "warning",
                "message": "duplicated attribute",
                "spans": [
                  {
                    "byte_end": 25,
                    "byte_start": 7,
                    "column_end": 26,
                    "column_start": 8,
                    "expansion": null,
                    "file_name": "src\\backend\\glutin\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1,
                    "line_start": 1,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 8,
                        "text": "#![cfg(feature = \"glutin\")]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: duplicated attribute\n  --> src\\backend\\glutin\\simple_window_builder.rs:1:8\n   |\n1  | #![cfg(feature = \"simple_window_builder\")]\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: first defined here\n  --> src\\backend\\glutin\\mod.rs:37:7\n   |\n37 | #[cfg(feature = \"simple_window_builder\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nhelp: remove this attribute\n  --> src\\backend\\glutin\\simple_window_builder.rs:1:8\n   |\n1  | #![cfg(feature = \"simple_window_builder\")]\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#duplicated_attributes\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "first defined here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 886,
                        "byte_start": 853,
                        "column_end": 40,
                        "column_start": 7,
                        "expansion": null,
                        "file_name": "src\\backend\\glutin\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 37,
                        "line_start": 37,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 7,
                            "text": "#[cfg(feature = \"simple_window_builder\")]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "remove this attribute",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 40,
                        "byte_start": 7,
                        "column_end": 41,
                        "column_start": 8,
                        "expansion": null,
                        "file_name": "src\\backend\\glutin\\simple_window_builder.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 8,
                            "text": "#![cfg(feature = \"simple_window_builder\")]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#duplicated_attributes",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::duplicated_attributes",
                  "explanation": null
                },
                "level": "warning",
                "message": "duplicated attribute",
                "spans": [
                  {
                    "byte_end": 40,
                    "byte_start": 7,
                    "column_end": 41,
                    "column_start": 8,
                    "expansion": null,
                    "file_name": "src\\backend\\glutin\\simple_window_builder.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1,
                    "line_start": 1,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 8,
                        "text": "#![cfg(feature = \"simple_window_builder\")]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\buffer\\alloc.rs:103:16\n    |\n103 |     pub fn new<D: ?Sized, F: ?Sized>(facade: &F, data: &D, ty: BufferType, mode: BufferMode)\n    |                ^\n104 |                              -> Result<Alloc, BufferCreationError>\n105 |                              where D: Content, F: Facade\n    |                                    ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n    = note: `#[warn(clippy::multiple_bound_locations)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::multiple_bound_locations)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 3071,
                    "byte_start": 3070,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 103,
                    "line_start": 103,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<D: ?Sized, F: ?Sized>(facade: &F, data: &D, ty: BufferType, mode: BufferMode)"
                      }
                    ]
                  },
                  {
                    "byte_end": 3251,
                    "byte_start": 3250,
                    "column_end": 37,
                    "column_start": 36,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 105,
                    "line_start": 105,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 36,
                        "text": "                             where D: Content, F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\buffer\\alloc.rs:103:27\n    |\n103 |     pub fn new<D: ?Sized, F: ?Sized>(facade: &F, data: &D, ty: BufferType, mode: BufferMode)\n    |                           ^\n104 |                              -> Result<Alloc, BufferCreationError>\n105 |                              where D: Content, F: Facade\n    |                                                ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 3082,
                    "byte_start": 3081,
                    "column_end": 28,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 103,
                    "line_start": 103,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 27,
                        "text": "    pub fn new<D: ?Sized, F: ?Sized>(facade: &F, data: &D, ty: BufferType, mode: BufferMode)"
                      }
                    ]
                  },
                  {
                    "byte_end": 3263,
                    "byte_start": 3262,
                    "column_end": 49,
                    "column_start": 48,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 105,
                    "line_start": 105,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 48,
                        "text": "                             where D: Content, F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\buffer\\alloc.rs:130:18\n    |\n130 |     pub fn empty<F: ?Sized>(facade: &F, ty: BufferType, size: usize, mode: BufferMode)\n    |                  ^\n131 |                     -> Result<Alloc, BufferCreationError> where F: Facade\n    |                                                                 ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 3972,
                    "byte_start": 3971,
                    "column_end": 19,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 130,
                    "line_start": 130,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 18,
                        "text": "    pub fn empty<F: ?Sized>(facade: &F, ty: BufferType, size: usize, mode: BufferMode)"
                      }
                    ]
                  },
                  {
                    "byte_end": 4106,
                    "byte_start": 4105,
                    "column_end": 66,
                    "column_start": 65,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 131,
                    "line_start": 131,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 65,
                        "text": "                    -> Result<Alloc, BufferCreationError> where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\buffer\\alloc.rs:434:26\n    |\n434 |     pub unsafe fn upload<D: ?Sized>(&self, offset_bytes: usize, data: &D)\n    |                          ^\n435 |                                     where D: Content\n    |                                           ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 16769,
                    "byte_start": 16768,
                    "column_end": 27,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 434,
                    "line_start": 434,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 26,
                        "text": "    pub unsafe fn upload<D: ?Sized>(&self, offset_bytes: usize, data: &D)"
                      }
                    ]
                  },
                  {
                    "byte_end": 16860,
                    "byte_start": 16859,
                    "column_end": 44,
                    "column_start": 43,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 435,
                    "line_start": 435,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 44,
                        "highlight_start": 43,
                        "text": "                                    where D: Content"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\buffer\\alloc.rs:587:26\n    |\n587 |     unsafe fn map_shared<D: ?Sized>(&self, bytes_range: Range<usize>, read: bool, write: bool)\n    |                          ^\n588 |                                     -> MappingImpl<'_, D> where D: Content\n    |                                                                 ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 23570,
                    "byte_start": 23569,
                    "column_end": 27,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 587,
                    "line_start": 587,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 26,
                        "text": "    unsafe fn map_shared<D: ?Sized>(&self, bytes_range: Range<usize>, read: bool, write: bool)"
                      }
                    ]
                  },
                  {
                    "byte_end": 23704,
                    "byte_start": 23703,
                    "column_end": 66,
                    "column_start": 65,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 588,
                    "line_start": 588,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 65,
                        "text": "                                    -> MappingImpl<'_, D> where D: Content"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\buffer\\alloc.rs:675:24\n    |\n675 |     unsafe fn map_impl<D: ?Sized>(&mut self, bytes_range: Range<usize>, read: bool, write: bool)\n    |                        ^\n676 |                                   -> MappingImpl<'_, D> where D: Content\n    |                                                               ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 27231,
                    "byte_start": 27230,
                    "column_end": 25,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 675,
                    "line_start": 675,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 24,
                        "text": "    unsafe fn map_impl<D: ?Sized>(&mut self, bytes_range: Range<usize>, read: bool, write: bool)"
                      }
                    ]
                  },
                  {
                    "byte_end": 27367,
                    "byte_start": 27366,
                    "column_end": 64,
                    "column_start": 63,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 676,
                    "line_start": 676,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 64,
                        "highlight_start": 63,
                        "text": "                                  -> MappingImpl<'_, D> where D: Content"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\buffer\\alloc.rs:725:23\n    |\n725 |     pub unsafe fn map<D: ?Sized>(&mut self, bytes_range: Range<usize>)\n    |                       ^\n726 |                                  -> Mapping<'_, D> where D: Content\n    |                                                          ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 29023,
                    "byte_start": 29022,
                    "column_end": 24,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 725,
                    "line_start": 725,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 23,
                        "text": "    pub unsafe fn map<D: ?Sized>(&mut self, bytes_range: Range<usize>)"
                      }
                    ]
                  },
                  {
                    "byte_end": 29129,
                    "byte_start": 29128,
                    "column_end": 59,
                    "column_start": 58,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 726,
                    "line_start": 726,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 58,
                        "text": "                                 -> Mapping<'_, D> where D: Content"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\buffer\\alloc.rs:745:28\n    |\n745 |     pub unsafe fn map_read<D: ?Sized>(&mut self, bytes_range: Range<usize>)\n    |                            ^\n746 |                                       -> ReadMapping<'_, D> where D: Content\n    |                                                                   ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 29617,
                    "byte_start": 29616,
                    "column_end": 29,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 745,
                    "line_start": 745,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 28,
                        "text": "    pub unsafe fn map_read<D: ?Sized>(&mut self, bytes_range: Range<usize>)"
                      }
                    ]
                  },
                  {
                    "byte_end": 29732,
                    "byte_start": 29731,
                    "column_end": 68,
                    "column_start": 67,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 746,
                    "line_start": 746,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 68,
                        "highlight_start": 67,
                        "text": "                                      -> ReadMapping<'_, D> where D: Content"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\buffer\\alloc.rs:765:29\n    |\n765 |     pub unsafe fn map_write<D: ?Sized>(&mut self, bytes_range: Range<usize>)\n    |                             ^\n766 |                                        -> WriteMapping<'_, D> where D: Content\n    |                                                                     ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 30227,
                    "byte_start": 30226,
                    "column_end": 30,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 765,
                    "line_start": 765,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 29,
                        "text": "    pub unsafe fn map_write<D: ?Sized>(&mut self, bytes_range: Range<usize>)"
                      }
                    ]
                  },
                  {
                    "byte_end": 30344,
                    "byte_start": 30343,
                    "column_end": 70,
                    "column_start": 69,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 766,
                    "line_start": 766,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 70,
                        "highlight_start": 69,
                        "text": "                                       -> WriteMapping<'_, D> where D: Content"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\buffer\\alloc.rs:784:24\n    |\n784 |     pub unsafe fn read<D: ?Sized>(&self, range: Range<usize>)\n    |                        ^\n785 |                                   -> Result<D::Owned, ReadError>\n786 |                                   where D: Content\n    |                                         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 30745,
                    "byte_start": 30744,
                    "column_end": 25,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 784,
                    "line_start": 784,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 24,
                        "text": "    pub unsafe fn read<D: ?Sized>(&self, range: Range<usize>)"
                      }
                    ]
                  },
                  {
                    "byte_end": 30889,
                    "byte_start": 30888,
                    "column_end": 42,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 786,
                    "line_start": 786,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 41,
                        "text": "                                  where D: Content"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n    --> src\\buffer\\alloc.rs:1098:33\n     |\n1098 | pub fn is_buffer_read_supported<C: ?Sized>(ctxt: &C) -> bool where C: CapabilitiesSource {\n     |                                 ^                                  ^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 41026,
                    "byte_start": 41025,
                    "column_end": 34,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1098,
                    "line_start": 1098,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 33,
                        "text": "pub fn is_buffer_read_supported<C: ?Sized>(ctxt: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 41061,
                    "byte_start": 41060,
                    "column_end": 69,
                    "column_start": 68,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1098,
                    "line_start": 1098,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 69,
                        "highlight_start": 68,
                        "text": "pub fn is_buffer_read_supported<C: ?Sized>(ctxt: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n    --> src\\buffer\\alloc.rs:1121:25\n     |\n1121 | unsafe fn create_buffer<D: ?Sized>(mut ctxt: &mut CommandContext<'_>, size: usize, data: Option<&D>,\n     |                         ^\n...\n1125 |                                    where D: Content\n     |                                          ^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 41554,
                    "byte_start": 41553,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1121,
                    "line_start": 1121,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "unsafe fn create_buffer<D: ?Sized>(mut ctxt: &mut CommandContext<'_>, size: usize, data: Option<&D>,"
                      }
                    ]
                  },
                  {
                    "byte_end": 41911,
                    "byte_start": 41910,
                    "column_end": 43,
                    "column_start": 42,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1125,
                    "line_start": 1125,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 43,
                        "highlight_start": 42,
                        "text": "                                   where D: Content"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\buffer\\view.rs:55:16\n   |\n55 |     pub fn new<F: ?Sized>(facade: &F, data: &T, ty: BufferType, mode: BufferMode)\n   |                ^\n56 |                   -> Result<Buffer<T>, BufferCreationError>\n57 |                   where F: Facade\n   |                         ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 1589,
                    "byte_start": 1588,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\buffer\\view.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 55,
                    "line_start": 55,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<F: ?Sized>(facade: &F, data: &T, ty: BufferType, mode: BufferMode)"
                      }
                    ]
                  },
                  {
                    "byte_end": 1740,
                    "byte_start": 1739,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\buffer\\view.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 57,
                    "line_start": 57,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "                  where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\buffer\\view.rs:70:26\n   |\n70 |     pub fn empty_unsized<F: ?Sized>(facade: &F, ty: BufferType, size: usize, mode: BufferMode)\n   |                          ^\n71 |                             -> Result<Buffer<T>, BufferCreationError> where F: Facade\n   |                                                                             ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 2094,
                    "byte_start": 2093,
                    "column_end": 27,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\buffer\\view.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 70,
                    "line_start": 70,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 26,
                        "text": "    pub fn empty_unsized<F: ?Sized>(facade: &F, ty: BufferType, size: usize, mode: BufferMode)"
                      }
                    ]
                  },
                  {
                    "byte_end": 2240,
                    "byte_start": 2239,
                    "column_end": 78,
                    "column_start": 77,
                    "expansion": null,
                    "file_name": "src\\buffer\\view.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 71,
                    "line_start": 71,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 78,
                        "highlight_start": 77,
                        "text": "                            -> Result<Buffer<T>, BufferCreationError> where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\buffer\\view.rs:322:18\n    |\n322 |     pub fn empty<F: ?Sized>(facade: &F, ty: BufferType, mode: BufferMode)\n    |                  ^\n323 |                     -> Result<Buffer<T>, BufferCreationError> where F: Facade\n    |                                                                     ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 11376,
                    "byte_start": 11375,
                    "column_end": 19,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "src\\buffer\\view.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 322,
                    "line_start": 322,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 18,
                        "text": "    pub fn empty<F: ?Sized>(facade: &F, ty: BufferType, mode: BufferMode)"
                      }
                    ]
                  },
                  {
                    "byte_end": 11501,
                    "byte_start": 11500,
                    "column_end": 70,
                    "column_start": 69,
                    "expansion": null,
                    "file_name": "src\\buffer\\view.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 323,
                    "line_start": 323,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 70,
                        "highlight_start": 69,
                        "text": "                    -> Result<Buffer<T>, BufferCreationError> where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\buffer\\view.rs:338:24\n    |\n338 |     pub fn empty_array<F: ?Sized>(facade: &F, ty: BufferType, len: usize, mode: BufferMode)\n    |                        ^\n339 |                           -> Result<Buffer<[T]>, BufferCreationError> where F: Facade\n    |                                                                             ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 11922,
                    "byte_start": 11921,
                    "column_end": 25,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\buffer\\view.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 338,
                    "line_start": 338,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 24,
                        "text": "    pub fn empty_array<F: ?Sized>(facade: &F, ty: BufferType, len: usize, mode: BufferMode)"
                      }
                    ]
                  },
                  {
                    "byte_end": 12067,
                    "byte_start": 12066,
                    "column_end": 78,
                    "column_start": 77,
                    "expansion": null,
                    "file_name": "src\\buffer\\view.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 339,
                    "line_start": 339,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 78,
                        "highlight_start": 77,
                        "text": "                          -> Result<Buffer<[T]>, BufferCreationError> where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\debug.rs:127:16\n    |\n127 |     pub fn new<F: ?Sized>(facade: &F) -> Option<TimestampQuery> where F: Facade {\n    |                ^                                                      ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 4241,
                    "byte_start": 4240,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\debug.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 127,
                    "line_start": 127,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<F: ?Sized>(facade: &F) -> Option<TimestampQuery> where F: Facade {"
                      }
                    ]
                  },
                  {
                    "byte_end": 4296,
                    "byte_start": 4295,
                    "column_end": 72,
                    "column_start": 71,
                    "expansion": null,
                    "file_name": "src\\debug.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 127,
                    "line_start": 127,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 71,
                        "text": "    pub fn new<F: ?Sized>(facade: &F) -> Option<TimestampQuery> where F: Facade {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\draw_parameters\\query.rs:101:16\n    |\n101 |     pub fn new<F: ?Sized>(facade: &F, ty: QueryType) -> Result<RawQuery, QueryCreationError>\n    |                ^\n102 |                   where F: Facade\n    |                         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 2780,
                    "byte_start": 2779,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\draw_parameters\\query.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 101,
                    "line_start": 101,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<F: ?Sized>(facade: &F, ty: QueryType) -> Result<RawQuery, QueryCreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 2882,
                    "byte_start": 2881,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\draw_parameters\\query.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 102,
                    "line_start": 102,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "                  where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\draw_parameters\\query.rs:820:16\n    |\n820 |     pub fn new<F: ?Sized>(facade: &F) -> Result<SamplesPassedQuery, QueryCreationError> where F: Facade {\n    |                ^                                                                              ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 28473,
                    "byte_start": 28472,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\draw_parameters\\query.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 820,
                    "line_start": 820,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<F: ?Sized>(facade: &F) -> Result<SamplesPassedQuery, QueryCreationError> where F: Facade {"
                      }
                    ]
                  },
                  {
                    "byte_end": 28552,
                    "byte_start": 28551,
                    "column_end": 96,
                    "column_start": 95,
                    "expansion": null,
                    "file_name": "src\\draw_parameters\\query.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 820,
                    "line_start": 820,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 96,
                        "highlight_start": 95,
                        "text": "    pub fn new<F: ?Sized>(facade: &F) -> Result<SamplesPassedQuery, QueryCreationError> where F: Facade {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\draw_parameters\\query.rs:839:16\n    |\n839 |     pub fn new<F: ?Sized>(facade: &F) -> Result<TimeElapsedQuery, QueryCreationError> where F: Facade {\n    |                ^                                                                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 29028,
                    "byte_start": 29027,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\draw_parameters\\query.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 839,
                    "line_start": 839,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<F: ?Sized>(facade: &F) -> Result<TimeElapsedQuery, QueryCreationError> where F: Facade {"
                      }
                    ]
                  },
                  {
                    "byte_end": 29105,
                    "byte_start": 29104,
                    "column_end": 94,
                    "column_start": 93,
                    "expansion": null,
                    "file_name": "src\\draw_parameters\\query.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 839,
                    "line_start": 839,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 94,
                        "highlight_start": 93,
                        "text": "    pub fn new<F: ?Sized>(facade: &F) -> Result<TimeElapsedQuery, QueryCreationError> where F: Facade {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\draw_parameters\\query.rs:867:16\n    |\n867 |     pub fn new<F: ?Sized>(facade: &F, conservative: bool)\n    |                ^\n868 |                   -> Result<AnySamplesPassedQuery, QueryCreationError>\n869 |                   where F: Facade\n    |                         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 30142,
                    "byte_start": 30141,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\draw_parameters\\query.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 867,
                    "line_start": 867,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<F: ?Sized>(facade: &F, conservative: bool)"
                      }
                    ]
                  },
                  {
                    "byte_end": 30280,
                    "byte_start": 30279,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\draw_parameters\\query.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 869,
                    "line_start": 869,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "                  where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\draw_parameters\\query.rs:899:16\n    |\n899 |     pub fn new<F: ?Sized>(facade: &F) -> Result<PrimitivesGeneratedQuery, QueryCreationError>\n    |                ^\n900 |                   where F: Facade\n    |                         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 31232,
                    "byte_start": 31231,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\draw_parameters\\query.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 899,
                    "line_start": 899,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<F: ?Sized>(facade: &F) -> Result<PrimitivesGeneratedQuery, QueryCreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 31335,
                    "byte_start": 31334,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\draw_parameters\\query.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 900,
                    "line_start": 900,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "                  where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\draw_parameters\\query.rs:918:16\n    |\n918 |     pub fn new<F: ?Sized>(facade: &F) -> Result<TransformFeedbackPrimitivesWrittenQuery, QueryCreationError>\n    |                ^\n919 |                   where F: Facade\n    |                         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 31867,
                    "byte_start": 31866,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\draw_parameters\\query.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 918,
                    "line_start": 918,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<F: ?Sized>(facade: &F) -> Result<TransformFeedbackPrimitivesWrittenQuery, QueryCreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 31985,
                    "byte_start": 31984,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\draw_parameters\\query.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 919,
                    "line_start": 919,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "                  where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\framebuffer\\default_fb.rs:49:22\n   |\n49 |     pub fn back_left<F: ?Sized>(facade: &F) -> DefaultFramebuffer where F: Facade {\n   |                      ^                                                  ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 1397,
                    "byte_start": 1396,
                    "column_end": 23,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\default_fb.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 49,
                    "line_start": 49,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 22,
                        "text": "    pub fn back_left<F: ?Sized>(facade: &F) -> DefaultFramebuffer where F: Facade {"
                      }
                    ]
                  },
                  {
                    "byte_end": 1448,
                    "byte_start": 1447,
                    "column_end": 74,
                    "column_start": 73,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\default_fb.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 49,
                    "line_start": 49,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 74,
                        "highlight_start": 73,
                        "text": "    pub fn back_left<F: ?Sized>(facade: &F) -> DefaultFramebuffer where F: Facade {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\framebuffer\\render_buffer.rs:66:16\n   |\n66 |     pub fn new<F: ?Sized>(facade: &F, format: UncompressedFloatFormat, width: u32, height: u32)\n   |                ^\n67 |                   -> Result<RenderBuffer, CreationError> where F: Facade\n   |                                                                ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 2013,
                    "byte_start": 2012,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 66,
                    "line_start": 66,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<F: ?Sized>(facade: &F, format: UncompressedFloatFormat, width: u32, height: u32)"
                      }
                    ]
                  },
                  {
                    "byte_end": 2157,
                    "byte_start": 2156,
                    "column_end": 65,
                    "column_start": 64,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 67,
                    "line_start": 67,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 65,
                        "highlight_start": 64,
                        "text": "                  -> Result<RenderBuffer, CreationError> where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\framebuffer\\render_buffer.rs:77:28\n   |\n77 |     pub fn new_multisample<F: ?Sized>(facade: &F, format: UncompressedFloatFormat, width: u32, height: u32, samples: u32)\n   |                            ^\n78 |                   -> Result<RenderBuffer, CreationError> where F: Facade\n   |                                                                ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 2654,
                    "byte_start": 2653,
                    "column_end": 29,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 77,
                    "line_start": 77,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 28,
                        "text": "    pub fn new_multisample<F: ?Sized>(facade: &F, format: UncompressedFloatFormat, width: u32, height: u32, samples: u32)"
                      }
                    ]
                  },
                  {
                    "byte_end": 2812,
                    "byte_start": 2811,
                    "column_end": 65,
                    "column_start": 64,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 78,
                    "line_start": 78,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 65,
                        "highlight_start": 64,
                        "text": "                  -> Result<RenderBuffer, CreationError> where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\render_buffer.rs:130:16\n    |\n130 |     pub fn new<F: ?Sized>(facade: &F, format: DepthFormat, width: u32, height: u32)\n    |                ^\n131 |                   -> Result<DepthRenderBuffer, CreationError> where F: Facade\n    |                                                                     ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 4204,
                    "byte_start": 4203,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 130,
                    "line_start": 130,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<F: ?Sized>(facade: &F, format: DepthFormat, width: u32, height: u32)"
                      }
                    ]
                  },
                  {
                    "byte_end": 4341,
                    "byte_start": 4340,
                    "column_end": 70,
                    "column_start": 69,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 131,
                    "line_start": 131,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 70,
                        "highlight_start": 69,
                        "text": "                  -> Result<DepthRenderBuffer, CreationError> where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\render_buffer.rs:141:28\n    |\n141 |     pub fn new_multisample<F: ?Sized>(facade: &F, format: DepthFormat, width: u32, height: u32, samples: u32)\n    |                            ^\n142 |                   -> Result<DepthRenderBuffer, CreationError> where F: Facade\n    |                                                                     ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 4837,
                    "byte_start": 4836,
                    "column_end": 29,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 141,
                    "line_start": 141,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 28,
                        "text": "    pub fn new_multisample<F: ?Sized>(facade: &F, format: DepthFormat, width: u32, height: u32, samples: u32)"
                      }
                    ]
                  },
                  {
                    "byte_end": 4988,
                    "byte_start": 4987,
                    "column_end": 70,
                    "column_start": 69,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 142,
                    "line_start": 142,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 70,
                        "highlight_start": 69,
                        "text": "                  -> Result<DepthRenderBuffer, CreationError> where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\render_buffer.rs:193:16\n    |\n193 |     pub fn new<F: ?Sized>(facade: &F, format: StencilFormat, width: u32, height: u32)\n    |                ^\n194 |                   -> Result<StencilRenderBuffer, CreationError> where F: Facade\n    |                                                                       ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 6391,
                    "byte_start": 6390,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 193,
                    "line_start": 193,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<F: ?Sized>(facade: &F, format: StencilFormat, width: u32, height: u32)"
                      }
                    ]
                  },
                  {
                    "byte_end": 6532,
                    "byte_start": 6531,
                    "column_end": 72,
                    "column_start": 71,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 194,
                    "line_start": 194,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 71,
                        "text": "                  -> Result<StencilRenderBuffer, CreationError> where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\render_buffer.rs:204:28\n    |\n204 |     pub fn new_multisample<F: ?Sized>(facade: &F, format: StencilFormat, width: u32, height: u32, samples: u32)\n    |                            ^\n205 |                   -> Result<StencilRenderBuffer, CreationError> where F: Facade\n    |                                                                       ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 7034,
                    "byte_start": 7033,
                    "column_end": 29,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 204,
                    "line_start": 204,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 28,
                        "text": "    pub fn new_multisample<F: ?Sized>(facade: &F, format: StencilFormat, width: u32, height: u32, samples: u32)"
                      }
                    ]
                  },
                  {
                    "byte_end": 7189,
                    "byte_start": 7188,
                    "column_end": 72,
                    "column_start": 71,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 205,
                    "line_start": 205,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 71,
                        "text": "                  -> Result<StencilRenderBuffer, CreationError> where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\render_buffer.rs:257:16\n    |\n257 |     pub fn new<F: ?Sized>(facade: &F, format: DepthStencilFormat, width: u32, height: u32)\n    |                ^\n258 |                   -> Result<DepthStencilRenderBuffer, CreationError> where F: Facade\n    |                                                                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 8643,
                    "byte_start": 8642,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 257,
                    "line_start": 257,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<F: ?Sized>(facade: &F, format: DepthStencilFormat, width: u32, height: u32)"
                      }
                    ]
                  },
                  {
                    "byte_end": 8794,
                    "byte_start": 8793,
                    "column_end": 77,
                    "column_start": 76,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 258,
                    "line_start": 258,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 77,
                        "highlight_start": 76,
                        "text": "                  -> Result<DepthStencilRenderBuffer, CreationError> where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\render_buffer.rs:268:28\n    |\n268 |     pub fn new_multisample<F: ?Sized>(facade: &F, format: DepthStencilFormat, width: u32, height: u32, samples: u32)\n    |                            ^\n269 |                   -> Result<DepthStencilRenderBuffer, CreationError> where F: Facade\n    |                                                                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 9311,
                    "byte_start": 9310,
                    "column_end": 29,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 268,
                    "line_start": 268,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 28,
                        "text": "    pub fn new_multisample<F: ?Sized>(facade: &F, format: DepthStencilFormat, width: u32, height: u32, samples: u32)"
                      }
                    ]
                  },
                  {
                    "byte_end": 9476,
                    "byte_start": 9475,
                    "column_end": 77,
                    "column_start": 76,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 269,
                    "line_start": 269,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 77,
                        "highlight_start": 76,
                        "text": "                  -> Result<DepthStencilRenderBuffer, CreationError> where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\render_buffer.rs:324:12\n    |\n324 |     fn new<F: ?Sized>(facade: &F, format: gl::types::GLenum, kind: TextureKind, width: u32, height: u32,\n    |            ^\n325 |               samples: Option<u32>) -> RenderBufferAny\n326 |         where F: Facade\n    |               ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 10908,
                    "byte_start": 10907,
                    "column_end": 13,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 324,
                    "line_start": 324,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 13,
                        "highlight_start": 12,
                        "text": "    fn new<F: ?Sized>(facade: &F, format: gl::types::GLenum, kind: TextureKind, width: u32, height: u32,"
                      }
                    ]
                  },
                  {
                    "byte_end": 11071,
                    "byte_start": 11070,
                    "column_end": 16,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 326,
                    "line_start": 326,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 15,
                        "text": "        where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:119:16\n    |\n119 |     pub fn new<F: ?Sized, C>(facade: &F, color: C) -> Result<SimpleFrameBuffer<'a>, ValidationError>\n    |                ^\n120 |                      where C: ToColorAttachment<'a>, F: Facade\n    |                                                      ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 3919,
                    "byte_start": 3918,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 119,
                    "line_start": 119,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<F: ?Sized, C>(facade: &F, color: C) -> Result<SimpleFrameBuffer<'a>, ValidationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 4058,
                    "byte_start": 4057,
                    "column_end": 55,
                    "column_start": 54,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 120,
                    "line_start": 120,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 55,
                        "highlight_start": 54,
                        "text": "                     where C: ToColorAttachment<'a>, F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:128:30\n    |\n128 |     pub fn with_depth_buffer<F: ?Sized, C, D>(facade: &F, color: C, depth: D)\n    |                              ^\n...\n131 |                                             D: ToDepthAttachment<'a>, F: Facade\n    |                                                                       ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 4341,
                    "byte_start": 4340,
                    "column_end": 31,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 128,
                    "line_start": 128,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 30,
                        "text": "    pub fn with_depth_buffer<F: ?Sized, C, D>(facade: &F, color: C, depth: D)"
                      }
                    ]
                  },
                  {
                    "byte_end": 4618,
                    "byte_start": 4617,
                    "column_end": 72,
                    "column_start": 71,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 131,
                    "line_start": 131,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 71,
                        "text": "                                            D: ToDepthAttachment<'a>, F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:140:23\n    |\n140 |     pub fn depth_only<F: ?Sized, D>(facade: &F, depth: D)\n    |                       ^\n141 |                             -> Result<SimpleFrameBuffer<'a>, ValidationError>\n142 |         where D: ToDepthAttachment<'a>, F: Facade\n    |                                         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 4949,
                    "byte_start": 4948,
                    "column_end": 24,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 140,
                    "line_start": 140,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 23,
                        "text": "    pub fn depth_only<F: ?Sized, D>(facade: &F, depth: D)"
                      }
                    ]
                  },
                  {
                    "byte_end": 5103,
                    "byte_start": 5102,
                    "column_end": 42,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 142,
                    "line_start": 142,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 41,
                        "text": "        where D: ToDepthAttachment<'a>, F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:150:42\n    |\n150 |     pub fn with_depth_and_stencil_buffer<F: ?Sized, C, D, S>(facade: &F, color: C, depth: D,\n    |                                          ^\n...\n156 |                                                            S: ToStencilAttachment<'a>, F: Facade\n    |                                                                                        ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 5394,
                    "byte_start": 5393,
                    "column_end": 43,
                    "column_start": 42,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 150,
                    "line_start": 150,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 43,
                        "highlight_start": 42,
                        "text": "    pub fn with_depth_and_stencil_buffer<F: ?Sized, C, D, S>(facade: &F, color: C, depth: D,"
                      }
                    ]
                  },
                  {
                    "byte_end": 5934,
                    "byte_start": 5933,
                    "column_end": 89,
                    "column_start": 88,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 156,
                    "line_start": 156,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 89,
                        "highlight_start": 88,
                        "text": "                                                           S: ToStencilAttachment<'a>, F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:166:35\n    |\n166 |     pub fn depth_and_stencil_only<F: ?Sized, D, S>(facade: &F, depth: D, stencil: S)\n    |                                   ^\n...\n169 |               S: ToStencilAttachment<'a>, F: Facade\n    |                                           ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 6349,
                    "byte_start": 6348,
                    "column_end": 36,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 166,
                    "line_start": 166,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 35,
                        "text": "    pub fn depth_and_stencil_only<F: ?Sized, D, S>(facade: &F, depth: D, stencil: S)"
                      }
                    ]
                  },
                  {
                    "byte_end": 6575,
                    "byte_start": 6574,
                    "column_end": 44,
                    "column_start": 43,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 169,
                    "line_start": 169,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 44,
                        "highlight_start": 43,
                        "text": "              S: ToStencilAttachment<'a>, F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:178:32\n    |\n178 |     pub fn with_stencil_buffer<F: ?Sized, C, S>(facade: &F, color: C, stencil: S)\n    |                                ^\n...\n181 |                                               F: Facade\n    |                                               ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 6929,
                    "byte_start": 6928,
                    "column_end": 33,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 178,
                    "line_start": 178,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 32,
                        "text": "    pub fn with_stencil_buffer<F: ?Sized, C, S>(facade: &F, color: C, stencil: S)"
                      }
                    ]
                  },
                  {
                    "byte_end": 7216,
                    "byte_start": 7215,
                    "column_end": 48,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 181,
                    "line_start": 181,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 47,
                        "text": "                                              F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:190:25\n    |\n190 |     pub fn stencil_only<F: ?Sized, S>(facade: &F, stencil: S)\n    |                         ^\n191 |                               -> Result<SimpleFrameBuffer<'a>, ValidationError>\n192 |         where S: ToStencilAttachment<'a>, F: Facade\n    |                                           ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 7553,
                    "byte_start": 7552,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 190,
                    "line_start": 190,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "    pub fn stencil_only<F: ?Sized, S>(facade: &F, stencil: S)"
                      }
                    ]
                  },
                  {
                    "byte_end": 7713,
                    "byte_start": 7712,
                    "column_end": 44,
                    "column_start": 43,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 192,
                    "line_start": 192,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 44,
                        "highlight_start": 43,
                        "text": "        where S: ToStencilAttachment<'a>, F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:200:38\n    |\n200 |     pub fn with_depth_stencil_buffer<F: ?Sized, C, D>(facade: &F, color: C, depthstencil: D)\n    |                                      ^\n...\n203 |                                                     D: ToDepthStencilAttachment<'a>, F: Facade\n    |                                                                                      ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 8021,
                    "byte_start": 8020,
                    "column_end": 39,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 200,
                    "line_start": 200,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 38,
                        "text": "    pub fn with_depth_stencil_buffer<F: ?Sized, C, D>(facade: &F, color: C, depthstencil: D)"
                      }
                    ]
                  },
                  {
                    "byte_end": 8336,
                    "byte_start": 8335,
                    "column_end": 87,
                    "column_start": 86,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 203,
                    "line_start": 203,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 87,
                        "highlight_start": 86,
                        "text": "                                                    D: ToDepthStencilAttachment<'a>, F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:211:31\n    |\n211 |     pub fn depth_stencil_only<F: ?Sized, D>(facade: &F, depthstencil: D)\n    |                               ^\n212 |                                     -> Result<SimpleFrameBuffer<'a>, ValidationError>\n213 |         where D: ToDepthStencilAttachment<'a>, F: Facade\n    |                                                ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 8671,
                    "byte_start": 8670,
                    "column_end": 32,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 211,
                    "line_start": 211,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 31,
                        "text": "    pub fn depth_stencil_only<F: ?Sized, D>(facade: &F, depthstencil: D)"
                      }
                    ]
                  },
                  {
                    "byte_end": 8847,
                    "byte_start": 8846,
                    "column_end": 49,
                    "column_start": 48,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 213,
                    "line_start": 213,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 48,
                        "text": "        where D: ToDepthStencilAttachment<'a>, F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:220:17\n    |\n220 |     fn new_impl<F: ?Sized>(facade: &F, color: Option<ColorAttachment<'a>>,\n    |                 ^\n...\n223 |                    -> Result<SimpleFrameBuffer<'a>, ValidationError> where F: Facade\n    |                                                                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 9035,
                    "byte_start": 9034,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 220,
                    "line_start": 220,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 18,
                        "highlight_start": 17,
                        "text": "    fn new_impl<F: ?Sized>(facade: &F, color: Option<ColorAttachment<'a>>,"
                      }
                    ]
                  },
                  {
                    "byte_end": 9333,
                    "byte_start": 9332,
                    "column_end": 77,
                    "column_start": 76,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 223,
                    "line_start": 223,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 77,
                        "highlight_start": 76,
                        "text": "                   -> Result<SimpleFrameBuffer<'a>, ValidationError> where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:372:16\n    |\n372 |     pub fn new<F: ?Sized, I, A>(facade: &F, color_attachments: I)\n    |                ^\n373 |                         -> Result<MultiOutputFrameBuffer<'a>, ValidationError>\n374 |         where F: Facade,\n    |               ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 15392,
                    "byte_start": 15391,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 372,
                    "line_start": 372,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<F: ?Sized, I, A>(facade: &F, color_attachments: I)"
                      }
                    ]
                  },
                  {
                    "byte_end": 15536,
                    "byte_start": 15535,
                    "column_end": 16,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 374,
                    "line_start": 374,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 15,
                        "text": "        where F: Facade,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:387:30\n    |\n387 |     pub fn with_depth_buffer<F: ?Sized, D, I, A>(facade: &F, color_attachments: I, depth: D)\n    |                              ^\n388 |                                          -> Result<MultiOutputFrameBuffer<'a>, ValidationError>\n389 |         where F: Facade,\n    |               ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 15943,
                    "byte_start": 15942,
                    "column_end": 31,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 387,
                    "line_start": 387,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 30,
                        "text": "    pub fn with_depth_buffer<F: ?Sized, D, I, A>(facade: &F, color_attachments: I, depth: D)"
                      }
                    ]
                  },
                  {
                    "byte_end": 16117,
                    "byte_start": 16116,
                    "column_end": 16,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 389,
                    "line_start": 389,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 15,
                        "text": "        where F: Facade,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:404:45\n    |\n404 |     pub fn with_depth_and_stencil_buffer<A, F: ?Sized, I, D, S>(facade: &F, color: I, depth: D, stencil: S)\n    |                                             ^\n...\n411 |               F: Facade\n    |               ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 16671,
                    "byte_start": 16670,
                    "column_end": 46,
                    "column_start": 45,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 404,
                    "line_start": 404,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 46,
                        "highlight_start": 45,
                        "text": "    pub fn with_depth_and_stencil_buffer<A, F: ?Sized, I, D, S>(facade: &F, color: I, depth: D, stencil: S)"
                      }
                    ]
                  },
                  {
                    "byte_end": 17100,
                    "byte_start": 17099,
                    "column_end": 16,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 411,
                    "line_start": 411,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 15,
                        "text": "              F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:424:35\n    |\n424 |     pub fn with_stencil_buffer<A, F: ?Sized, I, S>(facade: &F, color: I, stencil: S)\n    |                                   ^\n...\n427 |               F: Facade,\n    |               ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 17574,
                    "byte_start": 17573,
                    "column_end": 36,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 424,
                    "line_start": 424,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 35,
                        "text": "    pub fn with_stencil_buffer<A, F: ?Sized, I, S>(facade: &F, color: I, stencil: S)"
                      }
                    ]
                  },
                  {
                    "byte_end": 17779,
                    "byte_start": 17778,
                    "column_end": 16,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 427,
                    "line_start": 427,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 15,
                        "text": "              F: Facade,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:441:41\n    |\n441 |     pub fn with_depth_stencil_buffer<A, F: ?Sized, I, D>(facade: &F, color: I, depthstencil: D)\n    |                                         ^\n442 |                                                  -> Result<MultiOutputFrameBuffer<'a>, ValidationError>\n443 |         where D: ToDepthStencilAttachment<'a>, F: Facade,\n    |                                                ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 18267,
                    "byte_start": 18266,
                    "column_end": 42,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 441,
                    "line_start": 441,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 41,
                        "text": "    pub fn with_depth_stencil_buffer<A, F: ?Sized, I, D>(facade: &F, color: I, depthstencil: D)"
                      }
                    ]
                  },
                  {
                    "byte_end": 18474,
                    "byte_start": 18473,
                    "column_end": 49,
                    "column_start": 48,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 443,
                    "line_start": 443,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 48,
                        "text": "        where D: ToDepthStencilAttachment<'a>, F: Facade,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:451:17\n    |\n451 |     fn new_impl<F: ?Sized, I, A>(facade: &F, color: I, depth: Option<DepthAttachment<'a>>,\n    |                 ^\n...\n455 |         where F: Facade,\n    |               ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 18760,
                    "byte_start": 18759,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 451,
                    "line_start": 451,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 18,
                        "highlight_start": 17,
                        "text": "    fn new_impl<F: ?Sized, I, A>(facade: &F, color: I, depth: Option<DepthAttachment<'a>>,"
                      }
                    ]
                  },
                  {
                    "byte_end": 19069,
                    "byte_start": 19068,
                    "column_end": 16,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 455,
                    "line_start": 455,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 15,
                        "text": "        where F: Facade,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:627:25\n    |\n627 |     pub fn is_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {\n    |                         ^                                     ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 25995,
                    "byte_start": 25994,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 627,
                    "line_start": 627,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "    pub fn is_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 26033,
                    "byte_start": 26032,
                    "column_end": 64,
                    "column_start": 63,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 627,
                    "line_start": 627,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 64,
                        "highlight_start": 63,
                        "text": "    pub fn is_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:634:33\n    |\n634 |     pub fn is_layered_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {\n    |                                 ^                                     ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 26366,
                    "byte_start": 26365,
                    "column_end": 34,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 634,
                    "line_start": 634,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 33,
                        "text": "    pub fn is_layered_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 26404,
                    "byte_start": 26403,
                    "column_end": 72,
                    "column_start": 71,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 634,
                    "line_start": 634,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 71,
                        "text": "    pub fn is_layered_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:642:36\n    |\n642 |     pub fn get_max_supported_width<C: ?Sized>(context: &C) -> Option<u32> where C: CapabilitiesSource {\n    |                                    ^                                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 26801,
                    "byte_start": 26800,
                    "column_end": 37,
                    "column_start": 36,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 642,
                    "line_start": 642,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 36,
                        "text": "    pub fn get_max_supported_width<C: ?Sized>(context: &C) -> Option<u32> where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 26846,
                    "byte_start": 26845,
                    "column_end": 82,
                    "column_start": 81,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 642,
                    "line_start": 642,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 82,
                        "highlight_start": 81,
                        "text": "    pub fn get_max_supported_width<C: ?Sized>(context: &C) -> Option<u32> where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:648:37\n    |\n648 |     pub fn get_max_supported_height<C: ?Sized>(context: &C) -> Option<u32> where C: CapabilitiesSource {\n    |                                     ^                                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 27131,
                    "byte_start": 27130,
                    "column_end": 38,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 648,
                    "line_start": 648,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 37,
                        "text": "    pub fn get_max_supported_height<C: ?Sized>(context: &C) -> Option<u32> where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 27176,
                    "byte_start": 27175,
                    "column_end": 83,
                    "column_start": 82,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 648,
                    "line_start": 648,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 83,
                        "highlight_start": 82,
                        "text": "    pub fn get_max_supported_height<C: ?Sized>(context: &C) -> Option<u32> where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:654:38\n    |\n654 |     pub fn get_max_supported_samples<C: ?Sized>(context: &C) -> Option<u32> where C: CapabilitiesSource {\n    |                                      ^                                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 27474,
                    "byte_start": 27473,
                    "column_end": 39,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 654,
                    "line_start": 654,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 38,
                        "text": "    pub fn get_max_supported_samples<C: ?Sized>(context: &C) -> Option<u32> where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 27519,
                    "byte_start": 27518,
                    "column_end": 84,
                    "column_start": 83,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 654,
                    "line_start": 654,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 84,
                        "highlight_start": 83,
                        "text": "    pub fn get_max_supported_samples<C: ?Sized>(context: &C) -> Option<u32> where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:660:37\n    |\n660 |     pub fn get_max_supported_layers<C: ?Sized>(context: &C) -> Option<u32> where C: CapabilitiesSource {\n    |                                     ^                                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 27824,
                    "byte_start": 27823,
                    "column_end": 38,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 660,
                    "line_start": 660,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 37,
                        "text": "    pub fn get_max_supported_layers<C: ?Sized>(context: &C) -> Option<u32> where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 27869,
                    "byte_start": 27868,
                    "column_end": 83,
                    "column_start": 82,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 660,
                    "line_start": 660,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 83,
                        "highlight_start": 82,
                        "text": "    pub fn get_max_supported_layers<C: ?Sized>(context: &C) -> Option<u32> where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\framebuffer\\mod.rs:671:16\n    |\n671 |     pub fn new<F: ?Sized>(facade: &F, width: u32, height: u32, layers: Option<u32>,\n    |                ^\n672 |                   samples: Option<u32>, fixed_samples: bool)\n673 |                   -> Result<EmptyFrameBuffer, ValidationError> where F: Facade\n    |                                                                      ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 28146,
                    "byte_start": 28145,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 671,
                    "line_start": 671,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<F: ?Sized>(facade: &F, width: u32, height: u32, layers: Option<u32>,"
                      }
                    ]
                  },
                  {
                    "byte_end": 28345,
                    "byte_start": 28344,
                    "column_end": 71,
                    "column_start": 70,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 673,
                    "line_start": 673,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 71,
                        "highlight_start": 70,
                        "text": "                  -> Result<EmptyFrameBuffer, ValidationError> where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\index\\buffer.rs:73:16\n   |\n73 |     pub fn new<F: ?Sized>(facade: &F, prim: PrimitiveType, data: &[T])\n   |                ^\n74 |                   -> Result<IndexBuffer<T>, CreationError>\n75 |                   where F: Facade\n   |                         ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 2123,
                    "byte_start": 2122,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\index\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 73,
                    "line_start": 73,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<F: ?Sized>(facade: &F, prim: PrimitiveType, data: &[T])"
                      }
                    ]
                  },
                  {
                    "byte_end": 2262,
                    "byte_start": 2261,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\index\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 75,
                    "line_start": 75,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "                  where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\index\\buffer.rs:82:20\n   |\n82 |     pub fn dynamic<F: ?Sized>(facade: &F, prim: PrimitiveType, data: &[T])\n   |                    ^\n83 |                       -> Result<IndexBuffer<T>, CreationError>\n84 |                       where F: Facade\n   |                             ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 2468,
                    "byte_start": 2467,
                    "column_end": 21,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\index\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 82,
                    "line_start": 82,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 20,
                        "text": "    pub fn dynamic<F: ?Sized>(facade: &F, prim: PrimitiveType, data: &[T])"
                      }
                    ]
                  },
                  {
                    "byte_end": 2615,
                    "byte_start": 2614,
                    "column_end": 30,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\index\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 84,
                    "line_start": 84,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 29,
                        "text": "                      where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\index\\buffer.rs:91:23\n   |\n91 |     pub fn persistent<F: ?Sized>(facade: &F, prim: PrimitiveType, data: &[T])\n   |                       ^\n92 |                          -> Result<IndexBuffer<T>, CreationError>\n93 |                          where F: Facade\n   |                                ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 2824,
                    "byte_start": 2823,
                    "column_end": 24,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\index\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 91,
                    "line_start": 91,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 23,
                        "text": "    pub fn persistent<F: ?Sized>(facade: &F, prim: PrimitiveType, data: &[T])"
                      }
                    ]
                  },
                  {
                    "byte_end": 2977,
                    "byte_start": 2976,
                    "column_end": 33,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\index\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 93,
                    "line_start": 93,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 32,
                        "text": "                         where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\index\\buffer.rs:100:22\n    |\n100 |     pub fn immutable<F: ?Sized>(facade: &F, prim: PrimitiveType, data: &[T])\n    |                      ^\n101 |                         -> Result<IndexBuffer<T>, CreationError>\n102 |                         where F: Facade\n    |                               ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 3188,
                    "byte_start": 3187,
                    "column_end": 23,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\index\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 100,
                    "line_start": 100,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 22,
                        "text": "    pub fn immutable<F: ?Sized>(facade: &F, prim: PrimitiveType, data: &[T])"
                      }
                    ]
                  },
                  {
                    "byte_end": 3339,
                    "byte_start": 3338,
                    "column_end": 32,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "src\\index\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 102,
                    "line_start": 102,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 31,
                        "text": "                        where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\index\\buffer.rs:108:17\n    |\n108 |     fn new_impl<F: ?Sized>(facade: &F, prim: PrimitiveType, data: &[T], mode: BufferMode)\n    |                 ^\n109 |                    -> Result<IndexBuffer<T>, CreationError>\n110 |                    where F: Facade\n    |                          ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 3465,
                    "byte_start": 3464,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\index\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 108,
                    "line_start": 108,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 18,
                        "highlight_start": 17,
                        "text": "    fn new_impl<F: ?Sized>(facade: &F, prim: PrimitiveType, data: &[T], mode: BufferMode)"
                      }
                    ]
                  },
                  {
                    "byte_end": 3624,
                    "byte_start": 3623,
                    "column_end": 27,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\index\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 110,
                    "line_start": 110,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 26,
                        "text": "                   where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\index\\buffer.rs:128:18\n    |\n128 |     pub fn empty<F: ?Sized>(facade: &F, prim: PrimitiveType, len: usize)\n    |                  ^\n129 |                     -> Result<IndexBuffer<T>, CreationError>\n130 |                     where F: Facade\n    |                           ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 4099,
                    "byte_start": 4098,
                    "column_end": 19,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "src\\index\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 128,
                    "line_start": 128,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 18,
                        "text": "    pub fn empty<F: ?Sized>(facade: &F, prim: PrimitiveType, len: usize)"
                      }
                    ]
                  },
                  {
                    "byte_end": 4242,
                    "byte_start": 4241,
                    "column_end": 28,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\index\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 130,
                    "line_start": 130,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 27,
                        "text": "                    where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\index\\buffer.rs:137:26\n    |\n137 |     pub fn empty_dynamic<F: ?Sized>(facade: &F, prim: PrimitiveType, len: usize)\n    |                          ^\n138 |                             -> Result<IndexBuffer<T>, CreationError>\n139 |                             where F: Facade\n    |                                   ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 4417,
                    "byte_start": 4416,
                    "column_end": 27,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\index\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 137,
                    "line_start": 137,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 26,
                        "text": "    pub fn empty_dynamic<F: ?Sized>(facade: &F, prim: PrimitiveType, len: usize)"
                      }
                    ]
                  },
                  {
                    "byte_end": 4576,
                    "byte_start": 4575,
                    "column_end": 36,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\index\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 139,
                    "line_start": 139,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 35,
                        "text": "                            where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\index\\buffer.rs:146:29\n    |\n146 |     pub fn empty_persistent<F: ?Sized>(facade: &F, prim: PrimitiveType, len: usize)\n    |                             ^\n147 |                                -> Result<IndexBuffer<T>, CreationError>\n148 |                                where F: Facade\n    |                                      ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 4754,
                    "byte_start": 4753,
                    "column_end": 30,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\index\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 146,
                    "line_start": 146,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 29,
                        "text": "    pub fn empty_persistent<F: ?Sized>(facade: &F, prim: PrimitiveType, len: usize)"
                      }
                    ]
                  },
                  {
                    "byte_end": 4919,
                    "byte_start": 4918,
                    "column_end": 39,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\index\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 148,
                    "line_start": 148,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 38,
                        "text": "                               where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\index\\buffer.rs:155:28\n    |\n155 |     pub fn empty_immutable<F: ?Sized>(facade: &F, prim: PrimitiveType, len: usize)\n    |                            ^\n156 |                               -> Result<IndexBuffer<T>, CreationError>\n157 |                               where F: Facade\n    |                                     ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 5099,
                    "byte_start": 5098,
                    "column_end": 29,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\index\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 155,
                    "line_start": 155,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 28,
                        "text": "    pub fn empty_immutable<F: ?Sized>(facade: &F, prim: PrimitiveType, len: usize)"
                      }
                    ]
                  },
                  {
                    "byte_end": 5262,
                    "byte_start": 5261,
                    "column_end": 38,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\index\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 157,
                    "line_start": 157,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 37,
                        "text": "                              where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\index\\buffer.rs:163:19\n    |\n163 |     fn empty_impl<F: ?Sized>(facade: &F, prim: PrimitiveType, len: usize, mode: BufferMode)\n    |                   ^\n164 |                      -> Result<IndexBuffer<T>, CreationError>\n165 |                      where F: Facade\n    |                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 5391,
                    "byte_start": 5390,
                    "column_end": 20,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "src\\index\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 163,
                    "line_start": 163,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 19,
                        "text": "    fn empty_impl<F: ?Sized>(facade: &F, prim: PrimitiveType, len: usize, mode: BufferMode)"
                      }
                    ]
                  },
                  {
                    "byte_end": 5554,
                    "byte_start": 5553,
                    "column_end": 29,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\index\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 165,
                    "line_start": 165,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 28,
                        "text": "                     where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\index\\multidraw.rs:58:18\n   |\n58 |     pub fn empty<F: ?Sized>(facade: &F, elements: usize)\n   |                  ^\n59 |                     -> Result<DrawCommandsNoIndicesBuffer, BufferCreationError>\n60 |                     where F: Facade\n   |                           ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 1953,
                    "byte_start": 1952,
                    "column_end": 19,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "src\\index\\multidraw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 58,
                    "line_start": 58,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 18,
                        "text": "    pub fn empty<F: ?Sized>(facade: &F, elements: usize)"
                      }
                    ]
                  },
                  {
                    "byte_end": 2099,
                    "byte_start": 2098,
                    "column_end": 28,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\index\\multidraw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 60,
                    "line_start": 60,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 27,
                        "text": "                    where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\index\\multidraw.rs:71:26\n   |\n71 |     pub fn empty_dynamic<F: ?Sized>(facade: &F, elements: usize)\n   |                          ^\n72 |                             -> Result<DrawCommandsNoIndicesBuffer, BufferCreationError>\n73 |                             where F: Facade\n   |                                   ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 2471,
                    "byte_start": 2470,
                    "column_end": 27,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\index\\multidraw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 71,
                    "line_start": 71,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 26,
                        "text": "    pub fn empty_dynamic<F: ?Sized>(facade: &F, elements: usize)"
                      }
                    ]
                  },
                  {
                    "byte_end": 2633,
                    "byte_start": 2632,
                    "column_end": 36,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\index\\multidraw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 73,
                    "line_start": 73,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 35,
                        "text": "                            where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\index\\multidraw.rs:84:29\n   |\n84 |     pub fn empty_persistent<F: ?Sized>(facade: &F, elements: usize)\n   |                             ^\n85 |                                -> Result<DrawCommandsNoIndicesBuffer, BufferCreationError>\n86 |                                where F: Facade\n   |                                      ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 3008,
                    "byte_start": 3007,
                    "column_end": 30,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\index\\multidraw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 84,
                    "line_start": 84,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 29,
                        "text": "    pub fn empty_persistent<F: ?Sized>(facade: &F, elements: usize)"
                      }
                    ]
                  },
                  {
                    "byte_end": 3176,
                    "byte_start": 3175,
                    "column_end": 39,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\index\\multidraw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 86,
                    "line_start": 86,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 38,
                        "text": "                               where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\index\\multidraw.rs:97:28\n   |\n97 |     pub fn empty_immutable<F: ?Sized>(facade: &F, elements: usize)\n   |                            ^\n98 |                               -> Result<DrawCommandsNoIndicesBuffer, BufferCreationError>\n99 |                               where F: Facade\n   |                                     ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 3553,
                    "byte_start": 3552,
                    "column_end": 29,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\index\\multidraw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 97,
                    "line_start": 97,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 28,
                        "text": "    pub fn empty_immutable<F: ?Sized>(facade: &F, elements: usize)"
                      }
                    ]
                  },
                  {
                    "byte_end": 3719,
                    "byte_start": 3718,
                    "column_end": 38,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\index\\multidraw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 99,
                    "line_start": 99,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 37,
                        "text": "                              where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\index\\multidraw.rs:159:18\n    |\n159 |     pub fn empty<F: ?Sized>(facade: &F, elements: usize)\n    |                  ^\n160 |                     -> Result<DrawCommandsIndicesBuffer, BufferCreationError>\n161 |                     where F: Facade\n    |                           ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 5581,
                    "byte_start": 5580,
                    "column_end": 19,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "src\\index\\multidraw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 159,
                    "line_start": 159,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 18,
                        "text": "    pub fn empty<F: ?Sized>(facade: &F, elements: usize)"
                      }
                    ]
                  },
                  {
                    "byte_end": 5725,
                    "byte_start": 5724,
                    "column_end": 28,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\index\\multidraw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 161,
                    "line_start": 161,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 27,
                        "text": "                    where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\index\\multidraw.rs:172:26\n    |\n172 |     pub fn empty_dynamic<F: ?Sized>(facade: &F, elements: usize)\n    |                          ^\n173 |                             -> Result<DrawCommandsIndicesBuffer, BufferCreationError>\n174 |                             where F: Facade\n    |                                   ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 6095,
                    "byte_start": 6094,
                    "column_end": 27,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\index\\multidraw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 172,
                    "line_start": 172,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 26,
                        "text": "    pub fn empty_dynamic<F: ?Sized>(facade: &F, elements: usize)"
                      }
                    ]
                  },
                  {
                    "byte_end": 6255,
                    "byte_start": 6254,
                    "column_end": 36,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\index\\multidraw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 174,
                    "line_start": 174,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 35,
                        "text": "                            where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\index\\multidraw.rs:185:29\n    |\n185 |     pub fn empty_persistent<F: ?Sized>(facade: &F, elements: usize)\n    |                             ^\n186 |                                -> Result<DrawCommandsIndicesBuffer, BufferCreationError>\n187 |                                where F: Facade\n    |                                      ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 6628,
                    "byte_start": 6627,
                    "column_end": 30,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\index\\multidraw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 185,
                    "line_start": 185,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 29,
                        "text": "    pub fn empty_persistent<F: ?Sized>(facade: &F, elements: usize)"
                      }
                    ]
                  },
                  {
                    "byte_end": 6794,
                    "byte_start": 6793,
                    "column_end": 39,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\index\\multidraw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 187,
                    "line_start": 187,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 38,
                        "text": "                               where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\index\\multidraw.rs:198:28\n    |\n198 |     pub fn empty_immutable<F: ?Sized>(facade: &F, elements: usize)\n    |                            ^\n199 |                               -> Result<DrawCommandsIndicesBuffer, BufferCreationError>\n200 |                               where F: Facade\n    |                                     ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 7169,
                    "byte_start": 7168,
                    "column_end": 29,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\index\\multidraw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 198,
                    "line_start": 198,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 28,
                        "text": "    pub fn empty_immutable<F: ?Sized>(facade: &F, elements: usize)"
                      }
                    ]
                  },
                  {
                    "byte_end": 7333,
                    "byte_start": 7332,
                    "column_end": 38,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\index\\multidraw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 200,
                    "line_start": 200,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 37,
                        "text": "                              where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\index\\mod.rs:197:25\n    |\n197 |     pub fn is_supported<C: ?Sized>(&self, caps: &C) -> bool where C: CapabilitiesSource {\n    |                         ^                                         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 7164,
                    "byte_start": 7163,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\index\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 197,
                    "line_start": 197,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, caps: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 7206,
                    "byte_start": 7205,
                    "column_end": 68,
                    "column_start": 67,
                    "expansion": null,
                    "file_name": "src\\index\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 197,
                    "line_start": 197,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 68,
                        "highlight_start": 67,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, caps: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\index\\mod.rs:289:25\n    |\n289 |     pub fn is_supported<C: ?Sized>(&self, caps: &C) -> bool where C: CapabilitiesSource {\n    |                         ^                                         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 10451,
                    "byte_start": 10450,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\index\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 289,
                    "line_start": 289,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, caps: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 10493,
                    "byte_start": 10492,
                    "column_end": 68,
                    "column_start": 67,
                    "expansion": null,
                    "file_name": "src\\index\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 289,
                    "line_start": 289,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 68,
                        "highlight_start": 67,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, caps: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\index\\mod.rs:315:21\n    |\n315 |     fn is_supported<C: ?Sized>(caps: &C) -> bool where C: CapabilitiesSource {\n    |                     ^                                  ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 11275,
                    "byte_start": 11274,
                    "column_end": 22,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\index\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 315,
                    "line_start": 315,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 22,
                        "highlight_start": 21,
                        "text": "    fn is_supported<C: ?Sized>(caps: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 11310,
                    "byte_start": 11309,
                    "column_end": 57,
                    "column_start": 56,
                    "expansion": null,
                    "file_name": "src\\index\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 315,
                    "line_start": 315,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 56,
                        "text": "    fn is_supported<C: ?Sized>(caps: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\program\\compute.rs:38:25\n   |\n38 |     pub fn is_supported<C: ?Sized>(ctxt: &C) -> bool where C: CapabilitiesSource {\n   |                         ^                                  ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 997,
                    "byte_start": 996,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\program\\compute.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 38,
                    "line_start": 38,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "    pub fn is_supported<C: ?Sized>(ctxt: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 1032,
                    "byte_start": 1031,
                    "column_end": 61,
                    "column_start": 60,
                    "expansion": null,
                    "file_name": "src\\program\\compute.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 38,
                    "line_start": 38,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 61,
                        "highlight_start": 60,
                        "text": "    pub fn is_supported<C: ?Sized>(ctxt: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\program\\compute.rs:44:24\n   |\n44 |     pub fn from_source<F: ?Sized>(facade: &F, src: &str) -> Result<ComputeShader, ProgramCreationError>\n   |                        ^\n45 |                           where F: Facade\n   |                                 ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 1225,
                    "byte_start": 1224,
                    "column_end": 25,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\program\\compute.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 44,
                    "line_start": 44,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 24,
                        "text": "    pub fn from_source<F: ?Sized>(facade: &F, src: &str) -> Result<ComputeShader, ProgramCreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 1338,
                    "byte_start": 1337,
                    "column_end": 34,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\program\\compute.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 45,
                    "line_start": 45,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 33,
                        "text": "                          where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\program\\compute.rs:58:23\n   |\n58 |     pub fn from_spirv<F: ?Sized>(facade: &F, spirv: &SpirvEntryPoint) -> Result<ComputeShader, ProgramCreationError>\n   |                       ^\n59 |                           where F: Facade\n   |                                 ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 1700,
                    "byte_start": 1699,
                    "column_end": 24,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\program\\compute.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 58,
                    "line_start": 58,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 23,
                        "text": "    pub fn from_spirv<F: ?Sized>(facade: &F, spirv: &SpirvEntryPoint) -> Result<ComputeShader, ProgramCreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 1827,
                    "byte_start": 1826,
                    "column_end": 34,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\program\\compute.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 59,
                    "line_start": 59,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 33,
                        "text": "                          where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\program\\compute.rs:72:24\n   |\n72 |     pub fn from_binary<F: ?Sized>(facade: &F, data: Binary) -> Result<ComputeShader, ProgramCreationError>\n   |                        ^\n73 |                           where F: Facade\n   |                                 ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 2196,
                    "byte_start": 2195,
                    "column_end": 25,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\program\\compute.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 72,
                    "line_start": 72,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 24,
                        "text": "    pub fn from_binary<F: ?Sized>(facade: &F, data: Binary) -> Result<ComputeShader, ProgramCreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 2312,
                    "byte_start": 2311,
                    "column_end": 34,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\program\\compute.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 73,
                    "line_start": 73,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 33,
                        "text": "                          where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\program\\program.rs:42:20\n   |\n42 |     pub fn new<'a, F: ?Sized, I>(facade: &F, input: I) -> Result<Program, ProgramCreationError>\n   |                    ^\n43 |                          where I: Into<ProgramCreationInput<'a>>, F: Facade\n   |                                                                   ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 1109,
                    "byte_start": 1108,
                    "column_end": 21,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\program\\program.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 42,
                    "line_start": 42,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 20,
                        "text": "    pub fn new<'a, F: ?Sized, I>(facade: &F, input: I) -> Result<Program, ProgramCreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 1252,
                    "byte_start": 1251,
                    "column_end": 68,
                    "column_start": 67,
                    "expansion": null,
                    "file_name": "src\\program\\program.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 43,
                    "line_start": 43,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 68,
                        "highlight_start": 67,
                        "text": "                         where I: Into<ProgramCreationInput<'a>>, F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\program\\program.rs:199:28\n    |\n199 |     pub fn from_source<'a, F: ?Sized>(facade: &F, vertex_shader: &'a str, fragment_shader: &'a str,\n    |                            ^\n200 |                               geometry_shader: Option<&'a str>)\n201 |                               -> Result<Program, ProgramCreationError> where F: Facade\n    |                                                                              ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 8280,
                    "byte_start": 8279,
                    "column_end": 29,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\program\\program.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 199,
                    "line_start": 199,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 28,
                        "text": "    pub fn from_source<'a, F: ?Sized>(facade: &F, vertex_shader: &'a str, fragment_shader: &'a str,"
                      }
                    ]
                  },
                  {
                    "byte_end": 8494,
                    "byte_start": 8493,
                    "column_end": 79,
                    "column_start": 78,
                    "expansion": null,
                    "file_name": "src\\program\\program.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 201,
                    "line_start": 201,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 79,
                        "highlight_start": 78,
                        "text": "                              -> Result<Program, ProgramCreationError> where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\program\\raw.rs:75:29\n   |\n75 |     pub fn from_shaders<'a, F: ?Sized, I>(facade: &'a F, shaders: I, has_geometry_shader: bool,\n   |                             ^\n...\n80 |                                   where F: Facade, I: IntoIterator<Item = &'a Shader>\n   |                                         ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 2671,
                    "byte_start": 2670,
                    "column_end": 30,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\program\\raw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 75,
                    "line_start": 75,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 29,
                        "text": "    pub fn from_shaders<'a, F: ?Sized, I>(facade: &'a F, shaders: I, has_geometry_shader: bool,"
                      }
                    ]
                  },
                  {
                    "byte_end": 3106,
                    "byte_start": 3105,
                    "column_end": 42,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "src\\program\\raw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 80,
                    "line_start": 80,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 41,
                        "text": "                                  where F: Facade, I: IntoIterator<Item = &'a Shader>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\program\\raw.rs:206:24\n    |\n206 |     pub fn from_binary<F: ?Sized>(facade: &F, binary: Binary)\n    |                        ^\n207 |                           -> Result<RawProgram, ProgramCreationError> where F: Facade\n    |                                                                             ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 8268,
                    "byte_start": 8267,
                    "column_end": 25,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\program\\raw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 206,
                    "line_start": 206,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 24,
                        "text": "    pub fn from_binary<F: ?Sized>(facade: &F, binary: Binary)"
                      }
                    ]
                  },
                  {
                    "byte_end": 8383,
                    "byte_start": 8382,
                    "column_end": 78,
                    "column_start": 77,
                    "expansion": null,
                    "file_name": "src\\program\\raw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 207,
                    "line_start": 207,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 78,
                        "highlight_start": 77,
                        "text": "                          -> Result<RawProgram, ProgramCreationError> where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\program\\shader.rs:54:21\n   |\n54 | pub fn build_shader<F: ?Sized>(facade: &F, shader_type: gl::types::GLenum, source_code: &str)\n   |                     ^\n55 |                        -> Result<Shader, ProgramCreationError> where F: Facade\n   |                                                                      ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 1216,
                    "byte_start": 1215,
                    "column_end": 22,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\program\\shader.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 54,
                    "line_start": 54,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 22,
                        "highlight_start": 21,
                        "text": "pub fn build_shader<F: ?Sized>(facade: &F, shader_type: gl::types::GLenum, source_code: &str)"
                      }
                    ]
                  },
                  {
                    "byte_end": 1359,
                    "byte_start": 1358,
                    "column_end": 71,
                    "column_start": 70,
                    "expansion": null,
                    "file_name": "src\\program\\shader.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 55,
                    "line_start": 55,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 71,
                        "highlight_start": 70,
                        "text": "                       -> Result<Shader, ProgramCreationError> where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\program\\shader.rs:186:27\n    |\n186 | pub fn build_spirv_shader<F: ?Sized>(facade: &F, shader_type: gl::types::GLenum, spirv: &SpirvEntryPoint)\n    |                           ^\n187 |                        -> Result<Shader, ProgramCreationError> where F: Facade\n    |                                                                      ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 6609,
                    "byte_start": 6608,
                    "column_end": 28,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\program\\shader.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 186,
                    "line_start": 186,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 27,
                        "text": "pub fn build_spirv_shader<F: ?Sized>(facade: &F, shader_type: gl::types::GLenum, spirv: &SpirvEntryPoint)"
                      }
                    ]
                  },
                  {
                    "byte_end": 6758,
                    "byte_start": 6757,
                    "column_end": 71,
                    "column_start": 70,
                    "expansion": null,
                    "file_name": "src\\program\\shader.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 187,
                    "line_start": 187,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 71,
                        "highlight_start": 70,
                        "text": "                       -> Result<Shader, ProgramCreationError> where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\program\\shader.rs:264:40\n    |\n264 | pub fn check_shader_type_compatibility<C: ?Sized>(ctxt: &C, shader_type: gl::types::GLenum)\n    |                                        ^\n265 |                                           -> bool where C: CapabilitiesSource\n    |                                                         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 9583,
                    "byte_start": 9582,
                    "column_end": 41,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "src\\program\\shader.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 264,
                    "line_start": 264,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 40,
                        "text": "pub fn check_shader_type_compatibility<C: ?Sized>(ctxt: &C, shader_type: gl::types::GLenum)"
                      }
                    ]
                  },
                  {
                    "byte_end": 9692,
                    "byte_start": 9691,
                    "column_end": 58,
                    "column_start": 57,
                    "expansion": null,
                    "file_name": "src\\program\\shader.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 265,
                    "line_start": 265,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 57,
                        "text": "                                          -> bool where C: CapabilitiesSource"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\program\\mod.rs:28:37\n   |\n28 | pub fn is_geometry_shader_supported<C: ?Sized>(ctxt: &C) -> bool where C: CapabilitiesSource {\n   |                                     ^                                  ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 782,
                    "byte_start": 781,
                    "column_end": 38,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\program\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 28,
                    "line_start": 28,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 37,
                        "text": "pub fn is_geometry_shader_supported<C: ?Sized>(ctxt: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 817,
                    "byte_start": 816,
                    "column_end": 73,
                    "column_start": 72,
                    "expansion": null,
                    "file_name": "src\\program\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 28,
                    "line_start": 28,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 73,
                        "highlight_start": 72,
                        "text": "pub fn is_geometry_shader_supported<C: ?Sized>(ctxt: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\program\\mod.rs:34:41\n   |\n34 | pub fn is_tessellation_shader_supported<C: ?Sized>(ctxt: &C) -> bool where C: CapabilitiesSource {\n   |                                         ^                                  ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 1028,
                    "byte_start": 1027,
                    "column_end": 42,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "src\\program\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 34,
                    "line_start": 34,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 41,
                        "text": "pub fn is_tessellation_shader_supported<C: ?Sized>(ctxt: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 1063,
                    "byte_start": 1062,
                    "column_end": 77,
                    "column_start": 76,
                    "expansion": null,
                    "file_name": "src\\program\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 34,
                    "line_start": 34,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 77,
                        "highlight_start": 76,
                        "text": "pub fn is_tessellation_shader_supported<C: ?Sized>(ctxt: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\program\\mod.rs:40:28\n   |\n40 | pub fn is_binary_supported<C: ?Sized>(ctxt: &C) -> bool where C: CapabilitiesSource {\n   |                            ^                                  ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 1282,
                    "byte_start": 1281,
                    "column_end": 29,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\program\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 40,
                    "line_start": 40,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 28,
                        "text": "pub fn is_binary_supported<C: ?Sized>(ctxt: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 1317,
                    "byte_start": 1316,
                    "column_end": 64,
                    "column_start": 63,
                    "expansion": null,
                    "file_name": "src\\program\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 40,
                    "line_start": 40,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 64,
                        "highlight_start": 63,
                        "text": "pub fn is_binary_supported<C: ?Sized>(ctxt: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\program\\mod.rs:47:32\n   |\n47 | pub fn is_subroutine_supported<C: ?Sized>(ctxt: &C) -> bool where C: CapabilitiesSource {\n   |                                ^                                  ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 1607,
                    "byte_start": 1606,
                    "column_end": 33,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\program\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 47,
                    "line_start": 47,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 32,
                        "text": "pub fn is_subroutine_supported<C: ?Sized>(ctxt: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 1642,
                    "byte_start": 1641,
                    "column_end": 68,
                    "column_start": 67,
                    "expansion": null,
                    "file_name": "src\\program\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 47,
                    "line_start": 47,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 68,
                        "highlight_start": 67,
                        "text": "pub fn is_subroutine_supported<C: ?Sized>(ctxt: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\uniforms\\buffer.rs:50:16\n   |\n50 |     pub fn new<F: ?Sized>(facade: &F, data: T) -> Result<UniformBuffer<T>, BufferCreationError>\n   |                ^\n51 |                   where F: Facade\n   |                         ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 1261,
                    "byte_start": 1260,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 50,
                    "line_start": 50,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<F: ?Sized>(facade: &F, data: T) -> Result<UniformBuffer<T>, BufferCreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 1366,
                    "byte_start": 1365,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 51,
                    "line_start": 51,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "                  where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\uniforms\\buffer.rs:58:20\n   |\n58 |     pub fn dynamic<F: ?Sized>(facade: &F, data: T) -> Result<UniformBuffer<T>, BufferCreationError>\n   |                    ^\n59 |                       where F: Facade\n   |                             ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 1534,
                    "byte_start": 1533,
                    "column_end": 21,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 58,
                    "line_start": 58,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 20,
                        "text": "    pub fn dynamic<F: ?Sized>(facade: &F, data: T) -> Result<UniformBuffer<T>, BufferCreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 1643,
                    "byte_start": 1642,
                    "column_end": 30,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 59,
                    "line_start": 59,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 29,
                        "text": "                      where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\uniforms\\buffer.rs:66:23\n   |\n66 |     pub fn persistent<F: ?Sized>(facade: &F, data: T) -> Result<UniformBuffer<T>, BufferCreationError>\n   |                       ^\n67 |                   where F: Facade\n   |                         ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 1814,
                    "byte_start": 1813,
                    "column_end": 24,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 66,
                    "line_start": 66,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 23,
                        "text": "    pub fn persistent<F: ?Sized>(facade: &F, data: T) -> Result<UniformBuffer<T>, BufferCreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 1919,
                    "byte_start": 1918,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 67,
                    "line_start": 67,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "                  where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\uniforms\\buffer.rs:74:22\n   |\n74 |     pub fn immutable<F: ?Sized>(facade: &F, data: T) -> Result<UniformBuffer<T>, BufferCreationError>\n   |                      ^\n75 |                         where F: Facade\n   |                               ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 2092,
                    "byte_start": 2091,
                    "column_end": 23,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 74,
                    "line_start": 74,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 22,
                        "text": "    pub fn immutable<F: ?Sized>(facade: &F, data: T) -> Result<UniformBuffer<T>, BufferCreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 2203,
                    "byte_start": 2202,
                    "column_end": 32,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 75,
                    "line_start": 75,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 31,
                        "text": "                        where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\uniforms\\buffer.rs:81:17\n   |\n81 |     fn new_impl<F: ?Sized>(facade: &F, data: T, mode: BufferMode)\n   |                 ^\n82 |                    -> Result<UniformBuffer<T>, BufferCreationError>\n83 |                    where F: Facade\n   |                          ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 2325,
                    "byte_start": 2324,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 81,
                    "line_start": 81,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 18,
                        "highlight_start": 17,
                        "text": "    fn new_impl<F: ?Sized>(facade: &F, data: T, mode: BufferMode)"
                      }
                    ]
                  },
                  {
                    "byte_end": 2468,
                    "byte_start": 2467,
                    "column_end": 27,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 83,
                    "line_start": 83,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 26,
                        "text": "                   where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\uniforms\\buffer.rs:94:18\n   |\n94 |     pub fn empty<F: ?Sized>(facade: &F) -> Result<UniformBuffer<T>, BufferCreationError> where F: Facade {\n   |                  ^                                                                             ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 2697,
                    "byte_start": 2696,
                    "column_end": 19,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 94,
                    "line_start": 94,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 18,
                        "text": "    pub fn empty<F: ?Sized>(facade: &F) -> Result<UniformBuffer<T>, BufferCreationError> where F: Facade {"
                      }
                    ]
                  },
                  {
                    "byte_end": 2775,
                    "byte_start": 2774,
                    "column_end": 97,
                    "column_start": 96,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 94,
                    "line_start": 94,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 97,
                        "highlight_start": 96,
                        "text": "    pub fn empty<F: ?Sized>(facade: &F) -> Result<UniformBuffer<T>, BufferCreationError> where F: Facade {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\uniforms\\buffer.rs:100:26\n    |\n100 |     pub fn empty_dynamic<F: ?Sized>(facade: &F) -> Result<UniformBuffer<T>, BufferCreationError>\n    |                          ^\n101 |                             where F: Facade\n    |                                   ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 2929,
                    "byte_start": 2928,
                    "column_end": 27,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 100,
                    "line_start": 100,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 26,
                        "text": "    pub fn empty_dynamic<F: ?Sized>(facade: &F) -> Result<UniformBuffer<T>, BufferCreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 3035,
                    "byte_start": 3034,
                    "column_end": 36,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 101,
                    "line_start": 101,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 35,
                        "text": "                            where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\uniforms\\buffer.rs:108:29\n    |\n108 |     pub fn empty_persistent<F: ?Sized>(facade: &F) -> Result<UniformBuffer<T>, BufferCreationError>\n    |                             ^\n109 |                                where F: Facade\n    |                                      ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 3196,
                    "byte_start": 3195,
                    "column_end": 30,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 108,
                    "line_start": 108,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 29,
                        "text": "    pub fn empty_persistent<F: ?Sized>(facade: &F) -> Result<UniformBuffer<T>, BufferCreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 3305,
                    "byte_start": 3304,
                    "column_end": 39,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 109,
                    "line_start": 109,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 38,
                        "text": "                               where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\uniforms\\buffer.rs:116:28\n    |\n116 |     pub fn empty_immutable<F: ?Sized>(facade: &F) -> Result<UniformBuffer<T>, BufferCreationError>\n    |                            ^\n117 |                               where F: Facade\n    |                                     ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 3468,
                    "byte_start": 3467,
                    "column_end": 29,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 116,
                    "line_start": 116,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 28,
                        "text": "    pub fn empty_immutable<F: ?Sized>(facade: &F) -> Result<UniformBuffer<T>, BufferCreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 3576,
                    "byte_start": 3575,
                    "column_end": 38,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 117,
                    "line_start": 117,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 37,
                        "text": "                              where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\uniforms\\buffer.rs:123:19\n    |\n123 |     fn empty_impl<F: ?Sized>(facade: &F, mode: BufferMode) -> Result<UniformBuffer<T>, BufferCreationError>\n    |                   ^\n124 |                      where F: Facade\n    |                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 3696,
                    "byte_start": 3695,
                    "column_end": 20,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 123,
                    "line_start": 123,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 19,
                        "text": "    fn empty_impl<F: ?Sized>(facade: &F, mode: BufferMode) -> Result<UniformBuffer<T>, BufferCreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 3813,
                    "byte_start": 3812,
                    "column_end": 29,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 124,
                    "line_start": 124,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 28,
                        "text": "                     where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\uniforms\\buffer.rs:142:26\n    |\n142 |     pub fn empty_unsized<F: ?Sized>(facade: &F, size: usize)\n    |                          ^\n143 |                             -> Result<UniformBuffer<T>, BufferCreationError>\n144 |                             where F: Facade\n    |                                   ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 4224,
                    "byte_start": 4223,
                    "column_end": 27,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 142,
                    "line_start": 142,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 26,
                        "text": "    pub fn empty_unsized<F: ?Sized>(facade: &F, size: usize)"
                      }
                    ]
                  },
                  {
                    "byte_end": 4371,
                    "byte_start": 4370,
                    "column_end": 36,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 144,
                    "line_start": 144,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 35,
                        "text": "                            where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\uniforms\\buffer.rs:156:34\n    |\n156 |     pub fn empty_unsized_dynamic<F: ?Sized>(facade: &F, size: usize)\n    |                                  ^\n157 |                                     -> Result<UniformBuffer<T>, BufferCreationError>\n158 |                                     where F: Facade\n    |                                           ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 4676,
                    "byte_start": 4675,
                    "column_end": 35,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 156,
                    "line_start": 156,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 34,
                        "text": "    pub fn empty_unsized_dynamic<F: ?Sized>(facade: &F, size: usize)"
                      }
                    ]
                  },
                  {
                    "byte_end": 4839,
                    "byte_start": 4838,
                    "column_end": 44,
                    "column_start": 43,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 158,
                    "line_start": 158,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 44,
                        "highlight_start": 43,
                        "text": "                                    where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\uniforms\\buffer.rs:170:37\n    |\n170 |     pub fn empty_unsized_persistent<F: ?Sized>(facade: &F, size: usize)\n    |                                     ^\n171 |                                        -> Result<UniformBuffer<T>, BufferCreationError>\n172 |                                        where F: Facade\n    |                                              ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 5147,
                    "byte_start": 5146,
                    "column_end": 38,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 170,
                    "line_start": 170,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 37,
                        "text": "    pub fn empty_unsized_persistent<F: ?Sized>(facade: &F, size: usize)"
                      }
                    ]
                  },
                  {
                    "byte_end": 5316,
                    "byte_start": 5315,
                    "column_end": 47,
                    "column_start": 46,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 172,
                    "line_start": 172,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 47,
                        "highlight_start": 46,
                        "text": "                                       where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\uniforms\\buffer.rs:184:36\n    |\n184 |     pub fn empty_unsized_immutable<F: ?Sized>(facade: &F, size: usize)\n    |                                    ^\n185 |                                       -> Result<UniformBuffer<T>, BufferCreationError>\n186 |                                       where F: Facade\n    |                                             ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 5626,
                    "byte_start": 5625,
                    "column_end": 37,
                    "column_start": 36,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 184,
                    "line_start": 184,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 36,
                        "text": "    pub fn empty_unsized_immutable<F: ?Sized>(facade: &F, size: usize)"
                      }
                    ]
                  },
                  {
                    "byte_end": 5793,
                    "byte_start": 5792,
                    "column_end": 46,
                    "column_start": 45,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 186,
                    "line_start": 186,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 46,
                        "highlight_start": 45,
                        "text": "                                      where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\uniforms\\buffer.rs:192:27\n    |\n192 |     fn empty_unsized_impl<F: ?Sized>(facade: &F, size: usize, mode: BufferMode)\n    |                           ^\n193 |                              -> Result<UniformBuffer<T>, BufferCreationError>\n194 |                              where F: Facade\n    |                                    ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 5935,
                    "byte_start": 5934,
                    "column_end": 28,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 192,
                    "line_start": 192,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 27,
                        "text": "    fn empty_unsized_impl<F: ?Sized>(facade: &F, size: usize, mode: BufferMode)"
                      }
                    ]
                  },
                  {
                    "byte_end": 6102,
                    "byte_start": 6101,
                    "column_end": 37,
                    "column_start": 36,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 194,
                    "line_start": 194,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 36,
                        "text": "                             where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\uniforms\\buffer.rs:238:14\n    |\n238 |         fn f<T: ?Sized>(block: &program::UniformBlock)\n    |              ^\n239 |                         -> Result<(), LayoutMismatchError> where T: UniformBlock + Content\n    |                                                                  ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 7223,
                    "byte_start": 7222,
                    "column_end": 15,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 238,
                    "line_start": 238,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 14,
                        "text": "        fn f<T: ?Sized>(block: &program::UniformBlock)"
                      }
                    ]
                  },
                  {
                    "byte_end": 7330,
                    "byte_start": 7329,
                    "column_end": 67,
                    "column_start": 66,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 239,
                    "line_start": 239,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 67,
                        "highlight_start": 66,
                        "text": "                        -> Result<(), LayoutMismatchError> where T: UniformBlock + Content"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\uniforms\\mod.rs:290:14\n    |\n290 |         fn f<T: ?Sized>(block: &program::UniformBlock)\n    |              ^\n291 |                         -> Result<(), LayoutMismatchError> where T: UniformBlock + BufferContent\n    |                                                                  ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 8819,
                    "byte_start": 8818,
                    "column_end": 15,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "src\\uniforms\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 290,
                    "line_start": 290,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 14,
                        "text": "        fn f<T: ?Sized>(block: &program::UniformBlock)"
                      }
                    ]
                  },
                  {
                    "byte_end": 8926,
                    "byte_start": 8925,
                    "column_end": 67,
                    "column_start": 66,
                    "expansion": null,
                    "file_name": "src\\uniforms\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 291,
                    "line_start": 291,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 67,
                        "highlight_start": 66,
                        "text": "                        -> Result<(), LayoutMismatchError> where T: UniformBlock + BufferContent"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\vertex\\buffer.rs:131:16\n    |\n131 |     pub fn new<F: ?Sized>(facade: &F, data: &[T]) -> Result<VertexBuffer<T>, CreationError>\n    |                ^\n132 |                   where F: Facade\n    |                         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 4265,
                    "byte_start": 4264,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 131,
                    "line_start": 131,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<F: ?Sized>(facade: &F, data: &[T]) -> Result<VertexBuffer<T>, CreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 4366,
                    "byte_start": 4365,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 132,
                    "line_start": 132,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "                  where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\vertex\\buffer.rs:141:20\n    |\n141 |     pub fn dynamic<F: ?Sized>(facade: &F, data: &[T]) -> Result<VertexBuffer<T>, CreationError>\n    |                    ^\n142 |                       where F: Facade\n    |                             ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 4619,
                    "byte_start": 4618,
                    "column_end": 21,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 141,
                    "line_start": 141,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 20,
                        "text": "    pub fn dynamic<F: ?Sized>(facade: &F, data: &[T]) -> Result<VertexBuffer<T>, CreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 4724,
                    "byte_start": 4723,
                    "column_end": 30,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 142,
                    "line_start": 142,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 29,
                        "text": "                      where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\vertex\\buffer.rs:149:23\n    |\n149 |     pub fn persistent<F: ?Sized>(facade: &F, data: &[T]) -> Result<VertexBuffer<T>, CreationError>\n    |                       ^\n150 |                          where F: Facade\n    |                                ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 4885,
                    "byte_start": 4884,
                    "column_end": 24,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 149,
                    "line_start": 149,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 23,
                        "text": "    pub fn persistent<F: ?Sized>(facade: &F, data: &[T]) -> Result<VertexBuffer<T>, CreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 4993,
                    "byte_start": 4992,
                    "column_end": 33,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 150,
                    "line_start": 150,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 32,
                        "text": "                         where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\vertex\\buffer.rs:157:22\n    |\n157 |     pub fn immutable<F: ?Sized>(facade: &F, data: &[T]) -> Result<VertexBuffer<T>, CreationError>\n    |                      ^\n158 |                         where F: Facade\n    |                               ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 5156,
                    "byte_start": 5155,
                    "column_end": 23,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 157,
                    "line_start": 157,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 22,
                        "text": "    pub fn immutable<F: ?Sized>(facade: &F, data: &[T]) -> Result<VertexBuffer<T>, CreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 5263,
                    "byte_start": 5262,
                    "column_end": 32,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 158,
                    "line_start": 158,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 31,
                        "text": "                        where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\vertex\\buffer.rs:164:17\n    |\n164 |     fn new_impl<F: ?Sized>(facade: &F, data: &[T], mode: BufferMode)\n    |                 ^\n165 |                    -> Result<VertexBuffer<T>, CreationError>\n166 |                    where F: Facade\n    |                          ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 5384,
                    "byte_start": 5383,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 164,
                    "line_start": 164,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 18,
                        "highlight_start": 17,
                        "text": "    fn new_impl<F: ?Sized>(facade: &F, data: &[T], mode: BufferMode)"
                      }
                    ]
                  },
                  {
                    "byte_end": 5523,
                    "byte_start": 5522,
                    "column_end": 27,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 166,
                    "line_start": 166,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 26,
                        "text": "                   where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\vertex\\buffer.rs:180:18\n    |\n180 |     pub fn empty<F: ?Sized>(facade: &F, elements: usize) -> Result<VertexBuffer<T>, CreationError>\n    |                  ^\n181 |                     where F: Facade\n    |                           ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 5894,
                    "byte_start": 5893,
                    "column_end": 19,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 180,
                    "line_start": 180,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 18,
                        "text": "    pub fn empty<F: ?Sized>(facade: &F, elements: usize) -> Result<VertexBuffer<T>, CreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 6002,
                    "byte_start": 6001,
                    "column_end": 28,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 181,
                    "line_start": 181,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 27,
                        "text": "                    where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\vertex\\buffer.rs:190:26\n    |\n190 |     pub fn empty_dynamic<F: ?Sized>(facade: &F, elements: usize) -> Result<VertexBuffer<T>, CreationError>\n    |                          ^\n191 |                             where F: Facade\n    |                                   ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 6239,
                    "byte_start": 6238,
                    "column_end": 27,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 190,
                    "line_start": 190,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 26,
                        "text": "    pub fn empty_dynamic<F: ?Sized>(facade: &F, elements: usize) -> Result<VertexBuffer<T>, CreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 6355,
                    "byte_start": 6354,
                    "column_end": 36,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 191,
                    "line_start": 191,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 35,
                        "text": "                            where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\vertex\\buffer.rs:200:29\n    |\n200 |     pub fn empty_persistent<F: ?Sized>(facade: &F, elements: usize)\n    |                             ^\n201 |                                -> Result<VertexBuffer<T>, CreationError>\n202 |                                where F: Facade\n    |                                      ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 6595,
                    "byte_start": 6594,
                    "column_end": 30,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 200,
                    "line_start": 200,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 29,
                        "text": "    pub fn empty_persistent<F: ?Sized>(facade: &F, elements: usize)"
                      }
                    ]
                  },
                  {
                    "byte_end": 6745,
                    "byte_start": 6744,
                    "column_end": 39,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 202,
                    "line_start": 202,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 38,
                        "text": "                               where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\vertex\\buffer.rs:211:28\n    |\n211 |     pub fn empty_immutable<F: ?Sized>(facade: &F, elements: usize) -> Result<VertexBuffer<T>, CreationError>\n    |                            ^\n212 |                               where F: Facade\n    |                                     ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 6987,
                    "byte_start": 6986,
                    "column_end": 29,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 211,
                    "line_start": 211,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 28,
                        "text": "    pub fn empty_immutable<F: ?Sized>(facade: &F, elements: usize) -> Result<VertexBuffer<T>, CreationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 7105,
                    "byte_start": 7104,
                    "column_end": 38,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 212,
                    "line_start": 212,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 37,
                        "text": "                              where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\vertex\\buffer.rs:218:19\n    |\n218 |     fn empty_impl<F: ?Sized>(facade: &F, elements: usize, mode: BufferMode)\n    |                   ^\n219 |                      -> Result<VertexBuffer<T>, CreationError>\n220 |                      where F: Facade\n    |                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 7234,
                    "byte_start": 7233,
                    "column_end": 20,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 218,
                    "line_start": 218,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 19,
                        "text": "    fn empty_impl<F: ?Sized>(facade: &F, elements: usize, mode: BufferMode)"
                      }
                    ]
                  },
                  {
                    "byte_end": 7382,
                    "byte_start": 7381,
                    "column_end": 29,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 220,
                    "line_start": 220,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 28,
                        "text": "                     where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\vertex\\buffer.rs:264:27\n    |\n264 |     pub unsafe fn new_raw<F: ?Sized>(facade: &F, data: &[T],\n    |                           ^\n...\n267 |                              where F: Facade\n    |                                    ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 8730,
                    "byte_start": 8729,
                    "column_end": 28,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 264,
                    "line_start": 264,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 27,
                        "text": "    pub unsafe fn new_raw<F: ?Sized>(facade: &F, data: &[T],"
                      }
                    ]
                  },
                  {
                    "byte_end": 8946,
                    "byte_start": 8945,
                    "column_end": 37,
                    "column_start": 36,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 267,
                    "line_start": 267,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 36,
                        "text": "                             where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\vertex\\buffer.rs:280:35\n    |\n280 |     pub unsafe fn new_raw_dynamic<F: ?Sized>(facade: &F, data: &[T],\n    |                                   ^\n...\n283 |                                      where F: Facade\n    |                                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 9303,
                    "byte_start": 9302,
                    "column_end": 36,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 280,
                    "line_start": 280,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 35,
                        "text": "    pub unsafe fn new_raw_dynamic<F: ?Sized>(facade: &F, data: &[T],"
                      }
                    ]
                  },
                  {
                    "byte_end": 9543,
                    "byte_start": 9542,
                    "column_end": 45,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 283,
                    "line_start": 283,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 45,
                        "highlight_start": 44,
                        "text": "                                     where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\vertex\\format.rs:149:25\n    |\n149 |     pub fn is_supported<C: ?Sized>(&self, caps: &C) -> bool where C: CapabilitiesSource {\n    |                         ^                                         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 3579,
                    "byte_start": 3578,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\vertex\\format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 149,
                    "line_start": 149,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, caps: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 3621,
                    "byte_start": 3620,
                    "column_end": 68,
                    "column_start": 67,
                    "expansion": null,
                    "file_name": "src\\vertex\\format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 149,
                    "line_start": 149,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 68,
                        "highlight_start": 67,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, caps: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\vertex\\transform_feedback.rs:124:40\n    |\n124 | pub fn is_transform_feedback_supported<F: ?Sized>(facade: &F) -> bool where F: Facade {\n    |                                        ^                                    ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 5049,
                    "byte_start": 5048,
                    "column_end": 41,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "src\\vertex\\transform_feedback.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 124,
                    "line_start": 124,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 40,
                        "text": "pub fn is_transform_feedback_supported<F: ?Sized>(facade: &F) -> bool where F: Facade {"
                      }
                    ]
                  },
                  {
                    "byte_end": 5086,
                    "byte_start": 5085,
                    "column_end": 78,
                    "column_start": 77,
                    "expansion": null,
                    "file_name": "src\\vertex\\transform_feedback.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 124,
                    "line_start": 124,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 78,
                        "highlight_start": 77,
                        "text": "pub fn is_transform_feedback_supported<F: ?Sized>(facade: &F) -> bool where F: Facade {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\vertex\\transform_feedback.rs:137:16\n    |\n137 |     pub fn new<F: ?Sized, V>(facade: &F, program: &'a Program, buffer: &'a mut Buffer<[V]>)\n    |                ^\n138 |                      -> Result<TransformFeedbackSession<'a>, TransformFeedbackSessionCreationError>\n139 |                      where F: Facade, V: Vertex + Copy + Send + 'static\n    |                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 5538,
                    "byte_start": 5537,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\vertex\\transform_feedback.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 137,
                    "line_start": 137,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<F: ?Sized, V>(facade: &F, program: &'a Program, buffer: &'a mut Buffer<[V]>)"
                      }
                    ]
                  },
                  {
                    "byte_end": 5742,
                    "byte_start": 5741,
                    "column_end": 29,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\vertex\\transform_feedback.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 139,
                    "line_start": 139,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 28,
                        "text": "                     where F: Facade, V: Vertex + Copy + Send + 'static"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\vertex\\mod.rs:293:21\n    |\n293 |     fn is_supported<C: ?Sized>(caps: &C) -> bool where C: CapabilitiesSource {\n    |                     ^                                  ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 10178,
                    "byte_start": 10177,
                    "column_end": 22,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\vertex\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 293,
                    "line_start": 293,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 22,
                        "highlight_start": 21,
                        "text": "    fn is_supported<C: ?Sized>(caps: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 10213,
                    "byte_start": 10212,
                    "column_end": 57,
                    "column_start": 56,
                    "expansion": null,
                    "file_name": "src\\vertex\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 293,
                    "line_start": 293,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 56,
                        "text": "    fn is_supported<C: ?Sized>(caps: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\vertex\\mod.rs:319:21\n    |\n319 |     fn is_supported<C: ?Sized>(caps: &C) -> bool where C: CapabilitiesSource {\n    |                     ^                                  ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 10816,
                    "byte_start": 10815,
                    "column_end": 22,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\vertex\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 319,
                    "line_start": 319,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 22,
                        "highlight_start": 21,
                        "text": "    fn is_supported<C: ?Sized>(caps: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 10851,
                    "byte_start": 10850,
                    "column_end": 57,
                    "column_start": 56,
                    "expansion": null,
                    "file_name": "src\\vertex\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 319,
                    "line_start": 319,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 56,
                        "text": "    fn is_supported<C: ?Sized>(caps: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\semaphore.rs:154:17\n    |\n154 |     pub fn wait<T: ?Sized>(\n    |                 ^\n...\n159 |         T: Content,\n    |         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 5991,
                    "byte_start": 5990,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\semaphore.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 154,
                    "line_start": 154,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 18,
                        "highlight_start": 17,
                        "text": "    pub fn wait<T: ?Sized>("
                      }
                    ]
                  },
                  {
                    "byte_end": 6137,
                    "byte_start": 6136,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\semaphore.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 159,
                    "line_start": 159,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        T: Content,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\semaphore.rs:208:19\n    |\n208 |     pub fn signal<T: ?Sized>(\n    |                   ^\n...\n213 |         T: Content,\n    |         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 7851,
                    "byte_start": 7850,
                    "column_end": 20,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "src\\semaphore.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 208,
                    "line_start": 208,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 19,
                        "text": "    pub fn signal<T: ?Sized>("
                      }
                    ]
                  },
                  {
                    "byte_end": 7997,
                    "byte_start": 7996,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\semaphore.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 213,
                    "line_start": 213,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 9,
                        "text": "        T: Content,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\texture\\buffer_texture.rs:189:16\n    |\n189 |     pub fn new<F: ?Sized>(facade: &F, data: &[T], ty: BufferTextureType)\n    |                ^\n190 |                   -> Result<BufferTexture<T>, CreationError>\n191 |                   where F: Facade\n    |                         ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 6320,
                    "byte_start": 6319,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 189,
                    "line_start": 189,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<F: ?Sized>(facade: &F, data: &[T], ty: BufferTextureType)"
                      }
                    ]
                  },
                  {
                    "byte_end": 6463,
                    "byte_start": 6462,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 191,
                    "line_start": 191,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "                  where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\texture\\buffer_texture.rs:198:20\n    |\n198 |     pub fn dynamic<F: ?Sized>(facade: &F, data: &[T], ty: BufferTextureType)\n    |                    ^\n199 |                   -> Result<BufferTexture<T>, CreationError>\n200 |                       where F: Facade\n    |                             ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 6637,
                    "byte_start": 6636,
                    "column_end": 21,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 198,
                    "line_start": 198,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 20,
                        "text": "    pub fn dynamic<F: ?Sized>(facade: &F, data: &[T], ty: BufferTextureType)"
                      }
                    ]
                  },
                  {
                    "byte_end": 6784,
                    "byte_start": 6783,
                    "column_end": 30,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 200,
                    "line_start": 200,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 29,
                        "text": "                      where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\texture\\buffer_texture.rs:207:23\n    |\n207 |     pub fn persistent<F: ?Sized>(facade: &F, data: &[T], ty: BufferTextureType)\n    |                       ^\n208 |                   -> Result<BufferTexture<T>, CreationError>\n209 |                          where F: Facade\n    |                                ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 6961,
                    "byte_start": 6960,
                    "column_end": 24,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 207,
                    "line_start": 207,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 23,
                        "text": "    pub fn persistent<F: ?Sized>(facade: &F, data: &[T], ty: BufferTextureType)"
                      }
                    ]
                  },
                  {
                    "byte_end": 7111,
                    "byte_start": 7110,
                    "column_end": 33,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 209,
                    "line_start": 209,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 32,
                        "text": "                         where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\texture\\buffer_texture.rs:216:22\n    |\n216 |     pub fn immutable<F: ?Sized>(facade: &F, data: &[T], ty: BufferTextureType)\n    |                      ^\n217 |                         -> Result<BufferTexture<T>, CreationError>\n218 |                         where F: Facade\n    |                               ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 7290,
                    "byte_start": 7289,
                    "column_end": 23,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 216,
                    "line_start": 216,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 22,
                        "text": "    pub fn immutable<F: ?Sized>(facade: &F, data: &[T], ty: BufferTextureType)"
                      }
                    ]
                  },
                  {
                    "byte_end": 7445,
                    "byte_start": 7444,
                    "column_end": 32,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 218,
                    "line_start": 218,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 31,
                        "text": "                        where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\texture\\buffer_texture.rs:224:17\n    |\n224 |     fn new_impl<F: ?Sized>(facade: &F, data: &[T], mode: BufferMode, ty: BufferTextureType)\n    |                 ^\n225 |                    -> Result<BufferTexture<T>, CreationError>\n226 |                    where F: Facade\n    |                          ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 7571,
                    "byte_start": 7570,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 224,
                    "line_start": 224,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 18,
                        "highlight_start": 17,
                        "text": "    fn new_impl<F: ?Sized>(facade: &F, data: &[T], mode: BufferMode, ty: BufferTextureType)"
                      }
                    ]
                  },
                  {
                    "byte_end": 7734,
                    "byte_start": 7733,
                    "column_end": 27,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 226,
                    "line_start": 226,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 26,
                        "text": "                   where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\texture\\buffer_texture.rs:234:18\n    |\n234 |     pub fn empty<F: ?Sized>(facade: &F, len: usize, ty: BufferTextureType)\n    |                  ^\n235 |                     -> Result<BufferTexture<T>, CreationError>\n236 |                     where F: Facade\n    |                           ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 7994,
                    "byte_start": 7993,
                    "column_end": 19,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 234,
                    "line_start": 234,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 18,
                        "text": "    pub fn empty<F: ?Sized>(facade: &F, len: usize, ty: BufferTextureType)"
                      }
                    ]
                  },
                  {
                    "byte_end": 8141,
                    "byte_start": 8140,
                    "column_end": 28,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 236,
                    "line_start": 236,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 27,
                        "text": "                    where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\texture\\buffer_texture.rs:243:26\n    |\n243 |     pub fn empty_dynamic<F: ?Sized>(facade: &F, len: usize, ty: BufferTextureType)\n    |                          ^\n244 |                             -> Result<BufferTexture<T>, CreationError>\n245 |                             where F: Facade\n    |                                   ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 8317,
                    "byte_start": 8316,
                    "column_end": 27,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 243,
                    "line_start": 243,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 26,
                        "text": "    pub fn empty_dynamic<F: ?Sized>(facade: &F, len: usize, ty: BufferTextureType)"
                      }
                    ]
                  },
                  {
                    "byte_end": 8480,
                    "byte_start": 8479,
                    "column_end": 36,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 245,
                    "line_start": 245,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 35,
                        "text": "                            where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\texture\\buffer_texture.rs:252:29\n    |\n252 |     pub fn empty_persistent<F: ?Sized>(facade: &F, len: usize, ty: BufferTextureType)\n    |                             ^\n253 |                                -> Result<BufferTexture<T>, CreationError>\n254 |                                where F: Facade\n    |                                      ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 8659,
                    "byte_start": 8658,
                    "column_end": 30,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 252,
                    "line_start": 252,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 29,
                        "text": "    pub fn empty_persistent<F: ?Sized>(facade: &F, len: usize, ty: BufferTextureType)"
                      }
                    ]
                  },
                  {
                    "byte_end": 8828,
                    "byte_start": 8827,
                    "column_end": 39,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 254,
                    "line_start": 254,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 38,
                        "text": "                               where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\texture\\buffer_texture.rs:261:28\n    |\n261 |     pub fn empty_immutable<F: ?Sized>(facade: &F, len: usize, ty: BufferTextureType)\n    |                            ^\n262 |                               -> Result<BufferTexture<T>, CreationError>\n263 |                               where F: Facade\n    |                                     ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 9009,
                    "byte_start": 9008,
                    "column_end": 29,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 261,
                    "line_start": 261,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 28,
                        "text": "    pub fn empty_immutable<F: ?Sized>(facade: &F, len: usize, ty: BufferTextureType)"
                      }
                    ]
                  },
                  {
                    "byte_end": 9176,
                    "byte_start": 9175,
                    "column_end": 38,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 263,
                    "line_start": 263,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 37,
                        "text": "                              where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\texture\\buffer_texture.rs:269:19\n    |\n269 |     fn empty_impl<F: ?Sized>(facade: &F, len: usize, ty: BufferTextureType, mode: BufferMode)\n    |                   ^\n270 |                      -> Result<BufferTexture<T>, CreationError>\n271 |                      where F: Facade\n    |                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 9305,
                    "byte_start": 9304,
                    "column_end": 20,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 269,
                    "line_start": 269,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 19,
                        "text": "    fn empty_impl<F: ?Sized>(facade: &F, len: usize, ty: BufferTextureType, mode: BufferMode)"
                      }
                    ]
                  },
                  {
                    "byte_end": 9472,
                    "byte_start": 9471,
                    "column_end": 29,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 271,
                    "line_start": 271,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 28,
                        "text": "                     where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\texture\\buffer_texture.rs:278:24\n    |\n278 |     pub fn from_buffer<F: ?Sized>(context: &F, buffer: Buffer<[T]>, ty: BufferTextureType)\n    |                        ^\n279 |                           -> Result<BufferTexture<T>, (TextureCreationError, Buffer<[T]>)>\n280 |                           where F: Facade\n    |                                 ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 9758,
                    "byte_start": 9757,
                    "column_end": 25,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 278,
                    "line_start": 278,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 24,
                        "text": "    pub fn from_buffer<F: ?Sized>(context: &F, buffer: Buffer<[T]>, ty: BufferTextureType)"
                      }
                    ]
                  },
                  {
                    "byte_end": 9949,
                    "byte_start": 9948,
                    "column_end": 34,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 280,
                    "line_start": 280,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 33,
                        "text": "                          where F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\texture\\pixel_buffer.rs:31:22\n   |\n31 |     pub fn new_empty<F: ?Sized>(facade: &F, capacity: usize) -> PixelBuffer<T> where F: Facade {\n   |                      ^                                                               ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 924,
                    "byte_start": 923,
                    "column_end": 23,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\texture\\pixel_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 31,
                    "line_start": 31,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 22,
                        "text": "    pub fn new_empty<F: ?Sized>(facade: &F, capacity: usize) -> PixelBuffer<T> where F: Facade {"
                      }
                    ]
                  },
                  {
                    "byte_end": 988,
                    "byte_start": 987,
                    "column_end": 87,
                    "column_start": 86,
                    "expansion": null,
                    "file_name": "src\\texture\\pixel_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 31,
                    "line_start": 31,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 87,
                        "highlight_start": 86,
                        "text": "    pub fn new_empty<F: ?Sized>(facade: &F, capacity: usize) -> PixelBuffer<T> where F: Facade {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\texture\\any.rs:137:24\n    |\n137 | pub fn new_texture<'a, F: ?Sized, P>(facade: &F, format: TextureFormatRequest,\n    |                        ^\n...\n141 |                              where P: Send + Clone + 'a, F: Facade\n    |                                                          ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 5146,
                    "byte_start": 5145,
                    "column_end": 25,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\texture\\any.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 137,
                    "line_start": 137,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 24,
                        "text": "pub fn new_texture<'a, F: ?Sized, P>(facade: &F, format: TextureFormatRequest,"
                      }
                    ]
                  },
                  {
                    "byte_end": 5477,
                    "byte_start": 5476,
                    "column_end": 59,
                    "column_start": 58,
                    "expansion": null,
                    "file_name": "src\\texture\\any.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 141,
                    "line_start": 141,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 58,
                        "text": "                             where P: Send + Clone + 'a, F: Facade"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n --> src\\texture\\ty_support.rs:9:32\n  |\n9 | pub fn is_texture_1d_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {\n  |                                ^                                     ^\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 258,
                    "byte_start": 257,
                    "column_end": 33,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\texture\\ty_support.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 9,
                    "line_start": 9,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 32,
                        "text": "pub fn is_texture_1d_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 296,
                    "byte_start": 295,
                    "column_end": 71,
                    "column_start": 70,
                    "expansion": null,
                    "file_name": "src\\texture\\ty_support.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 9,
                    "line_start": 9,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 71,
                        "highlight_start": 70,
                        "text": "pub fn is_texture_1d_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\texture\\ty_support.rs:18:32\n   |\n18 | pub fn is_texture_2d_supported<C: ?Sized>(_: &C) -> bool where C: CapabilitiesSource {\n   |                                ^                               ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 622,
                    "byte_start": 621,
                    "column_end": 33,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\texture\\ty_support.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 18,
                    "line_start": 18,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 32,
                        "text": "pub fn is_texture_2d_supported<C: ?Sized>(_: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 654,
                    "byte_start": 653,
                    "column_end": 65,
                    "column_start": 64,
                    "expansion": null,
                    "file_name": "src\\texture\\ty_support.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 18,
                    "line_start": 18,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 65,
                        "highlight_start": 64,
                        "text": "pub fn is_texture_2d_supported<C: ?Sized>(_: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\texture\\ty_support.rs:24:32\n   |\n24 | pub fn is_texture_3d_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {\n   |                                ^                                     ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 793,
                    "byte_start": 792,
                    "column_end": 33,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\texture\\ty_support.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 24,
                    "line_start": 24,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 32,
                        "text": "pub fn is_texture_3d_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 831,
                    "byte_start": 830,
                    "column_end": 71,
                    "column_start": 70,
                    "expansion": null,
                    "file_name": "src\\texture\\ty_support.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 24,
                    "line_start": 24,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 71,
                        "highlight_start": 70,
                        "text": "pub fn is_texture_3d_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\texture\\ty_support.rs:33:38\n   |\n33 | pub fn is_texture_1d_array_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {\n   |                                      ^                                     ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 1331,
                    "byte_start": 1330,
                    "column_end": 39,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\texture\\ty_support.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 33,
                    "line_start": 33,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 38,
                        "text": "pub fn is_texture_1d_array_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 1369,
                    "byte_start": 1368,
                    "column_end": 77,
                    "column_start": 76,
                    "expansion": null,
                    "file_name": "src\\texture\\ty_support.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 33,
                    "line_start": 33,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 77,
                        "highlight_start": 76,
                        "text": "pub fn is_texture_1d_array_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\texture\\ty_support.rs:40:38\n   |\n40 | pub fn is_texture_2d_array_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {\n   |                                      ^                                     ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 1615,
                    "byte_start": 1614,
                    "column_end": 39,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\texture\\ty_support.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 40,
                    "line_start": 40,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 38,
                        "text": "pub fn is_texture_2d_array_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 1653,
                    "byte_start": 1652,
                    "column_end": 77,
                    "column_start": 76,
                    "expansion": null,
                    "file_name": "src\\texture\\ty_support.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 40,
                    "line_start": 40,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 77,
                        "highlight_start": 76,
                        "text": "pub fn is_texture_2d_array_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\texture\\ty_support.rs:49:44\n   |\n49 | pub fn is_texture_2d_multisample_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {\n   |                                            ^                                     ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 2095,
                    "byte_start": 2094,
                    "column_end": 45,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "src\\texture\\ty_support.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 49,
                    "line_start": 49,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 45,
                        "highlight_start": 44,
                        "text": "pub fn is_texture_2d_multisample_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 2133,
                    "byte_start": 2132,
                    "column_end": 83,
                    "column_start": 82,
                    "expansion": null,
                    "file_name": "src\\texture\\ty_support.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 49,
                    "line_start": 49,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 83,
                        "highlight_start": 82,
                        "text": "pub fn is_texture_2d_multisample_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\texture\\ty_support.rs:58:50\n   |\n58 | pub fn is_texture_2d_multisample_array_supported<C: ?Sized>(context: &C) -> bool\n   |                                                  ^\n59 |                                                     where C: CapabilitiesSource\n   |                                                           ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 2499,
                    "byte_start": 2498,
                    "column_end": 51,
                    "column_start": 50,
                    "expansion": null,
                    "file_name": "src\\texture\\ty_support.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 58,
                    "line_start": 58,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 50,
                        "text": "pub fn is_texture_2d_multisample_array_supported<C: ?Sized>(context: &C) -> bool"
                      }
                    ]
                  },
                  {
                    "byte_end": 2589,
                    "byte_start": 2588,
                    "column_end": 60,
                    "column_start": 59,
                    "expansion": null,
                    "file_name": "src\\texture\\ty_support.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 59,
                    "line_start": 59,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 59,
                        "text": "                                                    where C: CapabilitiesSource"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\texture\\ty_support.rs:68:30\n   |\n68 | pub fn is_cubemaps_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {\n   |                              ^                                     ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 2960,
                    "byte_start": 2959,
                    "column_end": 31,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\texture\\ty_support.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 68,
                    "line_start": 68,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 30,
                        "text": "pub fn is_cubemaps_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 2998,
                    "byte_start": 2997,
                    "column_end": 69,
                    "column_start": 68,
                    "expansion": null,
                    "file_name": "src\\texture\\ty_support.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 68,
                    "line_start": 68,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 69,
                        "highlight_start": 68,
                        "text": "pub fn is_cubemaps_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\texture\\ty_support.rs:77:36\n   |\n77 | pub fn is_cubemap_arrays_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {\n   |                                    ^                                     ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 3343,
                    "byte_start": 3342,
                    "column_end": 37,
                    "column_start": 36,
                    "expansion": null,
                    "file_name": "src\\texture\\ty_support.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 77,
                    "line_start": 77,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 36,
                        "text": "pub fn is_cubemap_arrays_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 3381,
                    "byte_start": 3380,
                    "column_end": 75,
                    "column_start": 74,
                    "expansion": null,
                    "file_name": "src\\texture\\ty_support.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 77,
                    "line_start": 77,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 75,
                        "highlight_start": 74,
                        "text": "pub fn is_cubemap_arrays_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\fbo.rs:82:41\n   |\n82 | pub fn is_dimensions_mismatch_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {\n   |                                         ^                                     ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 3908,
                    "byte_start": 3907,
                    "column_end": 42,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 82,
                    "line_start": 82,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 41,
                        "text": "pub fn is_dimensions_mismatch_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 3946,
                    "byte_start": 3945,
                    "column_end": 80,
                    "column_start": 79,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 82,
                    "line_start": 82,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 80,
                        "highlight_start": 79,
                        "text": "pub fn is_dimensions_mismatch_supported<C: ?Sized>(context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\fbo.rs:165:21\n    |\n165 |     pub fn validate<C: ?Sized>(self, context: &C) -> Result<ValidatedAttachments<'a>, ValidationError>\n    |                     ^\n166 |                        where C: CapabilitiesSource\n    |                              ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 6504,
                    "byte_start": 6503,
                    "column_end": 22,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 165,
                    "line_start": 165,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 22,
                        "highlight_start": 21,
                        "text": "    pub fn validate<C: ?Sized>(self, context: &C) -> Result<ValidatedAttachments<'a>, ValidationError>"
                      }
                    ]
                  },
                  {
                    "byte_end": 6616,
                    "byte_start": 6615,
                    "column_end": 31,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 166,
                    "line_start": 166,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 30,
                        "text": "                       where C: CapabilitiesSource"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\fbo.rs:218:25\n    |\n218 |     fn validate_layered<C: ?Sized>(context: &C, FramebufferSpecificAttachments { colors, depth_stencil }:\n    |                         ^\n...\n221 |                            where C: CapabilitiesSource\n    |                                  ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 9267,
                    "byte_start": 9266,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 218,
                    "line_start": 218,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "    fn validate_layered<C: ?Sized>(context: &C, FramebufferSpecificAttachments { colors, depth_stencil }:"
                      }
                    ]
                  },
                  {
                    "byte_end": 9544,
                    "byte_start": 9543,
                    "column_end": 35,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 221,
                    "line_start": 221,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 34,
                        "text": "                           where C: CapabilitiesSource"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\fbo.rs:353:25\n    |\n353 |     fn validate_regular<C: ?Sized>(context: &C, FramebufferSpecificAttachments { colors, depth_stencil }:\n    |                         ^\n...\n356 |                         where C: CapabilitiesSource\n    |                               ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 15171,
                    "byte_start": 15170,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 353,
                    "line_start": 353,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "    fn validate_regular<C: ?Sized>(context: &C, FramebufferSpecificAttachments { colors, depth_stencil }:"
                      }
                    ]
                  },
                  {
                    "byte_end": 15439,
                    "byte_start": 15438,
                    "column_end": 32,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 356,
                    "line_start": 356,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 31,
                        "text": "                        where C: CapabilitiesSource"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\image_format.rs:392:25\n    |\n392 |     pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {\n    |                         ^                                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 11791,
                    "byte_start": 11790,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 392,
                    "line_start": 392,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 11836,
                    "byte_start": 11835,
                    "column_end": 71,
                    "column_start": 70,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 392,
                    "line_start": 392,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 71,
                        "highlight_start": 70,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\image_format.rs:532:32\n    |\n532 |     pub fn is_color_renderable<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {\n    |                                ^                                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 19247,
                    "byte_start": 19246,
                    "column_end": 33,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 532,
                    "line_start": 532,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 32,
                        "text": "    pub fn is_color_renderable<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 19292,
                    "byte_start": 19291,
                    "column_end": 78,
                    "column_start": 77,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 532,
                    "line_start": 532,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 78,
                        "highlight_start": 77,
                        "text": "    pub fn is_color_renderable<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\image_format.rs:649:25\n    |\n649 |     pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {\n    |                         ^                                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 24542,
                    "byte_start": 24541,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 649,
                    "line_start": 649,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 24587,
                    "byte_start": 24586,
                    "column_end": 71,
                    "column_start": 70,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 649,
                    "line_start": 649,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 71,
                        "highlight_start": 70,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\image_format.rs:668:32\n    |\n668 |     pub fn is_color_renderable<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {\n    |                                ^                                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 25286,
                    "byte_start": 25285,
                    "column_end": 33,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 668,
                    "line_start": 668,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 32,
                        "text": "    pub fn is_color_renderable<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 25331,
                    "byte_start": 25330,
                    "column_end": 78,
                    "column_start": 77,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 668,
                    "line_start": 668,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 78,
                        "highlight_start": 77,
                        "text": "    pub fn is_color_renderable<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\image_format.rs:740:25\n    |\n740 |     pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {\n    |                         ^                                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 27545,
                    "byte_start": 27544,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 740,
                    "line_start": 740,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 27590,
                    "byte_start": 27589,
                    "column_end": 71,
                    "column_start": 70,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 740,
                    "line_start": 740,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 71,
                        "highlight_start": 70,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\image_format.rs:803:32\n    |\n803 |     pub fn is_color_renderable<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {\n    |                                ^                                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 30249,
                    "byte_start": 30248,
                    "column_end": 33,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 803,
                    "line_start": 803,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 32,
                        "text": "    pub fn is_color_renderable<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 30294,
                    "byte_start": 30293,
                    "column_end": 78,
                    "column_start": 77,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 803,
                    "line_start": 803,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 78,
                        "highlight_start": 77,
                        "text": "    pub fn is_color_renderable<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\image_format.rs:901:25\n    |\n901 |     pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {\n    |                         ^                                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 34009,
                    "byte_start": 34008,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 901,
                    "line_start": 901,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 34054,
                    "byte_start": 34053,
                    "column_end": 71,
                    "column_start": 70,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 901,
                    "line_start": 901,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 71,
                        "highlight_start": 70,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n   --> src\\image_format.rs:968:32\n    |\n968 |     pub fn is_color_renderable<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {\n    |                                ^                                            ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 36885,
                    "byte_start": 36884,
                    "column_end": 33,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 968,
                    "line_start": 968,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 32,
                        "text": "    pub fn is_color_renderable<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 36930,
                    "byte_start": 36929,
                    "column_end": 78,
                    "column_start": 77,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 968,
                    "line_start": 968,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 78,
                        "highlight_start": 77,
                        "text": "    pub fn is_color_renderable<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n    --> src\\image_format.rs:1073:25\n     |\n1073 |     pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {\n     |                         ^                                            ^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 41404,
                    "byte_start": 41403,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1073,
                    "line_start": 1073,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 41449,
                    "byte_start": 41448,
                    "column_end": 71,
                    "column_start": 70,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1073,
                    "line_start": 1073,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 71,
                        "highlight_start": 70,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n    --> src\\image_format.rs:1163:25\n     |\n1163 |     pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {\n     |                         ^                                            ^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 45061,
                    "byte_start": 45060,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1163,
                    "line_start": 1163,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 45106,
                    "byte_start": 45105,
                    "column_end": 71,
                    "column_start": 70,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1163,
                    "line_start": 1163,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 71,
                        "highlight_start": 70,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n    --> src\\image_format.rs:1230:25\n     |\n1230 |     pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {\n     |                         ^                                            ^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 47537,
                    "byte_start": 47536,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1230,
                    "line_start": 1230,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 47582,
                    "byte_start": 47581,
                    "column_end": 71,
                    "column_start": 70,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1230,
                    "line_start": 1230,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 71,
                        "highlight_start": 70,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n    --> src\\image_format.rs:1290:25\n     |\n1290 |     pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {\n     |                         ^                                            ^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 49458,
                    "byte_start": 49457,
                    "column_end": 26,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1290,
                    "line_start": 1290,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 25,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 49503,
                    "byte_start": 49502,
                    "column_end": 71,
                    "column_start": 70,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1290,
                    "line_start": 1290,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 71,
                        "highlight_start": 70,
                        "text": "    pub fn is_supported<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n    --> src\\image_format.rs:1348:38\n     |\n1348 |     pub fn is_supported_for_textures<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {\n     |                                      ^                                            ^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 51245,
                    "byte_start": 51244,
                    "column_end": 39,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1348,
                    "line_start": 1348,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 38,
                        "text": "    pub fn is_supported_for_textures<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 51290,
                    "byte_start": 51289,
                    "column_end": 84,
                    "column_start": 83,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1348,
                    "line_start": 1348,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 84,
                        "highlight_start": 83,
                        "text": "    pub fn is_supported_for_textures<C: ?Sized>(&self, context: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n    --> src\\image_format.rs:1363:43\n     |\n1363 |     pub fn is_supported_for_renderbuffers<C: ?Sized>(&self, context: &C) -> bool\n     |                                           ^\n1364 |                                              where C: CapabilitiesSource\n     |                                                    ^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 51831,
                    "byte_start": 51830,
                    "column_end": 44,
                    "column_start": 43,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1363,
                    "line_start": 1363,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 44,
                        "highlight_start": 43,
                        "text": "    pub fn is_supported_for_renderbuffers<C: ?Sized>(&self, context: &C) -> bool"
                      }
                    ]
                  },
                  {
                    "byte_end": 51921,
                    "byte_start": 51920,
                    "column_end": 53,
                    "column_start": 52,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1364,
                    "line_start": 1364,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 53,
                        "highlight_start": 52,
                        "text": "                                             where C: CapabilitiesSource"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n    --> src\\image_format.rs:1436:38\n     |\n1436 |     pub fn is_supported_for_textures<C: ?Sized>(&self, c: &C) -> bool where C: CapabilitiesSource {\n     |                                      ^                                      ^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 55129,
                    "byte_start": 55128,
                    "column_end": 39,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1436,
                    "line_start": 1436,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 38,
                        "text": "    pub fn is_supported_for_textures<C: ?Sized>(&self, c: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 55168,
                    "byte_start": 55167,
                    "column_end": 78,
                    "column_start": 77,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1436,
                    "line_start": 1436,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 78,
                        "highlight_start": 77,
                        "text": "    pub fn is_supported_for_textures<C: ?Sized>(&self, c: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n    --> src\\image_format.rs:1452:43\n     |\n1452 |     pub fn is_supported_for_renderbuffers<C: ?Sized>(&self, c: &C) -> bool where C: CapabilitiesSource {\n     |                                           ^                                      ^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 56088,
                    "byte_start": 56087,
                    "column_end": 44,
                    "column_start": 43,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1452,
                    "line_start": 1452,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 44,
                        "highlight_start": 43,
                        "text": "    pub fn is_supported_for_renderbuffers<C: ?Sized>(&self, c: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 56127,
                    "byte_start": 56126,
                    "column_end": 83,
                    "column_start": 82,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1452,
                    "line_start": 1452,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 83,
                        "highlight_start": 82,
                        "text": "    pub fn is_supported_for_renderbuffers<C: ?Sized>(&self, c: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n    --> src\\image_format.rs:1469:26\n     |\n1469 |     pub fn is_renderable<C: ?Sized>(&self, c: &C) -> bool where C: CapabilitiesSource {\n     |                          ^                                      ^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 57082,
                    "byte_start": 57081,
                    "column_end": 27,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1469,
                    "line_start": 1469,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 26,
                        "text": "    pub fn is_renderable<C: ?Sized>(&self, c: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  },
                  {
                    "byte_end": 57121,
                    "byte_start": 57120,
                    "column_end": 66,
                    "column_start": 65,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1469,
                    "line_start": 1469,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 65,
                        "text": "    pub fn is_renderable<C: ?Sized>(&self, c: &C) -> bool where C: CapabilitiesSource {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\sync.rs:41:16\n   |\n41 |     pub fn new<F: ?Sized>(facade: &F) -> Result<SyncFence, SyncNotSupportedError> where F: Facade {\n   |                ^                                                                        ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 1185,
                    "byte_start": 1184,
                    "column_end": 17,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\sync.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 41,
                    "line_start": 41,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "    pub fn new<F: ?Sized>(facade: &F) -> Result<SyncFence, SyncNotSupportedError> where F: Facade {"
                      }
                    ]
                  },
                  {
                    "byte_end": 1258,
                    "byte_start": 1257,
                    "column_end": 90,
                    "column_start": 89,
                    "expansion": null,
                    "file_name": "src\\sync.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 41,
                    "line_start": 41,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 90,
                        "highlight_start": 89,
                        "text": "    pub fn new<F: ?Sized>(facade: &F) -> Result<SyncFence, SyncNotSupportedError> where F: Facade {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: bound is defined in more than one place\n  --> src\\sync.rs:88:28\n   |\n88 |     pub fn into_sync_fence<F: ?Sized>(mut self, facade: &F) -> SyncFence where F: Facade {\n   |                            ^                                                   ^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_bound_locations",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::multiple_bound_locations",
                  "explanation": null
                },
                "level": "warning",
                "message": "bound is defined in more than one place",
                "spans": [
                  {
                    "byte_end": 2575,
                    "byte_start": 2574,
                    "column_end": 29,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\sync.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 88,
                    "line_start": 88,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 28,
                        "text": "    pub fn into_sync_fence<F: ?Sized>(mut self, facade: &F) -> SyncFence where F: Facade {"
                      }
                    ]
                  },
                  {
                    "byte_end": 2627,
                    "byte_start": 2626,
                    "column_end": 81,
                    "column_start": 80,
                    "expansion": null,
                    "file_name": "src\\sync.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 88,
                    "line_start": 88,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 81,
                        "highlight_start": 80,
                        "text": "    pub fn into_sync_fence<F: ?Sized>(mut self, facade: &F) -> SyncFence where F: Facade {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `unwrap()` on `Some` value\n   --> src\\backend\\glutin\\simple_window_builder.rs:169:31\n    |\n169 |           let current_context = Some(unsafe {\n    |  _______________________________^\n170 | |             gl_config\n171 | |                 .display()\n172 | |                 .create_context(&gl_config, &context_attributes)\n173 | |                 .expect(\"failed to create context\")\n174 | |         })\n175 | |         .unwrap()\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_literal_unwrap\n    = note: `#[warn(clippy::unnecessary_literal_unwrap)]` on by default\nhelp: remove the `Some` and `unwrap()`\n    |\n169 ~         let current_context = unsafe {\n170 |             gl_config\n...\n173 |                 .expect(\"failed to create context\")\n174 ~         }\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_literal_unwrap",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::unnecessary_literal_unwrap)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "remove the `Some` and `unwrap()`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6385,
                        "byte_start": 6380,
                        "column_end": 36,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\backend\\glutin\\simple_window_builder.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 169,
                        "line_start": 169,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 31,
                            "text": "        let current_context = Some(unsafe {"
                          }
                        ]
                      },
                      {
                        "byte_end": 6588,
                        "byte_start": 6569,
                        "column_end": 18,
                        "column_start": 10,
                        "expansion": null,
                        "file_name": "src\\backend\\glutin\\simple_window_builder.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 175,
                        "line_start": 174,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 11,
                            "highlight_start": 10,
                            "text": "        })"
                          },
                          {
                            "highlight_end": 18,
                            "highlight_start": 1,
                            "text": "        .unwrap()"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_literal_unwrap",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `unwrap()` on `Some` value",
                "spans": [
                  {
                    "byte_end": 6588,
                    "byte_start": 6380,
                    "column_end": 18,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "src\\backend\\glutin\\simple_window_builder.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 175,
                    "line_start": 169,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 44,
                        "highlight_start": 31,
                        "text": "        let current_context = Some(unsafe {"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "            gl_config"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                .display()"
                      },
                      {
                        "highlight_end": 65,
                        "highlight_start": 1,
                        "text": "                .create_context(&gl_config, &context_attributes)"
                      },
                      {
                        "highlight_end": 52,
                        "highlight_start": 1,
                        "text": "                .expect(\"failed to create context\")"
                      },
                      {
                        "highlight_end": 11,
                        "highlight_start": 1,
                        "text": "        })"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "        .unwrap()"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\backend\\glutin\\mod.rs:209:55\n    |\n209 |             DisplayCreationError::GlutinError(err) => write!(fmt, \"{}\", err),\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n    = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n    |\n209 -             DisplayCreationError::GlutinError(err) => write!(fmt, \"{}\", err),\n209 +             DisplayCreationError::GlutinError(err) => write!(fmt, \"{err}\"),\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::uninlined_format_args)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7289,
                        "byte_start": 7289,
                        "column_end": 69,
                        "column_start": 69,
                        "expansion": null,
                        "file_name": "src\\backend\\glutin\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 209,
                        "line_start": 209,
                        "suggested_replacement": "err",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 69,
                            "highlight_start": 69,
                            "text": "            DisplayCreationError::GlutinError(err) => write!(fmt, \"{}\", err),"
                          }
                        ]
                      },
                      {
                        "byte_end": 7296,
                        "byte_start": 7291,
                        "column_end": 76,
                        "column_start": 71,
                        "expansion": null,
                        "file_name": "src\\backend\\glutin\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 209,
                        "line_start": 209,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 76,
                            "highlight_start": 71,
                            "text": "            DisplayCreationError::GlutinError(err) => write!(fmt, \"{}\", err),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 7297,
                    "byte_start": 7275,
                    "column_end": 77,
                    "column_start": 55,
                    "expansion": null,
                    "file_name": "src\\backend\\glutin\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 209,
                    "line_start": 209,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 77,
                        "highlight_start": 55,
                        "text": "            DisplayCreationError::GlutinError(err) => write!(fmt, \"{}\", err),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\backend\\glutin\\mod.rs:210:62\n    |\n210 |             DisplayCreationError::IncompatibleOpenGl(err) => write!(fmt, \"{}\", err),\n    |                                                              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n210 -             DisplayCreationError::IncompatibleOpenGl(err) => write!(fmt, \"{}\", err),\n210 +             DisplayCreationError::IncompatibleOpenGl(err) => write!(fmt, \"{err}\"),\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7374,
                        "byte_start": 7374,
                        "column_end": 76,
                        "column_start": 76,
                        "expansion": null,
                        "file_name": "src\\backend\\glutin\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 210,
                        "line_start": 210,
                        "suggested_replacement": "err",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 76,
                            "highlight_start": 76,
                            "text": "            DisplayCreationError::IncompatibleOpenGl(err) => write!(fmt, \"{}\", err),"
                          }
                        ]
                      },
                      {
                        "byte_end": 7381,
                        "byte_start": 7376,
                        "column_end": 83,
                        "column_start": 78,
                        "expansion": null,
                        "file_name": "src\\backend\\glutin\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 210,
                        "line_start": 210,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 83,
                            "highlight_start": 78,
                            "text": "            DisplayCreationError::IncompatibleOpenGl(err) => write!(fmt, \"{}\", err),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 7382,
                    "byte_start": 7360,
                    "column_end": 84,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "src\\backend\\glutin\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 210,
                    "line_start": 210,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 84,
                        "highlight_start": 62,
                        "text": "            DisplayCreationError::IncompatibleOpenGl(err) => write!(fmt, \"{}\", err),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\buffer\\alloc.rs:1222:32\n     |\n1222 |         let bind = bind_buffer(&mut ctxt, id, ty);\n     |                                ^^^^^^^^^ help: change this to: `ctxt`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n     = note: `#[warn(clippy::needless_borrow)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_borrow)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 45807,
                        "byte_start": 45798,
                        "column_end": 41,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\buffer\\alloc.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1222,
                        "line_start": 1222,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 32,
                            "text": "        let bind = bind_buffer(&mut ctxt, id, ty);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 45807,
                    "byte_start": 45798,
                    "column_end": 41,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1222,
                    "line_start": 1222,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 32,
                        "text": "        let bind = bind_buffer(&mut ctxt, id, ty);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\buffer\\alloc.rs:1231:32\n     |\n1231 |         let bind = bind_buffer(&mut ctxt, id, ty);\n     |                                ^^^^^^^^^ help: change this to: `ctxt`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 46253,
                        "byte_start": 46244,
                        "column_end": 41,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\buffer\\alloc.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1231,
                        "line_start": 1231,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 32,
                            "text": "        let bind = bind_buffer(&mut ctxt, id, ty);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 46253,
                    "byte_start": 46244,
                    "column_end": 41,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1231,
                    "line_start": 1231,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 32,
                        "text": "        let bind = bind_buffer(&mut ctxt, id, ty);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\buffer\\alloc.rs:1242:32\n     |\n1242 |         let bind = bind_buffer(&mut ctxt, id, ty);\n     |                                ^^^^^^^^^ help: change this to: `ctxt`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 46767,
                        "byte_start": 46758,
                        "column_end": 41,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\buffer\\alloc.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1242,
                        "line_start": 1242,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 32,
                            "text": "        let bind = bind_buffer(&mut ctxt, id, ty);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 46767,
                    "byte_start": 46758,
                    "column_end": 41,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1242,
                    "line_start": 1242,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 32,
                        "text": "        let bind = bind_buffer(&mut ctxt, id, ty);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\buffer\\alloc.rs:1250:32\n     |\n1250 |         let bind = bind_buffer(&mut ctxt, id, ty);\n     |                                ^^^^^^^^^ help: change this to: `ctxt`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 47169,
                        "byte_start": 47160,
                        "column_end": 41,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\buffer\\alloc.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1250,
                        "line_start": 1250,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 32,
                            "text": "        let bind = bind_buffer(&mut ctxt, id, ty);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 47169,
                    "byte_start": 47160,
                    "column_end": 41,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1250,
                    "line_start": 1250,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 32,
                        "text": "        let bind = bind_buffer(&mut ctxt, id, ty);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\buffer\\alloc.rs:1285:40\n     |\n1285 |                 let bind = bind_buffer(&mut ctxt, id, ty);\n     |                                        ^^^^^^^^^ help: change this to: `ctxt`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 48582,
                        "byte_start": 48573,
                        "column_end": 49,
                        "column_start": 40,
                        "expansion": null,
                        "file_name": "src\\buffer\\alloc.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1285,
                        "line_start": 1285,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 40,
                            "text": "                let bind = bind_buffer(&mut ctxt, id, ty);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 48582,
                    "byte_start": 48573,
                    "column_end": 49,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1285,
                    "line_start": 1285,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 40,
                        "text": "                let bind = bind_buffer(&mut ctxt, id, ty);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> src\\buffer\\alloc.rs:1295:17\n     |\n1295 |                 panic!(\"glMapBufferRange returned null (error: {:?})\", error);\n     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1295 -                 panic!(\"glMapBufferRange returned null (error: {:?})\", error);\n1295 +                 panic!(\"glMapBufferRange returned null (error: {error:?})\");\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 49061,
                        "byte_start": 49061,
                        "column_end": 65,
                        "column_start": 65,
                        "expansion": null,
                        "file_name": "src\\buffer\\alloc.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1295,
                        "line_start": 1295,
                        "suggested_replacement": "error",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 65,
                            "highlight_start": 65,
                            "text": "                panic!(\"glMapBufferRange returned null (error: {:?})\", error);"
                          }
                        ]
                      },
                      {
                        "byte_end": 49073,
                        "byte_start": 49066,
                        "column_end": 77,
                        "column_start": 70,
                        "expansion": null,
                        "file_name": "src\\buffer\\alloc.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1295,
                        "line_start": 1295,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 77,
                            "highlight_start": 70,
                            "text": "                panic!(\"glMapBufferRange returned null (error: {:?})\", error);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 49074,
                    "byte_start": 49013,
                    "column_end": 78,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1295,
                    "line_start": 1295,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 78,
                        "highlight_start": 17,
                        "text": "                panic!(\"glMapBufferRange returned null (error: {:?})\", error);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\buffer\\alloc.rs:1725:32\n     |\n1725 |         let bind = bind_buffer(&mut ctxt, id, ty);\n     |                                ^^^^^^^^^ help: change this to: `ctxt`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 65808,
                        "byte_start": 65799,
                        "column_end": 41,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\buffer\\alloc.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1725,
                        "line_start": 1725,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 32,
                            "text": "        let bind = bind_buffer(&mut ctxt, id, ty);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 65808,
                    "byte_start": 65799,
                    "column_end": 41,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1725,
                    "line_start": 1725,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 32,
                        "text": "        let bind = bind_buffer(&mut ctxt, id, ty);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\buffer\\alloc.rs:1756:32\n     |\n1756 |         let bind = bind_buffer(&mut ctxt, id, ty);\n     |                                ^^^^^^^^^ help: change this to: `ctxt`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 67083,
                        "byte_start": 67074,
                        "column_end": 41,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\buffer\\alloc.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1756,
                        "line_start": 1756,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 32,
                            "text": "        let bind = bind_buffer(&mut ctxt, id, ty);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 67083,
                    "byte_start": 67074,
                    "column_end": 41,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1756,
                    "line_start": 1756,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 32,
                        "text": "        let bind = bind_buffer(&mut ctxt, id, ty);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\buffer\\alloc.rs:1778:32\n     |\n1778 |         let bind = bind_buffer(&mut ctxt, id, ty);\n     |                                ^^^^^^^^^ help: change this to: `ctxt`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 67870,
                        "byte_start": 67861,
                        "column_end": 41,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\buffer\\alloc.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1778,
                        "line_start": 1778,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 32,
                            "text": "        let bind = bind_buffer(&mut ctxt, id, ty);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 67870,
                    "byte_start": 67861,
                    "column_end": 41,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1778,
                    "line_start": 1778,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 32,
                        "text": "        let bind = bind_buffer(&mut ctxt, id, ty);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\buffer\\alloc.rs:1782:32\n     |\n1782 |         let bind = bind_buffer(&mut ctxt, id, ty);\n     |                                ^^^^^^^^^ help: change this to: `ctxt`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 68017,
                        "byte_start": 68008,
                        "column_end": 41,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\buffer\\alloc.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1782,
                        "line_start": 1782,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 32,
                            "text": "        let bind = bind_buffer(&mut ctxt, id, ty);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 68017,
                    "byte_start": 68008,
                    "column_end": 41,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\buffer\\alloc.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1782,
                    "line_start": 1782,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 32,
                        "text": "        let bind = bind_buffer(&mut ctxt, id, ty);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\buffer\\view.rs:218:45\n    |\n218 |         alloc.copy_to(0 .. self.get_size(), &target.alloc, target.get_offset_bytes())?;\n    |                                             ^^^^^^^^^^^^^ help: change this to: `target.alloc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8166,
                        "byte_start": 8153,
                        "column_end": 58,
                        "column_start": 45,
                        "expansion": null,
                        "file_name": "src\\buffer\\view.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 218,
                        "line_start": 218,
                        "suggested_replacement": "target.alloc",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 45,
                            "text": "        alloc.copy_to(0 .. self.get_size(), &target.alloc, target.get_offset_bytes())?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 8166,
                    "byte_start": 8153,
                    "column_end": 58,
                    "column_start": 45,
                    "expansion": null,
                    "file_name": "src\\buffer\\view.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 218,
                    "line_start": 218,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 45,
                        "text": "        alloc.copy_to(0 .. self.get_size(), &target.alloc, target.get_offset_bytes())?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\buffer\\view.rs:573:64\n    |\n573 |         self.alloc.copy_to(self.bytes_start .. self.bytes_end, &target.alloc,\n    |                                                                ^^^^^^^^^^^^^ help: change this to: `target.alloc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 19819,
                        "byte_start": 19806,
                        "column_end": 77,
                        "column_start": 64,
                        "expansion": null,
                        "file_name": "src\\buffer\\view.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 573,
                        "line_start": 573,
                        "suggested_replacement": "target.alloc",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 77,
                            "highlight_start": 64,
                            "text": "        self.alloc.copy_to(self.bytes_start .. self.bytes_end, &target.alloc,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 19819,
                    "byte_start": 19806,
                    "column_end": 77,
                    "column_start": 64,
                    "expansion": null,
                    "file_name": "src\\buffer\\view.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 573,
                    "line_start": 573,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 77,
                        "highlight_start": 64,
                        "text": "        self.alloc.copy_to(self.bytes_start .. self.bytes_end, &target.alloc,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\buffer\\view.rs:926:64\n    |\n926 |         self.alloc.copy_to(self.bytes_start .. self.bytes_end, &target.alloc,\n    |                                                                ^^^^^^^^^^^^^ help: change this to: `target.alloc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 31717,
                        "byte_start": 31704,
                        "column_end": 77,
                        "column_start": 64,
                        "expansion": null,
                        "file_name": "src\\buffer\\view.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 926,
                        "line_start": 926,
                        "suggested_replacement": "target.alloc",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 77,
                            "highlight_start": 64,
                            "text": "        self.alloc.copy_to(self.bytes_start .. self.bytes_end, &target.alloc,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 31717,
                    "byte_start": 31704,
                    "column_end": 77,
                    "column_start": 64,
                    "expansion": null,
                    "file_name": "src\\buffer\\view.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 926,
                    "line_start": 926,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 77,
                        "highlight_start": 64,
                        "text": "        self.alloc.copy_to(self.bytes_start .. self.bytes_end, &target.alloc,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this lifetime isn't used in the function definition\n  --> src\\buffer\\mod.rs:97:21\n   |\n97 |     fn ref_from_ptr<'a>(ptr: *mut (), size: usize) -> Option<*mut Self>;\n   |                     ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::extra_unused_lifetimes)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::extra_unused_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "this lifetime isn't used in the function definition",
                "spans": [
                  {
                    "byte_end": 4145,
                    "byte_start": 4143,
                    "column_end": 23,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\buffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 97,
                    "line_start": 97,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 21,
                        "text": "    fn ref_from_ptr<'a>(ptr: *mut (), size: usize) -> Option<*mut Self>;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: calling `set_len()` immediately after reserving a buffer creates uninitialized values\n   --> src\\buffer\\mod.rs:152:9\n    |\n152 |         let mut value = Vec::with_capacity(len);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n153 |         value.set_len(len);\n    |         ^^^^^^^^^^^^^^^^^^\n    |\n    = help: initialize the buffer or wrap the content in `MaybeUninit`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninit_vec\n    = note: `#[deny(clippy::uninit_vec)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "initialize the buffer or wrap the content in `MaybeUninit`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninit_vec",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[deny(clippy::uninit_vec)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::uninit_vec",
                  "explanation": null
                },
                "level": "error",
                "message": "calling `set_len()` immediately after reserving a buffer creates uninitialized values",
                "spans": [
                  {
                    "byte_end": 5777,
                    "byte_start": 5737,
                    "column_end": 49,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\buffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 152,
                    "line_start": 152,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 9,
                        "text": "        let mut value = Vec::with_capacity(len);"
                      }
                    ]
                  },
                  {
                    "byte_end": 5804,
                    "byte_start": 5786,
                    "column_end": 27,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\buffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 153,
                    "line_start": 153,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 9,
                        "text": "        value.set_len(len);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting the result of `from_raw_parts_mut` to *mut [T]\n   --> src\\buffer\\mod.rs:176:23\n    |\n176 |         Some(unsafe { slice::from_raw_parts_mut(&mut *ptr, size) as *mut [T] })\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `core::ptr::slice_from_raw_parts_mut(&mut *ptr, size)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_slice_from_raw_parts\n    = note: `#[warn(clippy::cast_slice_from_raw_parts)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_slice_from_raw_parts",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::cast_slice_from_raw_parts)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace with",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6370,
                        "byte_start": 6316,
                        "column_end": 77,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "src\\buffer\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 176,
                        "line_start": 176,
                        "suggested_replacement": "core::ptr::slice_from_raw_parts_mut(&mut *ptr, size)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 77,
                            "highlight_start": 23,
                            "text": "        Some(unsafe { slice::from_raw_parts_mut(&mut *ptr, size) as *mut [T] })"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::cast_slice_from_raw_parts",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting the result of `from_raw_parts_mut` to *mut [T]",
                "spans": [
                  {
                    "byte_end": 6370,
                    "byte_start": 6316,
                    "column_end": 77,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\buffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 176,
                    "line_start": 176,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 77,
                        "highlight_start": 23,
                        "text": "        Some(unsafe { slice::from_raw_parts_mut(&mut *ptr, size) as *mut [T] })"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `impl` can be derived\n   --> src\\buffer\\mod.rs:281:1\n    |\n281 | / impl Default for BufferMode {\n282 | |     fn default() -> BufferMode {\n283 | |         BufferMode::Default\n284 | |     }\n285 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\nhelp: replace the manual implementation with a derive attribute and mark the default variant\n    |\n209 + #[derive(Default)]\n210 ~ pub enum BufferMode {\n211 |     /// This is the default mode suitable for any usage. Will never be slow, will never be fast\n...\n222 |     ///\n223 ~     #[default]\n224 ~     Default,\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::derivable_impls)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace the manual implementation with a derive attribute and mark the default variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10486,
                        "byte_start": 10387,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\buffer\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 286,
                        "line_start": 281,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 1,
                            "text": "impl Default for BufferMode {"
                          },
                          {
                            "highlight_end": 33,
                            "highlight_start": 1,
                            "text": "    fn default() -> BufferMode {"
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "        BufferMode::Default"
                          },
                          {
                            "highlight_end": 6,
                            "highlight_start": 1,
                            "text": "    }"
                          },
                          {
                            "highlight_end": 2,
                            "highlight_start": 1,
                            "text": "}"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          }
                        ]
                      },
                      {
                        "byte_end": 7238,
                        "byte_start": 7238,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\buffer\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 209,
                        "line_start": 209,
                        "suggested_replacement": "#[derive(Default)]\n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub enum BufferMode {"
                          }
                        ]
                      },
                      {
                        "byte_end": 7746,
                        "byte_start": 7746,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\buffer\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 222,
                        "line_start": 222,
                        "suggested_replacement": "#[default]\n    ",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "    Default,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::derivable_impls",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `impl` can be derived",
                "spans": [
                  {
                    "byte_end": 10485,
                    "byte_start": 10387,
                    "column_end": 2,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\buffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 285,
                    "line_start": 281,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "impl Default for BufferMode {"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "    fn default() -> BufferMode {"
                      },
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "        BufferMode::Default"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: empty doc comment\n --> src\\debug.rs:1:1\n  |\n1 | / /*!\n... |\n4 | | */\n  | |__^\n  |\n  = help: consider removing or filling it\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs\n  = note: `#[warn(clippy::empty_docs)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing or filling it",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::empty_docs)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::empty_docs",
                  "explanation": null
                },
                "level": "warning",
                "message": "empty doc comment",
                "spans": [
                  {
                    "byte_end": 8,
                    "byte_start": 0,
                    "column_end": 3,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\debug.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 4,
                    "line_start": 1,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 4,
                        "highlight_start": 1,
                        "text": "/*!"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 3,
                        "highlight_start": 1,
                        "text": "*/"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: empty doc comment\n  --> src\\debug.rs:64:5\n   |\n64 |     ///\n   |     ^^^\n   |\n   = help: consider removing or filling it\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing or filling it",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::empty_docs",
                  "explanation": null
                },
                "level": "warning",
                "message": "empty doc comment",
                "spans": [
                  {
                    "byte_end": 2064,
                    "byte_start": 2061,
                    "column_end": 8,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\debug.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 64,
                    "line_start": 64,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 5,
                        "text": "    ///"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this pattern creates a reference to a reference\n   --> src\\draw_parameters\\mod.rs:853:51\n    |\n853 |             SamplesQueryParam::SamplesPassedQuery(ref q) => {\n    |                                                   ^^^^^ help: try: `q`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 33308,
                        "byte_start": 33303,
                        "column_end": 56,
                        "column_start": 51,
                        "expansion": null,
                        "file_name": "src\\draw_parameters\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 853,
                        "line_start": 853,
                        "suggested_replacement": "q",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 56,
                            "highlight_start": 51,
                            "text": "            SamplesQueryParam::SamplesPassedQuery(ref q) => {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this pattern creates a reference to a reference",
                "spans": [
                  {
                    "byte_end": 33308,
                    "byte_start": 33303,
                    "column_end": 56,
                    "column_start": 51,
                    "expansion": null,
                    "file_name": "src\\draw_parameters\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 853,
                    "line_start": 853,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 51,
                        "text": "            SamplesQueryParam::SamplesPassedQuery(ref q) => {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this pattern creates a reference to a reference\n   --> src\\draw_parameters\\mod.rs:856:54\n    |\n856 |             SamplesQueryParam::AnySamplesPassedQuery(ref q) => {\n    |                                                      ^^^^^ help: try: `q`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 33456,
                        "byte_start": 33451,
                        "column_end": 59,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\draw_parameters\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 856,
                        "line_start": 856,
                        "suggested_replacement": "q",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 54,
                            "text": "            SamplesQueryParam::AnySamplesPassedQuery(ref q) => {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this pattern creates a reference to a reference",
                "spans": [
                  {
                    "byte_end": 33456,
                    "byte_start": 33451,
                    "column_end": 59,
                    "column_start": 54,
                    "expansion": null,
                    "file_name": "src\\draw_parameters\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 856,
                    "line_start": 856,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 54,
                        "text": "            SamplesQueryParam::AnySamplesPassedQuery(ref q) => {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src\\framebuffer\\render_buffer.rs:70:61\n   |\n70 |         let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;\n   |                                                             ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `facade.get_context()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2376,
                        "byte_start": 2355,
                        "column_end": 82,
                        "column_start": 61,
                        "expansion": null,
                        "file_name": "src\\framebuffer\\render_buffer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 70,
                        "line_start": 70,
                        "suggested_replacement": "facade.get_context()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 82,
                            "highlight_start": 61,
                            "text": "        let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 2376,
                    "byte_start": 2355,
                    "column_end": 82,
                    "column_start": 61,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 70,
                    "line_start": 70,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 82,
                        "highlight_start": 61,
                        "text": "        let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src\\framebuffer\\render_buffer.rs:81:61\n   |\n81 |         let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;\n   |                                                             ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `facade.get_context()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3031,
                        "byte_start": 3010,
                        "column_end": 82,
                        "column_start": 61,
                        "expansion": null,
                        "file_name": "src\\framebuffer\\render_buffer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 81,
                        "line_start": 81,
                        "suggested_replacement": "facade.get_context()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 82,
                            "highlight_start": 61,
                            "text": "        let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 3031,
                    "byte_start": 3010,
                    "column_end": 82,
                    "column_start": 61,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 81,
                    "line_start": 81,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 82,
                        "highlight_start": 61,
                        "text": "        let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\framebuffer\\render_buffer.rs:134:61\n    |\n134 |         let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `facade.get_context()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4554,
                        "byte_start": 4533,
                        "column_end": 82,
                        "column_start": 61,
                        "expansion": null,
                        "file_name": "src\\framebuffer\\render_buffer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 134,
                        "line_start": 134,
                        "suggested_replacement": "facade.get_context()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 82,
                            "highlight_start": 61,
                            "text": "        let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 4554,
                    "byte_start": 4533,
                    "column_end": 82,
                    "column_start": 61,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 134,
                    "line_start": 134,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 82,
                        "highlight_start": 61,
                        "text": "        let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\framebuffer\\render_buffer.rs:145:61\n    |\n145 |         let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `facade.get_context()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5201,
                        "byte_start": 5180,
                        "column_end": 82,
                        "column_start": 61,
                        "expansion": null,
                        "file_name": "src\\framebuffer\\render_buffer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 145,
                        "line_start": 145,
                        "suggested_replacement": "facade.get_context()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 82,
                            "highlight_start": 61,
                            "text": "        let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 5201,
                    "byte_start": 5180,
                    "column_end": 82,
                    "column_start": 61,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 145,
                    "line_start": 145,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 82,
                        "highlight_start": 61,
                        "text": "        let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\framebuffer\\render_buffer.rs:197:61\n    |\n197 |         let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `facade.get_context()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6747,
                        "byte_start": 6726,
                        "column_end": 82,
                        "column_start": 61,
                        "expansion": null,
                        "file_name": "src\\framebuffer\\render_buffer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 197,
                        "line_start": 197,
                        "suggested_replacement": "facade.get_context()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 82,
                            "highlight_start": 61,
                            "text": "        let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 6747,
                    "byte_start": 6726,
                    "column_end": 82,
                    "column_start": 61,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 197,
                    "line_start": 197,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 82,
                        "highlight_start": 61,
                        "text": "        let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\framebuffer\\render_buffer.rs:208:61\n    |\n208 |         let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `facade.get_context()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7404,
                        "byte_start": 7383,
                        "column_end": 82,
                        "column_start": 61,
                        "expansion": null,
                        "file_name": "src\\framebuffer\\render_buffer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 208,
                        "line_start": 208,
                        "suggested_replacement": "facade.get_context()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 82,
                            "highlight_start": 61,
                            "text": "        let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 7404,
                    "byte_start": 7383,
                    "column_end": 82,
                    "column_start": 61,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 208,
                    "line_start": 208,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 82,
                        "highlight_start": 61,
                        "text": "        let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\framebuffer\\render_buffer.rs:261:61\n    |\n261 |         let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `facade.get_context()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9014,
                        "byte_start": 8993,
                        "column_end": 82,
                        "column_start": 61,
                        "expansion": null,
                        "file_name": "src\\framebuffer\\render_buffer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 261,
                        "line_start": 261,
                        "suggested_replacement": "facade.get_context()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 82,
                            "highlight_start": 61,
                            "text": "        let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 9014,
                    "byte_start": 8993,
                    "column_end": 82,
                    "column_start": 61,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 261,
                    "line_start": 261,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 82,
                        "highlight_start": 61,
                        "text": "        let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\framebuffer\\render_buffer.rs:272:61\n    |\n272 |         let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `facade.get_context()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9696,
                        "byte_start": 9675,
                        "column_end": 82,
                        "column_start": 61,
                        "expansion": null,
                        "file_name": "src\\framebuffer\\render_buffer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 272,
                        "line_start": 272,
                        "suggested_replacement": "facade.get_context()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 82,
                            "highlight_start": 61,
                            "text": "        let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 9696,
                    "byte_start": 9675,
                    "column_end": 82,
                    "column_start": 61,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\render_buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 272,
                    "line_start": 272,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 82,
                        "highlight_start": 61,
                        "text": "        let format = image_format::format_request_to_glenum(&facade.get_context(), format, image_format::RequestType::Renderbuffer)?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\framebuffer\\mod.rs:517:65\n    |\n517 |             let location = match program.get_frag_data_location(&name) {\n    |                                                                 ^^^^^ help: change this to: `name`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 21843,
                        "byte_start": 21838,
                        "column_end": 70,
                        "column_start": 65,
                        "expansion": null,
                        "file_name": "src\\framebuffer\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 517,
                        "line_start": 517,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 70,
                            "highlight_start": 65,
                            "text": "            let location = match program.get_frag_data_location(&name) {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 21843,
                    "byte_start": 21838,
                    "column_end": 70,
                    "column_start": 65,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 517,
                    "line_start": 517,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 70,
                        "highlight_start": 65,
                        "text": "            let location = match program.get_frag_data_location(&name) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\framebuffer\\mod.rs:519:25\n    |\n519 |                 None => panic!(\"The fragment output `{}` was not found in the program\", name)\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n519 -                 None => panic!(\"The fragment output `{}` was not found in the program\", name)\n519 +                 None => panic!(\"The fragment output `{name}` was not found in the program\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 21931,
                        "byte_start": 21931,
                        "column_end": 55,
                        "column_start": 55,
                        "expansion": null,
                        "file_name": "src\\framebuffer\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 519,
                        "line_start": 519,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 55,
                            "highlight_start": 55,
                            "text": "                None => panic!(\"The fragment output `{}` was not found in the program\", name)"
                          }
                        ]
                      },
                      {
                        "byte_end": 21969,
                        "byte_start": 21963,
                        "column_end": 93,
                        "column_start": 87,
                        "expansion": null,
                        "file_name": "src\\framebuffer\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 519,
                        "line_start": 519,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 93,
                            "highlight_start": 87,
                            "text": "                None => panic!(\"The fragment output `{}` was not found in the program\", name)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 21970,
                    "byte_start": 21901,
                    "column_end": 94,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 519,
                    "line_start": 519,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 94,
                        "highlight_start": 25,
                        "text": "                None => panic!(\"The fragment output `{}` was not found in the program\", name)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this lifetime isn't used in the impl\n   --> src\\framebuffer\\mod.rs:625:6\n    |\n625 | impl<'a> EmptyFrameBuffer {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::extra_unused_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "this lifetime isn't used in the impl",
                "spans": [
                  {
                    "byte_end": 25876,
                    "byte_start": 25874,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\framebuffer\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 625,
                    "line_start": 625,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a> EmptyFrameBuffer {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: deref on an immutable reference\n   --> src\\index\\buffer.rs:225:31\n    |\n225 |         let b: &Buffer<[T]> = &*b;\n    |                               ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_deref_ref\n    = note: `#[warn(clippy::borrow_deref_ref)]` on by default\nhelp: if you would like to reborrow, try removing `&*`\n    |\n225 -         let b: &Buffer<[T]> = &*b;\n225 +         let b: &Buffer<[T]> = b;\n    |\nhelp: if you would like to deref, try using `&**`\n    |\n225 |         let b: &Buffer<[T]> = &**b;\n    |                                 +\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_deref_ref",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::borrow_deref_ref)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you would like to reborrow, try removing `&*`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7195,
                        "byte_start": 7192,
                        "column_end": 34,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\index\\buffer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 225,
                        "line_start": 225,
                        "suggested_replacement": "b",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 34,
                            "highlight_start": 31,
                            "text": "        let b: &Buffer<[T]> = &*b;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you would like to deref, try using `&**`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7195,
                        "byte_start": 7192,
                        "column_end": 34,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\index\\buffer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 225,
                        "line_start": 225,
                        "suggested_replacement": "&**b",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 34,
                            "highlight_start": 31,
                            "text": "        let b: &Buffer<[T]> = &*b;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::borrow_deref_ref",
                  "explanation": null
                },
                "level": "warning",
                "message": "deref on an immutable reference",
                "spans": [
                  {
                    "byte_end": 7195,
                    "byte_start": 7192,
                    "column_end": 34,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "src\\index\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 225,
                    "line_start": 225,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 31,
                        "text": "        let b: &Buffer<[T]> = &*b;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: deref on an immutable reference\n   --> src\\index\\multidraw.rs:136:50\n    |\n136 |         let b: &Buffer<[DrawCommandNoIndices]> = &*b;\n    |                                                  ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_deref_ref\nhelp: if you would like to reborrow, try removing `&*`\n    |\n136 -         let b: &Buffer<[DrawCommandNoIndices]> = &*b;\n136 +         let b: &Buffer<[DrawCommandNoIndices]> = b;\n    |\nhelp: if you would like to deref, try using `&**`\n    |\n136 |         let b: &Buffer<[DrawCommandNoIndices]> = &**b;\n    |                                                    +\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_deref_ref",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you would like to reborrow, try removing `&*`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4945,
                        "byte_start": 4942,
                        "column_end": 53,
                        "column_start": 50,
                        "expansion": null,
                        "file_name": "src\\index\\multidraw.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 136,
                        "line_start": 136,
                        "suggested_replacement": "b",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 50,
                            "text": "        let b: &Buffer<[DrawCommandNoIndices]> = &*b;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you would like to deref, try using `&**`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4945,
                        "byte_start": 4942,
                        "column_end": 53,
                        "column_start": 50,
                        "expansion": null,
                        "file_name": "src\\index\\multidraw.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 136,
                        "line_start": 136,
                        "suggested_replacement": "&**b",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 50,
                            "text": "        let b: &Buffer<[DrawCommandNoIndices]> = &*b;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::borrow_deref_ref",
                  "explanation": null
                },
                "level": "warning",
                "message": "deref on an immutable reference",
                "spans": [
                  {
                    "byte_end": 4945,
                    "byte_start": 4942,
                    "column_end": 53,
                    "column_start": 50,
                    "expansion": null,
                    "file_name": "src\\index\\multidraw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 136,
                    "line_start": 136,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 53,
                        "highlight_start": 50,
                        "text": "        let b: &Buffer<[DrawCommandNoIndices]> = &*b;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: deref on an immutable reference\n   --> src\\index\\multidraw.rs:241:48\n    |\n241 |         let b: &Buffer<[DrawCommandIndices]> = &*b;\n    |                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_deref_ref\nhelp: if you would like to reborrow, try removing `&*`\n    |\n241 -         let b: &Buffer<[DrawCommandIndices]> = &*b;\n241 +         let b: &Buffer<[DrawCommandIndices]> = b;\n    |\nhelp: if you would like to deref, try using `&**`\n    |\n241 |         let b: &Buffer<[DrawCommandIndices]> = &**b;\n    |                                                  +\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_deref_ref",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you would like to reborrow, try removing `&*`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8753,
                        "byte_start": 8750,
                        "column_end": 51,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\index\\multidraw.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 241,
                        "line_start": 241,
                        "suggested_replacement": "b",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 48,
                            "text": "        let b: &Buffer<[DrawCommandIndices]> = &*b;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you would like to deref, try using `&**`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8753,
                        "byte_start": 8750,
                        "column_end": 51,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\index\\multidraw.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 241,
                        "line_start": 241,
                        "suggested_replacement": "&**b",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 48,
                            "text": "        let b: &Buffer<[DrawCommandIndices]> = &*b;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::borrow_deref_ref",
                  "explanation": null
                },
                "level": "warning",
                "message": "deref on an immutable reference",
                "spans": [
                  {
                    "byte_end": 8753,
                    "byte_start": 8750,
                    "column_end": 51,
                    "column_start": 48,
                    "expansion": null,
                    "file_name": "src\\index\\multidraw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 241,
                    "line_start": 241,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 48,
                        "text": "        let b: &Buffer<[DrawCommandIndices]> = &*b;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\program\\raw.rs:307:37\n    |\n307 |                 attach_glium_header(&self, &mut storage);\n    |                                     ^^^^^ help: change this to: `self`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12327,
                        "byte_start": 12322,
                        "column_end": 42,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\program\\raw.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 307,
                        "line_start": 307,
                        "suggested_replacement": "self",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 37,
                            "text": "                attach_glium_header(&self, &mut storage);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 12327,
                    "byte_start": 12322,
                    "column_end": 42,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\program\\raw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 307,
                    "line_start": 307,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 37,
                        "text": "                attach_glium_header(&self, &mut storage);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: called `is_none()` after searching an `Iterator` with `find`\n   --> src\\program\\raw.rs:431:16\n    |\n431 |               if format.iter().find(|e| e.1 == elem.offset && e.3 == elem.ty)\n    |  ________________^\n432 | |                             .is_none()\n    | |______________________________________^ help: consider using: `!format.iter().any(|e| e.1 == elem.offset && e.3 == elem.ty)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n    = note: `#[warn(clippy::search_is_some)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::search_is_some)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 16211,
                        "byte_start": 16112,
                        "column_end": 39,
                        "column_start": 16,
                        "expansion": null,
                        "file_name": "src\\program\\raw.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 432,
                        "line_start": 431,
                        "suggested_replacement": "!format.iter().any(|e| e.1 == elem.offset && e.3 == elem.ty)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 76,
                            "highlight_start": 16,
                            "text": "            if format.iter().find(|e| e.1 == elem.offset && e.3 == elem.ty)"
                          },
                          {
                            "highlight_end": 39,
                            "highlight_start": 1,
                            "text": "                            .is_none()"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::search_is_some",
                  "explanation": null
                },
                "level": "warning",
                "message": "called `is_none()` after searching an `Iterator` with `find`",
                "spans": [
                  {
                    "byte_end": 16211,
                    "byte_start": 16112,
                    "column_end": 39,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\program\\raw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 432,
                    "line_start": 431,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 76,
                        "highlight_start": 16,
                        "text": "            if format.iter().find(|e| e.1 == elem.offset && e.3 == elem.ty)"
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "                            .is_none()"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this let-binding has unit value\n   --> src\\program\\reflection.rs:205:9\n    |\n205 | /         let program = if let Handle::Id(program) = program {\n206 | |             ctxt.gl.GetProgramiv(program, gl::ACTIVE_ATOMIC_COUNTER_BUFFERS, &mut active_atomic_counters);\n207 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\nhelp: omit the `let` binding\n    |\n205 ~         if let Handle::Id(program) = program {\n206 +             ctxt.gl.GetProgramiv(program, gl::ACTIVE_ATOMIC_COUNTER_BUFFERS, &mut active_atomic_counters);\n207 +         };\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::let_unit_value)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "omit the `let` binding",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5881,
                        "byte_start": 5711,
                        "column_end": 11,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\program\\reflection.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 207,
                        "line_start": 205,
                        "suggested_replacement": "if let Handle::Id(program) = program {\n            ctxt.gl.GetProgramiv(program, gl::ACTIVE_ATOMIC_COUNTER_BUFFERS, &mut active_atomic_counters);\n        };",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 61,
                            "highlight_start": 9,
                            "text": "        let program = if let Handle::Id(program) = program {"
                          },
                          {
                            "highlight_end": 107,
                            "highlight_start": 1,
                            "text": "            ctxt.gl.GetProgramiv(program, gl::ACTIVE_ATOMIC_COUNTER_BUFFERS, &mut active_atomic_counters);"
                          },
                          {
                            "highlight_end": 11,
                            "highlight_start": 1,
                            "text": "        };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::let_unit_value",
                  "explanation": null
                },
                "level": "warning",
                "message": "this let-binding has unit value",
                "spans": [
                  {
                    "byte_end": 5881,
                    "byte_start": 5711,
                    "column_end": 11,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\program\\reflection.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 207,
                    "line_start": 205,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 61,
                        "highlight_start": 9,
                        "text": "        let program = if let Handle::Id(program) = program {"
                      },
                      {
                        "highlight_end": 107,
                        "highlight_start": 1,
                        "text": "            ctxt.gl.GetProgramiv(program, gl::ACTIVE_ATOMIC_COUNTER_BUFFERS, &mut active_atomic_counters);"
                      },
                      {
                        "highlight_end": 11,
                        "highlight_start": 1,
                        "text": "        };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\program\\reflection.rs:317:39\n    |\n317 |             uniforms_flattened.insert(format!(\"{}[{}]\", name_base, i), uniform);\n    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n317 -             uniforms_flattened.insert(format!(\"{}[{}]\", name_base, i), uniform);\n317 +             uniforms_flattened.insert(format!(\"{name_base}[{i}]\"), uniform);\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11091,
                        "byte_start": 11091,
                        "column_end": 49,
                        "column_start": 49,
                        "expansion": null,
                        "file_name": "src\\program\\reflection.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 317,
                        "line_start": 317,
                        "suggested_replacement": "name_base",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 49,
                            "text": "            uniforms_flattened.insert(format!(\"{}[{}]\", name_base, i), uniform);"
                          }
                        ]
                      },
                      {
                        "byte_end": 11094,
                        "byte_start": 11094,
                        "column_end": 52,
                        "column_start": 52,
                        "expansion": null,
                        "file_name": "src\\program\\reflection.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 317,
                        "line_start": 317,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 52,
                            "highlight_start": 52,
                            "text": "            uniforms_flattened.insert(format!(\"{}[{}]\", name_base, i), uniform);"
                          }
                        ]
                      },
                      {
                        "byte_end": 11108,
                        "byte_start": 11097,
                        "column_end": 66,
                        "column_start": 55,
                        "expansion": null,
                        "file_name": "src\\program\\reflection.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 317,
                        "line_start": 317,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 66,
                            "highlight_start": 55,
                            "text": "            uniforms_flattened.insert(format!(\"{}[{}]\", name_base, i), uniform);"
                          }
                        ]
                      },
                      {
                        "byte_end": 11111,
                        "byte_start": 11108,
                        "column_end": 69,
                        "column_start": 66,
                        "expansion": null,
                        "file_name": "src\\program\\reflection.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 317,
                        "line_start": 317,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 69,
                            "highlight_start": 66,
                            "text": "            uniforms_flattened.insert(format!(\"{}[{}]\", name_base, i), uniform);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 11112,
                    "byte_start": 11081,
                    "column_end": 70,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "src\\program\\reflection.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 317,
                    "line_start": 317,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 70,
                        "highlight_start": 39,
                        "text": "            uniforms_flattened.insert(format!(\"{}[{}]\", name_base, i), uniform);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: clamp-like pattern without using clamp function\n   --> src\\program\\reflection.rs:347:29\n    |\n347 |         attr_name_len_max = cmp::min(cmp::max(attr_name_len_max, 63), 2047);\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `attr_name_len_max.clamp(63, 2047)`\n    |\n    = note: clamp will panic if max < min\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_clamp\n    = note: `#[warn(clippy::manual_clamp)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "clamp will panic if max < min",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_clamp",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::manual_clamp)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace with clamp",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12641,
                        "byte_start": 12594,
                        "column_end": 76,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\program\\reflection.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 347,
                        "line_start": 347,
                        "suggested_replacement": "attr_name_len_max.clamp(63, 2047)",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 76,
                            "highlight_start": 29,
                            "text": "        attr_name_len_max = cmp::min(cmp::max(attr_name_len_max, 63), 2047);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_clamp",
                  "explanation": null
                },
                "level": "warning",
                "message": "clamp-like pattern without using clamp function",
                "spans": [
                  {
                    "byte_end": 12641,
                    "byte_start": 12594,
                    "column_end": 76,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\program\\reflection.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 347,
                    "line_start": 347,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 76,
                        "highlight_start": 29,
                        "text": "        attr_name_len_max = cmp::min(cmp::max(attr_name_len_max, 63), 2047);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `repeat().take()` can be written more concisely\n   --> src\\program\\reflection.rs:488:35\n    |\n488 |         let mut members_indices = ::std::iter::repeat(0).take(num_members as usize)\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `repeat_n()` instead: `std::iter::repeat_n(0, num_members as usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_repeat_n\n    = note: `#[warn(clippy::manual_repeat_n)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_repeat_n",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::manual_repeat_n)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using `repeat_n()` instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 18867,
                        "byte_start": 18818,
                        "column_end": 84,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\program\\reflection.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 488,
                        "line_start": 488,
                        "suggested_replacement": "std::iter::repeat_n(0, num_members as usize)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 84,
                            "highlight_start": 35,
                            "text": "        let mut members_indices = ::std::iter::repeat(0).take(num_members as usize)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_repeat_n",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `repeat().take()` can be written more concisely",
                "spans": [
                  {
                    "byte_end": 18867,
                    "byte_start": 18818,
                    "column_end": 84,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\program\\reflection.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 488,
                    "line_start": 488,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 84,
                        "highlight_start": 35,
                        "text": "        let mut members_indices = ::std::iter::repeat(0).take(num_members as usize)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `repeat().take()` can be written more concisely\n   --> src\\program\\reflection.rs:495:34\n    |\n495 |         let mut member_offsets = ::std::iter::repeat(0).take(num_members as usize)\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `repeat_n()` instead: `std::iter::repeat_n(0, num_members as usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_repeat_n\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_repeat_n",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using `repeat_n()` instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 19349,
                        "byte_start": 19300,
                        "column_end": 83,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\program\\reflection.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 495,
                        "line_start": 495,
                        "suggested_replacement": "std::iter::repeat_n(0, num_members as usize)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 83,
                            "highlight_start": 34,
                            "text": "        let mut member_offsets = ::std::iter::repeat(0).take(num_members as usize)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_repeat_n",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `repeat().take()` can be written more concisely",
                "spans": [
                  {
                    "byte_end": 19349,
                    "byte_start": 19300,
                    "column_end": 83,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\program\\reflection.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 495,
                    "line_start": 495,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 83,
                        "highlight_start": 34,
                        "text": "        let mut member_offsets = ::std::iter::repeat(0).take(num_members as usize)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `repeat().take()` can be written more concisely\n   --> src\\program\\reflection.rs:501:32\n    |\n501 |         let mut member_types = ::std::iter::repeat(0).take(num_members as usize)\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `repeat_n()` instead: `std::iter::repeat_n(0, num_members as usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_repeat_n\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_repeat_n",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using `repeat_n()` instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 19737,
                        "byte_start": 19688,
                        "column_end": 81,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\program\\reflection.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 501,
                        "line_start": 501,
                        "suggested_replacement": "std::iter::repeat_n(0, num_members as usize)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 81,
                            "highlight_start": 32,
                            "text": "        let mut member_types = ::std::iter::repeat(0).take(num_members as usize)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_repeat_n",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `repeat().take()` can be written more concisely",
                "spans": [
                  {
                    "byte_end": 19737,
                    "byte_start": 19688,
                    "column_end": 81,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\program\\reflection.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 501,
                    "line_start": 501,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 81,
                        "highlight_start": 32,
                        "text": "        let mut member_types = ::std::iter::repeat(0).take(num_members as usize)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `repeat().take()` can be written more concisely\n   --> src\\program\\reflection.rs:507:31\n    |\n507 |         let mut member_size = ::std::iter::repeat(0).take(num_members as usize)\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `repeat_n()` instead: `std::iter::repeat_n(0, num_members as usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_repeat_n\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_repeat_n",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using `repeat_n()` instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20124,
                        "byte_start": 20075,
                        "column_end": 80,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\program\\reflection.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 507,
                        "line_start": 507,
                        "suggested_replacement": "std::iter::repeat_n(0, num_members as usize)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 80,
                            "highlight_start": 31,
                            "text": "        let mut member_size = ::std::iter::repeat(0).take(num_members as usize)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_repeat_n",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `repeat().take()` can be written more concisely",
                "spans": [
                  {
                    "byte_end": 20124,
                    "byte_start": 20075,
                    "column_end": 80,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "src\\program\\reflection.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 507,
                    "line_start": 507,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 80,
                        "highlight_start": 31,
                        "text": "        let mut member_size = ::std::iter::repeat(0).take(num_members as usize)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `repeat().take()` can be written more concisely\n   --> src\\program\\reflection.rs:513:35\n    |\n513 |         let mut member_name_len = ::std::iter::repeat(0).take(num_members as usize)\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `repeat_n()` instead: `std::iter::repeat_n(0, num_members as usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_repeat_n\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_repeat_n",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using `repeat_n()` instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20521,
                        "byte_start": 20472,
                        "column_end": 84,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\program\\reflection.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 513,
                        "line_start": 513,
                        "suggested_replacement": "std::iter::repeat_n(0, num_members as usize)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 84,
                            "highlight_start": 35,
                            "text": "        let mut member_name_len = ::std::iter::repeat(0).take(num_members as usize)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_repeat_n",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `repeat().take()` can be written more concisely",
                "spans": [
                  {
                    "byte_end": 20521,
                    "byte_start": 20472,
                    "column_end": 84,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\program\\reflection.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 513,
                    "line_start": 513,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 84,
                        "highlight_start": 35,
                        "text": "        let mut member_name_len = ::std::iter::repeat(0).take(num_members as usize)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`i32` -> `i32`)\n   --> src\\program\\reflection.rs:540:17\n    |\n540 |             id: block_id as i32,\n    |                 ^^^^^^^^^^^^^^^ help: try: `block_id`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::unnecessary_cast)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 21844,
                        "byte_start": 21829,
                        "column_end": 32,
                        "column_start": 17,
                        "expansion": null,
                        "file_name": "src\\program\\reflection.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 540,
                        "line_start": 540,
                        "suggested_replacement": "block_id",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 17,
                            "text": "            id: block_id as i32,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`i32` -> `i32`)",
                "spans": [
                  {
                    "byte_end": 21844,
                    "byte_start": 21829,
                    "column_end": 32,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\program\\reflection.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 540,
                    "line_start": 540,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 17,
                        "text": "            id: block_id as i32,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`i32` -> `i32`)\n   --> src\\program\\reflection.rs:836:30\n    |\n836 |             initial_binding: binding as i32,\n    |                              ^^^^^^^^^^^^^^ help: try: `binding`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 33821,
                        "byte_start": 33807,
                        "column_end": 44,
                        "column_start": 30,
                        "expansion": null,
                        "file_name": "src\\program\\reflection.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 836,
                        "line_start": 836,
                        "suggested_replacement": "binding",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 30,
                            "text": "            initial_binding: binding as i32,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`i32` -> `i32`)",
                "spans": [
                  {
                    "byte_end": 33821,
                    "byte_start": 33807,
                    "column_end": 44,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\program\\reflection.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 836,
                    "line_start": 836,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 44,
                        "highlight_start": 30,
                        "text": "            initial_binding: binding as i32,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> src\\program\\reflection.rs:1070:14\n     |\n1070 |         v => panic!(\"Unknown value returned by OpenGL uniform type: {}\", v)\n     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1070 -         v => panic!(\"Unknown value returned by OpenGL uniform type: {}\", v)\n1070 +         v => panic!(\"Unknown value returned by OpenGL uniform type: {v}\")\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 45614,
                        "byte_start": 45614,
                        "column_end": 70,
                        "column_start": 70,
                        "expansion": null,
                        "file_name": "src\\program\\reflection.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1070,
                        "line_start": 1070,
                        "suggested_replacement": "v",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 70,
                            "highlight_start": 70,
                            "text": "        v => panic!(\"Unknown value returned by OpenGL uniform type: {}\", v)"
                          }
                        ]
                      },
                      {
                        "byte_end": 45619,
                        "byte_start": 45616,
                        "column_end": 75,
                        "column_start": 72,
                        "expansion": null,
                        "file_name": "src\\program\\reflection.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1070,
                        "line_start": 1070,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 75,
                            "highlight_start": 72,
                            "text": "        v => panic!(\"Unknown value returned by OpenGL uniform type: {}\", v)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 45620,
                    "byte_start": 45558,
                    "column_end": 76,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "src\\program\\reflection.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1070,
                    "line_start": 1070,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 76,
                        "highlight_start": 14,
                        "text": "        v => panic!(\"Unknown value returned by OpenGL uniform type: {}\", v)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> src\\program\\reflection.rs:1105:14\n     |\n1105 |         v => panic!(\"Unknown value returned by OpenGL attribute type: {}\", v)\n     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1105 -         v => panic!(\"Unknown value returned by OpenGL attribute type: {}\", v)\n1105 +         v => panic!(\"Unknown value returned by OpenGL attribute type: {v}\")\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 47271,
                        "byte_start": 47271,
                        "column_end": 72,
                        "column_start": 72,
                        "expansion": null,
                        "file_name": "src\\program\\reflection.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1105,
                        "line_start": 1105,
                        "suggested_replacement": "v",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 72,
                            "highlight_start": 72,
                            "text": "        v => panic!(\"Unknown value returned by OpenGL attribute type: {}\", v)"
                          }
                        ]
                      },
                      {
                        "byte_end": 47276,
                        "byte_start": 47273,
                        "column_end": 77,
                        "column_start": 74,
                        "expansion": null,
                        "file_name": "src\\program\\reflection.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1105,
                        "line_start": 1105,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 77,
                            "highlight_start": 74,
                            "text": "        v => panic!(\"Unknown value returned by OpenGL attribute type: {}\", v)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 47277,
                    "byte_start": 47213,
                    "column_end": 78,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "src\\program\\reflection.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1105,
                    "line_start": 1105,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 78,
                        "highlight_start": 14,
                        "text": "        v => panic!(\"Unknown value returned by OpenGL attribute type: {}\", v)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> src\\program\\reflection.rs:1118:14\n     |\n1118 |         v => panic!(\"Unknown value returned by OpenGL varying mode: {}\", v)\n     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1118 -         v => panic!(\"Unknown value returned by OpenGL varying mode: {}\", v)\n1118 +         v => panic!(\"Unknown value returned by OpenGL varying mode: {v}\")\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 47723,
                        "byte_start": 47723,
                        "column_end": 70,
                        "column_start": 70,
                        "expansion": null,
                        "file_name": "src\\program\\reflection.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1118,
                        "line_start": 1118,
                        "suggested_replacement": "v",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 70,
                            "highlight_start": 70,
                            "text": "        v => panic!(\"Unknown value returned by OpenGL varying mode: {}\", v)"
                          }
                        ]
                      },
                      {
                        "byte_end": 47728,
                        "byte_start": 47725,
                        "column_end": 75,
                        "column_start": 72,
                        "expansion": null,
                        "file_name": "src\\program\\reflection.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1118,
                        "line_start": 1118,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 75,
                            "highlight_start": 72,
                            "text": "        v => panic!(\"Unknown value returned by OpenGL varying mode: {}\", v)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 47729,
                    "byte_start": 47667,
                    "column_end": 76,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "src\\program\\reflection.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1118,
                    "line_start": 1118,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 76,
                        "highlight_start": 14,
                        "text": "        v => panic!(\"Unknown value returned by OpenGL varying mode: {}\", v)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting raw pointers to the same type and constness is unnecessary (`*const f32` -> `*const f32`)\n   --> src\\program\\uniforms_storage.rs:164:72\n    |\n164 |                 uniform!(ctxt, Uniform2fv, Uniform2fvARB, location, 1, v.as_ptr() as *const f32);\n    |                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `v.as_ptr()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8442,
                        "byte_start": 8418,
                        "column_end": 96,
                        "column_start": 72,
                        "expansion": null,
                        "file_name": "src\\program\\uniforms_storage.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 164,
                        "line_start": 164,
                        "suggested_replacement": "v.as_ptr()",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 96,
                            "highlight_start": 72,
                            "text": "                uniform!(ctxt, Uniform2fv, Uniform2fvARB, location, 1, v.as_ptr() as *const f32);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting raw pointers to the same type and constness is unnecessary (`*const f32` -> `*const f32`)",
                "spans": [
                  {
                    "byte_end": 8442,
                    "byte_start": 8418,
                    "column_end": 96,
                    "column_start": 72,
                    "expansion": null,
                    "file_name": "src\\program\\uniforms_storage.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 164,
                    "line_start": 164,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 96,
                        "highlight_start": 72,
                        "text": "                uniform!(ctxt, Uniform2fv, Uniform2fvARB, location, 1, v.as_ptr() as *const f32);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting raw pointers to the same type and constness is unnecessary (`*const f32` -> `*const f32`)\n   --> src\\program\\uniforms_storage.rs:169:72\n    |\n169 |                 uniform!(ctxt, Uniform3fv, Uniform3fvARB, location, 1, v.as_ptr() as *const f32);\n    |                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `v.as_ptr()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8667,
                        "byte_start": 8643,
                        "column_end": 96,
                        "column_start": 72,
                        "expansion": null,
                        "file_name": "src\\program\\uniforms_storage.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 169,
                        "line_start": 169,
                        "suggested_replacement": "v.as_ptr()",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 96,
                            "highlight_start": 72,
                            "text": "                uniform!(ctxt, Uniform3fv, Uniform3fvARB, location, 1, v.as_ptr() as *const f32);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting raw pointers to the same type and constness is unnecessary (`*const f32` -> `*const f32`)",
                "spans": [
                  {
                    "byte_end": 8667,
                    "byte_start": 8643,
                    "column_end": 96,
                    "column_start": 72,
                    "expansion": null,
                    "file_name": "src\\program\\uniforms_storage.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 169,
                    "line_start": 169,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 96,
                        "highlight_start": 72,
                        "text": "                uniform!(ctxt, Uniform3fv, Uniform3fvARB, location, 1, v.as_ptr() as *const f32);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting raw pointers to the same type and constness is unnecessary (`*const f32` -> `*const f32`)\n   --> src\\program\\uniforms_storage.rs:174:72\n    |\n174 |                 uniform!(ctxt, Uniform4fv, Uniform4fvARB, location, 1, v.as_ptr() as *const f32);\n    |                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `v.as_ptr()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8892,
                        "byte_start": 8868,
                        "column_end": 96,
                        "column_start": 72,
                        "expansion": null,
                        "file_name": "src\\program\\uniforms_storage.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 174,
                        "line_start": 174,
                        "suggested_replacement": "v.as_ptr()",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 96,
                            "highlight_start": 72,
                            "text": "                uniform!(ctxt, Uniform4fv, Uniform4fvARB, location, 1, v.as_ptr() as *const f32);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting raw pointers to the same type and constness is unnecessary (`*const f32` -> `*const f32`)",
                "spans": [
                  {
                    "byte_end": 8892,
                    "byte_start": 8868,
                    "column_end": 96,
                    "column_start": 72,
                    "expansion": null,
                    "file_name": "src\\program\\uniforms_storage.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 174,
                    "line_start": 174,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 96,
                        "highlight_start": 72,
                        "text": "                uniform!(ctxt, Uniform4fv, Uniform4fvARB, location, 1, v.as_ptr() as *const f32);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\program\\mod.rs:166:17\n    |\n166 |                 write!(fmt, \"{}: {}\", desc, s),\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n166 -                 write!(fmt, \"{}: {}\", desc, s),\n166 +                 write!(fmt, \"{desc}: {s}\"),\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6774,
                        "byte_start": 6774,
                        "column_end": 31,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\program\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 166,
                        "line_start": 166,
                        "suggested_replacement": "desc",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 31,
                            "highlight_start": 31,
                            "text": "                write!(fmt, \"{}: {}\", desc, s),"
                          }
                        ]
                      },
                      {
                        "byte_end": 6778,
                        "byte_start": 6778,
                        "column_end": 35,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\program\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 166,
                        "line_start": 166,
                        "suggested_replacement": "s",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 35,
                            "text": "                write!(fmt, \"{}: {}\", desc, s),"
                          }
                        ]
                      },
                      {
                        "byte_end": 6786,
                        "byte_start": 6780,
                        "column_end": 43,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\program\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 166,
                        "line_start": 166,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 37,
                            "text": "                write!(fmt, \"{}: {}\", desc, s),"
                          }
                        ]
                      },
                      {
                        "byte_end": 6789,
                        "byte_start": 6786,
                        "column_end": 46,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\program\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 166,
                        "line_start": 166,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 43,
                            "text": "                write!(fmt, \"{}: {}\", desc, s),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 6790,
                    "byte_start": 6760,
                    "column_end": 47,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\program\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 166,
                    "line_start": 166,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 47,
                        "highlight_start": 17,
                        "text": "                write!(fmt, \"{}: {}\", desc, s),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\program\\mod.rs:168:17\n    |\n168 |                 write!(fmt, \"{}: {}\", desc, s),\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n168 -                 write!(fmt, \"{}: {}\", desc, s),\n168 +                 write!(fmt, \"{desc}: {s}\"),\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6857,
                        "byte_start": 6857,
                        "column_end": 31,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\program\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 168,
                        "line_start": 168,
                        "suggested_replacement": "desc",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 31,
                            "highlight_start": 31,
                            "text": "                write!(fmt, \"{}: {}\", desc, s),"
                          }
                        ]
                      },
                      {
                        "byte_end": 6861,
                        "byte_start": 6861,
                        "column_end": 35,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\program\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 168,
                        "line_start": 168,
                        "suggested_replacement": "s",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 35,
                            "text": "                write!(fmt, \"{}: {}\", desc, s),"
                          }
                        ]
                      },
                      {
                        "byte_end": 6869,
                        "byte_start": 6863,
                        "column_end": 43,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\program\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 168,
                        "line_start": 168,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 37,
                            "text": "                write!(fmt, \"{}: {}\", desc, s),"
                          }
                        ]
                      },
                      {
                        "byte_end": 6872,
                        "byte_start": 6869,
                        "column_end": 46,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\program\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 168,
                        "line_start": 168,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 43,
                            "text": "                write!(fmt, \"{}: {}\", desc, s),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 6873,
                    "byte_start": 6843,
                    "column_end": 47,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\program\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 168,
                    "line_start": 168,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 47,
                        "highlight_start": 17,
                        "text": "                write!(fmt, \"{}: {}\", desc, s),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\program\\mod.rs:170:17\n    |\n170 |                 write!(fmt, \"{}\", desc),\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n170 -                 write!(fmt, \"{}\", desc),\n170 +                 write!(fmt, \"{desc}\"),\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6922,
                        "byte_start": 6922,
                        "column_end": 31,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\program\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 170,
                        "line_start": 170,
                        "suggested_replacement": "desc",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 31,
                            "highlight_start": 31,
                            "text": "                write!(fmt, \"{}\", desc),"
                          }
                        ]
                      },
                      {
                        "byte_end": 6930,
                        "byte_start": 6924,
                        "column_end": 39,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\program\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 170,
                        "line_start": 170,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 33,
                            "text": "                write!(fmt, \"{}\", desc),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 6931,
                    "byte_start": 6908,
                    "column_end": 40,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\program\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 170,
                    "line_start": 170,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 17,
                        "text": "                write!(fmt, \"{}\", desc),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\program\\mod.rs:192:46\n    |\n192 |             ProgramCreationError(ref err) => write!(fmt, \"{}\", err),\n    |                                              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n192 -             ProgramCreationError(ref err) => write!(fmt, \"{}\", err),\n192 +             ProgramCreationError(ref err) => write!(fmt, \"{err}\"),\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7564,
                        "byte_start": 7564,
                        "column_end": 60,
                        "column_start": 60,
                        "expansion": null,
                        "file_name": "src\\program\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 192,
                        "line_start": 192,
                        "suggested_replacement": "err",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 60,
                            "highlight_start": 60,
                            "text": "            ProgramCreationError(ref err) => write!(fmt, \"{}\", err),"
                          }
                        ]
                      },
                      {
                        "byte_end": 7571,
                        "byte_start": 7566,
                        "column_end": 67,
                        "column_start": 62,
                        "expansion": null,
                        "file_name": "src\\program\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 192,
                        "line_start": 192,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 67,
                            "highlight_start": 62,
                            "text": "            ProgramCreationError(ref err) => write!(fmt, \"{}\", err),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 7572,
                    "byte_start": 7550,
                    "column_end": 68,
                    "column_start": 46,
                    "expansion": null,
                    "file_name": "src\\program\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 192,
                    "line_start": 192,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 68,
                        "highlight_start": 46,
                        "text": "            ProgramCreationError(ref err) => write!(fmt, \"{}\", err),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src\\uniforms\\bind.rs:70:36\n   |\n70 |                 match bind_uniform(&mut ctxt, &value, program, uniform.location,\n   |                                    ^^^^^^^^^ help: change this to: `ctxt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2351,
                        "byte_start": 2342,
                        "column_end": 45,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "src\\uniforms\\bind.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 70,
                        "line_start": 70,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 36,
                            "text": "                match bind_uniform(&mut ctxt, &value, program, uniform.location,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 2351,
                    "byte_start": 2342,
                    "column_end": 45,
                    "column_start": 36,
                    "expansion": null,
                    "file_name": "src\\uniforms\\bind.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 70,
                    "line_start": 70,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 45,
                        "highlight_start": 36,
                        "text": "                match bind_uniform(&mut ctxt, &value, program, uniform.location,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src\\uniforms\\bind.rs:81:54\n   |\n81 |                 let fence = match bind_uniform_block(&mut ctxt, &value, block,\n   |                                                      ^^^^^^^^^ help: change this to: `ctxt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2827,
                        "byte_start": 2818,
                        "column_end": 63,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\uniforms\\bind.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 81,
                        "line_start": 81,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 63,
                            "highlight_start": 54,
                            "text": "                let fence = match bind_uniform_block(&mut ctxt, &value, block,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 2827,
                    "byte_start": 2818,
                    "column_end": 63,
                    "column_start": 54,
                    "expansion": null,
                    "file_name": "src\\uniforms\\bind.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 81,
                    "line_start": 81,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 63,
                        "highlight_start": 54,
                        "text": "                let fence = match bind_uniform_block(&mut ctxt, &value, block,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src\\uniforms\\bind.rs:96:61\n   |\n96 |                 let fence = match bind_shared_storage_block(&mut ctxt, &value, block, program,\n   |                                                             ^^^^^^^^^ help: change this to: `ctxt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3412,
                        "byte_start": 3403,
                        "column_end": 70,
                        "column_start": 61,
                        "expansion": null,
                        "file_name": "src\\uniforms\\bind.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 96,
                        "line_start": 96,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 70,
                            "highlight_start": 61,
                            "text": "                let fence = match bind_shared_storage_block(&mut ctxt, &value, block, program,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 3412,
                    "byte_start": 3403,
                    "column_end": 70,
                    "column_start": 61,
                    "expansion": null,
                    "file_name": "src\\uniforms\\bind.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 96,
                    "line_start": 96,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 70,
                        "highlight_start": 61,
                        "text": "                let fence = match bind_shared_storage_block(&mut ctxt, &value, block, program,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\uniforms\\bind.rs:111:55\n    |\n111 |                 let fence = match bind_atomic_counter(&mut ctxt, &value, block, program,\n    |                                                       ^^^^^^^^^ help: change this to: `ctxt`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4058,
                        "byte_start": 4049,
                        "column_end": 64,
                        "column_start": 55,
                        "expansion": null,
                        "file_name": "src\\uniforms\\bind.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 111,
                        "line_start": 111,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 64,
                            "highlight_start": 55,
                            "text": "                let fence = match bind_atomic_counter(&mut ctxt, &value, block, program,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 4058,
                    "byte_start": 4049,
                    "column_end": 64,
                    "column_start": 55,
                    "expansion": null,
                    "file_name": "src\\uniforms\\bind.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 111,
                    "line_start": 111,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 64,
                        "highlight_start": 55,
                        "text": "                let fence = match bind_atomic_counter(&mut ctxt, &value, block, program,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\uniforms\\bind.rs:135:44\n    |\n135 |             match bind_subroutine_uniforms(&mut ctxt, program, &subroutine_bindings) {\n    |                                            ^^^^^^^^^ help: change this to: `ctxt`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5071,
                        "byte_start": 5062,
                        "column_end": 53,
                        "column_start": 44,
                        "expansion": null,
                        "file_name": "src\\uniforms\\bind.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 135,
                        "line_start": 135,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 44,
                            "text": "            match bind_subroutine_uniforms(&mut ctxt, program, &subroutine_bindings) {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 5071,
                    "byte_start": 5062,
                    "column_end": 53,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "src\\uniforms\\bind.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 135,
                    "line_start": 135,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 53,
                        "highlight_start": 44,
                        "text": "            match bind_subroutine_uniforms(&mut ctxt, program, &subroutine_bindings) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the following explicit lifetimes could be elided: 'a\n   --> src\\uniforms\\buffer.rs:234:6\n    |\n234 | impl<'a, T: ?Sized> AsUniformValue for &'a UniformBuffer<T> where T: UniformBlock + Content {\n    |      ^^                                 ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n234 - impl<'a, T: ?Sized> AsUniformValue for &'a UniformBuffer<T> where T: UniformBlock + Content {\n234 + impl<T: ?Sized> AsUniformValue for &UniformBuffer<T> where T: UniformBlock + Content {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_lifetimes)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7039,
                        "byte_start": 7035,
                        "column_end": 10,
                        "column_start": 6,
                        "expansion": null,
                        "file_name": "src\\uniforms\\buffer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 234,
                        "line_start": 234,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 10,
                            "highlight_start": 6,
                            "text": "impl<'a, T: ?Sized> AsUniformValue for &'a UniformBuffer<T> where T: UniformBlock + Content {"
                          }
                        ]
                      },
                      {
                        "byte_end": 7073,
                        "byte_start": 7070,
                        "column_end": 44,
                        "column_start": 41,
                        "expansion": null,
                        "file_name": "src\\uniforms\\buffer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 234,
                        "line_start": 234,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 41,
                            "text": "impl<'a, T: ?Sized> AsUniformValue for &'a UniformBuffer<T> where T: UniformBlock + Content {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 7037,
                    "byte_start": 7035,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 234,
                    "line_start": 234,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a, T: ?Sized> AsUniformValue for &'a UniformBuffer<T> where T: UniformBlock + Content {"
                      }
                    ]
                  },
                  {
                    "byte_end": 7072,
                    "byte_start": 7070,
                    "column_end": 43,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "src\\uniforms\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 234,
                    "line_start": 234,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 43,
                        "highlight_start": 41,
                        "text": "impl<'a, T: ?Sized> AsUniformValue for &'a UniformBuffer<T> where T: UniformBlock + Content {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\uniforms\\image_unit.rs:27:39\n   |\n27 |             NoMipmapAtLevel(level) => write!(f, \"No mipmap level {} found\", level),\n   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n27 -             NoMipmapAtLevel(level) => write!(f, \"No mipmap level {} found\", level),\n27 +             NoMipmapAtLevel(level) => write!(f, \"No mipmap level {level} found\"),\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 997,
                        "byte_start": 997,
                        "column_end": 67,
                        "column_start": 67,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 27,
                        "line_start": 27,
                        "suggested_replacement": "level",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 67,
                            "highlight_start": 67,
                            "text": "            NoMipmapAtLevel(level) => write!(f, \"No mipmap level {} found\", level),"
                          }
                        ]
                      },
                      {
                        "byte_end": 1012,
                        "byte_start": 1005,
                        "column_end": 82,
                        "column_start": 75,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 27,
                        "line_start": 27,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 82,
                            "highlight_start": 75,
                            "text": "            NoMipmapAtLevel(level) => write!(f, \"No mipmap level {} found\", level),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1013,
                    "byte_start": 969,
                    "column_end": 83,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "src\\uniforms\\image_unit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 27,
                    "line_start": 27,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 83,
                        "highlight_start": 39,
                        "text": "            NoMipmapAtLevel(level) => write!(f, \"No mipmap level {} found\", level),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\uniforms\\image_unit.rs:28:43\n   |\n28 |             LayeringNotSupported(kind) => write!(f, \"Layering is not supported with textures of dimensions {:?}\", kind),\n   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n28 -             LayeringNotSupported(kind) => write!(f, \"Layering is not supported with textures of dimensions {:?}\", kind),\n28 +             LayeringNotSupported(kind) => write!(f, \"Layering is not supported with textures of dimensions {kind:?}\"),\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1123,
                        "byte_start": 1123,
                        "column_end": 109,
                        "column_start": 109,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 28,
                        "line_start": 28,
                        "suggested_replacement": "kind",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 109,
                            "highlight_start": 109,
                            "text": "            LayeringNotSupported(kind) => write!(f, \"Layering is not supported with textures of dimensions {:?}\", kind),"
                          }
                        ]
                      },
                      {
                        "byte_end": 1133,
                        "byte_start": 1127,
                        "column_end": 119,
                        "column_start": 113,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 28,
                        "line_start": 28,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 119,
                            "highlight_start": 113,
                            "text": "            LayeringNotSupported(kind) => write!(f, \"Layering is not supported with textures of dimensions {:?}\", kind),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1134,
                    "byte_start": 1057,
                    "column_end": 120,
                    "column_start": 43,
                    "expansion": null,
                    "file_name": "src\\uniforms\\image_unit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 28,
                    "line_start": 28,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 120,
                        "highlight_start": 43,
                        "text": "            LayeringNotSupported(kind) => write!(f, \"Layering is not supported with textures of dimensions {:?}\", kind),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\uniforms\\image_unit.rs:29:40\n   |\n29 |             LayerOutOfBounds(layer) => write!(f, \"Request layer {} is out of bounds\", layer),\n   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n29 -             LayerOutOfBounds(layer) => write!(f, \"Request layer {} is out of bounds\", layer),\n29 +             LayerOutOfBounds(layer) => write!(f, \"Request layer {layer} is out of bounds\"),\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1201,
                        "byte_start": 1201,
                        "column_end": 66,
                        "column_start": 66,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 29,
                        "line_start": 29,
                        "suggested_replacement": "layer",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 66,
                            "highlight_start": 66,
                            "text": "            LayerOutOfBounds(layer) => write!(f, \"Request layer {} is out of bounds\", layer),"
                          }
                        ]
                      },
                      {
                        "byte_end": 1227,
                        "byte_start": 1220,
                        "column_end": 92,
                        "column_start": 85,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 29,
                        "line_start": 29,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 92,
                            "highlight_start": 85,
                            "text": "            LayerOutOfBounds(layer) => write!(f, \"Request layer {} is out of bounds\", layer),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1228,
                    "byte_start": 1175,
                    "column_end": 93,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "src\\uniforms\\image_unit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 29,
                    "line_start": 29,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 93,
                        "highlight_start": 40,
                        "text": "            LayerOutOfBounds(layer) => write!(f, \"Request layer {} is out of bounds\", layer),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\uniforms\\image_unit.rs:30:45\n   |\n30 |             BadFormatClass(tbits, ibits) => write!(f, \"Texture format has {} bits but image format has {} bits\", tbits, ibits),\n   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n30 -             BadFormatClass(tbits, ibits) => write!(f, \"Texture format has {} bits but image format has {} bits\", tbits, ibits),\n30 +             BadFormatClass(tbits, ibits) => write!(f, \"Texture format has {tbits} bits but image format has {ibits} bits\"),\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1305,
                        "byte_start": 1305,
                        "column_end": 76,
                        "column_start": 76,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 30,
                        "line_start": 30,
                        "suggested_replacement": "tbits",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 76,
                            "highlight_start": 76,
                            "text": "            BadFormatClass(tbits, ibits) => write!(f, \"Texture format has {} bits but image format has {} bits\", tbits, ibits),"
                          }
                        ]
                      },
                      {
                        "byte_end": 1334,
                        "byte_start": 1334,
                        "column_end": 105,
                        "column_start": 105,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 30,
                        "line_start": 30,
                        "suggested_replacement": "ibits",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 105,
                            "highlight_start": 105,
                            "text": "            BadFormatClass(tbits, ibits) => write!(f, \"Texture format has {} bits but image format has {} bits\", tbits, ibits),"
                          }
                        ]
                      },
                      {
                        "byte_end": 1348,
                        "byte_start": 1341,
                        "column_end": 119,
                        "column_start": 112,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 30,
                        "line_start": 30,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 119,
                            "highlight_start": 112,
                            "text": "            BadFormatClass(tbits, ibits) => write!(f, \"Texture format has {} bits but image format has {} bits\", tbits, ibits),"
                          }
                        ]
                      },
                      {
                        "byte_end": 1355,
                        "byte_start": 1348,
                        "column_end": 126,
                        "column_start": 119,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 30,
                        "line_start": 30,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 126,
                            "highlight_start": 119,
                            "text": "            BadFormatClass(tbits, ibits) => write!(f, \"Texture format has {} bits but image format has {} bits\", tbits, ibits),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1356,
                    "byte_start": 1274,
                    "column_end": 127,
                    "column_start": 45,
                    "expansion": null,
                    "file_name": "src\\uniforms\\image_unit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 30,
                    "line_start": 30,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 127,
                        "highlight_start": 45,
                        "text": "            BadFormatClass(tbits, ibits) => write!(f, \"Texture format has {} bits but image format has {} bits\", tbits, ibits),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\uniforms\\image_unit.rs:31:33\n   |\n31 |             GetFormat(error) => write!(f, \"{}\", error),\n   |                                 ^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n31 -             GetFormat(error) => write!(f, \"{}\", error),\n31 +             GetFormat(error) => write!(f, \"{error}\"),\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1402,
                        "byte_start": 1402,
                        "column_end": 45,
                        "column_start": 45,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 31,
                        "line_start": 31,
                        "suggested_replacement": "error",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 45,
                            "text": "            GetFormat(error) => write!(f, \"{}\", error),"
                          }
                        ]
                      },
                      {
                        "byte_end": 1411,
                        "byte_start": 1404,
                        "column_end": 54,
                        "column_start": 47,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 31,
                        "line_start": 31,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 47,
                            "text": "            GetFormat(error) => write!(f, \"{}\", error),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1412,
                    "byte_start": 1390,
                    "column_end": 55,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\uniforms\\image_unit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 31,
                    "line_start": 31,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 55,
                        "highlight_start": 33,
                        "text": "            GetFormat(error) => write!(f, \"{}\", error),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\uniforms\\image_unit.rs:244:38\n    |\n244 |             ImageUnitFormat::R32F => 1*32,\n    |                                      ^^^^ help: consider reducing it to: `32`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::identity_op)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9709,
                        "byte_start": 9705,
                        "column_end": 42,
                        "column_start": 38,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 244,
                        "line_start": 244,
                        "suggested_replacement": "32",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 38,
                            "text": "            ImageUnitFormat::R32F => 1*32,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 9709,
                    "byte_start": 9705,
                    "column_end": 42,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\uniforms\\image_unit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 244,
                    "line_start": 244,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 38,
                        "text": "            ImageUnitFormat::R32F => 1*32,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\uniforms\\image_unit.rs:245:38\n    |\n245 |             ImageUnitFormat::R16F => 1*16,\n    |                                      ^^^^ help: consider reducing it to: `16`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9752,
                        "byte_start": 9748,
                        "column_end": 42,
                        "column_start": 38,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 245,
                        "line_start": 245,
                        "suggested_replacement": "16",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 38,
                            "text": "            ImageUnitFormat::R16F => 1*16,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 9752,
                    "byte_start": 9748,
                    "column_end": 42,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\uniforms\\image_unit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 245,
                    "line_start": 245,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 38,
                        "text": "            ImageUnitFormat::R16F => 1*16,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\uniforms\\image_unit.rs:254:39\n    |\n254 |             ImageUnitFormat::R32UI => 1*32,\n    |                                       ^^^^ help: consider reducing it to: `32`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10121,
                        "byte_start": 10117,
                        "column_end": 43,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 254,
                        "line_start": 254,
                        "suggested_replacement": "32",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 39,
                            "text": "            ImageUnitFormat::R32UI => 1*32,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 10121,
                    "byte_start": 10117,
                    "column_end": 43,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "src\\uniforms\\image_unit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 254,
                    "line_start": 254,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 43,
                        "highlight_start": 39,
                        "text": "            ImageUnitFormat::R32UI => 1*32,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\uniforms\\image_unit.rs:255:39\n    |\n255 |             ImageUnitFormat::R16UI => 1*16,\n    |                                       ^^^^ help: consider reducing it to: `16`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10165,
                        "byte_start": 10161,
                        "column_end": 43,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 255,
                        "line_start": 255,
                        "suggested_replacement": "16",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 39,
                            "text": "            ImageUnitFormat::R16UI => 1*16,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 10165,
                    "byte_start": 10161,
                    "column_end": 43,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "src\\uniforms\\image_unit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 255,
                    "line_start": 255,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 43,
                        "highlight_start": 39,
                        "text": "            ImageUnitFormat::R16UI => 1*16,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\uniforms\\image_unit.rs:256:38\n    |\n256 |             ImageUnitFormat::R8UI => 1*8,\n    |                                      ^^^ help: consider reducing it to: `8`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10207,
                        "byte_start": 10204,
                        "column_end": 41,
                        "column_start": 38,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 256,
                        "line_start": 256,
                        "suggested_replacement": "8",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 38,
                            "text": "            ImageUnitFormat::R8UI => 1*8,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 10207,
                    "byte_start": 10204,
                    "column_end": 41,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\uniforms\\image_unit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 256,
                    "line_start": 256,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 38,
                        "text": "            ImageUnitFormat::R8UI => 1*8,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\uniforms\\image_unit.rs:264:38\n    |\n264 |             ImageUnitFormat::R32I => 1*32,\n    |                                      ^^^^ help: consider reducing it to: `32`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10517,
                        "byte_start": 10513,
                        "column_end": 42,
                        "column_start": 38,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 264,
                        "line_start": 264,
                        "suggested_replacement": "32",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 38,
                            "text": "            ImageUnitFormat::R32I => 1*32,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 10517,
                    "byte_start": 10513,
                    "column_end": 42,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\uniforms\\image_unit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 264,
                    "line_start": 264,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 38,
                        "text": "            ImageUnitFormat::R32I => 1*32,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\uniforms\\image_unit.rs:265:38\n    |\n265 |             ImageUnitFormat::R16I => 1*16,\n    |                                      ^^^^ help: consider reducing it to: `16`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10560,
                        "byte_start": 10556,
                        "column_end": 42,
                        "column_start": 38,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 265,
                        "line_start": 265,
                        "suggested_replacement": "16",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 38,
                            "text": "            ImageUnitFormat::R16I => 1*16,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 10560,
                    "byte_start": 10556,
                    "column_end": 42,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\uniforms\\image_unit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 265,
                    "line_start": 265,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 38,
                        "text": "            ImageUnitFormat::R16I => 1*16,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\uniforms\\image_unit.rs:266:37\n    |\n266 |             ImageUnitFormat::R8I => 1*8,\n    |                                     ^^^ help: consider reducing it to: `8`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10601,
                        "byte_start": 10598,
                        "column_end": 40,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 266,
                        "line_start": 266,
                        "suggested_replacement": "8",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 37,
                            "text": "            ImageUnitFormat::R8I => 1*8,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 10601,
                    "byte_start": 10598,
                    "column_end": 40,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\uniforms\\image_unit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 266,
                    "line_start": 266,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 37,
                        "text": "            ImageUnitFormat::R8I => 1*8,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\uniforms\\image_unit.rs:273:37\n    |\n273 |             ImageUnitFormat::R16 => 1*16,\n    |                                     ^^^^ help: consider reducing it to: `16`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10864,
                        "byte_start": 10860,
                        "column_end": 41,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 273,
                        "line_start": 273,
                        "suggested_replacement": "16",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 37,
                            "text": "            ImageUnitFormat::R16 => 1*16,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 10864,
                    "byte_start": 10860,
                    "column_end": 41,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\uniforms\\image_unit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 273,
                    "line_start": 273,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 37,
                        "text": "            ImageUnitFormat::R16 => 1*16,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\uniforms\\image_unit.rs:274:36\n    |\n274 |             ImageUnitFormat::R8 => 1*8,\n    |                                    ^^^ help: consider reducing it to: `8`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10904,
                        "byte_start": 10901,
                        "column_end": 39,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 274,
                        "line_start": 274,
                        "suggested_replacement": "8",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 36,
                            "text": "            ImageUnitFormat::R8 => 1*8,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 10904,
                    "byte_start": 10901,
                    "column_end": 39,
                    "column_start": 36,
                    "expansion": null,
                    "file_name": "src\\uniforms\\image_unit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 274,
                    "line_start": 274,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 36,
                        "text": "            ImageUnitFormat::R8 => 1*8,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\uniforms\\image_unit.rs:280:42\n    |\n280 |             ImageUnitFormat::R16snorm => 1*16,\n    |                                          ^^^^ help: consider reducing it to: `16`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11144,
                        "byte_start": 11140,
                        "column_end": 46,
                        "column_start": 42,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 280,
                        "line_start": 280,
                        "suggested_replacement": "16",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 42,
                            "text": "            ImageUnitFormat::R16snorm => 1*16,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 11144,
                    "byte_start": 11140,
                    "column_end": 46,
                    "column_start": 42,
                    "expansion": null,
                    "file_name": "src\\uniforms\\image_unit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 280,
                    "line_start": 280,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 46,
                        "highlight_start": 42,
                        "text": "            ImageUnitFormat::R16snorm => 1*16,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\uniforms\\image_unit.rs:281:41\n    |\n281 |             ImageUnitFormat::R8snorm => 1*8,\n    |                                         ^^^ help: consider reducing it to: `8`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11189,
                        "byte_start": 11186,
                        "column_end": 44,
                        "column_start": 41,
                        "expansion": null,
                        "file_name": "src\\uniforms\\image_unit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 281,
                        "line_start": 281,
                        "suggested_replacement": "8",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 41,
                            "text": "            ImageUnitFormat::R8snorm => 1*8,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 11189,
                    "byte_start": 11186,
                    "column_end": 44,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "src\\uniforms\\image_unit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 281,
                    "line_start": 281,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 44,
                        "highlight_start": 41,
                        "text": "            ImageUnitFormat::R8snorm => 1*8,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`i32` -> `i32`)\n   --> src\\uniforms\\value.rs:480:33\n    |\n480 |         UniformValue::SignedInt(*self as i32)\n    |                                 ^^^^^^^^^^^^ help: try: `(*self)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 23286,
                        "byte_start": 23274,
                        "column_end": 45,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\uniforms\\value.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 480,
                        "line_start": 480,
                        "suggested_replacement": "(*self)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 33,
                            "text": "        UniformValue::SignedInt(*self as i32)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`i32` -> `i32`)",
                "spans": [
                  {
                    "byte_end": 23286,
                    "byte_start": 23274,
                    "column_end": 45,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\uniforms\\value.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 480,
                    "line_start": 480,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 45,
                        "highlight_start": 33,
                        "text": "        UniformValue::SignedInt(*self as i32)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src\\uniforms\\value.rs:543:35\n    |\n543 |         UniformValue::UnsignedInt(*self as u32)\n    |                                   ^^^^^^^^^^^^ help: try: `(*self)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 24838,
                        "byte_start": 24826,
                        "column_end": 47,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\uniforms\\value.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 543,
                        "line_start": 543,
                        "suggested_replacement": "(*self)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 35,
                            "text": "        UniformValue::UnsignedInt(*self as u32)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`u32` -> `u32`)",
                "spans": [
                  {
                    "byte_end": 24838,
                    "byte_start": 24826,
                    "column_end": 47,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\uniforms\\value.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 543,
                    "line_start": 543,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 47,
                        "highlight_start": 35,
                        "text": "        UniformValue::UnsignedInt(*self as u32)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`i64` -> `i64`)\n   --> src\\uniforms\\value.rs:851:29\n    |\n851 |         UniformValue::Int64(*self as i64)\n    |                             ^^^^^^^^^^^^ help: try: `(*self)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 32652,
                        "byte_start": 32640,
                        "column_end": 41,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\uniforms\\value.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 851,
                        "line_start": 851,
                        "suggested_replacement": "(*self)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 29,
                            "text": "        UniformValue::Int64(*self as i64)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`i64` -> `i64`)",
                "spans": [
                  {
                    "byte_end": 32652,
                    "byte_start": 32640,
                    "column_end": 41,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\uniforms\\value.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 851,
                    "line_start": 851,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 29,
                        "text": "        UniformValue::Int64(*self as i64)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`u64` -> `u64`)\n   --> src\\uniforms\\value.rs:914:37\n    |\n914 |         UniformValue::UnsignedInt64(*self as u64)\n    |                                     ^^^^^^^^^^^^ help: try: `(*self)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 34230,
                        "byte_start": 34218,
                        "column_end": 49,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\uniforms\\value.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 914,
                        "line_start": 914,
                        "suggested_replacement": "(*self)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 37,
                            "text": "        UniformValue::UnsignedInt64(*self as u64)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`u64` -> `u64`)",
                "spans": [
                  {
                    "byte_end": 34230,
                    "byte_start": 34218,
                    "column_end": 49,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\uniforms\\value.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 914,
                    "line_start": 914,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 37,
                        "text": "        UniformValue::UnsignedInt64(*self as u64)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the following explicit lifetimes could be elided: 'a\n   --> src\\uniforms\\value.rs:975:6\n    |\n975 | impl<'a> AsUniformValue for (&'a str, ShaderStage) {\n    |      ^^                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n975 - impl<'a> AsUniformValue for (&'a str, ShaderStage) {\n975 + impl AsUniformValue for (&str, ShaderStage) {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 35792,
                        "byte_start": 35788,
                        "column_end": 9,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\uniforms\\value.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 975,
                        "line_start": 975,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 9,
                            "highlight_start": 5,
                            "text": "impl<'a> AsUniformValue for (&'a str, ShaderStage) {"
                          }
                        ]
                      },
                      {
                        "byte_end": 35817,
                        "byte_start": 35814,
                        "column_end": 34,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\uniforms\\value.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 975,
                        "line_start": 975,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 34,
                            "highlight_start": 31,
                            "text": "impl<'a> AsUniformValue for (&'a str, ShaderStage) {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 35791,
                    "byte_start": 35789,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\uniforms\\value.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 975,
                    "line_start": 975,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a> AsUniformValue for (&'a str, ShaderStage) {"
                      }
                    ]
                  },
                  {
                    "byte_end": 35816,
                    "byte_start": 35814,
                    "column_end": 33,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "src\\uniforms\\value.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 975,
                    "line_start": 975,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 31,
                        "text": "impl<'a> AsUniformValue for (&'a str, ShaderStage) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\uniforms\\mod.rs:235:17\n    |\n235 | /                 write!(\n236 | |                     fmt,\n237 | |                     \"{}, got: {:?}, expected: {:?}\",\n238 | |                     desc,\n239 | |                     obtained,\n240 | |                     expected,\n241 | |                 ),\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7257,
                        "byte_start": 7257,
                        "column_end": 23,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 237,
                        "line_start": 237,
                        "suggested_replacement": "desc",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 23,
                            "text": "                    \"{}, got: {:?}, expected: {:?}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 7266,
                        "byte_start": 7266,
                        "column_end": 32,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 237,
                        "line_start": 237,
                        "suggested_replacement": "obtained",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 32,
                            "text": "                    \"{}, got: {:?}, expected: {:?}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 7282,
                        "byte_start": 7282,
                        "column_end": 48,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 237,
                        "line_start": 237,
                        "suggested_replacement": "expected",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 48,
                            "text": "                    \"{}, got: {:?}, expected: {:?}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 7312,
                        "byte_start": 7286,
                        "column_end": 25,
                        "column_start": 52,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 238,
                        "line_start": 237,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 52,
                            "text": "                    \"{}, got: {:?}, expected: {:?}\","
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "                    desc,"
                          }
                        ]
                      },
                      {
                        "byte_end": 7342,
                        "byte_start": 7312,
                        "column_end": 29,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 239,
                        "line_start": 238,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 25,
                            "text": "                    desc,"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "                    obtained,"
                          }
                        ]
                      },
                      {
                        "byte_end": 7372,
                        "byte_start": 7342,
                        "column_end": 29,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 240,
                        "line_start": 239,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 29,
                            "text": "                    obtained,"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "                    expected,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 7391,
                    "byte_start": 7202,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\uniforms\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 241,
                    "line_start": 235,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 17,
                        "text": "                write!("
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                    fmt,"
                      },
                      {
                        "highlight_end": 53,
                        "highlight_start": 1,
                        "text": "                    \"{}, got: {:?}, expected: {:?}\","
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                    desc,"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                    obtained,"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                    expected,"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                ),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\uniforms\\mod.rs:243:17\n    |\n243 | /                 write!(\n244 | |                     fmt,\n245 | |                     \"{}, got: {:?}, expected: {:?}\",\n246 | |                     desc,\n247 | |                     obtained,\n248 | |                     expected,\n249 | |                 ),\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7525,
                        "byte_start": 7525,
                        "column_end": 23,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 245,
                        "line_start": 245,
                        "suggested_replacement": "desc",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 23,
                            "text": "                    \"{}, got: {:?}, expected: {:?}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 7534,
                        "byte_start": 7534,
                        "column_end": 32,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 245,
                        "line_start": 245,
                        "suggested_replacement": "obtained",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 32,
                            "text": "                    \"{}, got: {:?}, expected: {:?}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 7550,
                        "byte_start": 7550,
                        "column_end": 48,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 245,
                        "line_start": 245,
                        "suggested_replacement": "expected",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 48,
                            "text": "                    \"{}, got: {:?}, expected: {:?}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 7580,
                        "byte_start": 7554,
                        "column_end": 25,
                        "column_start": 52,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 246,
                        "line_start": 245,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 52,
                            "text": "                    \"{}, got: {:?}, expected: {:?}\","
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "                    desc,"
                          }
                        ]
                      },
                      {
                        "byte_end": 7610,
                        "byte_start": 7580,
                        "column_end": 29,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 247,
                        "line_start": 246,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 25,
                            "text": "                    desc,"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "                    obtained,"
                          }
                        ]
                      },
                      {
                        "byte_end": 7640,
                        "byte_start": 7610,
                        "column_end": 29,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 248,
                        "line_start": 247,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 29,
                            "text": "                    obtained,"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "                    expected,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 7659,
                    "byte_start": 7470,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\uniforms\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 249,
                    "line_start": 243,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 17,
                        "text": "                write!("
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                    fmt,"
                      },
                      {
                        "highlight_end": 53,
                        "highlight_start": 1,
                        "text": "                    \"{}, got: {:?}, expected: {:?}\","
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                    desc,"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                    obtained,"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                    expected,"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                ),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\uniforms\\mod.rs:251:17\n    |\n251 | /                 write!(\n252 | |                     fmt,\n253 | |                     \"{}, got: {}, expected: {}\",\n254 | |                     desc,\n255 | |                     obtained,\n256 | |                     expected,\n257 | |                 ),\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7793,
                        "byte_start": 7793,
                        "column_end": 23,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 253,
                        "line_start": 253,
                        "suggested_replacement": "desc",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 23,
                            "text": "                    \"{}, got: {}, expected: {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 7802,
                        "byte_start": 7802,
                        "column_end": 32,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 253,
                        "line_start": 253,
                        "suggested_replacement": "obtained",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 32,
                            "text": "                    \"{}, got: {}, expected: {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 7816,
                        "byte_start": 7816,
                        "column_end": 46,
                        "column_start": 46,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 253,
                        "line_start": 253,
                        "suggested_replacement": "expected",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 46,
                            "text": "                    \"{}, got: {}, expected: {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 7844,
                        "byte_start": 7818,
                        "column_end": 25,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 254,
                        "line_start": 253,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 48,
                            "text": "                    \"{}, got: {}, expected: {}\","
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "                    desc,"
                          }
                        ]
                      },
                      {
                        "byte_end": 7874,
                        "byte_start": 7844,
                        "column_end": 29,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 255,
                        "line_start": 254,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 25,
                            "text": "                    desc,"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "                    obtained,"
                          }
                        ]
                      },
                      {
                        "byte_end": 7904,
                        "byte_start": 7874,
                        "column_end": 29,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 256,
                        "line_start": 255,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 29,
                            "text": "                    obtained,"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "                    expected,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 7923,
                    "byte_start": 7738,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\uniforms\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 257,
                    "line_start": 251,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 17,
                        "text": "                write!("
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                    fmt,"
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "                    \"{}, got: {}, expected: {}\","
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                    desc,"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                    obtained,"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                    expected,"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                ),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\uniforms\\mod.rs:259:17\n    |\n259 | /                 write!(\n260 | |                     fmt,\n261 | |                     \"{}, {}: {}\",\n262 | |                     desc,\n263 | |                     member,\n264 | |                     err,\n265 | |                 ),\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8050,
                        "byte_start": 8050,
                        "column_end": 23,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 261,
                        "line_start": 261,
                        "suggested_replacement": "desc",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 23,
                            "text": "                    \"{}, {}: {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 8054,
                        "byte_start": 8054,
                        "column_end": 27,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 261,
                        "line_start": 261,
                        "suggested_replacement": "member",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 27,
                            "text": "                    \"{}, {}: {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 8058,
                        "byte_start": 8058,
                        "column_end": 31,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 261,
                        "line_start": 261,
                        "suggested_replacement": "err",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 31,
                            "highlight_start": 31,
                            "text": "                    \"{}, {}: {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 8086,
                        "byte_start": 8060,
                        "column_end": 25,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 262,
                        "line_start": 261,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 34,
                            "highlight_start": 33,
                            "text": "                    \"{}, {}: {}\","
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "                    desc,"
                          }
                        ]
                      },
                      {
                        "byte_end": 8114,
                        "byte_start": 8086,
                        "column_end": 27,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 263,
                        "line_start": 262,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 25,
                            "text": "                    desc,"
                          },
                          {
                            "highlight_end": 27,
                            "highlight_start": 1,
                            "text": "                    member,"
                          }
                        ]
                      },
                      {
                        "byte_end": 8139,
                        "byte_start": 8114,
                        "column_end": 24,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 264,
                        "line_start": 263,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 27,
                            "text": "                    member,"
                          },
                          {
                            "highlight_end": 24,
                            "highlight_start": 1,
                            "text": "                    err,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 8158,
                    "byte_start": 7995,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\uniforms\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 265,
                    "line_start": 259,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 17,
                        "text": "                write!("
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                    fmt,"
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "                    \"{}, {}: {}\","
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                    desc,"
                      },
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "                    member,"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                    err,"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                ),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\uniforms\\mod.rs:267:17\n    |\n267 | /                 write!(\n268 | |                     fmt,\n269 | |                     \"{}: {}\",\n270 | |                     desc,\n271 | |                     name,\n272 | |                 ),\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8272,
                        "byte_start": 8272,
                        "column_end": 23,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 269,
                        "line_start": 269,
                        "suggested_replacement": "desc",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 23,
                            "text": "                    \"{}: {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 8276,
                        "byte_start": 8276,
                        "column_end": 27,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 269,
                        "line_start": 269,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 27,
                            "text": "                    \"{}: {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 8304,
                        "byte_start": 8278,
                        "column_end": 25,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 270,
                        "line_start": 269,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 29,
                            "text": "                    \"{}: {}\","
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "                    desc,"
                          }
                        ]
                      },
                      {
                        "byte_end": 8330,
                        "byte_start": 8304,
                        "column_end": 25,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 271,
                        "line_start": 270,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 25,
                            "text": "                    desc,"
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "                    name,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 8349,
                    "byte_start": 8217,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\uniforms\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 272,
                    "line_start": 267,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 17,
                        "text": "                write!("
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                    fmt,"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                    \"{}: {}\","
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                    desc,"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                    name,"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                ),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the following explicit lifetimes could be elided: 'a\n   --> src\\uniforms\\mod.rs:286:6\n    |\n286 | impl<'a, T: ?Sized> AsUniformValue for &'a Buffer<T> where T: UniformBlock + BufferContent {\n    |      ^^                                 ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n286 - impl<'a, T: ?Sized> AsUniformValue for &'a Buffer<T> where T: UniformBlock + BufferContent {\n286 + impl<T: ?Sized> AsUniformValue for &Buffer<T> where T: UniformBlock + BufferContent {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8636,
                        "byte_start": 8632,
                        "column_end": 10,
                        "column_start": 6,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 286,
                        "line_start": 286,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 10,
                            "highlight_start": 6,
                            "text": "impl<'a, T: ?Sized> AsUniformValue for &'a Buffer<T> where T: UniformBlock + BufferContent {"
                          }
                        ]
                      },
                      {
                        "byte_end": 8670,
                        "byte_start": 8667,
                        "column_end": 44,
                        "column_start": 41,
                        "expansion": null,
                        "file_name": "src\\uniforms\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 286,
                        "line_start": 286,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 41,
                            "text": "impl<'a, T: ?Sized> AsUniformValue for &'a Buffer<T> where T: UniformBlock + BufferContent {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 8634,
                    "byte_start": 8632,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\uniforms\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 286,
                    "line_start": 286,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a, T: ?Sized> AsUniformValue for &'a Buffer<T> where T: UniformBlock + BufferContent {"
                      }
                    ]
                  },
                  {
                    "byte_end": 8669,
                    "byte_start": 8667,
                    "column_end": 43,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "src\\uniforms\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 286,
                    "line_start": 286,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 43,
                        "highlight_start": 41,
                        "text": "impl<'a, T: ?Sized> AsUniformValue for &'a Buffer<T> where T: UniformBlock + BufferContent {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `match` expression can be replaced with `?`\n   --> src\\vertex\\buffer.rs:299:21\n    |\n299 |           let slice = match self.buffer.slice(range) {\n    |  _____________________^\n300 | |             None => return None,\n301 | |             Some(s) => s\n302 | |         };\n    | |_________^ help: try instead: `self.buffer.slice(range)?`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n    = note: `#[warn(clippy::question_mark)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::question_mark)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10145,
                        "byte_start": 10045,
                        "column_end": 10,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\vertex\\buffer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 302,
                        "line_start": 299,
                        "suggested_replacement": "self.buffer.slice(range)?",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 21,
                            "text": "        let slice = match self.buffer.slice(range) {"
                          },
                          {
                            "highlight_end": 33,
                            "highlight_start": 1,
                            "text": "            None => return None,"
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "            Some(s) => s"
                          },
                          {
                            "highlight_end": 10,
                            "highlight_start": 1,
                            "text": "        };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::question_mark",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `match` expression can be replaced with `?`",
                "spans": [
                  {
                    "byte_end": 10145,
                    "byte_start": 10045,
                    "column_end": 10,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 302,
                    "line_start": 299,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 53,
                        "highlight_start": 21,
                        "text": "        let slice = match self.buffer.slice(range) {"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "            None => return None,"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "            Some(s) => s"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: deref on an immutable reference\n   --> src\\vertex\\buffer.rs:385:31\n    |\n385 |         let b: &Buffer<[T]> = &*b;\n    |                               ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_deref_ref\nhelp: if you would like to reborrow, try removing `&*`\n    |\n385 -         let b: &Buffer<[T]> = &*b;\n385 +         let b: &Buffer<[T]> = b;\n    |\nhelp: if you would like to deref, try using `&**`\n    |\n385 |         let b: &Buffer<[T]> = &**b;\n    |                                 +\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_deref_ref",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you would like to reborrow, try removing `&*`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12707,
                        "byte_start": 12704,
                        "column_end": 34,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\vertex\\buffer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 385,
                        "line_start": 385,
                        "suggested_replacement": "b",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 34,
                            "highlight_start": 31,
                            "text": "        let b: &Buffer<[T]> = &*b;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you would like to deref, try using `&**`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12707,
                        "byte_start": 12704,
                        "column_end": 34,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\vertex\\buffer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 385,
                        "line_start": 385,
                        "suggested_replacement": "&**b",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 34,
                            "highlight_start": 31,
                            "text": "        let b: &Buffer<[T]> = &*b;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::borrow_deref_ref",
                  "explanation": null
                },
                "level": "warning",
                "message": "deref on an immutable reference",
                "spans": [
                  {
                    "byte_end": 12707,
                    "byte_start": 12704,
                    "column_end": 34,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "src\\vertex\\buffer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 385,
                    "line_start": 385,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 31,
                        "text": "        let b: &Buffer<[T]> = &*b;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\vertex\\format.rs:237:34\n    |\n237 |             AttributeType::I8 => 1 * mem::size_of::<i8>(),\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `mem::size_of::<i8>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8100,
                        "byte_start": 8076,
                        "column_end": 58,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\vertex\\format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 237,
                        "line_start": 237,
                        "suggested_replacement": "mem::size_of::<i8>()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 34,
                            "text": "            AttributeType::I8 => 1 * mem::size_of::<i8>(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 8100,
                    "byte_start": 8076,
                    "column_end": 58,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\vertex\\format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 237,
                    "line_start": 237,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 34,
                        "text": "            AttributeType::I8 => 1 * mem::size_of::<i8>(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\vertex\\format.rs:241:34\n    |\n241 |             AttributeType::U8 => 1 * mem::size_of::<u8>(),\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `mem::size_of::<u8>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8348,
                        "byte_start": 8324,
                        "column_end": 58,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\vertex\\format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 241,
                        "line_start": 241,
                        "suggested_replacement": "mem::size_of::<u8>()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 34,
                            "text": "            AttributeType::U8 => 1 * mem::size_of::<u8>(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 8348,
                    "byte_start": 8324,
                    "column_end": 58,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\vertex\\format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 241,
                    "line_start": 241,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 34,
                        "text": "            AttributeType::U8 => 1 * mem::size_of::<u8>(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\vertex\\format.rs:245:35\n    |\n245 |             AttributeType::I16 => 1 * mem::size_of::<i16>(),\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `mem::size_of::<i16>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8598,
                        "byte_start": 8573,
                        "column_end": 60,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\vertex\\format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 245,
                        "line_start": 245,
                        "suggested_replacement": "mem::size_of::<i16>()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 60,
                            "highlight_start": 35,
                            "text": "            AttributeType::I16 => 1 * mem::size_of::<i16>(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 8598,
                    "byte_start": 8573,
                    "column_end": 60,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\vertex\\format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 245,
                    "line_start": 245,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 35,
                        "text": "            AttributeType::I16 => 1 * mem::size_of::<i16>(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\vertex\\format.rs:249:35\n    |\n249 |             AttributeType::U16 => 1 * mem::size_of::<u16>(),\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `mem::size_of::<u16>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8860,
                        "byte_start": 8835,
                        "column_end": 60,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\vertex\\format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 249,
                        "line_start": 249,
                        "suggested_replacement": "mem::size_of::<u16>()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 60,
                            "highlight_start": 35,
                            "text": "            AttributeType::U16 => 1 * mem::size_of::<u16>(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 8860,
                    "byte_start": 8835,
                    "column_end": 60,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\vertex\\format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 249,
                    "line_start": 249,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 35,
                        "text": "            AttributeType::U16 => 1 * mem::size_of::<u16>(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\vertex\\format.rs:253:35\n    |\n253 |             AttributeType::I32 => 1 * mem::size_of::<i32>(),\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `mem::size_of::<i32>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9122,
                        "byte_start": 9097,
                        "column_end": 60,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\vertex\\format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 253,
                        "line_start": 253,
                        "suggested_replacement": "mem::size_of::<i32>()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 60,
                            "highlight_start": 35,
                            "text": "            AttributeType::I32 => 1 * mem::size_of::<i32>(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 9122,
                    "byte_start": 9097,
                    "column_end": 60,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\vertex\\format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 253,
                    "line_start": 253,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 35,
                        "text": "            AttributeType::I32 => 1 * mem::size_of::<i32>(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\vertex\\format.rs:257:35\n    |\n257 |             AttributeType::U32 => 1 * mem::size_of::<u32>(),\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `mem::size_of::<u32>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9384,
                        "byte_start": 9359,
                        "column_end": 60,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\vertex\\format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 257,
                        "line_start": 257,
                        "suggested_replacement": "mem::size_of::<u32>()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 60,
                            "highlight_start": 35,
                            "text": "            AttributeType::U32 => 1 * mem::size_of::<u32>(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 9384,
                    "byte_start": 9359,
                    "column_end": 60,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\vertex\\format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 257,
                    "line_start": 257,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 35,
                        "text": "            AttributeType::U32 => 1 * mem::size_of::<u32>(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\vertex\\format.rs:261:35\n    |\n261 |             AttributeType::I64 => 1 * mem::size_of::<i64>(),\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `mem::size_of::<i64>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9646,
                        "byte_start": 9621,
                        "column_end": 60,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\vertex\\format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 261,
                        "line_start": 261,
                        "suggested_replacement": "mem::size_of::<i64>()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 60,
                            "highlight_start": 35,
                            "text": "            AttributeType::I64 => 1 * mem::size_of::<i64>(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 9646,
                    "byte_start": 9621,
                    "column_end": 60,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\vertex\\format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 261,
                    "line_start": 261,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 35,
                        "text": "            AttributeType::I64 => 1 * mem::size_of::<i64>(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\vertex\\format.rs:265:35\n    |\n265 |             AttributeType::U64 => 1 * mem::size_of::<u64>(),\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `mem::size_of::<u64>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9908,
                        "byte_start": 9883,
                        "column_end": 60,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\vertex\\format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 265,
                        "line_start": 265,
                        "suggested_replacement": "mem::size_of::<u64>()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 60,
                            "highlight_start": 35,
                            "text": "            AttributeType::U64 => 1 * mem::size_of::<u64>(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 9908,
                    "byte_start": 9883,
                    "column_end": 60,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\vertex\\format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 265,
                    "line_start": 265,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 35,
                        "text": "            AttributeType::U64 => 1 * mem::size_of::<u64>(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\vertex\\format.rs:269:35\n    |\n269 |             AttributeType::F16 => 1 * 2,\n    |                                   ^^^^^ help: consider reducing it to: `2`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10150,
                        "byte_start": 10145,
                        "column_end": 40,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\vertex\\format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 269,
                        "line_start": 269,
                        "suggested_replacement": "2",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 35,
                            "text": "            AttributeType::F16 => 1 * 2,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 10150,
                    "byte_start": 10145,
                    "column_end": 40,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\vertex\\format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 269,
                    "line_start": 269,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 35,
                        "text": "            AttributeType::F16 => 1 * 2,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\vertex\\format.rs:282:35\n    |\n282 |             AttributeType::F32 => 1 * mem::size_of::<f32>(),\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `mem::size_of::<f32>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10760,
                        "byte_start": 10735,
                        "column_end": 60,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\vertex\\format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 282,
                        "line_start": 282,
                        "suggested_replacement": "mem::size_of::<f32>()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 60,
                            "highlight_start": 35,
                            "text": "            AttributeType::F32 => 1 * mem::size_of::<f32>(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 10760,
                    "byte_start": 10735,
                    "column_end": 60,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\vertex\\format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 282,
                    "line_start": 282,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 35,
                        "text": "            AttributeType::F32 => 1 * mem::size_of::<f32>(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\vertex\\format.rs:295:35\n    |\n295 |             AttributeType::F64 => 1 * mem::size_of::<f64>(),\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `mem::size_of::<f64>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11610,
                        "byte_start": 11585,
                        "column_end": 60,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\vertex\\format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 295,
                        "line_start": 295,
                        "suggested_replacement": "mem::size_of::<f64>()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 60,
                            "highlight_start": 35,
                            "text": "            AttributeType::F64 => 1 * mem::size_of::<f64>(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 11610,
                    "byte_start": 11585,
                    "column_end": 60,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\vertex\\format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 295,
                    "line_start": 295,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 35,
                        "text": "            AttributeType::F64 => 1 * mem::size_of::<f64>(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: dereferencing a tuple pattern where every element takes a reference\n   --> src\\vertex\\mod.rs:296:13\n    |\n296 |         for &(_, _, _, ref ty, _) in format.iter() {\n    |             ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrowed_reference\n    = note: `#[warn(clippy::needless_borrowed_reference)]` on by default\nhelp: try removing the `&` and `ref` parts\n    |\n296 -         for &(_, _, _, ref ty, _) in format.iter() {\n296 +         for (_, _, _, ty, _) in format.iter() {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrowed_reference",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_borrowed_reference)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try removing the `&` and `ref` parts",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10309,
                        "byte_start": 10305,
                        "column_end": 28,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\vertex\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 296,
                        "line_start": 296,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 24,
                            "text": "        for &(_, _, _, ref ty, _) in format.iter() {"
                          }
                        ]
                      },
                      {
                        "byte_end": 10295,
                        "byte_start": 10294,
                        "column_end": 14,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\vertex\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 296,
                        "line_start": 296,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 14,
                            "highlight_start": 13,
                            "text": "        for &(_, _, _, ref ty, _) in format.iter() {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrowed_reference",
                  "explanation": null
                },
                "level": "warning",
                "message": "dereferencing a tuple pattern where every element takes a reference",
                "spans": [
                  {
                    "byte_end": 10315,
                    "byte_start": 10294,
                    "column_end": 34,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\vertex\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 296,
                    "line_start": 296,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 13,
                        "text": "        for &(_, _, _, ref ty, _) in format.iter() {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src\\semaphore.rs:67:1\n   |\n67 | impl Into<crate::gl::types::GLenum> for TextureLayout {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<semaphore::TextureLayout>`\n   |\n67 ~ impl From<TextureLayout> for crate::gl::types::GLenum {\n68 ~     fn from(val: TextureLayout) -> Self {\n69 ~         match val {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::from_over_into)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace the `Into` implementation with `From<semaphore::TextureLayout>`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2355,
                        "byte_start": 2351,
                        "column_end": 10,
                        "column_start": 6,
                        "expansion": null,
                        "file_name": "src\\semaphore.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 67,
                        "line_start": 67,
                        "suggested_replacement": "From",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 10,
                            "highlight_start": 6,
                            "text": "impl Into<crate::gl::types::GLenum> for TextureLayout {"
                          }
                        ]
                      },
                      {
                        "byte_end": 2380,
                        "byte_start": 2356,
                        "column_end": 35,
                        "column_start": 11,
                        "expansion": null,
                        "file_name": "src\\semaphore.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 67,
                        "line_start": 67,
                        "suggested_replacement": "TextureLayout",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 11,
                            "text": "impl Into<crate::gl::types::GLenum> for TextureLayout {"
                          }
                        ]
                      },
                      {
                        "byte_end": 2399,
                        "byte_start": 2386,
                        "column_end": 54,
                        "column_start": 41,
                        "expansion": null,
                        "file_name": "src\\semaphore.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 67,
                        "line_start": 67,
                        "suggested_replacement": "crate::gl::types::GLenum",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 41,
                            "text": "impl Into<crate::gl::types::GLenum> for TextureLayout {"
                          }
                        ]
                      },
                      {
                        "byte_end": 2413,
                        "byte_start": 2409,
                        "column_end": 12,
                        "column_start": 8,
                        "expansion": null,
                        "file_name": "src\\semaphore.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 68,
                        "line_start": 68,
                        "suggested_replacement": "from",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 12,
                            "highlight_start": 8,
                            "text": "    fn into(self) -> crate::gl::types::GLenum {"
                          }
                        ]
                      },
                      {
                        "byte_end": 2418,
                        "byte_start": 2414,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\semaphore.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 68,
                        "line_start": 68,
                        "suggested_replacement": "val: TextureLayout",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "    fn into(self) -> crate::gl::types::GLenum {"
                          }
                        ]
                      },
                      {
                        "byte_end": 2447,
                        "byte_start": 2423,
                        "column_end": 46,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\semaphore.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 68,
                        "line_start": 68,
                        "suggested_replacement": "Self",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 22,
                            "text": "    fn into(self) -> crate::gl::types::GLenum {"
                          }
                        ]
                      },
                      {
                        "byte_end": 2468,
                        "byte_start": 2464,
                        "column_end": 19,
                        "column_start": 15,
                        "expansion": null,
                        "file_name": "src\\semaphore.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 69,
                        "line_start": 69,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 19,
                            "highlight_start": 15,
                            "text": "        match self {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::from_over_into",
                  "explanation": null
                },
                "level": "warning",
                "message": "an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true",
                "spans": [
                  {
                    "byte_end": 2399,
                    "byte_start": 2346,
                    "column_end": 54,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\semaphore.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 67,
                    "line_start": 67,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 1,
                        "text": "impl Into<crate::gl::types::GLenum> for TextureLayout {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\texture\\buffer_texture.rs:279:30\n    |\n279 |                           -> Result<BufferTexture<T>, (TextureCreationError, Buffer<[T]>)>\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `Err`-variant is at least 608 bytes\n    |\n    = help: try reducing the size of `(texture::buffer_texture::TextureCreationError, buffer::view::Buffer<[T]>)`, for example by boxing large elements or replacing it with `Box<(texture::buffer_texture::TextureCreationError, buffer::view::Buffer<[T]>)>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n    = note: `#[warn(clippy::result_large_err)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `(texture::buffer_texture::TextureCreationError, buffer::view::Buffer<[T]>)`, for example by boxing large elements or replacing it with `Box<(texture::buffer_texture::TextureCreationError, buffer::view::Buffer<[T]>)>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::result_large_err)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 9915,
                    "byte_start": 9854,
                    "column_end": 91,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\texture\\buffer_texture.rs",
                    "is_primary": true,
                    "label": "the `Err`-variant is at least 608 bytes",
                    "line_end": 279,
                    "line_start": 279,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 91,
                        "highlight_start": 30,
                        "text": "                          -> Result<BufferTexture<T>, (TextureCreationError, Buffer<[T]>)>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: called `unwrap` on `storage_internal_format` after checking its variant with `is_some`\n   --> src\\texture\\any.rs:288:38\n    |\n286 |             if storage_internal_format.is_some() && (ctxt.version >= &Version(Api::Gl, 4, 2) || ctxt.extensions.gl_arb_texture_storage) {\n    |                --------------------------------- the check is happening here\n287 |                 ctxt.gl.TexStorage3D(bind_point, texture_levels,\n288 |                                      storage_internal_format.unwrap() as gl::types::GLenum,\n    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try using `if let` or `match`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\n    = note: `#[warn(clippy::unnecessary_unwrap)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using `if let` or `match`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::unnecessary_unwrap)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_unwrap",
                  "explanation": null
                },
                "level": "warning",
                "message": "called `unwrap` on `storage_internal_format` after checking its variant with `is_some`",
                "spans": [
                  {
                    "byte_end": 11837,
                    "byte_start": 11804,
                    "column_end": 49,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\texture\\any.rs",
                    "is_primary": false,
                    "label": "the check is happening here",
                    "line_end": 286,
                    "line_start": 286,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 16,
                        "text": "            if storage_internal_format.is_some() && (ctxt.version >= &Version(Api::Gl, 4, 2) || ctxt.extensions.gl_arb_texture_storage) {"
                      }
                    ]
                  },
                  {
                    "byte_end": 12061,
                    "byte_start": 12029,
                    "column_end": 70,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\texture\\any.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 288,
                    "line_start": 288,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 70,
                        "highlight_start": 38,
                        "text": "                                     storage_internal_format.unwrap() as gl::types::GLenum,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: called `unwrap` on `storage_internal_format` after checking its variant with `is_some`\n   --> src\\texture\\any.rs:328:38\n    |\n326 |             if storage_internal_format.is_some() && (ctxt.version >= &Version(Api::Gl, 4, 2) || ctxt.extensions.gl_arb_texture_storage) {\n    |                --------------------------------- the check is happening here\n327 |                 ctxt.gl.TexStorage2D(bind_point, texture_levels,\n328 |                                      storage_internal_format.unwrap() as gl::types::GLenum,\n    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try using `if let` or `match`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using `if let` or `match`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_unwrap",
                  "explanation": null
                },
                "level": "warning",
                "message": "called `unwrap` on `storage_internal_format` after checking its variant with `is_some`",
                "spans": [
                  {
                    "byte_end": 13836,
                    "byte_start": 13803,
                    "column_end": 49,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\texture\\any.rs",
                    "is_primary": false,
                    "label": "the check is happening here",
                    "line_end": 326,
                    "line_start": 326,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 16,
                        "text": "            if storage_internal_format.is_some() && (ctxt.version >= &Version(Api::Gl, 4, 2) || ctxt.extensions.gl_arb_texture_storage) {"
                      }
                    ]
                  },
                  {
                    "byte_end": 14060,
                    "byte_start": 14028,
                    "column_end": 70,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\texture\\any.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 328,
                    "line_start": 328,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 70,
                        "highlight_start": 38,
                        "text": "                                     storage_internal_format.unwrap() as gl::types::GLenum,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: called `unwrap` on `storage_internal_format` after checking its variant with `is_some`\n   --> src\\texture\\any.rs:366:49\n    |\n363 |             if storage_internal_format.is_some() && (ctxt.version >= &Version(Api::Gl, 4, 2) || ctxt.extensions.gl_arb_texture_storage) {\n    |                --------------------------------- the check is happening here\n...\n366 |                                                 storage_internal_format.unwrap() as gl::types::GLenum,\n    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try using `if let` or `match`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using `if let` or `match`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_unwrap",
                  "explanation": null
                },
                "level": "warning",
                "message": "called `unwrap` on `storage_internal_format` after checking its variant with `is_some`",
                "spans": [
                  {
                    "byte_end": 15598,
                    "byte_start": 15565,
                    "column_end": 49,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\texture\\any.rs",
                    "is_primary": false,
                    "label": "the check is happening here",
                    "line_end": 363,
                    "line_start": 363,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 16,
                        "text": "            if storage_internal_format.is_some() && (ctxt.version >= &Version(Api::Gl, 4, 2) || ctxt.extensions.gl_arb_texture_storage) {"
                      }
                    ]
                  },
                  {
                    "byte_end": 15932,
                    "byte_start": 15900,
                    "column_end": 81,
                    "column_start": 49,
                    "expansion": null,
                    "file_name": "src\\texture\\any.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 366,
                    "line_start": 366,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 81,
                        "highlight_start": 49,
                        "text": "                                                storage_internal_format.unwrap() as gl::types::GLenum,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: called `unwrap` on `storage_internal_format` after checking its variant with `is_some`\n   --> src\\texture\\any.rs:395:49\n    |\n392 |             if storage_internal_format.is_some() && (ctxt.version >= &Version(Api::Gl, 4, 2) || ctxt.extensions.gl_arb_texture_storage) {\n    |                --------------------------------- the check is happening here\n...\n395 |                                                 storage_internal_format.unwrap() as gl::types::GLenum,\n    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try using `if let` or `match`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using `if let` or `match`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_unwrap",
                  "explanation": null
                },
                "level": "warning",
                "message": "called `unwrap` on `storage_internal_format` after checking its variant with `is_some`",
                "spans": [
                  {
                    "byte_end": 16946,
                    "byte_start": 16913,
                    "column_end": 49,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\texture\\any.rs",
                    "is_primary": false,
                    "label": "the check is happening here",
                    "line_end": 392,
                    "line_start": 392,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 16,
                        "text": "            if storage_internal_format.is_some() && (ctxt.version >= &Version(Api::Gl, 4, 2) || ctxt.extensions.gl_arb_texture_storage) {"
                      }
                    ]
                  },
                  {
                    "byte_end": 17286,
                    "byte_start": 17254,
                    "column_end": 81,
                    "column_start": 49,
                    "expansion": null,
                    "file_name": "src\\texture\\any.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 395,
                    "line_start": 395,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 81,
                        "highlight_start": 49,
                        "text": "                                                storage_internal_format.unwrap() as gl::types::GLenum,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: called `unwrap` on `storage_internal_format` after checking its variant with `is_some`\n   --> src\\texture\\any.rs:420:38\n    |\n418 |             if storage_internal_format.is_some() && (ctxt.version >= &Version(Api::Gl, 4, 2) || ctxt.extensions.gl_arb_texture_storage) {\n    |                --------------------------------- the check is happening here\n419 |                 ctxt.gl.TexStorage1D(bind_point, texture_levels,\n420 |                                      storage_internal_format.unwrap() as gl::types::GLenum,\n    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try using `if let` or `match`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using `if let` or `match`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_unwrap",
                  "explanation": null
                },
                "level": "warning",
                "message": "called `unwrap` on `storage_internal_format` after checking its variant with `is_some`",
                "spans": [
                  {
                    "byte_end": 18362,
                    "byte_start": 18329,
                    "column_end": 49,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\texture\\any.rs",
                    "is_primary": false,
                    "label": "the check is happening here",
                    "line_end": 418,
                    "line_start": 418,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 16,
                        "text": "            if storage_internal_format.is_some() && (ctxt.version >= &Version(Api::Gl, 4, 2) || ctxt.extensions.gl_arb_texture_storage) {"
                      }
                    ]
                  },
                  {
                    "byte_end": 18586,
                    "byte_start": 18554,
                    "column_end": 70,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\texture\\any.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 420,
                    "line_start": 420,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 70,
                        "highlight_start": 38,
                        "text": "                                     storage_internal_format.unwrap() as gl::types::GLenum,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src\\texture\\any.rs:307:54\n    |\n307 | ...                   height, depth, 0, client_format as u32, client_type,\n    |                                         ^^^^^^^^^^^^^^^^^^^^ help: try: `client_format`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 13191,
                        "byte_start": 13171,
                        "column_end": 74,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\texture\\any.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 307,
                        "line_start": 307,
                        "suggested_replacement": "client_format",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 74,
                            "highlight_start": 54,
                            "text": "                                   height, depth, 0, client_format as u32, client_type,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`u32` -> `u32`)",
                "spans": [
                  {
                    "byte_end": 13191,
                    "byte_start": 13171,
                    "column_end": 74,
                    "column_start": 54,
                    "expansion": null,
                    "file_name": "src\\texture\\any.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 307,
                    "line_start": 307,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 74,
                        "highlight_start": 54,
                        "text": "                                   height, depth, 0, client_format as u32, client_type,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src\\texture\\any.rs:347:47\n    |\n347 | ...                   height, 0, client_format as u32, client_type, data_raw);\n    |                                  ^^^^^^^^^^^^^^^^^^^^ help: try: `client_format`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 15149,
                        "byte_start": 15129,
                        "column_end": 67,
                        "column_start": 47,
                        "expansion": null,
                        "file_name": "src\\texture\\any.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 347,
                        "line_start": 347,
                        "suggested_replacement": "client_format",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 67,
                            "highlight_start": 47,
                            "text": "                                   height, 0, client_format as u32, client_type, data_raw);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`u32` -> `u32`)",
                "spans": [
                  {
                    "byte_end": 15149,
                    "byte_start": 15129,
                    "column_end": 67,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\texture\\any.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 347,
                    "line_start": 347,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 67,
                        "highlight_start": 47,
                        "text": "                                   height, 0, client_format as u32, client_type, data_raw);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src\\texture\\any.rs:439:39\n    |\n439 | ...                   0, client_format as u32, client_type, data_raw);\n    |                          ^^^^^^^^^^^^^^^^^^^^ help: try: `client_format`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 19629,
                        "byte_start": 19609,
                        "column_end": 59,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\texture\\any.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 439,
                        "line_start": 439,
                        "suggested_replacement": "client_format",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 39,
                            "text": "                                   0, client_format as u32, client_type, data_raw);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`u32` -> `u32`)",
                "spans": [
                  {
                    "byte_end": 19629,
                    "byte_start": 19609,
                    "column_end": 59,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "src\\texture\\any.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 439,
                    "line_start": 439,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 39,
                        "text": "                                   0, client_format as u32, client_type, data_raw);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: calling `set_len()` immediately after reserving a buffer creates uninitialized values\n    --> src\\texture\\any.rs:1413:25\n     |\n1413 |                         let mut buf = Vec::with_capacity(buffer_size as usize);\n     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n1414 |                         buf.set_len(buffer_size as usize);\n     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: initialize the buffer or wrap the content in `MaybeUninit`\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninit_vec\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "initialize the buffer or wrap the content in `MaybeUninit`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninit_vec",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::uninit_vec",
                  "explanation": null
                },
                "level": "error",
                "message": "calling `set_len()` immediately after reserving a buffer creates uninitialized values",
                "spans": [
                  {
                    "byte_end": 59955,
                    "byte_start": 59900,
                    "column_end": 80,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\texture\\any.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1413,
                    "line_start": 1413,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 80,
                        "highlight_start": 25,
                        "text": "                        let mut buf = Vec::with_capacity(buffer_size as usize);"
                      }
                    ]
                  },
                  {
                    "byte_end": 60013,
                    "byte_start": 59980,
                    "column_end": 58,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\texture\\any.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1414,
                    "line_start": 1414,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 25,
                        "text": "                        buf.set_len(buffer_size as usize);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting raw pointers to the same type and constness is unnecessary (`*const u8` -> `*const u8`)\n    --> src\\texture\\any.rs:1419:35\n     |\n1419 |                         let ptr = buf.as_ptr() as *const u8;\n     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `buf.as_ptr()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 60194,
                        "byte_start": 60169,
                        "column_end": 60,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\texture\\any.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1419,
                        "line_start": 1419,
                        "suggested_replacement": "buf.as_ptr()",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 60,
                            "highlight_start": 35,
                            "text": "                        let ptr = buf.as_ptr() as *const u8;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting raw pointers to the same type and constness is unnecessary (`*const u8` -> `*const u8`)",
                "spans": [
                  {
                    "byte_end": 60194,
                    "byte_start": 60169,
                    "column_end": 60,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\texture\\any.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1419,
                    "line_start": 1419,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 35,
                        "text": "                        let ptr = buf.as_ptr() as *const u8;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\texture\\any.rs:1603:71\n     |\n1603 |         ops::read(&mut ctxt, &fbo::RegularAttachment::Texture(*self), &rect, &mut data, false)\n     |                                                                       ^^^^^ help: change this to: `rect`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 65636,
                        "byte_start": 65631,
                        "column_end": 76,
                        "column_start": 71,
                        "expansion": null,
                        "file_name": "src\\texture\\any.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1603,
                        "line_start": 1603,
                        "suggested_replacement": "rect",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 76,
                            "highlight_start": 71,
                            "text": "        ops::read(&mut ctxt, &fbo::RegularAttachment::Texture(*self), &rect, &mut data, false)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 65636,
                    "byte_start": 65631,
                    "column_end": 76,
                    "column_start": 71,
                    "expansion": null,
                    "file_name": "src\\texture\\any.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1603,
                    "line_start": 1603,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 76,
                        "highlight_start": 71,
                        "text": "        ops::read(&mut ctxt, &fbo::RegularAttachment::Texture(*self), &rect, &mut data, false)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\texture\\any.rs:1626:71\n     |\n1626 |         ops::read(&mut ctxt, &fbo::RegularAttachment::Texture(*self), &rect, dest, false)\n     |                                                                       ^^^^^ help: change this to: `rect`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 66530,
                        "byte_start": 66525,
                        "column_end": 76,
                        "column_start": 71,
                        "expansion": null,
                        "file_name": "src\\texture\\any.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1626,
                        "line_start": 1626,
                        "suggested_replacement": "rect",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 76,
                            "highlight_start": 71,
                            "text": "        ops::read(&mut ctxt, &fbo::RegularAttachment::Texture(*self), &rect, dest, false)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 66530,
                    "byte_start": 66525,
                    "column_end": 76,
                    "column_start": 71,
                    "expansion": null,
                    "file_name": "src\\texture\\any.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1626,
                    "line_start": 1626,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 76,
                        "highlight_start": 71,
                        "text": "        ops::read(&mut ctxt, &fbo::RegularAttachment::Texture(*self), &rect, dest, false)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src\\texture\\texture_import.rs:13:1\n   |\n13 | impl Into<crate::gl::types::GLenum> for ExternalTilingMode {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<texture::texture_import::ExternalTilingMode>`\n   |\n13 ~ impl From<ExternalTilingMode> for crate::gl::types::GLenum {\n14 ~     fn from(val: ExternalTilingMode) -> Self {\n15 ~         match val {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace the `Into` implementation with `From<texture::texture_import::ExternalTilingMode>`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 360,
                        "byte_start": 356,
                        "column_end": 10,
                        "column_start": 6,
                        "expansion": null,
                        "file_name": "src\\texture\\texture_import.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 13,
                        "line_start": 13,
                        "suggested_replacement": "From",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 10,
                            "highlight_start": 6,
                            "text": "impl Into<crate::gl::types::GLenum> for ExternalTilingMode {"
                          }
                        ]
                      },
                      {
                        "byte_end": 385,
                        "byte_start": 361,
                        "column_end": 35,
                        "column_start": 11,
                        "expansion": null,
                        "file_name": "src\\texture\\texture_import.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 13,
                        "line_start": 13,
                        "suggested_replacement": "ExternalTilingMode",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 11,
                            "text": "impl Into<crate::gl::types::GLenum> for ExternalTilingMode {"
                          }
                        ]
                      },
                      {
                        "byte_end": 409,
                        "byte_start": 391,
                        "column_end": 59,
                        "column_start": 41,
                        "expansion": null,
                        "file_name": "src\\texture\\texture_import.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 13,
                        "line_start": 13,
                        "suggested_replacement": "crate::gl::types::GLenum",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 41,
                            "text": "impl Into<crate::gl::types::GLenum> for ExternalTilingMode {"
                          }
                        ]
                      },
                      {
                        "byte_end": 423,
                        "byte_start": 419,
                        "column_end": 12,
                        "column_start": 8,
                        "expansion": null,
                        "file_name": "src\\texture\\texture_import.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "from",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 12,
                            "highlight_start": 8,
                            "text": "    fn into(self) -> crate::gl::types::GLenum {"
                          }
                        ]
                      },
                      {
                        "byte_end": 428,
                        "byte_start": 424,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\texture\\texture_import.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "val: ExternalTilingMode",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "    fn into(self) -> crate::gl::types::GLenum {"
                          }
                        ]
                      },
                      {
                        "byte_end": 457,
                        "byte_start": 433,
                        "column_end": 46,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\texture\\texture_import.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "Self",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 22,
                            "text": "    fn into(self) -> crate::gl::types::GLenum {"
                          }
                        ]
                      },
                      {
                        "byte_end": 478,
                        "byte_start": 474,
                        "column_end": 19,
                        "column_start": 15,
                        "expansion": null,
                        "file_name": "src\\texture\\texture_import.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 15,
                        "line_start": 15,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 19,
                            "highlight_start": 15,
                            "text": "        match self {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::from_over_into",
                  "explanation": null
                },
                "level": "warning",
                "message": "an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true",
                "spans": [
                  {
                    "byte_end": 409,
                    "byte_start": 351,
                    "column_end": 59,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\texture\\texture_import.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 13,
                    "line_start": 13,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 1,
                        "text": "impl Into<crate::gl::types::GLenum> for ExternalTilingMode {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\texture\\mod.rs:254:21\n    |\n254 |                     panic!(\"Too many mipmap levels, received {}, maximum for this texture dimension is {}.\", i, max);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n254 -                     panic!(\"Too many mipmap levels, received {}, maximum for this texture dimension is {}.\", i, max);\n254 +                     panic!(\"Too many mipmap levels, received {i}, maximum for this texture dimension is {max}.\");\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10387,
                        "byte_start": 10387,
                        "column_end": 63,
                        "column_start": 63,
                        "expansion": null,
                        "file_name": "src\\texture\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 254,
                        "line_start": 254,
                        "suggested_replacement": "i",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 63,
                            "highlight_start": 63,
                            "text": "                    panic!(\"Too many mipmap levels, received {}, maximum for this texture dimension is {}.\", i, max);"
                          }
                        ]
                      },
                      {
                        "byte_end": 10429,
                        "byte_start": 10429,
                        "column_end": 105,
                        "column_start": 105,
                        "expansion": null,
                        "file_name": "src\\texture\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 254,
                        "line_start": 254,
                        "suggested_replacement": "max",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 105,
                            "highlight_start": 105,
                            "text": "                    panic!(\"Too many mipmap levels, received {}, maximum for this texture dimension is {}.\", i, max);"
                          }
                        ]
                      },
                      {
                        "byte_end": 10435,
                        "byte_start": 10432,
                        "column_end": 111,
                        "column_start": 108,
                        "expansion": null,
                        "file_name": "src\\texture\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 254,
                        "line_start": 254,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 111,
                            "highlight_start": 108,
                            "text": "                    panic!(\"Too many mipmap levels, received {}, maximum for this texture dimension is {}.\", i, max);"
                          }
                        ]
                      },
                      {
                        "byte_end": 10440,
                        "byte_start": 10435,
                        "column_end": 116,
                        "column_start": 111,
                        "expansion": null,
                        "file_name": "src\\texture\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 254,
                        "line_start": 254,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 116,
                            "highlight_start": 111,
                            "text": "                    panic!(\"Too many mipmap levels, received {}, maximum for this texture dimension is {}.\", i, max);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 10441,
                    "byte_start": 10345,
                    "column_end": 117,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\texture\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 254,
                    "line_start": 254,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 117,
                        "highlight_start": 21,
                        "text": "                    panic!(\"Too many mipmap levels, received {}, maximum for this texture dimension is {}.\", i, max);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: accessing first element with `self.get(0)`\n   --> src\\texture\\mod.rs:559:21\n    |\n559 |         let width = self.get(0).map(|e| e.len()).unwrap_or(0) as u32;\n    |                     ^^^^^^^^^^^ help: try: `self.first()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#get_first\n    = note: `#[warn(clippy::get_first)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#get_first",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::get_first)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20100,
                        "byte_start": 20089,
                        "column_end": 32,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\texture\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 559,
                        "line_start": 559,
                        "suggested_replacement": "self.first()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 21,
                            "text": "        let width = self.get(0).map(|e| e.len()).unwrap_or(0) as u32;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::get_first",
                  "explanation": null
                },
                "level": "warning",
                "message": "accessing first element with `self.get(0)`",
                "spans": [
                  {
                    "byte_end": 20100,
                    "byte_start": 20089,
                    "column_end": 32,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\texture\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 559,
                    "line_start": 559,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 21,
                        "text": "        let width = self.get(0).map(|e| e.len()).unwrap_or(0) as u32;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: accessing first element with `self.get(0)`\n   --> src\\texture\\mod.rs:765:21\n    |\n765 |         let width = self.get(0).and_then(|e| e.iter().next()).map(|e| e.len()).unwrap_or(0)\n    |                     ^^^^^^^^^^^ help: try: `self.first()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#get_first\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#get_first",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 27304,
                        "byte_start": 27293,
                        "column_end": 32,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\texture\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 765,
                        "line_start": 765,
                        "suggested_replacement": "self.first()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 21,
                            "text": "        let width = self.get(0).and_then(|e| e.iter().next()).map(|e| e.len()).unwrap_or(0)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::get_first",
                  "explanation": null
                },
                "level": "warning",
                "message": "accessing first element with `self.get(0)`",
                "spans": [
                  {
                    "byte_end": 27304,
                    "byte_start": 27293,
                    "column_end": 32,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\texture\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 765,
                    "line_start": 765,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 21,
                        "text": "        let width = self.get(0).and_then(|e| e.iter().next()).map(|e| e.len()).unwrap_or(0)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: accessing first element with `self.get(0)`\n   --> src\\texture\\mod.rs:767:22\n    |\n767 |         let height = self.get(0).map(|e| e.len()).unwrap_or(0) as u32;\n    |                      ^^^^^^^^^^^ help: try: `self.first()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#get_first\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#get_first",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 27425,
                        "byte_start": 27414,
                        "column_end": 33,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\texture\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 767,
                        "line_start": 767,
                        "suggested_replacement": "self.first()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 22,
                            "text": "        let height = self.get(0).map(|e| e.len()).unwrap_or(0) as u32;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::get_first",
                  "explanation": null
                },
                "level": "warning",
                "message": "accessing first element with `self.get(0)`",
                "spans": [
                  {
                    "byte_end": 27425,
                    "byte_start": 27414,
                    "column_end": 33,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\texture\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 767,
                    "line_start": 767,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 22,
                        "text": "        let height = self.get(0).map(|e| e.len()).unwrap_or(0) as u32;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: called `ok().expect()` on a `Result` value\n   --> src\\context\\capabilities.rs:188:9\n    |\n188 | /         String::from_utf8(CStr::from_ptr(s as *const _).to_bytes().to_vec()).ok()\n189 | |                                     .expect(\"glGetString(GL_RENDERER) returned a non-UTF8 string\")\n    | |__________________________________________________________________________________________________^\n    |\n    = help: you can call `expect()` directly on the `Result`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ok_expect\n    = note: `#[warn(clippy::ok_expect)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "you can call `expect()` directly on the `Result`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ok_expect",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::ok_expect)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::ok_expect",
                  "explanation": null
                },
                "level": "warning",
                "message": "called `ok().expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 6839,
                    "byte_start": 6667,
                    "column_end": 99,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\context\\capabilities.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 189,
                    "line_start": 188,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 82,
                        "highlight_start": 9,
                        "text": "        String::from_utf8(CStr::from_ptr(s as *const _).to_bytes().to_vec()).ok()"
                      },
                      {
                        "highlight_end": 99,
                        "highlight_start": 1,
                        "text": "                                    .expect(\"glGetString(GL_RENDERER) returned a non-UTF8 string\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: called `ok().expect()` on a `Result` value\n   --> src\\context\\capabilities.rs:200:13\n    |\n200 | /             String::from_utf8(CStr::from_ptr(s as *const _).to_bytes().to_vec()).ok()\n201 | |                                         .expect(\"glGetString(GL_VERSION) returned a non-UTF8 string\")\n    | |_____________________________________________________________________________________________________^\n    |\n    = help: you can call `expect()` directly on the `Result`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ok_expect\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "you can call `expect()` directly on the `Result`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ok_expect",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::ok_expect",
                  "explanation": null
                },
                "level": "warning",
                "message": "called `ok().expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 7258,
                    "byte_start": 7083,
                    "column_end": 102,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\context\\capabilities.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 201,
                    "line_start": 200,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 86,
                        "highlight_start": 13,
                        "text": "            String::from_utf8(CStr::from_ptr(s as *const _).to_bytes().to_vec()).ok()"
                      },
                      {
                        "highlight_end": 102,
                        "highlight_start": 1,
                        "text": "                                        .expect(\"glGetString(GL_VERSION) returned a non-UTF8 string\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: called `ok().expect()` on a `Result` value\n   --> src\\context\\capabilities.rs:207:13\n    |\n207 | /             String::from_utf8(CStr::from_ptr(s as *const _).to_bytes().to_vec()).ok()\n208 | |                                         .expect(\"glGetString(GL_VENDOR) returned a non-UTF8 string\")\n    | |____________________________________________________________________________________________________^\n    |\n    = help: you can call `expect()` directly on the `Result`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ok_expect\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "you can call `expect()` directly on the `Result`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ok_expect",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::ok_expect",
                  "explanation": null
                },
                "level": "warning",
                "message": "called `ok().expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 7556,
                    "byte_start": 7382,
                    "column_end": 101,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\context\\capabilities.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 208,
                    "line_start": 207,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 86,
                        "highlight_start": 13,
                        "text": "            String::from_utf8(CStr::from_ptr(s as *const _).to_bytes().to_vec()).ok()"
                      },
                      {
                        "highlight_end": 101,
                        "highlight_start": 1,
                        "text": "                                        .expect(\"glGetString(GL_VENDOR) returned a non-UTF8 string\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\context\\mod.rs:553:44\n    |\n553 |             (Some(msg), Some(user_msg)) => panic!(\"{} : {}\", user_msg, msg),\n    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n553 -             (Some(msg), Some(user_msg)) => panic!(\"{} : {}\", user_msg, msg),\n553 +             (Some(msg), Some(user_msg)) => panic!(\"{user_msg} : {msg}\"),\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20840,
                        "byte_start": 20840,
                        "column_end": 53,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 553,
                        "line_start": 553,
                        "suggested_replacement": "user_msg",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 53,
                            "text": "            (Some(msg), Some(user_msg)) => panic!(\"{} : {}\", user_msg, msg),"
                          }
                        ]
                      },
                      {
                        "byte_end": 20845,
                        "byte_start": 20845,
                        "column_end": 58,
                        "column_start": 58,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 553,
                        "line_start": 553,
                        "suggested_replacement": "msg",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 58,
                            "text": "            (Some(msg), Some(user_msg)) => panic!(\"{} : {}\", user_msg, msg),"
                          }
                        ]
                      },
                      {
                        "byte_end": 20857,
                        "byte_start": 20847,
                        "column_end": 70,
                        "column_start": 60,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 553,
                        "line_start": 553,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 70,
                            "highlight_start": 60,
                            "text": "            (Some(msg), Some(user_msg)) => panic!(\"{} : {}\", user_msg, msg),"
                          }
                        ]
                      },
                      {
                        "byte_end": 20862,
                        "byte_start": 20857,
                        "column_end": 75,
                        "column_start": 70,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 553,
                        "line_start": 553,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 75,
                            "highlight_start": 70,
                            "text": "            (Some(msg), Some(user_msg)) => panic!(\"{} : {}\", user_msg, msg),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 20863,
                    "byte_start": 20831,
                    "column_end": 76,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "src\\context\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 553,
                    "line_start": 553,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 76,
                        "highlight_start": 44,
                        "text": "            (Some(msg), Some(user_msg)) => panic!(\"{} : {}\", user_msg, msg),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this returns a `Result<_, ()>`\n   --> src\\context\\mod.rs:600:5\n    |\n600 |     pub fn insert_debug_marker(&self, marker: &str) -> Result<(), ()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use a custom `Error` type instead\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_unit_err\n    = note: `#[warn(clippy::result_unit_err)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use a custom `Error` type instead",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_unit_err",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::result_unit_err)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_unit_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "this returns a `Result<_, ()>`",
                "spans": [
                  {
                    "byte_end": 22791,
                    "byte_start": 22726,
                    "column_end": 70,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\context\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 600,
                    "line_start": 600,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 70,
                        "highlight_start": 5,
                        "text": "    pub fn insert_debug_marker(&self, marker: &str) -> Result<(), ()> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this returns a `Result<_, ()>`\n   --> src\\context\\mod.rs:623:5\n    |\n623 |     pub fn debug_insert_debug_marker(&self, marker: &str) -> Result<(), ()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use a custom `Error` type instead\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_unit_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use a custom `Error` type instead",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_unit_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_unit_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "this returns a `Result<_, ()>`",
                "spans": [
                  {
                    "byte_end": 23686,
                    "byte_start": 23615,
                    "column_end": 76,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\context\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 623,
                    "line_start": 623,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 76,
                        "highlight_start": 5,
                        "text": "    pub fn debug_insert_debug_marker(&self, marker: &str) -> Result<(), ()> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\context\\mod.rs:844:9\n    |\n844 | /         eprint!(\"Debug message with high or medium severity: `{}`.\\n\\\n845 | |                  Please report this error: https://github.com/glium/glium/issues\\n\\\n846 | |                  Backtrace:\",\n847 | |                  message);\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 30871,
                        "byte_start": 30871,
                        "column_end": 64,
                        "column_start": 64,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 844,
                        "line_start": 844,
                        "suggested_replacement": "message",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 64,
                            "highlight_start": 64,
                            "text": "        eprint!(\"Debug message with high or medium severity: `{}`.\\n\\"
                          }
                        ]
                      },
                      {
                        "byte_end": 31016,
                        "byte_start": 30990,
                        "column_end": 25,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 847,
                        "line_start": 846,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 29,
                            "text": "                 Backtrace:\","
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "                 message);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 31017,
                    "byte_start": 30816,
                    "column_end": 26,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\context\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 847,
                    "line_start": 844,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 70,
                        "highlight_start": 9,
                        "text": "        eprint!(\"Debug message with high or medium severity: `{}`.\\n\\"
                      },
                      {
                        "highlight_end": 84,
                        "highlight_start": 1,
                        "text": "                 Please report this error: https://github.com/glium/glium/issues\\n\\"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                 Backtrace:\","
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                 message);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\context\\mod.rs:852:13\n    |\n852 |             print!(\"\\n{:>#4} - {:p}\", frame_id, ip);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n852 -             print!(\"\\n{:>#4} - {:p}\", frame_id, ip);\n852 +             print!(\"\\n{frame_id:>#4} - {ip:p}\");\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 31141,
                        "byte_start": 31141,
                        "column_end": 24,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 852,
                        "line_start": 852,
                        "suggested_replacement": "frame_id",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 24,
                            "text": "            print!(\"\\n{:>#4} - {:p}\", frame_id, ip);"
                          }
                        ]
                      },
                      {
                        "byte_end": 31150,
                        "byte_start": 31150,
                        "column_end": 33,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 852,
                        "line_start": 852,
                        "suggested_replacement": "ip",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 33,
                            "text": "            print!(\"\\n{:>#4} - {:p}\", frame_id, ip);"
                          }
                        ]
                      },
                      {
                        "byte_end": 31164,
                        "byte_start": 31154,
                        "column_end": 47,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 852,
                        "line_start": 852,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 37,
                            "text": "            print!(\"\\n{:>#4} - {:p}\", frame_id, ip);"
                          }
                        ]
                      },
                      {
                        "byte_end": 31168,
                        "byte_start": 31164,
                        "column_end": 51,
                        "column_start": 47,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 852,
                        "line_start": 852,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 47,
                            "text": "            print!(\"\\n{:>#4} - {:p}\", frame_id, ip);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 31169,
                    "byte_start": 31130,
                    "column_end": 52,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\context\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 852,
                    "line_start": 852,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 52,
                        "highlight_start": 13,
                        "text": "            print!(\"\\n{:>#4} - {:p}\", frame_id, ip);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\context\\mod.rs:864:17\n    |\n864 |                 print!(\"\\n         {} at {}:{}\", name, filename, line);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n864 -                 print!(\"\\n         {} at {}:{}\", name, filename, line);\n864 +                 print!(\"\\n         {name} at {filename}:{line}\");\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 31770,
                        "byte_start": 31770,
                        "column_end": 37,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 864,
                        "line_start": 864,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 37,
                            "highlight_start": 37,
                            "text": "                print!(\"\\n         {} at {}:{}\", name, filename, line);"
                          }
                        ]
                      },
                      {
                        "byte_end": 31776,
                        "byte_start": 31776,
                        "column_end": 43,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 864,
                        "line_start": 864,
                        "suggested_replacement": "filename",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 43,
                            "text": "                print!(\"\\n         {} at {}:{}\", name, filename, line);"
                          }
                        ]
                      },
                      {
                        "byte_end": 31779,
                        "byte_start": 31779,
                        "column_end": 46,
                        "column_start": 46,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 864,
                        "line_start": 864,
                        "suggested_replacement": "line",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 46,
                            "text": "                print!(\"\\n         {} at {}:{}\", name, filename, line);"
                          }
                        ]
                      },
                      {
                        "byte_end": 31787,
                        "byte_start": 31781,
                        "column_end": 54,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 864,
                        "line_start": 864,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 48,
                            "text": "                print!(\"\\n         {} at {}:{}\", name, filename, line);"
                          }
                        ]
                      },
                      {
                        "byte_end": 31797,
                        "byte_start": 31787,
                        "column_end": 64,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 864,
                        "line_start": 864,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 64,
                            "highlight_start": 54,
                            "text": "                print!(\"\\n         {} at {}:{}\", name, filename, line);"
                          }
                        ]
                      },
                      {
                        "byte_end": 31803,
                        "byte_start": 31797,
                        "column_end": 70,
                        "column_start": 64,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 864,
                        "line_start": 864,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 70,
                            "highlight_start": 64,
                            "text": "                print!(\"\\n         {} at {}:{}\", name, filename, line);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 31804,
                    "byte_start": 31750,
                    "column_end": 71,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\context\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 864,
                    "line_start": 864,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 71,
                        "highlight_start": 17,
                        "text": "                print!(\"\\n         {} at {}:{}\", name, filename, line);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\context\\mod.rs:879:5\n    |\n879 | /     eprintln!(\"Source: {src:?}\\t\\tSeverity: {sev:?}\\t\\tType: {ty:?}\\t\\tId: {id}\\n{msg}\",\n880 | |                src = source, sev = severity, ty = ty, id = id, msg = message);\n    | |_____________________________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 32161,
                        "byte_start": 32158,
                        "column_end": 28,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 879,
                        "line_start": 879,
                        "suggested_replacement": "source",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 25,
                            "text": "    eprintln!(\"Source: {src:?}\\t\\tSeverity: {sev:?}\\t\\tType: {ty:?}\\t\\tId: {id}\\n{msg}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 32182,
                        "byte_start": 32179,
                        "column_end": 49,
                        "column_start": 46,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 879,
                        "line_start": 879,
                        "suggested_replacement": "severity",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 46,
                            "text": "    eprintln!(\"Source: {src:?}\\t\\tSeverity: {sev:?}\\t\\tType: {ty:?}\\t\\tId: {id}\\n{msg}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 32198,
                        "byte_start": 32196,
                        "column_end": 65,
                        "column_start": 63,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 879,
                        "line_start": 879,
                        "suggested_replacement": "ty",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 65,
                            "highlight_start": 63,
                            "text": "    eprintln!(\"Source: {src:?}\\t\\tSeverity: {sev:?}\\t\\tType: {ty:?}\\t\\tId: {id}\\n{msg}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 32212,
                        "byte_start": 32210,
                        "column_end": 79,
                        "column_start": 77,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 879,
                        "line_start": 879,
                        "suggested_replacement": "id",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 79,
                            "highlight_start": 77,
                            "text": "    eprintln!(\"Source: {src:?}\\t\\tSeverity: {sev:?}\\t\\tType: {ty:?}\\t\\tId: {id}\\n{msg}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 32219,
                        "byte_start": 32216,
                        "column_end": 86,
                        "column_start": 83,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 879,
                        "line_start": 879,
                        "suggested_replacement": "message",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 86,
                            "highlight_start": 83,
                            "text": "    eprintln!(\"Source: {src:?}\\t\\tSeverity: {sev:?}\\t\\tType: {ty:?}\\t\\tId: {id}\\n{msg}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 32250,
                        "byte_start": 32221,
                        "column_end": 28,
                        "column_start": 88,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 880,
                        "line_start": 879,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 89,
                            "highlight_start": 88,
                            "text": "    eprintln!(\"Source: {src:?}\\t\\tSeverity: {sev:?}\\t\\tType: {ty:?}\\t\\tId: {id}\\n{msg}\","
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "               src = source, sev = severity, ty = ty, id = id, msg = message);"
                          }
                        ]
                      },
                      {
                        "byte_end": 32266,
                        "byte_start": 32250,
                        "column_end": 44,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 880,
                        "line_start": 880,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 28,
                            "text": "               src = source, sev = severity, ty = ty, id = id, msg = message);"
                          }
                        ]
                      },
                      {
                        "byte_end": 32275,
                        "byte_start": 32266,
                        "column_end": 53,
                        "column_start": 44,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 880,
                        "line_start": 880,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 44,
                            "text": "               src = source, sev = severity, ty = ty, id = id, msg = message);"
                          }
                        ]
                      },
                      {
                        "byte_end": 32284,
                        "byte_start": 32275,
                        "column_end": 62,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 880,
                        "line_start": 880,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 62,
                            "highlight_start": 53,
                            "text": "               src = source, sev = severity, ty = ty, id = id, msg = message);"
                          }
                        ]
                      },
                      {
                        "byte_end": 32299,
                        "byte_start": 32284,
                        "column_end": 77,
                        "column_start": 62,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 880,
                        "line_start": 880,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 77,
                            "highlight_start": 62,
                            "text": "               src = source, sev = severity, ty = ty, id = id, msg = message);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 32300,
                    "byte_start": 32138,
                    "column_end": 78,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\context\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 880,
                    "line_start": 879,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 89,
                        "highlight_start": 5,
                        "text": "    eprintln!(\"Source: {src:?}\\t\\tSeverity: {sev:?}\\t\\tType: {ty:?}\\t\\tId: {id}\\n{msg}\","
                      },
                      {
                        "highlight_end": 78,
                        "highlight_start": 1,
                        "text": "               src = source, sev = severity, ty = ty, id = id, msg = message);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute from a pointer type (`*const context::Context`) to a reference type (`&mut context::Context`)\n   --> src\\context\\mod.rs:898:49\n    |\n898 |         let user_param: &mut Context = unsafe { mem::transmute(user_param) };\n    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&mut *user_param`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n    = note: `#[warn(clippy::transmute_ptr_to_ref)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::transmute_ptr_to_ref)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 33237,
                        "byte_start": 33211,
                        "column_end": 75,
                        "column_start": 49,
                        "expansion": null,
                        "file_name": "src\\context\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 898,
                        "line_start": 898,
                        "suggested_replacement": "&mut *user_param",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 75,
                            "highlight_start": 49,
                            "text": "        let user_param: &mut Context = unsafe { mem::transmute(user_param) };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::transmute_ptr_to_ref",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute from a pointer type (`*const context::Context`) to a reference type (`&mut context::Context`)",
                "spans": [
                  {
                    "byte_end": 33237,
                    "byte_start": 33211,
                    "column_end": 75,
                    "column_start": 49,
                    "expansion": null,
                    "file_name": "src\\context\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 898,
                    "line_start": 898,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 75,
                        "highlight_start": 49,
                        "text": "        let user_param: &mut Context = unsafe { mem::transmute(user_param) };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this pattern creates a reference to a reference\n   --> src\\fbo.rs:513:53\n    |\n513 |                     RegularAttachment::RenderBuffer(ref rb) =>\n    |                                                     ^^^^^^ help: try: `rb`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 22183,
                        "byte_start": 22177,
                        "column_end": 59,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 513,
                        "line_start": 513,
                        "suggested_replacement": "rb",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 53,
                            "text": "                    RegularAttachment::RenderBuffer(ref rb) =>"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this pattern creates a reference to a reference",
                "spans": [
                  {
                    "byte_end": 22183,
                    "byte_start": 22177,
                    "column_end": 59,
                    "column_start": 53,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 513,
                    "line_start": 513,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 53,
                        "text": "                    RegularAttachment::RenderBuffer(ref rb) =>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\fbo.rs:626:17\n    |\n626 |                 write!(fmt, \"{}: found {}, maximum: {}\", desc, obtained, maximum),\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n626 -                 write!(fmt, \"{}: found {}, maximum: {}\", desc, obtained, maximum),\n626 +                 write!(fmt, \"{desc}: found {obtained}, maximum: {maximum}\"),\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 26276,
                        "byte_start": 26276,
                        "column_end": 31,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 626,
                        "line_start": 626,
                        "suggested_replacement": "desc",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 31,
                            "highlight_start": 31,
                            "text": "                write!(fmt, \"{}: found {}, maximum: {}\", desc, obtained, maximum),"
                          }
                        ]
                      },
                      {
                        "byte_end": 26286,
                        "byte_start": 26286,
                        "column_end": 41,
                        "column_start": 41,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 626,
                        "line_start": 626,
                        "suggested_replacement": "obtained",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 41,
                            "text": "                write!(fmt, \"{}: found {}, maximum: {}\", desc, obtained, maximum),"
                          }
                        ]
                      },
                      {
                        "byte_end": 26299,
                        "byte_start": 26299,
                        "column_end": 54,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 626,
                        "line_start": 626,
                        "suggested_replacement": "maximum",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 54,
                            "text": "                write!(fmt, \"{}: found {}, maximum: {}\", desc, obtained, maximum),"
                          }
                        ]
                      },
                      {
                        "byte_end": 26307,
                        "byte_start": 26301,
                        "column_end": 62,
                        "column_start": 56,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 626,
                        "line_start": 626,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 62,
                            "highlight_start": 56,
                            "text": "                write!(fmt, \"{}: found {}, maximum: {}\", desc, obtained, maximum),"
                          }
                        ]
                      },
                      {
                        "byte_end": 26317,
                        "byte_start": 26307,
                        "column_end": 72,
                        "column_start": 62,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 626,
                        "line_start": 626,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 72,
                            "highlight_start": 62,
                            "text": "                write!(fmt, \"{}: found {}, maximum: {}\", desc, obtained, maximum),"
                          }
                        ]
                      },
                      {
                        "byte_end": 26326,
                        "byte_start": 26317,
                        "column_end": 81,
                        "column_start": 72,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 626,
                        "line_start": 626,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 81,
                            "highlight_start": 72,
                            "text": "                write!(fmt, \"{}: found {}, maximum: {}\", desc, obtained, maximum),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 26327,
                    "byte_start": 26262,
                    "column_end": 82,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 626,
                    "line_start": 626,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 82,
                        "highlight_start": 17,
                        "text": "                write!(fmt, \"{}: found {}, maximum: {}\", desc, obtained, maximum),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: dereferencing a tuple pattern where every element takes a reference\n   --> src\\fbo.rs:762:38\n    |\n762 |             if key.color.iter().any(|&(_, ref id)| condition(id)) {\n    |                                      ^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrowed_reference\nhelp: try removing the `&` and `ref` parts\n    |\n762 -             if key.color.iter().any(|&(_, ref id)| condition(id)) {\n762 +             if key.color.iter().any(|(_, id)| condition(id)) {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrowed_reference",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try removing the `&` and `ref` parts",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 30763,
                        "byte_start": 30759,
                        "column_end": 47,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 762,
                        "line_start": 762,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 43,
                            "text": "            if key.color.iter().any(|&(_, ref id)| condition(id)) {"
                          }
                        ]
                      },
                      {
                        "byte_end": 30755,
                        "byte_start": 30754,
                        "column_end": 39,
                        "column_start": 38,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 762,
                        "line_start": 762,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 38,
                            "text": "            if key.color.iter().any(|&(_, ref id)| condition(id)) {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrowed_reference",
                  "explanation": null
                },
                "level": "warning",
                "message": "dereferencing a tuple pattern where every element takes a reference",
                "spans": [
                  {
                    "byte_end": 30766,
                    "byte_start": 30754,
                    "column_end": 50,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 762,
                    "line_start": 762,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 50,
                        "highlight_start": 38,
                        "text": "            if key.color.iter().any(|&(_, ref id)| condition(id)) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\fbo.rs:979:34\n    |\n979 |                 bind_framebuffer(&mut ctxt, id, true, false);\n    |                                  ^^^^^^^^^ help: change this to: `ctxt`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 38960,
                        "byte_start": 38951,
                        "column_end": 43,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 979,
                        "line_start": 979,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 34,
                            "text": "                bind_framebuffer(&mut ctxt, id, true, false);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 38960,
                    "byte_start": 38951,
                    "column_end": 43,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 979,
                    "line_start": 979,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 43,
                        "highlight_start": 34,
                        "text": "                bind_framebuffer(&mut ctxt, id, true, false);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\fbo.rs:983:34\n    |\n983 |                 bind_framebuffer(&mut ctxt, id, true, false);\n    |                                  ^^^^^^^^^ help: change this to: `ctxt`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 39145,
                        "byte_start": 39136,
                        "column_end": 43,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 983,
                        "line_start": 983,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 34,
                            "text": "                bind_framebuffer(&mut ctxt, id, true, false);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 39145,
                    "byte_start": 39136,
                    "column_end": 43,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 983,
                    "line_start": 983,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 43,
                        "highlight_start": 34,
                        "text": "                bind_framebuffer(&mut ctxt, id, true, false);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\fbo.rs:996:39\n    |\n996 |             unsafe { bind_framebuffer(&mut ctxt, id, true, false) };       // TODO: remove once DSA is used\n    |                                       ^^^^^^^^^ help: change this to: `ctxt`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 39501,
                        "byte_start": 39492,
                        "column_end": 48,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 996,
                        "line_start": 996,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 39,
                            "text": "            unsafe { bind_framebuffer(&mut ctxt, id, true, false) };       // TODO: remove once DSA is used"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 39501,
                    "byte_start": 39492,
                    "column_end": 48,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 996,
                    "line_start": 996,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 39,
                        "text": "            unsafe { bind_framebuffer(&mut ctxt, id, true, false) };       // TODO: remove once DSA is used"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\fbo.rs:1009:39\n     |\n1009 |             unsafe { bind_framebuffer(&mut ctxt, id, true, false) };       // TODO: remove once DSA is used\n     |                                       ^^^^^^^^^ help: change this to: `ctxt`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 40151,
                        "byte_start": 40142,
                        "column_end": 48,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1009,
                        "line_start": 1009,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 39,
                            "text": "            unsafe { bind_framebuffer(&mut ctxt, id, true, false) };       // TODO: remove once DSA is used"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 40151,
                    "byte_start": 40142,
                    "column_end": 48,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1009,
                    "line_start": 1009,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 39,
                        "text": "            unsafe { bind_framebuffer(&mut ctxt, id, true, false) };       // TODO: remove once DSA is used"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\fbo.rs:1022:39\n     |\n1022 |             unsafe { bind_framebuffer(&mut ctxt, id, true, false) };       // TODO: remove once DSA is used\n     |                                       ^^^^^^^^^ help: change this to: `ctxt`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 40803,
                        "byte_start": 40794,
                        "column_end": 48,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1022,
                        "line_start": 1022,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 39,
                            "text": "            unsafe { bind_framebuffer(&mut ctxt, id, true, false) };       // TODO: remove once DSA is used"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 40803,
                    "byte_start": 40794,
                    "column_end": 48,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1022,
                    "line_start": 1022,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 39,
                        "text": "            unsafe { bind_framebuffer(&mut ctxt, id, true, false) };       // TODO: remove once DSA is used"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\fbo.rs:1035:39\n     |\n1035 |             unsafe { bind_framebuffer(&mut ctxt, id, true, false) };       // TODO: remove once DSA is used\n     |                                       ^^^^^^^^^ help: change this to: `ctxt`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 41457,
                        "byte_start": 41448,
                        "column_end": 48,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1035,
                        "line_start": 1035,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 39,
                            "text": "            unsafe { bind_framebuffer(&mut ctxt, id, true, false) };       // TODO: remove once DSA is used"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 41457,
                    "byte_start": 41448,
                    "column_end": 48,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1035,
                    "line_start": 1035,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 39,
                        "text": "            unsafe { bind_framebuffer(&mut ctxt, id, true, false) };       // TODO: remove once DSA is used"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\fbo.rs:1048:39\n     |\n1048 |             unsafe { bind_framebuffer(&mut ctxt, id, true, false) };       // TODO: remove once DSA is used\n     |                                       ^^^^^^^^^ help: change this to: `ctxt`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 42125,
                        "byte_start": 42116,
                        "column_end": 48,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1048,
                        "line_start": 1048,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 39,
                            "text": "            unsafe { bind_framebuffer(&mut ctxt, id, true, false) };       // TODO: remove once DSA is used"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 42125,
                    "byte_start": 42116,
                    "column_end": 48,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1048,
                    "line_start": 1048,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 39,
                        "text": "            unsafe { bind_framebuffer(&mut ctxt, id, true, false) };       // TODO: remove once DSA is used"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\fbo.rs:1068:29\n     |\n1068 |             unsafe { attach(&mut ctxt, gl::COLOR_ATTACHMENT0 + attachment_pos as u32, id, atchmnt) };\n     |                             ^^^^^^^^^ help: change this to: `ctxt`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 43302,
                        "byte_start": 43293,
                        "column_end": 38,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1068,
                        "line_start": 1068,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 38,
                            "highlight_start": 29,
                            "text": "            unsafe { attach(&mut ctxt, gl::COLOR_ATTACHMENT0 + attachment_pos as u32, id, atchmnt) };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 43302,
                    "byte_start": 43293,
                    "column_end": 38,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1068,
                    "line_start": 1068,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 29,
                        "text": "            unsafe { attach(&mut ctxt, gl::COLOR_ATTACHMENT0 + attachment_pos as u32, id, atchmnt) };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\fbo.rs:1074:29\n     |\n1074 |             unsafe { attach(&mut ctxt, gl::DEPTH_ATTACHMENT, id, depth) };\n     |                             ^^^^^^^^^ help: change this to: `ctxt`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 43677,
                        "byte_start": 43668,
                        "column_end": 38,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1074,
                        "line_start": 1074,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 38,
                            "highlight_start": 29,
                            "text": "            unsafe { attach(&mut ctxt, gl::DEPTH_ATTACHMENT, id, depth) };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 43677,
                    "byte_start": 43668,
                    "column_end": 38,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1074,
                    "line_start": 1074,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 29,
                        "text": "            unsafe { attach(&mut ctxt, gl::DEPTH_ATTACHMENT, id, depth) };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\fbo.rs:1077:29\n     |\n1077 |             unsafe { attach(&mut ctxt, gl::STENCIL_ATTACHMENT, id, stencil) };\n     |                             ^^^^^^^^^ help: change this to: `ctxt`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 43815,
                        "byte_start": 43806,
                        "column_end": 38,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1077,
                        "line_start": 1077,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 38,
                            "highlight_start": 29,
                            "text": "            unsafe { attach(&mut ctxt, gl::STENCIL_ATTACHMENT, id, stencil) };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 43815,
                    "byte_start": 43806,
                    "column_end": 38,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1077,
                    "line_start": 1077,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 29,
                        "text": "            unsafe { attach(&mut ctxt, gl::STENCIL_ATTACHMENT, id, stencil) };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\fbo.rs:1080:29\n     |\n1080 |             unsafe { attach(&mut ctxt, gl::DEPTH_STENCIL_ATTACHMENT, id, depth_stencil) };\n     |                             ^^^^^^^^^ help: change this to: `ctxt`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 43969,
                        "byte_start": 43960,
                        "column_end": 38,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1080,
                        "line_start": 1080,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 38,
                            "highlight_start": 29,
                            "text": "            unsafe { attach(&mut ctxt, gl::DEPTH_STENCIL_ATTACHMENT, id, depth_stencil) };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 43969,
                    "byte_start": 43960,
                    "column_end": 38,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1080,
                    "line_start": 1080,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 29,
                        "text": "            unsafe { attach(&mut ctxt, gl::DEPTH_STENCIL_ATTACHMENT, id, depth_stencil) };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: taken reference of right operand\n    --> src\\fbo.rs:1084:12\n     |\n1084 |         if raw_attachments != &[gl::COLOR_ATTACHMENT0] {\n     |            ^^^^^^^^^^^^^^^^^^^------------------------\n     |                               |\n     |                               help: use the right value directly: `[gl::COLOR_ATTACHMENT0]`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\n     = note: `#[warn(clippy::op_ref)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::op_ref)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the right value directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 44136,
                        "byte_start": 44112,
                        "column_end": 55,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1084,
                        "line_start": 1084,
                        "suggested_replacement": "[gl::COLOR_ATTACHMENT0]",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 55,
                            "highlight_start": 31,
                            "text": "        if raw_attachments != &[gl::COLOR_ATTACHMENT0] {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::op_ref",
                  "explanation": null
                },
                "level": "warning",
                "message": "taken reference of right operand",
                "spans": [
                  {
                    "byte_end": 44136,
                    "byte_start": 44093,
                    "column_end": 55,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1084,
                    "line_start": 1084,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 55,
                        "highlight_start": 12,
                        "text": "        if raw_attachments != &[gl::COLOR_ATTACHMENT0] {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\fbo.rs:1098:38\n     |\n1098 |                     bind_framebuffer(&mut ctxt, id, true, false);\n     |                                      ^^^^^^^^^ help: change this to: `ctxt`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 44771,
                        "byte_start": 44762,
                        "column_end": 47,
                        "column_start": 38,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1098,
                        "line_start": 1098,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 38,
                            "text": "                    bind_framebuffer(&mut ctxt, id, true, false);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 44771,
                    "byte_start": 44762,
                    "column_end": 47,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1098,
                    "line_start": 1098,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 47,
                        "highlight_start": 38,
                        "text": "                    bind_framebuffer(&mut ctxt, id, true, false);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\fbo.rs:1105:38\n     |\n1105 |                     bind_framebuffer(&mut ctxt, id, true, false);\n     |                                      ^^^^^^^^^ help: change this to: `ctxt`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 45093,
                        "byte_start": 45084,
                        "column_end": 47,
                        "column_start": 38,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1105,
                        "line_start": 1105,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 38,
                            "text": "                    bind_framebuffer(&mut ctxt, id, true, false);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 45093,
                    "byte_start": 45084,
                    "column_end": 47,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1105,
                    "line_start": 1105,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 47,
                        "highlight_start": 38,
                        "text": "                    bind_framebuffer(&mut ctxt, id, true, false);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src\\fbo.rs:1112:38\n     |\n1112 |                     bind_framebuffer(&mut ctxt, id, true, false);\n     |                                      ^^^^^^^^^ help: change this to: `ctxt`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 45421,
                        "byte_start": 45412,
                        "column_end": 47,
                        "column_start": 38,
                        "expansion": null,
                        "file_name": "src\\fbo.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1112,
                        "line_start": 1112,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 38,
                            "text": "                    bind_framebuffer(&mut ctxt, id, true, false);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 45421,
                    "byte_start": 45412,
                    "column_end": 47,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\fbo.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1112,
                    "line_start": 1112,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 47,
                        "highlight_start": 38,
                        "text": "                    bind_framebuffer(&mut ctxt, id, true, false);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\image_format.rs:117:33\n    |\n117 |             ClientFormat::U8 => 1 * mem::size_of::<u8>(),\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `mem::size_of::<u8>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2349,
                        "byte_start": 2325,
                        "column_end": 57,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\image_format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 117,
                        "line_start": 117,
                        "suggested_replacement": "mem::size_of::<u8>()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 57,
                            "highlight_start": 33,
                            "text": "            ClientFormat::U8 => 1 * mem::size_of::<u8>(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 2349,
                    "byte_start": 2325,
                    "column_end": 57,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 117,
                    "line_start": 117,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 33,
                        "text": "            ClientFormat::U8 => 1 * mem::size_of::<u8>(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\image_format.rs:121:33\n    |\n121 |             ClientFormat::I8 => 1 * mem::size_of::<i8>(),\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `mem::size_of::<i8>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2593,
                        "byte_start": 2569,
                        "column_end": 57,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\image_format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 121,
                        "line_start": 121,
                        "suggested_replacement": "mem::size_of::<i8>()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 57,
                            "highlight_start": 33,
                            "text": "            ClientFormat::I8 => 1 * mem::size_of::<i8>(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 2593,
                    "byte_start": 2569,
                    "column_end": 57,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 121,
                    "line_start": 121,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 33,
                        "text": "            ClientFormat::I8 => 1 * mem::size_of::<i8>(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\image_format.rs:125:34\n    |\n125 |             ClientFormat::U16 => 1 * mem::size_of::<u16>(),\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `mem::size_of::<u16>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2839,
                        "byte_start": 2814,
                        "column_end": 59,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\image_format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 125,
                        "line_start": 125,
                        "suggested_replacement": "mem::size_of::<u16>()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 34,
                            "text": "            ClientFormat::U16 => 1 * mem::size_of::<u16>(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 2839,
                    "byte_start": 2814,
                    "column_end": 59,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 125,
                    "line_start": 125,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 34,
                        "text": "            ClientFormat::U16 => 1 * mem::size_of::<u16>(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\image_format.rs:129:34\n    |\n129 |             ClientFormat::I16 => 1 * mem::size_of::<i16>(),\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `mem::size_of::<i16>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3097,
                        "byte_start": 3072,
                        "column_end": 59,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\image_format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 129,
                        "line_start": 129,
                        "suggested_replacement": "mem::size_of::<i16>()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 34,
                            "text": "            ClientFormat::I16 => 1 * mem::size_of::<i16>(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 3097,
                    "byte_start": 3072,
                    "column_end": 59,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 129,
                    "line_start": 129,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 34,
                        "text": "            ClientFormat::I16 => 1 * mem::size_of::<i16>(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\image_format.rs:133:34\n    |\n133 |             ClientFormat::U32 => 1 * mem::size_of::<u32>(),\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `mem::size_of::<u32>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3355,
                        "byte_start": 3330,
                        "column_end": 59,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\image_format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 133,
                        "line_start": 133,
                        "suggested_replacement": "mem::size_of::<u32>()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 34,
                            "text": "            ClientFormat::U32 => 1 * mem::size_of::<u32>(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 3355,
                    "byte_start": 3330,
                    "column_end": 59,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 133,
                    "line_start": 133,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 34,
                        "text": "            ClientFormat::U32 => 1 * mem::size_of::<u32>(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\image_format.rs:137:34\n    |\n137 |             ClientFormat::I32 => 1 * mem::size_of::<i32>(),\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `mem::size_of::<i32>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3613,
                        "byte_start": 3588,
                        "column_end": 59,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\image_format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 137,
                        "line_start": 137,
                        "suggested_replacement": "mem::size_of::<i32>()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 34,
                            "text": "            ClientFormat::I32 => 1 * mem::size_of::<i32>(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 3613,
                    "byte_start": 3588,
                    "column_end": 59,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 137,
                    "line_start": 137,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 34,
                        "text": "            ClientFormat::I32 => 1 * mem::size_of::<i32>(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: equal expressions as operands to `/`\n   --> src\\image_format.rs:141:37\n    |\n141 |             ClientFormat::U3U3U2 => (3 + 3 + 2) / 8,\n    |                                     ^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op\n    = note: `#[deny(clippy::eq_op)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[deny(clippy::eq_op)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::eq_op",
                  "explanation": null
                },
                "level": "error",
                "message": "equal expressions as operands to `/`",
                "spans": [
                  {
                    "byte_end": 3864,
                    "byte_start": 3849,
                    "column_end": 52,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 141,
                    "line_start": 141,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 52,
                        "highlight_start": 37,
                        "text": "            ClientFormat::U3U3U2 => (3 + 3 + 2) / 8,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\image_format.rs:151:34\n    |\n151 |             ClientFormat::F32 => 1 * mem::size_of::<f32>(),\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `mem::size_of::<f32>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4445,
                        "byte_start": 4420,
                        "column_end": 59,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\image_format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 151,
                        "line_start": 151,
                        "suggested_replacement": "mem::size_of::<f32>()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 34,
                            "text": "            ClientFormat::F32 => 1 * mem::size_of::<f32>(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 4445,
                    "byte_start": 4420,
                    "column_end": 59,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 151,
                    "line_start": 151,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 34,
                        "text": "            ClientFormat::F32 => 1 * mem::size_of::<f32>(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: empty doc comment\n   --> src\\image_format.rs:243:5\n    |\n243 |     ///\n    |     ^^^\n    |\n    = help: consider removing or filling it\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing or filling it",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::empty_docs",
                  "explanation": null
                },
                "level": "warning",
                "message": "empty doc comment",
                "spans": [
                  {
                    "byte_end": 7505,
                    "byte_start": 7502,
                    "column_end": 8,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 243,
                    "line_start": 243,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 5,
                        "text": "    ///"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: empty doc comment\n   --> src\\image_format.rs:245:5\n    |\n245 |     ///\n    |     ^^^\n    |\n    = help: consider removing or filling it\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing or filling it",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::empty_docs",
                  "explanation": null
                },
                "level": "warning",
                "message": "empty doc comment",
                "spans": [
                  {
                    "byte_end": 7525,
                    "byte_start": 7522,
                    "column_end": 8,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 245,
                    "line_start": 245,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 5,
                        "text": "    ///"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: empty doc comment\n   --> src\\image_format.rs:247:5\n    |\n247 |     ///\n    |     ^^^\n    |\n    = help: consider removing or filling it\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing or filling it",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::empty_docs",
                  "explanation": null
                },
                "level": "warning",
                "message": "empty doc comment",
                "spans": [
                  {
                    "byte_end": 7545,
                    "byte_start": 7542,
                    "column_end": 8,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 247,
                    "line_start": 247,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 5,
                        "text": "    ///"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: empty doc comment\n   --> src\\image_format.rs:257:5\n    |\n257 |     ///\n    |     ^^^\n    |\n    = help: consider removing or filling it\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing or filling it",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::empty_docs",
                  "explanation": null
                },
                "level": "warning",
                "message": "empty doc comment",
                "spans": [
                  {
                    "byte_end": 7719,
                    "byte_start": 7716,
                    "column_end": 8,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 257,
                    "line_start": 257,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 5,
                        "text": "    ///"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: empty doc comment\n   --> src\\image_format.rs:259:5\n    |\n259 |     ///\n    |     ^^^\n    |\n    = help: consider removing or filling it\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing or filling it",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::empty_docs",
                  "explanation": null
                },
                "level": "warning",
                "message": "empty doc comment",
                "spans": [
                  {
                    "byte_end": 7742,
                    "byte_start": 7739,
                    "column_end": 8,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 259,
                    "line_start": 259,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 5,
                        "text": "    ///"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: empty doc comment\n   --> src\\image_format.rs:269:5\n    |\n269 |     ///\n    |     ^^^\n    |\n    = help: consider removing or filling it\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing or filling it",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::empty_docs",
                  "explanation": null
                },
                "level": "warning",
                "message": "empty doc comment",
                "spans": [
                  {
                    "byte_end": 7948,
                    "byte_start": 7945,
                    "column_end": 8,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 269,
                    "line_start": 269,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 5,
                        "text": "    ///"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: empty doc comment\n   --> src\\image_format.rs:271:5\n    |\n271 |     ///\n    |     ^^^\n    |\n    = help: consider removing or filling it\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing or filling it",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::empty_docs",
                  "explanation": null
                },
                "level": "warning",
                "message": "empty doc comment",
                "spans": [
                  {
                    "byte_end": 7970,
                    "byte_start": 7967,
                    "column_end": 8,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 271,
                    "line_start": 271,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 5,
                        "text": "    ///"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: empty doc comment\n   --> src\\image_format.rs:273:5\n    |\n273 |     ///\n    |     ^^^\n    |\n    = help: consider removing or filling it\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing or filling it",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::empty_docs",
                  "explanation": null
                },
                "level": "warning",
                "message": "empty doc comment",
                "spans": [
                  {
                    "byte_end": 7992,
                    "byte_start": 7989,
                    "column_end": 8,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 273,
                    "line_start": 273,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 5,
                        "text": "    ///"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: empty doc comment\n   --> src\\image_format.rs:287:5\n    |\n287 |     ///\n    |     ^^^\n    |\n    = help: consider removing or filling it\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing or filling it",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::empty_docs",
                  "explanation": null
                },
                "level": "warning",
                "message": "empty doc comment",
                "spans": [
                  {
                    "byte_end": 8300,
                    "byte_start": 8297,
                    "column_end": 8,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 287,
                    "line_start": 287,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 5,
                        "text": "    ///"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: all variants have the same postfix: `Format`\n    --> src\\image_format.rs:1501:1\n     |\n1501 | / pub enum ClientFormatAny {\n1502 | |     ClientFormat(ClientFormat),\n1503 | |     CompressedFormat(CompressedFormat),\n1504 | |     CompressedSrgbFormat(CompressedSrgbFormat),\n1505 | | }\n     | |_^\n     |\n     = help: remove the postfixes and use full paths to the variants instead of glob imports\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#enum_variant_names\n     = note: `#[warn(clippy::enum_variant_names)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "remove the postfixes and use full paths to the variants instead of glob imports",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#enum_variant_names",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::enum_variant_names)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::enum_variant_names",
                  "explanation": null
                },
                "level": "warning",
                "message": "all variants have the same postfix: `Format`",
                "spans": [
                  {
                    "byte_end": 58699,
                    "byte_start": 58551,
                    "column_end": 2,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1505,
                    "line_start": 1501,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "pub enum ClientFormatAny {"
                      },
                      {
                        "highlight_end": 32,
                        "highlight_start": 1,
                        "text": "    ClientFormat(ClientFormat),"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "    CompressedFormat(CompressedFormat),"
                      },
                      {
                        "highlight_end": 48,
                        "highlight_start": 1,
                        "text": "    CompressedSrgbFormat(CompressedSrgbFormat),"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n    --> src\\image_format.rs:1550:50\n     |\n1550 |                 let uncompressed_bit_size =  4 * width as usize * height as usize *\n     |                                                  ^^^^^^^^^^^^^^ help: try: `width`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 60966,
                        "byte_start": 60952,
                        "column_end": 64,
                        "column_start": 50,
                        "expansion": null,
                        "file_name": "src\\image_format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1550,
                        "line_start": 1550,
                        "suggested_replacement": "width",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 64,
                            "highlight_start": 50,
                            "text": "                let uncompressed_bit_size =  4 * width as usize * height as usize *"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`usize` -> `usize`)",
                "spans": [
                  {
                    "byte_end": 60966,
                    "byte_start": 60952,
                    "column_end": 64,
                    "column_start": 50,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1550,
                    "line_start": 1550,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 64,
                        "highlight_start": 50,
                        "text": "                let uncompressed_bit_size =  4 * width as usize * height as usize *"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n    --> src\\image_format.rs:1550:67\n     |\n1550 |                 let uncompressed_bit_size =  4 * width as usize * height as usize *\n     |                                                                   ^^^^^^^^^^^^^^^ help: try: `height`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 60984,
                        "byte_start": 60969,
                        "column_end": 82,
                        "column_start": 67,
                        "expansion": null,
                        "file_name": "src\\image_format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1550,
                        "line_start": 1550,
                        "suggested_replacement": "height",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 82,
                            "highlight_start": 67,
                            "text": "                let uncompressed_bit_size =  4 * width as usize * height as usize *"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`usize` -> `usize`)",
                "spans": [
                  {
                    "byte_end": 60984,
                    "byte_start": 60969,
                    "column_end": 82,
                    "column_start": 67,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1550,
                    "line_start": 1550,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 82,
                        "highlight_start": 67,
                        "text": "                let uncompressed_bit_size =  4 * width as usize * height as usize *"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n    --> src\\image_format.rs:1577:50\n     |\n1577 |                 let uncompressed_bit_size =  4 * width as usize * height as usize *\n     |                                                  ^^^^^^^^^^^^^^ help: try: `width`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 62774,
                        "byte_start": 62760,
                        "column_end": 64,
                        "column_start": 50,
                        "expansion": null,
                        "file_name": "src\\image_format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1577,
                        "line_start": 1577,
                        "suggested_replacement": "width",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 64,
                            "highlight_start": 50,
                            "text": "                let uncompressed_bit_size =  4 * width as usize * height as usize *"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`usize` -> `usize`)",
                "spans": [
                  {
                    "byte_end": 62774,
                    "byte_start": 62760,
                    "column_end": 64,
                    "column_start": 50,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1577,
                    "line_start": 1577,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 64,
                        "highlight_start": 50,
                        "text": "                let uncompressed_bit_size =  4 * width as usize * height as usize *"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n    --> src\\image_format.rs:1577:67\n     |\n1577 |                 let uncompressed_bit_size =  4 * width as usize * height as usize *\n     |                                                                   ^^^^^^^^^^^^^^^ help: try: `height`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 62792,
                        "byte_start": 62777,
                        "column_end": 82,
                        "column_start": 67,
                        "expansion": null,
                        "file_name": "src\\image_format.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1577,
                        "line_start": 1577,
                        "suggested_replacement": "height",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 82,
                            "highlight_start": 67,
                            "text": "                let uncompressed_bit_size =  4 * width as usize * height as usize *"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`usize` -> `usize`)",
                "spans": [
                  {
                    "byte_end": 62792,
                    "byte_start": 62777,
                    "column_end": 82,
                    "column_start": 67,
                    "expansion": null,
                    "file_name": "src\\image_format.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1577,
                    "line_start": 1577,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 82,
                        "highlight_start": 67,
                        "text": "                let uncompressed_bit_size =  4 * width as usize * height as usize *"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this pattern creates a reference to a reference\n   --> src\\ops\\draw.rs:179:21\n    |\n179 |         if let Some(ref tf) = draw_parameters.transform_feedback {\n    |                     ^^^^^^ help: try: `tf`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7252,
                        "byte_start": 7246,
                        "column_end": 27,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\ops\\draw.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 179,
                        "line_start": 179,
                        "suggested_replacement": "tf",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 21,
                            "text": "        if let Some(ref tf) = draw_parameters.transform_feedback {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this pattern creates a reference to a reference",
                "spans": [
                  {
                    "byte_end": 7252,
                    "byte_start": 7246,
                    "column_end": 27,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\ops\\draw.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 179,
                    "line_start": 179,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 21,
                        "text": "        if let Some(ref tf) = draw_parameters.transform_feedback {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\ops\\read.rs:144:74\n    |\n144 |             unsafe { FramebuffersContainer::bind_framebuffer_for_reading(&mut ctxt, attachment) };\n    |                                                                          ^^^^^^^^^ help: change this to: `ctxt`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4971,
                        "byte_start": 4962,
                        "column_end": 83,
                        "column_start": 74,
                        "expansion": null,
                        "file_name": "src\\ops\\read.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 144,
                        "line_start": 144,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 83,
                            "highlight_start": 74,
                            "text": "            unsafe { FramebuffersContainer::bind_framebuffer_for_reading(&mut ctxt, attachment) };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 4971,
                    "byte_start": 4962,
                    "column_end": 83,
                    "column_start": 74,
                    "expansion": null,
                    "file_name": "src\\ops\\read.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 144,
                    "line_start": 144,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 83,
                        "highlight_start": 74,
                        "text": "            unsafe { FramebuffersContainer::bind_framebuffer_for_reading(&mut ctxt, attachment) };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\ops\\read.rs:147:73\n    |\n147 |             FramebuffersContainer::bind_default_framebuffer_for_reading(&mut ctxt, read_buffer);\n    |                                                                         ^^^^^^^^^ help: change this to: `ctxt`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5133,
                        "byte_start": 5124,
                        "column_end": 82,
                        "column_start": 73,
                        "expansion": null,
                        "file_name": "src\\ops\\read.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 147,
                        "line_start": 147,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 82,
                            "highlight_start": 73,
                            "text": "            FramebuffersContainer::bind_default_framebuffer_for_reading(&mut ctxt, read_buffer);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 5133,
                    "byte_start": 5124,
                    "column_end": 82,
                    "column_start": 73,
                    "expansion": null,
                    "file_name": "src\\ops\\read.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 147,
                    "line_start": 147,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 82,
                        "highlight_start": 73,
                        "text": "            FramebuffersContainer::bind_default_framebuffer_for_reading(&mut ctxt, read_buffer);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: match expression looks like `matches!` macro\n   --> src\\ops\\read.rs:157:35\n    |\n157 |                       let integer = match tex.get_texture().get_requested_format() {\n    |  ___________________________________^\n158 | |                         TextureFormatRequest::Specific(TextureFormat::UncompressedIntegral(_)) => true,\n159 | |                         TextureFormatRequest::Specific(TextureFormat::UncompressedUnsigned(_)) => true,\n160 | |                         TextureFormatRequest::AnyIntegral => true,\n161 | |                         TextureFormatRequest::AnyUnsigned => true,\n162 | |                         _ => false,\n163 | |                     };\n    | |_____________________^ help: try: `matches!(tex.get_texture().get_requested_format(), TextureFormatRequest::Specific(TextureFormat::UncompressedIntegral(_)) | TextureFormatRequest::Specific(TextureFormat::UncompressedUnsigned(_)) | TextureFormatRequest::AnyIntegral | TextureFormatRequest::AnyUnsigned)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro\n    = note: `#[warn(clippy::match_like_matches_macro)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::match_like_matches_macro)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5953,
                        "byte_start": 5505,
                        "column_end": 22,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\ops\\read.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 163,
                        "line_start": 157,
                        "suggested_replacement": "matches!(tex.get_texture().get_requested_format(), TextureFormatRequest::Specific(TextureFormat::UncompressedIntegral(_)) | TextureFormatRequest::Specific(TextureFormat::UncompressedUnsigned(_)) | TextureFormatRequest::AnyIntegral | TextureFormatRequest::AnyUnsigned)",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 83,
                            "highlight_start": 35,
                            "text": "                    let integer = match tex.get_texture().get_requested_format() {"
                          },
                          {
                            "highlight_end": 104,
                            "highlight_start": 1,
                            "text": "                        TextureFormatRequest::Specific(TextureFormat::UncompressedIntegral(_)) => true,"
                          },
                          {
                            "highlight_end": 104,
                            "highlight_start": 1,
                            "text": "                        TextureFormatRequest::Specific(TextureFormat::UncompressedUnsigned(_)) => true,"
                          },
                          {
                            "highlight_end": 67,
                            "highlight_start": 1,
                            "text": "                        TextureFormatRequest::AnyIntegral => true,"
                          },
                          {
                            "highlight_end": 67,
                            "highlight_start": 1,
                            "text": "                        TextureFormatRequest::AnyUnsigned => true,"
                          },
                          {
                            "highlight_end": 36,
                            "highlight_start": 1,
                            "text": "                        _ => false,"
                          },
                          {
                            "highlight_end": 22,
                            "highlight_start": 1,
                            "text": "                    };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::match_like_matches_macro",
                  "explanation": null
                },
                "level": "warning",
                "message": "match expression looks like `matches!` macro",
                "spans": [
                  {
                    "byte_end": 5953,
                    "byte_start": 5505,
                    "column_end": 22,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\ops\\read.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 163,
                    "line_start": 157,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 83,
                        "highlight_start": 35,
                        "text": "                    let integer = match tex.get_texture().get_requested_format() {"
                      },
                      {
                        "highlight_end": 104,
                        "highlight_start": 1,
                        "text": "                        TextureFormatRequest::Specific(TextureFormat::UncompressedIntegral(_)) => true,"
                      },
                      {
                        "highlight_end": 104,
                        "highlight_start": 1,
                        "text": "                        TextureFormatRequest::Specific(TextureFormat::UncompressedUnsigned(_)) => true,"
                      },
                      {
                        "highlight_end": 67,
                        "highlight_start": 1,
                        "text": "                        TextureFormatRequest::AnyIntegral => true,"
                      },
                      {
                        "highlight_end": 67,
                        "highlight_start": 1,
                        "text": "                        TextureFormatRequest::AnyUnsigned => true,"
                      },
                      {
                        "highlight_end": 36,
                        "highlight_start": 1,
                        "text": "                        _ => false,"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "                    };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\ops\\read.rs:245:62\n    |\n245 |                 pixel_buffer.prepare_and_bind_for_pixel_pack(&mut ctxt);\n    |                                                              ^^^^^^^^^ help: change this to: `ctxt`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9482,
                        "byte_start": 9473,
                        "column_end": 71,
                        "column_start": 62,
                        "expansion": null,
                        "file_name": "src\\ops\\read.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 245,
                        "line_start": 245,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 71,
                            "highlight_start": 62,
                            "text": "                pixel_buffer.prepare_and_bind_for_pixel_pack(&mut ctxt);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 9482,
                    "byte_start": 9473,
                    "column_end": 71,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "src\\ops\\read.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 245,
                    "line_start": 245,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 71,
                        "highlight_start": 62,
                        "text": "                pixel_buffer.prepare_and_bind_for_pixel_pack(&mut ctxt);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this pattern creates a reference to a reference\n   --> src\\ops\\read.rs:167:54\n    |\n167 |                 fbo::RegularAttachment::RenderBuffer(ref rb) => {\n    |                                                      ^^^^^^ help: try: `rb`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6109,
                        "byte_start": 6103,
                        "column_end": 60,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\ops\\read.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 167,
                        "line_start": 167,
                        "suggested_replacement": "rb",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 60,
                            "highlight_start": 54,
                            "text": "                fbo::RegularAttachment::RenderBuffer(ref rb) => {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this pattern creates a reference to a reference",
                "spans": [
                  {
                    "byte_end": 6109,
                    "byte_start": 6103,
                    "column_end": 60,
                    "column_start": 54,
                    "expansion": null,
                    "file_name": "src\\ops\\read.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 167,
                    "line_start": 167,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 54,
                        "text": "                fbo::RegularAttachment::RenderBuffer(ref rb) => {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: empty doc comment\n  --> src\\sampler_object.rs:68:5\n   |\n68 |     ///\n   |     ^^^\n   |\n   = help: consider removing or filling it\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing or filling it",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_docs",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::empty_docs",
                  "explanation": null
                },
                "level": "warning",
                "message": "empty doc comment",
                "spans": [
                  {
                    "byte_end": 2623,
                    "byte_start": 2620,
                    "column_end": 8,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\sampler_object.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 68,
                    "line_start": 68,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 5,
                        "text": "    ///"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: stripping a prefix manually\n  --> src\\version.rs:53:10\n   |\n53 |         (&version[10..], Api::GlEs)\n   |          ^^^^^^^^^^^^^^\n   |\nnote: the prefix was tested here\n  --> src\\version.rs:52:26\n   |\n52 |     let (version, api) = if version.starts_with(\"OpenGL ES \") {\n   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_strip\n   = note: `#[warn(clippy::manual_strip)]` on by default\nhelp: try using the `strip_prefix` method\n   |\n52 ~     let (version, api) = if let Some(<stripped>) = version.strip_prefix(\"OpenGL ES \") {\n53 ~         (<stripped>, Api::GlEs)\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the prefix was tested here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1581,
                        "byte_start": 1544,
                        "column_end": 63,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\version.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 52,
                        "line_start": 52,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 63,
                            "highlight_start": 26,
                            "text": "    let (version, api) = if version.starts_with(\"OpenGL ES \") {"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_strip",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::manual_strip)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using the `strip_prefix` method",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1581,
                        "byte_start": 1544,
                        "column_end": 63,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\version.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 52,
                        "line_start": 52,
                        "suggested_replacement": "if let Some(<stripped>) = version.strip_prefix(\"OpenGL ES \") ",
                        "suggestion_applicability": "HasPlaceholders",
                        "text": [
                          {
                            "highlight_end": 63,
                            "highlight_start": 26,
                            "text": "    let (version, api) = if version.starts_with(\"OpenGL ES \") {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1606,
                        "byte_start": 1592,
                        "column_end": 24,
                        "column_start": 10,
                        "expansion": null,
                        "file_name": "src\\version.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 53,
                        "line_start": 53,
                        "suggested_replacement": "<stripped>",
                        "suggestion_applicability": "HasPlaceholders",
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 10,
                            "text": "        (&version[10..], Api::GlEs)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_strip",
                  "explanation": null
                },
                "level": "warning",
                "message": "stripping a prefix manually",
                "spans": [
                  {
                    "byte_end": 1606,
                    "byte_start": 1592,
                    "column_end": 24,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\version.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 53,
                    "line_start": 53,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 10,
                        "text": "        (&version[10..], Api::GlEs)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: called `ok().expect()` on a `Result` value\n  --> src\\version.rs:69:9\n   |\n69 |         major.parse().ok().expect(\"failed to parse GL major version\"),\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: you can call `expect()` directly on the `Result`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ok_expect\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "you can call `expect()` directly on the `Result`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ok_expect",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::ok_expect",
                  "explanation": null
                },
                "level": "warning",
                "message": "called `ok().expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 2186,
                    "byte_start": 2125,
                    "column_end": 70,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\version.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 69,
                    "line_start": 69,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 70,
                        "highlight_start": 9,
                        "text": "        major.parse().ok().expect(\"failed to parse GL major version\"),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: called `ok().expect()` on a `Result` value\n  --> src\\version.rs:70:9\n   |\n70 |         minor.parse().ok().expect(\"failed to parse GL minor version\"),\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: you can call `expect()` directly on the `Result`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ok_expect\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "you can call `expect()` directly on the `Result`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ok_expect",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::ok_expect",
                  "explanation": null
                },
                "level": "warning",
                "message": "called `ok().expect()` on a `Result` value",
                "spans": [
                  {
                    "byte_end": 2257,
                    "byte_start": 2196,
                    "column_end": 70,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\version.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 70,
                    "line_start": 70,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 70,
                        "highlight_start": 9,
                        "text": "        minor.parse().ok().expect(\"failed to parse GL minor version\"),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: dereferencing a tuple pattern where every element takes a reference\n  --> src\\vertex_array_object.rs:72:49\n   |\n72 |         VertexAttributesSystem::purge_if(ctxt, |&(ref buffers, _)| {\n   |                                                 ^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrowed_reference\nhelp: try removing the `&` and `ref` parts\n   |\n72 -         VertexAttributesSystem::purge_if(ctxt, |&(ref buffers, _)| {\n72 +         VertexAttributesSystem::purge_if(ctxt, |(buffers, _)| {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrowed_reference",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try removing the `&` and `ref` parts",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2470,
                        "byte_start": 2466,
                        "column_end": 55,
                        "column_start": 51,
                        "expansion": null,
                        "file_name": "src\\vertex_array_object.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 72,
                        "line_start": 72,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 55,
                            "highlight_start": 51,
                            "text": "        VertexAttributesSystem::purge_if(ctxt, |&(ref buffers, _)| {"
                          }
                        ]
                      },
                      {
                        "byte_end": 2465,
                        "byte_start": 2464,
                        "column_end": 50,
                        "column_start": 49,
                        "expansion": null,
                        "file_name": "src\\vertex_array_object.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 72,
                        "line_start": 72,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 50,
                            "highlight_start": 49,
                            "text": "        VertexAttributesSystem::purge_if(ctxt, |&(ref buffers, _)| {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrowed_reference",
                  "explanation": null
                },
                "level": "warning",
                "message": "dereferencing a tuple pattern where every element takes a reference",
                "spans": [
                  {
                    "byte_end": 2481,
                    "byte_start": 2464,
                    "column_end": 66,
                    "column_start": 49,
                    "expansion": null,
                    "file_name": "src\\vertex_array_object.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 72,
                    "line_start": 72,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 49,
                        "text": "        VertexAttributesSystem::purge_if(ctxt, |&(ref buffers, _)| {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: dereferencing a tuple pattern where every element takes a reference\n   --> src\\vertex_array_object.rs:263:13\n    |\n263 |         for &(_, ref bindings, _, _, _) in vertex_buffers {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrowed_reference\nhelp: try removing the `&` and `ref` parts\n    |\n263 -         for &(_, ref bindings, _, _, _) in vertex_buffers {\n263 +         for (_, bindings, _, _, _) in vertex_buffers {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrowed_reference",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try removing the `&` and `ref` parts",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9603,
                        "byte_start": 9599,
                        "column_end": 22,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\vertex_array_object.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 263,
                        "line_start": 263,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 22,
                            "highlight_start": 18,
                            "text": "        for &(_, ref bindings, _, _, _) in vertex_buffers {"
                          }
                        ]
                      },
                      {
                        "byte_end": 9595,
                        "byte_start": 9594,
                        "column_end": 14,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\vertex_array_object.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 263,
                        "line_start": 263,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 14,
                            "highlight_start": 13,
                            "text": "        for &(_, ref bindings, _, _, _) in vertex_buffers {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrowed_reference",
                  "explanation": null
                },
                "level": "warning",
                "message": "dereferencing a tuple pattern where every element takes a reference",
                "spans": [
                  {
                    "byte_end": 9621,
                    "byte_start": 9594,
                    "column_end": 40,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\vertex_array_object.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 263,
                    "line_start": 263,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 13,
                        "text": "        for &(_, ref bindings, _, _, _) in vertex_buffers {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: useless conversion to the same type: `std::collections::hash_map::Iter<'_, std::string::String, program::reflection::Attribute>`\n   --> src\\vertex_array_object.rs:274:31\n    |\n274 |                         match program.attributes().into_iter()\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `program.attributes()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::useless_conversion)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing `.into_iter()`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10182,
                        "byte_start": 10150,
                        "column_end": 63,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\vertex_array_object.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 274,
                        "line_start": 274,
                        "suggested_replacement": "program.attributes()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 63,
                            "highlight_start": 31,
                            "text": "                        match program.attributes().into_iter()"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::useless_conversion",
                  "explanation": null
                },
                "level": "warning",
                "message": "useless conversion to the same type: `std::collections::hash_map::Iter<'_, std::string::String, program::reflection::Attribute>`",
                "spans": [
                  {
                    "byte_end": 10182,
                    "byte_start": 10150,
                    "column_end": 63,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "src\\vertex_array_object.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 274,
                    "line_start": 274,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 63,
                        "highlight_start": 31,
                        "text": "                        match program.attributes().into_iter()"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: dereferencing a tuple pattern where every element takes a reference\n   --> src\\vertex_array_object.rs:295:13\n    |\n295 |         for &(_, ref bindings, _, _, _) in vertex_buffers {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrowed_reference\nhelp: try removing the `&` and `ref` parts\n    |\n295 -         for &(_, ref bindings, _, _, _) in vertex_buffers {\n295 +         for (_, bindings, _, _, _) in vertex_buffers {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrowed_reference",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try removing the `&` and `ref` parts",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11075,
                        "byte_start": 11071,
                        "column_end": 22,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\vertex_array_object.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 295,
                        "line_start": 295,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 22,
                            "highlight_start": 18,
                            "text": "        for &(_, ref bindings, _, _, _) in vertex_buffers {"
                          }
                        ]
                      },
                      {
                        "byte_end": 11067,
                        "byte_start": 11066,
                        "column_end": 14,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\vertex_array_object.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 295,
                        "line_start": 295,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 14,
                            "highlight_start": 13,
                            "text": "        for &(_, ref bindings, _, _, _) in vertex_buffers {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrowed_reference",
                  "explanation": null
                },
                "level": "warning",
                "message": "dereferencing a tuple pattern where every element takes a reference",
                "spans": [
                  {
                    "byte_end": 11093,
                    "byte_start": 11066,
                    "column_end": 40,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\vertex_array_object.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 295,
                    "line_start": 295,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 13,
                        "text": "        for &(_, ref bindings, _, _, _) in vertex_buffers {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this pattern takes a reference on something that is being dereferenced\n   --> src\\vertex_array_object.rs:307:14\n    |\n307 |         for (&ref name, attribute) in program.attributes() {\n    |              ^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrowed_reference\nhelp: try removing the `&ref` part\n    |\n307 -         for (&ref name, attribute) in program.attributes() {\n307 +         for (name, attribute) in program.attributes() {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrowed_reference",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try removing the `&ref` part",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11608,
                        "byte_start": 11603,
                        "column_end": 19,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\vertex_array_object.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 307,
                        "line_start": 307,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 19,
                            "highlight_start": 14,
                            "text": "        for (&ref name, attribute) in program.attributes() {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrowed_reference",
                  "explanation": null
                },
                "level": "warning",
                "message": "this pattern takes a reference on something that is being dereferenced",
                "spans": [
                  {
                    "byte_end": 11612,
                    "byte_start": 11603,
                    "column_end": 23,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "src\\vertex_array_object.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 307,
                    "line_start": 307,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 14,
                        "text": "        for (&ref name, attribute) in program.attributes() {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: dereferencing a tuple pattern where every element takes a reference\n   --> src\\vertex_array_object.rs:309:17\n    |\n309 |             for &(_, ref bindings, _, _, _) in vertex_buffers {\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrowed_reference\nhelp: try removing the `&` and `ref` parts\n    |\n309 -             for &(_, ref bindings, _, _, _) in vertex_buffers {\n309 +             for (_, bindings, _, _, _) in vertex_buffers {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrowed_reference",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try removing the `&` and `ref` parts",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11711,
                        "byte_start": 11707,
                        "column_end": 26,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\vertex_array_object.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 309,
                        "line_start": 309,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 22,
                            "text": "            for &(_, ref bindings, _, _, _) in vertex_buffers {"
                          }
                        ]
                      },
                      {
                        "byte_end": 11703,
                        "byte_start": 11702,
                        "column_end": 18,
                        "column_start": 17,
                        "expansion": null,
                        "file_name": "src\\vertex_array_object.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 309,
                        "line_start": 309,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 18,
                            "highlight_start": 17,
                            "text": "            for &(_, ref bindings, _, _, _) in vertex_buffers {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrowed_reference",
                  "explanation": null
                },
                "level": "warning",
                "message": "dereferencing a tuple pattern where every element takes a reference",
                "spans": [
                  {
                    "byte_end": 11729,
                    "byte_start": 11702,
                    "column_end": 44,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\vertex_array_object.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 309,
                    "line_start": 309,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 44,
                        "highlight_start": 17,
                        "text": "            for &(_, ref bindings, _, _, _) in vertex_buffers {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\vertex_array_object.rs:316:17\n    |\n316 |                 panic!(\"The program attribute `{}` is missing in the vertex bindings\", name);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n316 -                 panic!(\"The program attribute `{}` is missing in the vertex bindings\", name);\n316 +                 panic!(\"The program attribute `{name}` is missing in the vertex bindings\");\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12051,
                        "byte_start": 12051,
                        "column_end": 49,
                        "column_start": 49,
                        "expansion": null,
                        "file_name": "src\\vertex_array_object.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 316,
                        "line_start": 316,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 49,
                            "text": "                panic!(\"The program attribute `{}` is missing in the vertex bindings\", name);"
                          }
                        ]
                      },
                      {
                        "byte_end": 12094,
                        "byte_start": 12088,
                        "column_end": 92,
                        "column_start": 86,
                        "expansion": null,
                        "file_name": "src\\vertex_array_object.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 316,
                        "line_start": 316,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 92,
                            "highlight_start": 86,
                            "text": "                panic!(\"The program attribute `{}` is missing in the vertex bindings\", name);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 12095,
                    "byte_start": 12019,
                    "column_end": 93,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\vertex_array_object.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 316,
                    "line_start": 316,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 93,
                        "highlight_start": 17,
                        "text": "                panic!(\"The program attribute `{}` is missing in the vertex bindings\", name);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\vertex_array_object.rs:342:18\n    |\n342 |         bind_vao(&mut ctxt, id);\n    |                  ^^^^^^^^^ help: change this to: `ctxt`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 13040,
                        "byte_start": 13031,
                        "column_end": 27,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\vertex_array_object.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 342,
                        "line_start": 342,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 18,
                            "text": "        bind_vao(&mut ctxt, id);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 13040,
                    "byte_start": 13031,
                    "column_end": 27,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "src\\vertex_array_object.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 342,
                    "line_start": 342,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 18,
                        "text": "        bind_vao(&mut ctxt, id);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\vertex_array_object.rs:346:48\n    |\n346 |             index_buffer.bind_to_element_array(&mut ctxt);\n    |                                                ^^^^^^^^^ help: change this to: `ctxt`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 13187,
                        "byte_start": 13178,
                        "column_end": 57,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\vertex_array_object.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 346,
                        "line_start": 346,
                        "suggested_replacement": "ctxt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 57,
                            "highlight_start": 48,
                            "text": "            index_buffer.bind_to_element_array(&mut ctxt);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 13187,
                    "byte_start": 13178,
                    "column_end": 57,
                    "column_start": 48,
                    "expansion": null,
                    "file_name": "src\\vertex_array_object.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 346,
                    "line_start": 346,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 48,
                        "text": "            index_buffer.bind_to_element_array(&mut ctxt);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this pattern creates a reference to a reference\n   --> src\\vertex_array_object.rs:263:18\n    |\n263 |         for &(_, ref bindings, _, _, _) in vertex_buffers {\n    |                  ^^^^^^^^^^^^ help: try: `bindings`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9611,
                        "byte_start": 9599,
                        "column_end": 30,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\vertex_array_object.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 263,
                        "line_start": 263,
                        "suggested_replacement": "bindings",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 18,
                            "text": "        for &(_, ref bindings, _, _, _) in vertex_buffers {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this pattern creates a reference to a reference",
                "spans": [
                  {
                    "byte_end": 9611,
                    "byte_start": 9599,
                    "column_end": 30,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "src\\vertex_array_object.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 263,
                    "line_start": 263,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 18,
                        "text": "        for &(_, ref bindings, _, _, _) in vertex_buffers {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this pattern creates a reference to a reference\n   --> src\\vertex_array_object.rs:295:18\n    |\n295 |         for &(_, ref bindings, _, _, _) in vertex_buffers {\n    |                  ^^^^^^^^^^^^ help: try: `bindings`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11083,
                        "byte_start": 11071,
                        "column_end": 30,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\vertex_array_object.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 295,
                        "line_start": 295,
                        "suggested_replacement": "bindings",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 18,
                            "text": "        for &(_, ref bindings, _, _, _) in vertex_buffers {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this pattern creates a reference to a reference",
                "spans": [
                  {
                    "byte_end": 11083,
                    "byte_start": 11071,
                    "column_end": 30,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "src\\vertex_array_object.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 295,
                    "line_start": 295,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 18,
                        "text": "        for &(_, ref bindings, _, _, _) in vertex_buffers {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this pattern creates a reference to a reference\n   --> src\\vertex_array_object.rs:309:22\n    |\n309 |             for &(_, ref bindings, _, _, _) in vertex_buffers {\n    |                      ^^^^^^^^^^^^ help: try: `bindings`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11719,
                        "byte_start": 11707,
                        "column_end": 34,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\vertex_array_object.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 309,
                        "line_start": 309,
                        "suggested_replacement": "bindings",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 34,
                            "highlight_start": 22,
                            "text": "            for &(_, ref bindings, _, _, _) in vertex_buffers {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this pattern creates a reference to a reference",
                "spans": [
                  {
                    "byte_end": 11719,
                    "byte_start": 11707,
                    "column_end": 34,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\vertex_array_object.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 309,
                    "line_start": 309,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 22,
                        "text": "            for &(_, ref bindings, _, _, _) in vertex_buffers {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: useless conversion to the same type: `std::collections::hash_map::Iter<'_, std::string::String, program::reflection::Attribute>`\n   --> src\\vertex_array_object.rs:564:23\n    |\n564 |                 match program.attributes().into_iter()\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `program.attributes()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing `.into_iter()`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 22606,
                        "byte_start": 22574,
                        "column_end": 55,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "src\\vertex_array_object.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 564,
                        "line_start": 564,
                        "suggested_replacement": "program.attributes()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 55,
                            "highlight_start": 23,
                            "text": "                match program.attributes().into_iter()"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::useless_conversion",
                  "explanation": null
                },
                "level": "warning",
                "message": "useless conversion to the same type: `std::collections::hash_map::Iter<'_, std::string::String, program::reflection::Attribute>`",
                "spans": [
                  {
                    "byte_end": 22606,
                    "byte_start": 22574,
                    "column_end": 55,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\vertex_array_object.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 564,
                    "line_start": 564,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 55,
                        "highlight_start": 23,
                        "text": "                match program.attributes().into_iter()"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: manual implementation of an assign operation\n   --> src\\lib.rs:562:13\n    |\n562 |             mask = mask | gl::COLOR_BUFFER_BIT;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `mask |= gl::COLOR_BUFFER_BIT`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::assign_op_pattern)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace it with",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 21856,
                        "byte_start": 21822,
                        "column_end": 47,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 562,
                        "line_start": 562,
                        "suggested_replacement": "mask |= gl::COLOR_BUFFER_BIT",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 13,
                            "text": "            mask = mask | gl::COLOR_BUFFER_BIT;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::assign_op_pattern",
                  "explanation": null
                },
                "level": "warning",
                "message": "manual implementation of an assign operation",
                "spans": [
                  {
                    "byte_end": 21856,
                    "byte_start": 21822,
                    "column_end": 47,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 562,
                    "line_start": 562,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 47,
                        "highlight_start": 13,
                        "text": "            mask = mask | gl::COLOR_BUFFER_BIT;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: manual implementation of an assign operation\n   --> src\\lib.rs:565:13\n    |\n565 |             mask = mask | gl::DEPTH_BUFFER_BIT;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `mask |= gl::DEPTH_BUFFER_BIT`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace it with",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 21938,
                        "byte_start": 21904,
                        "column_end": 47,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 565,
                        "line_start": 565,
                        "suggested_replacement": "mask |= gl::DEPTH_BUFFER_BIT",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 13,
                            "text": "            mask = mask | gl::DEPTH_BUFFER_BIT;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::assign_op_pattern",
                  "explanation": null
                },
                "level": "warning",
                "message": "manual implementation of an assign operation",
                "spans": [
                  {
                    "byte_end": 21938,
                    "byte_start": 21904,
                    "column_end": 47,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 565,
                    "line_start": 565,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 47,
                        "highlight_start": 13,
                        "text": "            mask = mask | gl::DEPTH_BUFFER_BIT;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: manual implementation of an assign operation\n   --> src\\lib.rs:568:13\n    |\n568 |             mask = mask | gl::STENCIL_BUFFER_BIT;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `mask |= gl::STENCIL_BUFFER_BIT`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace it with",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 22024,
                        "byte_start": 21988,
                        "column_end": 49,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 568,
                        "line_start": 568,
                        "suggested_replacement": "mask |= gl::STENCIL_BUFFER_BIT",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 13,
                            "text": "            mask = mask | gl::STENCIL_BUFFER_BIT;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::assign_op_pattern",
                  "explanation": null
                },
                "level": "warning",
                "message": "manual implementation of an assign operation",
                "spans": [
                  {
                    "byte_end": 22024,
                    "byte_start": 21988,
                    "column_end": 49,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 568,
                    "line_start": 568,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 13,
                        "text": "            mask = mask | gl::STENCIL_BUFFER_BIT;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src\\lib.rs:944:58\n    |\n944 |         let src_rect = Rect { left: 0, bottom: 0, width: src_dim.0 as u32, height: src_dim.1 as u32 };\n    |                                                          ^^^^^^^^^^^^^^^^ help: try: `src_dim.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 49324,
                        "byte_start": 49308,
                        "column_end": 74,
                        "column_start": 58,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 944,
                        "line_start": 944,
                        "suggested_replacement": "src_dim.0",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 74,
                            "highlight_start": 58,
                            "text": "        let src_rect = Rect { left: 0, bottom: 0, width: src_dim.0 as u32, height: src_dim.1 as u32 };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`u32` -> `u32`)",
                "spans": [
                  {
                    "byte_end": 49324,
                    "byte_start": 49308,
                    "column_end": 74,
                    "column_start": 58,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 944,
                    "line_start": 944,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 74,
                        "highlight_start": 58,
                        "text": "        let src_rect = Rect { left: 0, bottom: 0, width: src_dim.0 as u32, height: src_dim.1 as u32 };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src\\lib.rs:944:84\n    |\n944 |         let src_rect = Rect { left: 0, bottom: 0, width: src_dim.0 as u32, height: src_dim.1 as u32 };\n    |                                                                                    ^^^^^^^^^^^^^^^^ help: try: `src_dim.1`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 49350,
                        "byte_start": 49334,
                        "column_end": 100,
                        "column_start": 84,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 944,
                        "line_start": 944,
                        "suggested_replacement": "src_dim.1",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 100,
                            "highlight_start": 84,
                            "text": "        let src_rect = Rect { left: 0, bottom: 0, width: src_dim.0 as u32, height: src_dim.1 as u32 };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`u32` -> `u32`)",
                "spans": [
                  {
                    "byte_end": 49350,
                    "byte_start": 49334,
                    "column_end": 100,
                    "column_start": 84,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 944,
                    "line_start": 944,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 100,
                        "highlight_start": 84,
                        "text": "        let src_rect = Rect { left: 0, bottom: 0, width: src_dim.0 as u32, height: src_dim.1 as u32 };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src\\lib.rs:952:58\n    |\n952 |         let src_rect = Rect { left: 0, bottom: 0, width: src_dim.0 as u32, height: src_dim.1 as u32 };\n    |                                                          ^^^^^^^^^^^^^^^^ help: try: `src_dim.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 49724,
                        "byte_start": 49708,
                        "column_end": 74,
                        "column_start": 58,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 952,
                        "line_start": 952,
                        "suggested_replacement": "src_dim.0",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 74,
                            "highlight_start": 58,
                            "text": "        let src_rect = Rect { left: 0, bottom: 0, width: src_dim.0 as u32, height: src_dim.1 as u32 };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`u32` -> `u32`)",
                "spans": [
                  {
                    "byte_end": 49724,
                    "byte_start": 49708,
                    "column_end": 74,
                    "column_start": 58,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 952,
                    "line_start": 952,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 74,
                        "highlight_start": 58,
                        "text": "        let src_rect = Rect { left: 0, bottom: 0, width: src_dim.0 as u32, height: src_dim.1 as u32 };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src\\lib.rs:952:84\n    |\n952 |         let src_rect = Rect { left: 0, bottom: 0, width: src_dim.0 as u32, height: src_dim.1 as u32 };\n    |                                                                                    ^^^^^^^^^^^^^^^^ help: try: `src_dim.1`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 49750,
                        "byte_start": 49734,
                        "column_end": 100,
                        "column_start": 84,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 952,
                        "line_start": 952,
                        "suggested_replacement": "src_dim.1",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 100,
                            "highlight_start": 84,
                            "text": "        let src_rect = Rect { left: 0, bottom: 0, width: src_dim.0 as u32, height: src_dim.1 as u32 };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`u32` -> `u32`)",
                "spans": [
                  {
                    "byte_end": 49750,
                    "byte_start": 49734,
                    "column_end": 100,
                    "column_start": 84,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 952,
                    "line_start": 952,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 100,
                        "highlight_start": 84,
                        "text": "        let src_rect = Rect { left: 0, bottom: 0, width: src_dim.0 as u32, height: src_dim.1 as u32 };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> src\\lib.rs:1168:17\n     |\n1168 | /                 write!(\n1169 | |                     fmt,\n1170 | |                     \"{}, got: {:?}, expected: {:?}\",\n1171 | |                     desc,\n1172 | |                     name,\n1173 | |                     expected,\n1174 | |                 ),\n     | |_________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 58833,
                        "byte_start": 58833,
                        "column_end": 23,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1170,
                        "line_start": 1170,
                        "suggested_replacement": "desc",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 23,
                            "text": "                    \"{}, got: {:?}, expected: {:?}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 58842,
                        "byte_start": 58842,
                        "column_end": 32,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1170,
                        "line_start": 1170,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 32,
                            "text": "                    \"{}, got: {:?}, expected: {:?}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 58858,
                        "byte_start": 58858,
                        "column_end": 48,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1170,
                        "line_start": 1170,
                        "suggested_replacement": "expected",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 48,
                            "text": "                    \"{}, got: {:?}, expected: {:?}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 58888,
                        "byte_start": 58862,
                        "column_end": 25,
                        "column_start": 52,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1171,
                        "line_start": 1170,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 52,
                            "text": "                    \"{}, got: {:?}, expected: {:?}\","
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "                    desc,"
                          }
                        ]
                      },
                      {
                        "byte_end": 58914,
                        "byte_start": 58888,
                        "column_end": 25,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1172,
                        "line_start": 1171,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 25,
                            "text": "                    desc,"
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "                    name,"
                          }
                        ]
                      },
                      {
                        "byte_end": 58944,
                        "byte_start": 58914,
                        "column_end": 29,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1173,
                        "line_start": 1172,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 25,
                            "text": "                    name,"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "                    expected,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 58963,
                    "byte_start": 58778,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1174,
                    "line_start": 1168,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 17,
                        "text": "                write!("
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                    fmt,"
                      },
                      {
                        "highlight_end": 53,
                        "highlight_start": 1,
                        "text": "                    \"{}, got: {:?}, expected: {:?}\","
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                    desc,"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                    name,"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                    expected,"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                ),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> src\\lib.rs:1176:17\n     |\n1176 | /                 write!(\n1177 | |                     fmt,\n1178 | |                     \"{}: {}\",\n1179 | |                     desc,\n1180 | |                     name,\n1181 | |                 ),\n     | |_________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 59081,
                        "byte_start": 59081,
                        "column_end": 23,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1178,
                        "line_start": 1178,
                        "suggested_replacement": "desc",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 23,
                            "text": "                    \"{}: {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 59085,
                        "byte_start": 59085,
                        "column_end": 27,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1178,
                        "line_start": 1178,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 27,
                            "text": "                    \"{}: {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 59113,
                        "byte_start": 59087,
                        "column_end": 25,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1179,
                        "line_start": 1178,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 29,
                            "text": "                    \"{}: {}\","
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "                    desc,"
                          }
                        ]
                      },
                      {
                        "byte_end": 59139,
                        "byte_start": 59113,
                        "column_end": 25,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1180,
                        "line_start": 1179,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 25,
                            "text": "                    desc,"
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "                    name,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 59158,
                    "byte_start": 59026,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1181,
                    "line_start": 1176,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 17,
                        "text": "                write!("
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                    fmt,"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                    \"{}: {}\","
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                    desc,"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                    name,"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                ),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> src\\lib.rs:1183:17\n     |\n1183 | /                 write!(\n1184 | |                     fmt,\n1185 | |                     \"{}: {}\",\n1186 | |                     desc,\n1187 | |                     name,\n1188 | |                 ),\n     | |_________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 59275,
                        "byte_start": 59275,
                        "column_end": 23,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1185,
                        "line_start": 1185,
                        "suggested_replacement": "desc",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 23,
                            "text": "                    \"{}: {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 59279,
                        "byte_start": 59279,
                        "column_end": 27,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1185,
                        "line_start": 1185,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 27,
                            "text": "                    \"{}: {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 59307,
                        "byte_start": 59281,
                        "column_end": 25,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1186,
                        "line_start": 1185,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 29,
                            "text": "                    \"{}: {}\","
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "                    desc,"
                          }
                        ]
                      },
                      {
                        "byte_end": 59333,
                        "byte_start": 59307,
                        "column_end": 25,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1187,
                        "line_start": 1186,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 25,
                            "text": "                    desc,"
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "                    name,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 59352,
                    "byte_start": 59220,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1188,
                    "line_start": 1183,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 17,
                        "text": "                write!("
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                    fmt,"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                    \"{}: {}\","
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                    desc,"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                    name,"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                ),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpr0nom9e5/glium-0.36.0#glium@0.36.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glium",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpr0nom9e5\\glium-0.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> src\\lib.rs:1190:17\n     |\n1190 | /                 write!(\n1191 | |                     fmt,\n1192 | |                     \"{}: {}, caused by {}\",\n1193 | |                     desc,\n1194 | |                     name,\n1195 | |                     err,\n1196 | |                 ),\n     | |_________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 59481,
                        "byte_start": 59481,
                        "column_end": 23,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1192,
                        "line_start": 1192,
                        "suggested_replacement": "desc",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 23,
                            "text": "                    \"{}: {}, caused by {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 59485,
                        "byte_start": 59485,
                        "column_end": 27,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1192,
                        "line_start": 1192,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 27,
                            "text": "                    \"{}: {}, caused by {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 59499,
                        "byte_start": 59499,
                        "column_end": 41,
                        "column_start": 41,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1192,
                        "line_start": 1192,
                        "suggested_replacement": "err",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 41,
                            "text": "                    \"{}: {}, caused by {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 59527,
                        "byte_start": 59501,
                        "column_end": 25,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1193,
                        "line_start": 1192,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 43,
                            "text": "                    \"{}: {}, caused by {}\","
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "                    desc,"
                          }
                        ]
                      },
                      {
                        "byte_end": 59553,
                        "byte_start": 59527,
                        "column_end": 25,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1194,
                        "line_start": 1193,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 25,
                            "text": "                    desc,"
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "                    name,"
                          }
                        ]
                      },
                      {
                        "byte_end": 59578,
                        "byte_start": 59553,
                        "column_end": 24,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1195,
                        "line_start": 1194,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 25,
                            "text": "                    name,"
                          },
                          {
                            "highlight_end": 24,
                            "highlight_start": 1,
                            "text": "                    err,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 59597,
                    "byte_start": 59426,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1196,
                    "line_start": 1190,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 17,
                        "text": "                write!("
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                    fmt,"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "                    \"{}: {}, caused by {}\","
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                    desc,"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                    name,"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                    err,"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                ),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "build-finished",
              "success": false
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 295
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": true,
              "count": 1,
              "list": [
                {
                  "advisory": {
                    "id": "RUSTSEC-2024-0402",
                    "package": "hashbrown",
                    "title": "Borsh serialization of HashMap is non-canonical",
                    "description": "The borsh serialization of the HashMap did not follow the borsh specification.\nIt potentially produced non-canonical encodings dependent on insertion order.\nIt also did not perform canonicty checks on decoding.\n\nThis can result in consensus splits and cause equivalent objects to be\nconsidered distinct.\n\nThis was patched in 0.15.1.",
                    "date": "2024-10-11",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [
                      "borsh"
                    ],
                    "cvss": null,
                    "informational": null,
                    "references": [],
                    "source": null,
                    "url": "https://github.com/rust-lang/hashbrown/issues/576",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=0.15.1"
                    ],
                    "unaffected": [
                      "<0.15.0"
                    ]
                  },
                  "affected": {
                    "arch": [],
                    "os": [],
                    "functions": {
                      "hashbrown::HashMap::borsh_serialize": [
                        "=0.15.0"
                      ]
                    }
                  },
                  "package": {
                    "name": "hashbrown",
                    "version": "0.15.0",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "1e087f84d4f86bf4b218b927129862374b72199ae7d8657835f1e89000eea4fb",
                    "replace": null
                  }
                }
              ]
            },
            "warnings": {
              "unmaintained": [
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "paste",
                    "version": "1.0.15",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a",
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2024-0436",
                    "package": "paste",
                    "title": "paste - no longer maintained",
                    "description": "The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \nthat this project is not longer maintained as well as archived the repository",
                    "date": "2024-10-07",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/dtolnay/paste",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                }
              ]
            }
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "glium",
          "version": "0.36.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/glium/latest/glium/all.html \"show sidebar\")\n# Crate gliumCopy item path\n[Settings](https://docs.rs/glium/latest/settings.html)\n[Help](https://docs.rs/glium/latest/help.html)\nSummary[Source](https://docs.rs/glium/latest/src/glium/lib.rs.html#1-1407)\nExpand description\nEasy-to-use, high-level, OpenGL3+ wrapper.\nGlium is based on glutin - a cross-platform crate for building an OpenGL window and handling application events.\nGlium provides a [`Display`](https://docs.rs/glium/latest/glium/backend/glutin/struct.Display.html \"struct glium::backend::glutin::Display\") which uses `glutin` for the Window and its associated GL Context.\n## [\u00a7](https://docs.rs/glium/latest/glium/#initialization)Initialization\nThe initialisation of a simple glium display occurs in two steps.\n```\nextern crate glium;\n// Use the re-exported winit dependency to avoid version mismatches.\n// Requires the `simple_window_builder` feature.\nuse glium::winit;\nfn main() {\n  // 1. The **winit::EventLoop** for handling events.\n  let event_loop = winit::event_loop::EventLoopBuilder::new().build().unwrap();\n  // 2. Create a glutin context and glium Display\n  let (window, display) = glium::backend::glutin::SimpleWindowBuilder::new().build(&event_loop);\n}\n```\n\nThe `display` object is the most important object of this library and is used when you build buffers, textures, etc. and when you draw.\nYou can clone it and pass it around. However it doesn\u2019t implement the `Send` and `Sync` traits, meaning that you can\u2019t pass it to another thread.\nThe display has ownership of both the window and context, and also provides some methods related to domains such as events handling.\n## [\u00a7](https://docs.rs/glium/latest/glium/#overview)Overview\nOpenGL is similar to drawing software: you draw something, then draw over it, then over it again, etc. until you are satisfied of the result.\nOnce you have a `display`, you can call `let mut frame = display.draw();` to start drawing. This `frame` object implements [the `Surface` trait](https://docs.rs/glium/latest/glium/trait.Surface.html \"trait glium::Surface\") and provides some functions such as `clear_color`, but also allows you to draw with the rendering pipeline.\nIn order to draw something, you will need to pass:\n  * A source of vertices (see the [`vertex`](https://docs.rs/glium/latest/glium/vertex/index.html \"mod glium::vertex\") module)\n  * A source of indices (see the [`index`](https://docs.rs/glium/latest/glium/index/index.html \"mod glium::index\") module)\n  * A program that contains the shader that the GPU will execute (see the [`program`](https://docs.rs/glium/latest/glium/program/index.html \"mod glium::program\") module)\n  * A list of uniforms for the program (see the [`uniforms`](https://docs.rs/glium/latest/glium/uniforms/index.html \"mod glium::uniforms\") module)\n  * Draw parameters to customize the drawing process (see the [`draw_parameters`](https://docs.rs/glium/latest/glium/draw_parameters/index.html \"mod glium::draw_parameters\") module)\n\n\nOnce you have finished drawing, you can call `frame.finish()` to swap buffers and present the result to the user.\n## [\u00a7](https://docs.rs/glium/latest/glium/#opengl-equivalents-in-glium)OpenGL equivalents in glium\n  * **Bind points** : Glium automatically binds and unbinds buffers, textures, etc. in an optimized way.\n  * **Buffers** : Buffers are strongly typed and can be used through `vertex::VertexBuffer`, `index::IndexBuffer` or `uniforms::UniformBuffer`.\n  * **Debug output** : If you compile in debug mode, glium registers a debug output callback and panics if an OpenGL error happens.\n  * **Framebuffer Objects** : FBOs are automatically managed by glium and are stored in the `Context` object. You can specify the attachments that you wish with the `framebuffer` module.\n  * **Instancing** : Instancing is done either by passing a `vertex::EmptyInstanceAttributes` marker or one or several references to vertex buffers wrapped inside a `PerInstance` struct. See the `vertex` module for more infos.\n  * **Memory barriers** : Calling `glMemoryBarrier` is automatically handled by glium, however you still need to call `memoryBarrier()` in your GLSL code in some situations.\n  * **Programs** : See the `program` module.\n  * **Query objects** : The corresponding structs are in the `draw_parameters` module. They are passed as draw parameters.\n  * **Renderbuffer** : See the `framebuffer` module.\n  * **Render to texture** : If you just want to draw on a texture, you can call `texture.as_surface()`. For more advanced options, see the `framebuffer` module.\n  * **Samplers** : Samplers are automatically managed by glium and are stored in the `Context` object. You can specify how a texture should be sampled by using a `Sampler` dummy object in the `uniforms` module.\n  * **Shaders** : You can\u2019t manually create individual shaders. Instead you must create whole programs at once.\n  * **Textures** : Textures are strongly typed and are found in the `texture` module.\n  * **Uniform blocks** : If your program uses uniform blocks, you must pass a reference to a uniform buffer for the name of the block when drawing.\n  * **Vertex array objects** : VAOs are automatically managed by glium if the backend supports them.\n\n\n## Re-exports[\u00a7](https://docs.rs/glium/latest/glium/#reexports)\n\n`pub use crate::draw_parameters::Blend[](https://docs.rs/glium/latest/glium/draw_parameters/struct.Blend.html \"struct glium::draw_parameters::Blend\");`\n\n\n`pub use crate::draw_parameters::BlendingFunction[](https://docs.rs/glium/latest/glium/draw_parameters/enum.BlendingFunction.html \"enum glium::draw_parameters::BlendingFunction\");`\n\n\n`pub use crate::draw_parameters::LinearBlendingFactor[](https://docs.rs/glium/latest/glium/draw_parameters/enum.LinearBlendingFactor.html \"enum glium::draw_parameters::LinearBlendingFactor\");`\n\n\n`pub use crate::draw_parameters::BackfaceCullingMode[](https://docs.rs/glium/latest/glium/draw_parameters/enum.BackfaceCullingMode.html \"enum glium::draw_parameters::BackfaceCullingMode\");`\n\n\n`pub use crate::draw_parameters::Depth[](https://docs.rs/glium/latest/glium/draw_parameters/struct.Depth.html \"struct glium::draw_parameters::Depth\");`\n\n\n`pub use crate::draw_parameters::DepthTest[](https://docs.rs/glium/latest/glium/draw_parameters/enum.DepthTest.html \"enum glium::draw_parameters::DepthTest\");`\n\n\n`pub use crate::draw_parameters::PolygonMode[](https://docs.rs/glium/latest/glium/draw_parameters/enum.PolygonMode.html \"enum glium::draw_parameters::PolygonMode\");`\n\n\n`pub use crate::draw_parameters::DrawParameters[](https://docs.rs/glium/latest/glium/draw_parameters/struct.DrawParameters.html \"struct glium::draw_parameters::DrawParameters\");`\n\n\n`pub use crate::draw_parameters::StencilTest[](https://docs.rs/glium/latest/glium/draw_parameters/enum.StencilTest.html \"enum glium::draw_parameters::StencilTest\");`\n\n\n`pub use crate::draw_parameters::StencilOperation[](https://docs.rs/glium/latest/glium/draw_parameters/enum.StencilOperation.html \"enum glium::draw_parameters::StencilOperation\");`\n\n\n`pub use crate::draw_parameters::Smooth[](https://docs.rs/glium/latest/glium/draw_parameters/enum.Smooth.html \"enum glium::draw_parameters::Smooth\");`\n\n\n`pub use crate::index::IndexBuffer[](https://docs.rs/glium/latest/glium/index/struct.IndexBuffer.html \"struct glium::index::IndexBuffer\");`\n\n\n`pub use crate::vertex::VertexBuffer[](https://docs.rs/glium/latest/glium/vertex/struct.VertexBuffer.html \"struct glium::vertex::VertexBuffer\");`\n\n\n`pub use crate::vertex::Vertex[](https://docs.rs/glium/latest/glium/vertex/trait.Vertex.html \"trait glium::vertex::Vertex\");`\n\n\n`pub use crate::vertex::VertexFormat[](https://docs.rs/glium/latest/glium/vertex/type.VertexFormat.html \"type glium::vertex::VertexFormat\");`\n\n\n`pub use crate::program::Program[](https://docs.rs/glium/latest/glium/program/struct.Program.html \"struct glium::program::Program\");`\n\n\n`pub use crate::program::ProgramCreationError[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::program::ProgramCreationError::CompilationError[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::program::ProgramCreationError::LinkingError[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::program::ProgramCreationError::ShaderTypeNotSupported[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::texture::Texture2d[](https://docs.rs/glium/latest/glium/texture/struct.Texture2d.html \"struct glium::texture::Texture2d\");`\n\n\n`pub use crate::backend::glutin::Display[](https://docs.rs/glium/latest/glium/backend/glutin/struct.Display.html \"struct glium::backend::glutin::Display\");`\n\n\n`pub use crate::backend::glutin::glutin[](https://docs.rs/glutin/0.32.3/x86_64-unknown-linux-gnu/glutin/index.html \"mod glutin\");`\n\n\n`pub use crate::backend::winit[](https://docs.rs/winit/0.30.10/x86_64-unknown-linux-gnu/winit/index.html \"mod winit\");`\n\n## Modules[\u00a7](https://docs.rs/glium/latest/glium/#modules)\n\n[backend](https://docs.rs/glium/latest/glium/backend/index.html \"mod glium::backend\")\n    The `backend` module allows one to link between glium and the OpenGL context..\n\n[buffer](https://docs.rs/glium/latest/glium/buffer/index.html \"mod glium::buffer\")\n    A buffer is a memory location accessible to the video card.\n\n[debug](https://docs.rs/glium/latest/glium/debug/index.html \"mod glium::debug\")\n\n\n[draw_parameters](https://docs.rs/glium/latest/glium/draw_parameters/index.html \"mod glium::draw_parameters\")\n    Describes miscellaneous parameters to be used when drawing.\n\n[field](https://docs.rs/glium/latest/glium/field/index.html \"mod glium::field\")\n    Field utils\n\n[framebuffer](https://docs.rs/glium/latest/glium/framebuffer/index.html \"mod glium::framebuffer\")\n    Framebuffers allow you to customize the color, depth and stencil buffers you will draw on.\n\n[index](https://docs.rs/glium/latest/glium/index/index.html \"mod glium::index\")\n    In order to draw, you need to provide a way for the video card to know how to link primitives together.\n\n[memory_object](https://docs.rs/glium/latest/glium/memory_object/index.html \"mod glium::memory_object\")\n    Contains everything related to external API memory objects.\n\n[pixel_buffer](https://docs.rs/glium/latest/glium/pixel_buffer/index.html \"mod glium::pixel_buffer\")Deprecated\n    Moved to the `texture` module.\n\n[program](https://docs.rs/glium/latest/glium/program/index.html \"mod glium::program\")\n    Items related to creating an OpenGL program.\n\n[semaphore](https://docs.rs/glium/latest/glium/semaphore/index.html \"mod glium::semaphore\")\n    Contains everything related to external API semaphores.\n\n[texture](https://docs.rs/glium/latest/glium/texture/index.html \"mod glium::texture\")\n    A texture is an image loaded in video memory, which can be sampled in your shaders.\n\n[uniforms](https://docs.rs/glium/latest/glium/uniforms/index.html \"mod glium::uniforms\")\n    A uniform is a global variable in your program. In order to draw something, you will need to give `glium` the values of all your uniforms. Objects that implement the `Uniform` trait are here to do that.\n\n[vertex](https://docs.rs/glium/latest/glium/vertex/index.html \"mod glium::vertex\")\n    Contains everything related to vertex sources.\n## Macros[\u00a7](https://docs.rs/glium/latest/glium/#macros)\n\n[assert_no_gl_error](https://docs.rs/glium/latest/glium/macro.assert_no_gl_error.html \"macro glium::assert_no_gl_error\")\n    Calls the `assert_no_error` method on a `glium::Display` instance with file and line number information.\n\n[dynamic_uniform](https://docs.rs/glium/latest/glium/macro.dynamic_uniform.html \"macro glium::dynamic_uniform\")\n    Returns a Dynamic Uniforms Container to which values can be added later.\n\n[field](https://docs.rs/glium/latest/glium/macro.field.html \"macro glium::field\")\n    A macro to create a `Field`.\n\n[implement_buffer_content](https://docs.rs/glium/latest/glium/macro.implement_buffer_content.html \"macro glium::implement_buffer_content\")\n    Implements the `glium::buffer::Content` trait for the given type.\n\n[implement_uniform_block](https://docs.rs/glium/latest/glium/macro.implement_uniform_block.html \"macro glium::implement_uniform_block\")\n    Implements the `glium::uniforms::UniformBlock` trait for the given type.\n\n[implement_vertex](https://docs.rs/glium/latest/glium/macro.implement_vertex.html \"macro glium::implement_vertex\")\n    Implements the `glium::vertex::Vertex` trait for the given type.\n\n[program](https://docs.rs/glium/latest/glium/macro.program.html \"macro glium::program\")\n    Builds a program depending on the GLSL version supported by the backend.\n\n[uniform](https://docs.rs/glium/latest/glium/macro.uniform.html \"macro glium::uniform\")\n    Returns an implementation-defined type which implements the `Uniform` trait.\n## Structs[\u00a7](https://docs.rs/glium/latest/glium/#structs)\n\n[BlitMask](https://docs.rs/glium/latest/glium/struct.BlitMask.html \"struct glium::BlitMask\")\n    Mask specifying, which kinds of buffers to copy when blitting between two frame buffers.\n\n[BlitTarget](https://docs.rs/glium/latest/glium/struct.BlitTarget.html \"struct glium::BlitTarget\")\n    Area of a surface in pixels. Similar to a `Rect` except that dimensions can be negative.\n\n[Capabilities](https://docs.rs/glium/latest/glium/struct.Capabilities.html \"struct glium::Capabilities\")\n    Represents the capabilities of the context.\n\n[ExtensionsList](https://docs.rs/glium/latest/glium/struct.ExtensionsList.html \"struct glium::ExtensionsList\")\n    Contains data about the list of extensions.\n\n[Frame](https://docs.rs/glium/latest/glium/struct.Frame.html \"struct glium::Frame\")\n    Implementation of `Surface`, targeting the default framebuffer.\n\n[IncompatibleOpenGl](https://docs.rs/glium/latest/glium/struct.IncompatibleOpenGl.html \"struct glium::IncompatibleOpenGl\")\n    Returned during Context creation if the OpenGL implementation is too old.\n\n[LinearSyncFence](https://docs.rs/glium/latest/glium/struct.LinearSyncFence.html \"struct glium::LinearSyncFence\")\n    Prototype for a `SyncFence`.\n\n[Rect](https://docs.rs/glium/latest/glium/struct.Rect.html \"struct glium::Rect\")\n    Area of a surface in pixels.\n\n[SyncFence](https://docs.rs/glium/latest/glium/struct.SyncFence.html \"struct glium::SyncFence\")\n    Provides a way to wait for a server-side operation to be finished.\n\n[Version](https://docs.rs/glium/latest/glium/struct.Version.html \"struct glium::Version\")\n    Describes a version.\n## Enums[\u00a7](https://docs.rs/glium/latest/glium/#enums)\n\n[Api](https://docs.rs/glium/latest/glium/enum.Api.html \"enum glium::Api\")\n    Describes an OpenGL-related API.\n\n[DrawError](https://docs.rs/glium/latest/glium/enum.DrawError.html \"enum glium::DrawError\")\n    Error that can happen while drawing.\n\n[Handle](https://docs.rs/glium/latest/glium/enum.Handle.html \"enum glium::Handle\")\n    Handle to a shader or a program.\n\n[Profile](https://docs.rs/glium/latest/glium/enum.Profile.html \"enum glium::Profile\")\n    Describes the OpenGL context profile.\n\n[RawUniformValue](https://docs.rs/glium/latest/glium/enum.RawUniformValue.html \"enum glium::RawUniformValue\")\n    A raw value of a uniform. \u201cRaw\u201d means that it\u2019s passed directly with `glUniform`. Textures for example are just passed as integers.\n\n[ReadError](https://docs.rs/glium/latest/glium/enum.ReadError.html \"enum glium::ReadError\")\n    Error that can happen while reading.\n\n[SwapBuffersError](https://docs.rs/glium/latest/glium/enum.SwapBuffersError.html \"enum glium::SwapBuffersError\")\n    Error that can happen when swapping buffers.\n\n[UuidError](https://docs.rs/glium/latest/glium/enum.UuidError.html \"enum glium::UuidError\")\n    Describes an error preventing the retrieval of the uuid.\n## Traits[\u00a7](https://docs.rs/glium/latest/glium/#traits)\n\n[CapabilitiesSource](https://docs.rs/glium/latest/glium/trait.CapabilitiesSource.html \"trait glium::CapabilitiesSource\")\n    Trait for objects that describe the capabilities of an OpenGL backend.\n\n[GlObject](https://docs.rs/glium/latest/glium/trait.GlObject.html \"trait glium::GlObject\")\n    Trait for objects that are OpenGL objects.\n\n[Surface](https://docs.rs/glium/latest/glium/trait.Surface.html \"trait glium::Surface\")\n    Object that can be drawn upon.\n## Functions[\u00a7](https://docs.rs/glium/latest/glium/#functions)\n\n[get_supported_glsl_version](https://docs.rs/glium/latest/glium/fn.get_supported_glsl_version.html \"fn glium::get_supported_glsl_version\")\n    Given an API version, this function returns the GLSL version that the implementation is required to support.\n",
            "markdown_with_citations": "[](https://docs.rs/glium/latest/glium/all.html \"show sidebar\")\n# Crate gliumCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nEasy-to-use, high-level, OpenGL3+ wrapper.\nGlium is based on glutin - a cross-platform crate for building an OpenGL window and handling application events.\nGlium provides a `Display`\u27e84\u27e9 which uses `glutin` for the Window and its associated GL Context.\n## \u00a7\u27e85\u27e9Initialization\nThe initialisation of a simple glium display occurs in two steps.\n```\nextern crate glium;\n// Use the re-exported winit dependency to avoid version mismatches.\n// Requires the `simple_window_builder` feature.\nuse glium::winit;\nfn main() {\n  // 1. The **winit::EventLoop** for handling events.\n  let event_loop = winit::event_loop::EventLoopBuilder::new().build().unwrap();\n  // 2. Create a glutin context and glium Display\n  let (window, display) = glium::backend::glutin::SimpleWindowBuilder::new().build(&event_loop);\n}\n```\n\nThe `display` object is the most important object of this library and is used when you build buffers, textures, etc. and when you draw.\nYou can clone it and pass it around. However it doesn\u2019t implement the `Send` and `Sync` traits, meaning that you can\u2019t pass it to another thread.\nThe display has ownership of both the window and context, and also provides some methods related to domains such as events handling.\n## \u00a7\u27e86\u27e9Overview\nOpenGL is similar to drawing software: you draw something, then draw over it, then over it again, etc. until you are satisfied of the result.\nOnce you have a `display`, you can call `let mut frame = display.draw();` to start drawing. This `frame` object implements the `Surface` trait\u27e87\u27e9 and provides some functions such as `clear_color`, but also allows you to draw with the rendering pipeline.\nIn order to draw something, you will need to pass:\n  * A source of vertices (see the `vertex`\u27e88\u27e9 module)\n  * A source of indices (see the `index`\u27e89\u27e9 module)\n  * A program that contains the shader that the GPU will execute (see the `program`\u27e810\u27e9 module)\n  * A list of uniforms for the program (see the `uniforms`\u27e811\u27e9 module)\n  * Draw parameters to customize the drawing process (see the `draw_parameters`\u27e812\u27e9 module)\n\n\nOnce you have finished drawing, you can call `frame.finish()` to swap buffers and present the result to the user.\n## \u00a7\u27e813\u27e9OpenGL equivalents in glium\n  * **Bind points** : Glium automatically binds and unbinds buffers, textures, etc. in an optimized way.\n  * **Buffers** : Buffers are strongly typed and can be used through `vertex::VertexBuffer`, `index::IndexBuffer` or `uniforms::UniformBuffer`.\n  * **Debug output** : If you compile in debug mode, glium registers a debug output callback and panics if an OpenGL error happens.\n  * **Framebuffer Objects** : FBOs are automatically managed by glium and are stored in the `Context` object. You can specify the attachments that you wish with the `framebuffer` module.\n  * **Instancing** : Instancing is done either by passing a `vertex::EmptyInstanceAttributes` marker or one or several references to vertex buffers wrapped inside a `PerInstance` struct. See the `vertex` module for more infos.\n  * **Memory barriers** : Calling `glMemoryBarrier` is automatically handled by glium, however you still need to call `memoryBarrier()` in your GLSL code in some situations.\n  * **Programs** : See the `program` module.\n  * **Query objects** : The corresponding structs are in the `draw_parameters` module. They are passed as draw parameters.\n  * **Renderbuffer** : See the `framebuffer` module.\n  * **Render to texture** : If you just want to draw on a texture, you can call `texture.as_surface()`. For more advanced options, see the `framebuffer` module.\n  * **Samplers** : Samplers are automatically managed by glium and are stored in the `Context` object. You can specify how a texture should be sampled by using a `Sampler` dummy object in the `uniforms` module.\n  * **Shaders** : You can\u2019t manually create individual shaders. Instead you must create whole programs at once.\n  * **Textures** : Textures are strongly typed and are found in the `texture` module.\n  * **Uniform blocks** : If your program uses uniform blocks, you must pass a reference to a uniform buffer for the name of the block when drawing.\n  * **Vertex array objects** : VAOs are automatically managed by glium if the backend supports them.\n\n\n## Re-exports\u00a7\u27e814\u27e9\n\n`pub use crate::draw_parameters::Blend[](https://docs.rs/glium/latest/glium/draw_parameters/struct.Blend.html \"struct glium::draw_parameters::Blend\");`\n\n\n`pub use crate::draw_parameters::BlendingFunction[](https://docs.rs/glium/latest/glium/draw_parameters/enum.BlendingFunction.html \"enum glium::draw_parameters::BlendingFunction\");`\n\n\n`pub use crate::draw_parameters::LinearBlendingFactor[](https://docs.rs/glium/latest/glium/draw_parameters/enum.LinearBlendingFactor.html \"enum glium::draw_parameters::LinearBlendingFactor\");`\n\n\n`pub use crate::draw_parameters::BackfaceCullingMode[](https://docs.rs/glium/latest/glium/draw_parameters/enum.BackfaceCullingMode.html \"enum glium::draw_parameters::BackfaceCullingMode\");`\n\n\n`pub use crate::draw_parameters::Depth[](https://docs.rs/glium/latest/glium/draw_parameters/struct.Depth.html \"struct glium::draw_parameters::Depth\");`\n\n\n`pub use crate::draw_parameters::DepthTest[](https://docs.rs/glium/latest/glium/draw_parameters/enum.DepthTest.html \"enum glium::draw_parameters::DepthTest\");`\n\n\n`pub use crate::draw_parameters::PolygonMode[](https://docs.rs/glium/latest/glium/draw_parameters/enum.PolygonMode.html \"enum glium::draw_parameters::PolygonMode\");`\n\n\n`pub use crate::draw_parameters::DrawParameters[](https://docs.rs/glium/latest/glium/draw_parameters/struct.DrawParameters.html \"struct glium::draw_parameters::DrawParameters\");`\n\n\n`pub use crate::draw_parameters::StencilTest[](https://docs.rs/glium/latest/glium/draw_parameters/enum.StencilTest.html \"enum glium::draw_parameters::StencilTest\");`\n\n\n`pub use crate::draw_parameters::StencilOperation[](https://docs.rs/glium/latest/glium/draw_parameters/enum.StencilOperation.html \"enum glium::draw_parameters::StencilOperation\");`\n\n\n`pub use crate::draw_parameters::Smooth[](https://docs.rs/glium/latest/glium/draw_parameters/enum.Smooth.html \"enum glium::draw_parameters::Smooth\");`\n\n\n`pub use crate::index::IndexBuffer[](https://docs.rs/glium/latest/glium/index/struct.IndexBuffer.html \"struct glium::index::IndexBuffer\");`\n\n\n`pub use crate::vertex::VertexBuffer[](https://docs.rs/glium/latest/glium/vertex/struct.VertexBuffer.html \"struct glium::vertex::VertexBuffer\");`\n\n\n`pub use crate::vertex::Vertex[](https://docs.rs/glium/latest/glium/vertex/trait.Vertex.html \"trait glium::vertex::Vertex\");`\n\n\n`pub use crate::vertex::VertexFormat[](https://docs.rs/glium/latest/glium/vertex/type.VertexFormat.html \"type glium::vertex::VertexFormat\");`\n\n\n`pub use crate::program::Program[](https://docs.rs/glium/latest/glium/program/struct.Program.html \"struct glium::program::Program\");`\n\n\n`pub use crate::program::ProgramCreationError[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::program::ProgramCreationError::CompilationError[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::program::ProgramCreationError::LinkingError[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::program::ProgramCreationError::ShaderTypeNotSupported[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::texture::Texture2d[](https://docs.rs/glium/latest/glium/texture/struct.Texture2d.html \"struct glium::texture::Texture2d\");`\n\n\n`pub use crate::backend::glutin::Display[](https://docs.rs/glium/latest/glium/backend/glutin/struct.Display.html \"struct glium::backend::glutin::Display\");`\n\n\n`pub use crate::backend::glutin::glutin[](https://docs.rs/glutin/0.32.3/x86_64-unknown-linux-gnu/glutin/index.html \"mod glutin\");`\n\n\n`pub use crate::backend::winit[](https://docs.rs/winit/0.30.10/x86_64-unknown-linux-gnu/winit/index.html \"mod winit\");`\n\n## Modules\u00a7\u27e815\u27e9\n\nbackend\u27e816\u27e9\n    The `backend` module allows one to link between glium and the OpenGL context..\n\nbuffer\u27e817\u27e9\n    A buffer is a memory location accessible to the video card.\n\ndebug\u27e818\u27e9\n\n\ndraw_parameters\u27e812\u27e9\n    Describes miscellaneous parameters to be used when drawing.\n\nfield\u27e819\u27e9\n    Field utils\n\nframebuffer\u27e820\u27e9\n    Framebuffers allow you to customize the color, depth and stencil buffers you will draw on.\n\nindex\u27e89\u27e9\n    In order to draw, you need to provide a way for the video card to know how to link primitives together.\n\nmemory_object\u27e821\u27e9\n    Contains everything related to external API memory objects.\n\npixel_buffer\u27e822\u27e9Deprecated\n    Moved to the `texture` module.\n\nprogram\u27e810\u27e9\n    Items related to creating an OpenGL program.\n\nsemaphore\u27e823\u27e9\n    Contains everything related to external API semaphores.\n\ntexture\u27e824\u27e9\n    A texture is an image loaded in video memory, which can be sampled in your shaders.\n\nuniforms\u27e811\u27e9\n    A uniform is a global variable in your program. In order to draw something, you will need to give `glium` the values of all your uniforms. Objects that implement the `Uniform` trait are here to do that.\n\nvertex\u27e88\u27e9\n    Contains everything related to vertex sources.\n## Macros\u00a7\u27e825\u27e9\n\nassert_no_gl_error\u27e826\u27e9\n    Calls the `assert_no_error` method on a `glium::Display` instance with file and line number information.\n\ndynamic_uniform\u27e827\u27e9\n    Returns a Dynamic Uniforms Container to which values can be added later.\n\nfield\u27e828\u27e9\n    A macro to create a `Field`.\n\nimplement_buffer_content\u27e829\u27e9\n    Implements the `glium::buffer::Content` trait for the given type.\n\nimplement_uniform_block\u27e830\u27e9\n    Implements the `glium::uniforms::UniformBlock` trait for the given type.\n\nimplement_vertex\u27e831\u27e9\n    Implements the `glium::vertex::Vertex` trait for the given type.\n\nprogram\u27e832\u27e9\n    Builds a program depending on the GLSL version supported by the backend.\n\nuniform\u27e833\u27e9\n    Returns an implementation-defined type which implements the `Uniform` trait.\n## Structs\u00a7\u27e834\u27e9\n\nBlitMask\u27e835\u27e9\n    Mask specifying, which kinds of buffers to copy when blitting between two frame buffers.\n\nBlitTarget\u27e836\u27e9\n    Area of a surface in pixels. Similar to a `Rect` except that dimensions can be negative.\n\nCapabilities\u27e837\u27e9\n    Represents the capabilities of the context.\n\nExtensionsList\u27e838\u27e9\n    Contains data about the list of extensions.\n\nFrame\u27e839\u27e9\n    Implementation of `Surface`, targeting the default framebuffer.\n\nIncompatibleOpenGl\u27e840\u27e9\n    Returned during Context creation if the OpenGL implementation is too old.\n\nLinearSyncFence\u27e841\u27e9\n    Prototype for a `SyncFence`.\n\nRect\u27e842\u27e9\n    Area of a surface in pixels.\n\nSyncFence\u27e843\u27e9\n    Provides a way to wait for a server-side operation to be finished.\n\nVersion\u27e844\u27e9\n    Describes a version.\n## Enums\u00a7\u27e845\u27e9\n\nApi\u27e846\u27e9\n    Describes an OpenGL-related API.\n\nDrawError\u27e847\u27e9\n    Error that can happen while drawing.\n\nHandle\u27e848\u27e9\n    Handle to a shader or a program.\n\nProfile\u27e849\u27e9\n    Describes the OpenGL context profile.\n\nRawUniformValue\u27e850\u27e9\n    A raw value of a uniform. \u201cRaw\u201d means that it\u2019s passed directly with `glUniform`. Textures for example are just passed as integers.\n\nReadError\u27e851\u27e9\n    Error that can happen while reading.\n\nSwapBuffersError\u27e852\u27e9\n    Error that can happen when swapping buffers.\n\nUuidError\u27e853\u27e9\n    Describes an error preventing the retrieval of the uuid.\n## Traits\u00a7\u27e854\u27e9\n\nCapabilitiesSource\u27e855\u27e9\n    Trait for objects that describe the capabilities of an OpenGL backend.\n\nGlObject\u27e856\u27e9\n    Trait for objects that are OpenGL objects.\n\nSurface\u27e87\u27e9\n    Object that can be drawn upon.\n## Functions\u00a7\u27e857\u27e9\n\nget_supported_glsl_version\u27e858\u27e9\n    Given an API version, this function returns the GLSL version that the implementation is required to support.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/glium/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/glium/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/glium/latest/src/glium/lib.rs.html#1-1407: Source\n\u27e84\u27e9 https://docs.rs/glium/latest/glium/backend/glutin/struct.Display.html: struct glium::backend::glutin::Display - `Display`\n\u27e85\u27e9 https://docs.rs/glium/latest/glium/#initialization: \u00a7\n\u27e86\u27e9 https://docs.rs/glium/latest/glium/#overview: \u00a7\n\u27e87\u27e9 https://docs.rs/glium/latest/glium/trait.Surface.html: trait glium::Surface - the `Surface` trait\n\u27e88\u27e9 https://docs.rs/glium/latest/glium/vertex/index.html: mod glium::vertex - `vertex`\n\u27e89\u27e9 https://docs.rs/glium/latest/glium/index/index.html: mod glium::index - `index`\n\u27e810\u27e9 https://docs.rs/glium/latest/glium/program/index.html: mod glium::program - `program`\n\u27e811\u27e9 https://docs.rs/glium/latest/glium/uniforms/index.html: mod glium::uniforms - `uniforms`\n\u27e812\u27e9 https://docs.rs/glium/latest/glium/draw_parameters/index.html: mod glium::draw_parameters - `draw_parameters`\n\u27e813\u27e9 https://docs.rs/glium/latest/glium/#opengl-equivalents-in-glium: \u00a7\n\u27e814\u27e9 https://docs.rs/glium/latest/glium/#reexports: \u00a7\n\u27e815\u27e9 https://docs.rs/glium/latest/glium/#modules: \u00a7\n\u27e816\u27e9 https://docs.rs/glium/latest/glium/backend/index.html: mod glium::backend - backend\n\u27e817\u27e9 https://docs.rs/glium/latest/glium/buffer/index.html: mod glium::buffer - buffer\n\u27e818\u27e9 https://docs.rs/glium/latest/glium/debug/index.html: mod glium::debug - debug\n\u27e819\u27e9 https://docs.rs/glium/latest/glium/field/index.html: mod glium::field - field\n\u27e820\u27e9 https://docs.rs/glium/latest/glium/framebuffer/index.html: mod glium::framebuffer - framebuffer\n\u27e821\u27e9 https://docs.rs/glium/latest/glium/memory_object/index.html: mod glium::memory_object - memory_object\n\u27e822\u27e9 https://docs.rs/glium/latest/glium/pixel_buffer/index.html: mod glium::pixel_buffer - pixel_buffer\n\u27e823\u27e9 https://docs.rs/glium/latest/glium/semaphore/index.html: mod glium::semaphore - semaphore\n\u27e824\u27e9 https://docs.rs/glium/latest/glium/texture/index.html: mod glium::texture - texture\n\u27e825\u27e9 https://docs.rs/glium/latest/glium/#macros: \u00a7\n\u27e826\u27e9 https://docs.rs/glium/latest/glium/macro.assert_no_gl_error.html: macro glium::assert_no_gl_error - assert_no_gl_error\n\u27e827\u27e9 https://docs.rs/glium/latest/glium/macro.dynamic_uniform.html: macro glium::dynamic_uniform - dynamic_uniform\n\u27e828\u27e9 https://docs.rs/glium/latest/glium/macro.field.html: macro glium::field - field\n\u27e829\u27e9 https://docs.rs/glium/latest/glium/macro.implement_buffer_content.html: macro glium::implement_buffer_content - implement_buffer_content\n\u27e830\u27e9 https://docs.rs/glium/latest/glium/macro.implement_uniform_block.html: macro glium::implement_uniform_block - implement_uniform_block\n\u27e831\u27e9 https://docs.rs/glium/latest/glium/macro.implement_vertex.html: macro glium::implement_vertex - implement_vertex\n\u27e832\u27e9 https://docs.rs/glium/latest/glium/macro.program.html: macro glium::program - program\n\u27e833\u27e9 https://docs.rs/glium/latest/glium/macro.uniform.html: macro glium::uniform - uniform\n\u27e834\u27e9 https://docs.rs/glium/latest/glium/#structs: \u00a7\n\u27e835\u27e9 https://docs.rs/glium/latest/glium/struct.BlitMask.html: struct glium::BlitMask - BlitMask\n\u27e836\u27e9 https://docs.rs/glium/latest/glium/struct.BlitTarget.html: struct glium::BlitTarget - BlitTarget\n\u27e837\u27e9 https://docs.rs/glium/latest/glium/struct.Capabilities.html: struct glium::Capabilities - Capabilities\n\u27e838\u27e9 https://docs.rs/glium/latest/glium/struct.ExtensionsList.html: struct glium::ExtensionsList - ExtensionsList\n\u27e839\u27e9 https://docs.rs/glium/latest/glium/struct.Frame.html: struct glium::Frame - Frame\n\u27e840\u27e9 https://docs.rs/glium/latest/glium/struct.IncompatibleOpenGl.html: struct glium::IncompatibleOpenGl - IncompatibleOpenGl\n\u27e841\u27e9 https://docs.rs/glium/latest/glium/struct.LinearSyncFence.html: struct glium::LinearSyncFence - LinearSyncFence\n\u27e842\u27e9 https://docs.rs/glium/latest/glium/struct.Rect.html: struct glium::Rect - Rect\n\u27e843\u27e9 https://docs.rs/glium/latest/glium/struct.SyncFence.html: struct glium::SyncFence - SyncFence\n\u27e844\u27e9 https://docs.rs/glium/latest/glium/struct.Version.html: struct glium::Version - Version\n\u27e845\u27e9 https://docs.rs/glium/latest/glium/#enums: \u00a7\n\u27e846\u27e9 https://docs.rs/glium/latest/glium/enum.Api.html: enum glium::Api - Api\n\u27e847\u27e9 https://docs.rs/glium/latest/glium/enum.DrawError.html: enum glium::DrawError - DrawError\n\u27e848\u27e9 https://docs.rs/glium/latest/glium/enum.Handle.html: enum glium::Handle - Handle\n\u27e849\u27e9 https://docs.rs/glium/latest/glium/enum.Profile.html: enum glium::Profile - Profile\n\u27e850\u27e9 https://docs.rs/glium/latest/glium/enum.RawUniformValue.html: enum glium::RawUniformValue - RawUniformValue\n\u27e851\u27e9 https://docs.rs/glium/latest/glium/enum.ReadError.html: enum glium::ReadError - ReadError\n\u27e852\u27e9 https://docs.rs/glium/latest/glium/enum.SwapBuffersError.html: enum glium::SwapBuffersError - SwapBuffersError\n\u27e853\u27e9 https://docs.rs/glium/latest/glium/enum.UuidError.html: enum glium::UuidError - UuidError\n\u27e854\u27e9 https://docs.rs/glium/latest/glium/#traits: \u00a7\n\u27e855\u27e9 https://docs.rs/glium/latest/glium/trait.CapabilitiesSource.html: trait glium::CapabilitiesSource - CapabilitiesSource\n\u27e856\u27e9 https://docs.rs/glium/latest/glium/trait.GlObject.html: trait glium::GlObject - GlObject\n\u27e857\u27e9 https://docs.rs/glium/latest/glium/#functions: \u00a7\n\u27e858\u27e9 https://docs.rs/glium/latest/glium/fn.get_supported_glsl_version.html: fn glium::get_supported_glsl_version - get_supported_glsl_version\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "glium",
          "version": "0.36.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/glium/latest/glium/all.html \"show sidebar\")\n# Crate gliumCopy item path\n[Settings](https://docs.rs/glium/latest/settings.html)\n[Help](https://docs.rs/glium/latest/help.html)\nSummary[Source](https://docs.rs/glium/latest/src/glium/lib.rs.html#1-1407)\nExpand description\nEasy-to-use, high-level, OpenGL3+ wrapper.\nGlium is based on glutin - a cross-platform crate for building an OpenGL window and handling application events.\nGlium provides a [`Display`](https://docs.rs/glium/latest/glium/backend/glutin/struct.Display.html \"struct glium::backend::glutin::Display\") which uses `glutin` for the Window and its associated GL Context.\n## [\u00a7](https://docs.rs/glium/latest/glium/#initialization)Initialization\nThe initialisation of a simple glium display occurs in two steps.\n```\nextern crate glium;\n// Use the re-exported winit dependency to avoid version mismatches.\n// Requires the `simple_window_builder` feature.\nuse glium::winit;\nfn main() {\n  // 1. The **winit::EventLoop** for handling events.\n  let event_loop = winit::event_loop::EventLoopBuilder::new().build().unwrap();\n  // 2. Create a glutin context and glium Display\n  let (window, display) = glium::backend::glutin::SimpleWindowBuilder::new().build(&event_loop);\n}\n```\n\nThe `display` object is the most important object of this library and is used when you build buffers, textures, etc. and when you draw.\nYou can clone it and pass it around. However it doesn\u2019t implement the `Send` and `Sync` traits, meaning that you can\u2019t pass it to another thread.\nThe display has ownership of both the window and context, and also provides some methods related to domains such as events handling.\n## [\u00a7](https://docs.rs/glium/latest/glium/#overview)Overview\nOpenGL is similar to drawing software: you draw something, then draw over it, then over it again, etc. until you are satisfied of the result.\nOnce you have a `display`, you can call `let mut frame = display.draw();` to start drawing. This `frame` object implements [the `Surface` trait](https://docs.rs/glium/latest/glium/trait.Surface.html \"trait glium::Surface\") and provides some functions such as `clear_color`, but also allows you to draw with the rendering pipeline.\nIn order to draw something, you will need to pass:\n  * A source of vertices (see the [`vertex`](https://docs.rs/glium/latest/glium/vertex/index.html \"mod glium::vertex\") module)\n  * A source of indices (see the [`index`](https://docs.rs/glium/latest/glium/index/index.html \"mod glium::index\") module)\n  * A program that contains the shader that the GPU will execute (see the [`program`](https://docs.rs/glium/latest/glium/program/index.html \"mod glium::program\") module)\n  * A list of uniforms for the program (see the [`uniforms`](https://docs.rs/glium/latest/glium/uniforms/index.html \"mod glium::uniforms\") module)\n  * Draw parameters to customize the drawing process (see the [`draw_parameters`](https://docs.rs/glium/latest/glium/draw_parameters/index.html \"mod glium::draw_parameters\") module)\n\n\nOnce you have finished drawing, you can call `frame.finish()` to swap buffers and present the result to the user.\n## [\u00a7](https://docs.rs/glium/latest/glium/#opengl-equivalents-in-glium)OpenGL equivalents in glium\n  * **Bind points** : Glium automatically binds and unbinds buffers, textures, etc. in an optimized way.\n  * **Buffers** : Buffers are strongly typed and can be used through `vertex::VertexBuffer`, `index::IndexBuffer` or `uniforms::UniformBuffer`.\n  * **Debug output** : If you compile in debug mode, glium registers a debug output callback and panics if an OpenGL error happens.\n  * **Framebuffer Objects** : FBOs are automatically managed by glium and are stored in the `Context` object. You can specify the attachments that you wish with the `framebuffer` module.\n  * **Instancing** : Instancing is done either by passing a `vertex::EmptyInstanceAttributes` marker or one or several references to vertex buffers wrapped inside a `PerInstance` struct. See the `vertex` module for more infos.\n  * **Memory barriers** : Calling `glMemoryBarrier` is automatically handled by glium, however you still need to call `memoryBarrier()` in your GLSL code in some situations.\n  * **Programs** : See the `program` module.\n  * **Query objects** : The corresponding structs are in the `draw_parameters` module. They are passed as draw parameters.\n  * **Renderbuffer** : See the `framebuffer` module.\n  * **Render to texture** : If you just want to draw on a texture, you can call `texture.as_surface()`. For more advanced options, see the `framebuffer` module.\n  * **Samplers** : Samplers are automatically managed by glium and are stored in the `Context` object. You can specify how a texture should be sampled by using a `Sampler` dummy object in the `uniforms` module.\n  * **Shaders** : You can\u2019t manually create individual shaders. Instead you must create whole programs at once.\n  * **Textures** : Textures are strongly typed and are found in the `texture` module.\n  * **Uniform blocks** : If your program uses uniform blocks, you must pass a reference to a uniform buffer for the name of the block when drawing.\n  * **Vertex array objects** : VAOs are automatically managed by glium if the backend supports them.\n\n\n## Re-exports[\u00a7](https://docs.rs/glium/latest/glium/#reexports)\n\n`pub use crate::draw_parameters::Blend[](https://docs.rs/glium/latest/glium/draw_parameters/struct.Blend.html \"struct glium::draw_parameters::Blend\");`\n\n\n`pub use crate::draw_parameters::BlendingFunction[](https://docs.rs/glium/latest/glium/draw_parameters/enum.BlendingFunction.html \"enum glium::draw_parameters::BlendingFunction\");`\n\n\n`pub use crate::draw_parameters::LinearBlendingFactor[](https://docs.rs/glium/latest/glium/draw_parameters/enum.LinearBlendingFactor.html \"enum glium::draw_parameters::LinearBlendingFactor\");`\n\n\n`pub use crate::draw_parameters::BackfaceCullingMode[](https://docs.rs/glium/latest/glium/draw_parameters/enum.BackfaceCullingMode.html \"enum glium::draw_parameters::BackfaceCullingMode\");`\n\n\n`pub use crate::draw_parameters::Depth[](https://docs.rs/glium/latest/glium/draw_parameters/struct.Depth.html \"struct glium::draw_parameters::Depth\");`\n\n\n`pub use crate::draw_parameters::DepthTest[](https://docs.rs/glium/latest/glium/draw_parameters/enum.DepthTest.html \"enum glium::draw_parameters::DepthTest\");`\n\n\n`pub use crate::draw_parameters::PolygonMode[](https://docs.rs/glium/latest/glium/draw_parameters/enum.PolygonMode.html \"enum glium::draw_parameters::PolygonMode\");`\n\n\n`pub use crate::draw_parameters::DrawParameters[](https://docs.rs/glium/latest/glium/draw_parameters/struct.DrawParameters.html \"struct glium::draw_parameters::DrawParameters\");`\n\n\n`pub use crate::draw_parameters::StencilTest[](https://docs.rs/glium/latest/glium/draw_parameters/enum.StencilTest.html \"enum glium::draw_parameters::StencilTest\");`\n\n\n`pub use crate::draw_parameters::StencilOperation[](https://docs.rs/glium/latest/glium/draw_parameters/enum.StencilOperation.html \"enum glium::draw_parameters::StencilOperation\");`\n\n\n`pub use crate::draw_parameters::Smooth[](https://docs.rs/glium/latest/glium/draw_parameters/enum.Smooth.html \"enum glium::draw_parameters::Smooth\");`\n\n\n`pub use crate::index::IndexBuffer[](https://docs.rs/glium/latest/glium/index/struct.IndexBuffer.html \"struct glium::index::IndexBuffer\");`\n\n\n`pub use crate::vertex::VertexBuffer[](https://docs.rs/glium/latest/glium/vertex/struct.VertexBuffer.html \"struct glium::vertex::VertexBuffer\");`\n\n\n`pub use crate::vertex::Vertex[](https://docs.rs/glium/latest/glium/vertex/trait.Vertex.html \"trait glium::vertex::Vertex\");`\n\n\n`pub use crate::vertex::VertexFormat[](https://docs.rs/glium/latest/glium/vertex/type.VertexFormat.html \"type glium::vertex::VertexFormat\");`\n\n\n`pub use crate::program::Program[](https://docs.rs/glium/latest/glium/program/struct.Program.html \"struct glium::program::Program\");`\n\n\n`pub use crate::program::ProgramCreationError[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::program::ProgramCreationError::CompilationError[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::program::ProgramCreationError::LinkingError[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::program::ProgramCreationError::ShaderTypeNotSupported[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::texture::Texture2d[](https://docs.rs/glium/latest/glium/texture/struct.Texture2d.html \"struct glium::texture::Texture2d\");`\n\n\n`pub use crate::backend::glutin::Display[](https://docs.rs/glium/latest/glium/backend/glutin/struct.Display.html \"struct glium::backend::glutin::Display\");`\n\n\n`pub use crate::backend::glutin::glutin[](https://docs.rs/glutin/0.32.3/x86_64-unknown-linux-gnu/glutin/index.html \"mod glutin\");`\n\n\n`pub use crate::backend::winit[](https://docs.rs/winit/0.30.10/x86_64-unknown-linux-gnu/winit/index.html \"mod winit\");`\n\n## Modules[\u00a7](https://docs.rs/glium/latest/glium/#modules)\n\n[backend](https://docs.rs/glium/latest/glium/backend/index.html \"mod glium::backend\")\n    The `backend` module allows one to link between glium and the OpenGL context..\n\n[buffer](https://docs.rs/glium/latest/glium/buffer/index.html \"mod glium::buffer\")\n    A buffer is a memory location accessible to the video card.\n\n[debug](https://docs.rs/glium/latest/glium/debug/index.html \"mod glium::debug\")\n\n\n[draw_parameters](https://docs.rs/glium/latest/glium/draw_parameters/index.html \"mod glium::draw_parameters\")\n    Describes miscellaneous parameters to be used when drawing.\n\n[field](https://docs.rs/glium/latest/glium/field/index.html \"mod glium::field\")\n    Field utils\n\n[framebuffer](https://docs.rs/glium/latest/glium/framebuffer/index.html \"mod glium::framebuffer\")\n    Framebuffers allow you to customize the color, depth and stencil buffers you will draw on.\n\n[index](https://docs.rs/glium/latest/glium/index/index.html \"mod glium::index\")\n    In order to draw, you need to provide a way for the video card to know how to link primitives together.\n\n[memory_object](https://docs.rs/glium/latest/glium/memory_object/index.html \"mod glium::memory_object\")\n    Contains everything related to external API memory objects.\n\n[pixel_buffer](https://docs.rs/glium/latest/glium/pixel_buffer/index.html \"mod glium::pixel_buffer\")Deprecated\n    Moved to the `texture` module.\n\n[program](https://docs.rs/glium/latest/glium/program/index.html \"mod glium::program\")\n    Items related to creating an OpenGL program.\n\n[semaphore](https://docs.rs/glium/latest/glium/semaphore/index.html \"mod glium::semaphore\")\n    Contains everything related to external API semaphores.\n\n[texture](https://docs.rs/glium/latest/glium/texture/index.html \"mod glium::texture\")\n    A texture is an image loaded in video memory, which can be sampled in your shaders.\n\n[uniforms](https://docs.rs/glium/latest/glium/uniforms/index.html \"mod glium::uniforms\")\n    A uniform is a global variable in your program. In order to draw something, you will need to give `glium` the values of all your uniforms. Objects that implement the `Uniform` trait are here to do that.\n\n[vertex](https://docs.rs/glium/latest/glium/vertex/index.html \"mod glium::vertex\")\n    Contains everything related to vertex sources.\n## Macros[\u00a7](https://docs.rs/glium/latest/glium/#macros)\n\n[assert_no_gl_error](https://docs.rs/glium/latest/glium/macro.assert_no_gl_error.html \"macro glium::assert_no_gl_error\")\n    Calls the `assert_no_error` method on a `glium::Display` instance with file and line number information.\n\n[dynamic_uniform](https://docs.rs/glium/latest/glium/macro.dynamic_uniform.html \"macro glium::dynamic_uniform\")\n    Returns a Dynamic Uniforms Container to which values can be added later.\n\n[field](https://docs.rs/glium/latest/glium/macro.field.html \"macro glium::field\")\n    A macro to create a `Field`.\n\n[implement_buffer_content](https://docs.rs/glium/latest/glium/macro.implement_buffer_content.html \"macro glium::implement_buffer_content\")\n    Implements the `glium::buffer::Content` trait for the given type.\n\n[implement_uniform_block](https://docs.rs/glium/latest/glium/macro.implement_uniform_block.html \"macro glium::implement_uniform_block\")\n    Implements the `glium::uniforms::UniformBlock` trait for the given type.\n\n[implement_vertex](https://docs.rs/glium/latest/glium/macro.implement_vertex.html \"macro glium::implement_vertex\")\n    Implements the `glium::vertex::Vertex` trait for the given type.\n\n[program](https://docs.rs/glium/latest/glium/macro.program.html \"macro glium::program\")\n    Builds a program depending on the GLSL version supported by the backend.\n\n[uniform](https://docs.rs/glium/latest/glium/macro.uniform.html \"macro glium::uniform\")\n    Returns an implementation-defined type which implements the `Uniform` trait.\n## Structs[\u00a7](https://docs.rs/glium/latest/glium/#structs)\n\n[BlitMask](https://docs.rs/glium/latest/glium/struct.BlitMask.html \"struct glium::BlitMask\")\n    Mask specifying, which kinds of buffers to copy when blitting between two frame buffers.\n\n[BlitTarget](https://docs.rs/glium/latest/glium/struct.BlitTarget.html \"struct glium::BlitTarget\")\n    Area of a surface in pixels. Similar to a `Rect` except that dimensions can be negative.\n\n[Capabilities](https://docs.rs/glium/latest/glium/struct.Capabilities.html \"struct glium::Capabilities\")\n    Represents the capabilities of the context.\n\n[ExtensionsList](https://docs.rs/glium/latest/glium/struct.ExtensionsList.html \"struct glium::ExtensionsList\")\n    Contains data about the list of extensions.\n\n[Frame](https://docs.rs/glium/latest/glium/struct.Frame.html \"struct glium::Frame\")\n    Implementation of `Surface`, targeting the default framebuffer.\n\n[IncompatibleOpenGl](https://docs.rs/glium/latest/glium/struct.IncompatibleOpenGl.html \"struct glium::IncompatibleOpenGl\")\n    Returned during Context creation if the OpenGL implementation is too old.\n\n[LinearSyncFence](https://docs.rs/glium/latest/glium/struct.LinearSyncFence.html \"struct glium::LinearSyncFence\")\n    Prototype for a `SyncFence`.\n\n[Rect](https://docs.rs/glium/latest/glium/struct.Rect.html \"struct glium::Rect\")\n    Area of a surface in pixels.\n\n[SyncFence](https://docs.rs/glium/latest/glium/struct.SyncFence.html \"struct glium::SyncFence\")\n    Provides a way to wait for a server-side operation to be finished.\n\n[Version](https://docs.rs/glium/latest/glium/struct.Version.html \"struct glium::Version\")\n    Describes a version.\n## Enums[\u00a7](https://docs.rs/glium/latest/glium/#enums)\n\n[Api](https://docs.rs/glium/latest/glium/enum.Api.html \"enum glium::Api\")\n    Describes an OpenGL-related API.\n\n[DrawError](https://docs.rs/glium/latest/glium/enum.DrawError.html \"enum glium::DrawError\")\n    Error that can happen while drawing.\n\n[Handle](https://docs.rs/glium/latest/glium/enum.Handle.html \"enum glium::Handle\")\n    Handle to a shader or a program.\n\n[Profile](https://docs.rs/glium/latest/glium/enum.Profile.html \"enum glium::Profile\")\n    Describes the OpenGL context profile.\n\n[RawUniformValue](https://docs.rs/glium/latest/glium/enum.RawUniformValue.html \"enum glium::RawUniformValue\")\n    A raw value of a uniform. \u201cRaw\u201d means that it\u2019s passed directly with `glUniform`. Textures for example are just passed as integers.\n\n[ReadError](https://docs.rs/glium/latest/glium/enum.ReadError.html \"enum glium::ReadError\")\n    Error that can happen while reading.\n\n[SwapBuffersError](https://docs.rs/glium/latest/glium/enum.SwapBuffersError.html \"enum glium::SwapBuffersError\")\n    Error that can happen when swapping buffers.\n\n[UuidError](https://docs.rs/glium/latest/glium/enum.UuidError.html \"enum glium::UuidError\")\n    Describes an error preventing the retrieval of the uuid.\n## Traits[\u00a7](https://docs.rs/glium/latest/glium/#traits)\n\n[CapabilitiesSource](https://docs.rs/glium/latest/glium/trait.CapabilitiesSource.html \"trait glium::CapabilitiesSource\")\n    Trait for objects that describe the capabilities of an OpenGL backend.\n\n[GlObject](https://docs.rs/glium/latest/glium/trait.GlObject.html \"trait glium::GlObject\")\n    Trait for objects that are OpenGL objects.\n\n[Surface](https://docs.rs/glium/latest/glium/trait.Surface.html \"trait glium::Surface\")\n    Object that can be drawn upon.\n## Functions[\u00a7](https://docs.rs/glium/latest/glium/#functions)\n\n[get_supported_glsl_version](https://docs.rs/glium/latest/glium/fn.get_supported_glsl_version.html \"fn glium::get_supported_glsl_version\")\n    Given an API version, this function returns the GLSL version that the implementation is required to support.\n",
            "markdown_with_citations": "[](https://docs.rs/glium/latest/glium/all.html \"show sidebar\")\n# Crate gliumCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nEasy-to-use, high-level, OpenGL3+ wrapper.\nGlium is based on glutin - a cross-platform crate for building an OpenGL window and handling application events.\nGlium provides a `Display`\u27e84\u27e9 which uses `glutin` for the Window and its associated GL Context.\n## \u00a7\u27e85\u27e9Initialization\nThe initialisation of a simple glium display occurs in two steps.\n```\nextern crate glium;\n// Use the re-exported winit dependency to avoid version mismatches.\n// Requires the `simple_window_builder` feature.\nuse glium::winit;\nfn main() {\n  // 1. The **winit::EventLoop** for handling events.\n  let event_loop = winit::event_loop::EventLoopBuilder::new().build().unwrap();\n  // 2. Create a glutin context and glium Display\n  let (window, display) = glium::backend::glutin::SimpleWindowBuilder::new().build(&event_loop);\n}\n```\n\nThe `display` object is the most important object of this library and is used when you build buffers, textures, etc. and when you draw.\nYou can clone it and pass it around. However it doesn\u2019t implement the `Send` and `Sync` traits, meaning that you can\u2019t pass it to another thread.\nThe display has ownership of both the window and context, and also provides some methods related to domains such as events handling.\n## \u00a7\u27e86\u27e9Overview\nOpenGL is similar to drawing software: you draw something, then draw over it, then over it again, etc. until you are satisfied of the result.\nOnce you have a `display`, you can call `let mut frame = display.draw();` to start drawing. This `frame` object implements the `Surface` trait\u27e87\u27e9 and provides some functions such as `clear_color`, but also allows you to draw with the rendering pipeline.\nIn order to draw something, you will need to pass:\n  * A source of vertices (see the `vertex`\u27e88\u27e9 module)\n  * A source of indices (see the `index`\u27e89\u27e9 module)\n  * A program that contains the shader that the GPU will execute (see the `program`\u27e810\u27e9 module)\n  * A list of uniforms for the program (see the `uniforms`\u27e811\u27e9 module)\n  * Draw parameters to customize the drawing process (see the `draw_parameters`\u27e812\u27e9 module)\n\n\nOnce you have finished drawing, you can call `frame.finish()` to swap buffers and present the result to the user.\n## \u00a7\u27e813\u27e9OpenGL equivalents in glium\n  * **Bind points** : Glium automatically binds and unbinds buffers, textures, etc. in an optimized way.\n  * **Buffers** : Buffers are strongly typed and can be used through `vertex::VertexBuffer`, `index::IndexBuffer` or `uniforms::UniformBuffer`.\n  * **Debug output** : If you compile in debug mode, glium registers a debug output callback and panics if an OpenGL error happens.\n  * **Framebuffer Objects** : FBOs are automatically managed by glium and are stored in the `Context` object. You can specify the attachments that you wish with the `framebuffer` module.\n  * **Instancing** : Instancing is done either by passing a `vertex::EmptyInstanceAttributes` marker or one or several references to vertex buffers wrapped inside a `PerInstance` struct. See the `vertex` module for more infos.\n  * **Memory barriers** : Calling `glMemoryBarrier` is automatically handled by glium, however you still need to call `memoryBarrier()` in your GLSL code in some situations.\n  * **Programs** : See the `program` module.\n  * **Query objects** : The corresponding structs are in the `draw_parameters` module. They are passed as draw parameters.\n  * **Renderbuffer** : See the `framebuffer` module.\n  * **Render to texture** : If you just want to draw on a texture, you can call `texture.as_surface()`. For more advanced options, see the `framebuffer` module.\n  * **Samplers** : Samplers are automatically managed by glium and are stored in the `Context` object. You can specify how a texture should be sampled by using a `Sampler` dummy object in the `uniforms` module.\n  * **Shaders** : You can\u2019t manually create individual shaders. Instead you must create whole programs at once.\n  * **Textures** : Textures are strongly typed and are found in the `texture` module.\n  * **Uniform blocks** : If your program uses uniform blocks, you must pass a reference to a uniform buffer for the name of the block when drawing.\n  * **Vertex array objects** : VAOs are automatically managed by glium if the backend supports them.\n\n\n## Re-exports\u00a7\u27e814\u27e9\n\n`pub use crate::draw_parameters::Blend[](https://docs.rs/glium/latest/glium/draw_parameters/struct.Blend.html \"struct glium::draw_parameters::Blend\");`\n\n\n`pub use crate::draw_parameters::BlendingFunction[](https://docs.rs/glium/latest/glium/draw_parameters/enum.BlendingFunction.html \"enum glium::draw_parameters::BlendingFunction\");`\n\n\n`pub use crate::draw_parameters::LinearBlendingFactor[](https://docs.rs/glium/latest/glium/draw_parameters/enum.LinearBlendingFactor.html \"enum glium::draw_parameters::LinearBlendingFactor\");`\n\n\n`pub use crate::draw_parameters::BackfaceCullingMode[](https://docs.rs/glium/latest/glium/draw_parameters/enum.BackfaceCullingMode.html \"enum glium::draw_parameters::BackfaceCullingMode\");`\n\n\n`pub use crate::draw_parameters::Depth[](https://docs.rs/glium/latest/glium/draw_parameters/struct.Depth.html \"struct glium::draw_parameters::Depth\");`\n\n\n`pub use crate::draw_parameters::DepthTest[](https://docs.rs/glium/latest/glium/draw_parameters/enum.DepthTest.html \"enum glium::draw_parameters::DepthTest\");`\n\n\n`pub use crate::draw_parameters::PolygonMode[](https://docs.rs/glium/latest/glium/draw_parameters/enum.PolygonMode.html \"enum glium::draw_parameters::PolygonMode\");`\n\n\n`pub use crate::draw_parameters::DrawParameters[](https://docs.rs/glium/latest/glium/draw_parameters/struct.DrawParameters.html \"struct glium::draw_parameters::DrawParameters\");`\n\n\n`pub use crate::draw_parameters::StencilTest[](https://docs.rs/glium/latest/glium/draw_parameters/enum.StencilTest.html \"enum glium::draw_parameters::StencilTest\");`\n\n\n`pub use crate::draw_parameters::StencilOperation[](https://docs.rs/glium/latest/glium/draw_parameters/enum.StencilOperation.html \"enum glium::draw_parameters::StencilOperation\");`\n\n\n`pub use crate::draw_parameters::Smooth[](https://docs.rs/glium/latest/glium/draw_parameters/enum.Smooth.html \"enum glium::draw_parameters::Smooth\");`\n\n\n`pub use crate::index::IndexBuffer[](https://docs.rs/glium/latest/glium/index/struct.IndexBuffer.html \"struct glium::index::IndexBuffer\");`\n\n\n`pub use crate::vertex::VertexBuffer[](https://docs.rs/glium/latest/glium/vertex/struct.VertexBuffer.html \"struct glium::vertex::VertexBuffer\");`\n\n\n`pub use crate::vertex::Vertex[](https://docs.rs/glium/latest/glium/vertex/trait.Vertex.html \"trait glium::vertex::Vertex\");`\n\n\n`pub use crate::vertex::VertexFormat[](https://docs.rs/glium/latest/glium/vertex/type.VertexFormat.html \"type glium::vertex::VertexFormat\");`\n\n\n`pub use crate::program::Program[](https://docs.rs/glium/latest/glium/program/struct.Program.html \"struct glium::program::Program\");`\n\n\n`pub use crate::program::ProgramCreationError[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::program::ProgramCreationError::CompilationError[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::program::ProgramCreationError::LinkingError[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::program::ProgramCreationError::ShaderTypeNotSupported[](https://docs.rs/glium/latest/glium/program/enum.ProgramCreationError.html \"enum glium::program::ProgramCreationError\");`\n\n\n`pub use crate::texture::Texture2d[](https://docs.rs/glium/latest/glium/texture/struct.Texture2d.html \"struct glium::texture::Texture2d\");`\n\n\n`pub use crate::backend::glutin::Display[](https://docs.rs/glium/latest/glium/backend/glutin/struct.Display.html \"struct glium::backend::glutin::Display\");`\n\n\n`pub use crate::backend::glutin::glutin[](https://docs.rs/glutin/0.32.3/x86_64-unknown-linux-gnu/glutin/index.html \"mod glutin\");`\n\n\n`pub use crate::backend::winit[](https://docs.rs/winit/0.30.10/x86_64-unknown-linux-gnu/winit/index.html \"mod winit\");`\n\n## Modules\u00a7\u27e815\u27e9\n\nbackend\u27e816\u27e9\n    The `backend` module allows one to link between glium and the OpenGL context..\n\nbuffer\u27e817\u27e9\n    A buffer is a memory location accessible to the video card.\n\ndebug\u27e818\u27e9\n\n\ndraw_parameters\u27e812\u27e9\n    Describes miscellaneous parameters to be used when drawing.\n\nfield\u27e819\u27e9\n    Field utils\n\nframebuffer\u27e820\u27e9\n    Framebuffers allow you to customize the color, depth and stencil buffers you will draw on.\n\nindex\u27e89\u27e9\n    In order to draw, you need to provide a way for the video card to know how to link primitives together.\n\nmemory_object\u27e821\u27e9\n    Contains everything related to external API memory objects.\n\npixel_buffer\u27e822\u27e9Deprecated\n    Moved to the `texture` module.\n\nprogram\u27e810\u27e9\n    Items related to creating an OpenGL program.\n\nsemaphore\u27e823\u27e9\n    Contains everything related to external API semaphores.\n\ntexture\u27e824\u27e9\n    A texture is an image loaded in video memory, which can be sampled in your shaders.\n\nuniforms\u27e811\u27e9\n    A uniform is a global variable in your program. In order to draw something, you will need to give `glium` the values of all your uniforms. Objects that implement the `Uniform` trait are here to do that.\n\nvertex\u27e88\u27e9\n    Contains everything related to vertex sources.\n## Macros\u00a7\u27e825\u27e9\n\nassert_no_gl_error\u27e826\u27e9\n    Calls the `assert_no_error` method on a `glium::Display` instance with file and line number information.\n\ndynamic_uniform\u27e827\u27e9\n    Returns a Dynamic Uniforms Container to which values can be added later.\n\nfield\u27e828\u27e9\n    A macro to create a `Field`.\n\nimplement_buffer_content\u27e829\u27e9\n    Implements the `glium::buffer::Content` trait for the given type.\n\nimplement_uniform_block\u27e830\u27e9\n    Implements the `glium::uniforms::UniformBlock` trait for the given type.\n\nimplement_vertex\u27e831\u27e9\n    Implements the `glium::vertex::Vertex` trait for the given type.\n\nprogram\u27e832\u27e9\n    Builds a program depending on the GLSL version supported by the backend.\n\nuniform\u27e833\u27e9\n    Returns an implementation-defined type which implements the `Uniform` trait.\n## Structs\u00a7\u27e834\u27e9\n\nBlitMask\u27e835\u27e9\n    Mask specifying, which kinds of buffers to copy when blitting between two frame buffers.\n\nBlitTarget\u27e836\u27e9\n    Area of a surface in pixels. Similar to a `Rect` except that dimensions can be negative.\n\nCapabilities\u27e837\u27e9\n    Represents the capabilities of the context.\n\nExtensionsList\u27e838\u27e9\n    Contains data about the list of extensions.\n\nFrame\u27e839\u27e9\n    Implementation of `Surface`, targeting the default framebuffer.\n\nIncompatibleOpenGl\u27e840\u27e9\n    Returned during Context creation if the OpenGL implementation is too old.\n\nLinearSyncFence\u27e841\u27e9\n    Prototype for a `SyncFence`.\n\nRect\u27e842\u27e9\n    Area of a surface in pixels.\n\nSyncFence\u27e843\u27e9\n    Provides a way to wait for a server-side operation to be finished.\n\nVersion\u27e844\u27e9\n    Describes a version.\n## Enums\u00a7\u27e845\u27e9\n\nApi\u27e846\u27e9\n    Describes an OpenGL-related API.\n\nDrawError\u27e847\u27e9\n    Error that can happen while drawing.\n\nHandle\u27e848\u27e9\n    Handle to a shader or a program.\n\nProfile\u27e849\u27e9\n    Describes the OpenGL context profile.\n\nRawUniformValue\u27e850\u27e9\n    A raw value of a uniform. \u201cRaw\u201d means that it\u2019s passed directly with `glUniform`. Textures for example are just passed as integers.\n\nReadError\u27e851\u27e9\n    Error that can happen while reading.\n\nSwapBuffersError\u27e852\u27e9\n    Error that can happen when swapping buffers.\n\nUuidError\u27e853\u27e9\n    Describes an error preventing the retrieval of the uuid.\n## Traits\u00a7\u27e854\u27e9\n\nCapabilitiesSource\u27e855\u27e9\n    Trait for objects that describe the capabilities of an OpenGL backend.\n\nGlObject\u27e856\u27e9\n    Trait for objects that are OpenGL objects.\n\nSurface\u27e87\u27e9\n    Object that can be drawn upon.\n## Functions\u00a7\u27e857\u27e9\n\nget_supported_glsl_version\u27e858\u27e9\n    Given an API version, this function returns the GLSL version that the implementation is required to support.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/glium/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/glium/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/glium/latest/src/glium/lib.rs.html#1-1407: Source\n\u27e84\u27e9 https://docs.rs/glium/latest/glium/backend/glutin/struct.Display.html: struct glium::backend::glutin::Display - `Display`\n\u27e85\u27e9 https://docs.rs/glium/latest/glium/#initialization: \u00a7\n\u27e86\u27e9 https://docs.rs/glium/latest/glium/#overview: \u00a7\n\u27e87\u27e9 https://docs.rs/glium/latest/glium/trait.Surface.html: trait glium::Surface - the `Surface` trait\n\u27e88\u27e9 https://docs.rs/glium/latest/glium/vertex/index.html: mod glium::vertex - `vertex`\n\u27e89\u27e9 https://docs.rs/glium/latest/glium/index/index.html: mod glium::index - `index`\n\u27e810\u27e9 https://docs.rs/glium/latest/glium/program/index.html: mod glium::program - `program`\n\u27e811\u27e9 https://docs.rs/glium/latest/glium/uniforms/index.html: mod glium::uniforms - `uniforms`\n\u27e812\u27e9 https://docs.rs/glium/latest/glium/draw_parameters/index.html: mod glium::draw_parameters - `draw_parameters`\n\u27e813\u27e9 https://docs.rs/glium/latest/glium/#opengl-equivalents-in-glium: \u00a7\n\u27e814\u27e9 https://docs.rs/glium/latest/glium/#reexports: \u00a7\n\u27e815\u27e9 https://docs.rs/glium/latest/glium/#modules: \u00a7\n\u27e816\u27e9 https://docs.rs/glium/latest/glium/backend/index.html: mod glium::backend - backend\n\u27e817\u27e9 https://docs.rs/glium/latest/glium/buffer/index.html: mod glium::buffer - buffer\n\u27e818\u27e9 https://docs.rs/glium/latest/glium/debug/index.html: mod glium::debug - debug\n\u27e819\u27e9 https://docs.rs/glium/latest/glium/field/index.html: mod glium::field - field\n\u27e820\u27e9 https://docs.rs/glium/latest/glium/framebuffer/index.html: mod glium::framebuffer - framebuffer\n\u27e821\u27e9 https://docs.rs/glium/latest/glium/memory_object/index.html: mod glium::memory_object - memory_object\n\u27e822\u27e9 https://docs.rs/glium/latest/glium/pixel_buffer/index.html: mod glium::pixel_buffer - pixel_buffer\n\u27e823\u27e9 https://docs.rs/glium/latest/glium/semaphore/index.html: mod glium::semaphore - semaphore\n\u27e824\u27e9 https://docs.rs/glium/latest/glium/texture/index.html: mod glium::texture - texture\n\u27e825\u27e9 https://docs.rs/glium/latest/glium/#macros: \u00a7\n\u27e826\u27e9 https://docs.rs/glium/latest/glium/macro.assert_no_gl_error.html: macro glium::assert_no_gl_error - assert_no_gl_error\n\u27e827\u27e9 https://docs.rs/glium/latest/glium/macro.dynamic_uniform.html: macro glium::dynamic_uniform - dynamic_uniform\n\u27e828\u27e9 https://docs.rs/glium/latest/glium/macro.field.html: macro glium::field - field\n\u27e829\u27e9 https://docs.rs/glium/latest/glium/macro.implement_buffer_content.html: macro glium::implement_buffer_content - implement_buffer_content\n\u27e830\u27e9 https://docs.rs/glium/latest/glium/macro.implement_uniform_block.html: macro glium::implement_uniform_block - implement_uniform_block\n\u27e831\u27e9 https://docs.rs/glium/latest/glium/macro.implement_vertex.html: macro glium::implement_vertex - implement_vertex\n\u27e832\u27e9 https://docs.rs/glium/latest/glium/macro.program.html: macro glium::program - program\n\u27e833\u27e9 https://docs.rs/glium/latest/glium/macro.uniform.html: macro glium::uniform - uniform\n\u27e834\u27e9 https://docs.rs/glium/latest/glium/#structs: \u00a7\n\u27e835\u27e9 https://docs.rs/glium/latest/glium/struct.BlitMask.html: struct glium::BlitMask - BlitMask\n\u27e836\u27e9 https://docs.rs/glium/latest/glium/struct.BlitTarget.html: struct glium::BlitTarget - BlitTarget\n\u27e837\u27e9 https://docs.rs/glium/latest/glium/struct.Capabilities.html: struct glium::Capabilities - Capabilities\n\u27e838\u27e9 https://docs.rs/glium/latest/glium/struct.ExtensionsList.html: struct glium::ExtensionsList - ExtensionsList\n\u27e839\u27e9 https://docs.rs/glium/latest/glium/struct.Frame.html: struct glium::Frame - Frame\n\u27e840\u27e9 https://docs.rs/glium/latest/glium/struct.IncompatibleOpenGl.html: struct glium::IncompatibleOpenGl - IncompatibleOpenGl\n\u27e841\u27e9 https://docs.rs/glium/latest/glium/struct.LinearSyncFence.html: struct glium::LinearSyncFence - LinearSyncFence\n\u27e842\u27e9 https://docs.rs/glium/latest/glium/struct.Rect.html: struct glium::Rect - Rect\n\u27e843\u27e9 https://docs.rs/glium/latest/glium/struct.SyncFence.html: struct glium::SyncFence - SyncFence\n\u27e844\u27e9 https://docs.rs/glium/latest/glium/struct.Version.html: struct glium::Version - Version\n\u27e845\u27e9 https://docs.rs/glium/latest/glium/#enums: \u00a7\n\u27e846\u27e9 https://docs.rs/glium/latest/glium/enum.Api.html: enum glium::Api - Api\n\u27e847\u27e9 https://docs.rs/glium/latest/glium/enum.DrawError.html: enum glium::DrawError - DrawError\n\u27e848\u27e9 https://docs.rs/glium/latest/glium/enum.Handle.html: enum glium::Handle - Handle\n\u27e849\u27e9 https://docs.rs/glium/latest/glium/enum.Profile.html: enum glium::Profile - Profile\n\u27e850\u27e9 https://docs.rs/glium/latest/glium/enum.RawUniformValue.html: enum glium::RawUniformValue - RawUniformValue\n\u27e851\u27e9 https://docs.rs/glium/latest/glium/enum.ReadError.html: enum glium::ReadError - ReadError\n\u27e852\u27e9 https://docs.rs/glium/latest/glium/enum.SwapBuffersError.html: enum glium::SwapBuffersError - SwapBuffersError\n\u27e853\u27e9 https://docs.rs/glium/latest/glium/enum.UuidError.html: enum glium::UuidError - UuidError\n\u27e854\u27e9 https://docs.rs/glium/latest/glium/#traits: \u00a7\n\u27e855\u27e9 https://docs.rs/glium/latest/glium/trait.CapabilitiesSource.html: trait glium::CapabilitiesSource - CapabilitiesSource\n\u27e856\u27e9 https://docs.rs/glium/latest/glium/trait.GlObject.html: trait glium::GlObject - GlObject\n\u27e857\u27e9 https://docs.rs/glium/latest/glium/#functions: \u00a7\n\u27e858\u27e9 https://docs.rs/glium/latest/glium/fn.get_supported_glsl_version.html: fn glium::get_supported_glsl_version - get_supported_glsl_version\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `glium` crate is a high-level, easy-to-use wrapper for OpenGL 3+, built on top of `glutin` for cross-platform window creation and event handling. It simplifies OpenGL development by managing resources like buffers, shaders, textures, and framebuffers, while providing abstractions for rendering pipelines, instancing, and debug output. Glium automatically handles tasks like binding/unbinding, memory barriers, and vertex array objects, making it ideal for creating graphics applications with minimal boilerplate.",
          "feature_summary": null,
          "use_case": "Unknown",
          "score": 6.0,
          "factual_counterfactual": "### Pair 1: Display and Thread Safety  \n\u2705 **Factual**: The `glium::Display` object is not `Send` or `Sync`, meaning it cannot be safely transferred between threads.  \n\u274c **Counterfactual**: The `glium::Display` object implements both `Send` and `Sync`, allowing it to be freely shared across threads without restrictions.  \n\n---\n\n### Pair 2: Shader Compilation  \n\u2705 **Factual**: In glium, shaders must be compiled as part of a complete program, and individual shaders cannot be created separately.  \n\u274c **Counterfactual**: Glium allows users to compile individual vertex and fragment shaders separately before linking them into a program.  \n\n---\n\n### Pair 3: Memory Management  \n\u2705 **Factual**: Glium automatically handles OpenGL memory barriers by invoking `glMemoryBarrier` when necessary, but developers must still call `memoryBarrier()` in their GLSL code for specific synchronization scenarios.  \n\u274c **Counterfactual**: Glium fully abstracts all memory barrier requirements, eliminating the need for developers to use `memoryBarrier()` in their GLSL code.  \n\n---",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-f2736f2e-82f4d337-1751265499",
      "timestamp": "2025-06-30T06:38:19.455790+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]