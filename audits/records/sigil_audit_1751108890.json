[
  {
    "execution_id": "exec-733c7664-bcb82dbe-1751108887",
    "timestamp": "2025-06-28T11:08:07.830424+00:00",
    "sacred_chain": {
      "input_data": "arrayvec",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'arrayvec' -> 'arrayvec'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "arrayvec",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "documentation_quality": 3.3333333333333335,
        "documentation_sources": [
          "crates_io",
          "docs_rs",
          "lib_rs"
        ],
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpm1ejdbkb/arrayvec-0.7.6#arrayvec@0.7.6",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "arrayvec",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\target\\debug\\deps\\libarrayvec-2c8983eab37495a8.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpm1ejdbkb/arrayvec-0.7.6#arrayvec@0.7.6",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "arrayvec",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: redundant field names in struct initialization\n  --> src\\errors.rs:17:13\n   |\n17 |             element: element,\n   |             ^^^^^^^^^^^^^^^^ help: replace it with: `element`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n   = note: `#[warn(clippy::redundant_field_names)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::redundant_field_names)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace it with",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 446,
                        "byte_start": 430,
                        "column_end": 29,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 17,
                        "line_start": 17,
                        "suggested_replacement": "element",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 13,
                            "text": "            element: element,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_field_names",
                  "explanation": null
                },
                "level": "warning",
                "message": "redundant field names in struct initialization",
                "spans": [
                  {
                    "byte_end": 446,
                    "byte_start": 430,
                    "column_end": 29,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\errors.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 17,
                    "line_start": 17,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 13,
                        "text": "            element: element,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpm1ejdbkb/arrayvec-0.7.6#arrayvec@0.7.6",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "arrayvec",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: constants have by default a `'static` lifetime\n  --> src\\errors.rs:32:18\n   |\n32 | const CAPERROR: &'static str = \"insufficient capacity\";\n   |                 -^^^^^^^---- help: consider removing `'static`: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n   = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::redundant_static_lifetimes)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing `'static`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 756,
                        "byte_start": 744,
                        "column_end": 29,
                        "column_start": 17,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 32,
                        "line_start": 32,
                        "suggested_replacement": "&str",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 17,
                            "text": "const CAPERROR: &'static str = \"insufficient capacity\";"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_static_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "constants have by default a `'static` lifetime",
                "spans": [
                  {
                    "byte_end": 752,
                    "byte_start": 745,
                    "column_end": 25,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "src\\errors.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 32,
                    "line_start": 32,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 18,
                        "text": "const CAPERROR: &'static str = \"insufficient capacity\";"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpm1ejdbkb/arrayvec-0.7.6#arrayvec@0.7.6",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "arrayvec",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unsafe function's docs are missing a `# Safety` section\n   --> src\\arrayvec.rs:230:5\n    |\n230 |     pub unsafe fn push_unchecked(&mut self, element: T) {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::missing_safety_doc)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::missing_safety_doc",
                  "explanation": null
                },
                "level": "warning",
                "message": "unsafe function's docs are missing a `# Safety` section",
                "spans": [
                  {
                    "byte_end": 6363,
                    "byte_start": 6312,
                    "column_end": 56,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\arrayvec.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 230,
                    "line_start": 230,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 5,
                        "text": "    pub unsafe fn push_unchecked(&mut self, element: T) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpm1ejdbkb/arrayvec-0.7.6#arrayvec@0.7.6",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "arrayvec",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unsafe function's docs are missing a `# Safety` section\n   --> src\\arrayvec.rs:545:5\n    |\n545 |     pub unsafe fn set_len(&mut self, length: usize) {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::missing_safety_doc",
                  "explanation": null
                },
                "level": "warning",
                "message": "unsafe function's docs are missing a `# Safety` section",
                "spans": [
                  {
                    "byte_end": 16316,
                    "byte_start": 16269,
                    "column_end": 52,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\arrayvec.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 545,
                    "line_start": 545,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 52,
                        "highlight_start": 5,
                        "text": "    pub unsafe fn set_len(&mut self, length: usize) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpm1ejdbkb/arrayvec-0.7.6#arrayvec@0.7.6",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "arrayvec",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unsafe function's docs are missing a `# Safety` section\n   --> src\\arrayvec.rs:669:5\n    |\n669 |     pub unsafe fn into_inner_unchecked(self) -> [T; CAP] {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::missing_safety_doc",
                  "explanation": null
                },
                "level": "warning",
                "message": "unsafe function's docs are missing a `# Safety` section",
                "spans": [
                  {
                    "byte_end": 20634,
                    "byte_start": 20582,
                    "column_end": 57,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\arrayvec.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 669,
                    "line_start": 669,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 5,
                        "text": "    pub unsafe fn into_inner_unchecked(self) -> [T; CAP] {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpm1ejdbkb/arrayvec-0.7.6#arrayvec@0.7.6",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "arrayvec",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: returning the result of a `let` binding from a block\n   --> src\\arrayvec.rs:673:9\n    |\n672 |         let array = ptr::read(self_.as_ptr() as *const [T; CAP]);\n    |         --------------------------------------------------------- unnecessary `let` binding\n673 |         array\n    |         ^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n672 ~         \n673 ~         ptr::read(self_.as_ptr() as *const [T; CAP])\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::let_and_return)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "return the expression directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20802,
                        "byte_start": 20745,
                        "column_end": 66,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\arrayvec.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 672,
                        "line_start": 672,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 66,
                            "highlight_start": 9,
                            "text": "        let array = ptr::read(self_.as_ptr() as *const [T; CAP]);"
                          }
                        ]
                      },
                      {
                        "byte_end": 20816,
                        "byte_start": 20811,
                        "column_end": 14,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\arrayvec.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 673,
                        "line_start": 673,
                        "suggested_replacement": "ptr::read(self_.as_ptr() as *const [T; CAP])",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 14,
                            "highlight_start": 9,
                            "text": "        array"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::let_and_return",
                  "explanation": null
                },
                "level": "warning",
                "message": "returning the result of a `let` binding from a block",
                "spans": [
                  {
                    "byte_end": 20802,
                    "byte_start": 20745,
                    "column_end": 66,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\arrayvec.rs",
                    "is_primary": false,
                    "label": "unnecessary `let` binding",
                    "line_end": 672,
                    "line_start": 672,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 9,
                        "text": "        let array = ptr::read(self_.as_ptr() as *const [T; CAP]);"
                      }
                    ]
                  },
                  {
                    "byte_end": 20816,
                    "byte_start": 20811,
                    "column_end": 14,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\arrayvec.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 673,
                    "line_start": 673,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 14,
                        "highlight_start": 9,
                        "text": "        array"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpm1ejdbkb/arrayvec-0.7.6#arrayvec@0.7.6",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "arrayvec",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: replacing a value of type `T` with `T::default()` is better expressed using `std::mem::take`\n   --> src\\arrayvec.rs:686:9\n    |\n686 |         mem::replace(self, Self::new())\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::mem::take(self)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mem_replace_with_default\n    = note: `#[warn(clippy::mem_replace_with_default)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mem_replace_with_default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::mem_replace_with_default)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 21200,
                        "byte_start": 21169,
                        "column_end": 40,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\arrayvec.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 686,
                        "line_start": 686,
                        "suggested_replacement": "std::mem::take(self)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 9,
                            "text": "        mem::replace(self, Self::new())"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::mem_replace_with_default",
                  "explanation": null
                },
                "level": "warning",
                "message": "replacing a value of type `T` with `T::default()` is better expressed using `std::mem::take`",
                "spans": [
                  {
                    "byte_end": 21200,
                    "byte_start": 21169,
                    "column_end": 40,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\arrayvec.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 686,
                    "line_start": 686,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 9,
                        "text": "        mem::replace(self, Self::new())"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpm1ejdbkb/arrayvec-0.7.6#arrayvec@0.7.6",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "arrayvec",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this loop could be written as a `for` loop\n    --> src\\arrayvec.rs:1016:9\n     |\n1016 |         while let Some(_) = self.next() { }\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for _ in self.by_ref()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_on_iterator\n     = note: `#[warn(clippy::while_let_on_iterator)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_on_iterator",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::while_let_on_iterator)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 30006,
                        "byte_start": 29975,
                        "column_end": 40,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\arrayvec.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1016,
                        "line_start": 1016,
                        "suggested_replacement": "for _ in self.by_ref()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 9,
                            "text": "        while let Some(_) = self.next() { }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::while_let_on_iterator",
                  "explanation": null
                },
                "level": "warning",
                "message": "this loop could be written as a `for` loop",
                "spans": [
                  {
                    "byte_end": 30006,
                    "byte_start": 29975,
                    "column_end": 40,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\arrayvec.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1016,
                    "line_start": 1016,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 9,
                        "text": "        while let Some(_) = self.next() { }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpm1ejdbkb/arrayvec-0.7.6#arrayvec@0.7.6",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "arrayvec",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `match` expression can be replaced with `?`\n   --> src\\array_string.rs:314:18\n    |\n314 |           let ch = match self.chars().rev().next() {\n    |  __________________^\n315 | |             Some(ch) => ch,\n316 | |             None => return None,\n317 | |         };\n    | |_________^ help: try instead: `self.chars().rev().next()?`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n    = note: `#[warn(clippy::question_mark)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::question_mark)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9422,
                        "byte_start": 9318,
                        "column_end": 10,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\array_string.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 317,
                        "line_start": 314,
                        "suggested_replacement": "self.chars().rev().next()?",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 18,
                            "text": "        let ch = match self.chars().rev().next() {"
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "            Some(ch) => ch,"
                          },
                          {
                            "highlight_end": 33,
                            "highlight_start": 1,
                            "text": "            None => return None,"
                          },
                          {
                            "highlight_end": 10,
                            "highlight_start": 1,
                            "text": "        };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::question_mark",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `match` expression can be replaced with `?`",
                "spans": [
                  {
                    "byte_end": 9422,
                    "byte_start": 9318,
                    "column_end": 10,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "src\\array_string.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 317,
                    "line_start": 314,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 18,
                        "text": "        let ch = match self.chars().rev().next() {"
                      },
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "            Some(ch) => ch,"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "            None => return None,"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpm1ejdbkb/arrayvec-0.7.6#arrayvec@0.7.6",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "arrayvec",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: manual backwards iteration\n   --> src\\array_string.rs:314:36\n    |\n314 |         let ch = match self.chars().rev().next() {\n    |                                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::manual_next_back)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9349,
                        "byte_start": 9336,
                        "column_end": 49,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "src\\array_string.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 314,
                        "line_start": 314,
                        "suggested_replacement": ".next_back()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 36,
                            "text": "        let ch = match self.chars().rev().next() {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_next_back",
                  "explanation": null
                },
                "level": "warning",
                "message": "manual backwards iteration",
                "spans": [
                  {
                    "byte_end": 9349,
                    "byte_start": 9336,
                    "column_end": 49,
                    "column_start": 36,
                    "expansion": null,
                    "file_name": "src\\array_string.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 314,
                    "line_start": 314,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 36,
                        "text": "        let ch = match self.chars().rev().next() {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpm1ejdbkb/arrayvec-0.7.6#arrayvec@0.7.6",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "arrayvec",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unsafe function's docs are missing a `# Safety` section\n   --> src\\array_string.rs:404:5\n    |\n404 |     pub unsafe fn set_len(&mut self, length: usize) {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::missing_safety_doc",
                  "explanation": null
                },
                "level": "warning",
                "message": "unsafe function's docs are missing a `# Safety` section",
                "spans": [
                  {
                    "byte_end": 12173,
                    "byte_start": 12126,
                    "column_end": 52,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\array_string.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 404,
                    "line_start": 404,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 52,
                        "highlight_start": 5,
                        "text": "    pub unsafe fn set_len(&mut self, length: usize) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpm1ejdbkb/arrayvec-0.7.6#arrayvec@0.7.6",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "arrayvec",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary implementation of `clone_from` on a `Copy` type\n   --> src\\array_string.rs:535:5\n    |\n535 | /     fn clone_from(&mut self, rhs: &Self) {\n536 | |         // guaranteed to fit due to types matching.\n537 | |         self.clear();\n538 | |         self.try_push_str(rhs).ok();\n539 | |     }\n    | |_____^ help: remove it\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_canonical_clone_impl\n    = note: `#[warn(clippy::non_canonical_clone_impl)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_canonical_clone_impl",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::non_canonical_clone_impl)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "remove it",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 15378,
                        "byte_start": 15223,
                        "column_end": 6,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\array_string.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 539,
                        "line_start": 535,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 5,
                            "text": "    fn clone_from(&mut self, rhs: &Self) {"
                          },
                          {
                            "highlight_end": 52,
                            "highlight_start": 1,
                            "text": "        // guaranteed to fit due to types matching."
                          },
                          {
                            "highlight_end": 22,
                            "highlight_start": 1,
                            "text": "        self.clear();"
                          },
                          {
                            "highlight_end": 37,
                            "highlight_start": 1,
                            "text": "        self.try_push_str(rhs).ok();"
                          },
                          {
                            "highlight_end": 6,
                            "highlight_start": 1,
                            "text": "    }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::non_canonical_clone_impl",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary implementation of `clone_from` on a `Copy` type",
                "spans": [
                  {
                    "byte_end": 15378,
                    "byte_start": 15223,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\array_string.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 539,
                    "line_start": 535,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 43,
                        "highlight_start": 5,
                        "text": "    fn clone_from(&mut self, rhs: &Self) {"
                      },
                      {
                        "highlight_end": 52,
                        "highlight_start": 1,
                        "text": "        // guaranteed to fit due to types matching."
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "        self.clear();"
                      },
                      {
                        "highlight_end": 37,
                        "highlight_start": 1,
                        "text": "        self.try_push_str(rhs).ok();"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpm1ejdbkb/arrayvec-0.7.6#arrayvec@0.7.6",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "arrayvec",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: non-canonical implementation of `partial_cmp` on an `Ord` type\n   --> src\\array_string.rs:542:1\n    |\n542 | /  impl<const CAP: usize> PartialOrd for ArrayString<CAP>\n543 | |  {\n544 | |      fn partial_cmp(&self, rhs: &Self) -> Option<cmp::Ordering> {\n    | | ________________________________________________________________-\n545 | ||         (**self).partial_cmp(&**rhs)\n546 | ||     }\n    | ||_____- help: change this to: `{ Some(self.cmp(rhs)) }`\n...   |\n550 | |      fn ge(&self, rhs: &Self) -> bool { **self >= **rhs }\n551 | |  }\n    | |__^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_canonical_partial_ord_impl\n    = note: `#[warn(clippy::non_canonical_partial_ord_impl)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_canonical_partial_ord_impl",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::non_canonical_partial_ord_impl)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 15546,
                        "byte_start": 15502,
                        "column_end": 6,
                        "column_start": 64,
                        "expansion": null,
                        "file_name": "src\\array_string.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 546,
                        "line_start": 544,
                        "suggested_replacement": "{ Some(self.cmp(rhs)) }",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 65,
                            "highlight_start": 64,
                            "text": "    fn partial_cmp(&self, rhs: &Self) -> Option<cmp::Ordering> {"
                          },
                          {
                            "highlight_end": 37,
                            "highlight_start": 1,
                            "text": "        (**self).partial_cmp(&**rhs)"
                          },
                          {
                            "highlight_end": 6,
                            "highlight_start": 1,
                            "text": "    }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::non_canonical_partial_ord_impl",
                  "explanation": null
                },
                "level": "warning",
                "message": "non-canonical implementation of `partial_cmp` on an `Ord` type",
                "spans": [
                  {
                    "byte_end": 15774,
                    "byte_start": 15382,
                    "column_end": 2,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\array_string.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 551,
                    "line_start": 542,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 55,
                        "highlight_start": 1,
                        "text": "impl<const CAP: usize> PartialOrd for ArrayString<CAP>"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "{"
                      },
                      {
                        "highlight_end": 65,
                        "highlight_start": 1,
                        "text": "    fn partial_cmp(&self, rhs: &Self) -> Option<cmp::Ordering> {"
                      },
                      {
                        "highlight_end": 37,
                        "highlight_start": 1,
                        "text": "        (**self).partial_cmp(&**rhs)"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      },
                      {
                        "highlight_end": 56,
                        "highlight_start": 1,
                        "text": "    fn lt(&self, rhs: &Self) -> bool { **self < **rhs }"
                      },
                      {
                        "highlight_end": 57,
                        "highlight_start": 1,
                        "text": "    fn le(&self, rhs: &Self) -> bool { **self <= **rhs }"
                      },
                      {
                        "highlight_end": 56,
                        "highlight_start": 1,
                        "text": "    fn gt(&self, rhs: &Self) -> bool { **self > **rhs }"
                      },
                      {
                        "highlight_end": 57,
                        "highlight_start": 1,
                        "text": "    fn ge(&self, rhs: &Self) -> bool { **self >= **rhs }"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpm1ejdbkb/arrayvec-0.7.6#arrayvec@0.7.6",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "arrayvec",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: redundant closure\n   --> src\\array_string.rs:689:32\n    |\n689 |         v.write_fmt(f).map_err(|e| CapacityError::new(e))?;\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `CapacityError::new`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::redundant_closure)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace the closure with the function itself",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20239,
                        "byte_start": 20214,
                        "column_end": 57,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\array_string.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 689,
                        "line_start": 689,
                        "suggested_replacement": "CapacityError::new",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 57,
                            "highlight_start": 32,
                            "text": "        v.write_fmt(f).map_err(|e| CapacityError::new(e))?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_closure",
                  "explanation": null
                },
                "level": "warning",
                "message": "redundant closure",
                "spans": [
                  {
                    "byte_end": 20239,
                    "byte_start": 20214,
                    "column_end": 57,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\array_string.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 689,
                    "line_start": 689,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 32,
                        "text": "        v.write_fmt(f).map_err(|e| CapacityError::new(e))?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpm1ejdbkb/arrayvec-0.7.6#arrayvec@0.7.6",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "arrayvec",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: literal with an empty format string\n  --> src\\errors.rs:46:29\n   |\n46 |         write!(f, \"{}: {}\", \"CapacityError\", CAPERROR)\n   |                             ^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#write_literal\n   = note: `#[warn(clippy::write_literal)]` on by default\nhelp: try\n   |\n46 -         write!(f, \"{}: {}\", \"CapacityError\", CAPERROR)\n46 +         write!(f, \"CapacityError: {}\", CAPERROR)\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#write_literal",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::write_literal)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1150,
                        "byte_start": 1148,
                        "column_end": 22,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 46,
                        "line_start": 46,
                        "suggested_replacement": "CapacityError",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 22,
                            "highlight_start": 20,
                            "text": "        write!(f, \"{}: {}\", \"CapacityError\", CAPERROR)"
                          }
                        ]
                      },
                      {
                        "byte_end": 1172,
                        "byte_start": 1155,
                        "column_end": 44,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 46,
                        "line_start": 46,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 27,
                            "text": "        write!(f, \"{}: {}\", \"CapacityError\", CAPERROR)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::write_literal",
                  "explanation": null
                },
                "level": "warning",
                "message": "literal with an empty format string",
                "spans": [
                  {
                    "byte_end": 1172,
                    "byte_start": 1157,
                    "column_end": 44,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\errors.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 46,
                    "line_start": 46,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 44,
                        "highlight_start": 29,
                        "text": "        write!(f, \"{}: {}\", \"CapacityError\", CAPERROR)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpm1ejdbkb/arrayvec-0.7.6#arrayvec@0.7.6",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "arrayvec",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpm1ejdbkb\\arrayvec-0.7.6\\target\\debug\\deps\\libarrayvec-bbb6507a1e4396cb.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 13
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {}
          },
          "note": "Crate analysis performed."
        },
        "crate_metadata": {
          "name": "arrayvec",
          "version": "unknown",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": "",
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "ai_enrichment": {
          "provider": "azure",
          "model": "gpt-4o",
          "readme_summary": null,
          "use_case": null,
          "score": null,
          "factual_counterfactual": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-733c7664-bcb82dbe-1751108887",
      "timestamp": "2025-06-28T11:08:07.830424+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]