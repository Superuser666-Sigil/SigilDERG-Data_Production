[
  {
    "execution_id": "exec-4a4c4d6b-19b85f1a-1751260476",
    "timestamp": "2025-06-30T05:14:36.955480+00:00",
    "sacred_chain": {
      "input_data": "itertools",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'itertools' -> 'itertools'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "itertools",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/itertools",
            "title": "itertools v0.14.0",
            "content": {
              "raw_markdown": "#  itertools v0.14.0\nExtra iterator adaptors, iterator methods, free functions, and macros. \n  * [ #data-structure ](https://crates.io/keywords/data-structure)\n  * [ #iterator ](https://crates.io/keywords/iterator)\n  * [ #product ](https://crates.io/keywords/product)\n  * [ #zip ](https://crates.io/keywords/zip)\n\n\n  * [ Readme ](https://crates.io/crates/itertools)\n  * [ 130 Versions ](https://crates.io/crates/itertools/versions)\n  * [ Dependencies ](https://crates.io/crates/itertools/dependencies)\n  * [ Dependents ](https://crates.io/crates/itertools/reverse_dependencies)\n\n\n## Metadata\n6 months ago \nv1.63.0 \n[ MIT ](https://choosealicense.com/licenses/mit) OR [ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0)\n149 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add itertools\nOr add the following line to your Cargo.toml:\nitertools = \"0.14.0\"\n## Documentation\n[ docs.rs/itertools ](https://docs.rs/itertools/)\n## Repository\n[ github.com/rust-itertools/itertools ](https://github.com/rust-itertools/itertools)\n## Owners\n## Categories\n  * [Rust patterns](https://crates.io/categories/rust-patterns)\n  * [No standard library](https://crates.io/categories/no-std)\n  * [Algorithms](https://crates.io/categories/algorithms)\n  * [No dynamic allocation](https://crates.io/categories/no-std::no-alloc)\n\n\n[ Report crate ](https://crates.io/support?crate=itertools&inquire=crate-violation)\n### Stats Overview\n528,144,909 Downloads all time\n130 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  itertools v0.14.0\nExtra iterator adaptors, iterator methods, free functions, and macros. \n  *  #data-structure \u27e81\u27e9\n  *  #iterator \u27e82\u27e9\n  *  #product \u27e83\u27e9\n  *  #zip \u27e84\u27e9\n\n\n  *  Readme \u27e85\u27e9\n  *  130 Versions \u27e86\u27e9\n  *  Dependencies \u27e87\u27e9\n  *  Dependents \u27e88\u27e9\n\n\n## Metadata\n6 months ago \nv1.63.0 \n MIT \u27e89\u27e9 OR  Apache-2.0 \u27e810\u27e9\n149 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add itertools\nOr add the following line to your Cargo.toml:\nitertools = \"0.14.0\"\n## Documentation\n docs.rs/itertools \u27e811\u27e9\n## Repository\n github.com/rust-itertools/itertools \u27e812\u27e9\n## Owners\n## Categories\n  * Rust patterns\u27e813\u27e9\n  * No standard library\u27e814\u27e9\n  * Algorithms\u27e815\u27e9\n  * No dynamic allocation\u27e816\u27e9\n\n\n Report crate \u27e817\u27e9\n### Stats Overview\n528,144,909 Downloads all time\n130 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/data-structure:  #data-structure \n\u27e82\u27e9 https://crates.io/keywords/iterator:  #iterator \n\u27e83\u27e9 https://crates.io/keywords/product:  #product \n\u27e84\u27e9 https://crates.io/keywords/zip:  #zip \n\u27e85\u27e9 https://crates.io/crates/itertools:  Readme \n\u27e86\u27e9 https://crates.io/crates/itertools/versions:  130 Versions \n\u27e87\u27e9 https://crates.io/crates/itertools/dependencies:  Dependencies \n\u27e88\u27e9 https://crates.io/crates/itertools/reverse_dependencies:  Dependents \n\u27e89\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e810\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e811\u27e9 https://docs.rs/itertools/:  docs.rs/itertools \n\u27e812\u27e9 https://github.com/rust-itertools/itertools:  github.com/rust-itertools/itertools \n\u27e813\u27e9 https://crates.io/categories/rust-patterns: Rust patterns\n\u27e814\u27e9 https://crates.io/categories/no-std: No standard library\n\u27e815\u27e9 https://crates.io/categories/algorithms: Algorithms\n\u27e816\u27e9 https://crates.io/categories/no-std::no-alloc: No dynamic allocation\n\u27e817\u27e9 https://crates.io/support?crate=itertools&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1602,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "114266.7743421"
          },
          "docs_rs": {
            "url": "https://docs.rs/itertools",
            "title": "Crate itertoolsCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/itertools/latest/itertools/all.html \"show sidebar\")\n# Crate itertoolsCopy item path\n[Settings](https://docs.rs/itertools/latest/settings.html)\n[Help](https://docs.rs/itertools/latest/help.html)\nSummary[Source](https://docs.rs/itertools/latest/src/itertools/lib.rs.html#1-4713)\nExpand description\nExtra iterator adaptors, functions and macros.\nTo extend [`Iterator`](https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html \"trait core::iter::traits::iterator::Iterator\") with methods in this crate, import the [`Itertools`](https://docs.rs/itertools/latest/itertools/trait.Itertools.html \"trait itertools::Itertools\") trait:\n```\nuse itertools::Itertools;\n```\n\nNow, new methods like [`interleave`](https://docs.rs/itertools/latest/itertools/trait.Itertools.html#method.interleave \"method itertools::Itertools::interleave\") are available on all iterators:\n```\nuse itertools::Itertools;\nlet it = (1..3).interleave(vec![-1, -2]);\nitertools::assert_equal(it, vec![1, -1, 2, -2]);\n```\n\nMost iterator methods are also provided as functions (with the benefit that they convert parameters using [`IntoIterator`](https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html \"trait core::iter::traits::collect::IntoIterator\")):\n```\nuse itertools::interleave;\nfor elt in interleave(&[1, 2, 3], &[2, 3, 4]) {\n  /* loop body */\n}\n```\n\n### [\u00a7](https://docs.rs/itertools/latest/itertools/#crate-features)Crate Features\n  * `use_std`\n    * Enabled by default.\n    * Disable to compile itertools using `#![no_std]`. This disables any item that depend on allocations (see the `use_alloc` feature) and hash maps (like `unique`, `counts`, `into_grouping_map` and more).\n  * `use_alloc`\n    * Enabled by default.\n    * Enables any item that depend on allocations (like `chunk_by`, `kmerge`, `join` and many more).\n\n\n### [\u00a7](https://docs.rs/itertools/latest/itertools/#rust-version)Rust Version\nThis version of itertools requires Rust 1.63.0 or later.\n## Re-exports[\u00a7](https://docs.rs/itertools/latest/itertools/#reexports)\n\n`pub use crate::structs[](https://docs.rs/itertools/latest/itertools/structs/index.html \"mod itertools::structs\")::*;`\n\n## Modules[\u00a7](https://docs.rs/itertools/latest/itertools/#modules)\n\n[structs](https://docs.rs/itertools/latest/itertools/structs/index.html \"mod itertools::structs\")\n    The concrete iterator types.\n\n[traits](https://docs.rs/itertools/latest/itertools/traits/index.html \"mod itertools::traits\")\n    Traits helpful for using certain `Itertools` methods in generic contexts.\n## Macros[\u00a7](https://docs.rs/itertools/latest/itertools/#macros)\n\n[chain](https://docs.rs/itertools/latest/itertools/macro.chain.html \"macro itertools::chain\")\n    [Chain](https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#method.chain \"method core::iter::traits::iterator::Iterator::chain\") zero or more iterators together into one sequence.\n\n[iproduct](https://docs.rs/itertools/latest/itertools/macro.iproduct.html \"macro itertools::iproduct\")\n    Create an iterator over the \u201ccartesian product\u201d of iterators.\n\n[izip](https://docs.rs/itertools/latest/itertools/macro.izip.html \"macro itertools::izip\")\n    Create an iterator running multiple iterators in lockstep.\n## Enums[\u00a7](https://docs.rs/itertools/latest/itertools/#enums)\n\n[Diff](https://docs.rs/itertools/latest/itertools/enum.Diff.html \"enum itertools::Diff\")\n    A type returned by the [`diff_with`](https://docs.rs/itertools/latest/itertools/fn.diff_with.html \"fn itertools::diff_with\") function.\n\n[Either](https://docs.rs/itertools/latest/itertools/enum.Either.html \"enum itertools::Either\")\n    The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.\n\n[EitherOrBoth](https://docs.rs/itertools/latest/itertools/enum.EitherOrBoth.html \"enum itertools::EitherOrBoth\")\n    Value that either holds a single A or B, or both.\n\n[FoldWhile](https://docs.rs/itertools/latest/itertools/enum.FoldWhile.html \"enum itertools::FoldWhile\")\n    An enum used for controlling the execution of `fold_while`.\n\n[MinMaxResult](https://docs.rs/itertools/latest/itertools/enum.MinMaxResult.html \"enum itertools::MinMaxResult\")\n    `MinMaxResult` is an enum returned by `minmax`.\n\n[Position](https://docs.rs/itertools/latest/itertools/enum.Position.html \"enum itertools::Position\")\n    The first component of the value yielded by `WithPosition`. Indicates the position of this element in the iterator results.\n## Traits[\u00a7](https://docs.rs/itertools/latest/itertools/#traits)\n\n[Itertools](https://docs.rs/itertools/latest/itertools/trait.Itertools.html \"trait itertools::Itertools\")\n    An [`Iterator`](https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html \"trait core::iter::traits::iterator::Iterator\") blanket implementation that provides extra adaptors and methods.\n\n[MultiUnzip](https://docs.rs/itertools/latest/itertools/trait.MultiUnzip.html \"trait itertools::MultiUnzip\")\n    An iterator that can be unzipped into multiple collections.\n\n[PeekingNext](https://docs.rs/itertools/latest/itertools/trait.PeekingNext.html \"trait itertools::PeekingNext\")\n    An iterator that allows peeking at an element before deciding to accept it.\n## Functions[\u00a7](https://docs.rs/itertools/latest/itertools/#functions)\n\n[all](https://docs.rs/itertools/latest/itertools/fn.all.html \"fn itertools::all\")\n    Test whether the predicate holds for all elements in the iterable.\n\n[any](https://docs.rs/itertools/latest/itertools/fn.any.html \"fn itertools::any\")\n    Test whether the predicate holds for any elements in the iterable.\n\n[assert_equal](https://docs.rs/itertools/latest/itertools/fn.assert_equal.html \"fn itertools::assert_equal\")\n    Assert that two iterables produce equal sequences, with the same semantics as [`equal(a, b)`](https://docs.rs/itertools/latest/itertools/fn.equal.html \"fn itertools::equal\").\n\n[chain](https://docs.rs/itertools/latest/itertools/fn.chain.html \"fn itertools::chain\")\n    Takes two iterables and creates a new iterator over both in sequence.\n\n[cloned](https://docs.rs/itertools/latest/itertools/fn.cloned.html \"fn itertools::cloned\")\n    Create an iterator that clones each element from `&T` to `T`.\n\n[concat](https://docs.rs/itertools/latest/itertools/fn.concat.html \"fn itertools::concat\")\n    Combine all an iterator\u2019s elements into one element by using [`Extend`](https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html \"trait core::iter::traits::collect::Extend\").\n\n[cons_tuples](https://docs.rs/itertools/latest/itertools/fn.cons_tuples.html \"fn itertools::cons_tuples\")\n    Create an iterator that maps for example iterators of `((A, B), C)` to `(A, B, C)`.\n\n[diff_with](https://docs.rs/itertools/latest/itertools/fn.diff_with.html \"fn itertools::diff_with\")\n    Compares every element yielded by both `i` and `j` with the given function in lock-step and returns a [`Diff`](https://docs.rs/itertools/latest/itertools/enum.Diff.html \"enum itertools::Diff\") which describes how `j` differs from `i`.\n\n[enumerate](https://docs.rs/itertools/latest/itertools/fn.enumerate.html \"fn itertools::enumerate\")\n    Iterate `iterable` with a running index.\n\n[equal](https://docs.rs/itertools/latest/itertools/fn.equal.html \"fn itertools::equal\")\n    Return `true` if both iterables produce equal sequences (elements pairwise equal and sequences of the same length), `false` otherwise.\n\n[fold](https://docs.rs/itertools/latest/itertools/fn.fold.html \"fn itertools::fold\")\n    Perform a fold operation over the iterable.\n\n[interleave](https://docs.rs/itertools/latest/itertools/fn.interleave.html \"fn itertools::interleave\")\n    Create an iterator that interleaves elements in `i` and `j`.\n\n[intersperse](https://docs.rs/itertools/latest/itertools/fn.intersperse.html \"fn itertools::intersperse\")\n    Iterate `iterable` with a particular value inserted between each element.\n\n[intersperse_with](https://docs.rs/itertools/latest/itertools/fn.intersperse_with.html \"fn itertools::intersperse_with\")\n    Iterate `iterable` with a particular value created by a function inserted between each element.\n\n[iterate](https://docs.rs/itertools/latest/itertools/fn.iterate.html \"fn itertools::iterate\")\n    Creates a new iterator that infinitely applies function to value and yields results.\n\n[join](https://docs.rs/itertools/latest/itertools/fn.join.html \"fn itertools::join\")\n    Combine all iterator elements into one `String`, separated by `sep`.\n\n[kmerge](https://docs.rs/itertools/latest/itertools/fn.kmerge.html \"fn itertools::kmerge\")\n    Create an iterator that merges elements of the contained iterators using the ordering function.\n\n[kmerge_by](https://docs.rs/itertools/latest/itertools/fn.kmerge_by.html \"fn itertools::kmerge_by\")\n    Create an iterator that merges elements of the contained iterators.\n\n[max](https://docs.rs/itertools/latest/itertools/fn.max.html \"fn itertools::max\")\n    Return the maximum value of the iterable.\n\n[merge](https://docs.rs/itertools/latest/itertools/fn.merge.html \"fn itertools::merge\")\n    Create an iterator that merges elements in `i` and `j`.\n\n[merge_join_by](https://docs.rs/itertools/latest/itertools/fn.merge_join_by.html \"fn itertools::merge_join_by\")\n    Return an iterator adaptor that merge-joins items from the two base iterators in ascending order.\n\n[min](https://docs.rs/itertools/latest/itertools/fn.min.html \"fn itertools::min\")\n    Return the minimum value of the iterable.\n\n[multipeek](https://docs.rs/itertools/latest/itertools/fn.multipeek.html \"fn itertools::multipeek\")\n    An iterator adaptor that allows the user to peek at multiple `.next()` values without advancing the base iterator.\n\n[multiunzip](https://docs.rs/itertools/latest/itertools/fn.multiunzip.html \"fn itertools::multiunzip\")\n    Converts an iterator of tuples into a tuple of containers.\n\n[multizip](https://docs.rs/itertools/latest/itertools/fn.multizip.html \"fn itertools::multizip\")\n    An iterator that generalizes `.zip()` and allows running multiple iterators in lockstep.\n\n[partition](https://docs.rs/itertools/latest/itertools/fn.partition.html \"fn itertools::partition\")\n    Partition a sequence using predicate `pred` so that elements that map to `true` are placed before elements which map to `false`.\n\n[peek_nth](https://docs.rs/itertools/latest/itertools/fn.peek_nth.html \"fn itertools::peek_nth\")\n    A drop-in replacement for [`std::iter::Peekable`](https://doc.rust-lang.org/nightly/core/iter/adapters/peekable/struct.Peekable.html \"struct core::iter::adapters::peekable::Peekable\") which adds a `peek_nth` method allowing the user to `peek` at a value several iterations forward without advancing the base iterator.\n\n[process_results](https://docs.rs/itertools/latest/itertools/fn.process_results.html \"fn itertools::process_results\")\n    \u201cLift\u201d a function of the values of an iterator so that it can process an iterator of `Result` values instead.\n\n[put_back](https://docs.rs/itertools/latest/itertools/fn.put_back.html \"fn itertools::put_back\")\n    Create an iterator where you can put back a single item\n\n[put_back_n](https://docs.rs/itertools/latest/itertools/fn.put_back_n.html \"fn itertools::put_back_n\")\n    Create an iterator where you can put back multiple values to the front of the iteration.\n\n[rciter](https://docs.rs/itertools/latest/itertools/fn.rciter.html \"fn itertools::rciter\")\n    Return an iterator inside a `Rc<RefCell<_>>` wrapper.\n\n[repeat_n](https://docs.rs/itertools/latest/itertools/fn.repeat_n.html \"fn itertools::repeat_n\")\n    Create an iterator that produces `n` repetitions of `element`.\n\n[rev](https://docs.rs/itertools/latest/itertools/fn.rev.html \"fn itertools::rev\")\n    Iterate `iterable` in reverse.\n\n[sorted](https://docs.rs/itertools/latest/itertools/fn.sorted.html \"fn itertools::sorted\")\n    Sort all iterator elements into a new iterator in ascending order.\n\n[sorted_unstable](https://docs.rs/itertools/latest/itertools/fn.sorted_unstable.html \"fn itertools::sorted_unstable\")\n    Sort all iterator elements into a new iterator in ascending order. This sort is unstable (i.e., may reorder equal elements).\n\n[unfold](https://docs.rs/itertools/latest/itertools/fn.unfold.html \"fn itertools::unfold\")Deprecated\n    Creates a new unfold source with the specified closure as the \u201citerator function\u201d and an initial state to eventually pass to the closure\n\n[zip](https://docs.rs/itertools/latest/itertools/fn.zip.html \"fn itertools::zip\")Deprecated\n    Converts the arguments to iterators and zips them.\n\n[zip_eq](https://docs.rs/itertools/latest/itertools/fn.zip_eq.html \"fn itertools::zip_eq\")\n    Zips two iterators but **panics** if they are not of the same length.\n",
              "markdown_with_citations": "[](https://docs.rs/itertools/latest/itertools/all.html \"show sidebar\")\n# Crate itertoolsCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nExtra iterator adaptors, functions and macros.\nTo extend `Iterator`\u27e84\u27e9 with methods in this crate, import the `Itertools`\u27e85\u27e9 trait:\n```\nuse itertools::Itertools;\n```\n\nNow, new methods like `interleave`\u27e86\u27e9 are available on all iterators:\n```\nuse itertools::Itertools;\nlet it = (1..3).interleave(vec![-1, -2]);\nitertools::assert_equal(it, vec![1, -1, 2, -2]);\n```\n\nMost iterator methods are also provided as functions (with the benefit that they convert parameters using `IntoIterator`\u27e87\u27e9):\n```\nuse itertools::interleave;\nfor elt in interleave(&[1, 2, 3], &[2, 3, 4]) {\n  /* loop body */\n}\n```\n\n### \u00a7\u27e88\u27e9Crate Features\n  * `use_std`\n    * Enabled by default.\n    * Disable to compile itertools using `#![no_std]`. This disables any item that depend on allocations (see the `use_alloc` feature) and hash maps (like `unique`, `counts`, `into_grouping_map` and more).\n  * `use_alloc`\n    * Enabled by default.\n    * Enables any item that depend on allocations (like `chunk_by`, `kmerge`, `join` and many more).\n\n\n### \u00a7\u27e89\u27e9Rust Version\nThis version of itertools requires Rust 1.63.0 or later.\n## Re-exports\u00a7\u27e810\u27e9\n\n`pub use crate::structs[](https://docs.rs/itertools/latest/itertools/structs/index.html \"mod itertools::structs\")::*;`\n\n## Modules\u00a7\u27e811\u27e9\n\nstructs\u27e812\u27e9\n    The concrete iterator types.\n\ntraits\u27e813\u27e9\n    Traits helpful for using certain `Itertools` methods in generic contexts.\n## Macros\u00a7\u27e814\u27e9\n\nchain\u27e815\u27e9\n    Chain\u27e816\u27e9 zero or more iterators together into one sequence.\n\niproduct\u27e817\u27e9\n    Create an iterator over the \u201ccartesian product\u201d of iterators.\n\nizip\u27e818\u27e9\n    Create an iterator running multiple iterators in lockstep.\n## Enums\u00a7\u27e819\u27e9\n\nDiff\u27e820\u27e9\n    A type returned by the `diff_with`\u27e821\u27e9 function.\n\nEither\u27e822\u27e9\n    The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.\n\nEitherOrBoth\u27e823\u27e9\n    Value that either holds a single A or B, or both.\n\nFoldWhile\u27e824\u27e9\n    An enum used for controlling the execution of `fold_while`.\n\nMinMaxResult\u27e825\u27e9\n    `MinMaxResult` is an enum returned by `minmax`.\n\nPosition\u27e826\u27e9\n    The first component of the value yielded by `WithPosition`. Indicates the position of this element in the iterator results.\n## Traits\u00a7\u27e827\u27e9\n\nItertools\u27e85\u27e9\n    An `Iterator`\u27e84\u27e9 blanket implementation that provides extra adaptors and methods.\n\nMultiUnzip\u27e828\u27e9\n    An iterator that can be unzipped into multiple collections.\n\nPeekingNext\u27e829\u27e9\n    An iterator that allows peeking at an element before deciding to accept it.\n## Functions\u00a7\u27e830\u27e9\n\nall\u27e831\u27e9\n    Test whether the predicate holds for all elements in the iterable.\n\nany\u27e832\u27e9\n    Test whether the predicate holds for any elements in the iterable.\n\nassert_equal\u27e833\u27e9\n    Assert that two iterables produce equal sequences, with the same semantics as `equal(a, b)`\u27e834\u27e9.\n\nchain\u27e835\u27e9\n    Takes two iterables and creates a new iterator over both in sequence.\n\ncloned\u27e836\u27e9\n    Create an iterator that clones each element from `&T` to `T`.\n\nconcat\u27e837\u27e9\n    Combine all an iterator\u2019s elements into one element by using `Extend`\u27e838\u27e9.\n\ncons_tuples\u27e839\u27e9\n    Create an iterator that maps for example iterators of `((A, B), C)` to `(A, B, C)`.\n\ndiff_with\u27e821\u27e9\n    Compares every element yielded by both `i` and `j` with the given function in lock-step and returns a `Diff`\u27e820\u27e9 which describes how `j` differs from `i`.\n\nenumerate\u27e840\u27e9\n    Iterate `iterable` with a running index.\n\nequal\u27e834\u27e9\n    Return `true` if both iterables produce equal sequences (elements pairwise equal and sequences of the same length), `false` otherwise.\n\nfold\u27e841\u27e9\n    Perform a fold operation over the iterable.\n\ninterleave\u27e842\u27e9\n    Create an iterator that interleaves elements in `i` and `j`.\n\nintersperse\u27e843\u27e9\n    Iterate `iterable` with a particular value inserted between each element.\n\nintersperse_with\u27e844\u27e9\n    Iterate `iterable` with a particular value created by a function inserted between each element.\n\niterate\u27e845\u27e9\n    Creates a new iterator that infinitely applies function to value and yields results.\n\njoin\u27e846\u27e9\n    Combine all iterator elements into one `String`, separated by `sep`.\n\nkmerge\u27e847\u27e9\n    Create an iterator that merges elements of the contained iterators using the ordering function.\n\nkmerge_by\u27e848\u27e9\n    Create an iterator that merges elements of the contained iterators.\n\nmax\u27e849\u27e9\n    Return the maximum value of the iterable.\n\nmerge\u27e850\u27e9\n    Create an iterator that merges elements in `i` and `j`.\n\nmerge_join_by\u27e851\u27e9\n    Return an iterator adaptor that merge-joins items from the two base iterators in ascending order.\n\nmin\u27e852\u27e9\n    Return the minimum value of the iterable.\n\nmultipeek\u27e853\u27e9\n    An iterator adaptor that allows the user to peek at multiple `.next()` values without advancing the base iterator.\n\nmultiunzip\u27e854\u27e9\n    Converts an iterator of tuples into a tuple of containers.\n\nmultizip\u27e855\u27e9\n    An iterator that generalizes `.zip()` and allows running multiple iterators in lockstep.\n\npartition\u27e856\u27e9\n    Partition a sequence using predicate `pred` so that elements that map to `true` are placed before elements which map to `false`.\n\npeek_nth\u27e857\u27e9\n    A drop-in replacement for `std::iter::Peekable`\u27e858\u27e9 which adds a `peek_nth` method allowing the user to `peek` at a value several iterations forward without advancing the base iterator.\n\nprocess_results\u27e859\u27e9\n    \u201cLift\u201d a function of the values of an iterator so that it can process an iterator of `Result` values instead.\n\nput_back\u27e860\u27e9\n    Create an iterator where you can put back a single item\n\nput_back_n\u27e861\u27e9\n    Create an iterator where you can put back multiple values to the front of the iteration.\n\nrciter\u27e862\u27e9\n    Return an iterator inside a `Rc<RefCell<_>>` wrapper.\n\nrepeat_n\u27e863\u27e9\n    Create an iterator that produces `n` repetitions of `element`.\n\nrev\u27e864\u27e9\n    Iterate `iterable` in reverse.\n\nsorted\u27e865\u27e9\n    Sort all iterator elements into a new iterator in ascending order.\n\nsorted_unstable\u27e866\u27e9\n    Sort all iterator elements into a new iterator in ascending order. This sort is unstable (i.e., may reorder equal elements).\n\nunfold\u27e867\u27e9Deprecated\n    Creates a new unfold source with the specified closure as the \u201citerator function\u201d and an initial state to eventually pass to the closure\n\nzip\u27e868\u27e9Deprecated\n    Converts the arguments to iterators and zips them.\n\nzip_eq\u27e869\u27e9\n    Zips two iterators but **panics** if they are not of the same length.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/itertools/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/itertools/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/itertools/latest/src/itertools/lib.rs.html#1-4713: Source\n\u27e84\u27e9 https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html: trait core::iter::traits::iterator::Iterator - `Iterator`\n\u27e85\u27e9 https://docs.rs/itertools/latest/itertools/trait.Itertools.html: trait itertools::Itertools - `Itertools`\n\u27e86\u27e9 https://docs.rs/itertools/latest/itertools/trait.Itertools.html#method.interleave: method itertools::Itertools::interleave - `interleave`\n\u27e87\u27e9 https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html: trait core::iter::traits::collect::IntoIterator - `IntoIterator`\n\u27e88\u27e9 https://docs.rs/itertools/latest/itertools/#crate-features: \u00a7\n\u27e89\u27e9 https://docs.rs/itertools/latest/itertools/#rust-version: \u00a7\n\u27e810\u27e9 https://docs.rs/itertools/latest/itertools/#reexports: \u00a7\n\u27e811\u27e9 https://docs.rs/itertools/latest/itertools/#modules: \u00a7\n\u27e812\u27e9 https://docs.rs/itertools/latest/itertools/structs/index.html: mod itertools::structs - structs\n\u27e813\u27e9 https://docs.rs/itertools/latest/itertools/traits/index.html: mod itertools::traits - traits\n\u27e814\u27e9 https://docs.rs/itertools/latest/itertools/#macros: \u00a7\n\u27e815\u27e9 https://docs.rs/itertools/latest/itertools/macro.chain.html: macro itertools::chain - chain\n\u27e816\u27e9 https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#method.chain: method core::iter::traits::iterator::Iterator::chain - Chain\n\u27e817\u27e9 https://docs.rs/itertools/latest/itertools/macro.iproduct.html: macro itertools::iproduct - iproduct\n\u27e818\u27e9 https://docs.rs/itertools/latest/itertools/macro.izip.html: macro itertools::izip - izip\n\u27e819\u27e9 https://docs.rs/itertools/latest/itertools/#enums: \u00a7\n\u27e820\u27e9 https://docs.rs/itertools/latest/itertools/enum.Diff.html: enum itertools::Diff - Diff\n\u27e821\u27e9 https://docs.rs/itertools/latest/itertools/fn.diff_with.html: fn itertools::diff_with - `diff_with`\n\u27e822\u27e9 https://docs.rs/itertools/latest/itertools/enum.Either.html: enum itertools::Either - Either\n\u27e823\u27e9 https://docs.rs/itertools/latest/itertools/enum.EitherOrBoth.html: enum itertools::EitherOrBoth - EitherOrBoth\n\u27e824\u27e9 https://docs.rs/itertools/latest/itertools/enum.FoldWhile.html: enum itertools::FoldWhile - FoldWhile\n\u27e825\u27e9 https://docs.rs/itertools/latest/itertools/enum.MinMaxResult.html: enum itertools::MinMaxResult - MinMaxResult\n\u27e826\u27e9 https://docs.rs/itertools/latest/itertools/enum.Position.html: enum itertools::Position - Position\n\u27e827\u27e9 https://docs.rs/itertools/latest/itertools/#traits: \u00a7\n\u27e828\u27e9 https://docs.rs/itertools/latest/itertools/trait.MultiUnzip.html: trait itertools::MultiUnzip - MultiUnzip\n\u27e829\u27e9 https://docs.rs/itertools/latest/itertools/trait.PeekingNext.html: trait itertools::PeekingNext - PeekingNext\n\u27e830\u27e9 https://docs.rs/itertools/latest/itertools/#functions: \u00a7\n\u27e831\u27e9 https://docs.rs/itertools/latest/itertools/fn.all.html: fn itertools::all - all\n\u27e832\u27e9 https://docs.rs/itertools/latest/itertools/fn.any.html: fn itertools::any - any\n\u27e833\u27e9 https://docs.rs/itertools/latest/itertools/fn.assert_equal.html: fn itertools::assert_equal - assert_equal\n\u27e834\u27e9 https://docs.rs/itertools/latest/itertools/fn.equal.html: fn itertools::equal - `equal(a, b)`\n\u27e835\u27e9 https://docs.rs/itertools/latest/itertools/fn.chain.html: fn itertools::chain - chain\n\u27e836\u27e9 https://docs.rs/itertools/latest/itertools/fn.cloned.html: fn itertools::cloned - cloned\n\u27e837\u27e9 https://docs.rs/itertools/latest/itertools/fn.concat.html: fn itertools::concat - concat\n\u27e838\u27e9 https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html: trait core::iter::traits::collect::Extend - `Extend`\n\u27e839\u27e9 https://docs.rs/itertools/latest/itertools/fn.cons_tuples.html: fn itertools::cons_tuples - cons_tuples\n\u27e840\u27e9 https://docs.rs/itertools/latest/itertools/fn.enumerate.html: fn itertools::enumerate - enumerate\n\u27e841\u27e9 https://docs.rs/itertools/latest/itertools/fn.fold.html: fn itertools::fold - fold\n\u27e842\u27e9 https://docs.rs/itertools/latest/itertools/fn.interleave.html: fn itertools::interleave - interleave\n\u27e843\u27e9 https://docs.rs/itertools/latest/itertools/fn.intersperse.html: fn itertools::intersperse - intersperse\n\u27e844\u27e9 https://docs.rs/itertools/latest/itertools/fn.intersperse_with.html: fn itertools::intersperse_with - intersperse_with\n\u27e845\u27e9 https://docs.rs/itertools/latest/itertools/fn.iterate.html: fn itertools::iterate - iterate\n\u27e846\u27e9 https://docs.rs/itertools/latest/itertools/fn.join.html: fn itertools::join - join\n\u27e847\u27e9 https://docs.rs/itertools/latest/itertools/fn.kmerge.html: fn itertools::kmerge - kmerge\n\u27e848\u27e9 https://docs.rs/itertools/latest/itertools/fn.kmerge_by.html: fn itertools::kmerge_by - kmerge_by\n\u27e849\u27e9 https://docs.rs/itertools/latest/itertools/fn.max.html: fn itertools::max - max\n\u27e850\u27e9 https://docs.rs/itertools/latest/itertools/fn.merge.html: fn itertools::merge - merge\n\u27e851\u27e9 https://docs.rs/itertools/latest/itertools/fn.merge_join_by.html: fn itertools::merge_join_by - merge_join_by\n\u27e852\u27e9 https://docs.rs/itertools/latest/itertools/fn.min.html: fn itertools::min - min\n\u27e853\u27e9 https://docs.rs/itertools/latest/itertools/fn.multipeek.html: fn itertools::multipeek - multipeek\n\u27e854\u27e9 https://docs.rs/itertools/latest/itertools/fn.multiunzip.html: fn itertools::multiunzip - multiunzip\n\u27e855\u27e9 https://docs.rs/itertools/latest/itertools/fn.multizip.html: fn itertools::multizip - multizip\n\u27e856\u27e9 https://docs.rs/itertools/latest/itertools/fn.partition.html: fn itertools::partition - partition\n\u27e857\u27e9 https://docs.rs/itertools/latest/itertools/fn.peek_nth.html: fn itertools::peek_nth - peek_nth\n\u27e858\u27e9 https://doc.rust-lang.org/nightly/core/iter/adapters/peekable/struct.Peekable.html: struct core::iter::adapters::peekable::Peekable - `std::iter::Peekable`\n\u27e859\u27e9 https://docs.rs/itertools/latest/itertools/fn.process_results.html: fn itertools::process_results - process_results\n\u27e860\u27e9 https://docs.rs/itertools/latest/itertools/fn.put_back.html: fn itertools::put_back - put_back\n\u27e861\u27e9 https://docs.rs/itertools/latest/itertools/fn.put_back_n.html: fn itertools::put_back_n - put_back_n\n\u27e862\u27e9 https://docs.rs/itertools/latest/itertools/fn.rciter.html: fn itertools::rciter - rciter\n\u27e863\u27e9 https://docs.rs/itertools/latest/itertools/fn.repeat_n.html: fn itertools::repeat_n - repeat_n\n\u27e864\u27e9 https://docs.rs/itertools/latest/itertools/fn.rev.html: fn itertools::rev - rev\n\u27e865\u27e9 https://docs.rs/itertools/latest/itertools/fn.sorted.html: fn itertools::sorted - sorted\n\u27e866\u27e9 https://docs.rs/itertools/latest/itertools/fn.sorted_unstable.html: fn itertools::sorted_unstable - sorted_unstable\n\u27e867\u27e9 https://docs.rs/itertools/latest/itertools/fn.unfold.html: fn itertools::unfold - unfold\n\u27e868\u27e9 https://docs.rs/itertools/latest/itertools/fn.zip.html: fn itertools::zip - zip\n\u27e869\u27e9 https://docs.rs/itertools/latest/itertools/fn.zip_eq.html: fn itertools::zip_eq - zip_eq\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 12680,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "114267.6535429"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/itertools",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [130 releases](https://lib.rs/crates/itertools/versions)\n0.14.0 |  Dec 31, 2024   \n---|---  \n0.13.0 |  May 16, 2024   \n0.12.1 |  Jan 29, 2024   \n0.12.0 |  Nov 14, 2023   \n0.0.3 |  Nov 29, 2014   \n#**8** in [Rust patterns](https://lib.rs/rust-patterns \"Shared solutions for particular situations specific to programming in Rust.\")\nDownload history 8613814/week @ 2025-03-07 9003882/week @ 2025-03-14 12077400/week @ 2025-03-21 8178130/week @ 2025-03-28 8951734/week @ 2025-04-04 8095259/week @ 2025-04-11 7374312/week @ 2025-04-18 7281685/week @ 2025-04-25 7276082/week @ 2025-05-02 7596099/week @ 2025-05-09 8044843/week @ 2025-05-16 6747126/week @ 2025-05-23 7232807/week @ 2025-05-30 7261780/week @ 2025-06-06 8030646/week @ 2025-06-13 8233606/week @ 2025-06-20\n**32,029,680** downloads per month Used in [**33,883** crates (6,617 directly)](https://lib.rs/crates/itertools/rev)\n**MIT/Apache**\n450KB  9K  SLoC\nExtra iterator adaptors, functions and macros.\nTo extend [```Iterator```](https://docs.rs/itertools/latest/itertools/?search=Iterator \"`Iterator`\") with methods in this crate, import the [``Itertools``](https://lib.rs/Itertools \"`Itertools`\") trait:\n```\n``use` `itertools`::``Itertools`;`\n`\n```\n\nNow, new methods like ``interleave`` are available on all iterators:\n```\n``use` `itertools`::``Itertools`;`\n`let` it `=` `(``1``..``3``)``.``interleave``(``vec!``[``-``1``,` `-``2``]``)``;`\n`itertools`::``assert_equal`(`it`,` `vec!``[``1``,` `-``1``,` `2``,` `-``2``]``)``;`\n`\n```\n\nMost iterator methods are also provided as functions (with the benefit that they convert parameters using [```IntoIterator```](https://docs.rs/itertools/latest/itertools/?search=IntoIterator \"`IntoIterator`\")):\n```\n``use` `itertools`::``interleave`;`\n`for` elt `in` `interleave``(``&``[``1``,` `2``,` `3``]``,` `&``[``2``,` `3``,` `4``]``)` ``{`\n  ``/*` loop body `*/``\n  `#` `let` `_` `=` elt`;`\n```}``\n`\n```\n\n## Crate Features\n  * ``use_std``\n    * Enabled by default.\n    * Disable to compile itertools using ````#!``[``no_std``]````. This disables any item that depend on allocations (see the ``use_alloc`` feature) and hash maps (like ``unique``, ``counts``, ``into_grouping_map`` and more).\n  * ``use_alloc``\n    * Enabled by default.\n    * Enables any item that depend on allocations (like ``chunk_by``, ``kmerge``, ``join`` and many more).\n\n\n## Rust Version\nThis version of itertools requires Rust 1.63.0 or later.\n# Itertools\nExtra iterator adaptors, functions and macros.\nPlease read the [API documentation here](https://docs.rs/itertools/).\nHow to use with Cargo:\n```\n```[``dependencies``]`\n`itertools ``=` ``\"`0.14.0`\"``\n``\n```\n\nHow to use in your crate:\n```\n``use` `itertools`::``Itertools`;`\n`\n```\n\n## How to contribute\nIf you're not sure what to work on, try checking the [help wanted](https://github.com/rust-itertools/itertools/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22) label.\nSee our [CONTRIBUTING.md](https://github.com/rust-itertools/itertools/blob/master/CONTRIBUTING.md) for a detailed guide.\n## License\nDual-licensed to be compatible with the Rust project.\nLicensed under the Apache License, Version 2.0 <https://www.apache.org/licenses/LICENSE-2.0> or the MIT license <https://opensource.org/licenses/MIT>, at your option. This file may not be copied, modified, or distributed except according to those terms.\n#### Dependencies\n  * [either](https://lib.rs/crates/either \"1.0\")\n\n\n  * dev  [criterion](https://lib.rs/crates/criterion \"obsolete\") 0.4[+html_reports](https://lib.rs/crates/criterion/features#feature-html_reports)\n  * dev  [paste](https://lib.rs/crates/paste \"1.0.0\")\n  * dev  [permutohedron](https://lib.rs/crates/permutohedron \"0.2\")\n  * dev  [quickcheck](https://lib.rs/crates/quickcheck \"obsolete\") 0.9\n  * dev  [rand](https://lib.rs/crates/rand \"obsolete\") 0.7\n\n\n#### [Other features](https://lib.rs/crates/itertools/features)\n  * [use_alloc](https://lib.rs/crates/itertools/features#feature-use_alloc)\n  * [use_std](https://lib.rs/crates/itertools/features#feature-use_std)\n\n\n  *[SLoC]: Lines of code, excluding comments\n",
              "markdown_with_citations": "###  130 releases\u27e81\u27e9\n0.14.0 |  Dec 31, 2024   \n---|---  \n0.13.0 |  May 16, 2024   \n0.12.1 |  Jan 29, 2024   \n0.12.0 |  Nov 14, 2023   \n0.0.3 |  Nov 29, 2014   \n#**8** in Rust patterns\u27e82\u27e9\nDownload history 8613814/week @ 2025-03-07 9003882/week @ 2025-03-14 12077400/week @ 2025-03-21 8178130/week @ 2025-03-28 8951734/week @ 2025-04-04 8095259/week @ 2025-04-11 7374312/week @ 2025-04-18 7281685/week @ 2025-04-25 7276082/week @ 2025-05-02 7596099/week @ 2025-05-09 8044843/week @ 2025-05-16 6747126/week @ 2025-05-23 7232807/week @ 2025-05-30 7261780/week @ 2025-06-06 8030646/week @ 2025-06-13 8233606/week @ 2025-06-20\n**32,029,680** downloads per month Used in **33,883** crates (6,617 directly)\u27e83\u27e9\n**MIT/Apache**\n450KB  9K  SLoC\nExtra iterator adaptors, functions and macros.\nTo extend ```Iterator```\u27e84\u27e9 with methods in this crate, import the ``Itertools``\u27e85\u27e9 trait:\n```\n``use` `itertools`::``Itertools`;`\n`\n```\n\nNow, new methods like ``interleave`` are available on all iterators:\n```\n``use` `itertools`::``Itertools`;`\n`let` it `=` `(``1``..``3``)``.``interleave``(``vec!``[``-``1``,` `-``2``]``)``;`\n`itertools`::``assert_equal`(`it`,` `vec!``[``1``,` `-``1``,` `2``,` `-``2``]``)``;`\n`\n```\n\nMost iterator methods are also provided as functions (with the benefit that they convert parameters using ```IntoIterator```\u27e86\u27e9):\n```\n``use` `itertools`::``interleave`;`\n`for` elt `in` `interleave``(``&``[``1``,` `2``,` `3``]``,` `&``[``2``,` `3``,` `4``]``)` ``{`\n  ``/*` loop body `*/``\n  `#` `let` `_` `=` elt`;`\n```}``\n`\n```\n\n## Crate Features\n  * ``use_std``\n    * Enabled by default.\n    * Disable to compile itertools using ````#!``[``no_std``]````. This disables any item that depend on allocations (see the ``use_alloc`` feature) and hash maps (like ``unique``, ``counts``, ``into_grouping_map`` and more).\n  * ``use_alloc``\n    * Enabled by default.\n    * Enables any item that depend on allocations (like ``chunk_by``, ``kmerge``, ``join`` and many more).\n\n\n## Rust Version\nThis version of itertools requires Rust 1.63.0 or later.\n# Itertools\nExtra iterator adaptors, functions and macros.\nPlease read the API documentation here\u27e87\u27e9.\nHow to use with Cargo:\n```\n```[``dependencies``]`\n`itertools ``=` ``\"`0.14.0`\"``\n``\n```\n\nHow to use in your crate:\n```\n``use` `itertools`::``Itertools`;`\n`\n```\n\n## How to contribute\nIf you're not sure what to work on, try checking the help wanted\u27e88\u27e9 label.\nSee our CONTRIBUTING.md\u27e89\u27e9 for a detailed guide.\n## License\nDual-licensed to be compatible with the Rust project.\nLicensed under the Apache License, Version 2.0 <https://www.apache.org/licenses/LICENSE-2.0> or the MIT license <https://opensource.org/licenses/MIT>, at your option. This file may not be copied, modified, or distributed except according to those terms.\n#### Dependencies\n  * either\u27e810\u27e9\n\n\n  * dev  criterion\u27e811\u27e9 0.4+html_reports\u27e812\u27e9\n  * dev  paste\u27e813\u27e9\n  * dev  permutohedron\u27e814\u27e9\n  * dev  quickcheck\u27e815\u27e9 0.9\n  * dev  rand\u27e816\u27e9 0.7\n\n\n#### Other features\u27e817\u27e9\n  * use_alloc\u27e818\u27e9\n  * use_std\u27e819\u27e9\n\n\n  *[SLoC]: Lines of code, excluding comments\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/itertools/versions: 130 releases\n\u27e82\u27e9 https://lib.rs/rust-patterns: Shared solutions for particular situations specific to programming in Rust. - Rust patterns\n\u27e83\u27e9 https://lib.rs/crates/itertools/rev: **33,883** crates (6,617 directly)\n\u27e84\u27e9 https://docs.rs/itertools/latest/itertools/?search=Iterator: `Iterator` - ```Iterator```\n\u27e85\u27e9 https://lib.rs/Itertools: `Itertools` - ``Itertools``\n\u27e86\u27e9 https://docs.rs/itertools/latest/itertools/?search=IntoIterator: `IntoIterator` - ```IntoIterator```\n\u27e87\u27e9 https://docs.rs/itertools/: API documentation here\n\u27e88\u27e9 https://github.com/rust-itertools/itertools/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22: help wanted\n\u27e89\u27e9 https://github.com/rust-itertools/itertools/blob/master/CONTRIBUTING.md: CONTRIBUTING.md\n\u27e810\u27e9 https://lib.rs/crates/either: 1.0 - either\n\u27e811\u27e9 https://lib.rs/crates/criterion: obsolete - criterion\n\u27e812\u27e9 https://lib.rs/crates/criterion/features#feature-html_reports: +html_reports\n\u27e813\u27e9 https://lib.rs/crates/paste: 1.0.0 - paste\n\u27e814\u27e9 https://lib.rs/crates/permutohedron: 0.2 - permutohedron\n\u27e815\u27e9 https://lib.rs/crates/quickcheck: obsolete - quickcheck\n\u27e816\u27e9 https://lib.rs/crates/rand: obsolete - rand\n\u27e817\u27e9 https://lib.rs/crates/itertools/features: Other features\n\u27e818\u27e9 https://lib.rs/crates/itertools/features#feature-use_alloc: use_alloc\n\u27e819\u27e9 https://lib.rs/crates/itertools/features#feature-use_std: use_std\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 4073,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "114268.0290958"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#either@1.11.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\either-1.11.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "either",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\either-1.11.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "use_std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\target\\debug\\deps\\libeither-fdf0f966295d8114.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpv5bohltl/itertools-0.14.0#itertools@0.14.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "itertools",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "use_alloc",
                "use_std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\target\\debug\\deps\\libitertools-4aeed37b30227755.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#either@1.11.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\either-1.11.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "either",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\either-1.11.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "use_std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\target\\debug\\deps\\libeither-fdf0f966295d8114.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpv5bohltl/itertools-0.14.0#itertools@0.14.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "itertools",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> src\\lib.rs:2434:17\n     |\n2434 |                 write!(&mut result, \"{}\", first_elt).unwrap();\n     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n     = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n     |\n2434 -                 write!(&mut result, \"{}\", first_elt).unwrap();\n2434 +                 write!(&mut result, \"{first_elt}\").unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::uninlined_format_args)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 82006,
                        "byte_start": 82006,
                        "column_end": 39,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2434,
                        "line_start": 2434,
                        "suggested_replacement": "first_elt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 39,
                            "text": "                write!(&mut result, \"{}\", first_elt).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 82019,
                        "byte_start": 82008,
                        "column_end": 52,
                        "column_start": 41,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2434,
                        "line_start": 2434,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 52,
                            "highlight_start": 41,
                            "text": "                write!(&mut result, \"{}\", first_elt).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 82020,
                    "byte_start": 81984,
                    "column_end": 53,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 2434,
                    "line_start": 2434,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 53,
                        "highlight_start": 17,
                        "text": "                write!(&mut result, \"{}\", first_elt).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpv5bohltl/itertools-0.14.0#itertools@0.14.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "itertools",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> src\\lib.rs:2437:21\n     |\n2437 |                     write!(&mut result, \"{}\", elt).unwrap();\n     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n2437 -                     write!(&mut result, \"{}\", elt).unwrap();\n2437 +                     write!(&mut result, \"{elt}\").unwrap();\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 82153,
                        "byte_start": 82153,
                        "column_end": 43,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2437,
                        "line_start": 2437,
                        "suggested_replacement": "elt",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 43,
                            "text": "                    write!(&mut result, \"{}\", elt).unwrap();"
                          }
                        ]
                      },
                      {
                        "byte_end": 82160,
                        "byte_start": 82155,
                        "column_end": 50,
                        "column_start": 45,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 2437,
                        "line_start": 2437,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 50,
                            "highlight_start": 45,
                            "text": "                    write!(&mut result, \"{}\", elt).unwrap();"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 82161,
                    "byte_start": 82131,
                    "column_end": 51,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 2437,
                    "line_start": 2437,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 21,
                        "text": "                    write!(&mut result, \"{}\", elt).unwrap();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpv5bohltl/itertools-0.14.0#itertools@0.14.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "itertools",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "message": {
                "rendered": "warning: doc list item overindented\n    --> src\\lib.rs:3980:9\n     |\n3980 |     ///    values are equal if and only if there is more than one\n     |         ^^^ help: try using `  ` (2 spaces)\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_overindented_list_items\n     = note: `#[warn(clippy::doc_overindented_list_items)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_overindented_list_items",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::doc_overindented_list_items)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using `  ` (2 spaces)",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 136413,
                        "byte_start": 136410,
                        "column_end": 12,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3980,
                        "line_start": 3980,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 12,
                            "highlight_start": 9,
                            "text": "    ///    values are equal if and only if there is more than one"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_overindented_list_items",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item overindented",
                "spans": [
                  {
                    "byte_end": 136413,
                    "byte_start": 136410,
                    "column_end": 12,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3980,
                    "line_start": 3980,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 9,
                        "text": "    ///    values are equal if and only if there is more than one"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpv5bohltl/itertools-0.14.0#itertools@0.14.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "itertools",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "message": {
                "rendered": "warning: doc list item overindented\n    --> src\\lib.rs:3981:9\n     |\n3981 |     ///    element in the iterator and all elements are equal.\n     |         ^^^ help: try using `  ` (2 spaces)\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_overindented_list_items\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_overindented_list_items",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using `  ` (2 spaces)",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 136479,
                        "byte_start": 136476,
                        "column_end": 12,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3981,
                        "line_start": 3981,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 12,
                            "highlight_start": 9,
                            "text": "    ///    element in the iterator and all elements are equal."
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_overindented_list_items",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item overindented",
                "spans": [
                  {
                    "byte_end": 136479,
                    "byte_start": 136476,
                    "column_end": 12,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 3981,
                    "line_start": 3981,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 9,
                        "text": "    ///    element in the iterator and all elements are equal."
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpv5bohltl/itertools-0.14.0#itertools@0.14.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "itertools",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "message": {
                "rendered": "warning: doc list item overindented\n    --> src\\lib.rs:4240:9\n     |\n4240 |     ///    element at `xpos` \u2264 the element at `ypos`. While the\n     |         ^^^ help: try using `  ` (2 spaces)\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_overindented_list_items\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_overindented_list_items",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using `  ` (2 spaces)",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 144712,
                        "byte_start": 144709,
                        "column_end": 12,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 4240,
                        "line_start": 4240,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 12,
                            "highlight_start": 9,
                            "text": "    ///    element at `xpos` \u2264 the element at `ypos`. While the"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_overindented_list_items",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item overindented",
                "spans": [
                  {
                    "byte_end": 144712,
                    "byte_start": 144709,
                    "column_end": 12,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 4240,
                    "line_start": 4240,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 9,
                        "text": "    ///    element at `xpos` \u2264 the element at `ypos`. While the"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpv5bohltl/itertools-0.14.0#itertools@0.14.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "itertools",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "message": {
                "rendered": "warning: doc list item overindented\n    --> src\\lib.rs:4241:9\n     |\n4241 |     ///    referenced elements themselves may be equal, `xpos` cannot\n     |         ^^^ help: try using `  ` (2 spaces)\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_overindented_list_items\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_overindented_list_items",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using `  ` (2 spaces)",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 144778,
                        "byte_start": 144775,
                        "column_end": 12,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 4241,
                        "line_start": 4241,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 12,
                            "highlight_start": 9,
                            "text": "    ///    referenced elements themselves may be equal, `xpos` cannot"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_overindented_list_items",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item overindented",
                "spans": [
                  {
                    "byte_end": 144778,
                    "byte_start": 144775,
                    "column_end": 12,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 4241,
                    "line_start": 4241,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 9,
                        "text": "    ///    referenced elements themselves may be equal, `xpos` cannot"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpv5bohltl/itertools-0.14.0#itertools@0.14.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "itertools",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "message": {
                "rendered": "warning: doc list item overindented\n    --> src\\lib.rs:4242:9\n     |\n4242 |     ///    be equal to `ypos`.\n     |         ^^^ help: try using `  ` (2 spaces)\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_overindented_list_items\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_overindented_list_items",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using `  ` (2 spaces)",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 144848,
                        "byte_start": 144845,
                        "column_end": 12,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 4242,
                        "line_start": 4242,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 12,
                            "highlight_start": 9,
                            "text": "    ///    be equal to `ypos`."
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_overindented_list_items",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item overindented",
                "spans": [
                  {
                    "byte_end": 144848,
                    "byte_start": 144845,
                    "column_end": 12,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 4242,
                    "line_start": 4242,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 9,
                        "text": "    ///    be equal to `ypos`."
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpv5bohltl/itertools-0.14.0#itertools@0.14.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "itertools",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "use_alloc",
                "use_std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpv5bohltl\\itertools-0.14.0\\target\\debug\\deps\\libitertools-781803e4865e8dd2.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 86
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {
              "unmaintained": [
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "atty",
                    "version": "0.2.14",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8",
                    "dependencies": [
                      {
                        "name": "hermit-abi",
                        "version": "0.1.19",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.154",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "winapi",
                        "version": "0.3.9",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2024-0375",
                    "package": "atty",
                    "title": "`atty` is unmaintained",
                    "description": "The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\n\n## Alternative(s)\n\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0",
                    "date": "2024-09-25",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/softprops/atty/issues/57",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                },
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "paste",
                    "version": "1.0.15",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a",
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2024-0436",
                    "package": "paste",
                    "title": "paste - no longer maintained",
                    "description": "The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \nthat this project is not longer maintained as well as archived the repository",
                    "date": "2024-10-07",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/dtolnay/paste",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                }
              ],
              "unsound": [
                {
                  "kind": "unsound",
                  "package": {
                    "name": "atty",
                    "version": "0.2.14",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8",
                    "dependencies": [
                      {
                        "name": "hermit-abi",
                        "version": "0.1.19",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.154",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "winapi",
                        "version": "0.3.9",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2021-0145",
                    "package": "atty",
                    "title": "Potential unaligned read",
                    "description": "On windows, `atty` dereferences a potentially unaligned pointer.\n\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\n\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\n\n# atty is Unmaintained\n\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\n\nLast release of `atty` was almost 3 years ago.\n\n## Possible Alternative(s)\n\nThe below list has not been vetted in any way and may or may not contain alternatives;\n\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0",
                    "date": "2021-07-04",
                    "aliases": [
                      "GHSA-g98v-hv3f-hcfr"
                    ],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [
                      "unaligned-read"
                    ],
                    "cvss": null,
                    "informational": "unsound",
                    "references": [
                      "https://github.com/softprops/atty/pull/51",
                      "https://github.com/softprops/atty/issues/57"
                    ],
                    "source": null,
                    "url": "https://github.com/softprops/atty/issues/50",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": {
                    "arch": [],
                    "os": [
                      "windows"
                    ],
                    "functions": {}
                  },
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                }
              ],
              "yanked": [
                {
                  "kind": "yanked",
                  "package": {
                    "name": "libc",
                    "version": "0.2.154",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "ae743338b92ff9146ce83992f766a31066a91a8c84a45e0e9f21e7cf6de6d346",
                    "replace": null
                  },
                  "advisory": null,
                  "affected": null,
                  "versions": null
                }
              ]
            }
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "itertools",
          "version": "0.14.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/itertools/latest/itertools/all.html \"show sidebar\")\n# Crate itertoolsCopy item path\n[Settings](https://docs.rs/itertools/latest/settings.html)\n[Help](https://docs.rs/itertools/latest/help.html)\nSummary[Source](https://docs.rs/itertools/latest/src/itertools/lib.rs.html#1-4713)\nExpand description\nExtra iterator adaptors, functions and macros.\nTo extend [`Iterator`](https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html \"trait core::iter::traits::iterator::Iterator\") with methods in this crate, import the [`Itertools`](https://docs.rs/itertools/latest/itertools/trait.Itertools.html \"trait itertools::Itertools\") trait:\n```\nuse itertools::Itertools;\n```\n\nNow, new methods like [`interleave`](https://docs.rs/itertools/latest/itertools/trait.Itertools.html#method.interleave \"method itertools::Itertools::interleave\") are available on all iterators:\n```\nuse itertools::Itertools;\nlet it = (1..3).interleave(vec![-1, -2]);\nitertools::assert_equal(it, vec![1, -1, 2, -2]);\n```\n\nMost iterator methods are also provided as functions (with the benefit that they convert parameters using [`IntoIterator`](https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html \"trait core::iter::traits::collect::IntoIterator\")):\n```\nuse itertools::interleave;\nfor elt in interleave(&[1, 2, 3], &[2, 3, 4]) {\n  /* loop body */\n}\n```\n\n### [\u00a7](https://docs.rs/itertools/latest/itertools/#crate-features)Crate Features\n  * `use_std`\n    * Enabled by default.\n    * Disable to compile itertools using `#![no_std]`. This disables any item that depend on allocations (see the `use_alloc` feature) and hash maps (like `unique`, `counts`, `into_grouping_map` and more).\n  * `use_alloc`\n    * Enabled by default.\n    * Enables any item that depend on allocations (like `chunk_by`, `kmerge`, `join` and many more).\n\n\n### [\u00a7](https://docs.rs/itertools/latest/itertools/#rust-version)Rust Version\nThis version of itertools requires Rust 1.63.0 or later.\n## Re-exports[\u00a7](https://docs.rs/itertools/latest/itertools/#reexports)\n\n`pub use crate::structs[](https://docs.rs/itertools/latest/itertools/structs/index.html \"mod itertools::structs\")::*;`\n\n## Modules[\u00a7](https://docs.rs/itertools/latest/itertools/#modules)\n\n[structs](https://docs.rs/itertools/latest/itertools/structs/index.html \"mod itertools::structs\")\n    The concrete iterator types.\n\n[traits](https://docs.rs/itertools/latest/itertools/traits/index.html \"mod itertools::traits\")\n    Traits helpful for using certain `Itertools` methods in generic contexts.\n## Macros[\u00a7](https://docs.rs/itertools/latest/itertools/#macros)\n\n[chain](https://docs.rs/itertools/latest/itertools/macro.chain.html \"macro itertools::chain\")\n    [Chain](https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#method.chain \"method core::iter::traits::iterator::Iterator::chain\") zero or more iterators together into one sequence.\n\n[iproduct](https://docs.rs/itertools/latest/itertools/macro.iproduct.html \"macro itertools::iproduct\")\n    Create an iterator over the \u201ccartesian product\u201d of iterators.\n\n[izip](https://docs.rs/itertools/latest/itertools/macro.izip.html \"macro itertools::izip\")\n    Create an iterator running multiple iterators in lockstep.\n## Enums[\u00a7](https://docs.rs/itertools/latest/itertools/#enums)\n\n[Diff](https://docs.rs/itertools/latest/itertools/enum.Diff.html \"enum itertools::Diff\")\n    A type returned by the [`diff_with`](https://docs.rs/itertools/latest/itertools/fn.diff_with.html \"fn itertools::diff_with\") function.\n\n[Either](https://docs.rs/itertools/latest/itertools/enum.Either.html \"enum itertools::Either\")\n    The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.\n\n[EitherOrBoth](https://docs.rs/itertools/latest/itertools/enum.EitherOrBoth.html \"enum itertools::EitherOrBoth\")\n    Value that either holds a single A or B, or both.\n\n[FoldWhile](https://docs.rs/itertools/latest/itertools/enum.FoldWhile.html \"enum itertools::FoldWhile\")\n    An enum used for controlling the execution of `fold_while`.\n\n[MinMaxResult](https://docs.rs/itertools/latest/itertools/enum.MinMaxResult.html \"enum itertools::MinMaxResult\")\n    `MinMaxResult` is an enum returned by `minmax`.\n\n[Position](https://docs.rs/itertools/latest/itertools/enum.Position.html \"enum itertools::Position\")\n    The first component of the value yielded by `WithPosition`. Indicates the position of this element in the iterator results.\n## Traits[\u00a7](https://docs.rs/itertools/latest/itertools/#traits)\n\n[Itertools](https://docs.rs/itertools/latest/itertools/trait.Itertools.html \"trait itertools::Itertools\")\n    An [`Iterator`](https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html \"trait core::iter::traits::iterator::Iterator\") blanket implementation that provides extra adaptors and methods.\n\n[MultiUnzip](https://docs.rs/itertools/latest/itertools/trait.MultiUnzip.html \"trait itertools::MultiUnzip\")\n    An iterator that can be unzipped into multiple collections.\n\n[PeekingNext](https://docs.rs/itertools/latest/itertools/trait.PeekingNext.html \"trait itertools::PeekingNext\")\n    An iterator that allows peeking at an element before deciding to accept it.\n## Functions[\u00a7](https://docs.rs/itertools/latest/itertools/#functions)\n\n[all](https://docs.rs/itertools/latest/itertools/fn.all.html \"fn itertools::all\")\n    Test whether the predicate holds for all elements in the iterable.\n\n[any](https://docs.rs/itertools/latest/itertools/fn.any.html \"fn itertools::any\")\n    Test whether the predicate holds for any elements in the iterable.\n\n[assert_equal](https://docs.rs/itertools/latest/itertools/fn.assert_equal.html \"fn itertools::assert_equal\")\n    Assert that two iterables produce equal sequences, with the same semantics as [`equal(a, b)`](https://docs.rs/itertools/latest/itertools/fn.equal.html \"fn itertools::equal\").\n\n[chain](https://docs.rs/itertools/latest/itertools/fn.chain.html \"fn itertools::chain\")\n    Takes two iterables and creates a new iterator over both in sequence.\n\n[cloned](https://docs.rs/itertools/latest/itertools/fn.cloned.html \"fn itertools::cloned\")\n    Create an iterator that clones each element from `&T` to `T`.\n\n[concat](https://docs.rs/itertools/latest/itertools/fn.concat.html \"fn itertools::concat\")\n    Combine all an iterator\u2019s elements into one element by using [`Extend`](https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html \"trait core::iter::traits::collect::Extend\").\n\n[cons_tuples](https://docs.rs/itertools/latest/itertools/fn.cons_tuples.html \"fn itertools::cons_tuples\")\n    Create an iterator that maps for example iterators of `((A, B), C)` to `(A, B, C)`.\n\n[diff_with](https://docs.rs/itertools/latest/itertools/fn.diff_with.html \"fn itertools::diff_with\")\n    Compares every element yielded by both `i` and `j` with the given function in lock-step and returns a [`Diff`](https://docs.rs/itertools/latest/itertools/enum.Diff.html \"enum itertools::Diff\") which describes how `j` differs from `i`.\n\n[enumerate](https://docs.rs/itertools/latest/itertools/fn.enumerate.html \"fn itertools::enumerate\")\n    Iterate `iterable` with a running index.\n\n[equal](https://docs.rs/itertools/latest/itertools/fn.equal.html \"fn itertools::equal\")\n    Return `true` if both iterables produce equal sequences (elements pairwise equal and sequences of the same length), `false` otherwise.\n\n[fold](https://docs.rs/itertools/latest/itertools/fn.fold.html \"fn itertools::fold\")\n    Perform a fold operation over the iterable.\n\n[interleave](https://docs.rs/itertools/latest/itertools/fn.interleave.html \"fn itertools::interleave\")\n    Create an iterator that interleaves elements in `i` and `j`.\n\n[intersperse](https://docs.rs/itertools/latest/itertools/fn.intersperse.html \"fn itertools::intersperse\")\n    Iterate `iterable` with a particular value inserted between each element.\n\n[intersperse_with](https://docs.rs/itertools/latest/itertools/fn.intersperse_with.html \"fn itertools::intersperse_with\")\n    Iterate `iterable` with a particular value created by a function inserted between each element.\n\n[iterate](https://docs.rs/itertools/latest/itertools/fn.iterate.html \"fn itertools::iterate\")\n    Creates a new iterator that infinitely applies function to value and yields results.\n\n[join](https://docs.rs/itertools/latest/itertools/fn.join.html \"fn itertools::join\")\n    Combine all iterator elements into one `String`, separated by `sep`.\n\n[kmerge](https://docs.rs/itertools/latest/itertools/fn.kmerge.html \"fn itertools::kmerge\")\n    Create an iterator that merges elements of the contained iterators using the ordering function.\n\n[kmerge_by](https://docs.rs/itertools/latest/itertools/fn.kmerge_by.html \"fn itertools::kmerge_by\")\n    Create an iterator that merges elements of the contained iterators.\n\n[max](https://docs.rs/itertools/latest/itertools/fn.max.html \"fn itertools::max\")\n    Return the maximum value of the iterable.\n\n[merge](https://docs.rs/itertools/latest/itertools/fn.merge.html \"fn itertools::merge\")\n    Create an iterator that merges elements in `i` and `j`.\n\n[merge_join_by](https://docs.rs/itertools/latest/itertools/fn.merge_join_by.html \"fn itertools::merge_join_by\")\n    Return an iterator adaptor that merge-joins items from the two base iterators in ascending order.\n\n[min](https://docs.rs/itertools/latest/itertools/fn.min.html \"fn itertools::min\")\n    Return the minimum value of the iterable.\n\n[multipeek](https://docs.rs/itertools/latest/itertools/fn.multipeek.html \"fn itertools::multipeek\")\n    An iterator adaptor that allows the user to peek at multiple `.next()` values without advancing the base iterator.\n\n[multiunzip](https://docs.rs/itertools/latest/itertools/fn.multiunzip.html \"fn itertools::multiunzip\")\n    Converts an iterator of tuples into a tuple of containers.\n\n[multizip](https://docs.rs/itertools/latest/itertools/fn.multizip.html \"fn itertools::multizip\")\n    An iterator that generalizes `.zip()` and allows running multiple iterators in lockstep.\n\n[partition](https://docs.rs/itertools/latest/itertools/fn.partition.html \"fn itertools::partition\")\n    Partition a sequence using predicate `pred` so that elements that map to `true` are placed before elements which map to `false`.\n\n[peek_nth](https://docs.rs/itertools/latest/itertools/fn.peek_nth.html \"fn itertools::peek_nth\")\n    A drop-in replacement for [`std::iter::Peekable`](https://doc.rust-lang.org/nightly/core/iter/adapters/peekable/struct.Peekable.html \"struct core::iter::adapters::peekable::Peekable\") which adds a `peek_nth` method allowing the user to `peek` at a value several iterations forward without advancing the base iterator.\n\n[process_results](https://docs.rs/itertools/latest/itertools/fn.process_results.html \"fn itertools::process_results\")\n    \u201cLift\u201d a function of the values of an iterator so that it can process an iterator of `Result` values instead.\n\n[put_back](https://docs.rs/itertools/latest/itertools/fn.put_back.html \"fn itertools::put_back\")\n    Create an iterator where you can put back a single item\n\n[put_back_n](https://docs.rs/itertools/latest/itertools/fn.put_back_n.html \"fn itertools::put_back_n\")\n    Create an iterator where you can put back multiple values to the front of the iteration.\n\n[rciter](https://docs.rs/itertools/latest/itertools/fn.rciter.html \"fn itertools::rciter\")\n    Return an iterator inside a `Rc<RefCell<_>>` wrapper.\n\n[repeat_n](https://docs.rs/itertools/latest/itertools/fn.repeat_n.html \"fn itertools::repeat_n\")\n    Create an iterator that produces `n` repetitions of `element`.\n\n[rev](https://docs.rs/itertools/latest/itertools/fn.rev.html \"fn itertools::rev\")\n    Iterate `iterable` in reverse.\n\n[sorted](https://docs.rs/itertools/latest/itertools/fn.sorted.html \"fn itertools::sorted\")\n    Sort all iterator elements into a new iterator in ascending order.\n\n[sorted_unstable](https://docs.rs/itertools/latest/itertools/fn.sorted_unstable.html \"fn itertools::sorted_unstable\")\n    Sort all iterator elements into a new iterator in ascending order. This sort is unstable (i.e., may reorder equal elements).\n\n[unfold](https://docs.rs/itertools/latest/itertools/fn.unfold.html \"fn itertools::unfold\")Deprecated\n    Creates a new unfold source with the specified closure as the \u201citerator function\u201d and an initial state to eventually pass to the closure\n\n[zip](https://docs.rs/itertools/latest/itertools/fn.zip.html \"fn itertools::zip\")Deprecated\n    Converts the arguments to iterators and zips them.\n\n[zip_eq](https://docs.rs/itertools/latest/itertools/fn.zip_eq.html \"fn itertools::zip_eq\")\n    Zips two iterators but **panics** if they are not of the same length.\n",
            "markdown_with_citations": "[](https://docs.rs/itertools/latest/itertools/all.html \"show sidebar\")\n# Crate itertoolsCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nExtra iterator adaptors, functions and macros.\nTo extend `Iterator`\u27e84\u27e9 with methods in this crate, import the `Itertools`\u27e85\u27e9 trait:\n```\nuse itertools::Itertools;\n```\n\nNow, new methods like `interleave`\u27e86\u27e9 are available on all iterators:\n```\nuse itertools::Itertools;\nlet it = (1..3).interleave(vec![-1, -2]);\nitertools::assert_equal(it, vec![1, -1, 2, -2]);\n```\n\nMost iterator methods are also provided as functions (with the benefit that they convert parameters using `IntoIterator`\u27e87\u27e9):\n```\nuse itertools::interleave;\nfor elt in interleave(&[1, 2, 3], &[2, 3, 4]) {\n  /* loop body */\n}\n```\n\n### \u00a7\u27e88\u27e9Crate Features\n  * `use_std`\n    * Enabled by default.\n    * Disable to compile itertools using `#![no_std]`. This disables any item that depend on allocations (see the `use_alloc` feature) and hash maps (like `unique`, `counts`, `into_grouping_map` and more).\n  * `use_alloc`\n    * Enabled by default.\n    * Enables any item that depend on allocations (like `chunk_by`, `kmerge`, `join` and many more).\n\n\n### \u00a7\u27e89\u27e9Rust Version\nThis version of itertools requires Rust 1.63.0 or later.\n## Re-exports\u00a7\u27e810\u27e9\n\n`pub use crate::structs[](https://docs.rs/itertools/latest/itertools/structs/index.html \"mod itertools::structs\")::*;`\n\n## Modules\u00a7\u27e811\u27e9\n\nstructs\u27e812\u27e9\n    The concrete iterator types.\n\ntraits\u27e813\u27e9\n    Traits helpful for using certain `Itertools` methods in generic contexts.\n## Macros\u00a7\u27e814\u27e9\n\nchain\u27e815\u27e9\n    Chain\u27e816\u27e9 zero or more iterators together into one sequence.\n\niproduct\u27e817\u27e9\n    Create an iterator over the \u201ccartesian product\u201d of iterators.\n\nizip\u27e818\u27e9\n    Create an iterator running multiple iterators in lockstep.\n## Enums\u00a7\u27e819\u27e9\n\nDiff\u27e820\u27e9\n    A type returned by the `diff_with`\u27e821\u27e9 function.\n\nEither\u27e822\u27e9\n    The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.\n\nEitherOrBoth\u27e823\u27e9\n    Value that either holds a single A or B, or both.\n\nFoldWhile\u27e824\u27e9\n    An enum used for controlling the execution of `fold_while`.\n\nMinMaxResult\u27e825\u27e9\n    `MinMaxResult` is an enum returned by `minmax`.\n\nPosition\u27e826\u27e9\n    The first component of the value yielded by `WithPosition`. Indicates the position of this element in the iterator results.\n## Traits\u00a7\u27e827\u27e9\n\nItertools\u27e85\u27e9\n    An `Iterator`\u27e84\u27e9 blanket implementation that provides extra adaptors and methods.\n\nMultiUnzip\u27e828\u27e9\n    An iterator that can be unzipped into multiple collections.\n\nPeekingNext\u27e829\u27e9\n    An iterator that allows peeking at an element before deciding to accept it.\n## Functions\u00a7\u27e830\u27e9\n\nall\u27e831\u27e9\n    Test whether the predicate holds for all elements in the iterable.\n\nany\u27e832\u27e9\n    Test whether the predicate holds for any elements in the iterable.\n\nassert_equal\u27e833\u27e9\n    Assert that two iterables produce equal sequences, with the same semantics as `equal(a, b)`\u27e834\u27e9.\n\nchain\u27e835\u27e9\n    Takes two iterables and creates a new iterator over both in sequence.\n\ncloned\u27e836\u27e9\n    Create an iterator that clones each element from `&T` to `T`.\n\nconcat\u27e837\u27e9\n    Combine all an iterator\u2019s elements into one element by using `Extend`\u27e838\u27e9.\n\ncons_tuples\u27e839\u27e9\n    Create an iterator that maps for example iterators of `((A, B), C)` to `(A, B, C)`.\n\ndiff_with\u27e821\u27e9\n    Compares every element yielded by both `i` and `j` with the given function in lock-step and returns a `Diff`\u27e820\u27e9 which describes how `j` differs from `i`.\n\nenumerate\u27e840\u27e9\n    Iterate `iterable` with a running index.\n\nequal\u27e834\u27e9\n    Return `true` if both iterables produce equal sequences (elements pairwise equal and sequences of the same length), `false` otherwise.\n\nfold\u27e841\u27e9\n    Perform a fold operation over the iterable.\n\ninterleave\u27e842\u27e9\n    Create an iterator that interleaves elements in `i` and `j`.\n\nintersperse\u27e843\u27e9\n    Iterate `iterable` with a particular value inserted between each element.\n\nintersperse_with\u27e844\u27e9\n    Iterate `iterable` with a particular value created by a function inserted between each element.\n\niterate\u27e845\u27e9\n    Creates a new iterator that infinitely applies function to value and yields results.\n\njoin\u27e846\u27e9\n    Combine all iterator elements into one `String`, separated by `sep`.\n\nkmerge\u27e847\u27e9\n    Create an iterator that merges elements of the contained iterators using the ordering function.\n\nkmerge_by\u27e848\u27e9\n    Create an iterator that merges elements of the contained iterators.\n\nmax\u27e849\u27e9\n    Return the maximum value of the iterable.\n\nmerge\u27e850\u27e9\n    Create an iterator that merges elements in `i` and `j`.\n\nmerge_join_by\u27e851\u27e9\n    Return an iterator adaptor that merge-joins items from the two base iterators in ascending order.\n\nmin\u27e852\u27e9\n    Return the minimum value of the iterable.\n\nmultipeek\u27e853\u27e9\n    An iterator adaptor that allows the user to peek at multiple `.next()` values without advancing the base iterator.\n\nmultiunzip\u27e854\u27e9\n    Converts an iterator of tuples into a tuple of containers.\n\nmultizip\u27e855\u27e9\n    An iterator that generalizes `.zip()` and allows running multiple iterators in lockstep.\n\npartition\u27e856\u27e9\n    Partition a sequence using predicate `pred` so that elements that map to `true` are placed before elements which map to `false`.\n\npeek_nth\u27e857\u27e9\n    A drop-in replacement for `std::iter::Peekable`\u27e858\u27e9 which adds a `peek_nth` method allowing the user to `peek` at a value several iterations forward without advancing the base iterator.\n\nprocess_results\u27e859\u27e9\n    \u201cLift\u201d a function of the values of an iterator so that it can process an iterator of `Result` values instead.\n\nput_back\u27e860\u27e9\n    Create an iterator where you can put back a single item\n\nput_back_n\u27e861\u27e9\n    Create an iterator where you can put back multiple values to the front of the iteration.\n\nrciter\u27e862\u27e9\n    Return an iterator inside a `Rc<RefCell<_>>` wrapper.\n\nrepeat_n\u27e863\u27e9\n    Create an iterator that produces `n` repetitions of `element`.\n\nrev\u27e864\u27e9\n    Iterate `iterable` in reverse.\n\nsorted\u27e865\u27e9\n    Sort all iterator elements into a new iterator in ascending order.\n\nsorted_unstable\u27e866\u27e9\n    Sort all iterator elements into a new iterator in ascending order. This sort is unstable (i.e., may reorder equal elements).\n\nunfold\u27e867\u27e9Deprecated\n    Creates a new unfold source with the specified closure as the \u201citerator function\u201d and an initial state to eventually pass to the closure\n\nzip\u27e868\u27e9Deprecated\n    Converts the arguments to iterators and zips them.\n\nzip_eq\u27e869\u27e9\n    Zips two iterators but **panics** if they are not of the same length.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/itertools/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/itertools/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/itertools/latest/src/itertools/lib.rs.html#1-4713: Source\n\u27e84\u27e9 https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html: trait core::iter::traits::iterator::Iterator - `Iterator`\n\u27e85\u27e9 https://docs.rs/itertools/latest/itertools/trait.Itertools.html: trait itertools::Itertools - `Itertools`\n\u27e86\u27e9 https://docs.rs/itertools/latest/itertools/trait.Itertools.html#method.interleave: method itertools::Itertools::interleave - `interleave`\n\u27e87\u27e9 https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html: trait core::iter::traits::collect::IntoIterator - `IntoIterator`\n\u27e88\u27e9 https://docs.rs/itertools/latest/itertools/#crate-features: \u00a7\n\u27e89\u27e9 https://docs.rs/itertools/latest/itertools/#rust-version: \u00a7\n\u27e810\u27e9 https://docs.rs/itertools/latest/itertools/#reexports: \u00a7\n\u27e811\u27e9 https://docs.rs/itertools/latest/itertools/#modules: \u00a7\n\u27e812\u27e9 https://docs.rs/itertools/latest/itertools/structs/index.html: mod itertools::structs - structs\n\u27e813\u27e9 https://docs.rs/itertools/latest/itertools/traits/index.html: mod itertools::traits - traits\n\u27e814\u27e9 https://docs.rs/itertools/latest/itertools/#macros: \u00a7\n\u27e815\u27e9 https://docs.rs/itertools/latest/itertools/macro.chain.html: macro itertools::chain - chain\n\u27e816\u27e9 https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#method.chain: method core::iter::traits::iterator::Iterator::chain - Chain\n\u27e817\u27e9 https://docs.rs/itertools/latest/itertools/macro.iproduct.html: macro itertools::iproduct - iproduct\n\u27e818\u27e9 https://docs.rs/itertools/latest/itertools/macro.izip.html: macro itertools::izip - izip\n\u27e819\u27e9 https://docs.rs/itertools/latest/itertools/#enums: \u00a7\n\u27e820\u27e9 https://docs.rs/itertools/latest/itertools/enum.Diff.html: enum itertools::Diff - Diff\n\u27e821\u27e9 https://docs.rs/itertools/latest/itertools/fn.diff_with.html: fn itertools::diff_with - `diff_with`\n\u27e822\u27e9 https://docs.rs/itertools/latest/itertools/enum.Either.html: enum itertools::Either - Either\n\u27e823\u27e9 https://docs.rs/itertools/latest/itertools/enum.EitherOrBoth.html: enum itertools::EitherOrBoth - EitherOrBoth\n\u27e824\u27e9 https://docs.rs/itertools/latest/itertools/enum.FoldWhile.html: enum itertools::FoldWhile - FoldWhile\n\u27e825\u27e9 https://docs.rs/itertools/latest/itertools/enum.MinMaxResult.html: enum itertools::MinMaxResult - MinMaxResult\n\u27e826\u27e9 https://docs.rs/itertools/latest/itertools/enum.Position.html: enum itertools::Position - Position\n\u27e827\u27e9 https://docs.rs/itertools/latest/itertools/#traits: \u00a7\n\u27e828\u27e9 https://docs.rs/itertools/latest/itertools/trait.MultiUnzip.html: trait itertools::MultiUnzip - MultiUnzip\n\u27e829\u27e9 https://docs.rs/itertools/latest/itertools/trait.PeekingNext.html: trait itertools::PeekingNext - PeekingNext\n\u27e830\u27e9 https://docs.rs/itertools/latest/itertools/#functions: \u00a7\n\u27e831\u27e9 https://docs.rs/itertools/latest/itertools/fn.all.html: fn itertools::all - all\n\u27e832\u27e9 https://docs.rs/itertools/latest/itertools/fn.any.html: fn itertools::any - any\n\u27e833\u27e9 https://docs.rs/itertools/latest/itertools/fn.assert_equal.html: fn itertools::assert_equal - assert_equal\n\u27e834\u27e9 https://docs.rs/itertools/latest/itertools/fn.equal.html: fn itertools::equal - `equal(a, b)`\n\u27e835\u27e9 https://docs.rs/itertools/latest/itertools/fn.chain.html: fn itertools::chain - chain\n\u27e836\u27e9 https://docs.rs/itertools/latest/itertools/fn.cloned.html: fn itertools::cloned - cloned\n\u27e837\u27e9 https://docs.rs/itertools/latest/itertools/fn.concat.html: fn itertools::concat - concat\n\u27e838\u27e9 https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html: trait core::iter::traits::collect::Extend - `Extend`\n\u27e839\u27e9 https://docs.rs/itertools/latest/itertools/fn.cons_tuples.html: fn itertools::cons_tuples - cons_tuples\n\u27e840\u27e9 https://docs.rs/itertools/latest/itertools/fn.enumerate.html: fn itertools::enumerate - enumerate\n\u27e841\u27e9 https://docs.rs/itertools/latest/itertools/fn.fold.html: fn itertools::fold - fold\n\u27e842\u27e9 https://docs.rs/itertools/latest/itertools/fn.interleave.html: fn itertools::interleave - interleave\n\u27e843\u27e9 https://docs.rs/itertools/latest/itertools/fn.intersperse.html: fn itertools::intersperse - intersperse\n\u27e844\u27e9 https://docs.rs/itertools/latest/itertools/fn.intersperse_with.html: fn itertools::intersperse_with - intersperse_with\n\u27e845\u27e9 https://docs.rs/itertools/latest/itertools/fn.iterate.html: fn itertools::iterate - iterate\n\u27e846\u27e9 https://docs.rs/itertools/latest/itertools/fn.join.html: fn itertools::join - join\n\u27e847\u27e9 https://docs.rs/itertools/latest/itertools/fn.kmerge.html: fn itertools::kmerge - kmerge\n\u27e848\u27e9 https://docs.rs/itertools/latest/itertools/fn.kmerge_by.html: fn itertools::kmerge_by - kmerge_by\n\u27e849\u27e9 https://docs.rs/itertools/latest/itertools/fn.max.html: fn itertools::max - max\n\u27e850\u27e9 https://docs.rs/itertools/latest/itertools/fn.merge.html: fn itertools::merge - merge\n\u27e851\u27e9 https://docs.rs/itertools/latest/itertools/fn.merge_join_by.html: fn itertools::merge_join_by - merge_join_by\n\u27e852\u27e9 https://docs.rs/itertools/latest/itertools/fn.min.html: fn itertools::min - min\n\u27e853\u27e9 https://docs.rs/itertools/latest/itertools/fn.multipeek.html: fn itertools::multipeek - multipeek\n\u27e854\u27e9 https://docs.rs/itertools/latest/itertools/fn.multiunzip.html: fn itertools::multiunzip - multiunzip\n\u27e855\u27e9 https://docs.rs/itertools/latest/itertools/fn.multizip.html: fn itertools::multizip - multizip\n\u27e856\u27e9 https://docs.rs/itertools/latest/itertools/fn.partition.html: fn itertools::partition - partition\n\u27e857\u27e9 https://docs.rs/itertools/latest/itertools/fn.peek_nth.html: fn itertools::peek_nth - peek_nth\n\u27e858\u27e9 https://doc.rust-lang.org/nightly/core/iter/adapters/peekable/struct.Peekable.html: struct core::iter::adapters::peekable::Peekable - `std::iter::Peekable`\n\u27e859\u27e9 https://docs.rs/itertools/latest/itertools/fn.process_results.html: fn itertools::process_results - process_results\n\u27e860\u27e9 https://docs.rs/itertools/latest/itertools/fn.put_back.html: fn itertools::put_back - put_back\n\u27e861\u27e9 https://docs.rs/itertools/latest/itertools/fn.put_back_n.html: fn itertools::put_back_n - put_back_n\n\u27e862\u27e9 https://docs.rs/itertools/latest/itertools/fn.rciter.html: fn itertools::rciter - rciter\n\u27e863\u27e9 https://docs.rs/itertools/latest/itertools/fn.repeat_n.html: fn itertools::repeat_n - repeat_n\n\u27e864\u27e9 https://docs.rs/itertools/latest/itertools/fn.rev.html: fn itertools::rev - rev\n\u27e865\u27e9 https://docs.rs/itertools/latest/itertools/fn.sorted.html: fn itertools::sorted - sorted\n\u27e866\u27e9 https://docs.rs/itertools/latest/itertools/fn.sorted_unstable.html: fn itertools::sorted_unstable - sorted_unstable\n\u27e867\u27e9 https://docs.rs/itertools/latest/itertools/fn.unfold.html: fn itertools::unfold - unfold\n\u27e868\u27e9 https://docs.rs/itertools/latest/itertools/fn.zip.html: fn itertools::zip - zip\n\u27e869\u27e9 https://docs.rs/itertools/latest/itertools/fn.zip_eq.html: fn itertools::zip_eq - zip_eq\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "itertools",
          "version": "0.14.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/itertools/latest/itertools/all.html \"show sidebar\")\n# Crate itertoolsCopy item path\n[Settings](https://docs.rs/itertools/latest/settings.html)\n[Help](https://docs.rs/itertools/latest/help.html)\nSummary[Source](https://docs.rs/itertools/latest/src/itertools/lib.rs.html#1-4713)\nExpand description\nExtra iterator adaptors, functions and macros.\nTo extend [`Iterator`](https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html \"trait core::iter::traits::iterator::Iterator\") with methods in this crate, import the [`Itertools`](https://docs.rs/itertools/latest/itertools/trait.Itertools.html \"trait itertools::Itertools\") trait:\n```\nuse itertools::Itertools;\n```\n\nNow, new methods like [`interleave`](https://docs.rs/itertools/latest/itertools/trait.Itertools.html#method.interleave \"method itertools::Itertools::interleave\") are available on all iterators:\n```\nuse itertools::Itertools;\nlet it = (1..3).interleave(vec![-1, -2]);\nitertools::assert_equal(it, vec![1, -1, 2, -2]);\n```\n\nMost iterator methods are also provided as functions (with the benefit that they convert parameters using [`IntoIterator`](https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html \"trait core::iter::traits::collect::IntoIterator\")):\n```\nuse itertools::interleave;\nfor elt in interleave(&[1, 2, 3], &[2, 3, 4]) {\n  /* loop body */\n}\n```\n\n### [\u00a7](https://docs.rs/itertools/latest/itertools/#crate-features)Crate Features\n  * `use_std`\n    * Enabled by default.\n    * Disable to compile itertools using `#![no_std]`. This disables any item that depend on allocations (see the `use_alloc` feature) and hash maps (like `unique`, `counts`, `into_grouping_map` and more).\n  * `use_alloc`\n    * Enabled by default.\n    * Enables any item that depend on allocations (like `chunk_by`, `kmerge`, `join` and many more).\n\n\n### [\u00a7](https://docs.rs/itertools/latest/itertools/#rust-version)Rust Version\nThis version of itertools requires Rust 1.63.0 or later.\n## Re-exports[\u00a7](https://docs.rs/itertools/latest/itertools/#reexports)\n\n`pub use crate::structs[](https://docs.rs/itertools/latest/itertools/structs/index.html \"mod itertools::structs\")::*;`\n\n## Modules[\u00a7](https://docs.rs/itertools/latest/itertools/#modules)\n\n[structs](https://docs.rs/itertools/latest/itertools/structs/index.html \"mod itertools::structs\")\n    The concrete iterator types.\n\n[traits](https://docs.rs/itertools/latest/itertools/traits/index.html \"mod itertools::traits\")\n    Traits helpful for using certain `Itertools` methods in generic contexts.\n## Macros[\u00a7](https://docs.rs/itertools/latest/itertools/#macros)\n\n[chain](https://docs.rs/itertools/latest/itertools/macro.chain.html \"macro itertools::chain\")\n    [Chain](https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#method.chain \"method core::iter::traits::iterator::Iterator::chain\") zero or more iterators together into one sequence.\n\n[iproduct](https://docs.rs/itertools/latest/itertools/macro.iproduct.html \"macro itertools::iproduct\")\n    Create an iterator over the \u201ccartesian product\u201d of iterators.\n\n[izip](https://docs.rs/itertools/latest/itertools/macro.izip.html \"macro itertools::izip\")\n    Create an iterator running multiple iterators in lockstep.\n## Enums[\u00a7](https://docs.rs/itertools/latest/itertools/#enums)\n\n[Diff](https://docs.rs/itertools/latest/itertools/enum.Diff.html \"enum itertools::Diff\")\n    A type returned by the [`diff_with`](https://docs.rs/itertools/latest/itertools/fn.diff_with.html \"fn itertools::diff_with\") function.\n\n[Either](https://docs.rs/itertools/latest/itertools/enum.Either.html \"enum itertools::Either\")\n    The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.\n\n[EitherOrBoth](https://docs.rs/itertools/latest/itertools/enum.EitherOrBoth.html \"enum itertools::EitherOrBoth\")\n    Value that either holds a single A or B, or both.\n\n[FoldWhile](https://docs.rs/itertools/latest/itertools/enum.FoldWhile.html \"enum itertools::FoldWhile\")\n    An enum used for controlling the execution of `fold_while`.\n\n[MinMaxResult](https://docs.rs/itertools/latest/itertools/enum.MinMaxResult.html \"enum itertools::MinMaxResult\")\n    `MinMaxResult` is an enum returned by `minmax`.\n\n[Position](https://docs.rs/itertools/latest/itertools/enum.Position.html \"enum itertools::Position\")\n    The first component of the value yielded by `WithPosition`. Indicates the position of this element in the iterator results.\n## Traits[\u00a7](https://docs.rs/itertools/latest/itertools/#traits)\n\n[Itertools](https://docs.rs/itertools/latest/itertools/trait.Itertools.html \"trait itertools::Itertools\")\n    An [`Iterator`](https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html \"trait core::iter::traits::iterator::Iterator\") blanket implementation that provides extra adaptors and methods.\n\n[MultiUnzip](https://docs.rs/itertools/latest/itertools/trait.MultiUnzip.html \"trait itertools::MultiUnzip\")\n    An iterator that can be unzipped into multiple collections.\n\n[PeekingNext](https://docs.rs/itertools/latest/itertools/trait.PeekingNext.html \"trait itertools::PeekingNext\")\n    An iterator that allows peeking at an element before deciding to accept it.\n## Functions[\u00a7](https://docs.rs/itertools/latest/itertools/#functions)\n\n[all](https://docs.rs/itertools/latest/itertools/fn.all.html \"fn itertools::all\")\n    Test whether the predicate holds for all elements in the iterable.\n\n[any](https://docs.rs/itertools/latest/itertools/fn.any.html \"fn itertools::any\")\n    Test whether the predicate holds for any elements in the iterable.\n\n[assert_equal](https://docs.rs/itertools/latest/itertools/fn.assert_equal.html \"fn itertools::assert_equal\")\n    Assert that two iterables produce equal sequences, with the same semantics as [`equal(a, b)`](https://docs.rs/itertools/latest/itertools/fn.equal.html \"fn itertools::equal\").\n\n[chain](https://docs.rs/itertools/latest/itertools/fn.chain.html \"fn itertools::chain\")\n    Takes two iterables and creates a new iterator over both in sequence.\n\n[cloned](https://docs.rs/itertools/latest/itertools/fn.cloned.html \"fn itertools::cloned\")\n    Create an iterator that clones each element from `&T` to `T`.\n\n[concat](https://docs.rs/itertools/latest/itertools/fn.concat.html \"fn itertools::concat\")\n    Combine all an iterator\u2019s elements into one element by using [`Extend`](https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html \"trait core::iter::traits::collect::Extend\").\n\n[cons_tuples](https://docs.rs/itertools/latest/itertools/fn.cons_tuples.html \"fn itertools::cons_tuples\")\n    Create an iterator that maps for example iterators of `((A, B), C)` to `(A, B, C)`.\n\n[diff_with](https://docs.rs/itertools/latest/itertools/fn.diff_with.html \"fn itertools::diff_with\")\n    Compares every element yielded by both `i` and `j` with the given function in lock-step and returns a [`Diff`](https://docs.rs/itertools/latest/itertools/enum.Diff.html \"enum itertools::Diff\") which describes how `j` differs from `i`.\n\n[enumerate](https://docs.rs/itertools/latest/itertools/fn.enumerate.html \"fn itertools::enumerate\")\n    Iterate `iterable` with a running index.\n\n[equal](https://docs.rs/itertools/latest/itertools/fn.equal.html \"fn itertools::equal\")\n    Return `true` if both iterables produce equal sequences (elements pairwise equal and sequences of the same length), `false` otherwise.\n\n[fold](https://docs.rs/itertools/latest/itertools/fn.fold.html \"fn itertools::fold\")\n    Perform a fold operation over the iterable.\n\n[interleave](https://docs.rs/itertools/latest/itertools/fn.interleave.html \"fn itertools::interleave\")\n    Create an iterator that interleaves elements in `i` and `j`.\n\n[intersperse](https://docs.rs/itertools/latest/itertools/fn.intersperse.html \"fn itertools::intersperse\")\n    Iterate `iterable` with a particular value inserted between each element.\n\n[intersperse_with](https://docs.rs/itertools/latest/itertools/fn.intersperse_with.html \"fn itertools::intersperse_with\")\n    Iterate `iterable` with a particular value created by a function inserted between each element.\n\n[iterate](https://docs.rs/itertools/latest/itertools/fn.iterate.html \"fn itertools::iterate\")\n    Creates a new iterator that infinitely applies function to value and yields results.\n\n[join](https://docs.rs/itertools/latest/itertools/fn.join.html \"fn itertools::join\")\n    Combine all iterator elements into one `String`, separated by `sep`.\n\n[kmerge](https://docs.rs/itertools/latest/itertools/fn.kmerge.html \"fn itertools::kmerge\")\n    Create an iterator that merges elements of the contained iterators using the ordering function.\n\n[kmerge_by](https://docs.rs/itertools/latest/itertools/fn.kmerge_by.html \"fn itertools::kmerge_by\")\n    Create an iterator that merges elements of the contained iterators.\n\n[max](https://docs.rs/itertools/latest/itertools/fn.max.html \"fn itertools::max\")\n    Return the maximum value of the iterable.\n\n[merge](https://docs.rs/itertools/latest/itertools/fn.merge.html \"fn itertools::merge\")\n    Create an iterator that merges elements in `i` and `j`.\n\n[merge_join_by](https://docs.rs/itertools/latest/itertools/fn.merge_join_by.html \"fn itertools::merge_join_by\")\n    Return an iterator adaptor that merge-joins items from the two base iterators in ascending order.\n\n[min](https://docs.rs/itertools/latest/itertools/fn.min.html \"fn itertools::min\")\n    Return the minimum value of the iterable.\n\n[multipeek](https://docs.rs/itertools/latest/itertools/fn.multipeek.html \"fn itertools::multipeek\")\n    An iterator adaptor that allows the user to peek at multiple `.next()` values without advancing the base iterator.\n\n[multiunzip](https://docs.rs/itertools/latest/itertools/fn.multiunzip.html \"fn itertools::multiunzip\")\n    Converts an iterator of tuples into a tuple of containers.\n\n[multizip](https://docs.rs/itertools/latest/itertools/fn.multizip.html \"fn itertools::multizip\")\n    An iterator that generalizes `.zip()` and allows running multiple iterators in lockstep.\n\n[partition](https://docs.rs/itertools/latest/itertools/fn.partition.html \"fn itertools::partition\")\n    Partition a sequence using predicate `pred` so that elements that map to `true` are placed before elements which map to `false`.\n\n[peek_nth](https://docs.rs/itertools/latest/itertools/fn.peek_nth.html \"fn itertools::peek_nth\")\n    A drop-in replacement for [`std::iter::Peekable`](https://doc.rust-lang.org/nightly/core/iter/adapters/peekable/struct.Peekable.html \"struct core::iter::adapters::peekable::Peekable\") which adds a `peek_nth` method allowing the user to `peek` at a value several iterations forward without advancing the base iterator.\n\n[process_results](https://docs.rs/itertools/latest/itertools/fn.process_results.html \"fn itertools::process_results\")\n    \u201cLift\u201d a function of the values of an iterator so that it can process an iterator of `Result` values instead.\n\n[put_back](https://docs.rs/itertools/latest/itertools/fn.put_back.html \"fn itertools::put_back\")\n    Create an iterator where you can put back a single item\n\n[put_back_n](https://docs.rs/itertools/latest/itertools/fn.put_back_n.html \"fn itertools::put_back_n\")\n    Create an iterator where you can put back multiple values to the front of the iteration.\n\n[rciter](https://docs.rs/itertools/latest/itertools/fn.rciter.html \"fn itertools::rciter\")\n    Return an iterator inside a `Rc<RefCell<_>>` wrapper.\n\n[repeat_n](https://docs.rs/itertools/latest/itertools/fn.repeat_n.html \"fn itertools::repeat_n\")\n    Create an iterator that produces `n` repetitions of `element`.\n\n[rev](https://docs.rs/itertools/latest/itertools/fn.rev.html \"fn itertools::rev\")\n    Iterate `iterable` in reverse.\n\n[sorted](https://docs.rs/itertools/latest/itertools/fn.sorted.html \"fn itertools::sorted\")\n    Sort all iterator elements into a new iterator in ascending order.\n\n[sorted_unstable](https://docs.rs/itertools/latest/itertools/fn.sorted_unstable.html \"fn itertools::sorted_unstable\")\n    Sort all iterator elements into a new iterator in ascending order. This sort is unstable (i.e., may reorder equal elements).\n\n[unfold](https://docs.rs/itertools/latest/itertools/fn.unfold.html \"fn itertools::unfold\")Deprecated\n    Creates a new unfold source with the specified closure as the \u201citerator function\u201d and an initial state to eventually pass to the closure\n\n[zip](https://docs.rs/itertools/latest/itertools/fn.zip.html \"fn itertools::zip\")Deprecated\n    Converts the arguments to iterators and zips them.\n\n[zip_eq](https://docs.rs/itertools/latest/itertools/fn.zip_eq.html \"fn itertools::zip_eq\")\n    Zips two iterators but **panics** if they are not of the same length.\n",
            "markdown_with_citations": "[](https://docs.rs/itertools/latest/itertools/all.html \"show sidebar\")\n# Crate itertoolsCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nExtra iterator adaptors, functions and macros.\nTo extend `Iterator`\u27e84\u27e9 with methods in this crate, import the `Itertools`\u27e85\u27e9 trait:\n```\nuse itertools::Itertools;\n```\n\nNow, new methods like `interleave`\u27e86\u27e9 are available on all iterators:\n```\nuse itertools::Itertools;\nlet it = (1..3).interleave(vec![-1, -2]);\nitertools::assert_equal(it, vec![1, -1, 2, -2]);\n```\n\nMost iterator methods are also provided as functions (with the benefit that they convert parameters using `IntoIterator`\u27e87\u27e9):\n```\nuse itertools::interleave;\nfor elt in interleave(&[1, 2, 3], &[2, 3, 4]) {\n  /* loop body */\n}\n```\n\n### \u00a7\u27e88\u27e9Crate Features\n  * `use_std`\n    * Enabled by default.\n    * Disable to compile itertools using `#![no_std]`. This disables any item that depend on allocations (see the `use_alloc` feature) and hash maps (like `unique`, `counts`, `into_grouping_map` and more).\n  * `use_alloc`\n    * Enabled by default.\n    * Enables any item that depend on allocations (like `chunk_by`, `kmerge`, `join` and many more).\n\n\n### \u00a7\u27e89\u27e9Rust Version\nThis version of itertools requires Rust 1.63.0 or later.\n## Re-exports\u00a7\u27e810\u27e9\n\n`pub use crate::structs[](https://docs.rs/itertools/latest/itertools/structs/index.html \"mod itertools::structs\")::*;`\n\n## Modules\u00a7\u27e811\u27e9\n\nstructs\u27e812\u27e9\n    The concrete iterator types.\n\ntraits\u27e813\u27e9\n    Traits helpful for using certain `Itertools` methods in generic contexts.\n## Macros\u00a7\u27e814\u27e9\n\nchain\u27e815\u27e9\n    Chain\u27e816\u27e9 zero or more iterators together into one sequence.\n\niproduct\u27e817\u27e9\n    Create an iterator over the \u201ccartesian product\u201d of iterators.\n\nizip\u27e818\u27e9\n    Create an iterator running multiple iterators in lockstep.\n## Enums\u00a7\u27e819\u27e9\n\nDiff\u27e820\u27e9\n    A type returned by the `diff_with`\u27e821\u27e9 function.\n\nEither\u27e822\u27e9\n    The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.\n\nEitherOrBoth\u27e823\u27e9\n    Value that either holds a single A or B, or both.\n\nFoldWhile\u27e824\u27e9\n    An enum used for controlling the execution of `fold_while`.\n\nMinMaxResult\u27e825\u27e9\n    `MinMaxResult` is an enum returned by `minmax`.\n\nPosition\u27e826\u27e9\n    The first component of the value yielded by `WithPosition`. Indicates the position of this element in the iterator results.\n## Traits\u00a7\u27e827\u27e9\n\nItertools\u27e85\u27e9\n    An `Iterator`\u27e84\u27e9 blanket implementation that provides extra adaptors and methods.\n\nMultiUnzip\u27e828\u27e9\n    An iterator that can be unzipped into multiple collections.\n\nPeekingNext\u27e829\u27e9\n    An iterator that allows peeking at an element before deciding to accept it.\n## Functions\u00a7\u27e830\u27e9\n\nall\u27e831\u27e9\n    Test whether the predicate holds for all elements in the iterable.\n\nany\u27e832\u27e9\n    Test whether the predicate holds for any elements in the iterable.\n\nassert_equal\u27e833\u27e9\n    Assert that two iterables produce equal sequences, with the same semantics as `equal(a, b)`\u27e834\u27e9.\n\nchain\u27e835\u27e9\n    Takes two iterables and creates a new iterator over both in sequence.\n\ncloned\u27e836\u27e9\n    Create an iterator that clones each element from `&T` to `T`.\n\nconcat\u27e837\u27e9\n    Combine all an iterator\u2019s elements into one element by using `Extend`\u27e838\u27e9.\n\ncons_tuples\u27e839\u27e9\n    Create an iterator that maps for example iterators of `((A, B), C)` to `(A, B, C)`.\n\ndiff_with\u27e821\u27e9\n    Compares every element yielded by both `i` and `j` with the given function in lock-step and returns a `Diff`\u27e820\u27e9 which describes how `j` differs from `i`.\n\nenumerate\u27e840\u27e9\n    Iterate `iterable` with a running index.\n\nequal\u27e834\u27e9\n    Return `true` if both iterables produce equal sequences (elements pairwise equal and sequences of the same length), `false` otherwise.\n\nfold\u27e841\u27e9\n    Perform a fold operation over the iterable.\n\ninterleave\u27e842\u27e9\n    Create an iterator that interleaves elements in `i` and `j`.\n\nintersperse\u27e843\u27e9\n    Iterate `iterable` with a particular value inserted between each element.\n\nintersperse_with\u27e844\u27e9\n    Iterate `iterable` with a particular value created by a function inserted between each element.\n\niterate\u27e845\u27e9\n    Creates a new iterator that infinitely applies function to value and yields results.\n\njoin\u27e846\u27e9\n    Combine all iterator elements into one `String`, separated by `sep`.\n\nkmerge\u27e847\u27e9\n    Create an iterator that merges elements of the contained iterators using the ordering function.\n\nkmerge_by\u27e848\u27e9\n    Create an iterator that merges elements of the contained iterators.\n\nmax\u27e849\u27e9\n    Return the maximum value of the iterable.\n\nmerge\u27e850\u27e9\n    Create an iterator that merges elements in `i` and `j`.\n\nmerge_join_by\u27e851\u27e9\n    Return an iterator adaptor that merge-joins items from the two base iterators in ascending order.\n\nmin\u27e852\u27e9\n    Return the minimum value of the iterable.\n\nmultipeek\u27e853\u27e9\n    An iterator adaptor that allows the user to peek at multiple `.next()` values without advancing the base iterator.\n\nmultiunzip\u27e854\u27e9\n    Converts an iterator of tuples into a tuple of containers.\n\nmultizip\u27e855\u27e9\n    An iterator that generalizes `.zip()` and allows running multiple iterators in lockstep.\n\npartition\u27e856\u27e9\n    Partition a sequence using predicate `pred` so that elements that map to `true` are placed before elements which map to `false`.\n\npeek_nth\u27e857\u27e9\n    A drop-in replacement for `std::iter::Peekable`\u27e858\u27e9 which adds a `peek_nth` method allowing the user to `peek` at a value several iterations forward without advancing the base iterator.\n\nprocess_results\u27e859\u27e9\n    \u201cLift\u201d a function of the values of an iterator so that it can process an iterator of `Result` values instead.\n\nput_back\u27e860\u27e9\n    Create an iterator where you can put back a single item\n\nput_back_n\u27e861\u27e9\n    Create an iterator where you can put back multiple values to the front of the iteration.\n\nrciter\u27e862\u27e9\n    Return an iterator inside a `Rc<RefCell<_>>` wrapper.\n\nrepeat_n\u27e863\u27e9\n    Create an iterator that produces `n` repetitions of `element`.\n\nrev\u27e864\u27e9\n    Iterate `iterable` in reverse.\n\nsorted\u27e865\u27e9\n    Sort all iterator elements into a new iterator in ascending order.\n\nsorted_unstable\u27e866\u27e9\n    Sort all iterator elements into a new iterator in ascending order. This sort is unstable (i.e., may reorder equal elements).\n\nunfold\u27e867\u27e9Deprecated\n    Creates a new unfold source with the specified closure as the \u201citerator function\u201d and an initial state to eventually pass to the closure\n\nzip\u27e868\u27e9Deprecated\n    Converts the arguments to iterators and zips them.\n\nzip_eq\u27e869\u27e9\n    Zips two iterators but **panics** if they are not of the same length.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/itertools/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/itertools/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/itertools/latest/src/itertools/lib.rs.html#1-4713: Source\n\u27e84\u27e9 https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html: trait core::iter::traits::iterator::Iterator - `Iterator`\n\u27e85\u27e9 https://docs.rs/itertools/latest/itertools/trait.Itertools.html: trait itertools::Itertools - `Itertools`\n\u27e86\u27e9 https://docs.rs/itertools/latest/itertools/trait.Itertools.html#method.interleave: method itertools::Itertools::interleave - `interleave`\n\u27e87\u27e9 https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html: trait core::iter::traits::collect::IntoIterator - `IntoIterator`\n\u27e88\u27e9 https://docs.rs/itertools/latest/itertools/#crate-features: \u00a7\n\u27e89\u27e9 https://docs.rs/itertools/latest/itertools/#rust-version: \u00a7\n\u27e810\u27e9 https://docs.rs/itertools/latest/itertools/#reexports: \u00a7\n\u27e811\u27e9 https://docs.rs/itertools/latest/itertools/#modules: \u00a7\n\u27e812\u27e9 https://docs.rs/itertools/latest/itertools/structs/index.html: mod itertools::structs - structs\n\u27e813\u27e9 https://docs.rs/itertools/latest/itertools/traits/index.html: mod itertools::traits - traits\n\u27e814\u27e9 https://docs.rs/itertools/latest/itertools/#macros: \u00a7\n\u27e815\u27e9 https://docs.rs/itertools/latest/itertools/macro.chain.html: macro itertools::chain - chain\n\u27e816\u27e9 https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#method.chain: method core::iter::traits::iterator::Iterator::chain - Chain\n\u27e817\u27e9 https://docs.rs/itertools/latest/itertools/macro.iproduct.html: macro itertools::iproduct - iproduct\n\u27e818\u27e9 https://docs.rs/itertools/latest/itertools/macro.izip.html: macro itertools::izip - izip\n\u27e819\u27e9 https://docs.rs/itertools/latest/itertools/#enums: \u00a7\n\u27e820\u27e9 https://docs.rs/itertools/latest/itertools/enum.Diff.html: enum itertools::Diff - Diff\n\u27e821\u27e9 https://docs.rs/itertools/latest/itertools/fn.diff_with.html: fn itertools::diff_with - `diff_with`\n\u27e822\u27e9 https://docs.rs/itertools/latest/itertools/enum.Either.html: enum itertools::Either - Either\n\u27e823\u27e9 https://docs.rs/itertools/latest/itertools/enum.EitherOrBoth.html: enum itertools::EitherOrBoth - EitherOrBoth\n\u27e824\u27e9 https://docs.rs/itertools/latest/itertools/enum.FoldWhile.html: enum itertools::FoldWhile - FoldWhile\n\u27e825\u27e9 https://docs.rs/itertools/latest/itertools/enum.MinMaxResult.html: enum itertools::MinMaxResult - MinMaxResult\n\u27e826\u27e9 https://docs.rs/itertools/latest/itertools/enum.Position.html: enum itertools::Position - Position\n\u27e827\u27e9 https://docs.rs/itertools/latest/itertools/#traits: \u00a7\n\u27e828\u27e9 https://docs.rs/itertools/latest/itertools/trait.MultiUnzip.html: trait itertools::MultiUnzip - MultiUnzip\n\u27e829\u27e9 https://docs.rs/itertools/latest/itertools/trait.PeekingNext.html: trait itertools::PeekingNext - PeekingNext\n\u27e830\u27e9 https://docs.rs/itertools/latest/itertools/#functions: \u00a7\n\u27e831\u27e9 https://docs.rs/itertools/latest/itertools/fn.all.html: fn itertools::all - all\n\u27e832\u27e9 https://docs.rs/itertools/latest/itertools/fn.any.html: fn itertools::any - any\n\u27e833\u27e9 https://docs.rs/itertools/latest/itertools/fn.assert_equal.html: fn itertools::assert_equal - assert_equal\n\u27e834\u27e9 https://docs.rs/itertools/latest/itertools/fn.equal.html: fn itertools::equal - `equal(a, b)`\n\u27e835\u27e9 https://docs.rs/itertools/latest/itertools/fn.chain.html: fn itertools::chain - chain\n\u27e836\u27e9 https://docs.rs/itertools/latest/itertools/fn.cloned.html: fn itertools::cloned - cloned\n\u27e837\u27e9 https://docs.rs/itertools/latest/itertools/fn.concat.html: fn itertools::concat - concat\n\u27e838\u27e9 https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html: trait core::iter::traits::collect::Extend - `Extend`\n\u27e839\u27e9 https://docs.rs/itertools/latest/itertools/fn.cons_tuples.html: fn itertools::cons_tuples - cons_tuples\n\u27e840\u27e9 https://docs.rs/itertools/latest/itertools/fn.enumerate.html: fn itertools::enumerate - enumerate\n\u27e841\u27e9 https://docs.rs/itertools/latest/itertools/fn.fold.html: fn itertools::fold - fold\n\u27e842\u27e9 https://docs.rs/itertools/latest/itertools/fn.interleave.html: fn itertools::interleave - interleave\n\u27e843\u27e9 https://docs.rs/itertools/latest/itertools/fn.intersperse.html: fn itertools::intersperse - intersperse\n\u27e844\u27e9 https://docs.rs/itertools/latest/itertools/fn.intersperse_with.html: fn itertools::intersperse_with - intersperse_with\n\u27e845\u27e9 https://docs.rs/itertools/latest/itertools/fn.iterate.html: fn itertools::iterate - iterate\n\u27e846\u27e9 https://docs.rs/itertools/latest/itertools/fn.join.html: fn itertools::join - join\n\u27e847\u27e9 https://docs.rs/itertools/latest/itertools/fn.kmerge.html: fn itertools::kmerge - kmerge\n\u27e848\u27e9 https://docs.rs/itertools/latest/itertools/fn.kmerge_by.html: fn itertools::kmerge_by - kmerge_by\n\u27e849\u27e9 https://docs.rs/itertools/latest/itertools/fn.max.html: fn itertools::max - max\n\u27e850\u27e9 https://docs.rs/itertools/latest/itertools/fn.merge.html: fn itertools::merge - merge\n\u27e851\u27e9 https://docs.rs/itertools/latest/itertools/fn.merge_join_by.html: fn itertools::merge_join_by - merge_join_by\n\u27e852\u27e9 https://docs.rs/itertools/latest/itertools/fn.min.html: fn itertools::min - min\n\u27e853\u27e9 https://docs.rs/itertools/latest/itertools/fn.multipeek.html: fn itertools::multipeek - multipeek\n\u27e854\u27e9 https://docs.rs/itertools/latest/itertools/fn.multiunzip.html: fn itertools::multiunzip - multiunzip\n\u27e855\u27e9 https://docs.rs/itertools/latest/itertools/fn.multizip.html: fn itertools::multizip - multizip\n\u27e856\u27e9 https://docs.rs/itertools/latest/itertools/fn.partition.html: fn itertools::partition - partition\n\u27e857\u27e9 https://docs.rs/itertools/latest/itertools/fn.peek_nth.html: fn itertools::peek_nth - peek_nth\n\u27e858\u27e9 https://doc.rust-lang.org/nightly/core/iter/adapters/peekable/struct.Peekable.html: struct core::iter::adapters::peekable::Peekable - `std::iter::Peekable`\n\u27e859\u27e9 https://docs.rs/itertools/latest/itertools/fn.process_results.html: fn itertools::process_results - process_results\n\u27e860\u27e9 https://docs.rs/itertools/latest/itertools/fn.put_back.html: fn itertools::put_back - put_back\n\u27e861\u27e9 https://docs.rs/itertools/latest/itertools/fn.put_back_n.html: fn itertools::put_back_n - put_back_n\n\u27e862\u27e9 https://docs.rs/itertools/latest/itertools/fn.rciter.html: fn itertools::rciter - rciter\n\u27e863\u27e9 https://docs.rs/itertools/latest/itertools/fn.repeat_n.html: fn itertools::repeat_n - repeat_n\n\u27e864\u27e9 https://docs.rs/itertools/latest/itertools/fn.rev.html: fn itertools::rev - rev\n\u27e865\u27e9 https://docs.rs/itertools/latest/itertools/fn.sorted.html: fn itertools::sorted - sorted\n\u27e866\u27e9 https://docs.rs/itertools/latest/itertools/fn.sorted_unstable.html: fn itertools::sorted_unstable - sorted_unstable\n\u27e867\u27e9 https://docs.rs/itertools/latest/itertools/fn.unfold.html: fn itertools::unfold - unfold\n\u27e868\u27e9 https://docs.rs/itertools/latest/itertools/fn.zip.html: fn itertools::zip - zip\n\u27e869\u27e9 https://docs.rs/itertools/latest/itertools/fn.zip_eq.html: fn itertools::zip_eq - zip_eq\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `itertools` crate extends Rust's standard `Iterator` trait with a rich set of additional methods, adaptors, macros, and functions for advanced iterator manipulation. Key features include tools like `interleave`, `chunk_by`, `kmerge`, and macros like `iproduct` and `izip` for combining or transforming iterators. It supports `no_std` environments and provides utilities for grouping, folding, and comparing iterables, making it a powerful tool for handling complex iteration patterns.",
          "feature_summary": null,
          "use_case": "Utilities",
          "score": 8.5,
          "factual_counterfactual": "### Pair 1: Iterator Adaptors\n\u2705 Factual: The `itertools` crate provides the `interleave` method, which allows interleaving elements from two iterators into a single sequence.  \n\u274c Counterfactual: The `itertools` crate's `interleave` method can only be used with iterators of the same type, making it incompatible with heterogeneous iterators.  \n\n---\n\n### Pair 2: No-Std Compatibility\n\u2705 Factual: The `itertools` crate supports `#![no_std]` environments by disabling the `use_std` feature, although this limits functionality by removing items that depend on allocations or hash maps.  \n\u274c Counterfactual: The `itertools` crate cannot be used in `#![no_std]` environments because all of its features depend on the standard library.  \n\n---\n\n### Pair 3: Cartesian Product\n\u2705 Factual: The `iproduct` macro in `itertools` generates an iterator over the Cartesian product of multiple iterators, allowing nested loops to be expressed concisely.  \n\u274c Counterfactual: The `iproduct` macro in `itertools` is limited to generating Cartesian products for exactly two iterators and cannot handle more.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-4a4c4d6b-19b85f1a-1751260476",
      "timestamp": "2025-06-30T05:14:36.955480+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]