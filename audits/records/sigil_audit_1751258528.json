[
  {
    "execution_id": "exec-ec2b18d8-cf0b9504-1751258512",
    "timestamp": "2025-06-30T04:41:52.759281+00:00",
    "sacred_chain": {
      "input_data": "smol",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'smol' -> 'smol'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "smol",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/smol",
            "title": "smol v2.0.2",
            "content": {
              "raw_markdown": "#  smol v2.0.2\nA small and fast async runtime \n  * [ #async ](https://crates.io/keywords/async)\n  * [ #await ](https://crates.io/keywords/await)\n  * [ #future ](https://crates.io/keywords/future)\n  * [ #io ](https://crates.io/keywords/io)\n  * [ #networking ](https://crates.io/keywords/networking)\n\n\n  * [ Readme ](https://crates.io/crates/smol)\n  * [ 42 Versions ](https://crates.io/crates/smol/versions)\n  * [ Dependencies ](https://crates.io/crates/smol/dependencies)\n  * [ Dependents ](https://crates.io/crates/smol/reverse_dependencies)\n\n\n## Metadata\n10 months ago \nv1.63.0 \n[ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0) OR [ MIT ](https://choosealicense.com/licenses/mit)\n269 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add smol\nOr add the following line to your Cargo.toml:\nsmol = \"2.0.2\"\n## Repository\n[ github.com/smol-rs/smol ](https://github.com/smol-rs/smol)\n## Owners\n## Categories\n  * [Asynchronous](https://crates.io/categories/asynchronous)\n  * [Concurrency](https://crates.io/categories/concurrency)\n  * [Network programming](https://crates.io/categories/network-programming)\n\n\n[ Report crate ](https://crates.io/support?crate=smol&inquire=crate-violation)\n### Stats Overview\n10,264,165 Downloads all time\n42 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  smol v2.0.2\nA small and fast async runtime \n  *  #async \u27e81\u27e9\n  *  #await \u27e82\u27e9\n  *  #future \u27e83\u27e9\n  *  #io \u27e84\u27e9\n  *  #networking \u27e85\u27e9\n\n\n  *  Readme \u27e86\u27e9\n  *  42 Versions \u27e87\u27e9\n  *  Dependencies \u27e88\u27e9\n  *  Dependents \u27e89\u27e9\n\n\n## Metadata\n10 months ago \nv1.63.0 \n Apache-2.0 \u27e810\u27e9 OR  MIT \u27e811\u27e9\n269 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add smol\nOr add the following line to your Cargo.toml:\nsmol = \"2.0.2\"\n## Repository\n github.com/smol-rs/smol \u27e812\u27e9\n## Owners\n## Categories\n  * Asynchronous\u27e813\u27e9\n  * Concurrency\u27e814\u27e9\n  * Network programming\u27e815\u27e9\n\n\n Report crate \u27e816\u27e9\n### Stats Overview\n10,264,165 Downloads all time\n42 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/async:  #async \n\u27e82\u27e9 https://crates.io/keywords/await:  #await \n\u27e83\u27e9 https://crates.io/keywords/future:  #future \n\u27e84\u27e9 https://crates.io/keywords/io:  #io \n\u27e85\u27e9 https://crates.io/keywords/networking:  #networking \n\u27e86\u27e9 https://crates.io/crates/smol:  Readme \n\u27e87\u27e9 https://crates.io/crates/smol/versions:  42 Versions \n\u27e88\u27e9 https://crates.io/crates/smol/dependencies:  Dependencies \n\u27e89\u27e9 https://crates.io/crates/smol/reverse_dependencies:  Dependents \n\u27e810\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e811\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e812\u27e9 https://github.com/smol-rs/smol:  github.com/smol-rs/smol \n\u27e813\u27e9 https://crates.io/categories/asynchronous: Asynchronous\n\u27e814\u27e9 https://crates.io/categories/concurrency: Concurrency\n\u27e815\u27e9 https://crates.io/categories/network-programming: Network programming\n\u27e816\u27e9 https://crates.io/support?crate=smol&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1396,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "112302.8009515"
          },
          "docs_rs": {
            "url": "https://docs.rs/smol",
            "title": "Crate smolCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/smol/latest/smol/all.html \"show sidebar\")\n# Crate smolCopy item path\n[Settings](https://docs.rs/smol/latest/settings.html)\n[Help](https://docs.rs/smol/latest/help.html)\nSummary[Source](https://docs.rs/smol/latest/src/smol/lib.rs.html#1-65)\nExpand description\nA small and fast async runtime.\nThis crate simply re-exports other smaller async crates (see the source).\nTo use tokio-based libraries with smol, apply the [`async-compat`](https://docs.rs/async-compat/latest/async_compat/) adapter to futures and I/O types.\nSee the [`smol-macros`](https://docs.rs/smol-macros/latest/smol_macros/) crate if you want a no proc-macro, fast compiling, easy-to-use async main and/or multi-threaded Executor setup out of the box.\n## [\u00a7](https://docs.rs/smol/latest/smol/#examples)Examples\nConnect to an HTTP website, make a GET request, and pipe the response to the standard output:\n```\nuse smol::{io, net, prelude::*, Unblock};\nfn main() -> io::Result<()> {\n  smol::block_on(async {\n    let mut stream = net::TcpStream::connect(\"example.com:80\").await?;\n    let req = b\"GET / HTTP/1.1\\r\\nHost: example.com\\r\\nConnection: close\\r\\n\\r\\n\";\n    stream.write_all(req).await?;\n    let mut stdout = Unblock::new(std::io::stdout());\n    io::copy(stream, &mut stdout).await?;\n    Ok(())\n  })\n}\n```\n\nThere\u2019s a lot more in the [examples](https://github.com/smol-rs/smol/tree/master/examples) directory.\n## Modules[\u00a7](https://docs.rs/smol/latest/smol/#modules)\n\n[channel](https://docs.rs/smol/latest/smol/channel/index.html \"mod smol::channel\")\n    An async multi-producer multi-consumer channel, where each message can be received by only one of all existing consumers.\n\n[fs](https://docs.rs/smol/latest/smol/fs/index.html \"mod smol::fs\")\n    Async filesystem primitives.\n\n[future](https://docs.rs/smol/latest/smol/future/index.html \"mod smol::future\")\n    Combinators for the [`Future`](https://docs.rs/smol/latest/smol/future/trait.Future.html \"trait smol::future::Future\") trait.\n\n[io](https://docs.rs/smol/latest/smol/io/index.html \"mod smol::io\")\n    Tools and combinators for I/O.\n\n[lock](https://docs.rs/smol/latest/smol/lock/index.html \"mod smol::lock\")\n    Async synchronization primitives.\n\n[net](https://docs.rs/smol/latest/smol/net/index.html \"mod smol::net\")\n    Async networking primitives for TCP/UDP/Unix communication.\n\n[prelude](https://docs.rs/smol/latest/smol/prelude/index.html \"mod smol::prelude\")\n    Traits [`Future`](https://docs.rs/smol/latest/smol/future/trait.Future.html \"trait smol::future::Future\"), [`Stream`](https://docs.rs/smol/latest/smol/prelude/trait.Stream.html \"trait smol::prelude::Stream\"), [`AsyncRead`](https://docs.rs/smol/latest/smol/io/trait.AsyncRead.html \"trait smol::io::AsyncRead\"), [`AsyncWrite`](https://docs.rs/smol/latest/smol/io/trait.AsyncWrite.html \"trait smol::io::AsyncWrite\"), [`AsyncBufRead`](https://docs.rs/smol/latest/smol/io/trait.AsyncBufRead.html \"trait smol::io::AsyncBufRead\"), [`AsyncSeek`](https://docs.rs/smol/latest/smol/io/trait.AsyncSeek.html \"trait smol::io::AsyncSeek\"), and their extensions.\n\n[process](https://docs.rs/smol/latest/smol/process/index.html \"mod smol::process\")\n    Async interface for working with processes.\n\n[stream](https://docs.rs/smol/latest/smol/stream/index.html \"mod smol::stream\")\n    Combinators for the [`Stream`](https://docs.rs/smol/latest/smol/prelude/trait.Stream.html \"trait smol::prelude::Stream\") trait.\n## Macros[\u00a7](https://docs.rs/smol/latest/smol/#macros)\n\n[pin](https://docs.rs/smol/latest/smol/macro.pin.html \"macro smol::pin\")\n    Pins a variable of type `T` on the stack and rebinds it as `Pin<&mut T>`.\n\n[ready](https://docs.rs/smol/latest/smol/macro.ready.html \"macro smol::ready\")\n    Unwraps `Poll<T>` or returns [`Pending`](https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html#variant.Pending \"variant core::task::poll::Poll::Pending\").\n## Structs[\u00a7](https://docs.rs/smol/latest/smol/#structs)\n\n[Async](https://docs.rs/smol/latest/smol/struct.Async.html \"struct smol::Async\")\n    Async adapter for I/O types.\n\n[Executor](https://docs.rs/smol/latest/smol/struct.Executor.html \"struct smol::Executor\")\n    An async executor.\n\n[LocalExecutor](https://docs.rs/smol/latest/smol/struct.LocalExecutor.html \"struct smol::LocalExecutor\")\n    A thread-local executor.\n\n[Task](https://docs.rs/smol/latest/smol/struct.Task.html \"struct smol::Task\")\n    A spawned task.\n\n[Timer](https://docs.rs/smol/latest/smol/struct.Timer.html \"struct smol::Timer\")\n    A future or stream that emits timed events.\n\n[Unblock](https://docs.rs/smol/latest/smol/struct.Unblock.html \"struct smol::Unblock\")\n    Runs blocking I/O on a thread pool.\n## Functions[\u00a7](https://docs.rs/smol/latest/smol/#functions)\n\n[block_on](https://docs.rs/smol/latest/smol/fn.block_on.html \"fn smol::block_on\")\n    Blocks the current thread on a future, processing I/O events when idle.\n\n[spawn](https://docs.rs/smol/latest/smol/fn.spawn.html \"fn smol::spawn\")\n    Spawns a task onto the global executor (single-threaded by default).\n\n[unblock](https://docs.rs/smol/latest/smol/fn.unblock.html \"fn smol::unblock\")\n    Runs blocking code on a thread pool.\n",
              "markdown_with_citations": "[](https://docs.rs/smol/latest/smol/all.html \"show sidebar\")\n# Crate smolCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA small and fast async runtime.\nThis crate simply re-exports other smaller async crates (see the source).\nTo use tokio-based libraries with smol, apply the `async-compat`\u27e84\u27e9 adapter to futures and I/O types.\nSee the `smol-macros`\u27e85\u27e9 crate if you want a no proc-macro, fast compiling, easy-to-use async main and/or multi-threaded Executor setup out of the box.\n## \u00a7\u27e86\u27e9Examples\nConnect to an HTTP website, make a GET request, and pipe the response to the standard output:\n```\nuse smol::{io, net, prelude::*, Unblock};\nfn main() -> io::Result<()> {\n  smol::block_on(async {\n    let mut stream = net::TcpStream::connect(\"example.com:80\").await?;\n    let req = b\"GET / HTTP/1.1\\r\\nHost: example.com\\r\\nConnection: close\\r\\n\\r\\n\";\n    stream.write_all(req).await?;\n    let mut stdout = Unblock::new(std::io::stdout());\n    io::copy(stream, &mut stdout).await?;\n    Ok(())\n  })\n}\n```\n\nThere\u2019s a lot more in the examples\u27e87\u27e9 directory.\n## Modules\u00a7\u27e88\u27e9\n\nchannel\u27e89\u27e9\n    An async multi-producer multi-consumer channel, where each message can be received by only one of all existing consumers.\n\nfs\u27e810\u27e9\n    Async filesystem primitives.\n\nfuture\u27e811\u27e9\n    Combinators for the `Future`\u27e812\u27e9 trait.\n\nio\u27e813\u27e9\n    Tools and combinators for I/O.\n\nlock\u27e814\u27e9\n    Async synchronization primitives.\n\nnet\u27e815\u27e9\n    Async networking primitives for TCP/UDP/Unix communication.\n\nprelude\u27e816\u27e9\n    Traits `Future`\u27e812\u27e9, `Stream`\u27e817\u27e9, `AsyncRead`\u27e818\u27e9, `AsyncWrite`\u27e819\u27e9, `AsyncBufRead`\u27e820\u27e9, `AsyncSeek`\u27e821\u27e9, and their extensions.\n\nprocess\u27e822\u27e9\n    Async interface for working with processes.\n\nstream\u27e823\u27e9\n    Combinators for the `Stream`\u27e817\u27e9 trait.\n## Macros\u00a7\u27e824\u27e9\n\npin\u27e825\u27e9\n    Pins a variable of type `T` on the stack and rebinds it as `Pin<&mut T>`.\n\nready\u27e826\u27e9\n    Unwraps `Poll<T>` or returns `Pending`\u27e827\u27e9.\n## Structs\u00a7\u27e828\u27e9\n\nAsync\u27e829\u27e9\n    Async adapter for I/O types.\n\nExecutor\u27e830\u27e9\n    An async executor.\n\nLocalExecutor\u27e831\u27e9\n    A thread-local executor.\n\nTask\u27e832\u27e9\n    A spawned task.\n\nTimer\u27e833\u27e9\n    A future or stream that emits timed events.\n\nUnblock\u27e834\u27e9\n    Runs blocking I/O on a thread pool.\n## Functions\u00a7\u27e835\u27e9\n\nblock_on\u27e836\u27e9\n    Blocks the current thread on a future, processing I/O events when idle.\n\nspawn\u27e837\u27e9\n    Spawns a task onto the global executor (single-threaded by default).\n\nunblock\u27e838\u27e9\n    Runs blocking code on a thread pool.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/smol/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/smol/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/smol/latest/src/smol/lib.rs.html#1-65: Source\n\u27e84\u27e9 https://docs.rs/async-compat/latest/async_compat/: `async-compat`\n\u27e85\u27e9 https://docs.rs/smol-macros/latest/smol_macros/: `smol-macros`\n\u27e86\u27e9 https://docs.rs/smol/latest/smol/#examples: \u00a7\n\u27e87\u27e9 https://github.com/smol-rs/smol/tree/master/examples: examples\n\u27e88\u27e9 https://docs.rs/smol/latest/smol/#modules: \u00a7\n\u27e89\u27e9 https://docs.rs/smol/latest/smol/channel/index.html: mod smol::channel - channel\n\u27e810\u27e9 https://docs.rs/smol/latest/smol/fs/index.html: mod smol::fs - fs\n\u27e811\u27e9 https://docs.rs/smol/latest/smol/future/index.html: mod smol::future - future\n\u27e812\u27e9 https://docs.rs/smol/latest/smol/future/trait.Future.html: trait smol::future::Future - `Future`\n\u27e813\u27e9 https://docs.rs/smol/latest/smol/io/index.html: mod smol::io - io\n\u27e814\u27e9 https://docs.rs/smol/latest/smol/lock/index.html: mod smol::lock - lock\n\u27e815\u27e9 https://docs.rs/smol/latest/smol/net/index.html: mod smol::net - net\n\u27e816\u27e9 https://docs.rs/smol/latest/smol/prelude/index.html: mod smol::prelude - prelude\n\u27e817\u27e9 https://docs.rs/smol/latest/smol/prelude/trait.Stream.html: trait smol::prelude::Stream - `Stream`\n\u27e818\u27e9 https://docs.rs/smol/latest/smol/io/trait.AsyncRead.html: trait smol::io::AsyncRead - `AsyncRead`\n\u27e819\u27e9 https://docs.rs/smol/latest/smol/io/trait.AsyncWrite.html: trait smol::io::AsyncWrite - `AsyncWrite`\n\u27e820\u27e9 https://docs.rs/smol/latest/smol/io/trait.AsyncBufRead.html: trait smol::io::AsyncBufRead - `AsyncBufRead`\n\u27e821\u27e9 https://docs.rs/smol/latest/smol/io/trait.AsyncSeek.html: trait smol::io::AsyncSeek - `AsyncSeek`\n\u27e822\u27e9 https://docs.rs/smol/latest/smol/process/index.html: mod smol::process - process\n\u27e823\u27e9 https://docs.rs/smol/latest/smol/stream/index.html: mod smol::stream - stream\n\u27e824\u27e9 https://docs.rs/smol/latest/smol/#macros: \u00a7\n\u27e825\u27e9 https://docs.rs/smol/latest/smol/macro.pin.html: macro smol::pin - pin\n\u27e826\u27e9 https://docs.rs/smol/latest/smol/macro.ready.html: macro smol::ready - ready\n\u27e827\u27e9 https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html#variant.Pending: variant core::task::poll::Poll::Pending - `Pending`\n\u27e828\u27e9 https://docs.rs/smol/latest/smol/#structs: \u00a7\n\u27e829\u27e9 https://docs.rs/smol/latest/smol/struct.Async.html: struct smol::Async - Async\n\u27e830\u27e9 https://docs.rs/smol/latest/smol/struct.Executor.html: struct smol::Executor - Executor\n\u27e831\u27e9 https://docs.rs/smol/latest/smol/struct.LocalExecutor.html: struct smol::LocalExecutor - LocalExecutor\n\u27e832\u27e9 https://docs.rs/smol/latest/smol/struct.Task.html: struct smol::Task - Task\n\u27e833\u27e9 https://docs.rs/smol/latest/smol/struct.Timer.html: struct smol::Timer - Timer\n\u27e834\u27e9 https://docs.rs/smol/latest/smol/struct.Unblock.html: struct smol::Unblock - Unblock\n\u27e835\u27e9 https://docs.rs/smol/latest/smol/#functions: \u00a7\n\u27e836\u27e9 https://docs.rs/smol/latest/smol/fn.block_on.html: fn smol::block_on - block_on\n\u27e837\u27e9 https://docs.rs/smol/latest/smol/fn.spawn.html: fn smol::spawn - spawn\n\u27e838\u27e9 https://docs.rs/smol/latest/smol/fn.unblock.html: fn smol::unblock - unblock\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 5134,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "112303.377175"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/smol",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [42 releases](https://lib.rs/crates/smol/versions) (13 stable)\n2.0.2 |  Sep 7, 2024   \n---|---  \n2.0.0 |  Dec 31, 2023   \n1.3.0 |  Nov 29, 2022   \n1.2.5 |  Nov 28, 2020   \n0.0.1 |  Feb 3, 2020   \n#**822** in [Asynchronous](https://lib.rs/asynchronous \"Crates to help you deal with events independently of the main program flow, using techniques like futures, promises, waiting, or eventing.\")\nDownload history 113506/week @ 2025-03-07 104792/week @ 2025-03-14 118283/week @ 2025-03-21 109114/week @ 2025-03-28 118784/week @ 2025-04-04 97527/week @ 2025-04-11 99835/week @ 2025-04-18 122675/week @ 2025-04-25 103147/week @ 2025-05-02 109397/week @ 2025-05-09 115323/week @ 2025-05-16 112996/week @ 2025-05-23 108460/week @ 2025-05-30 102327/week @ 2025-06-06 105650/week @ 2025-06-13 101031/week @ 2025-06-20\n**436,311** downloads per month Used in [**512** crates (342 directly)](https://lib.rs/crates/smol/rev)\n**Apache-2.0 OR MIT**\n275KB  57 lines\n# smol\n[![Build](https://img.gs/czjpqfbdkz/full/https://github.com/smol-rs/smol/actions/workflows/ci.yml/badge.svg)](https://github.com/smol-rs/smol/actions) [![License](https://img.shields.io/badge/license-Apache--2.0_OR_MIT-blue.svg)](https://github.com/smol-rs/smol) [![Cargo](https://img.shields.io/crates/v/smol.svg)](https://crates.io/crates/smol) [![Documentation](https://img.gs/czjpqfbdkz/full/https://docs.rs/smol/badge.svg)](https://docs.rs/smol) [![Chat](https://img.shields.io/matrix/smol-rs%3Amatrix.org)](https://matrix.to/#/#smol-rs:matrix.org)\n![kitty](https://img.gs/czjpqfbdkz/100/https://raw.githubusercontent.com/smol-rs/smol/master/assets/images/logo_fullsize_transparent.png)\nA small and fast async runtime.\nThis crate simply re-exports other smaller async crates (see the source).\nTo use tokio-based libraries with smol, apply the [``async-compat``](https://docs.rs/async-compat/latest/async_compat/) adapter to futures and I/O types.\nSee the [``smol-macros``](https://docs.rs/smol-macros/latest/smol_macros/) crate if you want a no proc-macro, fast compiling, easy-to-use async main and/or multi-threaded Executor setup out of the box.\n## Examples\nConnect to an HTTP website, make a GET request, and pipe the response to the standard output:\n```\n``use` `smol`::````{`io`,` net`,` `prelude`::```*``,` Unblock```}```;`\n``fn` `main`````(````)```` ``->` `io`::````Result``<``(``)``>``` ````{`\n  `smol`::``block_on`(`async `{`\n    `let` `mut` stream `=` `net`::```TcpStream`::``connect`(```\"`example.com:80`\"```)``.`await`?``;`\n    `let` req `=` ``b``\"`GET / HTTP/1.1`\\r``\\n`Host: example.com`\\r``\\n`Connection: close`\\r``\\n``\\r``\\n``\"```;`\n    stream`.``write_all``(`req`)``.`await`?``;`\n    `let` `mut` stdout `=` `Unblock`::``new`(``std`::```io`::``stdout`(``)``)``;`\n    `io`::``copy`(`stream`,` `&``mut` stdout`)``.`await`?``;`\n    `Ok``(``(``)``)`\n  `}``)`\n```}```\n`\n```\n\nThere's a lot more in the [examples](https://github.com/smol-rs/smol/tree/master/examples) directory.\n## Subcrates\n  * [async-channel](https://github.com/smol-rs/async-channel) - Multi-producer multi-consumer channels\n  * [async-executor](https://github.com/smol-rs/async-executor) - Composable async executors\n  * [async-fs](https://github.com/smol-rs/async-fs) - Async filesystem primitives\n  * [async-io](https://github.com/smol-rs/async-io) - Async adapter for I/O types, also timers\n  * [async-lock](https://github.com/smol-rs/async-lock) - Async locks (barrier, mutex, reader-writer lock, semaphore)\n  * [async-net](https://github.com/smol-rs/async-net) - Async networking primitives (TCP/UDP/Unix)\n  * [async-process](https://github.com/smol-rs/async-process) - Async interface for working with processes\n  * [async-task](https://github.com/smol-rs/async-task) - Task abstraction for building executors\n  * [blocking](https://github.com/smol-rs/blocking) - A thread pool for blocking I/O\n  * [futures-lite](https://github.com/smol-rs/futures-lite) - A lighter fork of [futures](https://github.com/rust-lang/futures-rs)\n  * [polling](https://github.com/smol-rs/polling) - Portable interface to epoll, kqueue, event ports, and wepoll\n\n\n## TLS certificate\nSome code examples are using TLS for authentication. The repository contains a self-signed certificate usable for testing, but it should **not** be used for real-world scenarios. Browsers and tools like curl will show this certificate as insecure.\nIn browsers, accept the security prompt or use ````curl````` -`k```` on the command line to bypass security warnings.\nThe certificate file was generated using [minica](https://github.com/jsha/minica) and [openssl](https://www.openssl.org/):\n```\n`minica --domains localhost -ip-addresses 127.0.0.1 -ca-cert certificate.pem\nopenssl pkcs12 -export -out identity.pfx -inkey localhost/key.pem -in localhost/cert.pem\n`\n```\n\nAnother useful tool for making certificates is [mkcert](https://github.com/FiloSottile/mkcert).\n## MSRV Policy\nThe Minimum Supported Rust Version (MSRV) of this crate is **1.63**. As a **tentative** policy, the MSRV will not advance past the [current Rust version provided by Debian Stable](https://packages.debian.org/stable/rust/rustc). At the time of writing, this version of Rust is _1.63_. However, the MSRV may be advanced further in the event of a major ecosystem shift or a security vulnerability.\n## License\nLicensed under either of\n  * Apache License, Version 2.0 ([LICENSE-APACHE](https://github.com/smol-rs/smol/blob/HEAD/LICENSE-APACHE) or <http://www.apache.org/licenses/LICENSE-2.0>)\n  * MIT license ([LICENSE-MIT](https://github.com/smol-rs/smol/blob/HEAD/LICENSE-MIT) or <http://opensource.org/licenses/MIT>)\n\n\nat your option.\n#### Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n#### Dependencies\n~4\u201312MB  ~157K SLoC\n  * [async-channel](https://lib.rs/crates/async-channel \"new\") 2.0\n  * [async-executor](https://lib.rs/crates/async-executor \"1.5.0\")\n  * [async-fs](https://lib.rs/crates/async-fs \"2.0.0\")\n  * [async-io](https://lib.rs/crates/async-io \"2.1.0\")\n  * [async-lock](https://lib.rs/crates/async-lock \"3.0.0\")\n  * [async-net](https://lib.rs/crates/async-net \"new\") 2.0\n  * [async-process](https://lib.rs/crates/async-process \"2.0.0\") not espidf\n  * [blocking](https://lib.rs/crates/blocking \"1.3.0\")\n  * [futures-lite](https://lib.rs/crates/futures-lite \"new\") 2.0\n\n\n  * dev  [anyhow](https://lib.rs/crates/anyhow \"1\")\n  * dev  [async-dup](https://lib.rs/crates/async-dup \"1\")\n  * dev  [async-h1](https://lib.rs/crates/async-h1 \"2\")\n  * dev  [async-native-tls](https://lib.rs/crates/async-native-tls \"new\") 0.5\n  * dev  [async-tungstenite](https://lib.rs/crates/async-tungstenite \"obsolete\") 0.27[+async-native-tls](https://lib.rs/crates/async-tungstenite/features#feature-async-native-tls)\n  * dev  [ctrlc](https://lib.rs/crates/ctrlc \"3\")\n  * dev  [doc-comment](https://lib.rs/crates/doc-comment \"0.3\")\n  * dev  [futures](https://lib.rs/crates/futures \"0.3\")\n  * dev  [http](https://lib.rs/crates/http \"new\") 1.1\n  * dev  [http-body-util](https://lib.rs/crates/http-body-util \"0.1.0\")\n  * dev  [http-types](https://lib.rs/crates/http-types \"new\") 2.0\n  * dev  [hyper](https://lib.rs/crates/hyper \"new\") 1.0[+client](https://lib.rs/crates/hyper/features#feature-client)[+http1](https://lib.rs/crates/hyper/features#feature-http1)[+server](https://lib.rs/crates/hyper/features#feature-server)\n  * dev  [inotify](https://lib.rs/crates/inotify \"new\") 0.11 linux\n  * dev  [rustix](https://lib.rs/crates/rustix \"obsolete\") 0.38 linux\n  * dev  [timerfd](https://lib.rs/crates/timerfd \"new\") 1.0 linux\n  * dev  [macro_rules_attribute](https://lib.rs/crates/macro_rules_attribute \"new\") 0.2\n  * dev  [native-tls](https://lib.rs/crates/native-tls \"0.2\")\n  * dev  [scraper](https://lib.rs/crates/scraper \"obsolete\") 0.20\n  * dev  [signal-hook](https://lib.rs/crates/signal-hook \"0.3\")\n  * dev  [smol-hyper](https://lib.rs/crates/smol-hyper \"0.1.0\")\n  * dev  [smol-macros](https://lib.rs/crates/smol-macros \"0.1.0\")\n  * dev  [surf](https://lib.rs/crates/surf \"obsolete\") 2.0[+h1-client](https://lib.rs/crates/surf/features#feature-h1-client)\n  * dev  [tempfile](https://lib.rs/crates/tempfile \"3\")\n  * dev  [tokio](https://lib.rs/crates/tokio \"1\")[+rt-multi-thread](https://lib.rs/crates/tokio/features#feature-rt-multi-thread)\n  * dev  [uds_windows](https://lib.rs/crates/uds_windows \"1\") win\n  * dev  [url](https://lib.rs/crates/url \"2\")\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  42 releases\u27e81\u27e9 (13 stable)\n2.0.2 |  Sep 7, 2024   \n---|---  \n2.0.0 |  Dec 31, 2023   \n1.3.0 |  Nov 29, 2022   \n1.2.5 |  Nov 28, 2020   \n0.0.1 |  Feb 3, 2020   \n#**822** in Asynchronous\u27e82\u27e9\nDownload history 113506/week @ 2025-03-07 104792/week @ 2025-03-14 118283/week @ 2025-03-21 109114/week @ 2025-03-28 118784/week @ 2025-04-04 97527/week @ 2025-04-11 99835/week @ 2025-04-18 122675/week @ 2025-04-25 103147/week @ 2025-05-02 109397/week @ 2025-05-09 115323/week @ 2025-05-16 112996/week @ 2025-05-23 108460/week @ 2025-05-30 102327/week @ 2025-06-06 105650/week @ 2025-06-13 101031/week @ 2025-06-20\n**436,311** downloads per month Used in **512** crates (342 directly)\u27e83\u27e9\n**Apache-2.0 OR MIT**\n275KB  57 lines\n# smol\n![Build\u27e84\u27e9](https://github.com/smol-rs/smol/actions) ![License\u27e85\u27e9](https://github.com/smol-rs/smol) ![Cargo\u27e86\u27e9](https://crates.io/crates/smol) ![Documentation\u27e87\u27e9](https://docs.rs/smol) ![Chat\u27e88\u27e9](https://matrix.to/#/#smol-rs:matrix.org)\n![kitty\u27e89\u27e9]\nA small and fast async runtime.\nThis crate simply re-exports other smaller async crates (see the source).\nTo use tokio-based libraries with smol, apply the ``async-compat``\u27e810\u27e9 adapter to futures and I/O types.\nSee the ``smol-macros``\u27e811\u27e9 crate if you want a no proc-macro, fast compiling, easy-to-use async main and/or multi-threaded Executor setup out of the box.\n## Examples\nConnect to an HTTP website, make a GET request, and pipe the response to the standard output:\n```\n``use` `smol`::````{`io`,` net`,` `prelude`::```*``,` Unblock```}```;`\n``fn` `main`````(````)```` ``->` `io`::````Result``<``(``)``>``` ````{`\n  `smol`::``block_on`(`async `{`\n    `let` `mut` stream `=` `net`::```TcpStream`::``connect`(```\"`example.com:80`\"```)``.`await`?``;`\n    `let` req `=` ``b``\"`GET / HTTP/1.1`\\r``\\n`Host: example.com`\\r``\\n`Connection: close`\\r``\\n``\\r``\\n``\"```;`\n    stream`.``write_all``(`req`)``.`await`?``;`\n    `let` `mut` stdout `=` `Unblock`::``new`(``std`::```io`::``stdout`(``)``)``;`\n    `io`::``copy`(`stream`,` `&``mut` stdout`)``.`await`?``;`\n    `Ok``(``(``)``)`\n  `}``)`\n```}```\n`\n```\n\nThere's a lot more in the examples\u27e812\u27e9 directory.\n## Subcrates\n  * async-channel\u27e813\u27e9 - Multi-producer multi-consumer channels\n  * async-executor\u27e814\u27e9 - Composable async executors\n  * async-fs\u27e815\u27e9 - Async filesystem primitives\n  * async-io\u27e816\u27e9 - Async adapter for I/O types, also timers\n  * async-lock\u27e817\u27e9 - Async locks (barrier, mutex, reader-writer lock, semaphore)\n  * async-net\u27e818\u27e9 - Async networking primitives (TCP/UDP/Unix)\n  * async-process\u27e819\u27e9 - Async interface for working with processes\n  * async-task\u27e820\u27e9 - Task abstraction for building executors\n  * blocking\u27e821\u27e9 - A thread pool for blocking I/O\n  * futures-lite\u27e822\u27e9 - A lighter fork of futures\u27e823\u27e9\n  * polling\u27e824\u27e9 - Portable interface to epoll, kqueue, event ports, and wepoll\n\n\n## TLS certificate\nSome code examples are using TLS for authentication. The repository contains a self-signed certificate usable for testing, but it should **not** be used for real-world scenarios. Browsers and tools like curl will show this certificate as insecure.\nIn browsers, accept the security prompt or use ````curl````` -`k```` on the command line to bypass security warnings.\nThe certificate file was generated using minica\u27e825\u27e9 and openssl\u27e826\u27e9:\n```\n`minica --domains localhost -ip-addresses 127.0.0.1 -ca-cert certificate.pem\nopenssl pkcs12 -export -out identity.pfx -inkey localhost/key.pem -in localhost/cert.pem\n`\n```\n\nAnother useful tool for making certificates is mkcert\u27e827\u27e9.\n## MSRV Policy\nThe Minimum Supported Rust Version (MSRV) of this crate is **1.63**. As a **tentative** policy, the MSRV will not advance past the current Rust version provided by Debian Stable\u27e828\u27e9. At the time of writing, this version of Rust is _1.63_. However, the MSRV may be advanced further in the event of a major ecosystem shift or a security vulnerability.\n## License\nLicensed under either of\n  * Apache License, Version 2.0 (LICENSE-APACHE\u27e829\u27e9 or <http://www.apache.org/licenses/LICENSE-2.0>)\n  * MIT license (LICENSE-MIT\u27e830\u27e9 or <http://opensource.org/licenses/MIT>)\n\n\nat your option.\n#### Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n#### Dependencies\n~4\u201312MB  ~157K SLoC\n  * async-channel\u27e831\u27e9 2.0\n  * async-executor\u27e832\u27e9\n  * async-fs\u27e833\u27e9\n  * async-io\u27e834\u27e9\n  * async-lock\u27e835\u27e9\n  * async-net\u27e836\u27e9 2.0\n  * async-process\u27e837\u27e9 not espidf\n  * blocking\u27e838\u27e9\n  * futures-lite\u27e839\u27e9 2.0\n\n\n  * dev  anyhow\u27e840\u27e9\n  * dev  async-dup\u27e841\u27e9\n  * dev  async-h1\u27e842\u27e9\n  * dev  async-native-tls\u27e843\u27e9 0.5\n  * dev  async-tungstenite\u27e844\u27e9 0.27+async-native-tls\u27e845\u27e9\n  * dev  ctrlc\u27e846\u27e9\n  * dev  doc-comment\u27e847\u27e9\n  * dev  futures\u27e848\u27e9\n  * dev  http\u27e849\u27e9 1.1\n  * dev  http-body-util\u27e850\u27e9\n  * dev  http-types\u27e851\u27e9 2.0\n  * dev  hyper\u27e852\u27e9 1.0+client\u27e853\u27e9+http1\u27e854\u27e9+server\u27e855\u27e9\n  * dev  inotify\u27e856\u27e9 0.11 linux\n  * dev  rustix\u27e857\u27e9 0.38 linux\n  * dev  timerfd\u27e858\u27e9 1.0 linux\n  * dev  macro_rules_attribute\u27e859\u27e9 0.2\n  * dev  native-tls\u27e860\u27e9\n  * dev  scraper\u27e861\u27e9 0.20\n  * dev  signal-hook\u27e862\u27e9\n  * dev  smol-hyper\u27e863\u27e9\n  * dev  smol-macros\u27e864\u27e9\n  * dev  surf\u27e865\u27e9 2.0+h1-client\u27e866\u27e9\n  * dev  tempfile\u27e867\u27e9\n  * dev  tokio\u27e868\u27e9+rt-multi-thread\u27e869\u27e9\n  * dev  uds_windows\u27e870\u27e9 win\n  * dev  url\u27e871\u27e9\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/smol/versions: 42 releases\n\u27e82\u27e9 https://lib.rs/asynchronous: Crates to help you deal with events independently of the main program flow, using techniques like futures, promises, waiting, or eventing. - Asynchronous\n\u27e83\u27e9 https://lib.rs/crates/smol/rev: **512** crates (342 directly)\n\u27e84\u27e9 https://img.gs/czjpqfbdkz/full/https://github.com/smol-rs/smol/actions/workflows/ci.yml/badge.svg: ![Build\n\u27e85\u27e9 https://img.shields.io/badge/license-Apache--2.0_OR_MIT-blue.svg: ![License\n\u27e86\u27e9 https://img.shields.io/crates/v/smol.svg: ![Cargo\n\u27e87\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/smol/badge.svg: ![Documentation\n\u27e88\u27e9 https://img.shields.io/matrix/smol-rs%3Amatrix.org: ![Chat\n\u27e89\u27e9 https://img.gs/czjpqfbdkz/100/https://raw.githubusercontent.com/smol-rs/smol/master/assets/images/logo_fullsize_transparent.png: kitty\n\u27e810\u27e9 https://docs.rs/async-compat/latest/async_compat/: ``async-compat``\n\u27e811\u27e9 https://docs.rs/smol-macros/latest/smol_macros/: ``smol-macros``\n\u27e812\u27e9 https://github.com/smol-rs/smol/tree/master/examples: examples\n\u27e813\u27e9 https://github.com/smol-rs/async-channel: async-channel\n\u27e814\u27e9 https://github.com/smol-rs/async-executor: async-executor\n\u27e815\u27e9 https://github.com/smol-rs/async-fs: async-fs\n\u27e816\u27e9 https://github.com/smol-rs/async-io: async-io\n\u27e817\u27e9 https://github.com/smol-rs/async-lock: async-lock\n\u27e818\u27e9 https://github.com/smol-rs/async-net: async-net\n\u27e819\u27e9 https://github.com/smol-rs/async-process: async-process\n\u27e820\u27e9 https://github.com/smol-rs/async-task: async-task\n\u27e821\u27e9 https://github.com/smol-rs/blocking: blocking\n\u27e822\u27e9 https://github.com/smol-rs/futures-lite: futures-lite\n\u27e823\u27e9 https://github.com/rust-lang/futures-rs: futures\n\u27e824\u27e9 https://github.com/smol-rs/polling: polling\n\u27e825\u27e9 https://github.com/jsha/minica: minica\n\u27e826\u27e9 https://www.openssl.org/: openssl\n\u27e827\u27e9 https://github.com/FiloSottile/mkcert: mkcert\n\u27e828\u27e9 https://packages.debian.org/stable/rust/rustc: current Rust version provided by Debian Stable\n\u27e829\u27e9 https://github.com/smol-rs/smol/blob/HEAD/LICENSE-APACHE: LICENSE-APACHE\n\u27e830\u27e9 https://github.com/smol-rs/smol/blob/HEAD/LICENSE-MIT: LICENSE-MIT\n\u27e831\u27e9 https://lib.rs/crates/async-channel: new - async-channel\n\u27e832\u27e9 https://lib.rs/crates/async-executor: 1.5.0 - async-executor\n\u27e833\u27e9 https://lib.rs/crates/async-fs: 2.0.0 - async-fs\n\u27e834\u27e9 https://lib.rs/crates/async-io: 2.1.0 - async-io\n\u27e835\u27e9 https://lib.rs/crates/async-lock: 3.0.0 - async-lock\n\u27e836\u27e9 https://lib.rs/crates/async-net: new - async-net\n\u27e837\u27e9 https://lib.rs/crates/async-process: 2.0.0 - async-process\n\u27e838\u27e9 https://lib.rs/crates/blocking: 1.3.0 - blocking\n\u27e839\u27e9 https://lib.rs/crates/futures-lite: new - futures-lite\n\u27e840\u27e9 https://lib.rs/crates/anyhow: 1 - anyhow\n\u27e841\u27e9 https://lib.rs/crates/async-dup: 1 - async-dup\n\u27e842\u27e9 https://lib.rs/crates/async-h1: 2 - async-h1\n\u27e843\u27e9 https://lib.rs/crates/async-native-tls: new - async-native-tls\n\u27e844\u27e9 https://lib.rs/crates/async-tungstenite: obsolete - async-tungstenite\n\u27e845\u27e9 https://lib.rs/crates/async-tungstenite/features#feature-async-native-tls: +async-native-tls\n\u27e846\u27e9 https://lib.rs/crates/ctrlc: 3 - ctrlc\n\u27e847\u27e9 https://lib.rs/crates/doc-comment: 0.3 - doc-comment\n\u27e848\u27e9 https://lib.rs/crates/futures: 0.3 - futures\n\u27e849\u27e9 https://lib.rs/crates/http: new - http\n\u27e850\u27e9 https://lib.rs/crates/http-body-util: 0.1.0 - http-body-util\n\u27e851\u27e9 https://lib.rs/crates/http-types: new - http-types\n\u27e852\u27e9 https://lib.rs/crates/hyper: new - hyper\n\u27e853\u27e9 https://lib.rs/crates/hyper/features#feature-client: +client\n\u27e854\u27e9 https://lib.rs/crates/hyper/features#feature-http1: +http1\n\u27e855\u27e9 https://lib.rs/crates/hyper/features#feature-server: +server\n\u27e856\u27e9 https://lib.rs/crates/inotify: new - inotify\n\u27e857\u27e9 https://lib.rs/crates/rustix: obsolete - rustix\n\u27e858\u27e9 https://lib.rs/crates/timerfd: new - timerfd\n\u27e859\u27e9 https://lib.rs/crates/macro_rules_attribute: new - macro_rules_attribute\n\u27e860\u27e9 https://lib.rs/crates/native-tls: 0.2 - native-tls\n\u27e861\u27e9 https://lib.rs/crates/scraper: obsolete - scraper\n\u27e862\u27e9 https://lib.rs/crates/signal-hook: 0.3 - signal-hook\n\u27e863\u27e9 https://lib.rs/crates/smol-hyper: 0.1.0 - smol-hyper\n\u27e864\u27e9 https://lib.rs/crates/smol-macros: 0.1.0 - smol-macros\n\u27e865\u27e9 https://lib.rs/crates/surf: obsolete - surf\n\u27e866\u27e9 https://lib.rs/crates/surf/features#feature-h1-client: +h1-client\n\u27e867\u27e9 https://lib.rs/crates/tempfile: 3 - tempfile\n\u27e868\u27e9 https://lib.rs/crates/tokio: 1 - tokio\n\u27e869\u27e9 https://lib.rs/crates/tokio/features#feature-rt-multi-thread: +rt-multi-thread\n\u27e870\u27e9 https://lib.rs/crates/uds_windows: 1 - uds_windows\n\u27e871\u27e9 https://lib.rs/crates/url: 2 - url\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 8577,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "112303.811346"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.14",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pin_project_lite",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.14\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libpin_project_lite-549961073d782a96.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#atomic-waker@1.1.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\atomic-waker-1.1.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "atomic_waker",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\atomic-waker-1.1.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libatomic_waker-51a570a3292c2eef.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking@2.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking-2.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking-2.2.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libparking-6596594e2fa06753.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-io@0.3.30",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-io-0.3.30\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_io",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-io-0.3.30\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libfutures_io-fcac8efe115eb96e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.30",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-core-0.3.30\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-core-0.3.30\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libfutures_core-309bea0d94a1cccb.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fastrand@2.1.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fastrand-2.1.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fastrand",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fastrand-2.1.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libfastrand-31c0c8f5e504720f.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#async-task@4.7.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-task-4.7.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "async_task",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-task-4.7.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libasync_task-c0d5a46f5a425ddf.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.6.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.6.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.6.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libbitflags-53e6b585806407ab.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.20",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.20\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.20\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\crossbeam-utils-8ecd7c457390fab2\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\crossbeam-utils-8ecd7c457390fab2\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#piper@0.2.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\piper-0.2.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "piper",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\piper-0.2.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "futures-io",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libpiper-e078b83bfa123ed0.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.20",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\crossbeam-utils-fbd7776a98d63dc5\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustix@0.38.36",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustix-0.38.36\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustix-0.38.36\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "event",
                "fs",
                "libc-extra-traits",
                "net",
                "pipe",
                "process",
                "std",
                "time",
                "use-libc-auxv"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\rustix-029f845c0a3f5f2f\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\rustix-029f845c0a3f5f2f\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing-core@0.1.32",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-core-0.1.32\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tracing_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-core-0.1.32\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libtracing_core-5a8a8513457cdfe7.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.3.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libautocfg-e2a9d558a9c0d2ca.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libautocfg-e2a9d558a9c0d2ca.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustix@0.38.36",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "static_assertions",
                "libc"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\rustix-3798a75d9c0d66c7\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.40",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-0.1.40\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tracing",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-0.1.40\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libtracing-20bf68121aeca6a9.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\slab-d30f71e64520855e\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\slab-d30f71e64520855e\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\slab-a3abec3b44159ee0\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "slab",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libslab-c095b8d080bac781.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.20",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.20\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_utils",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.20\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libcrossbeam_utils-cd59948f6448795b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-lite@2.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-lite-2.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_lite",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-lite-2.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "fastrand",
                "futures-io",
                "parking",
                "race",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libfutures_lite-27dfd0d9c99f9a23.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#concurrent-queue@2.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\concurrent-queue-2.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "concurrent_queue",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\concurrent-queue-2.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libconcurrent_queue-ca383f01fdb2e9f6.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#async-executor@1.13.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-executor-1.13.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "async_executor",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-executor-1.13.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libasync_executor-55cf6296b55a8f42.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#event-listener@5.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\event-listener-5.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "event_listener",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\event-listener-5.3.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "parking",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libevent_listener-24ac9e6b7992062e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#event-listener-strategy@0.5.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\event-listener-strategy-0.5.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "event_listener_strategy",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\event-listener-strategy-0.5.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libevent_listener_strategy-a41b5dd8fbb5a97b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#async-channel@2.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-channel-2.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "async_channel",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-channel-2.3.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libasync_channel-9580b31eb8f19f34.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#blocking@1.6.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\blocking-1.6.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "blocking",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\blocking-1.6.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libblocking-516f80a4714527a0.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#async-lock@3.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-lock-3.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "async_lock",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-lock-3.4.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libasync_lock-1401082d9f074e51.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.52.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_NetworkManagement",
                "Win32_NetworkManagement_IpHelper",
                "Win32_Networking",
                "Win32_Networking_WinSock",
                "Win32_System",
                "Win32_System_Diagnostics",
                "Win32_System_Diagnostics_Debug",
                "Win32_System_Threading",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libwindows_sys-268142b359d20690.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#async-fs@2.1.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-fs-2.1.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "async_fs",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-fs-2.1.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libasync_fs-e9ba2765b1d9d072.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#errno@0.3.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\errno-0.3.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "errno",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\errno-0.3.9\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\liberrno-f985a32907d12aa9.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustix@0.38.36",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustix-0.38.36\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rustix",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustix-0.38.36\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "event",
                "fs",
                "libc-extra-traits",
                "net",
                "pipe",
                "process",
                "std",
                "time",
                "use-libc-auxv"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\librustix-aee60b8ed5485d78.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.59.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Wdk",
                "Wdk_Foundation",
                "Wdk_Storage",
                "Wdk_Storage_FileSystem",
                "Win32",
                "Win32_Foundation",
                "Win32_Networking",
                "Win32_Networking_WinSock",
                "Win32_Security",
                "Win32_Security_Authentication",
                "Win32_Security_Authentication_Identity",
                "Win32_Security_Credentials",
                "Win32_Security_Cryptography",
                "Win32_Storage",
                "Win32_Storage_FileSystem",
                "Win32_System",
                "Win32_System_Console",
                "Win32_System_IO",
                "Win32_System_LibraryLoader",
                "Win32_System_Memory",
                "Win32_System_Threading",
                "Win32_System_WindowsProgramming",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libwindows_sys-618503650558d65e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#async-process@2.2.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-process-2.2.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "async_process",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-process-2.2.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libasync_process-41ace311dcd5abca.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#polling@3.7.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\polling-3.7.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "polling",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\polling-3.7.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libpolling-c67431ad0f195b05.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#async-io@2.3.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-io-2.3.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "async_io",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-io-2.3.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libasync_io-d748ccebbe4ba8a2.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#async-net@2.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-net-2.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "async_net",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-net-2.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libasync_net-589920eb9ddb786c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpud6n57i7/smol-2.0.2#smol@2.0.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smol",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libsmol-6f9cc7007cdabde2.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.20",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.20\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.20\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\crossbeam-utils-8ecd7c457390fab2\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\crossbeam-utils-8ecd7c457390fab2\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.20",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\crossbeam-utils-fbd7776a98d63dc5\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.14",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pin_project_lite",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.14\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libpin_project_lite-549961073d782a96.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking@2.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking-2.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking-2.2.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libparking-6596594e2fa06753.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.30",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-core-0.3.30\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-core-0.3.30\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libfutures_core-309bea0d94a1cccb.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fastrand@2.1.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fastrand-2.1.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fastrand",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fastrand-2.1.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libfastrand-31c0c8f5e504720f.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-io@0.3.30",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-io-0.3.30\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_io",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-io-0.3.30\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libfutures_io-fcac8efe115eb96e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.3.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libautocfg-e2a9d558a9c0d2ca.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libautocfg-e2a9d558a9c0d2ca.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#atomic-waker@1.1.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\atomic-waker-1.1.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "atomic_waker",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\atomic-waker-1.1.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libatomic_waker-51a570a3292c2eef.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing-core@0.1.32",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-core-0.1.32\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tracing_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-core-0.1.32\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libtracing_core-5a8a8513457cdfe7.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#async-task@4.7.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-task-4.7.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "async_task",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-task-4.7.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libasync_task-c0d5a46f5a425ddf.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustix@0.38.36",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustix-0.38.36\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustix-0.38.36\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "event",
                "fs",
                "libc-extra-traits",
                "net",
                "pipe",
                "process",
                "std",
                "time",
                "use-libc-auxv"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\rustix-029f845c0a3f5f2f\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\rustix-029f845c0a3f5f2f\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.6.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.6.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.6.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libbitflags-53e6b585806407ab.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.20",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.20\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_utils",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.20\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libcrossbeam_utils-cd59948f6448795b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-lite@2.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-lite-2.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_lite",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-lite-2.3.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "fastrand",
                "futures-io",
                "parking",
                "race",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libfutures_lite-27dfd0d9c99f9a23.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\slab-d30f71e64520855e\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\slab-d30f71e64520855e\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#piper@0.2.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\piper-0.2.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "piper",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\piper-0.2.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "futures-io",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libpiper-e078b83bfa123ed0.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.40",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-0.1.40\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tracing",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-0.1.40\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libtracing-20bf68121aeca6a9.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustix@0.38.36",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "static_assertions",
                "libc"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\rustix-3798a75d9c0d66c7\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#concurrent-queue@2.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\concurrent-queue-2.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "concurrent_queue",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\concurrent-queue-2.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libconcurrent_queue-ca383f01fdb2e9f6.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\build\\slab-a3abec3b44159ee0\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#event-listener@5.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\event-listener-5.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "event_listener",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\event-listener-5.3.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "parking",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libevent_listener-24ac9e6b7992062e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "slab",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libslab-c095b8d080bac781.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#event-listener-strategy@0.5.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\event-listener-strategy-0.5.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "event_listener_strategy",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\event-listener-strategy-0.5.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libevent_listener_strategy-a41b5dd8fbb5a97b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.52.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_NetworkManagement",
                "Win32_NetworkManagement_IpHelper",
                "Win32_Networking",
                "Win32_Networking_WinSock",
                "Win32_System",
                "Win32_System_Diagnostics",
                "Win32_System_Diagnostics_Debug",
                "Win32_System_Threading",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libwindows_sys-268142b359d20690.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.59.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Wdk",
                "Wdk_Foundation",
                "Wdk_Storage",
                "Wdk_Storage_FileSystem",
                "Win32",
                "Win32_Foundation",
                "Win32_Networking",
                "Win32_Networking_WinSock",
                "Win32_Security",
                "Win32_Security_Authentication",
                "Win32_Security_Authentication_Identity",
                "Win32_Security_Credentials",
                "Win32_Security_Cryptography",
                "Win32_Storage",
                "Win32_Storage_FileSystem",
                "Win32_System",
                "Win32_System_Console",
                "Win32_System_IO",
                "Win32_System_LibraryLoader",
                "Win32_System_Memory",
                "Win32_System_Threading",
                "Win32_System_WindowsProgramming",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libwindows_sys-618503650558d65e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#async-executor@1.13.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-executor-1.13.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "async_executor",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-executor-1.13.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libasync_executor-55cf6296b55a8f42.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#async-channel@2.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-channel-2.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "async_channel",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-channel-2.3.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libasync_channel-9580b31eb8f19f34.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#async-lock@3.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-lock-3.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "async_lock",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-lock-3.4.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libasync_lock-1401082d9f074e51.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#errno@0.3.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\errno-0.3.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "errno",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\errno-0.3.9\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\liberrno-f985a32907d12aa9.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#polling@3.7.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\polling-3.7.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "polling",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\polling-3.7.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libpolling-c67431ad0f195b05.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#blocking@1.6.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\blocking-1.6.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "blocking",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\blocking-1.6.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libblocking-516f80a4714527a0.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustix@0.38.36",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustix-0.38.36\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rustix",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustix-0.38.36\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "event",
                "fs",
                "libc-extra-traits",
                "net",
                "pipe",
                "process",
                "std",
                "time",
                "use-libc-auxv"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\librustix-aee60b8ed5485d78.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#async-io@2.3.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-io-2.3.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "async_io",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-io-2.3.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libasync_io-d748ccebbe4ba8a2.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#async-process@2.2.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-process-2.2.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "async_process",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-process-2.2.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libasync_process-41ace311dcd5abca.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#async-fs@2.1.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-fs-2.1.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "async_fs",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-fs-2.1.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libasync_fs-e9ba2765b1d9d072.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#async-net@2.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-net-2.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "async_net",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-net-2.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libasync_net-589920eb9ddb786c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpud6n57i7/smol-2.0.2#smol@2.0.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smol",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\spawn.rs:48:27\n   |\n48 |                     .name(format!(\"smol-{}\", n))\n   |                           ^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n   = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n   |\n48 -                     .name(format!(\"smol-{}\", n))\n48 +                     .name(format!(\"smol-{n}\"))\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::uninlined_format_args)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1593,
                        "byte_start": 1593,
                        "column_end": 42,
                        "column_start": 42,
                        "expansion": null,
                        "file_name": "src\\spawn.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 48,
                        "line_start": 48,
                        "suggested_replacement": "n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 42,
                            "text": "                    .name(format!(\"smol-{}\", n))"
                          }
                        ]
                      },
                      {
                        "byte_end": 1598,
                        "byte_start": 1595,
                        "column_end": 47,
                        "column_start": 44,
                        "expansion": null,
                        "file_name": "src\\spawn.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 48,
                        "line_start": 48,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 44,
                            "text": "                    .name(format!(\"smol-{}\", n))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1599,
                    "byte_start": 1578,
                    "column_end": 48,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\spawn.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 48,
                    "line_start": 48,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 27,
                        "text": "                    .name(format!(\"smol-{}\", n))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpud6n57i7/smol-2.0.2#smol@2.0.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smol",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpud6n57i7\\smol-2.0.2\\target\\debug\\deps\\libsmol-4bf65bb3276b6329.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 301
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": true,
              "count": 3,
              "list": [
                {
                  "advisory": {
                    "id": "RUSTSEC-2024-0421",
                    "package": "idna",
                    "title": "`idna` accepts Punycode labels that do not produce any non-ASCII when decoded",
                    "description": "`idna` 0.5.0 and earlier accepts Punycode labels that do not produce any non-ASCII output, which means that either ASCII labels or the empty root label can be masked such that they appear unequal without IDNA processing or when processed with a different implementation and equal when processed with `idna` 0.5.0 or earlier.\n\nConcretely, `example.org` and `xn--example-.org` become equal after processing by `idna` 0.5.0 or earlier. Also, `example.org.xn--` and `example.org.` become equal after processing by `idna` 0.5.0 or earlier.\n\nIn applications using `idna` (but not in `idna` itself) this may be able to lead to privilege escalation when host name comparison is part of a privilege check and the behavior is combined with a client that resolves domains with such labels instead of treating them as errors that preclude DNS resolution / URL fetching and with the attacker managing to introduce a DNS entry (and TLS certificate) for an `xn--`-masked name that turns into the name of the target when processed by `idna` 0.5.0 or earlier.\n\n## Remedy\n\nUpgrade to `idna` 1.0.3 or later, if depending on `idna` directly, or to `url` 2.5.4 or later, if depending on `idna` via `url`. (This issue was fixed in `idna` 1.0.0, but versions earlier than 1.0.3 are not recommended for other reasons.)\n\nWhen upgrading, please take a moment to read about [alternative Unicode back ends for `idna`](https://docs.rs/crate/idna_adapter/latest).\n\nIf you are using Rust earlier than 1.81 in combination with SQLx 0.8.2 or earlier, please also read an [issue](https://github.com/servo/rust-url/issues/992) about combining them with `url` 2.5.4 and `idna` 1.0.3.\n\n## Additional information\n\nThis issue resulted from `idna` 0.5.0 and earlier implementing the UTS 46 specification literally on this point and the specification having this bug. The specification bug has been fixed in [revision 33 of UTS 46](https://www.unicode.org/reports/tr46/tr46-33.html#Modifications).\n\n## Acknowledgements\n\nThanks to kageshiron for recognizing the security implications of this behavior.",
                    "date": "2024-12-09",
                    "aliases": [
                      "CVE-2024-12224"
                    ],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "privilege-escalation"
                    ],
                    "keywords": [
                      "idna",
                      "punycode",
                      "same-origin",
                      "domain-name"
                    ],
                    "cvss": null,
                    "informational": null,
                    "references": [],
                    "source": null,
                    "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1887898",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=1.0.0"
                    ],
                    "unaffected": []
                  },
                  "affected": null,
                  "package": {
                    "name": "idna",
                    "version": "0.5.0",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "634d9b1461af396cad843f47fdba5597a4f9e6ddd4bfb6ff5d85028c25cb12f6",
                    "dependencies": [
                      {
                        "name": "unicode-bidi",
                        "version": "0.3.15",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "unicode-normalization",
                        "version": "0.1.23",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  }
                },
                {
                  "advisory": {
                    "id": "RUSTSEC-2025-0004",
                    "package": "openssl",
                    "title": "ssl::select_next_proto use after free",
                    "description": "In `openssl` versions before `0.10.70`, `ssl::select_next_proto` can return a slice pointing into the `server` argument's buffer but with a lifetime bound to the `client` argument. In situations where the `server` buffer's lifetime is shorter than the `client` buffer's, this can cause a use after free. This could cause the server to crash or to return arbitrary memory contents to the client.\n\n`openssl` 0.10.70 fixes the signature of `ssl::select_next_proto` to properly constrain the output buffer's lifetime to that of both input buffers.\n\nIn standard usage of `ssl::select_next_proto` in the callback passed to `SslContextBuilder::set_alpn_select_callback`, code is only affected if the `server` buffer is constructed *within* the callback. For example:\n\nNot vulnerable - the server buffer has a `'static` lifetime:\n```rust\nbuilder.set_alpn_select_callback(|_, client_protos| {\n    ssl::select_next_proto(b\"\\x02h2\", client_protos).ok_or_else(AlpnError::NOACK)\n});\n```\n\nNot vulnerable - the server buffer outlives the handshake:\n```rust\nlet server_protos = b\"\\x02h2\".to_vec();\nbuilder.set_alpn_select_callback(|_, client_protos| {\n    ssl::select_next_proto(&server_protos, client_protos).ok_or_else(AlpnError::NOACK)\n});\n```\n\nVulnerable - the server buffer is freed when the callback returns:\n```rust\nbuilder.set_alpn_select_callback(|_, client_protos| {\n    let server_protos = b\"\\x02h2\".to_vec();\n    ssl::select_next_proto(&server_protos, client_protos).ok_or_else(AlpnError::NOACK)\n});\n```",
                    "date": "2025-02-02",
                    "aliases": [
                      "GHSA-rpmj-rpgj-qmpm"
                    ],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "memory-exposure"
                    ],
                    "keywords": [
                      "ssl",
                      "tls",
                      "alpn"
                    ],
                    "cvss": null,
                    "informational": null,
                    "references": [
                      "https://github.com/sfackler/rust-openssl/pull/2360"
                    ],
                    "source": null,
                    "url": "https://github.com/sfackler/rust-openssl/security/advisories/GHSA-rpmj-rpgj-qmpm",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=0.10.70"
                    ],
                    "unaffected": []
                  },
                  "affected": {
                    "arch": [],
                    "os": [],
                    "functions": {
                      "openssl::ssl::select_next_proto": [
                        ">=0.10.0, <0.10.70"
                      ]
                    }
                  },
                  "package": {
                    "name": "openssl",
                    "version": "0.10.66",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "9529f4786b70a3e8c61e11179af17ab6188ad8d0ded78c5529441ed39d4bd9c1",
                    "dependencies": [
                      {
                        "name": "bitflags",
                        "version": "2.6.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "cfg-if",
                        "version": "1.0.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "foreign-types",
                        "version": "0.3.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.158",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "once_cell",
                        "version": "1.19.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "openssl-macros",
                        "version": "0.1.1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "openssl-sys",
                        "version": "0.9.103",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  }
                },
                {
                  "advisory": {
                    "id": "RUSTSEC-2025-0022",
                    "package": "openssl",
                    "title": "Use-After-Free in `Md::fetch` and `Cipher::fetch`",
                    "description": "When a `Some(...)` value was passed to the `properties` argument of either of these functions, a use-after-free would result.\n\nIn practice this would nearly always result in OpenSSL treating the properties as an empty string (due to `CString::drop`'s behavior).\n\nThe maintainers thank [quitbug](https://github.com/quitbug/) for reporting this vulnerability to us.",
                    "date": "2025-04-04",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "memory-corruption"
                    ],
                    "keywords": [],
                    "cvss": null,
                    "informational": null,
                    "references": [],
                    "source": null,
                    "url": "https://github.com/sfackler/rust-openssl/pull/2390",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=0.10.72"
                    ],
                    "unaffected": [
                      "<0.10.39"
                    ]
                  },
                  "affected": {
                    "arch": [],
                    "os": [],
                    "functions": {
                      "openssl::cipher::Cipher::fetch": [
                        ">=0.10.39, <0.10.72"
                      ],
                      "openssl::md::Md::fetch": [
                        ">=0.10.39, <0.10.72"
                      ]
                    }
                  },
                  "package": {
                    "name": "openssl",
                    "version": "0.10.66",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "9529f4786b70a3e8c61e11179af17ab6188ad8d0ded78c5529441ed39d4bd9c1",
                    "dependencies": [
                      {
                        "name": "bitflags",
                        "version": "2.6.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "cfg-if",
                        "version": "1.0.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "foreign-types",
                        "version": "0.3.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.158",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "once_cell",
                        "version": "1.19.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "openssl-macros",
                        "version": "0.1.1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "openssl-sys",
                        "version": "0.9.103",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  }
                }
              ]
            },
            "warnings": {
              "unmaintained": [
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "aes-soft",
                    "version": "0.6.4",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "be14c7498ea50828a38d0e24a765ed2effe92a705885b57d029cd67d45744072",
                    "dependencies": [
                      {
                        "name": "cipher",
                        "version": "0.2.5",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "opaque-debug",
                        "version": "0.3.1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2021-0060",
                    "package": "aes-soft",
                    "title": "`aes-soft` has been merged into the `aes` crate",
                    "description": "Please use the `aes` crate going forward. The new repository location is at:\n\n<https://github.com/RustCrypto/block-ciphers/tree/master/aes>\n\nAES-NI is now autodetected at runtime on `i686`/`x86-64` platforms.\nIf AES-NI is not present, the `aes` crate will fallback to a constant-time\nportable software implementation.\n\nTo force the use of a constant-time portable implementation on these platforms,\neven if AES-NI is available, use the new `force-soft` feature of the `aes`\ncrate to disable autodetection.",
                    "date": "2021-04-29",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/RustCrypto/block-ciphers/pull/200",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                },
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "aesni",
                    "version": "0.10.0",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "ea2e11f5e94c2f7d386164cc2aa1f97823fed6f259e486940a71c174dd01b0ce",
                    "dependencies": [
                      {
                        "name": "cipher",
                        "version": "0.2.5",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "opaque-debug",
                        "version": "0.3.1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2021-0059",
                    "package": "aesni",
                    "title": "`aesni` has been merged into the `aes` crate",
                    "description": "Please use the `aes` crate going forward. The new repository location is at:\n\n<https://github.com/RustCrypto/block-ciphers/tree/master/aes>\n\nAES-NI is now autodetected at runtime on `i686`/`x86-64` platforms.\nIf AES-NI is not present, the `aes` crate will fallback to a constant-time\nportable software implementation.\n\nTo prevent this fallback (and have absence of AES-NI result in an illegal\ninstruction crash instead), continue to pass the same RUSTFLAGS which were\npreviously required for the `aesni` crate to compile:\n\n```\nRUSTFLAGS=-Ctarget-feature=+aes,+ssse3\n```",
                    "date": "2021-04-29",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/RustCrypto/block-ciphers/pull/200",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                },
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "cpuid-bool",
                    "version": "0.2.0",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "dcb25d077389e53838a8158c8e99174c5a9d902dee4904320db714f3c653ffba",
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2021-0064",
                    "package": "cpuid-bool",
                    "title": "`cpuid-bool` has been renamed to `cpufeatures`",
                    "description": "Please use the `cpufeatures`` crate going forward:\n\n<https://github.com/RustCrypto/utils/tree/master/cpufeatures>\n\nThere will be no further releases of `cpuid-bool`.",
                    "date": "2021-05-06",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/RustCrypto/utils/pull/381",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                },
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "instant",
                    "version": "0.1.13",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "e0242819d153cba4b4b05a5a8f2a7e9bbf97b6055b2a002b395c96b5ff3c0222",
                    "dependencies": [
                      {
                        "name": "cfg-if",
                        "version": "1.0.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2024-0384",
                    "package": "instant",
                    "title": "`instant` is unmaintained",
                    "description": "This crate is no longer maintained, and the author recommends using the maintained [`web-time`] crate instead.\n\n[`web-time`]: https://crates.io/crates/web-time",
                    "date": "2024-09-01",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [
                      "https://crates.io/crates/instant/0.1.13",
                      "https://github.com/sebcrozet/instant/issues/52"
                    ],
                    "source": null,
                    "url": null,
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                },
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "paste",
                    "version": "1.0.15",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a",
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2024-0436",
                    "package": "paste",
                    "title": "paste - no longer maintained",
                    "description": "The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \nthat this project is not longer maintained as well as archived the repository",
                    "date": "2024-10-07",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/dtolnay/paste",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                },
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "stdweb",
                    "version": "0.4.20",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "d022496b16281348b52d0e30ae99e01a73d737b2f45d38fed4edf79f9325a1d5",
                    "dependencies": [
                      {
                        "name": "discard",
                        "version": "1.0.4",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "rustc_version",
                        "version": "0.2.3",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "stdweb-derive",
                        "version": "0.5.3",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "stdweb-internal-macros",
                        "version": "0.2.9",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "stdweb-internal-runtime",
                        "version": "0.1.5",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "wasm-bindgen",
                        "version": "0.2.93",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2020-0056",
                    "package": "stdweb",
                    "title": "stdweb is unmaintained",
                    "description": "The author of the `stdweb` crate is unresponsive.\n\nMaintained alternatives:\n\n- [`wasm-bindgen`](https://github.com/rustwasm/wasm-bindgen)\n- [`js-sys`](https://github.com/rustwasm/wasm-bindgen/tree/master/crates/js-sys)\n- [`web-sys`](https://github.com/rustwasm/wasm-bindgen/tree/master/crates/web-sys)",
                    "date": "2020-05-04",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/koute/stdweb/issues/403",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": [
                      ">0.4.20"
                    ]
                  }
                },
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "surf",
                    "version": "2.3.2",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "718b1ae6b50351982dedff021db0def601677f2120938b070eadb10ba4038dd7",
                    "dependencies": [
                      {
                        "name": "async-native-tls",
                        "version": "0.3.3",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "async-std",
                        "version": "1.13.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "async-trait",
                        "version": "0.1.82",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "cfg-if",
                        "version": "1.0.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "futures-util",
                        "version": "0.3.30",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "getrandom",
                        "version": "0.2.15",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "http-client",
                        "version": "6.5.3",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "http-types",
                        "version": "2.12.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "log",
                        "version": "0.4.22",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "mime_guess",
                        "version": "2.0.5",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "once_cell",
                        "version": "1.19.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "pin-project-lite",
                        "version": "0.2.14",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "serde",
                        "version": "1.0.210",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "serde_json",
                        "version": "1.0.128",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2025-0036",
                    "package": "surf",
                    "title": "surf is unmaintained",
                    "description": "The developer has indicated that the crate is unmaintained.\n\nThe last release is over three years old (from 2021), the crate depends on the\ndeprecated `async-std` crate and on a very old version of `rustls` for TLS\nsupport.\n\n## Possible alternatives\n\n- [reqwest](https://crates.io/crates/reqwest)\n- [ureq](https://crates.io/crates/ureq)",
                    "date": "2025-05-17",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [
                      "https://github.com/http-rs/surf/issues/352"
                    ],
                    "source": null,
                    "url": null,
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                }
              ],
              "unsound": [
                {
                  "kind": "unsound",
                  "package": {
                    "name": "lexical-core",
                    "version": "0.7.6",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "6607c62aa161d23d17a9072cc5da0be67cdfc89d3afb1e8d9c842bebc2525ffe",
                    "dependencies": [
                      {
                        "name": "arrayvec",
                        "version": "0.5.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "bitflags",
                        "version": "1.3.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "cfg-if",
                        "version": "1.0.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "ryu",
                        "version": "1.0.18",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "static_assertions",
                        "version": "1.1.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2023-0086",
                    "package": "lexical-core",
                    "title": "Multiple soundness issues",
                    "description": "`RUSTSEC-2024-0377` contains multiple soundness issues:\n\n 1. [Bytes::read() allows creating instances of types with invalid bit patterns](https://github.com/Alexhuszagh/rust-lexical/issues/102)\n 1. [BytesIter::read() advances iterators out of bounds](https://github.com/Alexhuszagh/rust-lexical/issues/101)\n 1. [The `BytesIter` trait has safety invariants but is public and not marked `unsafe`](https://github.com/Alexhuszagh/rust-lexical/issues/104)\n 1. [`write_float()` calls `MaybeUninit::assume_init()` on uninitialized data, which is is not allowed by the Rust abstract machine](https://github.com/Alexhuszagh/rust-lexical/issues/95)\n 1. [`radix()` calls `MaybeUninit::assume_init()` on uninitialized data, which is is not allowed by the Rust abstract machine](https://github.com/Alexhuszagh/rust-lexical/issues/126)\n\nVersion 1.0 fixes these issues, removes the vast majority of `unsafe` code, and also fixes some correctness issues.",
                    "date": "2023-09-03",
                    "aliases": [],
                    "related": [
                      "RUSTSEC-2023-0055"
                    ],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unsound",
                    "references": [
                      "https://github.com/Alexhuszagh/rust-lexical/issues/102",
                      "https://github.com/Alexhuszagh/rust-lexical/issues/101",
                      "https://github.com/Alexhuszagh/rust-lexical/issues/95",
                      "https://github.com/Alexhuszagh/rust-lexical/issues/104",
                      "https://github.com/Alexhuszagh/rust-lexical/issues/126"
                    ],
                    "source": null,
                    "url": null,
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [
                      ">=1.0.0"
                    ],
                    "unaffected": []
                  }
                },
                {
                  "kind": "unsound",
                  "package": {
                    "name": "tokio",
                    "version": "1.40.0",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "e2b070231665d27ad9ec9b8df639893f46727666c6767db40317fbe920a5d998",
                    "dependencies": [
                      {
                        "name": "backtrace",
                        "version": "0.3.73",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "pin-project-lite",
                        "version": "0.2.14",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2025-0023",
                    "package": "tokio",
                    "title": "Broadcast channel calls clone in parallel, but does not require `Sync`",
                    "description": "The broadcast channel internally calls `clone` on the stored value when\nreceiving it, and only requires `T:Send`. This means that using the broadcast\nchannel with values that are `Send` but not `Sync` can trigger unsoundness if\nthe `clone` implementation makes use of the value being `!Sync`.\n\nThank you to Austin Bonander for finding and reporting this issue.",
                    "date": "2025-04-07",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "memory-corruption"
                    ],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unsound",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/tokio-rs/tokio/pull/7232",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [
                      ">=1.38.2, <1.39.0",
                      ">=1.42.1, <1.43.0",
                      ">=1.43.1, <1.44.0",
                      ">=1.44.2"
                    ],
                    "unaffected": [
                      "<0.2.5"
                    ]
                  }
                }
              ],
              "yanked": [
                {
                  "kind": "yanked",
                  "package": {
                    "name": "futures-util",
                    "version": "0.3.30",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48",
                    "dependencies": [
                      {
                        "name": "futures-channel",
                        "version": "0.3.30",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "futures-core",
                        "version": "0.3.30",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "futures-io",
                        "version": "0.3.30",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "futures-macro",
                        "version": "0.3.30",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "futures-sink",
                        "version": "0.3.30",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "futures-task",
                        "version": "0.3.30",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "memchr",
                        "version": "2.7.4",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "pin-project-lite",
                        "version": "0.2.14",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "pin-utils",
                        "version": "0.1.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "slab",
                        "version": "0.4.9",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": null,
                  "affected": null,
                  "versions": null
                }
              ]
            }
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "smol",
          "version": "2.0.2",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/smol/latest/smol/all.html \"show sidebar\")\n# Crate smolCopy item path\n[Settings](https://docs.rs/smol/latest/settings.html)\n[Help](https://docs.rs/smol/latest/help.html)\nSummary[Source](https://docs.rs/smol/latest/src/smol/lib.rs.html#1-65)\nExpand description\nA small and fast async runtime.\nThis crate simply re-exports other smaller async crates (see the source).\nTo use tokio-based libraries with smol, apply the [`async-compat`](https://docs.rs/async-compat/latest/async_compat/) adapter to futures and I/O types.\nSee the [`smol-macros`](https://docs.rs/smol-macros/latest/smol_macros/) crate if you want a no proc-macro, fast compiling, easy-to-use async main and/or multi-threaded Executor setup out of the box.\n## [\u00a7](https://docs.rs/smol/latest/smol/#examples)Examples\nConnect to an HTTP website, make a GET request, and pipe the response to the standard output:\n```\nuse smol::{io, net, prelude::*, Unblock};\nfn main() -> io::Result<()> {\n  smol::block_on(async {\n    let mut stream = net::TcpStream::connect(\"example.com:80\").await?;\n    let req = b\"GET / HTTP/1.1\\r\\nHost: example.com\\r\\nConnection: close\\r\\n\\r\\n\";\n    stream.write_all(req).await?;\n    let mut stdout = Unblock::new(std::io::stdout());\n    io::copy(stream, &mut stdout).await?;\n    Ok(())\n  })\n}\n```\n\nThere\u2019s a lot more in the [examples](https://github.com/smol-rs/smol/tree/master/examples) directory.\n## Modules[\u00a7](https://docs.rs/smol/latest/smol/#modules)\n\n[channel](https://docs.rs/smol/latest/smol/channel/index.html \"mod smol::channel\")\n    An async multi-producer multi-consumer channel, where each message can be received by only one of all existing consumers.\n\n[fs](https://docs.rs/smol/latest/smol/fs/index.html \"mod smol::fs\")\n    Async filesystem primitives.\n\n[future](https://docs.rs/smol/latest/smol/future/index.html \"mod smol::future\")\n    Combinators for the [`Future`](https://docs.rs/smol/latest/smol/future/trait.Future.html \"trait smol::future::Future\") trait.\n\n[io](https://docs.rs/smol/latest/smol/io/index.html \"mod smol::io\")\n    Tools and combinators for I/O.\n\n[lock](https://docs.rs/smol/latest/smol/lock/index.html \"mod smol::lock\")\n    Async synchronization primitives.\n\n[net](https://docs.rs/smol/latest/smol/net/index.html \"mod smol::net\")\n    Async networking primitives for TCP/UDP/Unix communication.\n\n[prelude](https://docs.rs/smol/latest/smol/prelude/index.html \"mod smol::prelude\")\n    Traits [`Future`](https://docs.rs/smol/latest/smol/future/trait.Future.html \"trait smol::future::Future\"), [`Stream`](https://docs.rs/smol/latest/smol/prelude/trait.Stream.html \"trait smol::prelude::Stream\"), [`AsyncRead`](https://docs.rs/smol/latest/smol/io/trait.AsyncRead.html \"trait smol::io::AsyncRead\"), [`AsyncWrite`](https://docs.rs/smol/latest/smol/io/trait.AsyncWrite.html \"trait smol::io::AsyncWrite\"), [`AsyncBufRead`](https://docs.rs/smol/latest/smol/io/trait.AsyncBufRead.html \"trait smol::io::AsyncBufRead\"), [`AsyncSeek`](https://docs.rs/smol/latest/smol/io/trait.AsyncSeek.html \"trait smol::io::AsyncSeek\"), and their extensions.\n\n[process](https://docs.rs/smol/latest/smol/process/index.html \"mod smol::process\")\n    Async interface for working with processes.\n\n[stream](https://docs.rs/smol/latest/smol/stream/index.html \"mod smol::stream\")\n    Combinators for the [`Stream`](https://docs.rs/smol/latest/smol/prelude/trait.Stream.html \"trait smol::prelude::Stream\") trait.\n## Macros[\u00a7](https://docs.rs/smol/latest/smol/#macros)\n\n[pin](https://docs.rs/smol/latest/smol/macro.pin.html \"macro smol::pin\")\n    Pins a variable of type `T` on the stack and rebinds it as `Pin<&mut T>`.\n\n[ready](https://docs.rs/smol/latest/smol/macro.ready.html \"macro smol::ready\")\n    Unwraps `Poll<T>` or returns [`Pending`](https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html#variant.Pending \"variant core::task::poll::Poll::Pending\").\n## Structs[\u00a7](https://docs.rs/smol/latest/smol/#structs)\n\n[Async](https://docs.rs/smol/latest/smol/struct.Async.html \"struct smol::Async\")\n    Async adapter for I/O types.\n\n[Executor](https://docs.rs/smol/latest/smol/struct.Executor.html \"struct smol::Executor\")\n    An async executor.\n\n[LocalExecutor](https://docs.rs/smol/latest/smol/struct.LocalExecutor.html \"struct smol::LocalExecutor\")\n    A thread-local executor.\n\n[Task](https://docs.rs/smol/latest/smol/struct.Task.html \"struct smol::Task\")\n    A spawned task.\n\n[Timer](https://docs.rs/smol/latest/smol/struct.Timer.html \"struct smol::Timer\")\n    A future or stream that emits timed events.\n\n[Unblock](https://docs.rs/smol/latest/smol/struct.Unblock.html \"struct smol::Unblock\")\n    Runs blocking I/O on a thread pool.\n## Functions[\u00a7](https://docs.rs/smol/latest/smol/#functions)\n\n[block_on](https://docs.rs/smol/latest/smol/fn.block_on.html \"fn smol::block_on\")\n    Blocks the current thread on a future, processing I/O events when idle.\n\n[spawn](https://docs.rs/smol/latest/smol/fn.spawn.html \"fn smol::spawn\")\n    Spawns a task onto the global executor (single-threaded by default).\n\n[unblock](https://docs.rs/smol/latest/smol/fn.unblock.html \"fn smol::unblock\")\n    Runs blocking code on a thread pool.\n",
            "markdown_with_citations": "[](https://docs.rs/smol/latest/smol/all.html \"show sidebar\")\n# Crate smolCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA small and fast async runtime.\nThis crate simply re-exports other smaller async crates (see the source).\nTo use tokio-based libraries with smol, apply the `async-compat`\u27e84\u27e9 adapter to futures and I/O types.\nSee the `smol-macros`\u27e85\u27e9 crate if you want a no proc-macro, fast compiling, easy-to-use async main and/or multi-threaded Executor setup out of the box.\n## \u00a7\u27e86\u27e9Examples\nConnect to an HTTP website, make a GET request, and pipe the response to the standard output:\n```\nuse smol::{io, net, prelude::*, Unblock};\nfn main() -> io::Result<()> {\n  smol::block_on(async {\n    let mut stream = net::TcpStream::connect(\"example.com:80\").await?;\n    let req = b\"GET / HTTP/1.1\\r\\nHost: example.com\\r\\nConnection: close\\r\\n\\r\\n\";\n    stream.write_all(req).await?;\n    let mut stdout = Unblock::new(std::io::stdout());\n    io::copy(stream, &mut stdout).await?;\n    Ok(())\n  })\n}\n```\n\nThere\u2019s a lot more in the examples\u27e87\u27e9 directory.\n## Modules\u00a7\u27e88\u27e9\n\nchannel\u27e89\u27e9\n    An async multi-producer multi-consumer channel, where each message can be received by only one of all existing consumers.\n\nfs\u27e810\u27e9\n    Async filesystem primitives.\n\nfuture\u27e811\u27e9\n    Combinators for the `Future`\u27e812\u27e9 trait.\n\nio\u27e813\u27e9\n    Tools and combinators for I/O.\n\nlock\u27e814\u27e9\n    Async synchronization primitives.\n\nnet\u27e815\u27e9\n    Async networking primitives for TCP/UDP/Unix communication.\n\nprelude\u27e816\u27e9\n    Traits `Future`\u27e812\u27e9, `Stream`\u27e817\u27e9, `AsyncRead`\u27e818\u27e9, `AsyncWrite`\u27e819\u27e9, `AsyncBufRead`\u27e820\u27e9, `AsyncSeek`\u27e821\u27e9, and their extensions.\n\nprocess\u27e822\u27e9\n    Async interface for working with processes.\n\nstream\u27e823\u27e9\n    Combinators for the `Stream`\u27e817\u27e9 trait.\n## Macros\u00a7\u27e824\u27e9\n\npin\u27e825\u27e9\n    Pins a variable of type `T` on the stack and rebinds it as `Pin<&mut T>`.\n\nready\u27e826\u27e9\n    Unwraps `Poll<T>` or returns `Pending`\u27e827\u27e9.\n## Structs\u00a7\u27e828\u27e9\n\nAsync\u27e829\u27e9\n    Async adapter for I/O types.\n\nExecutor\u27e830\u27e9\n    An async executor.\n\nLocalExecutor\u27e831\u27e9\n    A thread-local executor.\n\nTask\u27e832\u27e9\n    A spawned task.\n\nTimer\u27e833\u27e9\n    A future or stream that emits timed events.\n\nUnblock\u27e834\u27e9\n    Runs blocking I/O on a thread pool.\n## Functions\u00a7\u27e835\u27e9\n\nblock_on\u27e836\u27e9\n    Blocks the current thread on a future, processing I/O events when idle.\n\nspawn\u27e837\u27e9\n    Spawns a task onto the global executor (single-threaded by default).\n\nunblock\u27e838\u27e9\n    Runs blocking code on a thread pool.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/smol/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/smol/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/smol/latest/src/smol/lib.rs.html#1-65: Source\n\u27e84\u27e9 https://docs.rs/async-compat/latest/async_compat/: `async-compat`\n\u27e85\u27e9 https://docs.rs/smol-macros/latest/smol_macros/: `smol-macros`\n\u27e86\u27e9 https://docs.rs/smol/latest/smol/#examples: \u00a7\n\u27e87\u27e9 https://github.com/smol-rs/smol/tree/master/examples: examples\n\u27e88\u27e9 https://docs.rs/smol/latest/smol/#modules: \u00a7\n\u27e89\u27e9 https://docs.rs/smol/latest/smol/channel/index.html: mod smol::channel - channel\n\u27e810\u27e9 https://docs.rs/smol/latest/smol/fs/index.html: mod smol::fs - fs\n\u27e811\u27e9 https://docs.rs/smol/latest/smol/future/index.html: mod smol::future - future\n\u27e812\u27e9 https://docs.rs/smol/latest/smol/future/trait.Future.html: trait smol::future::Future - `Future`\n\u27e813\u27e9 https://docs.rs/smol/latest/smol/io/index.html: mod smol::io - io\n\u27e814\u27e9 https://docs.rs/smol/latest/smol/lock/index.html: mod smol::lock - lock\n\u27e815\u27e9 https://docs.rs/smol/latest/smol/net/index.html: mod smol::net - net\n\u27e816\u27e9 https://docs.rs/smol/latest/smol/prelude/index.html: mod smol::prelude - prelude\n\u27e817\u27e9 https://docs.rs/smol/latest/smol/prelude/trait.Stream.html: trait smol::prelude::Stream - `Stream`\n\u27e818\u27e9 https://docs.rs/smol/latest/smol/io/trait.AsyncRead.html: trait smol::io::AsyncRead - `AsyncRead`\n\u27e819\u27e9 https://docs.rs/smol/latest/smol/io/trait.AsyncWrite.html: trait smol::io::AsyncWrite - `AsyncWrite`\n\u27e820\u27e9 https://docs.rs/smol/latest/smol/io/trait.AsyncBufRead.html: trait smol::io::AsyncBufRead - `AsyncBufRead`\n\u27e821\u27e9 https://docs.rs/smol/latest/smol/io/trait.AsyncSeek.html: trait smol::io::AsyncSeek - `AsyncSeek`\n\u27e822\u27e9 https://docs.rs/smol/latest/smol/process/index.html: mod smol::process - process\n\u27e823\u27e9 https://docs.rs/smol/latest/smol/stream/index.html: mod smol::stream - stream\n\u27e824\u27e9 https://docs.rs/smol/latest/smol/#macros: \u00a7\n\u27e825\u27e9 https://docs.rs/smol/latest/smol/macro.pin.html: macro smol::pin - pin\n\u27e826\u27e9 https://docs.rs/smol/latest/smol/macro.ready.html: macro smol::ready - ready\n\u27e827\u27e9 https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html#variant.Pending: variant core::task::poll::Poll::Pending - `Pending`\n\u27e828\u27e9 https://docs.rs/smol/latest/smol/#structs: \u00a7\n\u27e829\u27e9 https://docs.rs/smol/latest/smol/struct.Async.html: struct smol::Async - Async\n\u27e830\u27e9 https://docs.rs/smol/latest/smol/struct.Executor.html: struct smol::Executor - Executor\n\u27e831\u27e9 https://docs.rs/smol/latest/smol/struct.LocalExecutor.html: struct smol::LocalExecutor - LocalExecutor\n\u27e832\u27e9 https://docs.rs/smol/latest/smol/struct.Task.html: struct smol::Task - Task\n\u27e833\u27e9 https://docs.rs/smol/latest/smol/struct.Timer.html: struct smol::Timer - Timer\n\u27e834\u27e9 https://docs.rs/smol/latest/smol/struct.Unblock.html: struct smol::Unblock - Unblock\n\u27e835\u27e9 https://docs.rs/smol/latest/smol/#functions: \u00a7\n\u27e836\u27e9 https://docs.rs/smol/latest/smol/fn.block_on.html: fn smol::block_on - block_on\n\u27e837\u27e9 https://docs.rs/smol/latest/smol/fn.spawn.html: fn smol::spawn - spawn\n\u27e838\u27e9 https://docs.rs/smol/latest/smol/fn.unblock.html: fn smol::unblock - unblock\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "smol",
          "version": "2.0.2",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/smol/latest/smol/all.html \"show sidebar\")\n# Crate smolCopy item path\n[Settings](https://docs.rs/smol/latest/settings.html)\n[Help](https://docs.rs/smol/latest/help.html)\nSummary[Source](https://docs.rs/smol/latest/src/smol/lib.rs.html#1-65)\nExpand description\nA small and fast async runtime.\nThis crate simply re-exports other smaller async crates (see the source).\nTo use tokio-based libraries with smol, apply the [`async-compat`](https://docs.rs/async-compat/latest/async_compat/) adapter to futures and I/O types.\nSee the [`smol-macros`](https://docs.rs/smol-macros/latest/smol_macros/) crate if you want a no proc-macro, fast compiling, easy-to-use async main and/or multi-threaded Executor setup out of the box.\n## [\u00a7](https://docs.rs/smol/latest/smol/#examples)Examples\nConnect to an HTTP website, make a GET request, and pipe the response to the standard output:\n```\nuse smol::{io, net, prelude::*, Unblock};\nfn main() -> io::Result<()> {\n  smol::block_on(async {\n    let mut stream = net::TcpStream::connect(\"example.com:80\").await?;\n    let req = b\"GET / HTTP/1.1\\r\\nHost: example.com\\r\\nConnection: close\\r\\n\\r\\n\";\n    stream.write_all(req).await?;\n    let mut stdout = Unblock::new(std::io::stdout());\n    io::copy(stream, &mut stdout).await?;\n    Ok(())\n  })\n}\n```\n\nThere\u2019s a lot more in the [examples](https://github.com/smol-rs/smol/tree/master/examples) directory.\n## Modules[\u00a7](https://docs.rs/smol/latest/smol/#modules)\n\n[channel](https://docs.rs/smol/latest/smol/channel/index.html \"mod smol::channel\")\n    An async multi-producer multi-consumer channel, where each message can be received by only one of all existing consumers.\n\n[fs](https://docs.rs/smol/latest/smol/fs/index.html \"mod smol::fs\")\n    Async filesystem primitives.\n\n[future](https://docs.rs/smol/latest/smol/future/index.html \"mod smol::future\")\n    Combinators for the [`Future`](https://docs.rs/smol/latest/smol/future/trait.Future.html \"trait smol::future::Future\") trait.\n\n[io](https://docs.rs/smol/latest/smol/io/index.html \"mod smol::io\")\n    Tools and combinators for I/O.\n\n[lock](https://docs.rs/smol/latest/smol/lock/index.html \"mod smol::lock\")\n    Async synchronization primitives.\n\n[net](https://docs.rs/smol/latest/smol/net/index.html \"mod smol::net\")\n    Async networking primitives for TCP/UDP/Unix communication.\n\n[prelude](https://docs.rs/smol/latest/smol/prelude/index.html \"mod smol::prelude\")\n    Traits [`Future`](https://docs.rs/smol/latest/smol/future/trait.Future.html \"trait smol::future::Future\"), [`Stream`](https://docs.rs/smol/latest/smol/prelude/trait.Stream.html \"trait smol::prelude::Stream\"), [`AsyncRead`](https://docs.rs/smol/latest/smol/io/trait.AsyncRead.html \"trait smol::io::AsyncRead\"), [`AsyncWrite`](https://docs.rs/smol/latest/smol/io/trait.AsyncWrite.html \"trait smol::io::AsyncWrite\"), [`AsyncBufRead`](https://docs.rs/smol/latest/smol/io/trait.AsyncBufRead.html \"trait smol::io::AsyncBufRead\"), [`AsyncSeek`](https://docs.rs/smol/latest/smol/io/trait.AsyncSeek.html \"trait smol::io::AsyncSeek\"), and their extensions.\n\n[process](https://docs.rs/smol/latest/smol/process/index.html \"mod smol::process\")\n    Async interface for working with processes.\n\n[stream](https://docs.rs/smol/latest/smol/stream/index.html \"mod smol::stream\")\n    Combinators for the [`Stream`](https://docs.rs/smol/latest/smol/prelude/trait.Stream.html \"trait smol::prelude::Stream\") trait.\n## Macros[\u00a7](https://docs.rs/smol/latest/smol/#macros)\n\n[pin](https://docs.rs/smol/latest/smol/macro.pin.html \"macro smol::pin\")\n    Pins a variable of type `T` on the stack and rebinds it as `Pin<&mut T>`.\n\n[ready](https://docs.rs/smol/latest/smol/macro.ready.html \"macro smol::ready\")\n    Unwraps `Poll<T>` or returns [`Pending`](https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html#variant.Pending \"variant core::task::poll::Poll::Pending\").\n## Structs[\u00a7](https://docs.rs/smol/latest/smol/#structs)\n\n[Async](https://docs.rs/smol/latest/smol/struct.Async.html \"struct smol::Async\")\n    Async adapter for I/O types.\n\n[Executor](https://docs.rs/smol/latest/smol/struct.Executor.html \"struct smol::Executor\")\n    An async executor.\n\n[LocalExecutor](https://docs.rs/smol/latest/smol/struct.LocalExecutor.html \"struct smol::LocalExecutor\")\n    A thread-local executor.\n\n[Task](https://docs.rs/smol/latest/smol/struct.Task.html \"struct smol::Task\")\n    A spawned task.\n\n[Timer](https://docs.rs/smol/latest/smol/struct.Timer.html \"struct smol::Timer\")\n    A future or stream that emits timed events.\n\n[Unblock](https://docs.rs/smol/latest/smol/struct.Unblock.html \"struct smol::Unblock\")\n    Runs blocking I/O on a thread pool.\n## Functions[\u00a7](https://docs.rs/smol/latest/smol/#functions)\n\n[block_on](https://docs.rs/smol/latest/smol/fn.block_on.html \"fn smol::block_on\")\n    Blocks the current thread on a future, processing I/O events when idle.\n\n[spawn](https://docs.rs/smol/latest/smol/fn.spawn.html \"fn smol::spawn\")\n    Spawns a task onto the global executor (single-threaded by default).\n\n[unblock](https://docs.rs/smol/latest/smol/fn.unblock.html \"fn smol::unblock\")\n    Runs blocking code on a thread pool.\n",
            "markdown_with_citations": "[](https://docs.rs/smol/latest/smol/all.html \"show sidebar\")\n# Crate smolCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA small and fast async runtime.\nThis crate simply re-exports other smaller async crates (see the source).\nTo use tokio-based libraries with smol, apply the `async-compat`\u27e84\u27e9 adapter to futures and I/O types.\nSee the `smol-macros`\u27e85\u27e9 crate if you want a no proc-macro, fast compiling, easy-to-use async main and/or multi-threaded Executor setup out of the box.\n## \u00a7\u27e86\u27e9Examples\nConnect to an HTTP website, make a GET request, and pipe the response to the standard output:\n```\nuse smol::{io, net, prelude::*, Unblock};\nfn main() -> io::Result<()> {\n  smol::block_on(async {\n    let mut stream = net::TcpStream::connect(\"example.com:80\").await?;\n    let req = b\"GET / HTTP/1.1\\r\\nHost: example.com\\r\\nConnection: close\\r\\n\\r\\n\";\n    stream.write_all(req).await?;\n    let mut stdout = Unblock::new(std::io::stdout());\n    io::copy(stream, &mut stdout).await?;\n    Ok(())\n  })\n}\n```\n\nThere\u2019s a lot more in the examples\u27e87\u27e9 directory.\n## Modules\u00a7\u27e88\u27e9\n\nchannel\u27e89\u27e9\n    An async multi-producer multi-consumer channel, where each message can be received by only one of all existing consumers.\n\nfs\u27e810\u27e9\n    Async filesystem primitives.\n\nfuture\u27e811\u27e9\n    Combinators for the `Future`\u27e812\u27e9 trait.\n\nio\u27e813\u27e9\n    Tools and combinators for I/O.\n\nlock\u27e814\u27e9\n    Async synchronization primitives.\n\nnet\u27e815\u27e9\n    Async networking primitives for TCP/UDP/Unix communication.\n\nprelude\u27e816\u27e9\n    Traits `Future`\u27e812\u27e9, `Stream`\u27e817\u27e9, `AsyncRead`\u27e818\u27e9, `AsyncWrite`\u27e819\u27e9, `AsyncBufRead`\u27e820\u27e9, `AsyncSeek`\u27e821\u27e9, and their extensions.\n\nprocess\u27e822\u27e9\n    Async interface for working with processes.\n\nstream\u27e823\u27e9\n    Combinators for the `Stream`\u27e817\u27e9 trait.\n## Macros\u00a7\u27e824\u27e9\n\npin\u27e825\u27e9\n    Pins a variable of type `T` on the stack and rebinds it as `Pin<&mut T>`.\n\nready\u27e826\u27e9\n    Unwraps `Poll<T>` or returns `Pending`\u27e827\u27e9.\n## Structs\u00a7\u27e828\u27e9\n\nAsync\u27e829\u27e9\n    Async adapter for I/O types.\n\nExecutor\u27e830\u27e9\n    An async executor.\n\nLocalExecutor\u27e831\u27e9\n    A thread-local executor.\n\nTask\u27e832\u27e9\n    A spawned task.\n\nTimer\u27e833\u27e9\n    A future or stream that emits timed events.\n\nUnblock\u27e834\u27e9\n    Runs blocking I/O on a thread pool.\n## Functions\u00a7\u27e835\u27e9\n\nblock_on\u27e836\u27e9\n    Blocks the current thread on a future, processing I/O events when idle.\n\nspawn\u27e837\u27e9\n    Spawns a task onto the global executor (single-threaded by default).\n\nunblock\u27e838\u27e9\n    Runs blocking code on a thread pool.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/smol/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/smol/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/smol/latest/src/smol/lib.rs.html#1-65: Source\n\u27e84\u27e9 https://docs.rs/async-compat/latest/async_compat/: `async-compat`\n\u27e85\u27e9 https://docs.rs/smol-macros/latest/smol_macros/: `smol-macros`\n\u27e86\u27e9 https://docs.rs/smol/latest/smol/#examples: \u00a7\n\u27e87\u27e9 https://github.com/smol-rs/smol/tree/master/examples: examples\n\u27e88\u27e9 https://docs.rs/smol/latest/smol/#modules: \u00a7\n\u27e89\u27e9 https://docs.rs/smol/latest/smol/channel/index.html: mod smol::channel - channel\n\u27e810\u27e9 https://docs.rs/smol/latest/smol/fs/index.html: mod smol::fs - fs\n\u27e811\u27e9 https://docs.rs/smol/latest/smol/future/index.html: mod smol::future - future\n\u27e812\u27e9 https://docs.rs/smol/latest/smol/future/trait.Future.html: trait smol::future::Future - `Future`\n\u27e813\u27e9 https://docs.rs/smol/latest/smol/io/index.html: mod smol::io - io\n\u27e814\u27e9 https://docs.rs/smol/latest/smol/lock/index.html: mod smol::lock - lock\n\u27e815\u27e9 https://docs.rs/smol/latest/smol/net/index.html: mod smol::net - net\n\u27e816\u27e9 https://docs.rs/smol/latest/smol/prelude/index.html: mod smol::prelude - prelude\n\u27e817\u27e9 https://docs.rs/smol/latest/smol/prelude/trait.Stream.html: trait smol::prelude::Stream - `Stream`\n\u27e818\u27e9 https://docs.rs/smol/latest/smol/io/trait.AsyncRead.html: trait smol::io::AsyncRead - `AsyncRead`\n\u27e819\u27e9 https://docs.rs/smol/latest/smol/io/trait.AsyncWrite.html: trait smol::io::AsyncWrite - `AsyncWrite`\n\u27e820\u27e9 https://docs.rs/smol/latest/smol/io/trait.AsyncBufRead.html: trait smol::io::AsyncBufRead - `AsyncBufRead`\n\u27e821\u27e9 https://docs.rs/smol/latest/smol/io/trait.AsyncSeek.html: trait smol::io::AsyncSeek - `AsyncSeek`\n\u27e822\u27e9 https://docs.rs/smol/latest/smol/process/index.html: mod smol::process - process\n\u27e823\u27e9 https://docs.rs/smol/latest/smol/stream/index.html: mod smol::stream - stream\n\u27e824\u27e9 https://docs.rs/smol/latest/smol/#macros: \u00a7\n\u27e825\u27e9 https://docs.rs/smol/latest/smol/macro.pin.html: macro smol::pin - pin\n\u27e826\u27e9 https://docs.rs/smol/latest/smol/macro.ready.html: macro smol::ready - ready\n\u27e827\u27e9 https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html#variant.Pending: variant core::task::poll::Poll::Pending - `Pending`\n\u27e828\u27e9 https://docs.rs/smol/latest/smol/#structs: \u00a7\n\u27e829\u27e9 https://docs.rs/smol/latest/smol/struct.Async.html: struct smol::Async - Async\n\u27e830\u27e9 https://docs.rs/smol/latest/smol/struct.Executor.html: struct smol::Executor - Executor\n\u27e831\u27e9 https://docs.rs/smol/latest/smol/struct.LocalExecutor.html: struct smol::LocalExecutor - LocalExecutor\n\u27e832\u27e9 https://docs.rs/smol/latest/smol/struct.Task.html: struct smol::Task - Task\n\u27e833\u27e9 https://docs.rs/smol/latest/smol/struct.Timer.html: struct smol::Timer - Timer\n\u27e834\u27e9 https://docs.rs/smol/latest/smol/struct.Unblock.html: struct smol::Unblock - Unblock\n\u27e835\u27e9 https://docs.rs/smol/latest/smol/#functions: \u00a7\n\u27e836\u27e9 https://docs.rs/smol/latest/smol/fn.block_on.html: fn smol::block_on - block_on\n\u27e837\u27e9 https://docs.rs/smol/latest/smol/fn.spawn.html: fn smol::spawn - spawn\n\u27e838\u27e9 https://docs.rs/smol/latest/smol/fn.unblock.html: fn smol::unblock - unblock\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `smol` crate is a lightweight and fast async runtime for Rust, offering primitives for asynchronous I/O, networking, file system operations, synchronization, and process management. It includes utilities like `block_on` for running async code, `spawn` for task execution, and `Unblock` for handling blocking I/O on a thread pool. With support for multi-threaded and thread-local executors, it integrates seamlessly with other async libraries via adapters like `async-compat`.",
          "feature_summary": null,
          "use_case": "Networking",
          "score": 7.0,
          "factual_counterfactual": "### Pair 1: Async Runtime and Compatibility\n\u2705 Factual: The `smol` crate provides a small and fast async runtime, offering compatibility with `tokio`-based libraries through the `async-compat` adapter.  \n\u274c Counterfactual: The `smol` crate is incompatible with `tokio`-based libraries and cannot work with `async-compat` for adapting futures and I/O types.  \n\n---\n\n### Pair 2: Executor Design\n\u2705 Factual: The `smol::Executor` struct allows users to spawn tasks onto a multi-threaded global executor by default, enabling efficient async task execution.  \n\u274c Counterfactual: The `smol::Executor` struct only supports single-threaded execution and does not provide options for multi-threaded task spawning.  \n\n---\n\n### Pair 3: I/O Handling\n\u2705 Factual: The `smol::Unblock` struct enables running blocking I/O operations on a thread pool, ensuring non-blocking behavior for async tasks.  \n\u274c Counterfactual: The `smol::Unblock` struct directly performs blocking I/O operations on the main async runtime, potentially causing task starvation.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-ec2b18d8-cf0b9504-1751258512",
      "timestamp": "2025-06-30T04:41:52.759281+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]