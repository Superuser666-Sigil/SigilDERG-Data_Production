[
  {
    "execution_id": "exec-b310caed-01433f97-1751260593",
    "timestamp": "2025-06-30T05:16:33.757019+00:00",
    "sacred_chain": {
      "input_data": "form_urlencoded",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'form_urlencoded' -> 'form_urlencoded'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "form_urlencoded",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/form_urlencoded",
            "title": "form_urlencoded v1.2.1",
            "content": {
              "raw_markdown": "#  form_urlencoded v1.2.1\nParser and serializer for the application/x-www-form-urlencoded syntax, as used by HTML forms. \n  * [ Readme ](https://crates.io/crates/form_urlencoded)\n  * [ 5 Versions ](https://crates.io/crates/form_urlencoded/versions)\n  * [ Dependencies ](https://crates.io/crates/form_urlencoded/dependencies)\n  * [ Dependents ](https://crates.io/crates/form_urlencoded/reverse_dependencies)\n\n\n## Metadata\nover 1 year ago \nv1.51.0 \n[ MIT ](https://choosealicense.com/licenses/mit) OR [ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0)\n8.76 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add form_urlencoded\nOr add the following line to your Cargo.toml:\nform_urlencoded = \"1.2.1\"\n## Repository\n[ github.com/servo/rust-url ](https://github.com/servo/rust-url)\n## Owners\n[ Report crate ](https://crates.io/support?crate=form_urlencoded&inquire=crate-violation)\n### Stats Overview\n283,133,396 Downloads all time\n5 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  form_urlencoded v1.2.1\nParser and serializer for the application/x-www-form-urlencoded syntax, as used by HTML forms. \n  *  Readme \u27e81\u27e9\n  *  5 Versions \u27e82\u27e9\n  *  Dependencies \u27e83\u27e9\n  *  Dependents \u27e84\u27e9\n\n\n## Metadata\nover 1 year ago \nv1.51.0 \n MIT \u27e85\u27e9 OR  Apache-2.0 \u27e86\u27e9\n8.76 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add form_urlencoded\nOr add the following line to your Cargo.toml:\nform_urlencoded = \"1.2.1\"\n## Repository\n github.com/servo/rust-url \u27e87\u27e9\n## Owners\n Report crate \u27e88\u27e9\n### Stats Overview\n283,133,396 Downloads all time\n5 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/crates/form_urlencoded:  Readme \n\u27e82\u27e9 https://crates.io/crates/form_urlencoded/versions:  5 Versions \n\u27e83\u27e9 https://crates.io/crates/form_urlencoded/dependencies:  Dependencies \n\u27e84\u27e9 https://crates.io/crates/form_urlencoded/reverse_dependencies:  Dependents \n\u27e85\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e86\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e87\u27e9 https://github.com/servo/rust-url:  github.com/servo/rust-url \n\u27e88\u27e9 https://crates.io/support?crate=form_urlencoded&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1087,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "114383.6070856"
          },
          "docs_rs": {
            "url": "https://docs.rs/form_urlencoded",
            "title": "Crate form_urlencodedCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/form_urlencoded/latest/form_urlencoded/all.html \"show sidebar\")\n# Crate form_urlencodedCopy item path\n[Settings](https://docs.rs/form_urlencoded/latest/settings.html)\n[Help](https://docs.rs/form_urlencoded/latest/help.html)\nSummary[Source](https://docs.rs/form_urlencoded/latest/src/form_urlencoded/lib.rs.html#9-427)\nExpand description\nParser and serializer for the [`application/x-www-form-urlencoded` syntax](http://url.spec.whatwg.org/#application/x-www-form-urlencoded), as used by HTML forms.\nConverts between a string (such as an URL\u2019s query string) and a sequence of (name, value) pairs.\n## Structs[\u00a7](https://docs.rs/form_urlencoded/latest/form_urlencoded/#structs)\n\n[ByteSerialize](https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.ByteSerialize.html \"struct form_urlencoded::ByteSerialize\")\n    Return value of `byte_serialize()`.\n\n[Parse](https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.Parse.html \"struct form_urlencoded::Parse\")\n    The return type of `parse()`.\n\n[ParseIntoOwned](https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.ParseIntoOwned.html \"struct form_urlencoded::ParseIntoOwned\")\n    Like `Parse`, but yields pairs of `String` instead of pairs of `Cow<str>`.\n\n[Serializer](https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.Serializer.html \"struct form_urlencoded::Serializer\")\n    The [`application/x-www-form-urlencoded` serializer](https://url.spec.whatwg.org/#concept-urlencoded-serializer).\n## Traits[\u00a7](https://docs.rs/form_urlencoded/latest/form_urlencoded/#traits)\n\n[Target](https://docs.rs/form_urlencoded/latest/form_urlencoded/trait.Target.html \"trait form_urlencoded::Target\")\n\n## Functions[\u00a7](https://docs.rs/form_urlencoded/latest/form_urlencoded/#functions)\n\n[byte_serialize](https://docs.rs/form_urlencoded/latest/form_urlencoded/fn.byte_serialize.html \"fn form_urlencoded::byte_serialize\")\n    The [`application/x-www-form-urlencoded` byte serializer](https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer).\n\n[parse](https://docs.rs/form_urlencoded/latest/form_urlencoded/fn.parse.html \"fn form_urlencoded::parse\")\n    Convert a byte string in the `application/x-www-form-urlencoded` syntax into a iterator of (name, value) pairs.\n## Type Aliases[\u00a7](https://docs.rs/form_urlencoded/latest/form_urlencoded/#types)\n\n[EncodingOverride](https://docs.rs/form_urlencoded/latest/form_urlencoded/type.EncodingOverride.html \"type form_urlencoded::EncodingOverride\")\n\n",
              "markdown_with_citations": "[](https://docs.rs/form_urlencoded/latest/form_urlencoded/all.html \"show sidebar\")\n# Crate form_urlencodedCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nParser and serializer for the `application/x-www-form-urlencoded` syntax\u27e84\u27e9, as used by HTML forms.\nConverts between a string (such as an URL\u2019s query string) and a sequence of (name, value) pairs.\n## Structs\u00a7\u27e85\u27e9\n\nByteSerialize\u27e86\u27e9\n    Return value of `byte_serialize()`.\n\nParse\u27e87\u27e9\n    The return type of `parse()`.\n\nParseIntoOwned\u27e88\u27e9\n    Like `Parse`, but yields pairs of `String` instead of pairs of `Cow<str>`.\n\nSerializer\u27e89\u27e9\n    The `application/x-www-form-urlencoded` serializer\u27e810\u27e9.\n## Traits\u00a7\u27e811\u27e9\n\nTarget\u27e812\u27e9\n\n## Functions\u00a7\u27e813\u27e9\n\nbyte_serialize\u27e814\u27e9\n    The `application/x-www-form-urlencoded` byte serializer\u27e815\u27e9.\n\nparse\u27e816\u27e9\n    Convert a byte string in the `application/x-www-form-urlencoded` syntax into a iterator of (name, value) pairs.\n## Type Aliases\u00a7\u27e817\u27e9\n\nEncodingOverride\u27e818\u27e9\n\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/form_urlencoded/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/form_urlencoded/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/form_urlencoded/latest/src/form_urlencoded/lib.rs.html#9-427: Source\n\u27e84\u27e9 http://url.spec.whatwg.org/#application/x-www-form-urlencoded: `application/x-www-form-urlencoded` syntax\n\u27e85\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/#structs: \u00a7\n\u27e86\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.ByteSerialize.html: struct form_urlencoded::ByteSerialize - ByteSerialize\n\u27e87\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.Parse.html: struct form_urlencoded::Parse - Parse\n\u27e88\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.ParseIntoOwned.html: struct form_urlencoded::ParseIntoOwned - ParseIntoOwned\n\u27e89\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.Serializer.html: struct form_urlencoded::Serializer - Serializer\n\u27e810\u27e9 https://url.spec.whatwg.org/#concept-urlencoded-serializer: `application/x-www-form-urlencoded` serializer\n\u27e811\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/#traits: \u00a7\n\u27e812\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/trait.Target.html: trait form_urlencoded::Target - Target\n\u27e813\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/#functions: \u00a7\n\u27e814\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/fn.byte_serialize.html: fn form_urlencoded::byte_serialize - byte_serialize\n\u27e815\u27e9 https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer: `application/x-www-form-urlencoded` byte serializer\n\u27e816\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/fn.parse.html: fn form_urlencoded::parse - parse\n\u27e817\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/#types: \u00a7\n\u27e818\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/type.EncodingOverride.html: type form_urlencoded::EncodingOverride - EncodingOverride\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 2480,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "114384.4450359"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/form_urlencoded",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [5 stable releases](https://lib.rs/crates/form_urlencoded/versions)\n1.2.1 |  Nov 22, 2023   \n---|---  \n1.2.0 |  Jun 5, 2023   \n1.1.0 |  Sep 8, 2022   \n1.0.1 |  Feb 19, 2021   \n1.0.0 |  Jun 19, 2020   \n#**1168** in [Parser implementations](https://lib.rs/parser-implementations \"Parsers implemented for particular formats or languages.\")\nDownload history 2744229/week @ 2025-02-05 2617104/week @ 2025-02-12 3105293/week @ 2025-02-19 2919605/week @ 2025-02-26 3385428/week @ 2025-03-05 3313743/week @ 2025-03-12 4011271/week @ 2025-03-19 3243816/week @ 2025-03-26 3315981/week @ 2025-04-02 3295960/week @ 2025-04-09 2880691/week @ 2025-04-16 2987058/week @ 2025-04-23 2858002/week @ 2025-04-30 2979966/week @ 2025-05-07 3059195/week @ 2025-05-14 2360421/week @ 2025-05-21\n**11,801,954** downloads per month Used in [**33,877** crates (157 directly)](https://lib.rs/crates/form_urlencoded/rev)\n**MIT/Apache**\n28KB  588 lines\nParser and serializer for the [``application`/`x`-`www`-`form`-`urlencoded`` syntax](http://url.spec.whatwg.org/#application/x-www-form-urlencoded), as used by HTML forms.\nConverts between a string (such as an URL\u2019s query string) and a sequence of (name, value) pairs.\n# rust-url\n[![Build status](https://img.gs/czjpqfbdkz/full/https://github.com/servo/rust-url/workflows/CI/badge.svg)](https://github.com/servo/rust-url/actions?query=workflow%3ACI) [![Coverage](https://img.gs/czjpqfbdkz/full/https://codecov.io/gh/servo/rust-url/branch/master/graph/badge.svg)](https://codecov.io/gh/servo/rust-url) [![Chat](https://img.shields.io/badge/chat-%23rust--url:mozilla.org-%2346BC99?logo=Matrix)](https://matrix.to/#/#rust-url:mozilla.org) [![License: MIT](https://img.shields.io/badge/License-MIT-blue.svg)](https://github.com/servo/rust-url/blob/adb866009ea37c4c938a204323db883e0be31582/LICENSE-MIT) [![License: Apache 2.0](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://github.com/servo/rust-url/blob/adb866009ea37c4c938a204323db883e0be31582/LICENSE-APACHE)\nURL library for Rust, based on the [URL Standard](https://url.spec.whatwg.org/).\n[Documentation](https://docs.rs/url)\nPlease see [UPGRADING.md](https://github.com/servo/rust-url/blob/main/UPGRADING.md) if you are upgrading from a previous version.\n## Alternative Unicode back ends\n``url`` depends on the ``idna`` crate. By default, ``idna`` uses [ICU4X](https://github.com/unicode-org/icu4x/) as its Unicode back end. If you wish to opt for different tradeoffs between correctness, run-time performance, binary size, compile time, and MSRV, please see the [README of the latest version of the ``idna_adapter`` crate](https://docs.rs/crate/idna_adapter/latest) for how to opt into a different Unicode back end.\n#### Dependencies\n  * [percent-encoding](https://lib.rs/crates/percent-encoding \"2.3.0\")\n\n\n#### [Other features](https://lib.rs/crates/form_urlencoded/features)\n  * [alloc](https://lib.rs/crates/form_urlencoded/features#feature-alloc)\n  * [std](https://lib.rs/crates/form_urlencoded/features#feature-std)\n\n\n",
              "markdown_with_citations": "###  5 stable releases\u27e81\u27e9\n1.2.1 |  Nov 22, 2023   \n---|---  \n1.2.0 |  Jun 5, 2023   \n1.1.0 |  Sep 8, 2022   \n1.0.1 |  Feb 19, 2021   \n1.0.0 |  Jun 19, 2020   \n#**1168** in Parser implementations\u27e82\u27e9\nDownload history 2744229/week @ 2025-02-05 2617104/week @ 2025-02-12 3105293/week @ 2025-02-19 2919605/week @ 2025-02-26 3385428/week @ 2025-03-05 3313743/week @ 2025-03-12 4011271/week @ 2025-03-19 3243816/week @ 2025-03-26 3315981/week @ 2025-04-02 3295960/week @ 2025-04-09 2880691/week @ 2025-04-16 2987058/week @ 2025-04-23 2858002/week @ 2025-04-30 2979966/week @ 2025-05-07 3059195/week @ 2025-05-14 2360421/week @ 2025-05-21\n**11,801,954** downloads per month Used in **33,877** crates (157 directly)\u27e83\u27e9\n**MIT/Apache**\n28KB  588 lines\nParser and serializer for the ``application`/`x`-`www`-`form`-`urlencoded`` syntax\u27e84\u27e9, as used by HTML forms.\nConverts between a string (such as an URL\u2019s query string) and a sequence of (name, value) pairs.\n# rust-url\n![Build status\u27e85\u27e9](https://github.com/servo/rust-url/actions?query=workflow%3ACI) ![Coverage\u27e86\u27e9](https://codecov.io/gh/servo/rust-url) ![Chat\u27e87\u27e9](https://matrix.to/#/#rust-url:mozilla.org) ![License: MIT\u27e88\u27e9](https://github.com/servo/rust-url/blob/adb866009ea37c4c938a204323db883e0be31582/LICENSE-MIT) ![License: Apache 2.0\u27e89\u27e9](https://github.com/servo/rust-url/blob/adb866009ea37c4c938a204323db883e0be31582/LICENSE-APACHE)\nURL library for Rust, based on the URL Standard\u27e810\u27e9.\nDocumentation\u27e811\u27e9\nPlease see UPGRADING.md\u27e812\u27e9 if you are upgrading from a previous version.\n## Alternative Unicode back ends\n``url`` depends on the ``idna`` crate. By default, ``idna`` uses ICU4X\u27e813\u27e9 as its Unicode back end. If you wish to opt for different tradeoffs between correctness, run-time performance, binary size, compile time, and MSRV, please see the README of the latest version of the ``idna_adapter`` crate\u27e814\u27e9 for how to opt into a different Unicode back end.\n#### Dependencies\n  * percent-encoding\u27e815\u27e9\n\n\n#### Other features\u27e816\u27e9\n  * alloc\u27e817\u27e9\n  * std\u27e818\u27e9\n\n\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/form_urlencoded/versions: 5 stable releases\n\u27e82\u27e9 https://lib.rs/parser-implementations: Parsers implemented for particular formats or languages. - Parser implementations\n\u27e83\u27e9 https://lib.rs/crates/form_urlencoded/rev: **33,877** crates (157 directly)\n\u27e84\u27e9 http://url.spec.whatwg.org/#application/x-www-form-urlencoded: ``application`/`x`-`www`-`form`-`urlencoded`` syntax\n\u27e85\u27e9 https://img.gs/czjpqfbdkz/full/https://github.com/servo/rust-url/workflows/CI/badge.svg: ![Build status\n\u27e86\u27e9 https://img.gs/czjpqfbdkz/full/https://codecov.io/gh/servo/rust-url/branch/master/graph/badge.svg: ![Coverage\n\u27e87\u27e9 https://img.shields.io/badge/chat-%23rust--url:mozilla.org-%2346BC99?logo=Matrix: ![Chat\n\u27e88\u27e9 https://img.shields.io/badge/License-MIT-blue.svg: ![License: MIT\n\u27e89\u27e9 https://img.shields.io/badge/License-Apache%202.0-blue.svg: ![License: Apache 2.0\n\u27e810\u27e9 https://url.spec.whatwg.org/: URL Standard\n\u27e811\u27e9 https://docs.rs/url: Documentation\n\u27e812\u27e9 https://github.com/servo/rust-url/blob/main/UPGRADING.md: UPGRADING.md\n\u27e813\u27e9 https://github.com/unicode-org/icu4x/: ICU4X\n\u27e814\u27e9 https://docs.rs/crate/idna_adapter/latest: README of the latest version of the ``idna_adapter`` crate\n\u27e815\u27e9 https://lib.rs/crates/percent-encoding: 2.3.0 - percent-encoding\n\u27e816\u27e9 https://lib.rs/crates/form_urlencoded/features: Other features\n\u27e817\u27e9 https://lib.rs/crates/form_urlencoded/features#feature-alloc: alloc\n\u27e818\u27e9 https://lib.rs/crates/form_urlencoded/features#feature-std: std\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 3023,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "114384.8319285"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\percent-encoding-2.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "percent_encoding",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\percent-encoding-2.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd5ralr8c\\form_urlencoded-1.2.1\\target\\debug\\deps\\libpercent_encoding-8b0ebbbbed3ee9f3.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd5ralr8c/form_urlencoded-1.2.1#form_urlencoded@1.2.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd5ralr8c\\form_urlencoded-1.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "form_urlencoded",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd5ralr8c\\form_urlencoded-1.2.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "message": {
                "rendered": "warning: ambiguous wide pointer comparison, the comparison includes metadata which may not be expected\n   --> src\\lib.rs:414:35\n    |\n414 |                     debug_assert!(raw_utf8 == &*bytes as *const [u8]);\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(ambiguous_wide_pointer_comparisons)]` on by default\nhelp: use `std::ptr::addr_eq` or untyped pointers to only compare their addresses\n    |\n414 -                     debug_assert!(raw_utf8 == &*bytes as *const [u8]);\n414 +                     debug_assert!(std::ptr::addr_eq(raw_utf8, &*bytes as *const [u8]));\n    |\nhelp: use explicit `std::ptr::eq` method to compare metadata and addresses\n    |\n414 -                     debug_assert!(raw_utf8 == &*bytes as *const [u8]);\n414 +                     debug_assert!(std::ptr::eq(raw_utf8, &*bytes as *const [u8]));\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(ambiguous_wide_pointer_comparisons)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `std::ptr::addr_eq` or untyped pointers to only compare their addresses",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12859,
                        "byte_start": 12859,
                        "column_end": 35,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 414,
                        "line_start": 414,
                        "suggested_replacement": "std::ptr::addr_eq(",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 35,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      },
                      {
                        "byte_end": 12871,
                        "byte_start": 12867,
                        "column_end": 47,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 414,
                        "line_start": 414,
                        "suggested_replacement": ", ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 43,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      },
                      {
                        "byte_end": 12893,
                        "byte_start": 12893,
                        "column_end": 69,
                        "column_start": 69,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 414,
                        "line_start": 414,
                        "suggested_replacement": ")",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 69,
                            "highlight_start": 69,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use explicit `std::ptr::eq` method to compare metadata and addresses",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12859,
                        "byte_start": 12859,
                        "column_end": 35,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 414,
                        "line_start": 414,
                        "suggested_replacement": "std::ptr::eq(",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 35,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      },
                      {
                        "byte_end": 12871,
                        "byte_start": 12867,
                        "column_end": 47,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 414,
                        "line_start": 414,
                        "suggested_replacement": ", ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 43,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      },
                      {
                        "byte_end": 12893,
                        "byte_start": 12893,
                        "column_end": 69,
                        "column_start": 69,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 414,
                        "line_start": 414,
                        "suggested_replacement": ")",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 69,
                            "highlight_start": 69,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "ambiguous_wide_pointer_comparisons",
                  "explanation": null
                },
                "level": "warning",
                "message": "ambiguous wide pointer comparison, the comparison includes metadata which may not be expected",
                "spans": [
                  {
                    "byte_end": 12893,
                    "byte_start": 12859,
                    "column_end": 69,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 414,
                    "line_start": 414,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 69,
                        "highlight_start": 35,
                        "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd5ralr8c/form_urlencoded-1.2.1#form_urlencoded@1.2.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd5ralr8c\\form_urlencoded-1.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "form_urlencoded",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd5ralr8c\\form_urlencoded-1.2.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd5ralr8c\\form_urlencoded-1.2.1\\target\\debug\\deps\\libform_urlencoded-ffe13d88acb22978.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\percent-encoding-2.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "percent_encoding",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\percent-encoding-2.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd5ralr8c\\form_urlencoded-1.2.1\\target\\debug\\deps\\libpercent_encoding-8b0ebbbbed3ee9f3.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd5ralr8c/form_urlencoded-1.2.1#form_urlencoded@1.2.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd5ralr8c\\form_urlencoded-1.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "form_urlencoded",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd5ralr8c\\form_urlencoded-1.2.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "message": {
                "rendered": "warning: the following explicit lifetimes could be elided: 'a\n   --> src\\lib.rs:198:6\n    |\n198 | impl<'a> Target for &'a mut String {\n    |      ^^              ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n198 - impl<'a> Target for &'a mut String {\n198 + impl Target for &mut String {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_lifetimes)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6027,
                        "byte_start": 6023,
                        "column_end": 9,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 198,
                        "line_start": 198,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 9,
                            "highlight_start": 5,
                            "text": "impl<'a> Target for &'a mut String {"
                          }
                        ]
                      },
                      {
                        "byte_end": 6043,
                        "byte_start": 6040,
                        "column_end": 25,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 198,
                        "line_start": 198,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 25,
                            "highlight_start": 22,
                            "text": "impl<'a> Target for &'a mut String {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 6026,
                    "byte_start": 6024,
                    "column_end": 8,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 198,
                    "line_start": 198,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 6,
                        "text": "impl<'a> Target for &'a mut String {"
                      }
                    ]
                  },
                  {
                    "byte_end": 6042,
                    "byte_start": 6040,
                    "column_end": 24,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 198,
                    "line_start": 198,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 22,
                        "text": "impl<'a> Target for &'a mut String {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd5ralr8c/form_urlencoded-1.2.1#form_urlencoded@1.2.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd5ralr8c\\form_urlencoded-1.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "form_urlencoded",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd5ralr8c\\form_urlencoded-1.2.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "message": {
                "rendered": "warning: use `core::ptr::eq` when comparing raw pointers\n   --> src\\lib.rs:414:35\n    |\n414 |                     debug_assert!(raw_utf8 == &*bytes as *const [u8]);\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `core::ptr::eq(raw_utf8, &*bytes)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_eq\n    = note: `#[warn(clippy::ptr_eq)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_eq",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::ptr_eq)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12893,
                        "byte_start": 12859,
                        "column_end": 69,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 414,
                        "line_start": 414,
                        "suggested_replacement": "core::ptr::eq(raw_utf8, &*bytes)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 69,
                            "highlight_start": 35,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::ptr_eq",
                  "explanation": null
                },
                "level": "warning",
                "message": "use `core::ptr::eq` when comparing raw pointers",
                "spans": [
                  {
                    "byte_end": 12893,
                    "byte_start": 12859,
                    "column_end": 69,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 414,
                    "line_start": 414,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 69,
                        "highlight_start": 35,
                        "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd5ralr8c/form_urlencoded-1.2.1#form_urlencoded@1.2.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd5ralr8c\\form_urlencoded-1.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "form_urlencoded",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd5ralr8c\\form_urlencoded-1.2.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "message": {
                "rendered": "warning: ambiguous wide pointer comparison, the comparison includes metadata which may not be expected\n   --> src\\lib.rs:414:35\n    |\n414 |                     debug_assert!(raw_utf8 == &*bytes as *const [u8]);\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(ambiguous_wide_pointer_comparisons)]` on by default\nhelp: use `std::ptr::addr_eq` or untyped pointers to only compare their addresses\n    |\n414 -                     debug_assert!(raw_utf8 == &*bytes as *const [u8]);\n414 +                     debug_assert!(std::ptr::addr_eq(raw_utf8, &*bytes as *const [u8]));\n    |\nhelp: use explicit `std::ptr::eq` method to compare metadata and addresses\n    |\n414 -                     debug_assert!(raw_utf8 == &*bytes as *const [u8]);\n414 +                     debug_assert!(std::ptr::eq(raw_utf8, &*bytes as *const [u8]));\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(ambiguous_wide_pointer_comparisons)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `std::ptr::addr_eq` or untyped pointers to only compare their addresses",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12859,
                        "byte_start": 12859,
                        "column_end": 35,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 414,
                        "line_start": 414,
                        "suggested_replacement": "std::ptr::addr_eq(",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 35,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      },
                      {
                        "byte_end": 12871,
                        "byte_start": 12867,
                        "column_end": 47,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 414,
                        "line_start": 414,
                        "suggested_replacement": ", ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 43,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      },
                      {
                        "byte_end": 12893,
                        "byte_start": 12893,
                        "column_end": 69,
                        "column_start": 69,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 414,
                        "line_start": 414,
                        "suggested_replacement": ")",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 69,
                            "highlight_start": 69,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use explicit `std::ptr::eq` method to compare metadata and addresses",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12859,
                        "byte_start": 12859,
                        "column_end": 35,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 414,
                        "line_start": 414,
                        "suggested_replacement": "std::ptr::eq(",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 35,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      },
                      {
                        "byte_end": 12871,
                        "byte_start": 12867,
                        "column_end": 47,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 414,
                        "line_start": 414,
                        "suggested_replacement": ", ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 43,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      },
                      {
                        "byte_end": 12893,
                        "byte_start": 12893,
                        "column_end": 69,
                        "column_start": 69,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 414,
                        "line_start": 414,
                        "suggested_replacement": ")",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 69,
                            "highlight_start": 69,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "ambiguous_wide_pointer_comparisons",
                  "explanation": null
                },
                "level": "warning",
                "message": "ambiguous wide pointer comparison, the comparison includes metadata which may not be expected",
                "spans": [
                  {
                    "byte_end": 12893,
                    "byte_start": 12859,
                    "column_end": 69,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 414,
                    "line_start": 414,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 69,
                        "highlight_start": 35,
                        "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd5ralr8c/form_urlencoded-1.2.1#form_urlencoded@1.2.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd5ralr8c\\form_urlencoded-1.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "form_urlencoded",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd5ralr8c\\form_urlencoded-1.2.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd5ralr8c\\form_urlencoded-1.2.1\\target\\debug\\deps\\libform_urlencoded-8690998a38529ff2.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 2
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {}
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "form_urlencoded",
          "version": "1.2.1",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/form_urlencoded/latest/form_urlencoded/all.html \"show sidebar\")\n# Crate form_urlencodedCopy item path\n[Settings](https://docs.rs/form_urlencoded/latest/settings.html)\n[Help](https://docs.rs/form_urlencoded/latest/help.html)\nSummary[Source](https://docs.rs/form_urlencoded/latest/src/form_urlencoded/lib.rs.html#9-427)\nExpand description\nParser and serializer for the [`application/x-www-form-urlencoded` syntax](http://url.spec.whatwg.org/#application/x-www-form-urlencoded), as used by HTML forms.\nConverts between a string (such as an URL\u2019s query string) and a sequence of (name, value) pairs.\n## Structs[\u00a7](https://docs.rs/form_urlencoded/latest/form_urlencoded/#structs)\n\n[ByteSerialize](https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.ByteSerialize.html \"struct form_urlencoded::ByteSerialize\")\n    Return value of `byte_serialize()`.\n\n[Parse](https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.Parse.html \"struct form_urlencoded::Parse\")\n    The return type of `parse()`.\n\n[ParseIntoOwned](https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.ParseIntoOwned.html \"struct form_urlencoded::ParseIntoOwned\")\n    Like `Parse`, but yields pairs of `String` instead of pairs of `Cow<str>`.\n\n[Serializer](https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.Serializer.html \"struct form_urlencoded::Serializer\")\n    The [`application/x-www-form-urlencoded` serializer](https://url.spec.whatwg.org/#concept-urlencoded-serializer).\n## Traits[\u00a7](https://docs.rs/form_urlencoded/latest/form_urlencoded/#traits)\n\n[Target](https://docs.rs/form_urlencoded/latest/form_urlencoded/trait.Target.html \"trait form_urlencoded::Target\")\n\n## Functions[\u00a7](https://docs.rs/form_urlencoded/latest/form_urlencoded/#functions)\n\n[byte_serialize](https://docs.rs/form_urlencoded/latest/form_urlencoded/fn.byte_serialize.html \"fn form_urlencoded::byte_serialize\")\n    The [`application/x-www-form-urlencoded` byte serializer](https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer).\n\n[parse](https://docs.rs/form_urlencoded/latest/form_urlencoded/fn.parse.html \"fn form_urlencoded::parse\")\n    Convert a byte string in the `application/x-www-form-urlencoded` syntax into a iterator of (name, value) pairs.\n## Type Aliases[\u00a7](https://docs.rs/form_urlencoded/latest/form_urlencoded/#types)\n\n[EncodingOverride](https://docs.rs/form_urlencoded/latest/form_urlencoded/type.EncodingOverride.html \"type form_urlencoded::EncodingOverride\")\n\n",
            "markdown_with_citations": "[](https://docs.rs/form_urlencoded/latest/form_urlencoded/all.html \"show sidebar\")\n# Crate form_urlencodedCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nParser and serializer for the `application/x-www-form-urlencoded` syntax\u27e84\u27e9, as used by HTML forms.\nConverts between a string (such as an URL\u2019s query string) and a sequence of (name, value) pairs.\n## Structs\u00a7\u27e85\u27e9\n\nByteSerialize\u27e86\u27e9\n    Return value of `byte_serialize()`.\n\nParse\u27e87\u27e9\n    The return type of `parse()`.\n\nParseIntoOwned\u27e88\u27e9\n    Like `Parse`, but yields pairs of `String` instead of pairs of `Cow<str>`.\n\nSerializer\u27e89\u27e9\n    The `application/x-www-form-urlencoded` serializer\u27e810\u27e9.\n## Traits\u00a7\u27e811\u27e9\n\nTarget\u27e812\u27e9\n\n## Functions\u00a7\u27e813\u27e9\n\nbyte_serialize\u27e814\u27e9\n    The `application/x-www-form-urlencoded` byte serializer\u27e815\u27e9.\n\nparse\u27e816\u27e9\n    Convert a byte string in the `application/x-www-form-urlencoded` syntax into a iterator of (name, value) pairs.\n## Type Aliases\u00a7\u27e817\u27e9\n\nEncodingOverride\u27e818\u27e9\n\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/form_urlencoded/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/form_urlencoded/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/form_urlencoded/latest/src/form_urlencoded/lib.rs.html#9-427: Source\n\u27e84\u27e9 http://url.spec.whatwg.org/#application/x-www-form-urlencoded: `application/x-www-form-urlencoded` syntax\n\u27e85\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/#structs: \u00a7\n\u27e86\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.ByteSerialize.html: struct form_urlencoded::ByteSerialize - ByteSerialize\n\u27e87\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.Parse.html: struct form_urlencoded::Parse - Parse\n\u27e88\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.ParseIntoOwned.html: struct form_urlencoded::ParseIntoOwned - ParseIntoOwned\n\u27e89\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.Serializer.html: struct form_urlencoded::Serializer - Serializer\n\u27e810\u27e9 https://url.spec.whatwg.org/#concept-urlencoded-serializer: `application/x-www-form-urlencoded` serializer\n\u27e811\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/#traits: \u00a7\n\u27e812\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/trait.Target.html: trait form_urlencoded::Target - Target\n\u27e813\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/#functions: \u00a7\n\u27e814\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/fn.byte_serialize.html: fn form_urlencoded::byte_serialize - byte_serialize\n\u27e815\u27e9 https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer: `application/x-www-form-urlencoded` byte serializer\n\u27e816\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/fn.parse.html: fn form_urlencoded::parse - parse\n\u27e817\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/#types: \u00a7\n\u27e818\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/type.EncodingOverride.html: type form_urlencoded::EncodingOverride - EncodingOverride\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "form_urlencoded",
          "version": "1.2.1",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/form_urlencoded/latest/form_urlencoded/all.html \"show sidebar\")\n# Crate form_urlencodedCopy item path\n[Settings](https://docs.rs/form_urlencoded/latest/settings.html)\n[Help](https://docs.rs/form_urlencoded/latest/help.html)\nSummary[Source](https://docs.rs/form_urlencoded/latest/src/form_urlencoded/lib.rs.html#9-427)\nExpand description\nParser and serializer for the [`application/x-www-form-urlencoded` syntax](http://url.spec.whatwg.org/#application/x-www-form-urlencoded), as used by HTML forms.\nConverts between a string (such as an URL\u2019s query string) and a sequence of (name, value) pairs.\n## Structs[\u00a7](https://docs.rs/form_urlencoded/latest/form_urlencoded/#structs)\n\n[ByteSerialize](https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.ByteSerialize.html \"struct form_urlencoded::ByteSerialize\")\n    Return value of `byte_serialize()`.\n\n[Parse](https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.Parse.html \"struct form_urlencoded::Parse\")\n    The return type of `parse()`.\n\n[ParseIntoOwned](https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.ParseIntoOwned.html \"struct form_urlencoded::ParseIntoOwned\")\n    Like `Parse`, but yields pairs of `String` instead of pairs of `Cow<str>`.\n\n[Serializer](https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.Serializer.html \"struct form_urlencoded::Serializer\")\n    The [`application/x-www-form-urlencoded` serializer](https://url.spec.whatwg.org/#concept-urlencoded-serializer).\n## Traits[\u00a7](https://docs.rs/form_urlencoded/latest/form_urlencoded/#traits)\n\n[Target](https://docs.rs/form_urlencoded/latest/form_urlencoded/trait.Target.html \"trait form_urlencoded::Target\")\n\n## Functions[\u00a7](https://docs.rs/form_urlencoded/latest/form_urlencoded/#functions)\n\n[byte_serialize](https://docs.rs/form_urlencoded/latest/form_urlencoded/fn.byte_serialize.html \"fn form_urlencoded::byte_serialize\")\n    The [`application/x-www-form-urlencoded` byte serializer](https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer).\n\n[parse](https://docs.rs/form_urlencoded/latest/form_urlencoded/fn.parse.html \"fn form_urlencoded::parse\")\n    Convert a byte string in the `application/x-www-form-urlencoded` syntax into a iterator of (name, value) pairs.\n## Type Aliases[\u00a7](https://docs.rs/form_urlencoded/latest/form_urlencoded/#types)\n\n[EncodingOverride](https://docs.rs/form_urlencoded/latest/form_urlencoded/type.EncodingOverride.html \"type form_urlencoded::EncodingOverride\")\n\n",
            "markdown_with_citations": "[](https://docs.rs/form_urlencoded/latest/form_urlencoded/all.html \"show sidebar\")\n# Crate form_urlencodedCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nParser and serializer for the `application/x-www-form-urlencoded` syntax\u27e84\u27e9, as used by HTML forms.\nConverts between a string (such as an URL\u2019s query string) and a sequence of (name, value) pairs.\n## Structs\u00a7\u27e85\u27e9\n\nByteSerialize\u27e86\u27e9\n    Return value of `byte_serialize()`.\n\nParse\u27e87\u27e9\n    The return type of `parse()`.\n\nParseIntoOwned\u27e88\u27e9\n    Like `Parse`, but yields pairs of `String` instead of pairs of `Cow<str>`.\n\nSerializer\u27e89\u27e9\n    The `application/x-www-form-urlencoded` serializer\u27e810\u27e9.\n## Traits\u00a7\u27e811\u27e9\n\nTarget\u27e812\u27e9\n\n## Functions\u00a7\u27e813\u27e9\n\nbyte_serialize\u27e814\u27e9\n    The `application/x-www-form-urlencoded` byte serializer\u27e815\u27e9.\n\nparse\u27e816\u27e9\n    Convert a byte string in the `application/x-www-form-urlencoded` syntax into a iterator of (name, value) pairs.\n## Type Aliases\u00a7\u27e817\u27e9\n\nEncodingOverride\u27e818\u27e9\n\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/form_urlencoded/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/form_urlencoded/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/form_urlencoded/latest/src/form_urlencoded/lib.rs.html#9-427: Source\n\u27e84\u27e9 http://url.spec.whatwg.org/#application/x-www-form-urlencoded: `application/x-www-form-urlencoded` syntax\n\u27e85\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/#structs: \u00a7\n\u27e86\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.ByteSerialize.html: struct form_urlencoded::ByteSerialize - ByteSerialize\n\u27e87\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.Parse.html: struct form_urlencoded::Parse - Parse\n\u27e88\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.ParseIntoOwned.html: struct form_urlencoded::ParseIntoOwned - ParseIntoOwned\n\u27e89\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/struct.Serializer.html: struct form_urlencoded::Serializer - Serializer\n\u27e810\u27e9 https://url.spec.whatwg.org/#concept-urlencoded-serializer: `application/x-www-form-urlencoded` serializer\n\u27e811\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/#traits: \u00a7\n\u27e812\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/trait.Target.html: trait form_urlencoded::Target - Target\n\u27e813\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/#functions: \u00a7\n\u27e814\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/fn.byte_serialize.html: fn form_urlencoded::byte_serialize - byte_serialize\n\u27e815\u27e9 https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer: `application/x-www-form-urlencoded` byte serializer\n\u27e816\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/fn.parse.html: fn form_urlencoded::parse - parse\n\u27e817\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/#types: \u00a7\n\u27e818\u27e9 https://docs.rs/form_urlencoded/latest/form_urlencoded/type.EncodingOverride.html: type form_urlencoded::EncodingOverride - EncodingOverride\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `form_urlencoded` crate provides tools for parsing and serializing data in the `application/x-www-form-urlencoded` format, commonly used in HTML forms and URL query strings. It enables conversion between strings and sequences of `(name, value)` pairs, offering utilities like `byte_serialize` for encoding and `parse` for decoding. Key features include specialized structs like `Serializer` for encoding and `Parse` for decoding, along with support for owned and borrowed data representations.",
          "feature_summary": null,
          "use_case": "Serialization",
          "score": 6.0,
          "factual_counterfactual": "### Pair 1: Parsing functionality  \n\u2705 **Factual:** The `form_urlencoded::parse` function converts a byte string in the `application/x-www-form-urlencoded` syntax into an iterator of `(name, value)` pairs, allowing efficient traversal of query parameters.  \n\u274c **Counterfactual:** The `form_urlencoded::parse` function directly converts a byte string into a `HashMap` of `(name, value)` pairs, automatically handling duplicate keys by overwriting values.  \n\n---\n\n### Pair 2: Serialization features  \n\u2705 **Factual:** The `form_urlencoded::Serializer` struct provides a way to construct an `application/x-www-form-urlencoded` string by incrementally adding `(name, value)` pairs.  \n\u274c **Counterfactual:** The `form_urlencoded::Serializer` struct automatically serializes Rust structs into `application/x-www-form-urlencoded` format without requiring manual addition of `(name, value)` pairs.  \n\n---\n\n### Pair 3: Byte-level encoding  \n\u2705 **Factual:** The `form_urlencoded::byte_serialize` function performs percent-encoding on a string, ensuring that reserved characters are properly escaped for use in URLs.  \n\u274c **Counterfactual:** The `form_urlencoded::byte_serialize` function automatically decodes percent-encoded strings back into their original form, reversing the serialization process.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-b310caed-01433f97-1751260593",
      "timestamp": "2025-06-30T05:16:33.757019+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]