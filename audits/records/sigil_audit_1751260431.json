[
  {
    "execution_id": "exec-2bfc40c2-081068c2-1751260424",
    "timestamp": "2025-06-30T05:13:44.185409+00:00",
    "sacred_chain": {
      "input_data": "terminal_size",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'terminal_size' -> 'terminal_size'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "terminal_size",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/terminal_size",
            "title": "terminal_size v0.4.2",
            "content": {
              "raw_markdown": "#  terminal_size v0.4.2\nGets the size of your Linux or Windows terminal \n  * [ #console ](https://crates.io/keywords/console)\n  * [ #dimensions ](https://crates.io/keywords/dimensions)\n  * [ #size ](https://crates.io/keywords/size)\n  * [ #term ](https://crates.io/keywords/term)\n  * [ #terminal ](https://crates.io/keywords/terminal)\n\n\n  * [ Readme ](https://crates.io/crates/terminal_size)\n  * [ 27 Versions ](https://crates.io/crates/terminal_size/versions)\n  * [ Dependencies ](https://crates.io/crates/terminal_size/dependencies)\n  * [ Dependents ](https://crates.io/crates/terminal_size/reverse_dependencies)\n\n\n## Metadata\n4 months ago \nv1.63.0 \n[ MIT ](https://choosealicense.com/licenses/mit) OR [ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0)\n9.74 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add terminal_size\nOr add the following line to your Cargo.toml:\nterminal_size = \"0.4.2\"\n## Documentation\n[ docs.rs/terminal_size ](https://docs.rs/terminal_size)\n## Repository\n[ github.com/eminence/terminal-size ](https://github.com/eminence/terminal-size)\n## Owners\n[ Report crate ](https://crates.io/support?crate=terminal_size&inquire=crate-violation)\n### Stats Overview\n84,049,262 Downloads all time\n27 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  terminal_size v0.4.2\nGets the size of your Linux or Windows terminal \n  *  #console \u27e81\u27e9\n  *  #dimensions \u27e82\u27e9\n  *  #size \u27e83\u27e9\n  *  #term \u27e84\u27e9\n  *  #terminal \u27e85\u27e9\n\n\n  *  Readme \u27e86\u27e9\n  *  27 Versions \u27e87\u27e9\n  *  Dependencies \u27e88\u27e9\n  *  Dependents \u27e89\u27e9\n\n\n## Metadata\n4 months ago \nv1.63.0 \n MIT \u27e810\u27e9 OR  Apache-2.0 \u27e811\u27e9\n9.74 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add terminal_size\nOr add the following line to your Cargo.toml:\nterminal_size = \"0.4.2\"\n## Documentation\n docs.rs/terminal_size \u27e812\u27e9\n## Repository\n github.com/eminence/terminal-size \u27e813\u27e9\n## Owners\n Report crate \u27e814\u27e9\n### Stats Overview\n84,049,262 Downloads all time\n27 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/console:  #console \n\u27e82\u27e9 https://crates.io/keywords/dimensions:  #dimensions \n\u27e83\u27e9 https://crates.io/keywords/size:  #size \n\u27e84\u27e9 https://crates.io/keywords/term:  #term \n\u27e85\u27e9 https://crates.io/keywords/terminal:  #terminal \n\u27e86\u27e9 https://crates.io/crates/terminal_size:  Readme \n\u27e87\u27e9 https://crates.io/crates/terminal_size/versions:  27 Versions \n\u27e88\u27e9 https://crates.io/crates/terminal_size/dependencies:  Dependencies \n\u27e89\u27e9 https://crates.io/crates/terminal_size/reverse_dependencies:  Dependents \n\u27e810\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e811\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e812\u27e9 https://docs.rs/terminal_size:  docs.rs/terminal_size \n\u27e813\u27e9 https://github.com/eminence/terminal-size:  github.com/eminence/terminal-size \n\u27e814\u27e9 https://crates.io/support?crate=terminal_size&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1375,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "114213.7730675"
          },
          "docs_rs": {
            "url": "https://docs.rs/terminal_size",
            "title": "Crate terminal_sizeCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/terminal_size/latest/terminal_size/all.html \"show sidebar\")\n# Crate terminal_sizeCopy item path\n[Settings](https://docs.rs/terminal_size/latest/settings.html)\n[Help](https://docs.rs/terminal_size/latest/help.html)\nSummary[Source](https://docs.rs/terminal_size/latest/src/terminal_size/lib.rs.html#1-41)\nExpand description\nA simple utility for getting the size of a terminal.\nWorks on Linux, macOS, Windows, and illumos.\nThis crate requires a minimum Rust version of 1.63.0 (2022-08-11).\n## [\u00a7](https://docs.rs/terminal_size/latest/terminal_size/#example)Example\n```\nuse terminal_size::{Width, Height, terminal_size};\nlet size = terminal_size();\nif let Some((Width(w), Height(h))) = size {\n  println!(\"Your terminal is {} cols wide and {} lines tall\", w, h);\n} else {\n  println!(\"Unable to get terminal size\");\n}\n```\n\n## Structs[\u00a7](https://docs.rs/terminal_size/latest/terminal_size/#structs)\n\n[Height](https://docs.rs/terminal_size/latest/terminal_size/struct.Height.html \"struct terminal_size::Height\")\n\n\n[Width](https://docs.rs/terminal_size/latest/terminal_size/struct.Width.html \"struct terminal_size::Width\")\n\n## Functions[\u00a7](https://docs.rs/terminal_size/latest/terminal_size/#functions)\n\n[terminal_size](https://docs.rs/terminal_size/latest/terminal_size/fn.terminal_size.html \"fn terminal_size::terminal_size\")\n    Returns the size of the terminal.\n\n[terminal_size_of](https://docs.rs/terminal_size/latest/terminal_size/fn.terminal_size_of.html \"fn terminal_size::terminal_size_of\")\n    Returns the size of the terminal using the given file descriptor, if available.\n\n[terminal_size_using_fd](https://docs.rs/terminal_size/latest/terminal_size/fn.terminal_size_using_fd.html \"fn terminal_size::terminal_size_using_fd\")\u26a0Deprecated\n    Returns the size of the terminal using the given raw file descriptor, if available.\n",
              "markdown_with_citations": "[](https://docs.rs/terminal_size/latest/terminal_size/all.html \"show sidebar\")\n# Crate terminal_sizeCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA simple utility for getting the size of a terminal.\nWorks on Linux, macOS, Windows, and illumos.\nThis crate requires a minimum Rust version of 1.63.0 (2022-08-11).\n## \u00a7\u27e84\u27e9Example\n```\nuse terminal_size::{Width, Height, terminal_size};\nlet size = terminal_size();\nif let Some((Width(w), Height(h))) = size {\n  println!(\"Your terminal is {} cols wide and {} lines tall\", w, h);\n} else {\n  println!(\"Unable to get terminal size\");\n}\n```\n\n## Structs\u00a7\u27e85\u27e9\n\nHeight\u27e86\u27e9\n\n\nWidth\u27e87\u27e9\n\n## Functions\u00a7\u27e88\u27e9\n\nterminal_size\u27e89\u27e9\n    Returns the size of the terminal.\n\nterminal_size_of\u27e810\u27e9\n    Returns the size of the terminal using the given file descriptor, if available.\n\nterminal_size_using_fd\u27e811\u27e9\u26a0Deprecated\n    Returns the size of the terminal using the given raw file descriptor, if available.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/terminal_size/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/terminal_size/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/terminal_size/latest/src/terminal_size/lib.rs.html#1-41: Source\n\u27e84\u27e9 https://docs.rs/terminal_size/latest/terminal_size/#example: \u00a7\n\u27e85\u27e9 https://docs.rs/terminal_size/latest/terminal_size/#structs: \u00a7\n\u27e86\u27e9 https://docs.rs/terminal_size/latest/terminal_size/struct.Height.html: struct terminal_size::Height - Height\n\u27e87\u27e9 https://docs.rs/terminal_size/latest/terminal_size/struct.Width.html: struct terminal_size::Width - Width\n\u27e88\u27e9 https://docs.rs/terminal_size/latest/terminal_size/#functions: \u00a7\n\u27e89\u27e9 https://docs.rs/terminal_size/latest/terminal_size/fn.terminal_size.html: fn terminal_size::terminal_size - terminal_size\n\u27e810\u27e9 https://docs.rs/terminal_size/latest/terminal_size/fn.terminal_size_of.html: fn terminal_size::terminal_size_of - terminal_size_of\n\u27e811\u27e9 https://docs.rs/terminal_size/latest/terminal_size/fn.terminal_size_using_fd.html: fn terminal_size::terminal_size_using_fd - terminal_size_using_fd\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1845,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "114214.7152692"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/terminal_size",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [25 releases](https://lib.rs/crates/terminal_size/versions)\n0.4.2 |  Mar 8, 2025   \n---|---  \n0.4.1 |  Nov 29, 2024   \n0.4.0 |  Sep 25, 2024   \n0.3.0 |  Sep 15, 2023   \n0.1.1 |  Aug 27, 2015   \n#**34** in [Command-line interface](https://lib.rs/command-line-interface \"Crates to help create command line interfaces, such as argument parsers, line-editing, or output coloring and formatting.\")\nDownload history 1001336/week @ 2025-03-08 1021514/week @ 2025-03-15 968931/week @ 2025-03-22 982453/week @ 2025-03-29 1032982/week @ 2025-04-05 954934/week @ 2025-04-12 983815/week @ 2025-04-19 931442/week @ 2025-04-26 933440/week @ 2025-05-03 981350/week @ 2025-05-10 1017872/week @ 2025-05-17 883542/week @ 2025-05-24 974784/week @ 2025-05-31 954655/week @ 2025-06-07 1030271/week @ 2025-06-14 1142079/week @ 2025-06-21\n**4,258,414** downloads per month Used in [**2,663** crates (301 directly)](https://lib.rs/crates/terminal_size/rev)\n**MIT/Apache**\n12KB  168 lines\n# terminal-size\n[Documentation](https://docs.rs/terminal_size)\nRust library for getting the size of your terminal.\nWorks on Linux, macOS, Windows, and illumos.\n```\n``use` `terminal_size`::````{`Width`,` Height`,` terminal_size```}```;`\n`let` size `=` `terminal_size``(``)``;`\n`if` `let` `Some``(``(`Width`(`w`)``,` Height`(`h`)``)``)` `=` size ``{`\n  `println!``(```\"`Your terminal is `{}` cols wide and `{}` lines tall`\"```,` w`,` h`)``;`\n```}`` `else` ``{`\n  `println!``(```\"`Unable to get terminal size`\"```)``;`\n```}``\n`\n```\n\n## Minimum Rust Version\nThis crate requires a minimum Rust version of 1.63.0 (2022-08-11).\n## License\nLicensed under either of\n  * Apache License, Version 2.0, ([LICENSE-APACHE](https://github.com/eminence/terminal-size/blob/HEAD/LICENSE-APACHE) or <https://www.apache.org/licenses/LICENSE-2.0>)\n  * MIT license ([LICENSE-MIT](https://github.com/eminence/terminal-size/blob/HEAD/LICENSE-MIT) or <https://opensource.org/licenses/MIT>)\n\n\nat your option.\n### Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n#### Dependencies\n~2\u201311MB  ~148K SLoC\n  * [rustix](https://lib.rs/crates/rustix \"1.0.1\")[+termios](https://lib.rs/crates/rustix/features#feature-termios) unix\n  * [windows-sys](https://lib.rs/crates/windows-sys \"outdated\") 0.59[+Win32_Foundation](https://lib.rs/crates/windows-sys/features#feature-Win32_Foundation)[+Win32_System_Console](https://lib.rs/crates/windows-sys/features#feature-Win32_System_Console) win\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  25 releases\u27e81\u27e9\n0.4.2 |  Mar 8, 2025   \n---|---  \n0.4.1 |  Nov 29, 2024   \n0.4.0 |  Sep 25, 2024   \n0.3.0 |  Sep 15, 2023   \n0.1.1 |  Aug 27, 2015   \n#**34** in Command-line interface\u27e82\u27e9\nDownload history 1001336/week @ 2025-03-08 1021514/week @ 2025-03-15 968931/week @ 2025-03-22 982453/week @ 2025-03-29 1032982/week @ 2025-04-05 954934/week @ 2025-04-12 983815/week @ 2025-04-19 931442/week @ 2025-04-26 933440/week @ 2025-05-03 981350/week @ 2025-05-10 1017872/week @ 2025-05-17 883542/week @ 2025-05-24 974784/week @ 2025-05-31 954655/week @ 2025-06-07 1030271/week @ 2025-06-14 1142079/week @ 2025-06-21\n**4,258,414** downloads per month Used in **2,663** crates (301 directly)\u27e83\u27e9\n**MIT/Apache**\n12KB  168 lines\n# terminal-size\nDocumentation\u27e84\u27e9\nRust library for getting the size of your terminal.\nWorks on Linux, macOS, Windows, and illumos.\n```\n``use` `terminal_size`::````{`Width`,` Height`,` terminal_size```}```;`\n`let` size `=` `terminal_size``(``)``;`\n`if` `let` `Some``(``(`Width`(`w`)``,` Height`(`h`)``)``)` `=` size ``{`\n  `println!``(```\"`Your terminal is `{}` cols wide and `{}` lines tall`\"```,` w`,` h`)``;`\n```}`` `else` ``{`\n  `println!``(```\"`Unable to get terminal size`\"```)``;`\n```}``\n`\n```\n\n## Minimum Rust Version\nThis crate requires a minimum Rust version of 1.63.0 (2022-08-11).\n## License\nLicensed under either of\n  * Apache License, Version 2.0, (LICENSE-APACHE\u27e85\u27e9 or <https://www.apache.org/licenses/LICENSE-2.0>)\n  * MIT license (LICENSE-MIT\u27e86\u27e9 or <https://opensource.org/licenses/MIT>)\n\n\nat your option.\n### Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n#### Dependencies\n~2\u201311MB  ~148K SLoC\n  * rustix\u27e87\u27e9+termios\u27e88\u27e9 unix\n  * windows-sys\u27e89\u27e9 0.59+Win32_Foundation\u27e810\u27e9+Win32_System_Console\u27e811\u27e9 win\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/terminal_size/versions: 25 releases\n\u27e82\u27e9 https://lib.rs/command-line-interface: Crates to help create command line interfaces, such as argument parsers, line-editing, or output coloring and formatting. - Command-line interface\n\u27e83\u27e9 https://lib.rs/crates/terminal_size/rev: **2,663** crates (301 directly)\n\u27e84\u27e9 https://docs.rs/terminal_size: Documentation\n\u27e85\u27e9 https://github.com/eminence/terminal-size/blob/HEAD/LICENSE-APACHE: LICENSE-APACHE\n\u27e86\u27e9 https://github.com/eminence/terminal-size/blob/HEAD/LICENSE-MIT: LICENSE-MIT\n\u27e87\u27e9 https://lib.rs/crates/rustix: 1.0.1 - rustix\n\u27e88\u27e9 https://lib.rs/crates/rustix/features#feature-termios: +termios\n\u27e89\u27e9 https://lib.rs/crates/windows-sys: outdated - windows-sys\n\u27e810\u27e9 https://lib.rs/crates/windows-sys/features#feature-Win32_Foundation: +Win32_Foundation\n\u27e811\u27e9 https://lib.rs/crates/windows-sys/features#feature-Win32_System_Console: +Win32_System_Console\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 2659,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "114215.2584779"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp6f_91sh3\\terminal_size-0.4.2\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp6f_91sh3\\terminal_size-0.4.2\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp6f_91sh3\\terminal_size-0.4.2\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp6f_91sh3\\terminal_size-0.4.2\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp6f_91sh3\\terminal_size-0.4.2\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.59.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_System",
                "Win32_System_Console",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp6f_91sh3\\terminal_size-0.4.2\\target\\debug\\deps\\libwindows_sys-95796c41d3a356ff.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp6f_91sh3/terminal_size-0.4.2#terminal_size@0.4.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp6f_91sh3\\terminal_size-0.4.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "terminal_size",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp6f_91sh3\\terminal_size-0.4.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp6f_91sh3\\terminal_size-0.4.2\\target\\debug\\deps\\libterminal_size-42be715010b03123.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp6f_91sh3\\terminal_size-0.4.2\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp6f_91sh3\\terminal_size-0.4.2\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp6f_91sh3\\terminal_size-0.4.2\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp6f_91sh3\\terminal_size-0.4.2\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp6f_91sh3\\terminal_size-0.4.2\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.59.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_System",
                "Win32_System_Console",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp6f_91sh3\\terminal_size-0.4.2\\target\\debug\\deps\\libwindows_sys-95796c41d3a356ff.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp6f_91sh3/terminal_size-0.4.2#terminal_size@0.4.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp6f_91sh3\\terminal_size-0.4.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "terminal_size",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp6f_91sh3\\terminal_size-0.4.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: manual implementation of `Option::map`\n  --> src\\windows.rs:25:12\n   |\n25 |       } else if let Some(size) = terminal_size_of(unsafe {\n   |  ____________^\n26 | |         BorrowedHandle::borrow_raw(GetStdHandle(STD_INPUT_HANDLE) as RawHandle)\n27 | |     }) {\n28 | |         Some(size)\n29 | |     } else {\n30 | |         None\n31 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_map\n   = note: `#[warn(clippy::manual_map)]` on by default\nhelp: try\n   |\n25 ~     } else { terminal_size_of(unsafe {\n26 +         BorrowedHandle::borrow_raw(GetStdHandle(STD_INPUT_HANDLE) as RawHandle)\n27 +     }).map(|size| size) }\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_map",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::manual_map)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1177,
                        "byte_start": 992,
                        "column_end": 6,
                        "column_start": 12,
                        "expansion": null,
                        "file_name": "src\\windows.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 31,
                        "line_start": 25,
                        "suggested_replacement": "{ terminal_size_of(unsafe {\n        BorrowedHandle::borrow_raw(GetStdHandle(STD_INPUT_HANDLE) as RawHandle)\n    }).map(|size| size) }",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 57,
                            "highlight_start": 12,
                            "text": "    } else if let Some(size) = terminal_size_of(unsafe {"
                          },
                          {
                            "highlight_end": 80,
                            "highlight_start": 1,
                            "text": "        BorrowedHandle::borrow_raw(GetStdHandle(STD_INPUT_HANDLE) as RawHandle)"
                          },
                          {
                            "highlight_end": 9,
                            "highlight_start": 1,
                            "text": "    }) {"
                          },
                          {
                            "highlight_end": 19,
                            "highlight_start": 1,
                            "text": "        Some(size)"
                          },
                          {
                            "highlight_end": 13,
                            "highlight_start": 1,
                            "text": "    } else {"
                          },
                          {
                            "highlight_end": 13,
                            "highlight_start": 1,
                            "text": "        None"
                          },
                          {
                            "highlight_end": 6,
                            "highlight_start": 1,
                            "text": "    }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_map",
                  "explanation": null
                },
                "level": "warning",
                "message": "manual implementation of `Option::map`",
                "spans": [
                  {
                    "byte_end": 1177,
                    "byte_start": 992,
                    "column_end": 6,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\windows.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 31,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 12,
                        "text": "    } else if let Some(size) = terminal_size_of(unsafe {"
                      },
                      {
                        "highlight_end": 80,
                        "highlight_start": 1,
                        "text": "        BorrowedHandle::borrow_raw(GetStdHandle(STD_INPUT_HANDLE) as RawHandle)"
                      },
                      {
                        "highlight_end": 9,
                        "highlight_start": 1,
                        "text": "    }) {"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "        Some(size)"
                      },
                      {
                        "highlight_end": 13,
                        "highlight_start": 1,
                        "text": "    } else {"
                      },
                      {
                        "highlight_end": 13,
                        "highlight_start": 1,
                        "text": "        None"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp6f_91sh3/terminal_size-0.4.2#terminal_size@0.4.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp6f_91sh3\\terminal_size-0.4.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "terminal_size",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp6f_91sh3\\terminal_size-0.4.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp6f_91sh3\\terminal_size-0.4.2\\target\\debug\\deps\\libterminal_size-df234909be65a704.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 16
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {}
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "terminal_size",
          "version": "0.4.2",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/terminal_size/latest/terminal_size/all.html \"show sidebar\")\n# Crate terminal_sizeCopy item path\n[Settings](https://docs.rs/terminal_size/latest/settings.html)\n[Help](https://docs.rs/terminal_size/latest/help.html)\nSummary[Source](https://docs.rs/terminal_size/latest/src/terminal_size/lib.rs.html#1-41)\nExpand description\nA simple utility for getting the size of a terminal.\nWorks on Linux, macOS, Windows, and illumos.\nThis crate requires a minimum Rust version of 1.63.0 (2022-08-11).\n## [\u00a7](https://docs.rs/terminal_size/latest/terminal_size/#example)Example\n```\nuse terminal_size::{Width, Height, terminal_size};\nlet size = terminal_size();\nif let Some((Width(w), Height(h))) = size {\n  println!(\"Your terminal is {} cols wide and {} lines tall\", w, h);\n} else {\n  println!(\"Unable to get terminal size\");\n}\n```\n\n## Structs[\u00a7](https://docs.rs/terminal_size/latest/terminal_size/#structs)\n\n[Height](https://docs.rs/terminal_size/latest/terminal_size/struct.Height.html \"struct terminal_size::Height\")\n\n\n[Width](https://docs.rs/terminal_size/latest/terminal_size/struct.Width.html \"struct terminal_size::Width\")\n\n## Functions[\u00a7](https://docs.rs/terminal_size/latest/terminal_size/#functions)\n\n[terminal_size](https://docs.rs/terminal_size/latest/terminal_size/fn.terminal_size.html \"fn terminal_size::terminal_size\")\n    Returns the size of the terminal.\n\n[terminal_size_of](https://docs.rs/terminal_size/latest/terminal_size/fn.terminal_size_of.html \"fn terminal_size::terminal_size_of\")\n    Returns the size of the terminal using the given file descriptor, if available.\n\n[terminal_size_using_fd](https://docs.rs/terminal_size/latest/terminal_size/fn.terminal_size_using_fd.html \"fn terminal_size::terminal_size_using_fd\")\u26a0Deprecated\n    Returns the size of the terminal using the given raw file descriptor, if available.\n",
            "markdown_with_citations": "[](https://docs.rs/terminal_size/latest/terminal_size/all.html \"show sidebar\")\n# Crate terminal_sizeCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA simple utility for getting the size of a terminal.\nWorks on Linux, macOS, Windows, and illumos.\nThis crate requires a minimum Rust version of 1.63.0 (2022-08-11).\n## \u00a7\u27e84\u27e9Example\n```\nuse terminal_size::{Width, Height, terminal_size};\nlet size = terminal_size();\nif let Some((Width(w), Height(h))) = size {\n  println!(\"Your terminal is {} cols wide and {} lines tall\", w, h);\n} else {\n  println!(\"Unable to get terminal size\");\n}\n```\n\n## Structs\u00a7\u27e85\u27e9\n\nHeight\u27e86\u27e9\n\n\nWidth\u27e87\u27e9\n\n## Functions\u00a7\u27e88\u27e9\n\nterminal_size\u27e89\u27e9\n    Returns the size of the terminal.\n\nterminal_size_of\u27e810\u27e9\n    Returns the size of the terminal using the given file descriptor, if available.\n\nterminal_size_using_fd\u27e811\u27e9\u26a0Deprecated\n    Returns the size of the terminal using the given raw file descriptor, if available.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/terminal_size/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/terminal_size/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/terminal_size/latest/src/terminal_size/lib.rs.html#1-41: Source\n\u27e84\u27e9 https://docs.rs/terminal_size/latest/terminal_size/#example: \u00a7\n\u27e85\u27e9 https://docs.rs/terminal_size/latest/terminal_size/#structs: \u00a7\n\u27e86\u27e9 https://docs.rs/terminal_size/latest/terminal_size/struct.Height.html: struct terminal_size::Height - Height\n\u27e87\u27e9 https://docs.rs/terminal_size/latest/terminal_size/struct.Width.html: struct terminal_size::Width - Width\n\u27e88\u27e9 https://docs.rs/terminal_size/latest/terminal_size/#functions: \u00a7\n\u27e89\u27e9 https://docs.rs/terminal_size/latest/terminal_size/fn.terminal_size.html: fn terminal_size::terminal_size - terminal_size\n\u27e810\u27e9 https://docs.rs/terminal_size/latest/terminal_size/fn.terminal_size_of.html: fn terminal_size::terminal_size_of - terminal_size_of\n\u27e811\u27e9 https://docs.rs/terminal_size/latest/terminal_size/fn.terminal_size_using_fd.html: fn terminal_size::terminal_size_using_fd - terminal_size_using_fd\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "terminal_size",
          "version": "0.4.2",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/terminal_size/latest/terminal_size/all.html \"show sidebar\")\n# Crate terminal_sizeCopy item path\n[Settings](https://docs.rs/terminal_size/latest/settings.html)\n[Help](https://docs.rs/terminal_size/latest/help.html)\nSummary[Source](https://docs.rs/terminal_size/latest/src/terminal_size/lib.rs.html#1-41)\nExpand description\nA simple utility for getting the size of a terminal.\nWorks on Linux, macOS, Windows, and illumos.\nThis crate requires a minimum Rust version of 1.63.0 (2022-08-11).\n## [\u00a7](https://docs.rs/terminal_size/latest/terminal_size/#example)Example\n```\nuse terminal_size::{Width, Height, terminal_size};\nlet size = terminal_size();\nif let Some((Width(w), Height(h))) = size {\n  println!(\"Your terminal is {} cols wide and {} lines tall\", w, h);\n} else {\n  println!(\"Unable to get terminal size\");\n}\n```\n\n## Structs[\u00a7](https://docs.rs/terminal_size/latest/terminal_size/#structs)\n\n[Height](https://docs.rs/terminal_size/latest/terminal_size/struct.Height.html \"struct terminal_size::Height\")\n\n\n[Width](https://docs.rs/terminal_size/latest/terminal_size/struct.Width.html \"struct terminal_size::Width\")\n\n## Functions[\u00a7](https://docs.rs/terminal_size/latest/terminal_size/#functions)\n\n[terminal_size](https://docs.rs/terminal_size/latest/terminal_size/fn.terminal_size.html \"fn terminal_size::terminal_size\")\n    Returns the size of the terminal.\n\n[terminal_size_of](https://docs.rs/terminal_size/latest/terminal_size/fn.terminal_size_of.html \"fn terminal_size::terminal_size_of\")\n    Returns the size of the terminal using the given file descriptor, if available.\n\n[terminal_size_using_fd](https://docs.rs/terminal_size/latest/terminal_size/fn.terminal_size_using_fd.html \"fn terminal_size::terminal_size_using_fd\")\u26a0Deprecated\n    Returns the size of the terminal using the given raw file descriptor, if available.\n",
            "markdown_with_citations": "[](https://docs.rs/terminal_size/latest/terminal_size/all.html \"show sidebar\")\n# Crate terminal_sizeCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA simple utility for getting the size of a terminal.\nWorks on Linux, macOS, Windows, and illumos.\nThis crate requires a minimum Rust version of 1.63.0 (2022-08-11).\n## \u00a7\u27e84\u27e9Example\n```\nuse terminal_size::{Width, Height, terminal_size};\nlet size = terminal_size();\nif let Some((Width(w), Height(h))) = size {\n  println!(\"Your terminal is {} cols wide and {} lines tall\", w, h);\n} else {\n  println!(\"Unable to get terminal size\");\n}\n```\n\n## Structs\u00a7\u27e85\u27e9\n\nHeight\u27e86\u27e9\n\n\nWidth\u27e87\u27e9\n\n## Functions\u00a7\u27e88\u27e9\n\nterminal_size\u27e89\u27e9\n    Returns the size of the terminal.\n\nterminal_size_of\u27e810\u27e9\n    Returns the size of the terminal using the given file descriptor, if available.\n\nterminal_size_using_fd\u27e811\u27e9\u26a0Deprecated\n    Returns the size of the terminal using the given raw file descriptor, if available.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/terminal_size/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/terminal_size/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/terminal_size/latest/src/terminal_size/lib.rs.html#1-41: Source\n\u27e84\u27e9 https://docs.rs/terminal_size/latest/terminal_size/#example: \u00a7\n\u27e85\u27e9 https://docs.rs/terminal_size/latest/terminal_size/#structs: \u00a7\n\u27e86\u27e9 https://docs.rs/terminal_size/latest/terminal_size/struct.Height.html: struct terminal_size::Height - Height\n\u27e87\u27e9 https://docs.rs/terminal_size/latest/terminal_size/struct.Width.html: struct terminal_size::Width - Width\n\u27e88\u27e9 https://docs.rs/terminal_size/latest/terminal_size/#functions: \u00a7\n\u27e89\u27e9 https://docs.rs/terminal_size/latest/terminal_size/fn.terminal_size.html: fn terminal_size::terminal_size - terminal_size\n\u27e810\u27e9 https://docs.rs/terminal_size/latest/terminal_size/fn.terminal_size_of.html: fn terminal_size::terminal_size_of - terminal_size_of\n\u27e811\u27e9 https://docs.rs/terminal_size/latest/terminal_size/fn.terminal_size_using_fd.html: fn terminal_size::terminal_size_using_fd - terminal_size_using_fd\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `terminal_size` crate is a lightweight utility for retrieving the dimensions of a terminal, supporting Linux, macOS, Windows, and illumos. It provides functions like `terminal_size` and `terminal_size_of` to fetch terminal width and height, with results encapsulated in the `Width` and `Height` structs. The crate requires Rust 1.63.0 or later and offers straightforward usage for terminal-based applications.",
          "feature_summary": null,
          "use_case": "Utilities",
          "score": 6.0,
          "factual_counterfactual": "### Pair 1:\n\u2705 Factual: The `terminal_size` crate supports retrieving the dimensions of the terminal on Linux, macOS, Windows, and illumos.  \n\u274c Counterfactual: The `terminal_size` crate supports retrieving the dimensions of the terminal on all operating systems, including Android and iOS.  \n\n---\n\n### Pair 2:\n\u2705 Factual: The `terminal_size` function returns an `Option` containing the terminal's width and height as `Width` and `Height` structs, or `None` if the size cannot be determined.  \n\u274c Counterfactual: The `terminal_size` function always returns the terminal's dimensions, even if the terminal size cannot be determined.  \n\n---\n\n### Pair 3:\n\u2705 Factual: The `terminal_size` crate requires a minimum Rust version of 1.63.0 to function properly.  \n\u274c Counterfactual: The `terminal_size` crate is compatible with all Rust versions, including versions prior to 1.0.0.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-2bfc40c2-081068c2-1751260424",
      "timestamp": "2025-06-30T05:13:44.185409+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]