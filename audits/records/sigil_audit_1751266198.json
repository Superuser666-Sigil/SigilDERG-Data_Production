[
  {
    "execution_id": "exec-34fcd7b1-384e3380-1751266169",
    "timestamp": "2025-06-30T06:49:29.989330+00:00",
    "sacred_chain": {
      "input_data": "polling",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'polling' -> 'polling'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "polling",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/polling",
            "title": "polling v3.8.0",
            "content": {
              "raw_markdown": "#  polling v3.8.0\nPortable interface to epoll, kqueue, event ports, and IOCP \n  * [ #epoll ](https://crates.io/keywords/epoll)\n  * [ #iocp ](https://crates.io/keywords/iocp)\n  * [ #kqueue ](https://crates.io/keywords/kqueue)\n  * [ #mio ](https://crates.io/keywords/mio)\n\n\n  * [ Readme ](https://crates.io/crates/polling)\n  * [ 44 Versions ](https://crates.io/crates/polling/versions)\n  * [ Dependencies ](https://crates.io/crates/polling/dependencies)\n  * [ Dependents ](https://crates.io/crates/polling/reverse_dependencies)\n\n\n## Metadata\nabout 1 month ago \nv1.63.0 \n[ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0) OR [ MIT ](https://choosealicense.com/licenses/mit)\n57.6 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add polling\nOr add the following line to your Cargo.toml:\npolling = \"3.8.0\"\n## Repository\n[ github.com/smol-rs/polling ](https://github.com/smol-rs/polling)\n## Owners\n## Categories\n  * [Network programming](https://crates.io/categories/network-programming)\n  * [Asynchronous](https://crates.io/categories/asynchronous)\n  * [Operating systems](https://crates.io/categories/os)\n\n\n[ Report crate ](https://crates.io/support?crate=polling&inquire=crate-violation)\n### Stats Overview\n103,487,826 Downloads all time\n44 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  polling v3.8.0\nPortable interface to epoll, kqueue, event ports, and IOCP \n  *  #epoll \u27e81\u27e9\n  *  #iocp \u27e82\u27e9\n  *  #kqueue \u27e83\u27e9\n  *  #mio \u27e84\u27e9\n\n\n  *  Readme \u27e85\u27e9\n  *  44 Versions \u27e86\u27e9\n  *  Dependencies \u27e87\u27e9\n  *  Dependents \u27e88\u27e9\n\n\n## Metadata\nabout 1 month ago \nv1.63.0 \n Apache-2.0 \u27e89\u27e9 OR  MIT \u27e810\u27e9\n57.6 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add polling\nOr add the following line to your Cargo.toml:\npolling = \"3.8.0\"\n## Repository\n github.com/smol-rs/polling \u27e811\u27e9\n## Owners\n## Categories\n  * Network programming\u27e812\u27e9\n  * Asynchronous\u27e813\u27e9\n  * Operating systems\u27e814\u27e9\n\n\n Report crate \u27e815\u27e9\n### Stats Overview\n103,487,826 Downloads all time\n44 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/epoll:  #epoll \n\u27e82\u27e9 https://crates.io/keywords/iocp:  #iocp \n\u27e83\u27e9 https://crates.io/keywords/kqueue:  #kqueue \n\u27e84\u27e9 https://crates.io/keywords/mio:  #mio \n\u27e85\u27e9 https://crates.io/crates/polling:  Readme \n\u27e86\u27e9 https://crates.io/crates/polling/versions:  44 Versions \n\u27e87\u27e9 https://crates.io/crates/polling/dependencies:  Dependencies \n\u27e88\u27e9 https://crates.io/crates/polling/reverse_dependencies:  Dependents \n\u27e89\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e810\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e811\u27e9 https://github.com/smol-rs/polling:  github.com/smol-rs/polling \n\u27e812\u27e9 https://crates.io/categories/network-programming: Network programming\n\u27e813\u27e9 https://crates.io/categories/asynchronous: Asynchronous\n\u27e814\u27e9 https://crates.io/categories/os: Operating systems\n\u27e815\u27e9 https://crates.io/support?crate=polling&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1398,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "119959.8744789"
          },
          "docs_rs": {
            "url": "https://docs.rs/polling",
            "title": "Crate pollingCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/polling/latest/polling/all.html \"show sidebar\")\n# Crate pollingCopy item path\n[Settings](https://docs.rs/polling/latest/settings.html)\n[Help](https://docs.rs/polling/latest/help.html)\nSummary[Source](https://docs.rs/polling/latest/src/polling/lib.rs.html#1-1118)\nExpand description\nPortable interface to epoll, kqueue, event ports, and IOCP.\nSupported platforms:\n  * [epoll](https://en.wikipedia.org/wiki/Epoll): Linux, Android, RedoxOS\n  * [kqueue](https://en.wikipedia.org/wiki/Kqueue): macOS, iOS, tvOS, watchOS, visionOS, FreeBSD, NetBSD, OpenBSD, DragonFly BSD\n  * [event ports](https://illumos.org/man/port_create): illumos, Solaris\n  * [poll](https://en.wikipedia.org/wiki/Poll_\\(Unix\\)): VxWorks, Fuchsia, HermitOS, other Unix systems\n  * [IOCP](https://learn.microsoft.com/en-us/windows/win32/fileio/i-o-completion-ports): Windows, Wine (version 7.13+)\n\n\nBy default, polling is done in oneshot mode, which means interest in I/O events needs to be re-enabled after an event is delivered if we\u2019re interested in the next event of the same kind. However, level and edge triggered modes are also available for certain operating systems. See the documentation of the [`PollMode`](https://docs.rs/polling/latest/polling/enum.PollMode.html \"enum polling::PollMode\") type for more information.\nOnly one thread can be waiting for I/O events at a time.\n## [\u00a7](https://docs.rs/polling/latest/polling/#examples)Examples\n```\nuse polling::{Event, Events, Poller};\nuse std::net::TcpListener;\n// Create a TCP listener.\nlet socket = TcpListener::bind(\"127.0.0.1:8000\")?;\nsocket.set_nonblocking(true)?;\nlet key = 7; // Arbitrary key identifying the socket.\n// Create a poller and register interest in readability on the socket.\nlet poller = Poller::new()?;\nunsafe {\n  poller.add(&socket, Event::readable(key))?;\n}\n// The event loop.\nlet mut events = Events::new();\nloop {\n  // Wait for at least one I/O event.\n  events.clear();\n  poller.wait(&mut events, None)?;\n  for ev in events.iter() {\n    if ev.key == key {\n      // Perform a non-blocking accept operation.\n      socket.accept()?;\n      // Set interest in the next readability event.\n      poller.modify(&socket, Event::readable(key))?;\n    }\n  }\n}\npoller.delete(&socket)?;\n```\n\n## Modules[\u00a7](https://docs.rs/polling/latest/polling/#modules)\n\n[os](https://docs.rs/polling/latest/polling/os/index.html \"mod polling::os\")\n    Platform-specific functionality.\n## Structs[\u00a7](https://docs.rs/polling/latest/polling/#structs)\n\n[Event](https://docs.rs/polling/latest/polling/struct.Event.html \"struct polling::Event\")\n    Indicates that a file descriptor or socket can read or write without blocking.\n\n[Events](https://docs.rs/polling/latest/polling/struct.Events.html \"struct polling::Events\")\n    A container for I/O events.\n\n[Poller](https://docs.rs/polling/latest/polling/struct.Poller.html \"struct polling::Poller\")\n    Waits for I/O events.\n## Enums[\u00a7](https://docs.rs/polling/latest/polling/#enums)\n\n[PollMode](https://docs.rs/polling/latest/polling/enum.PollMode.html \"enum polling::PollMode\")\n    The mode in which the poller waits for I/O events.\n## Traits[\u00a7](https://docs.rs/polling/latest/polling/#traits)\n\n[AsRawSource](https://docs.rs/polling/latest/polling/trait.AsRawSource.html \"trait polling::AsRawSource\")\n    A resource with a raw file descriptor.\n\n[AsSource](https://docs.rs/polling/latest/polling/trait.AsSource.html \"trait polling::AsSource\")\n    A resource with a borrowed file descriptor.\n",
              "markdown_with_citations": "[](https://docs.rs/polling/latest/polling/all.html \"show sidebar\")\n# Crate pollingCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nPortable interface to epoll, kqueue, event ports, and IOCP.\nSupported platforms:\n  * epoll\u27e84\u27e9: Linux, Android, RedoxOS\n  * kqueue\u27e85\u27e9: macOS, iOS, tvOS, watchOS, visionOS, FreeBSD, NetBSD, OpenBSD, DragonFly BSD\n  * event ports\u27e86\u27e9: illumos, Solaris\n  * poll\u27e87\u27e9): VxWorks, Fuchsia, HermitOS, other Unix systems\n  * IOCP\u27e88\u27e9: Windows, Wine (version 7.13+)\n\n\nBy default, polling is done in oneshot mode, which means interest in I/O events needs to be re-enabled after an event is delivered if we\u2019re interested in the next event of the same kind. However, level and edge triggered modes are also available for certain operating systems. See the documentation of the `PollMode`\u27e89\u27e9 type for more information.\nOnly one thread can be waiting for I/O events at a time.\n## \u00a7\u27e810\u27e9Examples\n```\nuse polling::{Event, Events, Poller};\nuse std::net::TcpListener;\n// Create a TCP listener.\nlet socket = TcpListener::bind(\"127.0.0.1:8000\")?;\nsocket.set_nonblocking(true)?;\nlet key = 7; // Arbitrary key identifying the socket.\n// Create a poller and register interest in readability on the socket.\nlet poller = Poller::new()?;\nunsafe {\n  poller.add(&socket, Event::readable(key))?;\n}\n// The event loop.\nlet mut events = Events::new();\nloop {\n  // Wait for at least one I/O event.\n  events.clear();\n  poller.wait(&mut events, None)?;\n  for ev in events.iter() {\n    if ev.key == key {\n      // Perform a non-blocking accept operation.\n      socket.accept()?;\n      // Set interest in the next readability event.\n      poller.modify(&socket, Event::readable(key))?;\n    }\n  }\n}\npoller.delete(&socket)?;\n```\n\n## Modules\u00a7\u27e811\u27e9\n\nos\u27e812\u27e9\n    Platform-specific functionality.\n## Structs\u00a7\u27e813\u27e9\n\nEvent\u27e814\u27e9\n    Indicates that a file descriptor or socket can read or write without blocking.\n\nEvents\u27e815\u27e9\n    A container for I/O events.\n\nPoller\u27e816\u27e9\n    Waits for I/O events.\n## Enums\u00a7\u27e817\u27e9\n\nPollMode\u27e89\u27e9\n    The mode in which the poller waits for I/O events.\n## Traits\u00a7\u27e818\u27e9\n\nAsRawSource\u27e819\u27e9\n    A resource with a raw file descriptor.\n\nAsSource\u27e820\u27e9\n    A resource with a borrowed file descriptor.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/polling/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/polling/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/polling/latest/src/polling/lib.rs.html#1-1118: Source\n\u27e84\u27e9 https://en.wikipedia.org/wiki/Epoll: epoll\n\u27e85\u27e9 https://en.wikipedia.org/wiki/Kqueue: kqueue\n\u27e86\u27e9 https://illumos.org/man/port_create: event ports\n\u27e87\u27e9 https://en.wikipedia.org/wiki/Poll_\\(Unix\\: poll\n\u27e88\u27e9 https://learn.microsoft.com/en-us/windows/win32/fileio/i-o-completion-ports: IOCP\n\u27e89\u27e9 https://docs.rs/polling/latest/polling/enum.PollMode.html: enum polling::PollMode - `PollMode`\n\u27e810\u27e9 https://docs.rs/polling/latest/polling/#examples: \u00a7\n\u27e811\u27e9 https://docs.rs/polling/latest/polling/#modules: \u00a7\n\u27e812\u27e9 https://docs.rs/polling/latest/polling/os/index.html: mod polling::os - os\n\u27e813\u27e9 https://docs.rs/polling/latest/polling/#structs: \u00a7\n\u27e814\u27e9 https://docs.rs/polling/latest/polling/struct.Event.html: struct polling::Event - Event\n\u27e815\u27e9 https://docs.rs/polling/latest/polling/struct.Events.html: struct polling::Events - Events\n\u27e816\u27e9 https://docs.rs/polling/latest/polling/struct.Poller.html: struct polling::Poller - Poller\n\u27e817\u27e9 https://docs.rs/polling/latest/polling/#enums: \u00a7\n\u27e818\u27e9 https://docs.rs/polling/latest/polling/#traits: \u00a7\n\u27e819\u27e9 https://docs.rs/polling/latest/polling/trait.AsRawSource.html: trait polling::AsRawSource - AsRawSource\n\u27e820\u27e9 https://docs.rs/polling/latest/polling/trait.AsSource.html: trait polling::AsSource - AsSource\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 3473,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "119960.5228627"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/polling",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [44 releases](https://lib.rs/crates/polling/versions) (stable)\n3.8.0 |  May 25, 2025   \n---|---  \n3.7.4 |  Nov 7, 2024   \n3.7.3 |  Aug 10, 2024   \n3.7.2 |  Jun 15, 2024   \n0.1.9 |  Sep 6, 2020   \n#**225** in [Asynchronous](https://lib.rs/asynchronous \"Crates to help you deal with events independently of the main program flow, using techniques like futures, promises, waiting, or eventing.\")\nDownload history 1435525/week @ 2025-03-08 1720786/week @ 2025-03-15 2189157/week @ 2025-03-22 1546623/week @ 2025-03-29 1558777/week @ 2025-04-05 1270830/week @ 2025-04-12 1232699/week @ 2025-04-19 1177101/week @ 2025-04-26 1225269/week @ 2025-05-03 1306391/week @ 2025-05-10 1287087/week @ 2025-05-17 1194548/week @ 2025-05-24 1307153/week @ 2025-05-31 1293426/week @ 2025-06-07 1274410/week @ 2025-06-14 1394002/week @ 2025-06-21\n**5,494,174** downloads per month Used in [**6,105** crates (34 directly)](https://lib.rs/crates/polling/rev)\n**Apache-2.0 OR MIT**\n200KB  4K  SLoC\n# polling\n[![Build](https://img.gs/czjpqfbdkz/full/https://github.com/smol-rs/polling/actions/workflows/ci.yml/badge.svg)](https://github.com/smol-rs/polling/actions) [![License](https://img.shields.io/badge/license-Apache--2.0_OR_MIT-blue.svg)](https://github.com/smol-rs/polling) [![Cargo](https://img.shields.io/crates/v/polling.svg)](https://crates.io/crates/polling) [![Documentation](https://img.gs/czjpqfbdkz/full/https://docs.rs/polling/badge.svg)](https://docs.rs/polling)\nPortable interface to epoll, kqueue, event ports, and IOCP.\nSupported platforms:\n  * [epoll](https://en.wikipedia.org/wiki/Epoll): Linux, Android, RedoxOS\n  * [kqueue](https://en.wikipedia.org/wiki/Kqueue): macOS, iOS, tvOS, watchOS, visionOS, FreeBSD, NetBSD, OpenBSD, DragonFly BSD\n  * [event ports](https://illumos.org/man/port_create): illumos, Solaris\n  * [poll](https://en.wikipedia.org/wiki/Poll_\\(Unix\\)): VxWorks, Fuchsia, HermitOS, other Unix systems\n  * [IOCP](https://learn.microsoft.com/en-us/windows/win32/fileio/i-o-completion-ports): Windows, Wine (version 7.13+)\n\n\nBy default, polling is done in oneshot mode, which means interest in I/O events needs to be re-enabled after an event is delivered if we're interested in the next event of the same kind. However, level and edge triggered modes are also available for certain operating systems. See the documentation of the [``PollMode``](https://docs.rs/polling/latest/polling/enum.PollMode.html) type for more information.\nOnly one thread can be waiting for I/O events at a time.\n## Examples\n```\n``use` `polling`::````{`Event`,` Poller```}```;`\n`use` `std`::```net`::``TcpListener`;`\n``//` Create a TCP listener.`\n`let` socket `=` `TcpListener`::``bind`(```\"`127.0.0.1:8000`\"```)``?``;`\nsocket`.``set_nonblocking``(``true``)``?``;`\n`let` key `=` `7``;` ``//` Arbitrary key identifying the socket.`\n``//` Create a poller and register interest in readability on the socket.`\n`let` poller `=` `Poller`::``new`(``)``?``;`\npoller`.``add``(``&`socket`,` `Event`::``readable`(`key`)``)``?``;`\n``//` The event loop.`\n`let` `mut` events `=` `Vec```::``new`(``)``;`\n`loop` ``{`\n  ``//` Wait for at least one I/O event.`\n  events`.``clear``(``)``;`\n  poller`.``wait``(``&``mut` events`,` `None``)``?``;`\n  `for` ev `in` `&`events `{`\n    `if` ev`.`key `==` key `{`\n      ``//` Perform a non-blocking accept operation.`\n      socket`.``accept``(``)``?``;`\n      ``//` Set interest in the next readability event.`\n      poller`.``modify``(``&`socket`,` `Event`::``readable`(`key`)``)``?``;`\n    `}`\n  `}`\n```}``\n`\n```\n\n## License\nLicensed under either of\n  * Apache License, Version 2.0 ([LICENSE-APACHE](https://github.com/smol-rs/polling/blob/eb0159ac46ee3d7831e2f3aadd0cf7a924643f4c/LICENSE-APACHE) or <https://www.apache.org/licenses/LICENSE-2.0>)\n  * MIT license ([LICENSE-MIT](https://github.com/smol-rs/polling/blob/eb0159ac46ee3d7831e2f3aadd0cf7a924643f4c/LICENSE-MIT) or <https://opensource.org/license/mit/>)\n\n\nat your option.\n#### Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n#### Dependencies\n~2\u201316MB  ~173K SLoC\n  * [cfg-if](https://lib.rs/crates/cfg-if \"1\")\n  * [concurrent-queue](https://lib.rs/crates/concurrent-queue \"2.2.0\") win\n  * [pin-project-lite](https://lib.rs/crates/pin-project-lite \"0.2.9\") win\n  * [windows-sys](https://lib.rs/crates/windows-sys \"outdated\") 0.59[+Wdk_Foundation](https://lib.rs/crates/windows-sys/features#feature-Wdk_Foundation)[+Wdk\u2026FileSystem](https://lib.rs/crates/windows-sys/features#feature-Wdk_Storage_FileSystem)[+Win32_Foundation](https://lib.rs/crates/windows-sys/features#feature-Win32_Foundation)[+Win32\u2026WinSock](https://lib.rs/crates/windows-sys/features#feature-Win32_Networking_WinSock)[+Win32_Security](https://lib.rs/crates/windows-sys/features#feature-Win32_Security)[+Win32\u2026FileSystem](https://lib.rs/crates/windows-sys/features#feature-Win32_Storage_FileSystem)[+Win32_System_IO](https://lib.rs/crates/windows-sys/features#feature-Win32_System_IO)[+Win32\u2026LibraryLoader](https://lib.rs/crates/windows-sys/features#feature-Win32_System_LibraryLoader)[+Win32\u2026Threading](https://lib.rs/crates/windows-sys/features#feature-Win32_System_Threading)[+Win32\u2026WindowsProgramming](https://lib.rs/crates/windows-sys/features#feature-Win32_System_WindowsProgramming) win\n  * [hermit-abi](https://lib.rs/crates/hermit-abi \"new\") 0.5 hermit\n  * [rustix](https://lib.rs/crates/rustix \"1.0.5\")[+event](https://lib.rs/crates/rustix/features#feature-event)[+fs](https://lib.rs/crates/rustix/features#feature-fs)[+pipe](https://lib.rs/crates/rustix/features#feature-pipe)[+process](https://lib.rs/crates/rustix/features#feature-process)[+std](https://lib.rs/crates/rustix/features#feature-std)[+time](https://lib.rs/crates/rustix/features#feature-time) unix fuchsia vxworks\n  * [tracing](https://lib.rs/crates/tracing \"0.1.37\")\n\n\n  * dev  [easy-parallel](https://lib.rs/crates/easy-parallel \"3.1.0\")\n  * dev  [fastrand](https://lib.rs/crates/fastrand \"2.0.0\")\n  * dev  [libc](https://lib.rs/crates/libc \"0.2\") unix\n  * dev  [signal-hook](https://lib.rs/crates/signal-hook \"0.3.17\") unix not vita\n  * dev  [socket2](https://lib.rs/crates/socket2 \"0.5.5\")\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  44 releases\u27e81\u27e9 (stable)\n3.8.0 |  May 25, 2025   \n---|---  \n3.7.4 |  Nov 7, 2024   \n3.7.3 |  Aug 10, 2024   \n3.7.2 |  Jun 15, 2024   \n0.1.9 |  Sep 6, 2020   \n#**225** in Asynchronous\u27e82\u27e9\nDownload history 1435525/week @ 2025-03-08 1720786/week @ 2025-03-15 2189157/week @ 2025-03-22 1546623/week @ 2025-03-29 1558777/week @ 2025-04-05 1270830/week @ 2025-04-12 1232699/week @ 2025-04-19 1177101/week @ 2025-04-26 1225269/week @ 2025-05-03 1306391/week @ 2025-05-10 1287087/week @ 2025-05-17 1194548/week @ 2025-05-24 1307153/week @ 2025-05-31 1293426/week @ 2025-06-07 1274410/week @ 2025-06-14 1394002/week @ 2025-06-21\n**5,494,174** downloads per month Used in **6,105** crates (34 directly)\u27e83\u27e9\n**Apache-2.0 OR MIT**\n200KB  4K  SLoC\n# polling\n![Build\u27e84\u27e9](https://github.com/smol-rs/polling/actions) ![License\u27e85\u27e9](https://github.com/smol-rs/polling) ![Cargo\u27e86\u27e9](https://crates.io/crates/polling) ![Documentation\u27e87\u27e9](https://docs.rs/polling)\nPortable interface to epoll, kqueue, event ports, and IOCP.\nSupported platforms:\n  * epoll\u27e88\u27e9: Linux, Android, RedoxOS\n  * kqueue\u27e89\u27e9: macOS, iOS, tvOS, watchOS, visionOS, FreeBSD, NetBSD, OpenBSD, DragonFly BSD\n  * event ports\u27e810\u27e9: illumos, Solaris\n  * poll\u27e811\u27e9): VxWorks, Fuchsia, HermitOS, other Unix systems\n  * IOCP\u27e812\u27e9: Windows, Wine (version 7.13+)\n\n\nBy default, polling is done in oneshot mode, which means interest in I/O events needs to be re-enabled after an event is delivered if we're interested in the next event of the same kind. However, level and edge triggered modes are also available for certain operating systems. See the documentation of the ``PollMode``\u27e813\u27e9 type for more information.\nOnly one thread can be waiting for I/O events at a time.\n## Examples\n```\n``use` `polling`::````{`Event`,` Poller```}```;`\n`use` `std`::```net`::``TcpListener`;`\n``//` Create a TCP listener.`\n`let` socket `=` `TcpListener`::``bind`(```\"`127.0.0.1:8000`\"```)``?``;`\nsocket`.``set_nonblocking``(``true``)``?``;`\n`let` key `=` `7``;` ``//` Arbitrary key identifying the socket.`\n``//` Create a poller and register interest in readability on the socket.`\n`let` poller `=` `Poller`::``new`(``)``?``;`\npoller`.``add``(``&`socket`,` `Event`::``readable`(`key`)``)``?``;`\n``//` The event loop.`\n`let` `mut` events `=` `Vec```::``new`(``)``;`\n`loop` ``{`\n  ``//` Wait for at least one I/O event.`\n  events`.``clear``(``)``;`\n  poller`.``wait``(``&``mut` events`,` `None``)``?``;`\n  `for` ev `in` `&`events `{`\n    `if` ev`.`key `==` key `{`\n      ``//` Perform a non-blocking accept operation.`\n      socket`.``accept``(``)``?``;`\n      ``//` Set interest in the next readability event.`\n      poller`.``modify``(``&`socket`,` `Event`::``readable`(`key`)``)``?``;`\n    `}`\n  `}`\n```}``\n`\n```\n\n## License\nLicensed under either of\n  * Apache License, Version 2.0 (LICENSE-APACHE\u27e814\u27e9 or <https://www.apache.org/licenses/LICENSE-2.0>)\n  * MIT license (LICENSE-MIT\u27e815\u27e9 or <https://opensource.org/license/mit/>)\n\n\nat your option.\n#### Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n#### Dependencies\n~2\u201316MB  ~173K SLoC\n  * cfg-if\u27e816\u27e9\n  * concurrent-queue\u27e817\u27e9 win\n  * pin-project-lite\u27e818\u27e9 win\n  * windows-sys\u27e819\u27e9 0.59+Wdk_Foundation\u27e820\u27e9+Wdk\u2026FileSystem\u27e821\u27e9+Win32_Foundation\u27e822\u27e9+Win32\u2026WinSock\u27e823\u27e9+Win32_Security\u27e824\u27e9+Win32\u2026FileSystem\u27e825\u27e9+Win32_System_IO\u27e826\u27e9+Win32\u2026LibraryLoader\u27e827\u27e9+Win32\u2026Threading\u27e828\u27e9+Win32\u2026WindowsProgramming\u27e829\u27e9 win\n  * hermit-abi\u27e830\u27e9 0.5 hermit\n  * rustix\u27e831\u27e9+event\u27e832\u27e9+fs\u27e833\u27e9+pipe\u27e834\u27e9+process\u27e835\u27e9+std\u27e836\u27e9+time\u27e837\u27e9 unix fuchsia vxworks\n  * tracing\u27e838\u27e9\n\n\n  * dev  easy-parallel\u27e839\u27e9\n  * dev  fastrand\u27e840\u27e9\n  * dev  libc\u27e841\u27e9 unix\n  * dev  signal-hook\u27e842\u27e9 unix not vita\n  * dev  socket2\u27e843\u27e9\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/polling/versions: 44 releases\n\u27e82\u27e9 https://lib.rs/asynchronous: Crates to help you deal with events independently of the main program flow, using techniques like futures, promises, waiting, or eventing. - Asynchronous\n\u27e83\u27e9 https://lib.rs/crates/polling/rev: **6,105** crates (34 directly)\n\u27e84\u27e9 https://img.gs/czjpqfbdkz/full/https://github.com/smol-rs/polling/actions/workflows/ci.yml/badge.svg: ![Build\n\u27e85\u27e9 https://img.shields.io/badge/license-Apache--2.0_OR_MIT-blue.svg: ![License\n\u27e86\u27e9 https://img.shields.io/crates/v/polling.svg: ![Cargo\n\u27e87\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/polling/badge.svg: ![Documentation\n\u27e88\u27e9 https://en.wikipedia.org/wiki/Epoll: epoll\n\u27e89\u27e9 https://en.wikipedia.org/wiki/Kqueue: kqueue\n\u27e810\u27e9 https://illumos.org/man/port_create: event ports\n\u27e811\u27e9 https://en.wikipedia.org/wiki/Poll_\\(Unix\\: poll\n\u27e812\u27e9 https://learn.microsoft.com/en-us/windows/win32/fileio/i-o-completion-ports: IOCP\n\u27e813\u27e9 https://docs.rs/polling/latest/polling/enum.PollMode.html: ``PollMode``\n\u27e814\u27e9 https://github.com/smol-rs/polling/blob/eb0159ac46ee3d7831e2f3aadd0cf7a924643f4c/LICENSE-APACHE: LICENSE-APACHE\n\u27e815\u27e9 https://github.com/smol-rs/polling/blob/eb0159ac46ee3d7831e2f3aadd0cf7a924643f4c/LICENSE-MIT: LICENSE-MIT\n\u27e816\u27e9 https://lib.rs/crates/cfg-if: 1 - cfg-if\n\u27e817\u27e9 https://lib.rs/crates/concurrent-queue: 2.2.0 - concurrent-queue\n\u27e818\u27e9 https://lib.rs/crates/pin-project-lite: 0.2.9 - pin-project-lite\n\u27e819\u27e9 https://lib.rs/crates/windows-sys: outdated - windows-sys\n\u27e820\u27e9 https://lib.rs/crates/windows-sys/features#feature-Wdk_Foundation: +Wdk_Foundation\n\u27e821\u27e9 https://lib.rs/crates/windows-sys/features#feature-Wdk_Storage_FileSystem: +Wdk\u2026FileSystem\n\u27e822\u27e9 https://lib.rs/crates/windows-sys/features#feature-Win32_Foundation: +Win32_Foundation\n\u27e823\u27e9 https://lib.rs/crates/windows-sys/features#feature-Win32_Networking_WinSock: +Win32\u2026WinSock\n\u27e824\u27e9 https://lib.rs/crates/windows-sys/features#feature-Win32_Security: +Win32_Security\n\u27e825\u27e9 https://lib.rs/crates/windows-sys/features#feature-Win32_Storage_FileSystem: +Win32\u2026FileSystem\n\u27e826\u27e9 https://lib.rs/crates/windows-sys/features#feature-Win32_System_IO: +Win32_System_IO\n\u27e827\u27e9 https://lib.rs/crates/windows-sys/features#feature-Win32_System_LibraryLoader: +Win32\u2026LibraryLoader\n\u27e828\u27e9 https://lib.rs/crates/windows-sys/features#feature-Win32_System_Threading: +Win32\u2026Threading\n\u27e829\u27e9 https://lib.rs/crates/windows-sys/features#feature-Win32_System_WindowsProgramming: +Win32\u2026WindowsProgramming\n\u27e830\u27e9 https://lib.rs/crates/hermit-abi: new - hermit-abi\n\u27e831\u27e9 https://lib.rs/crates/rustix: 1.0.5 - rustix\n\u27e832\u27e9 https://lib.rs/crates/rustix/features#feature-event: +event\n\u27e833\u27e9 https://lib.rs/crates/rustix/features#feature-fs: +fs\n\u27e834\u27e9 https://lib.rs/crates/rustix/features#feature-pipe: +pipe\n\u27e835\u27e9 https://lib.rs/crates/rustix/features#feature-process: +process\n\u27e836\u27e9 https://lib.rs/crates/rustix/features#feature-std: +std\n\u27e837\u27e9 https://lib.rs/crates/rustix/features#feature-time: +time\n\u27e838\u27e9 https://lib.rs/crates/tracing: 0.1.37 - tracing\n\u27e839\u27e9 https://lib.rs/crates/easy-parallel: 3.1.0 - easy-parallel\n\u27e840\u27e9 https://lib.rs/crates/fastrand: 2.0.0 - fastrand\n\u27e841\u27e9 https://lib.rs/crates/libc: 0.2 - libc\n\u27e842\u27e9 https://lib.rs/crates/signal-hook: 0.3.17 - signal-hook\n\u27e843\u27e9 https://lib.rs/crates/socket2: 0.5.5 - socket2\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 6356,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "119961.1496079"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.16\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pin_project_lite",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.16\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\deps\\libpin_project_lite-c1a285380b388093.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing-core@0.1.33",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-core-0.1.33\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tracing_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-core-0.1.33\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\deps\\libtracing_core-52878b7c88c8abcd.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-0.1.41\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tracing",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-0.1.41\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\deps\\libtracing-9c158f0bfef4114a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\build\\crossbeam-utils-058eff74cbd551a4\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\build\\crossbeam-utils-058eff74cbd551a4\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\build\\crossbeam-utils-8d9c1eff06854c8d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_utils",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\deps\\libcrossbeam_utils-0f4f22ec3e3ec06e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#concurrent-queue@2.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\concurrent-queue-2.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "concurrent_queue",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\concurrent-queue-2.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\deps\\libconcurrent_queue-053e21edc009283a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.59.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Wdk",
                "Wdk_Foundation",
                "Wdk_Storage",
                "Wdk_Storage_FileSystem",
                "Win32",
                "Win32_Foundation",
                "Win32_Networking",
                "Win32_Networking_WinSock",
                "Win32_Security",
                "Win32_Storage",
                "Win32_Storage_FileSystem",
                "Win32_System",
                "Win32_System_IO",
                "Win32_System_LibraryLoader",
                "Win32_System_Threading",
                "Win32_System_WindowsProgramming",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\deps\\libwindows_sys-d9a4dd4160ff86c9.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp05u3owf6/polling-3.8.0#polling@3.8.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "polling",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\deps\\libpolling-e9b378ccdb6def37.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\build\\crossbeam-utils-058eff74cbd551a4\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\build\\crossbeam-utils-058eff74cbd551a4\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.16\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pin_project_lite",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.16\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\deps\\libpin_project_lite-c1a285380b388093.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing-core@0.1.33",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-core-0.1.33\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tracing_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-core-0.1.33\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\deps\\libtracing_core-52878b7c88c8abcd.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\build\\crossbeam-utils-8d9c1eff06854c8d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-0.1.41\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tracing",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-0.1.41\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\deps\\libtracing-9c158f0bfef4114a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crossbeam_utils",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crossbeam-utils-0.8.21\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\deps\\libcrossbeam_utils-0f4f22ec3e3ec06e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#concurrent-queue@2.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\concurrent-queue-2.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "concurrent_queue",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\concurrent-queue-2.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\deps\\libconcurrent_queue-053e21edc009283a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.59.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Wdk",
                "Wdk_Foundation",
                "Wdk_Storage",
                "Wdk_Storage_FileSystem",
                "Win32",
                "Win32_Foundation",
                "Win32_Networking",
                "Win32_Networking_WinSock",
                "Win32_Security",
                "Win32_Storage",
                "Win32_Storage_FileSystem",
                "Win32_System",
                "Win32_System_IO",
                "Win32_System_LibraryLoader",
                "Win32_System_Threading",
                "Win32_System_WindowsProgramming",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\deps\\libwindows_sys-d9a4dd4160ff86c9.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp05u3owf6/polling-3.8.0#polling@3.8.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "polling",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\iocp\\afd.rs:133:17\n    |\n133 |                 write!(f, \"{}\", name)?;\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n    = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n    |\n133 -                 write!(f, \"{}\", name)?;\n133 +                 write!(f, \"{name}\")?;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::uninlined_format_args)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3922,
                        "byte_start": 3922,
                        "column_end": 29,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\iocp\\afd.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 133,
                        "line_start": 133,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 29,
                            "text": "                write!(f, \"{}\", name)?;"
                          }
                        ]
                      },
                      {
                        "byte_end": 3930,
                        "byte_start": 3924,
                        "column_end": 37,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\iocp\\afd.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 133,
                        "line_start": 133,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 37,
                            "highlight_start": 31,
                            "text": "                write!(f, \"{}\", name)?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 3931,
                    "byte_start": 3910,
                    "column_end": 38,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\iocp\\afd.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 133,
                    "line_start": 133,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 17,
                        "text": "                write!(f, \"{}\", name)?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp05u3owf6/polling-3.8.0#polling@3.8.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "polling",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute used without annotations\n   --> src\\iocp\\afd.rs:205:25\n    |\n205 |                           transmute::<_, unsafe extern \"system\" fn($($arg_ty),*) -> $ret>(addr)\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider adding missing annotations: `transmute::<unsafe extern \"system\" fn() -> isize, unsafe extern \"system\" fn(*mut std::ffi::c_void, *mut windows_sys::Win32::System::IO::IO_STATUS_BLOCK, *mut windows_sys::Win32::System::IO::IO_STATUS_BLOCK) -> i32>`\n...\n226 | / define_ntdll_import! {\n227 | |     /// Cancels an ongoing I/O operation.\n228 | |     fn NtCancelIoFileEx(\n229 | |         FileHandle: HANDLE,\n...   |\n270 | |     ) -> u32;\n271 | | }\n    | |_- in this macro invocation\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n    = note: `#[warn(clippy::missing_transmute_annotations)]` on by default\n    = note: this warning originates in the macro `define_ntdll_import` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::missing_transmute_annotations)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider adding missing annotations",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5832,
                        "byte_start": 5769,
                        "column_end": 88,
                        "column_start": 25,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 4644,
                            "byte_start": 4612,
                            "column_end": 33,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\iocp\\afd.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 173,
                            "line_start": 173,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 33,
                                "highlight_start": 1,
                                "text": "macro_rules! define_ntdll_import {"
                              }
                            ]
                          },
                          "macro_decl_name": "define_ntdll_import!",
                          "span": {
                            "byte_end": 7550,
                            "byte_start": 6229,
                            "column_end": 2,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\iocp\\afd.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 271,
                            "line_start": 226,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 23,
                                "highlight_start": 1,
                                "text": "define_ntdll_import! {"
                              },
                              {
                                "highlight_end": 42,
                                "highlight_start": 1,
                                "text": "    /// Cancels an ongoing I/O operation."
                              },
                              {
                                "highlight_end": 25,
                                "highlight_start": 1,
                                "text": "    fn NtCancelIoFileEx("
                              },
                              {
                                "highlight_end": 28,
                                "highlight_start": 1,
                                "text": "        FileHandle: HANDLE,"
                              },
                              {
                                "highlight_end": 49,
                                "highlight_start": 1,
                                "text": "        IoRequestToCancel: *mut IO_STATUS_BLOCK,"
                              },
                              {
                                "highlight_end": 44,
                                "highlight_start": 1,
                                "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK"
                              },
                              {
                                "highlight_end": 19,
                                "highlight_start": 1,
                                "text": "    ) -> NTSTATUS;"
                              },
                              {
                                "highlight_end": 1,
                                "highlight_start": 1,
                                "text": ""
                              },
                              {
                                "highlight_end": 40,
                                "highlight_start": 1,
                                "text": "    /// Opens or creates a file handle."
                              },
                              {
                                "highlight_end": 41,
                                "highlight_start": 1,
                                "text": "    #[allow(clippy::too_many_arguments)]"
                              },
                              {
                                "highlight_end": 21,
                                "highlight_start": 1,
                                "text": "    fn NtCreateFile("
                              },
                              {
                                "highlight_end": 33,
                                "highlight_start": 1,
                                "text": "        FileHandle: *mut HANDLE,"
                              },
                              {
                                "highlight_end": 28,
                                "highlight_start": 1,
                                "text": "        DesiredAccess: u32,"
                              },
                              {
                                "highlight_end": 50,
                                "highlight_start": 1,
                                "text": "        ObjectAttributes: *mut OBJECT_ATTRIBUTES,"
                              },
                              {
                                "highlight_end": 45,
                                "highlight_start": 1,
                                "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK,"
                              },
                              {
                                "highlight_end": 34,
                                "highlight_start": 1,
                                "text": "        AllocationSize: *mut i64,"
                              },
                              {
                                "highlight_end": 29,
                                "highlight_start": 1,
                                "text": "        FileAttributes: u32,"
                              },
                              {
                                "highlight_end": 26,
                                "highlight_start": 1,
                                "text": "        ShareAccess: u32,"
                              },
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "        CreateDisposition: u32,"
                              },
                              {
                                "highlight_end": 28,
                                "highlight_start": 1,
                                "text": "        CreateOptions: u32,"
                              },
                              {
                                "highlight_end": 27,
                                "highlight_start": 1,
                                "text": "        EaBuffer: *mut (),"
                              },
                              {
                                "highlight_end": 22,
                                "highlight_start": 1,
                                "text": "        EaLength: u32"
                              },
                              {
                                "highlight_end": 19,
                                "highlight_start": 1,
                                "text": "    ) -> NTSTATUS;"
                              },
                              {
                                "highlight_end": 1,
                                "highlight_start": 1,
                                "text": ""
                              },
                              {
                                "highlight_end": 46,
                                "highlight_start": 1,
                                "text": "    /// Runs an I/O control on a file handle."
                              },
                              {
                                "highlight_end": 8,
                                "highlight_start": 1,
                                "text": "    ///"
                              },
                              {
                                "highlight_end": 43,
                                "highlight_start": 1,
                                "text": "    /// Practically equivalent to `ioctl`."
                              },
                              {
                                "highlight_end": 41,
                                "highlight_start": 1,
                                "text": "    #[allow(clippy::too_many_arguments)]"
                              },
                              {
                                "highlight_end": 30,
                                "highlight_start": 1,
                                "text": "    fn NtDeviceIoControlFile("
                              },
                              {
                                "highlight_end": 28,
                                "highlight_start": 1,
                                "text": "        FileHandle: HANDLE,"
                              },
                              {
                                "highlight_end": 23,
                                "highlight_start": 1,
                                "text": "        Event: HANDLE,"
                              },
                              {
                                "highlight_end": 29,
                                "highlight_start": 1,
                                "text": "        ApcRoutine: *mut (),"
                              },
                              {
                                "highlight_end": 29,
                                "highlight_start": 1,
                                "text": "        ApcContext: *mut (),"
                              },
                              {
                                "highlight_end": 45,
                                "highlight_start": 1,
                                "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK,"
                              },
                              {
                                "highlight_end": 28,
                                "highlight_start": 1,
                                "text": "        IoControlCode: u32,"
                              },
                              {
                                "highlight_end": 30,
                                "highlight_start": 1,
                                "text": "        InputBuffer: *mut (),"
                              },
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "        InputBufferLength: u32,"
                              },
                              {
                                "highlight_end": 31,
                                "highlight_start": 1,
                                "text": "        OutputBuffer: *mut (),"
                              },
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "        OutputBufferLength: u32"
                              },
                              {
                                "highlight_end": 19,
                                "highlight_start": 1,
                                "text": "    ) -> NTSTATUS;"
                              },
                              {
                                "highlight_end": 1,
                                "highlight_start": 1,
                                "text": ""
                              },
                              {
                                "highlight_end": 49,
                                "highlight_start": 1,
                                "text": "    /// Converts `NTSTATUS` to a DOS error code."
                              },
                              {
                                "highlight_end": 30,
                                "highlight_start": 1,
                                "text": "    fn RtlNtStatusToDosError("
                              },
                              {
                                "highlight_end": 25,
                                "highlight_start": 1,
                                "text": "        Status: NTSTATUS"
                              },
                              {
                                "highlight_end": 14,
                                "highlight_start": 1,
                                "text": "    ) -> u32;"
                              },
                              {
                                "highlight_end": 2,
                                "highlight_start": 1,
                                "text": "}"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\iocp\\afd.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 205,
                        "line_start": 205,
                        "suggested_replacement": "transmute::<unsafe extern \"system\" fn() -> isize, unsafe extern \"system\" fn(*mut std::ffi::c_void, *mut windows_sys::Win32::System::IO::IO_STATUS_BLOCK, *mut windows_sys::Win32::System::IO::IO_STATUS_BLOCK) -> i32>",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 88,
                            "highlight_start": 25,
                            "text": "                        transmute::<_, unsafe extern \"system\" fn($($arg_ty),*) -> $ret>(addr)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::missing_transmute_annotations",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute used without annotations",
                "spans": [
                  {
                    "byte_end": 5832,
                    "byte_start": 5769,
                    "column_end": 88,
                    "column_start": 25,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 4644,
                        "byte_start": 4612,
                        "column_end": 33,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\iocp\\afd.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 173,
                        "line_start": 173,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 1,
                            "text": "macro_rules! define_ntdll_import {"
                          }
                        ]
                      },
                      "macro_decl_name": "define_ntdll_import!",
                      "span": {
                        "byte_end": 7550,
                        "byte_start": 6229,
                        "column_end": 2,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\iocp\\afd.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 271,
                        "line_start": 226,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 1,
                            "text": "define_ntdll_import! {"
                          },
                          {
                            "highlight_end": 42,
                            "highlight_start": 1,
                            "text": "    /// Cancels an ongoing I/O operation."
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "    fn NtCancelIoFileEx("
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "        FileHandle: HANDLE,"
                          },
                          {
                            "highlight_end": 49,
                            "highlight_start": 1,
                            "text": "        IoRequestToCancel: *mut IO_STATUS_BLOCK,"
                          },
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK"
                          },
                          {
                            "highlight_end": 19,
                            "highlight_start": 1,
                            "text": "    ) -> NTSTATUS;"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          },
                          {
                            "highlight_end": 40,
                            "highlight_start": 1,
                            "text": "    /// Opens or creates a file handle."
                          },
                          {
                            "highlight_end": 41,
                            "highlight_start": 1,
                            "text": "    #[allow(clippy::too_many_arguments)]"
                          },
                          {
                            "highlight_end": 21,
                            "highlight_start": 1,
                            "text": "    fn NtCreateFile("
                          },
                          {
                            "highlight_end": 33,
                            "highlight_start": 1,
                            "text": "        FileHandle: *mut HANDLE,"
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "        DesiredAccess: u32,"
                          },
                          {
                            "highlight_end": 50,
                            "highlight_start": 1,
                            "text": "        ObjectAttributes: *mut OBJECT_ATTRIBUTES,"
                          },
                          {
                            "highlight_end": 45,
                            "highlight_start": 1,
                            "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK,"
                          },
                          {
                            "highlight_end": 34,
                            "highlight_start": 1,
                            "text": "        AllocationSize: *mut i64,"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "        FileAttributes: u32,"
                          },
                          {
                            "highlight_end": 26,
                            "highlight_start": 1,
                            "text": "        ShareAccess: u32,"
                          },
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "        CreateDisposition: u32,"
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "        CreateOptions: u32,"
                          },
                          {
                            "highlight_end": 27,
                            "highlight_start": 1,
                            "text": "        EaBuffer: *mut (),"
                          },
                          {
                            "highlight_end": 22,
                            "highlight_start": 1,
                            "text": "        EaLength: u32"
                          },
                          {
                            "highlight_end": 19,
                            "highlight_start": 1,
                            "text": "    ) -> NTSTATUS;"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          },
                          {
                            "highlight_end": 46,
                            "highlight_start": 1,
                            "text": "    /// Runs an I/O control on a file handle."
                          },
                          {
                            "highlight_end": 8,
                            "highlight_start": 1,
                            "text": "    ///"
                          },
                          {
                            "highlight_end": 43,
                            "highlight_start": 1,
                            "text": "    /// Practically equivalent to `ioctl`."
                          },
                          {
                            "highlight_end": 41,
                            "highlight_start": 1,
                            "text": "    #[allow(clippy::too_many_arguments)]"
                          },
                          {
                            "highlight_end": 30,
                            "highlight_start": 1,
                            "text": "    fn NtDeviceIoControlFile("
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "        FileHandle: HANDLE,"
                          },
                          {
                            "highlight_end": 23,
                            "highlight_start": 1,
                            "text": "        Event: HANDLE,"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "        ApcRoutine: *mut (),"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "        ApcContext: *mut (),"
                          },
                          {
                            "highlight_end": 45,
                            "highlight_start": 1,
                            "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK,"
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "        IoControlCode: u32,"
                          },
                          {
                            "highlight_end": 30,
                            "highlight_start": 1,
                            "text": "        InputBuffer: *mut (),"
                          },
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "        InputBufferLength: u32,"
                          },
                          {
                            "highlight_end": 31,
                            "highlight_start": 1,
                            "text": "        OutputBuffer: *mut (),"
                          },
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "        OutputBufferLength: u32"
                          },
                          {
                            "highlight_end": 19,
                            "highlight_start": 1,
                            "text": "    ) -> NTSTATUS;"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          },
                          {
                            "highlight_end": 49,
                            "highlight_start": 1,
                            "text": "    /// Converts `NTSTATUS` to a DOS error code."
                          },
                          {
                            "highlight_end": 30,
                            "highlight_start": 1,
                            "text": "    fn RtlNtStatusToDosError("
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "        Status: NTSTATUS"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "    ) -> u32;"
                          },
                          {
                            "highlight_end": 2,
                            "highlight_start": 1,
                            "text": "}"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\iocp\\afd.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 205,
                    "line_start": 205,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 88,
                        "highlight_start": 25,
                        "text": "                        transmute::<_, unsafe extern \"system\" fn($($arg_ty),*) -> $ret>(addr)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp05u3owf6/polling-3.8.0#polling@3.8.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "polling",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute used without annotations\n   --> src\\iocp\\afd.rs:205:25\n    |\n205 |                           transmute::<_, unsafe extern \"system\" fn($($arg_ty),*) -> $ret>(addr)\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider adding missing annotations: `transmute::<unsafe extern \"system\" fn() -> isize, unsafe extern \"system\" fn(*mut *mut std::ffi::c_void, u32, *mut windows_sys::Wdk::Foundation::OBJECT_ATTRIBUTES, *mut windows_sys::Win32::System::IO::IO_STATUS_BLOCK, *mut i64, u32, u32, u32, u32, *mut (), u32) -> i32>`\n...\n226 | / define_ntdll_import! {\n227 | |     /// Cancels an ongoing I/O operation.\n228 | |     fn NtCancelIoFileEx(\n229 | |         FileHandle: HANDLE,\n...   |\n270 | |     ) -> u32;\n271 | | }\n    | |_- in this macro invocation\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n    = note: this warning originates in the macro `define_ntdll_import` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider adding missing annotations",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5832,
                        "byte_start": 5769,
                        "column_end": 88,
                        "column_start": 25,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 4644,
                            "byte_start": 4612,
                            "column_end": 33,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\iocp\\afd.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 173,
                            "line_start": 173,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 33,
                                "highlight_start": 1,
                                "text": "macro_rules! define_ntdll_import {"
                              }
                            ]
                          },
                          "macro_decl_name": "define_ntdll_import!",
                          "span": {
                            "byte_end": 7550,
                            "byte_start": 6229,
                            "column_end": 2,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\iocp\\afd.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 271,
                            "line_start": 226,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 23,
                                "highlight_start": 1,
                                "text": "define_ntdll_import! {"
                              },
                              {
                                "highlight_end": 42,
                                "highlight_start": 1,
                                "text": "    /// Cancels an ongoing I/O operation."
                              },
                              {
                                "highlight_end": 25,
                                "highlight_start": 1,
                                "text": "    fn NtCancelIoFileEx("
                              },
                              {
                                "highlight_end": 28,
                                "highlight_start": 1,
                                "text": "        FileHandle: HANDLE,"
                              },
                              {
                                "highlight_end": 49,
                                "highlight_start": 1,
                                "text": "        IoRequestToCancel: *mut IO_STATUS_BLOCK,"
                              },
                              {
                                "highlight_end": 44,
                                "highlight_start": 1,
                                "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK"
                              },
                              {
                                "highlight_end": 19,
                                "highlight_start": 1,
                                "text": "    ) -> NTSTATUS;"
                              },
                              {
                                "highlight_end": 1,
                                "highlight_start": 1,
                                "text": ""
                              },
                              {
                                "highlight_end": 40,
                                "highlight_start": 1,
                                "text": "    /// Opens or creates a file handle."
                              },
                              {
                                "highlight_end": 41,
                                "highlight_start": 1,
                                "text": "    #[allow(clippy::too_many_arguments)]"
                              },
                              {
                                "highlight_end": 21,
                                "highlight_start": 1,
                                "text": "    fn NtCreateFile("
                              },
                              {
                                "highlight_end": 33,
                                "highlight_start": 1,
                                "text": "        FileHandle: *mut HANDLE,"
                              },
                              {
                                "highlight_end": 28,
                                "highlight_start": 1,
                                "text": "        DesiredAccess: u32,"
                              },
                              {
                                "highlight_end": 50,
                                "highlight_start": 1,
                                "text": "        ObjectAttributes: *mut OBJECT_ATTRIBUTES,"
                              },
                              {
                                "highlight_end": 45,
                                "highlight_start": 1,
                                "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK,"
                              },
                              {
                                "highlight_end": 34,
                                "highlight_start": 1,
                                "text": "        AllocationSize: *mut i64,"
                              },
                              {
                                "highlight_end": 29,
                                "highlight_start": 1,
                                "text": "        FileAttributes: u32,"
                              },
                              {
                                "highlight_end": 26,
                                "highlight_start": 1,
                                "text": "        ShareAccess: u32,"
                              },
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "        CreateDisposition: u32,"
                              },
                              {
                                "highlight_end": 28,
                                "highlight_start": 1,
                                "text": "        CreateOptions: u32,"
                              },
                              {
                                "highlight_end": 27,
                                "highlight_start": 1,
                                "text": "        EaBuffer: *mut (),"
                              },
                              {
                                "highlight_end": 22,
                                "highlight_start": 1,
                                "text": "        EaLength: u32"
                              },
                              {
                                "highlight_end": 19,
                                "highlight_start": 1,
                                "text": "    ) -> NTSTATUS;"
                              },
                              {
                                "highlight_end": 1,
                                "highlight_start": 1,
                                "text": ""
                              },
                              {
                                "highlight_end": 46,
                                "highlight_start": 1,
                                "text": "    /// Runs an I/O control on a file handle."
                              },
                              {
                                "highlight_end": 8,
                                "highlight_start": 1,
                                "text": "    ///"
                              },
                              {
                                "highlight_end": 43,
                                "highlight_start": 1,
                                "text": "    /// Practically equivalent to `ioctl`."
                              },
                              {
                                "highlight_end": 41,
                                "highlight_start": 1,
                                "text": "    #[allow(clippy::too_many_arguments)]"
                              },
                              {
                                "highlight_end": 30,
                                "highlight_start": 1,
                                "text": "    fn NtDeviceIoControlFile("
                              },
                              {
                                "highlight_end": 28,
                                "highlight_start": 1,
                                "text": "        FileHandle: HANDLE,"
                              },
                              {
                                "highlight_end": 23,
                                "highlight_start": 1,
                                "text": "        Event: HANDLE,"
                              },
                              {
                                "highlight_end": 29,
                                "highlight_start": 1,
                                "text": "        ApcRoutine: *mut (),"
                              },
                              {
                                "highlight_end": 29,
                                "highlight_start": 1,
                                "text": "        ApcContext: *mut (),"
                              },
                              {
                                "highlight_end": 45,
                                "highlight_start": 1,
                                "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK,"
                              },
                              {
                                "highlight_end": 28,
                                "highlight_start": 1,
                                "text": "        IoControlCode: u32,"
                              },
                              {
                                "highlight_end": 30,
                                "highlight_start": 1,
                                "text": "        InputBuffer: *mut (),"
                              },
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "        InputBufferLength: u32,"
                              },
                              {
                                "highlight_end": 31,
                                "highlight_start": 1,
                                "text": "        OutputBuffer: *mut (),"
                              },
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "        OutputBufferLength: u32"
                              },
                              {
                                "highlight_end": 19,
                                "highlight_start": 1,
                                "text": "    ) -> NTSTATUS;"
                              },
                              {
                                "highlight_end": 1,
                                "highlight_start": 1,
                                "text": ""
                              },
                              {
                                "highlight_end": 49,
                                "highlight_start": 1,
                                "text": "    /// Converts `NTSTATUS` to a DOS error code."
                              },
                              {
                                "highlight_end": 30,
                                "highlight_start": 1,
                                "text": "    fn RtlNtStatusToDosError("
                              },
                              {
                                "highlight_end": 25,
                                "highlight_start": 1,
                                "text": "        Status: NTSTATUS"
                              },
                              {
                                "highlight_end": 14,
                                "highlight_start": 1,
                                "text": "    ) -> u32;"
                              },
                              {
                                "highlight_end": 2,
                                "highlight_start": 1,
                                "text": "}"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\iocp\\afd.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 205,
                        "line_start": 205,
                        "suggested_replacement": "transmute::<unsafe extern \"system\" fn() -> isize, unsafe extern \"system\" fn(*mut *mut std::ffi::c_void, u32, *mut windows_sys::Wdk::Foundation::OBJECT_ATTRIBUTES, *mut windows_sys::Win32::System::IO::IO_STATUS_BLOCK, *mut i64, u32, u32, u32, u32, *mut (), u32) -> i32>",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 88,
                            "highlight_start": 25,
                            "text": "                        transmute::<_, unsafe extern \"system\" fn($($arg_ty),*) -> $ret>(addr)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::missing_transmute_annotations",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute used without annotations",
                "spans": [
                  {
                    "byte_end": 5832,
                    "byte_start": 5769,
                    "column_end": 88,
                    "column_start": 25,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 4644,
                        "byte_start": 4612,
                        "column_end": 33,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\iocp\\afd.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 173,
                        "line_start": 173,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 1,
                            "text": "macro_rules! define_ntdll_import {"
                          }
                        ]
                      },
                      "macro_decl_name": "define_ntdll_import!",
                      "span": {
                        "byte_end": 7550,
                        "byte_start": 6229,
                        "column_end": 2,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\iocp\\afd.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 271,
                        "line_start": 226,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 1,
                            "text": "define_ntdll_import! {"
                          },
                          {
                            "highlight_end": 42,
                            "highlight_start": 1,
                            "text": "    /// Cancels an ongoing I/O operation."
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "    fn NtCancelIoFileEx("
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "        FileHandle: HANDLE,"
                          },
                          {
                            "highlight_end": 49,
                            "highlight_start": 1,
                            "text": "        IoRequestToCancel: *mut IO_STATUS_BLOCK,"
                          },
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK"
                          },
                          {
                            "highlight_end": 19,
                            "highlight_start": 1,
                            "text": "    ) -> NTSTATUS;"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          },
                          {
                            "highlight_end": 40,
                            "highlight_start": 1,
                            "text": "    /// Opens or creates a file handle."
                          },
                          {
                            "highlight_end": 41,
                            "highlight_start": 1,
                            "text": "    #[allow(clippy::too_many_arguments)]"
                          },
                          {
                            "highlight_end": 21,
                            "highlight_start": 1,
                            "text": "    fn NtCreateFile("
                          },
                          {
                            "highlight_end": 33,
                            "highlight_start": 1,
                            "text": "        FileHandle: *mut HANDLE,"
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "        DesiredAccess: u32,"
                          },
                          {
                            "highlight_end": 50,
                            "highlight_start": 1,
                            "text": "        ObjectAttributes: *mut OBJECT_ATTRIBUTES,"
                          },
                          {
                            "highlight_end": 45,
                            "highlight_start": 1,
                            "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK,"
                          },
                          {
                            "highlight_end": 34,
                            "highlight_start": 1,
                            "text": "        AllocationSize: *mut i64,"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "        FileAttributes: u32,"
                          },
                          {
                            "highlight_end": 26,
                            "highlight_start": 1,
                            "text": "        ShareAccess: u32,"
                          },
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "        CreateDisposition: u32,"
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "        CreateOptions: u32,"
                          },
                          {
                            "highlight_end": 27,
                            "highlight_start": 1,
                            "text": "        EaBuffer: *mut (),"
                          },
                          {
                            "highlight_end": 22,
                            "highlight_start": 1,
                            "text": "        EaLength: u32"
                          },
                          {
                            "highlight_end": 19,
                            "highlight_start": 1,
                            "text": "    ) -> NTSTATUS;"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          },
                          {
                            "highlight_end": 46,
                            "highlight_start": 1,
                            "text": "    /// Runs an I/O control on a file handle."
                          },
                          {
                            "highlight_end": 8,
                            "highlight_start": 1,
                            "text": "    ///"
                          },
                          {
                            "highlight_end": 43,
                            "highlight_start": 1,
                            "text": "    /// Practically equivalent to `ioctl`."
                          },
                          {
                            "highlight_end": 41,
                            "highlight_start": 1,
                            "text": "    #[allow(clippy::too_many_arguments)]"
                          },
                          {
                            "highlight_end": 30,
                            "highlight_start": 1,
                            "text": "    fn NtDeviceIoControlFile("
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "        FileHandle: HANDLE,"
                          },
                          {
                            "highlight_end": 23,
                            "highlight_start": 1,
                            "text": "        Event: HANDLE,"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "        ApcRoutine: *mut (),"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "        ApcContext: *mut (),"
                          },
                          {
                            "highlight_end": 45,
                            "highlight_start": 1,
                            "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK,"
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "        IoControlCode: u32,"
                          },
                          {
                            "highlight_end": 30,
                            "highlight_start": 1,
                            "text": "        InputBuffer: *mut (),"
                          },
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "        InputBufferLength: u32,"
                          },
                          {
                            "highlight_end": 31,
                            "highlight_start": 1,
                            "text": "        OutputBuffer: *mut (),"
                          },
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "        OutputBufferLength: u32"
                          },
                          {
                            "highlight_end": 19,
                            "highlight_start": 1,
                            "text": "    ) -> NTSTATUS;"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          },
                          {
                            "highlight_end": 49,
                            "highlight_start": 1,
                            "text": "    /// Converts `NTSTATUS` to a DOS error code."
                          },
                          {
                            "highlight_end": 30,
                            "highlight_start": 1,
                            "text": "    fn RtlNtStatusToDosError("
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "        Status: NTSTATUS"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "    ) -> u32;"
                          },
                          {
                            "highlight_end": 2,
                            "highlight_start": 1,
                            "text": "}"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\iocp\\afd.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 205,
                    "line_start": 205,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 88,
                        "highlight_start": 25,
                        "text": "                        transmute::<_, unsafe extern \"system\" fn($($arg_ty),*) -> $ret>(addr)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp05u3owf6/polling-3.8.0#polling@3.8.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "polling",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute used without annotations\n   --> src\\iocp\\afd.rs:205:25\n    |\n205 |                           transmute::<_, unsafe extern \"system\" fn($($arg_ty),*) -> $ret>(addr)\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider adding missing annotations: `transmute::<unsafe extern \"system\" fn() -> isize, unsafe extern \"system\" fn(*mut std::ffi::c_void, *mut std::ffi::c_void, *mut (), *mut (), *mut windows_sys::Win32::System::IO::IO_STATUS_BLOCK, u32, *mut (), u32, *mut (), u32) -> i32>`\n...\n226 | / define_ntdll_import! {\n227 | |     /// Cancels an ongoing I/O operation.\n228 | |     fn NtCancelIoFileEx(\n229 | |         FileHandle: HANDLE,\n...   |\n270 | |     ) -> u32;\n271 | | }\n    | |_- in this macro invocation\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n    = note: this warning originates in the macro `define_ntdll_import` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider adding missing annotations",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5832,
                        "byte_start": 5769,
                        "column_end": 88,
                        "column_start": 25,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 4644,
                            "byte_start": 4612,
                            "column_end": 33,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\iocp\\afd.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 173,
                            "line_start": 173,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 33,
                                "highlight_start": 1,
                                "text": "macro_rules! define_ntdll_import {"
                              }
                            ]
                          },
                          "macro_decl_name": "define_ntdll_import!",
                          "span": {
                            "byte_end": 7550,
                            "byte_start": 6229,
                            "column_end": 2,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\iocp\\afd.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 271,
                            "line_start": 226,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 23,
                                "highlight_start": 1,
                                "text": "define_ntdll_import! {"
                              },
                              {
                                "highlight_end": 42,
                                "highlight_start": 1,
                                "text": "    /// Cancels an ongoing I/O operation."
                              },
                              {
                                "highlight_end": 25,
                                "highlight_start": 1,
                                "text": "    fn NtCancelIoFileEx("
                              },
                              {
                                "highlight_end": 28,
                                "highlight_start": 1,
                                "text": "        FileHandle: HANDLE,"
                              },
                              {
                                "highlight_end": 49,
                                "highlight_start": 1,
                                "text": "        IoRequestToCancel: *mut IO_STATUS_BLOCK,"
                              },
                              {
                                "highlight_end": 44,
                                "highlight_start": 1,
                                "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK"
                              },
                              {
                                "highlight_end": 19,
                                "highlight_start": 1,
                                "text": "    ) -> NTSTATUS;"
                              },
                              {
                                "highlight_end": 1,
                                "highlight_start": 1,
                                "text": ""
                              },
                              {
                                "highlight_end": 40,
                                "highlight_start": 1,
                                "text": "    /// Opens or creates a file handle."
                              },
                              {
                                "highlight_end": 41,
                                "highlight_start": 1,
                                "text": "    #[allow(clippy::too_many_arguments)]"
                              },
                              {
                                "highlight_end": 21,
                                "highlight_start": 1,
                                "text": "    fn NtCreateFile("
                              },
                              {
                                "highlight_end": 33,
                                "highlight_start": 1,
                                "text": "        FileHandle: *mut HANDLE,"
                              },
                              {
                                "highlight_end": 28,
                                "highlight_start": 1,
                                "text": "        DesiredAccess: u32,"
                              },
                              {
                                "highlight_end": 50,
                                "highlight_start": 1,
                                "text": "        ObjectAttributes: *mut OBJECT_ATTRIBUTES,"
                              },
                              {
                                "highlight_end": 45,
                                "highlight_start": 1,
                                "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK,"
                              },
                              {
                                "highlight_end": 34,
                                "highlight_start": 1,
                                "text": "        AllocationSize: *mut i64,"
                              },
                              {
                                "highlight_end": 29,
                                "highlight_start": 1,
                                "text": "        FileAttributes: u32,"
                              },
                              {
                                "highlight_end": 26,
                                "highlight_start": 1,
                                "text": "        ShareAccess: u32,"
                              },
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "        CreateDisposition: u32,"
                              },
                              {
                                "highlight_end": 28,
                                "highlight_start": 1,
                                "text": "        CreateOptions: u32,"
                              },
                              {
                                "highlight_end": 27,
                                "highlight_start": 1,
                                "text": "        EaBuffer: *mut (),"
                              },
                              {
                                "highlight_end": 22,
                                "highlight_start": 1,
                                "text": "        EaLength: u32"
                              },
                              {
                                "highlight_end": 19,
                                "highlight_start": 1,
                                "text": "    ) -> NTSTATUS;"
                              },
                              {
                                "highlight_end": 1,
                                "highlight_start": 1,
                                "text": ""
                              },
                              {
                                "highlight_end": 46,
                                "highlight_start": 1,
                                "text": "    /// Runs an I/O control on a file handle."
                              },
                              {
                                "highlight_end": 8,
                                "highlight_start": 1,
                                "text": "    ///"
                              },
                              {
                                "highlight_end": 43,
                                "highlight_start": 1,
                                "text": "    /// Practically equivalent to `ioctl`."
                              },
                              {
                                "highlight_end": 41,
                                "highlight_start": 1,
                                "text": "    #[allow(clippy::too_many_arguments)]"
                              },
                              {
                                "highlight_end": 30,
                                "highlight_start": 1,
                                "text": "    fn NtDeviceIoControlFile("
                              },
                              {
                                "highlight_end": 28,
                                "highlight_start": 1,
                                "text": "        FileHandle: HANDLE,"
                              },
                              {
                                "highlight_end": 23,
                                "highlight_start": 1,
                                "text": "        Event: HANDLE,"
                              },
                              {
                                "highlight_end": 29,
                                "highlight_start": 1,
                                "text": "        ApcRoutine: *mut (),"
                              },
                              {
                                "highlight_end": 29,
                                "highlight_start": 1,
                                "text": "        ApcContext: *mut (),"
                              },
                              {
                                "highlight_end": 45,
                                "highlight_start": 1,
                                "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK,"
                              },
                              {
                                "highlight_end": 28,
                                "highlight_start": 1,
                                "text": "        IoControlCode: u32,"
                              },
                              {
                                "highlight_end": 30,
                                "highlight_start": 1,
                                "text": "        InputBuffer: *mut (),"
                              },
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "        InputBufferLength: u32,"
                              },
                              {
                                "highlight_end": 31,
                                "highlight_start": 1,
                                "text": "        OutputBuffer: *mut (),"
                              },
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "        OutputBufferLength: u32"
                              },
                              {
                                "highlight_end": 19,
                                "highlight_start": 1,
                                "text": "    ) -> NTSTATUS;"
                              },
                              {
                                "highlight_end": 1,
                                "highlight_start": 1,
                                "text": ""
                              },
                              {
                                "highlight_end": 49,
                                "highlight_start": 1,
                                "text": "    /// Converts `NTSTATUS` to a DOS error code."
                              },
                              {
                                "highlight_end": 30,
                                "highlight_start": 1,
                                "text": "    fn RtlNtStatusToDosError("
                              },
                              {
                                "highlight_end": 25,
                                "highlight_start": 1,
                                "text": "        Status: NTSTATUS"
                              },
                              {
                                "highlight_end": 14,
                                "highlight_start": 1,
                                "text": "    ) -> u32;"
                              },
                              {
                                "highlight_end": 2,
                                "highlight_start": 1,
                                "text": "}"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\iocp\\afd.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 205,
                        "line_start": 205,
                        "suggested_replacement": "transmute::<unsafe extern \"system\" fn() -> isize, unsafe extern \"system\" fn(*mut std::ffi::c_void, *mut std::ffi::c_void, *mut (), *mut (), *mut windows_sys::Win32::System::IO::IO_STATUS_BLOCK, u32, *mut (), u32, *mut (), u32) -> i32>",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 88,
                            "highlight_start": 25,
                            "text": "                        transmute::<_, unsafe extern \"system\" fn($($arg_ty),*) -> $ret>(addr)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::missing_transmute_annotations",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute used without annotations",
                "spans": [
                  {
                    "byte_end": 5832,
                    "byte_start": 5769,
                    "column_end": 88,
                    "column_start": 25,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 4644,
                        "byte_start": 4612,
                        "column_end": 33,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\iocp\\afd.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 173,
                        "line_start": 173,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 1,
                            "text": "macro_rules! define_ntdll_import {"
                          }
                        ]
                      },
                      "macro_decl_name": "define_ntdll_import!",
                      "span": {
                        "byte_end": 7550,
                        "byte_start": 6229,
                        "column_end": 2,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\iocp\\afd.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 271,
                        "line_start": 226,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 1,
                            "text": "define_ntdll_import! {"
                          },
                          {
                            "highlight_end": 42,
                            "highlight_start": 1,
                            "text": "    /// Cancels an ongoing I/O operation."
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "    fn NtCancelIoFileEx("
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "        FileHandle: HANDLE,"
                          },
                          {
                            "highlight_end": 49,
                            "highlight_start": 1,
                            "text": "        IoRequestToCancel: *mut IO_STATUS_BLOCK,"
                          },
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK"
                          },
                          {
                            "highlight_end": 19,
                            "highlight_start": 1,
                            "text": "    ) -> NTSTATUS;"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          },
                          {
                            "highlight_end": 40,
                            "highlight_start": 1,
                            "text": "    /// Opens or creates a file handle."
                          },
                          {
                            "highlight_end": 41,
                            "highlight_start": 1,
                            "text": "    #[allow(clippy::too_many_arguments)]"
                          },
                          {
                            "highlight_end": 21,
                            "highlight_start": 1,
                            "text": "    fn NtCreateFile("
                          },
                          {
                            "highlight_end": 33,
                            "highlight_start": 1,
                            "text": "        FileHandle: *mut HANDLE,"
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "        DesiredAccess: u32,"
                          },
                          {
                            "highlight_end": 50,
                            "highlight_start": 1,
                            "text": "        ObjectAttributes: *mut OBJECT_ATTRIBUTES,"
                          },
                          {
                            "highlight_end": 45,
                            "highlight_start": 1,
                            "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK,"
                          },
                          {
                            "highlight_end": 34,
                            "highlight_start": 1,
                            "text": "        AllocationSize: *mut i64,"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "        FileAttributes: u32,"
                          },
                          {
                            "highlight_end": 26,
                            "highlight_start": 1,
                            "text": "        ShareAccess: u32,"
                          },
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "        CreateDisposition: u32,"
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "        CreateOptions: u32,"
                          },
                          {
                            "highlight_end": 27,
                            "highlight_start": 1,
                            "text": "        EaBuffer: *mut (),"
                          },
                          {
                            "highlight_end": 22,
                            "highlight_start": 1,
                            "text": "        EaLength: u32"
                          },
                          {
                            "highlight_end": 19,
                            "highlight_start": 1,
                            "text": "    ) -> NTSTATUS;"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          },
                          {
                            "highlight_end": 46,
                            "highlight_start": 1,
                            "text": "    /// Runs an I/O control on a file handle."
                          },
                          {
                            "highlight_end": 8,
                            "highlight_start": 1,
                            "text": "    ///"
                          },
                          {
                            "highlight_end": 43,
                            "highlight_start": 1,
                            "text": "    /// Practically equivalent to `ioctl`."
                          },
                          {
                            "highlight_end": 41,
                            "highlight_start": 1,
                            "text": "    #[allow(clippy::too_many_arguments)]"
                          },
                          {
                            "highlight_end": 30,
                            "highlight_start": 1,
                            "text": "    fn NtDeviceIoControlFile("
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "        FileHandle: HANDLE,"
                          },
                          {
                            "highlight_end": 23,
                            "highlight_start": 1,
                            "text": "        Event: HANDLE,"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "        ApcRoutine: *mut (),"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "        ApcContext: *mut (),"
                          },
                          {
                            "highlight_end": 45,
                            "highlight_start": 1,
                            "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK,"
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "        IoControlCode: u32,"
                          },
                          {
                            "highlight_end": 30,
                            "highlight_start": 1,
                            "text": "        InputBuffer: *mut (),"
                          },
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "        InputBufferLength: u32,"
                          },
                          {
                            "highlight_end": 31,
                            "highlight_start": 1,
                            "text": "        OutputBuffer: *mut (),"
                          },
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "        OutputBufferLength: u32"
                          },
                          {
                            "highlight_end": 19,
                            "highlight_start": 1,
                            "text": "    ) -> NTSTATUS;"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          },
                          {
                            "highlight_end": 49,
                            "highlight_start": 1,
                            "text": "    /// Converts `NTSTATUS` to a DOS error code."
                          },
                          {
                            "highlight_end": 30,
                            "highlight_start": 1,
                            "text": "    fn RtlNtStatusToDosError("
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "        Status: NTSTATUS"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "    ) -> u32;"
                          },
                          {
                            "highlight_end": 2,
                            "highlight_start": 1,
                            "text": "}"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\iocp\\afd.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 205,
                    "line_start": 205,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 88,
                        "highlight_start": 25,
                        "text": "                        transmute::<_, unsafe extern \"system\" fn($($arg_ty),*) -> $ret>(addr)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp05u3owf6/polling-3.8.0#polling@3.8.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "polling",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute used without annotations\n   --> src\\iocp\\afd.rs:205:25\n    |\n205 |                           transmute::<_, unsafe extern \"system\" fn($($arg_ty),*) -> $ret>(addr)\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider adding missing annotations: `transmute::<unsafe extern \"system\" fn() -> isize, unsafe extern \"system\" fn(i32) -> u32>`\n...\n226 | / define_ntdll_import! {\n227 | |     /// Cancels an ongoing I/O operation.\n228 | |     fn NtCancelIoFileEx(\n229 | |         FileHandle: HANDLE,\n...   |\n270 | |     ) -> u32;\n271 | | }\n    | |_- in this macro invocation\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n    = note: this warning originates in the macro `define_ntdll_import` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider adding missing annotations",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5832,
                        "byte_start": 5769,
                        "column_end": 88,
                        "column_start": 25,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 4644,
                            "byte_start": 4612,
                            "column_end": 33,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\iocp\\afd.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 173,
                            "line_start": 173,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 33,
                                "highlight_start": 1,
                                "text": "macro_rules! define_ntdll_import {"
                              }
                            ]
                          },
                          "macro_decl_name": "define_ntdll_import!",
                          "span": {
                            "byte_end": 7550,
                            "byte_start": 6229,
                            "column_end": 2,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\iocp\\afd.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 271,
                            "line_start": 226,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 23,
                                "highlight_start": 1,
                                "text": "define_ntdll_import! {"
                              },
                              {
                                "highlight_end": 42,
                                "highlight_start": 1,
                                "text": "    /// Cancels an ongoing I/O operation."
                              },
                              {
                                "highlight_end": 25,
                                "highlight_start": 1,
                                "text": "    fn NtCancelIoFileEx("
                              },
                              {
                                "highlight_end": 28,
                                "highlight_start": 1,
                                "text": "        FileHandle: HANDLE,"
                              },
                              {
                                "highlight_end": 49,
                                "highlight_start": 1,
                                "text": "        IoRequestToCancel: *mut IO_STATUS_BLOCK,"
                              },
                              {
                                "highlight_end": 44,
                                "highlight_start": 1,
                                "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK"
                              },
                              {
                                "highlight_end": 19,
                                "highlight_start": 1,
                                "text": "    ) -> NTSTATUS;"
                              },
                              {
                                "highlight_end": 1,
                                "highlight_start": 1,
                                "text": ""
                              },
                              {
                                "highlight_end": 40,
                                "highlight_start": 1,
                                "text": "    /// Opens or creates a file handle."
                              },
                              {
                                "highlight_end": 41,
                                "highlight_start": 1,
                                "text": "    #[allow(clippy::too_many_arguments)]"
                              },
                              {
                                "highlight_end": 21,
                                "highlight_start": 1,
                                "text": "    fn NtCreateFile("
                              },
                              {
                                "highlight_end": 33,
                                "highlight_start": 1,
                                "text": "        FileHandle: *mut HANDLE,"
                              },
                              {
                                "highlight_end": 28,
                                "highlight_start": 1,
                                "text": "        DesiredAccess: u32,"
                              },
                              {
                                "highlight_end": 50,
                                "highlight_start": 1,
                                "text": "        ObjectAttributes: *mut OBJECT_ATTRIBUTES,"
                              },
                              {
                                "highlight_end": 45,
                                "highlight_start": 1,
                                "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK,"
                              },
                              {
                                "highlight_end": 34,
                                "highlight_start": 1,
                                "text": "        AllocationSize: *mut i64,"
                              },
                              {
                                "highlight_end": 29,
                                "highlight_start": 1,
                                "text": "        FileAttributes: u32,"
                              },
                              {
                                "highlight_end": 26,
                                "highlight_start": 1,
                                "text": "        ShareAccess: u32,"
                              },
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "        CreateDisposition: u32,"
                              },
                              {
                                "highlight_end": 28,
                                "highlight_start": 1,
                                "text": "        CreateOptions: u32,"
                              },
                              {
                                "highlight_end": 27,
                                "highlight_start": 1,
                                "text": "        EaBuffer: *mut (),"
                              },
                              {
                                "highlight_end": 22,
                                "highlight_start": 1,
                                "text": "        EaLength: u32"
                              },
                              {
                                "highlight_end": 19,
                                "highlight_start": 1,
                                "text": "    ) -> NTSTATUS;"
                              },
                              {
                                "highlight_end": 1,
                                "highlight_start": 1,
                                "text": ""
                              },
                              {
                                "highlight_end": 46,
                                "highlight_start": 1,
                                "text": "    /// Runs an I/O control on a file handle."
                              },
                              {
                                "highlight_end": 8,
                                "highlight_start": 1,
                                "text": "    ///"
                              },
                              {
                                "highlight_end": 43,
                                "highlight_start": 1,
                                "text": "    /// Practically equivalent to `ioctl`."
                              },
                              {
                                "highlight_end": 41,
                                "highlight_start": 1,
                                "text": "    #[allow(clippy::too_many_arguments)]"
                              },
                              {
                                "highlight_end": 30,
                                "highlight_start": 1,
                                "text": "    fn NtDeviceIoControlFile("
                              },
                              {
                                "highlight_end": 28,
                                "highlight_start": 1,
                                "text": "        FileHandle: HANDLE,"
                              },
                              {
                                "highlight_end": 23,
                                "highlight_start": 1,
                                "text": "        Event: HANDLE,"
                              },
                              {
                                "highlight_end": 29,
                                "highlight_start": 1,
                                "text": "        ApcRoutine: *mut (),"
                              },
                              {
                                "highlight_end": 29,
                                "highlight_start": 1,
                                "text": "        ApcContext: *mut (),"
                              },
                              {
                                "highlight_end": 45,
                                "highlight_start": 1,
                                "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK,"
                              },
                              {
                                "highlight_end": 28,
                                "highlight_start": 1,
                                "text": "        IoControlCode: u32,"
                              },
                              {
                                "highlight_end": 30,
                                "highlight_start": 1,
                                "text": "        InputBuffer: *mut (),"
                              },
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "        InputBufferLength: u32,"
                              },
                              {
                                "highlight_end": 31,
                                "highlight_start": 1,
                                "text": "        OutputBuffer: *mut (),"
                              },
                              {
                                "highlight_end": 32,
                                "highlight_start": 1,
                                "text": "        OutputBufferLength: u32"
                              },
                              {
                                "highlight_end": 19,
                                "highlight_start": 1,
                                "text": "    ) -> NTSTATUS;"
                              },
                              {
                                "highlight_end": 1,
                                "highlight_start": 1,
                                "text": ""
                              },
                              {
                                "highlight_end": 49,
                                "highlight_start": 1,
                                "text": "    /// Converts `NTSTATUS` to a DOS error code."
                              },
                              {
                                "highlight_end": 30,
                                "highlight_start": 1,
                                "text": "    fn RtlNtStatusToDosError("
                              },
                              {
                                "highlight_end": 25,
                                "highlight_start": 1,
                                "text": "        Status: NTSTATUS"
                              },
                              {
                                "highlight_end": 14,
                                "highlight_start": 1,
                                "text": "    ) -> u32;"
                              },
                              {
                                "highlight_end": 2,
                                "highlight_start": 1,
                                "text": "}"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\iocp\\afd.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 205,
                        "line_start": 205,
                        "suggested_replacement": "transmute::<unsafe extern \"system\" fn() -> isize, unsafe extern \"system\" fn(i32) -> u32>",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 88,
                            "highlight_start": 25,
                            "text": "                        transmute::<_, unsafe extern \"system\" fn($($arg_ty),*) -> $ret>(addr)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::missing_transmute_annotations",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute used without annotations",
                "spans": [
                  {
                    "byte_end": 5832,
                    "byte_start": 5769,
                    "column_end": 88,
                    "column_start": 25,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 4644,
                        "byte_start": 4612,
                        "column_end": 33,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\iocp\\afd.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 173,
                        "line_start": 173,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 1,
                            "text": "macro_rules! define_ntdll_import {"
                          }
                        ]
                      },
                      "macro_decl_name": "define_ntdll_import!",
                      "span": {
                        "byte_end": 7550,
                        "byte_start": 6229,
                        "column_end": 2,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\iocp\\afd.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 271,
                        "line_start": 226,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 1,
                            "text": "define_ntdll_import! {"
                          },
                          {
                            "highlight_end": 42,
                            "highlight_start": 1,
                            "text": "    /// Cancels an ongoing I/O operation."
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "    fn NtCancelIoFileEx("
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "        FileHandle: HANDLE,"
                          },
                          {
                            "highlight_end": 49,
                            "highlight_start": 1,
                            "text": "        IoRequestToCancel: *mut IO_STATUS_BLOCK,"
                          },
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK"
                          },
                          {
                            "highlight_end": 19,
                            "highlight_start": 1,
                            "text": "    ) -> NTSTATUS;"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          },
                          {
                            "highlight_end": 40,
                            "highlight_start": 1,
                            "text": "    /// Opens or creates a file handle."
                          },
                          {
                            "highlight_end": 41,
                            "highlight_start": 1,
                            "text": "    #[allow(clippy::too_many_arguments)]"
                          },
                          {
                            "highlight_end": 21,
                            "highlight_start": 1,
                            "text": "    fn NtCreateFile("
                          },
                          {
                            "highlight_end": 33,
                            "highlight_start": 1,
                            "text": "        FileHandle: *mut HANDLE,"
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "        DesiredAccess: u32,"
                          },
                          {
                            "highlight_end": 50,
                            "highlight_start": 1,
                            "text": "        ObjectAttributes: *mut OBJECT_ATTRIBUTES,"
                          },
                          {
                            "highlight_end": 45,
                            "highlight_start": 1,
                            "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK,"
                          },
                          {
                            "highlight_end": 34,
                            "highlight_start": 1,
                            "text": "        AllocationSize: *mut i64,"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "        FileAttributes: u32,"
                          },
                          {
                            "highlight_end": 26,
                            "highlight_start": 1,
                            "text": "        ShareAccess: u32,"
                          },
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "        CreateDisposition: u32,"
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "        CreateOptions: u32,"
                          },
                          {
                            "highlight_end": 27,
                            "highlight_start": 1,
                            "text": "        EaBuffer: *mut (),"
                          },
                          {
                            "highlight_end": 22,
                            "highlight_start": 1,
                            "text": "        EaLength: u32"
                          },
                          {
                            "highlight_end": 19,
                            "highlight_start": 1,
                            "text": "    ) -> NTSTATUS;"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          },
                          {
                            "highlight_end": 46,
                            "highlight_start": 1,
                            "text": "    /// Runs an I/O control on a file handle."
                          },
                          {
                            "highlight_end": 8,
                            "highlight_start": 1,
                            "text": "    ///"
                          },
                          {
                            "highlight_end": 43,
                            "highlight_start": 1,
                            "text": "    /// Practically equivalent to `ioctl`."
                          },
                          {
                            "highlight_end": 41,
                            "highlight_start": 1,
                            "text": "    #[allow(clippy::too_many_arguments)]"
                          },
                          {
                            "highlight_end": 30,
                            "highlight_start": 1,
                            "text": "    fn NtDeviceIoControlFile("
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "        FileHandle: HANDLE,"
                          },
                          {
                            "highlight_end": 23,
                            "highlight_start": 1,
                            "text": "        Event: HANDLE,"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "        ApcRoutine: *mut (),"
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "        ApcContext: *mut (),"
                          },
                          {
                            "highlight_end": 45,
                            "highlight_start": 1,
                            "text": "        IoStatusBlock: *mut IO_STATUS_BLOCK,"
                          },
                          {
                            "highlight_end": 28,
                            "highlight_start": 1,
                            "text": "        IoControlCode: u32,"
                          },
                          {
                            "highlight_end": 30,
                            "highlight_start": 1,
                            "text": "        InputBuffer: *mut (),"
                          },
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "        InputBufferLength: u32,"
                          },
                          {
                            "highlight_end": 31,
                            "highlight_start": 1,
                            "text": "        OutputBuffer: *mut (),"
                          },
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "        OutputBufferLength: u32"
                          },
                          {
                            "highlight_end": 19,
                            "highlight_start": 1,
                            "text": "    ) -> NTSTATUS;"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          },
                          {
                            "highlight_end": 49,
                            "highlight_start": 1,
                            "text": "    /// Converts `NTSTATUS` to a DOS error code."
                          },
                          {
                            "highlight_end": 30,
                            "highlight_start": 1,
                            "text": "    fn RtlNtStatusToDosError("
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "        Status: NTSTATUS"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "    ) -> u32;"
                          },
                          {
                            "highlight_end": 2,
                            "highlight_start": 1,
                            "text": "}"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\iocp\\afd.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 205,
                    "line_start": 205,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 88,
                        "highlight_start": 25,
                        "text": "                        transmute::<_, unsafe extern \"system\" fn($($arg_ty),*) -> $ret>(addr)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp05u3owf6/polling-3.8.0#polling@3.8.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "polling",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric constant\n   --> src\\iocp\\afd.rs:462:36\n    |\n462 |             (*poll_info).timeout = std::i64::MAX;\n    |                                    ^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n    = note: `#[warn(clippy::legacy_numeric_constants)]` on by default\nhelp: use the associated constant instead\n    |\n462 -             (*poll_info).timeout = std::i64::MAX;\n462 +             (*poll_info).timeout = i64::MAX;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::legacy_numeric_constants)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12556,
                        "byte_start": 12543,
                        "column_end": 49,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "src\\iocp\\afd.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 462,
                        "line_start": 462,
                        "suggested_replacement": "i64::MAX",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 36,
                            "text": "            (*poll_info).timeout = std::i64::MAX;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric constant",
                "spans": [
                  {
                    "byte_end": 12556,
                    "byte_start": 12543,
                    "column_end": 49,
                    "column_start": 36,
                    "expansion": null,
                    "file_name": "src\\iocp\\afd.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 462,
                    "line_start": 462,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 36,
                        "text": "            (*poll_info).timeout = std::i64::MAX;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp05u3owf6/polling-3.8.0#polling@3.8.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "polling",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the following explicit lifetimes could be elided: 'a\n  --> src\\iocp\\port.rs:68:13\n   |\n68 | unsafe impl<'a, T: Completion> CompletionHandle for Pin<&'a T> {\n   |             ^^                                           ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n68 - unsafe impl<'a, T: Completion> CompletionHandle for Pin<&'a T> {\n68 + unsafe impl<T: Completion> CompletionHandle for Pin<&T> {\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_lifetimes)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2157,
                        "byte_start": 2153,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\iocp\\port.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 68,
                        "line_start": 68,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "unsafe impl<'a, T: Completion> CompletionHandle for Pin<&'a T> {"
                          }
                        ]
                      },
                      {
                        "byte_end": 2201,
                        "byte_start": 2198,
                        "column_end": 61,
                        "column_start": 58,
                        "expansion": null,
                        "file_name": "src\\iocp\\port.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 68,
                        "line_start": 68,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 61,
                            "highlight_start": 58,
                            "text": "unsafe impl<'a, T: Completion> CompletionHandle for Pin<&'a T> {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 2155,
                    "byte_start": 2153,
                    "column_end": 15,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\iocp\\port.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 68,
                    "line_start": 68,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 13,
                        "text": "unsafe impl<'a, T: Completion> CompletionHandle for Pin<&'a T> {"
                      }
                    ]
                  },
                  {
                    "byte_end": 2200,
                    "byte_start": 2198,
                    "column_end": 60,
                    "column_start": 58,
                    "expansion": null,
                    "file_name": "src\\iocp\\port.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 68,
                    "line_start": 68,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 58,
                        "text": "unsafe impl<'a, T: Completion> CompletionHandle for Pin<&'a T> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp05u3owf6/polling-3.8.0#polling@3.8.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "polling",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of an `Arc` that is not `Send` and `Sync`\n   --> src\\iocp\\mod.rs:142:19\n    |\n142 |             port: Arc::new(port),\n    |                   ^^^^^^^^^^^^^^\n    |\n    = note: `Arc<IoCompletionPort<Pin<Arc<IoStatusBlock<PacketInner>>>>>` is not `Send` and `Sync` as `IoCompletionPort<Pin<Arc<IoStatusBlock<PacketInner>>>>` is neither `Send` nor `Sync`\n    = help: if the `Arc` will not used be across threads replace it with an `Rc`\n    = help: otherwise make `IoCompletionPort<Pin<Arc<IoStatusBlock<PacketInner>>>>` `Send` and `Sync` or consider a wrapper type such as `Mutex`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arc_with_non_send_sync\n    = note: `#[warn(clippy::arc_with_non_send_sync)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`Arc<IoCompletionPort<Pin<Arc<IoStatusBlock<PacketInner>>>>>` is not `Send` and `Sync` as `IoCompletionPort<Pin<Arc<IoStatusBlock<PacketInner>>>>` is neither `Send` nor `Sync`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if the `Arc` will not used be across threads replace it with an `Rc`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "otherwise make `IoCompletionPort<Pin<Arc<IoStatusBlock<PacketInner>>>>` `Send` and `Sync` or consider a wrapper type such as `Mutex`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arc_with_non_send_sync",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::arc_with_non_send_sync)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::arc_with_non_send_sync",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of an `Arc` that is not `Send` and `Sync`",
                "spans": [
                  {
                    "byte_end": 5817,
                    "byte_start": 5803,
                    "column_end": 33,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "src\\iocp\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 142,
                    "line_start": 142,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 19,
                        "text": "            port: Arc::new(port),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp05u3owf6/polling-3.8.0#polling@3.8.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "polling",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric constant\n   --> src\\iocp\\mod.rs:534:13\n    |\n534 |             std::usize::MAX\n    |             ^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\nhelp: use the associated constant instead\n    |\n534 -             std::usize::MAX\n534 +             usize::MAX\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 18175,
                        "byte_start": 18160,
                        "column_end": 28,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\iocp\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 534,
                        "line_start": 534,
                        "suggested_replacement": "usize::MAX",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 13,
                            "text": "            std::usize::MAX"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric constant",
                "spans": [
                  {
                    "byte_end": 18175,
                    "byte_start": 18160,
                    "column_end": 28,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\iocp\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 534,
                    "line_start": 534,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 13,
                        "text": "            std::usize::MAX"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp05u3owf6/polling-3.8.0#polling@3.8.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "polling",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of an `Arc` that is not `Send` and `Sync`\n   --> src\\iocp\\mod.rs:584:19\n    |\n584 |         let afd = Arc::new(Afd::new()?);\n    |                   ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `Arc<Afd<Pin<Arc<IoStatusBlock<PacketInner>>>>>` is not `Send` and `Sync` as `Afd<Pin<Arc<IoStatusBlock<PacketInner>>>>` is neither `Send` nor `Sync`\n    = help: if the `Arc` will not used be across threads replace it with an `Rc`\n    = help: otherwise make `Afd<Pin<Arc<IoStatusBlock<PacketInner>>>>` `Send` and `Sync` or consider a wrapper type such as `Mutex`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arc_with_non_send_sync\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`Arc<Afd<Pin<Arc<IoStatusBlock<PacketInner>>>>>` is not `Send` and `Sync` as `Afd<Pin<Arc<IoStatusBlock<PacketInner>>>>` is neither `Send` nor `Sync`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if the `Arc` will not used be across threads replace it with an `Rc`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "otherwise make `Afd<Pin<Arc<IoStatusBlock<PacketInner>>>>` `Send` and `Sync` or consider a wrapper type such as `Mutex`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arc_with_non_send_sync",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::arc_with_non_send_sync",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of an `Arc` that is not `Send` and `Sync`",
                "spans": [
                  {
                    "byte_end": 19982,
                    "byte_start": 19961,
                    "column_end": 40,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "src\\iocp\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 584,
                    "line_start": 584,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 19,
                        "text": "        let afd = Arc::new(Afd::new()?);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp05u3owf6/polling-3.8.0#polling@3.8.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "polling",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp05u3owf6\\polling-3.8.0\\target\\debug\\deps\\libpolling-4a883d9003434572.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 29
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {}
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "polling",
          "version": "3.8.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/polling/latest/polling/all.html \"show sidebar\")\n# Crate pollingCopy item path\n[Settings](https://docs.rs/polling/latest/settings.html)\n[Help](https://docs.rs/polling/latest/help.html)\nSummary[Source](https://docs.rs/polling/latest/src/polling/lib.rs.html#1-1118)\nExpand description\nPortable interface to epoll, kqueue, event ports, and IOCP.\nSupported platforms:\n  * [epoll](https://en.wikipedia.org/wiki/Epoll): Linux, Android, RedoxOS\n  * [kqueue](https://en.wikipedia.org/wiki/Kqueue): macOS, iOS, tvOS, watchOS, visionOS, FreeBSD, NetBSD, OpenBSD, DragonFly BSD\n  * [event ports](https://illumos.org/man/port_create): illumos, Solaris\n  * [poll](https://en.wikipedia.org/wiki/Poll_\\(Unix\\)): VxWorks, Fuchsia, HermitOS, other Unix systems\n  * [IOCP](https://learn.microsoft.com/en-us/windows/win32/fileio/i-o-completion-ports): Windows, Wine (version 7.13+)\n\n\nBy default, polling is done in oneshot mode, which means interest in I/O events needs to be re-enabled after an event is delivered if we\u2019re interested in the next event of the same kind. However, level and edge triggered modes are also available for certain operating systems. See the documentation of the [`PollMode`](https://docs.rs/polling/latest/polling/enum.PollMode.html \"enum polling::PollMode\") type for more information.\nOnly one thread can be waiting for I/O events at a time.\n## [\u00a7](https://docs.rs/polling/latest/polling/#examples)Examples\n```\nuse polling::{Event, Events, Poller};\nuse std::net::TcpListener;\n// Create a TCP listener.\nlet socket = TcpListener::bind(\"127.0.0.1:8000\")?;\nsocket.set_nonblocking(true)?;\nlet key = 7; // Arbitrary key identifying the socket.\n// Create a poller and register interest in readability on the socket.\nlet poller = Poller::new()?;\nunsafe {\n  poller.add(&socket, Event::readable(key))?;\n}\n// The event loop.\nlet mut events = Events::new();\nloop {\n  // Wait for at least one I/O event.\n  events.clear();\n  poller.wait(&mut events, None)?;\n  for ev in events.iter() {\n    if ev.key == key {\n      // Perform a non-blocking accept operation.\n      socket.accept()?;\n      // Set interest in the next readability event.\n      poller.modify(&socket, Event::readable(key))?;\n    }\n  }\n}\npoller.delete(&socket)?;\n```\n\n## Modules[\u00a7](https://docs.rs/polling/latest/polling/#modules)\n\n[os](https://docs.rs/polling/latest/polling/os/index.html \"mod polling::os\")\n    Platform-specific functionality.\n## Structs[\u00a7](https://docs.rs/polling/latest/polling/#structs)\n\n[Event](https://docs.rs/polling/latest/polling/struct.Event.html \"struct polling::Event\")\n    Indicates that a file descriptor or socket can read or write without blocking.\n\n[Events](https://docs.rs/polling/latest/polling/struct.Events.html \"struct polling::Events\")\n    A container for I/O events.\n\n[Poller](https://docs.rs/polling/latest/polling/struct.Poller.html \"struct polling::Poller\")\n    Waits for I/O events.\n## Enums[\u00a7](https://docs.rs/polling/latest/polling/#enums)\n\n[PollMode](https://docs.rs/polling/latest/polling/enum.PollMode.html \"enum polling::PollMode\")\n    The mode in which the poller waits for I/O events.\n## Traits[\u00a7](https://docs.rs/polling/latest/polling/#traits)\n\n[AsRawSource](https://docs.rs/polling/latest/polling/trait.AsRawSource.html \"trait polling::AsRawSource\")\n    A resource with a raw file descriptor.\n\n[AsSource](https://docs.rs/polling/latest/polling/trait.AsSource.html \"trait polling::AsSource\")\n    A resource with a borrowed file descriptor.\n",
            "markdown_with_citations": "[](https://docs.rs/polling/latest/polling/all.html \"show sidebar\")\n# Crate pollingCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nPortable interface to epoll, kqueue, event ports, and IOCP.\nSupported platforms:\n  * epoll\u27e84\u27e9: Linux, Android, RedoxOS\n  * kqueue\u27e85\u27e9: macOS, iOS, tvOS, watchOS, visionOS, FreeBSD, NetBSD, OpenBSD, DragonFly BSD\n  * event ports\u27e86\u27e9: illumos, Solaris\n  * poll\u27e87\u27e9): VxWorks, Fuchsia, HermitOS, other Unix systems\n  * IOCP\u27e88\u27e9: Windows, Wine (version 7.13+)\n\n\nBy default, polling is done in oneshot mode, which means interest in I/O events needs to be re-enabled after an event is delivered if we\u2019re interested in the next event of the same kind. However, level and edge triggered modes are also available for certain operating systems. See the documentation of the `PollMode`\u27e89\u27e9 type for more information.\nOnly one thread can be waiting for I/O events at a time.\n## \u00a7\u27e810\u27e9Examples\n```\nuse polling::{Event, Events, Poller};\nuse std::net::TcpListener;\n// Create a TCP listener.\nlet socket = TcpListener::bind(\"127.0.0.1:8000\")?;\nsocket.set_nonblocking(true)?;\nlet key = 7; // Arbitrary key identifying the socket.\n// Create a poller and register interest in readability on the socket.\nlet poller = Poller::new()?;\nunsafe {\n  poller.add(&socket, Event::readable(key))?;\n}\n// The event loop.\nlet mut events = Events::new();\nloop {\n  // Wait for at least one I/O event.\n  events.clear();\n  poller.wait(&mut events, None)?;\n  for ev in events.iter() {\n    if ev.key == key {\n      // Perform a non-blocking accept operation.\n      socket.accept()?;\n      // Set interest in the next readability event.\n      poller.modify(&socket, Event::readable(key))?;\n    }\n  }\n}\npoller.delete(&socket)?;\n```\n\n## Modules\u00a7\u27e811\u27e9\n\nos\u27e812\u27e9\n    Platform-specific functionality.\n## Structs\u00a7\u27e813\u27e9\n\nEvent\u27e814\u27e9\n    Indicates that a file descriptor or socket can read or write without blocking.\n\nEvents\u27e815\u27e9\n    A container for I/O events.\n\nPoller\u27e816\u27e9\n    Waits for I/O events.\n## Enums\u00a7\u27e817\u27e9\n\nPollMode\u27e89\u27e9\n    The mode in which the poller waits for I/O events.\n## Traits\u00a7\u27e818\u27e9\n\nAsRawSource\u27e819\u27e9\n    A resource with a raw file descriptor.\n\nAsSource\u27e820\u27e9\n    A resource with a borrowed file descriptor.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/polling/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/polling/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/polling/latest/src/polling/lib.rs.html#1-1118: Source\n\u27e84\u27e9 https://en.wikipedia.org/wiki/Epoll: epoll\n\u27e85\u27e9 https://en.wikipedia.org/wiki/Kqueue: kqueue\n\u27e86\u27e9 https://illumos.org/man/port_create: event ports\n\u27e87\u27e9 https://en.wikipedia.org/wiki/Poll_\\(Unix\\: poll\n\u27e88\u27e9 https://learn.microsoft.com/en-us/windows/win32/fileio/i-o-completion-ports: IOCP\n\u27e89\u27e9 https://docs.rs/polling/latest/polling/enum.PollMode.html: enum polling::PollMode - `PollMode`\n\u27e810\u27e9 https://docs.rs/polling/latest/polling/#examples: \u00a7\n\u27e811\u27e9 https://docs.rs/polling/latest/polling/#modules: \u00a7\n\u27e812\u27e9 https://docs.rs/polling/latest/polling/os/index.html: mod polling::os - os\n\u27e813\u27e9 https://docs.rs/polling/latest/polling/#structs: \u00a7\n\u27e814\u27e9 https://docs.rs/polling/latest/polling/struct.Event.html: struct polling::Event - Event\n\u27e815\u27e9 https://docs.rs/polling/latest/polling/struct.Events.html: struct polling::Events - Events\n\u27e816\u27e9 https://docs.rs/polling/latest/polling/struct.Poller.html: struct polling::Poller - Poller\n\u27e817\u27e9 https://docs.rs/polling/latest/polling/#enums: \u00a7\n\u27e818\u27e9 https://docs.rs/polling/latest/polling/#traits: \u00a7\n\u27e819\u27e9 https://docs.rs/polling/latest/polling/trait.AsRawSource.html: trait polling::AsRawSource - AsRawSource\n\u27e820\u27e9 https://docs.rs/polling/latest/polling/trait.AsSource.html: trait polling::AsSource - AsSource\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "polling",
          "version": "3.8.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/polling/latest/polling/all.html \"show sidebar\")\n# Crate pollingCopy item path\n[Settings](https://docs.rs/polling/latest/settings.html)\n[Help](https://docs.rs/polling/latest/help.html)\nSummary[Source](https://docs.rs/polling/latest/src/polling/lib.rs.html#1-1118)\nExpand description\nPortable interface to epoll, kqueue, event ports, and IOCP.\nSupported platforms:\n  * [epoll](https://en.wikipedia.org/wiki/Epoll): Linux, Android, RedoxOS\n  * [kqueue](https://en.wikipedia.org/wiki/Kqueue): macOS, iOS, tvOS, watchOS, visionOS, FreeBSD, NetBSD, OpenBSD, DragonFly BSD\n  * [event ports](https://illumos.org/man/port_create): illumos, Solaris\n  * [poll](https://en.wikipedia.org/wiki/Poll_\\(Unix\\)): VxWorks, Fuchsia, HermitOS, other Unix systems\n  * [IOCP](https://learn.microsoft.com/en-us/windows/win32/fileio/i-o-completion-ports): Windows, Wine (version 7.13+)\n\n\nBy default, polling is done in oneshot mode, which means interest in I/O events needs to be re-enabled after an event is delivered if we\u2019re interested in the next event of the same kind. However, level and edge triggered modes are also available for certain operating systems. See the documentation of the [`PollMode`](https://docs.rs/polling/latest/polling/enum.PollMode.html \"enum polling::PollMode\") type for more information.\nOnly one thread can be waiting for I/O events at a time.\n## [\u00a7](https://docs.rs/polling/latest/polling/#examples)Examples\n```\nuse polling::{Event, Events, Poller};\nuse std::net::TcpListener;\n// Create a TCP listener.\nlet socket = TcpListener::bind(\"127.0.0.1:8000\")?;\nsocket.set_nonblocking(true)?;\nlet key = 7; // Arbitrary key identifying the socket.\n// Create a poller and register interest in readability on the socket.\nlet poller = Poller::new()?;\nunsafe {\n  poller.add(&socket, Event::readable(key))?;\n}\n// The event loop.\nlet mut events = Events::new();\nloop {\n  // Wait for at least one I/O event.\n  events.clear();\n  poller.wait(&mut events, None)?;\n  for ev in events.iter() {\n    if ev.key == key {\n      // Perform a non-blocking accept operation.\n      socket.accept()?;\n      // Set interest in the next readability event.\n      poller.modify(&socket, Event::readable(key))?;\n    }\n  }\n}\npoller.delete(&socket)?;\n```\n\n## Modules[\u00a7](https://docs.rs/polling/latest/polling/#modules)\n\n[os](https://docs.rs/polling/latest/polling/os/index.html \"mod polling::os\")\n    Platform-specific functionality.\n## Structs[\u00a7](https://docs.rs/polling/latest/polling/#structs)\n\n[Event](https://docs.rs/polling/latest/polling/struct.Event.html \"struct polling::Event\")\n    Indicates that a file descriptor or socket can read or write without blocking.\n\n[Events](https://docs.rs/polling/latest/polling/struct.Events.html \"struct polling::Events\")\n    A container for I/O events.\n\n[Poller](https://docs.rs/polling/latest/polling/struct.Poller.html \"struct polling::Poller\")\n    Waits for I/O events.\n## Enums[\u00a7](https://docs.rs/polling/latest/polling/#enums)\n\n[PollMode](https://docs.rs/polling/latest/polling/enum.PollMode.html \"enum polling::PollMode\")\n    The mode in which the poller waits for I/O events.\n## Traits[\u00a7](https://docs.rs/polling/latest/polling/#traits)\n\n[AsRawSource](https://docs.rs/polling/latest/polling/trait.AsRawSource.html \"trait polling::AsRawSource\")\n    A resource with a raw file descriptor.\n\n[AsSource](https://docs.rs/polling/latest/polling/trait.AsSource.html \"trait polling::AsSource\")\n    A resource with a borrowed file descriptor.\n",
            "markdown_with_citations": "[](https://docs.rs/polling/latest/polling/all.html \"show sidebar\")\n# Crate pollingCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nPortable interface to epoll, kqueue, event ports, and IOCP.\nSupported platforms:\n  * epoll\u27e84\u27e9: Linux, Android, RedoxOS\n  * kqueue\u27e85\u27e9: macOS, iOS, tvOS, watchOS, visionOS, FreeBSD, NetBSD, OpenBSD, DragonFly BSD\n  * event ports\u27e86\u27e9: illumos, Solaris\n  * poll\u27e87\u27e9): VxWorks, Fuchsia, HermitOS, other Unix systems\n  * IOCP\u27e88\u27e9: Windows, Wine (version 7.13+)\n\n\nBy default, polling is done in oneshot mode, which means interest in I/O events needs to be re-enabled after an event is delivered if we\u2019re interested in the next event of the same kind. However, level and edge triggered modes are also available for certain operating systems. See the documentation of the `PollMode`\u27e89\u27e9 type for more information.\nOnly one thread can be waiting for I/O events at a time.\n## \u00a7\u27e810\u27e9Examples\n```\nuse polling::{Event, Events, Poller};\nuse std::net::TcpListener;\n// Create a TCP listener.\nlet socket = TcpListener::bind(\"127.0.0.1:8000\")?;\nsocket.set_nonblocking(true)?;\nlet key = 7; // Arbitrary key identifying the socket.\n// Create a poller and register interest in readability on the socket.\nlet poller = Poller::new()?;\nunsafe {\n  poller.add(&socket, Event::readable(key))?;\n}\n// The event loop.\nlet mut events = Events::new();\nloop {\n  // Wait for at least one I/O event.\n  events.clear();\n  poller.wait(&mut events, None)?;\n  for ev in events.iter() {\n    if ev.key == key {\n      // Perform a non-blocking accept operation.\n      socket.accept()?;\n      // Set interest in the next readability event.\n      poller.modify(&socket, Event::readable(key))?;\n    }\n  }\n}\npoller.delete(&socket)?;\n```\n\n## Modules\u00a7\u27e811\u27e9\n\nos\u27e812\u27e9\n    Platform-specific functionality.\n## Structs\u00a7\u27e813\u27e9\n\nEvent\u27e814\u27e9\n    Indicates that a file descriptor or socket can read or write without blocking.\n\nEvents\u27e815\u27e9\n    A container for I/O events.\n\nPoller\u27e816\u27e9\n    Waits for I/O events.\n## Enums\u00a7\u27e817\u27e9\n\nPollMode\u27e89\u27e9\n    The mode in which the poller waits for I/O events.\n## Traits\u00a7\u27e818\u27e9\n\nAsRawSource\u27e819\u27e9\n    A resource with a raw file descriptor.\n\nAsSource\u27e820\u27e9\n    A resource with a borrowed file descriptor.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/polling/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/polling/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/polling/latest/src/polling/lib.rs.html#1-1118: Source\n\u27e84\u27e9 https://en.wikipedia.org/wiki/Epoll: epoll\n\u27e85\u27e9 https://en.wikipedia.org/wiki/Kqueue: kqueue\n\u27e86\u27e9 https://illumos.org/man/port_create: event ports\n\u27e87\u27e9 https://en.wikipedia.org/wiki/Poll_\\(Unix\\: poll\n\u27e88\u27e9 https://learn.microsoft.com/en-us/windows/win32/fileio/i-o-completion-ports: IOCP\n\u27e89\u27e9 https://docs.rs/polling/latest/polling/enum.PollMode.html: enum polling::PollMode - `PollMode`\n\u27e810\u27e9 https://docs.rs/polling/latest/polling/#examples: \u00a7\n\u27e811\u27e9 https://docs.rs/polling/latest/polling/#modules: \u00a7\n\u27e812\u27e9 https://docs.rs/polling/latest/polling/os/index.html: mod polling::os - os\n\u27e813\u27e9 https://docs.rs/polling/latest/polling/#structs: \u00a7\n\u27e814\u27e9 https://docs.rs/polling/latest/polling/struct.Event.html: struct polling::Event - Event\n\u27e815\u27e9 https://docs.rs/polling/latest/polling/struct.Events.html: struct polling::Events - Events\n\u27e816\u27e9 https://docs.rs/polling/latest/polling/struct.Poller.html: struct polling::Poller - Poller\n\u27e817\u27e9 https://docs.rs/polling/latest/polling/#enums: \u00a7\n\u27e818\u27e9 https://docs.rs/polling/latest/polling/#traits: \u00a7\n\u27e819\u27e9 https://docs.rs/polling/latest/polling/trait.AsRawSource.html: trait polling::AsRawSource - AsRawSource\n\u27e820\u27e9 https://docs.rs/polling/latest/polling/trait.AsSource.html: trait polling::AsSource - AsSource\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `polling` crate provides a portable interface for efficient I/O event polling across multiple platforms, supporting mechanisms like epoll, kqueue, event ports, poll, and IOCP. It enables monitoring file descriptors or sockets for readability and writability in oneshot, level-triggered, or edge-triggered modes, with a focus on non-blocking operations. Key features include the `Poller` for waiting on events, `Event` and `Events` for event management, and platform-specific functionality via the `os` module.",
          "feature_summary": null,
          "use_case": "Networking",
          "score": 6.0,
          "factual_counterfactual": "### Pair 1: Platform Support  \n\u2705 **Factual**: The `polling` crate provides a portable interface to epoll, kqueue, event ports, poll, and IOCP, enabling compatibility across Linux, macOS, Windows, and other operating systems.  \n\u274c **Counterfactual**: The `polling` crate only supports epoll and kqueue, making it incompatible with Windows and Solaris-based systems.  \n\n---\n\n### Pair 2: Polling Modes  \n\u2705 **Factual**: By default, the `polling` crate operates in oneshot mode, requiring re-enabling interest in I/O events after each event is delivered. It also supports level-triggered and edge-triggered modes on certain platforms.  \n\u274c **Counterfactual**: The `polling` crate exclusively supports level-triggered polling, and does not provide oneshot or edge-triggered modes.  \n\n---\n\n### Pair 3: Thread Safety  \n\u2705 **Factual**: The `polling` crate restricts I/O event waiting to a single thread at a time, ensuring predictable behavior in multithreaded environments.  \n\u274c **Counterfactual**: The `polling` crate allows multiple threads to simultaneously wait for I/O events, enabling concurrent event handling across threads.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-34fcd7b1-384e3380-1751266169",
      "timestamp": "2025-06-30T06:49:29.989330+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]