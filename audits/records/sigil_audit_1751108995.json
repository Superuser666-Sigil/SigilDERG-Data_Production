[
  {
    "execution_id": "exec-badb5fd2-c9670048-1751108993",
    "timestamp": "2025-06-28T11:09:53.962031+00:00",
    "sacred_chain": {
      "input_data": "percent-encoding",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'percent-encoding' -> 'percent-encoding'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "percent-encoding",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "documentation_quality": 3.3333333333333335,
        "documentation_sources": [
          "crates_io",
          "docs_rs",
          "lib_rs"
        ],
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmppg_hygd1/percent-encoding-2.3.1#percent-encoding@2.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmppg_hygd1\\percent-encoding-2.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "percent_encoding",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmppg_hygd1\\percent-encoding-2.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: ambiguous wide pointer comparison, the comparison includes metadata which may not be expected\n   --> src\\lib.rs:466:35\n    |\n466 |                     debug_assert!(raw_utf8 == &*bytes as *const [u8]);\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(ambiguous_wide_pointer_comparisons)]` on by default\nhelp: use `std::ptr::addr_eq` or untyped pointers to only compare their addresses\n    |\n466 -                     debug_assert!(raw_utf8 == &*bytes as *const [u8]);\n466 +                     debug_assert!(std::ptr::addr_eq(raw_utf8, &*bytes as *const [u8]));\n    |\nhelp: use explicit `std::ptr::eq` method to compare metadata and addresses\n    |\n466 -                     debug_assert!(raw_utf8 == &*bytes as *const [u8]);\n466 +                     debug_assert!(std::ptr::eq(raw_utf8, &*bytes as *const [u8]));\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(ambiguous_wide_pointer_comparisons)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `std::ptr::addr_eq` or untyped pointers to only compare their addresses",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 15228,
                        "byte_start": 15228,
                        "column_end": 35,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 466,
                        "line_start": 466,
                        "suggested_replacement": "std::ptr::addr_eq(",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 35,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      },
                      {
                        "byte_end": 15240,
                        "byte_start": 15236,
                        "column_end": 47,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 466,
                        "line_start": 466,
                        "suggested_replacement": ", ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 43,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      },
                      {
                        "byte_end": 15262,
                        "byte_start": 15262,
                        "column_end": 69,
                        "column_start": 69,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 466,
                        "line_start": 466,
                        "suggested_replacement": ")",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 69,
                            "highlight_start": 69,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use explicit `std::ptr::eq` method to compare metadata and addresses",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 15228,
                        "byte_start": 15228,
                        "column_end": 35,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 466,
                        "line_start": 466,
                        "suggested_replacement": "std::ptr::eq(",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 35,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      },
                      {
                        "byte_end": 15240,
                        "byte_start": 15236,
                        "column_end": 47,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 466,
                        "line_start": 466,
                        "suggested_replacement": ", ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 43,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      },
                      {
                        "byte_end": 15262,
                        "byte_start": 15262,
                        "column_end": 69,
                        "column_start": 69,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 466,
                        "line_start": 466,
                        "suggested_replacement": ")",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 69,
                            "highlight_start": 69,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "ambiguous_wide_pointer_comparisons",
                  "explanation": null
                },
                "level": "warning",
                "message": "ambiguous wide pointer comparison, the comparison includes metadata which may not be expected",
                "spans": [
                  {
                    "byte_end": 15262,
                    "byte_start": 15228,
                    "column_end": 69,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 466,
                    "line_start": 466,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 69,
                        "highlight_start": 35,
                        "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmppg_hygd1/percent-encoding-2.3.1#percent-encoding@2.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmppg_hygd1\\percent-encoding-2.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "percent_encoding",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmppg_hygd1\\percent-encoding-2.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmppg_hygd1\\percent-encoding-2.3.1\\target\\debug\\deps\\libpercent_encoding-e01da096b0846620.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmppg_hygd1/percent-encoding-2.3.1#percent-encoding@2.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmppg_hygd1\\percent-encoding-2.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "percent_encoding",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmppg_hygd1\\percent-encoding-2.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: use `core::ptr::eq` when comparing raw pointers\n   --> src\\lib.rs:466:35\n    |\n466 |                     debug_assert!(raw_utf8 == &*bytes as *const [u8]);\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `core::ptr::eq(raw_utf8, &*bytes)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_eq\n    = note: `#[warn(clippy::ptr_eq)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_eq",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::ptr_eq)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 15262,
                        "byte_start": 15228,
                        "column_end": 69,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 466,
                        "line_start": 466,
                        "suggested_replacement": "core::ptr::eq(raw_utf8, &*bytes)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 69,
                            "highlight_start": 35,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::ptr_eq",
                  "explanation": null
                },
                "level": "warning",
                "message": "use `core::ptr::eq` when comparing raw pointers",
                "spans": [
                  {
                    "byte_end": 15262,
                    "byte_start": 15228,
                    "column_end": 69,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 466,
                    "line_start": 466,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 69,
                        "highlight_start": 35,
                        "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmppg_hygd1/percent-encoding-2.3.1#percent-encoding@2.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmppg_hygd1\\percent-encoding-2.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "percent_encoding",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmppg_hygd1\\percent-encoding-2.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: ambiguous wide pointer comparison, the comparison includes metadata which may not be expected\n   --> src\\lib.rs:466:35\n    |\n466 |                     debug_assert!(raw_utf8 == &*bytes as *const [u8]);\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(ambiguous_wide_pointer_comparisons)]` on by default\nhelp: use `std::ptr::addr_eq` or untyped pointers to only compare their addresses\n    |\n466 -                     debug_assert!(raw_utf8 == &*bytes as *const [u8]);\n466 +                     debug_assert!(std::ptr::addr_eq(raw_utf8, &*bytes as *const [u8]));\n    |\nhelp: use explicit `std::ptr::eq` method to compare metadata and addresses\n    |\n466 -                     debug_assert!(raw_utf8 == &*bytes as *const [u8]);\n466 +                     debug_assert!(std::ptr::eq(raw_utf8, &*bytes as *const [u8]));\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(ambiguous_wide_pointer_comparisons)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `std::ptr::addr_eq` or untyped pointers to only compare their addresses",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 15228,
                        "byte_start": 15228,
                        "column_end": 35,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 466,
                        "line_start": 466,
                        "suggested_replacement": "std::ptr::addr_eq(",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 35,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      },
                      {
                        "byte_end": 15240,
                        "byte_start": 15236,
                        "column_end": 47,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 466,
                        "line_start": 466,
                        "suggested_replacement": ", ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 43,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      },
                      {
                        "byte_end": 15262,
                        "byte_start": 15262,
                        "column_end": 69,
                        "column_start": 69,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 466,
                        "line_start": 466,
                        "suggested_replacement": ")",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 69,
                            "highlight_start": 69,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use explicit `std::ptr::eq` method to compare metadata and addresses",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 15228,
                        "byte_start": 15228,
                        "column_end": 35,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 466,
                        "line_start": 466,
                        "suggested_replacement": "std::ptr::eq(",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 35,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      },
                      {
                        "byte_end": 15240,
                        "byte_start": 15236,
                        "column_end": 47,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 466,
                        "line_start": 466,
                        "suggested_replacement": ", ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 43,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      },
                      {
                        "byte_end": 15262,
                        "byte_start": 15262,
                        "column_end": 69,
                        "column_start": 69,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 466,
                        "line_start": 466,
                        "suggested_replacement": ")",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 69,
                            "highlight_start": 69,
                            "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "ambiguous_wide_pointer_comparisons",
                  "explanation": null
                },
                "level": "warning",
                "message": "ambiguous wide pointer comparison, the comparison includes metadata which may not be expected",
                "spans": [
                  {
                    "byte_end": 15262,
                    "byte_start": 15228,
                    "column_end": 69,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 466,
                    "line_start": 466,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 69,
                        "highlight_start": 35,
                        "text": "                    debug_assert!(raw_utf8 == &*bytes as *const [u8]);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmppg_hygd1/percent-encoding-2.3.1#percent-encoding@2.3.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmppg_hygd1\\percent-encoding-2.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "percent_encoding",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmppg_hygd1\\percent-encoding-2.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmppg_hygd1\\percent-encoding-2.3.1\\target\\debug\\deps\\libpercent_encoding-cba8bce5afcb962f.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 1
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {}
          },
          "note": "Crate analysis performed."
        },
        "crate_metadata": {
          "name": "percent-encoding",
          "version": "unknown",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": "",
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "ai_enrichment": {
          "provider": "azure",
          "model": "gpt-4o",
          "readme_summary": null,
          "use_case": null,
          "score": null,
          "factual_counterfactual": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-badb5fd2-c9670048-1751108993",
      "timestamp": "2025-06-28T11:09:53.962031+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]