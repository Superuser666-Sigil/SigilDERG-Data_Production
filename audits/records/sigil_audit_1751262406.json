[
  {
    "execution_id": "exec-8adce0a3-19537463-1751262381",
    "timestamp": "2025-06-30T05:46:21.585788+00:00",
    "sacred_chain": {
      "input_data": "r2d2",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'r2d2' -> 'r2d2'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "r2d2",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/r2d2",
            "title": "r2d2 v0.8.10",
            "content": {
              "raw_markdown": "#  r2d2 v0.8.10\nA generic connection pool \n  * [ #database ](https://crates.io/keywords/database)\n  * [ #pool ](https://crates.io/keywords/pool)\n\n\n  * [ Readme ](https://crates.io/crates/r2d2)\n  * [ 42 Versions ](https://crates.io/crates/r2d2/versions)\n  * [ Dependencies ](https://crates.io/crates/r2d2/dependencies)\n  * [ Dependents ](https://crates.io/crates/r2d2/reverse_dependencies)\n\n\n## Metadata\nabout 3 years ago \n2018 edition \n[ MIT ](https://choosealicense.com/licenses/mit) OR [ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0)\n17.5 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add r2d2\nOr add the following line to your Cargo.toml:\nr2d2 = \"0.8.10\"\n## Repository\n[ github.com/sfackler/r2d2 ](https://github.com/sfackler/r2d2)\n## Owners\n[ Report crate ](https://crates.io/support?crate=r2d2&inquire=crate-violation)\n### Stats Overview\n17,240,818 Downloads all time\n42 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  r2d2 v0.8.10\nA generic connection pool \n  *  #database \u27e81\u27e9\n  *  #pool \u27e82\u27e9\n\n\n  *  Readme \u27e83\u27e9\n  *  42 Versions \u27e84\u27e9\n  *  Dependencies \u27e85\u27e9\n  *  Dependents \u27e86\u27e9\n\n\n## Metadata\nabout 3 years ago \n2018 edition \n MIT \u27e87\u27e9 OR  Apache-2.0 \u27e88\u27e9\n17.5 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add r2d2\nOr add the following line to your Cargo.toml:\nr2d2 = \"0.8.10\"\n## Repository\n github.com/sfackler/r2d2 \u27e89\u27e9\n## Owners\n Report crate \u27e810\u27e9\n### Stats Overview\n17,240,818 Downloads all time\n42 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/database:  #database \n\u27e82\u27e9 https://crates.io/keywords/pool:  #pool \n\u27e83\u27e9 https://crates.io/crates/r2d2:  Readme \n\u27e84\u27e9 https://crates.io/crates/r2d2/versions:  42 Versions \n\u27e85\u27e9 https://crates.io/crates/r2d2/dependencies:  Dependencies \n\u27e86\u27e9 https://crates.io/crates/r2d2/reverse_dependencies:  Dependents \n\u27e87\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e88\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e89\u27e9 https://github.com/sfackler/r2d2:  github.com/sfackler/r2d2 \n\u27e810\u27e9 https://crates.io/support?crate=r2d2&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1042,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "116171.5804098"
          },
          "docs_rs": {
            "url": "https://docs.rs/r2d2",
            "title": "Crate r2d2Copy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/r2d2/latest/r2d2/all.html \"show sidebar\")\n# Crate r2d2Copy item path\n[Settings](https://docs.rs/r2d2/latest/settings.html)\n[Help](https://docs.rs/r2d2/latest/help.html)\nSummary[Source](https://docs.rs/r2d2/latest/src/r2d2/lib.rs.html#1-653)\nExpand description\nA generic connection pool.\nOpening a new database connection every time one is needed is both inefficient and can lead to resource exhaustion under high traffic conditions. A connection pool maintains a set of open connections to a database, handing them out for repeated use.\nr2d2 is agnostic to the connection type it is managing. Implementors of the `ManageConnection` trait provide the database-specific logic to create and check the health of connections.\n## [\u00a7](https://docs.rs/r2d2/latest/r2d2/#example)Example\nUsing an imaginary \u201cfoodb\u201d database.\n[\u24d8](https://docs.rs/r2d2/latest/r2d2/ \"This example is not tested\")```\nuse std::thread;\nextern crate r2d2;\nextern crate r2d2_foodb;\nfn main() {\n  let manager = r2d2_foodb::FooConnectionManager::new(\"localhost:1234\");\n  let pool = r2d2::Pool::builder()\n    .max_size(15)\n    .build(manager)\n    .unwrap();\n  for _ in 0..20 {\n    let pool = pool.clone();\n    thread::spawn(move || {\n      let conn = pool.get().unwrap();\n      // use the connection\n      // it will be returned to the pool when it falls out of scope.\n    })\n  }\n}\n```\n\n## Re-exports[\u00a7](https://docs.rs/r2d2/latest/r2d2/#reexports)\n\n`pub use crate::event::HandleEvent[](https://docs.rs/r2d2/latest/r2d2/event/trait.HandleEvent.html \"trait r2d2::event::HandleEvent\");`\n\n\n`pub use crate::event::NopEventHandler[](https://docs.rs/r2d2/latest/r2d2/event/struct.NopEventHandler.html \"struct r2d2::event::NopEventHandler\");`\n\n## Modules[\u00a7](https://docs.rs/r2d2/latest/r2d2/#modules)\n\n[event](https://docs.rs/r2d2/latest/r2d2/event/index.html \"mod r2d2::event\")\n    Event subscriptions.\n## Structs[\u00a7](https://docs.rs/r2d2/latest/r2d2/#structs)\n\n[Builder](https://docs.rs/r2d2/latest/r2d2/struct.Builder.html \"struct r2d2::Builder\")\n    A builder for a connection pool.\n\n[Error](https://docs.rs/r2d2/latest/r2d2/struct.Error.html \"struct r2d2::Error\")\n    The error type returned by methods in this crate.\n\n[Extensions](https://docs.rs/r2d2/latest/r2d2/struct.Extensions.html \"struct r2d2::Extensions\")\n    A \u201ctype map\u201d used to associate data with pooled connections.\n\n[LoggingErrorHandler](https://docs.rs/r2d2/latest/r2d2/struct.LoggingErrorHandler.html \"struct r2d2::LoggingErrorHandler\")\n    A `HandleError` implementation which logs at the error level.\n\n[NopConnectionCustomizer](https://docs.rs/r2d2/latest/r2d2/struct.NopConnectionCustomizer.html \"struct r2d2::NopConnectionCustomizer\")\n    A `CustomizeConnection` which does nothing.\n\n[NopErrorHandler](https://docs.rs/r2d2/latest/r2d2/struct.NopErrorHandler.html \"struct r2d2::NopErrorHandler\")\n    A `HandleError` implementation which does nothing.\n\n[Pool](https://docs.rs/r2d2/latest/r2d2/struct.Pool.html \"struct r2d2::Pool\")\n    A generic connection pool.\n\n[PooledConnection](https://docs.rs/r2d2/latest/r2d2/struct.PooledConnection.html \"struct r2d2::PooledConnection\")\n    A smart pointer wrapping a connection.\n\n[State](https://docs.rs/r2d2/latest/r2d2/struct.State.html \"struct r2d2::State\")\n    Information about the state of a `Pool`.\n## Traits[\u00a7](https://docs.rs/r2d2/latest/r2d2/#traits)\n\n[CustomizeConnection](https://docs.rs/r2d2/latest/r2d2/trait.CustomizeConnection.html \"trait r2d2::CustomizeConnection\")\n    A trait which allows for customization of connections.\n\n[HandleError](https://docs.rs/r2d2/latest/r2d2/trait.HandleError.html \"trait r2d2::HandleError\")\n    A trait which handles errors reported by the `ManageConnection`.\n\n[ManageConnection](https://docs.rs/r2d2/latest/r2d2/trait.ManageConnection.html \"trait r2d2::ManageConnection\")\n    A trait which provides connection-specific functionality.\n",
              "markdown_with_citations": "[](https://docs.rs/r2d2/latest/r2d2/all.html \"show sidebar\")\n# Crate r2d2Copy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA generic connection pool.\nOpening a new database connection every time one is needed is both inefficient and can lead to resource exhaustion under high traffic conditions. A connection pool maintains a set of open connections to a database, handing them out for repeated use.\nr2d2 is agnostic to the connection type it is managing. Implementors of the `ManageConnection` trait provide the database-specific logic to create and check the health of connections.\n## \u00a7\u27e84\u27e9Example\nUsing an imaginary \u201cfoodb\u201d database.\n\u24d8\u27e85\u27e9```\nuse std::thread;\nextern crate r2d2;\nextern crate r2d2_foodb;\nfn main() {\n  let manager = r2d2_foodb::FooConnectionManager::new(\"localhost:1234\");\n  let pool = r2d2::Pool::builder()\n    .max_size(15)\n    .build(manager)\n    .unwrap();\n  for _ in 0..20 {\n    let pool = pool.clone();\n    thread::spawn(move || {\n      let conn = pool.get().unwrap();\n      // use the connection\n      // it will be returned to the pool when it falls out of scope.\n    })\n  }\n}\n```\n\n## Re-exports\u00a7\u27e86\u27e9\n\n`pub use crate::event::HandleEvent[](https://docs.rs/r2d2/latest/r2d2/event/trait.HandleEvent.html \"trait r2d2::event::HandleEvent\");`\n\n\n`pub use crate::event::NopEventHandler[](https://docs.rs/r2d2/latest/r2d2/event/struct.NopEventHandler.html \"struct r2d2::event::NopEventHandler\");`\n\n## Modules\u00a7\u27e87\u27e9\n\nevent\u27e88\u27e9\n    Event subscriptions.\n## Structs\u00a7\u27e89\u27e9\n\nBuilder\u27e810\u27e9\n    A builder for a connection pool.\n\nError\u27e811\u27e9\n    The error type returned by methods in this crate.\n\nExtensions\u27e812\u27e9\n    A \u201ctype map\u201d used to associate data with pooled connections.\n\nLoggingErrorHandler\u27e813\u27e9\n    A `HandleError` implementation which logs at the error level.\n\nNopConnectionCustomizer\u27e814\u27e9\n    A `CustomizeConnection` which does nothing.\n\nNopErrorHandler\u27e815\u27e9\n    A `HandleError` implementation which does nothing.\n\nPool\u27e816\u27e9\n    A generic connection pool.\n\nPooledConnection\u27e817\u27e9\n    A smart pointer wrapping a connection.\n\nState\u27e818\u27e9\n    Information about the state of a `Pool`.\n## Traits\u00a7\u27e819\u27e9\n\nCustomizeConnection\u27e820\u27e9\n    A trait which allows for customization of connections.\n\nHandleError\u27e821\u27e9\n    A trait which handles errors reported by the `ManageConnection`.\n\nManageConnection\u27e822\u27e9\n    A trait which provides connection-specific functionality.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/r2d2/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/r2d2/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/r2d2/latest/src/r2d2/lib.rs.html#1-653: Source\n\u27e84\u27e9 https://docs.rs/r2d2/latest/r2d2/#example: \u00a7\n\u27e85\u27e9 https://docs.rs/r2d2/latest/r2d2/: This example is not tested - \u24d8\n\u27e86\u27e9 https://docs.rs/r2d2/latest/r2d2/#reexports: \u00a7\n\u27e87\u27e9 https://docs.rs/r2d2/latest/r2d2/#modules: \u00a7\n\u27e88\u27e9 https://docs.rs/r2d2/latest/r2d2/event/index.html: mod r2d2::event - event\n\u27e89\u27e9 https://docs.rs/r2d2/latest/r2d2/#structs: \u00a7\n\u27e810\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.Builder.html: struct r2d2::Builder - Builder\n\u27e811\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.Error.html: struct r2d2::Error - Error\n\u27e812\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.Extensions.html: struct r2d2::Extensions - Extensions\n\u27e813\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.LoggingErrorHandler.html: struct r2d2::LoggingErrorHandler - LoggingErrorHandler\n\u27e814\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.NopConnectionCustomizer.html: struct r2d2::NopConnectionCustomizer - NopConnectionCustomizer\n\u27e815\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.NopErrorHandler.html: struct r2d2::NopErrorHandler - NopErrorHandler\n\u27e816\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.Pool.html: struct r2d2::Pool - Pool\n\u27e817\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.PooledConnection.html: struct r2d2::PooledConnection - PooledConnection\n\u27e818\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.State.html: struct r2d2::State - State\n\u27e819\u27e9 https://docs.rs/r2d2/latest/r2d2/#traits: \u00a7\n\u27e820\u27e9 https://docs.rs/r2d2/latest/r2d2/trait.CustomizeConnection.html: trait r2d2::CustomizeConnection - CustomizeConnection\n\u27e821\u27e9 https://docs.rs/r2d2/latest/r2d2/trait.HandleError.html: trait r2d2::HandleError - HandleError\n\u27e822\u27e9 https://docs.rs/r2d2/latest/r2d2/trait.ManageConnection.html: trait r2d2::ManageConnection - ManageConnection\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 3872,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "116172.3049878"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/r2d2",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [42 releases](https://lib.rs/crates/r2d2/versions)\n0.8.10 |  Jun 21, 2022   \n---|---  \n0.8.9 |  Jun 30, 2020   \n0.8.8 |  Dec 25, 2019   \n0.8.7 |  Nov 26, 2019   \n0.1.0 |  Nov 23, 2014   \n#**30** in [Database interfaces](https://lib.rs/database \"Crates to interface with database management systems.\")\nDownload history 97566/week @ 2025-02-07 95815/week @ 2025-02-14 110018/week @ 2025-02-21 98806/week @ 2025-02-28 92091/week @ 2025-03-07 87131/week @ 2025-03-14 91022/week @ 2025-03-21 108384/week @ 2025-03-28 111319/week @ 2025-04-04 129816/week @ 2025-04-11 152535/week @ 2025-04-18 136334/week @ 2025-04-25 120741/week @ 2025-05-02 134004/week @ 2025-05-09 137511/week @ 2025-05-16 87416/week @ 2025-05-23\n**504,502** downloads per month Used in [**557** crates (294 directly)](https://lib.rs/crates/r2d2/rev)\n**MIT/Apache**\n58KB  1.5K  SLoC\n# r2d2\n[![CircleCI](https://img.gs/czjpqfbdkz/full/https://circleci.com/gh/sfackler/r2d2.svg?style=shield)](https://circleci.com/gh/sfackler/r2d2)\nA generic connection pool for Rust.\n[Documentation](https://docs.rs/r2d2)\nOpening a new database connection every time one is needed is both inefficient and can lead to resource exhaustion under high traffic conditions. A connection pool maintains a set of open connections to a database, handing them out for repeated use.\nr2d2 is agnostic to the connection type it is managing. Implementors of the ``ManageConnection`` trait provide the database-specific logic to create and check the health of connections.\nA (possibly not exhaustive) list of adaptors for different backends:\nBackend | Adaptor Crate  \n---|---  \n[rust-postgres](https://github.com/sfackler/rust-postgres) | [r2d2-postgres](https://github.com/sfackler/r2d2-postgres)  \n[redis-rs](https://github.com/mitsuhiko/redis-rs) | use ``r2d2`` feature of [redis-rs](https://github.com/mitsuhiko/redis-rs)  \n[rust-memcache](https://github.com/aisk/rust-memcache) | [r2d2-memcache](https://github.com/megumish/r2d2-memcache)  \n[rust-mysql-simple](https://github.com/blackbeam/rust-mysql-simple) | [r2d2-mysql](https://github.com/outersky/r2d2-mysql)  \n[rusqlite](https://github.com/jgallagher/rusqlite) | [r2d2-sqlite](https://github.com/ivanceras/r2d2-sqlite)  \n[rsfbclient](https://github.com/fernandobatels/rsfbclient) | [r2d2-firebird](https://lib.rs/crates/r2d2_firebird)  \n[rusted-cypher](https://github.com/livioribeiro/rusted-cypher) | [r2d2-cypher](https://github.com/flosse/r2d2-cypher)  \n[diesel](https://github.com/sgrif/diesel) | [diesel::r2d2](https://github.com/diesel-rs/diesel/blob/master/diesel/src/r2d2.rs) ([docs](https://docs.diesel.rs/diesel/r2d2/))  \n[couchdb](https://github.com/chill-rs/chill) | [r2d2-couchdb](https://github.com/scorphus/r2d2-couchdb)  \n[mongodb (archived)](https://github.com/mongodb-labs/mongo-rust-driver-prototype)use official [mongodb](https://github.com/mongodb/mongo-rust-driver) driver instead | [r2d2-mongodb](https://gitlab.com/petoknm/r2d2-mongodb)(deprecated: official driver handles pooling internally)  \n[odbc](https://github.com/Koka/odbc-rs) | [r2d2-odbc](https://github.com/Koka/r2d2-odbc)  \n[jfs](https://github.com/flosse/rust-json-file-store) | [r2d2-jfs](https://github.com/flosse/r2d2-jfs)  \n[oracle](https://github.com/kubo/rust-oracle) | [r2d2-oracle](https://github.com/rursprung/r2d2-oracle)  \n[ldap3](https://github.com/inejge/ldap3) | [r2d2-ldap](https://github.com/c0dearm/r2d2-ldap)  \n[duckdb-rs](https://github.com/wangfenjin/duckdb-rs) | use ``r2d2`` feature of [duckdb-rs](https://github.com/wangfenjin/duckdb-rs)  \n# Example\nUsing an imaginary \"foodb\" database.\n```\n``use` `std`::``thread`;`\n`extern` `crate` r2d2`;`\n`extern` `crate` r2d2_foodb`;`\n``fn` `main`````(````)``````{`\n  `let` manager `=` `r2d2_foodb`::```FooConnectionManager`::``new`(```\"`localhost:1234`\"```)``;`\n  `let` pool `=` `r2d2`::```Pool`::``builder`(``)`\n    `.``max_size``(``15``)`\n    `.``build``(`manager`)`\n    `.``unwrap``(``)``;`\n  `for` `_` `in` `0``..``20` `{`\n    `let` pool `=` pool`.``clone``(``)``;`\n    `thread`::``spawn`(``move` `||` `{`\n      `let` conn `=` pool`.``get``(``)``.``unwrap``(``)``;`\n      ``//` use the connection`\n      ``//` it will be returned to the pool when it falls out of scope.`\n    `}``)`\n  `}`\n```}```\n`\n```\n\n## License\nLicensed under either of\n  * Apache License, Version 2.0 ([LICENSE-APACHE](https://github.com/sfackler/r2d2/blob/111835f6f4c4e8a8b84b8c298369d90c252fddfc/LICENSE-APACHE) or <http://www.apache.org/licenses/LICENSE-2.0>)\n  * MIT license ([LICENSE-MIT](https://github.com/sfackler/r2d2/blob/111835f6f4c4e8a8b84b8c298369d90c252fddfc/LICENSE-MIT) or <http://opensource.org/licenses/MIT>)\n\n\nat your option.\n### Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you shall be dual licensed as above, without any additional terms or conditions.\n#### Dependencies\n~0.4\u20135MB  ~13K SLoC\n  * [log](https://lib.rs/crates/log \"0.4\")\n  * [parking_lot](https://lib.rs/crates/parking_lot \"0.12\")\n  * [scheduled-thread-pool](https://lib.rs/crates/scheduled-thread-pool \"0.2\")\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  42 releases\u27e81\u27e9\n0.8.10 |  Jun 21, 2022   \n---|---  \n0.8.9 |  Jun 30, 2020   \n0.8.8 |  Dec 25, 2019   \n0.8.7 |  Nov 26, 2019   \n0.1.0 |  Nov 23, 2014   \n#**30** in Database interfaces\u27e82\u27e9\nDownload history 97566/week @ 2025-02-07 95815/week @ 2025-02-14 110018/week @ 2025-02-21 98806/week @ 2025-02-28 92091/week @ 2025-03-07 87131/week @ 2025-03-14 91022/week @ 2025-03-21 108384/week @ 2025-03-28 111319/week @ 2025-04-04 129816/week @ 2025-04-11 152535/week @ 2025-04-18 136334/week @ 2025-04-25 120741/week @ 2025-05-02 134004/week @ 2025-05-09 137511/week @ 2025-05-16 87416/week @ 2025-05-23\n**504,502** downloads per month Used in **557** crates (294 directly)\u27e83\u27e9\n**MIT/Apache**\n58KB  1.5K  SLoC\n# r2d2\n![CircleCI\u27e84\u27e9](https://circleci.com/gh/sfackler/r2d2)\nA generic connection pool for Rust.\nDocumentation\u27e85\u27e9\nOpening a new database connection every time one is needed is both inefficient and can lead to resource exhaustion under high traffic conditions. A connection pool maintains a set of open connections to a database, handing them out for repeated use.\nr2d2 is agnostic to the connection type it is managing. Implementors of the ``ManageConnection`` trait provide the database-specific logic to create and check the health of connections.\nA (possibly not exhaustive) list of adaptors for different backends:\nBackend | Adaptor Crate  \n---|---  \nrust-postgres\u27e86\u27e9 | r2d2-postgres\u27e87\u27e9  \nredis-rs\u27e88\u27e9 | use ``r2d2`` feature of redis-rs\u27e88\u27e9  \nrust-memcache\u27e89\u27e9 | r2d2-memcache\u27e810\u27e9  \nrust-mysql-simple\u27e811\u27e9 | r2d2-mysql\u27e812\u27e9  \nrusqlite\u27e813\u27e9 | r2d2-sqlite\u27e814\u27e9  \nrsfbclient\u27e815\u27e9 | r2d2-firebird\u27e816\u27e9  \nrusted-cypher\u27e817\u27e9 | r2d2-cypher\u27e818\u27e9  \ndiesel\u27e819\u27e9 | diesel::r2d2\u27e820\u27e9 (docs\u27e821\u27e9)  \ncouchdb\u27e822\u27e9 | r2d2-couchdb\u27e823\u27e9  \nmongodb (archived)\u27e824\u27e9use official mongodb\u27e825\u27e9 driver instead | r2d2-mongodb\u27e826\u27e9(deprecated: official driver handles pooling internally)  \nodbc\u27e827\u27e9 | r2d2-odbc\u27e828\u27e9  \njfs\u27e829\u27e9 | r2d2-jfs\u27e830\u27e9  \noracle\u27e831\u27e9 | r2d2-oracle\u27e832\u27e9  \nldap3\u27e833\u27e9 | r2d2-ldap\u27e834\u27e9  \nduckdb-rs\u27e835\u27e9 | use ``r2d2`` feature of duckdb-rs\u27e835\u27e9  \n# Example\nUsing an imaginary \"foodb\" database.\n```\n``use` `std`::``thread`;`\n`extern` `crate` r2d2`;`\n`extern` `crate` r2d2_foodb`;`\n``fn` `main`````(````)``````{`\n  `let` manager `=` `r2d2_foodb`::```FooConnectionManager`::``new`(```\"`localhost:1234`\"```)``;`\n  `let` pool `=` `r2d2`::```Pool`::``builder`(``)`\n    `.``max_size``(``15``)`\n    `.``build``(`manager`)`\n    `.``unwrap``(``)``;`\n  `for` `_` `in` `0``..``20` `{`\n    `let` pool `=` pool`.``clone``(``)``;`\n    `thread`::``spawn`(``move` `||` `{`\n      `let` conn `=` pool`.``get``(``)``.``unwrap``(``)``;`\n      ``//` use the connection`\n      ``//` it will be returned to the pool when it falls out of scope.`\n    `}``)`\n  `}`\n```}```\n`\n```\n\n## License\nLicensed under either of\n  * Apache License, Version 2.0 (LICENSE-APACHE\u27e836\u27e9 or <http://www.apache.org/licenses/LICENSE-2.0>)\n  * MIT license (LICENSE-MIT\u27e837\u27e9 or <http://opensource.org/licenses/MIT>)\n\n\nat your option.\n### Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you shall be dual licensed as above, without any additional terms or conditions.\n#### Dependencies\n~0.4\u20135MB  ~13K SLoC\n  * log\u27e838\u27e9\n  * parking_lot\u27e839\u27e9\n  * scheduled-thread-pool\u27e840\u27e9\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/r2d2/versions: 42 releases\n\u27e82\u27e9 https://lib.rs/database: Crates to interface with database management systems. - Database interfaces\n\u27e83\u27e9 https://lib.rs/crates/r2d2/rev: **557** crates (294 directly)\n\u27e84\u27e9 https://img.gs/czjpqfbdkz/full/https://circleci.com/gh/sfackler/r2d2.svg?style=shield: ![CircleCI\n\u27e85\u27e9 https://docs.rs/r2d2: Documentation\n\u27e86\u27e9 https://github.com/sfackler/rust-postgres: rust-postgres\n\u27e87\u27e9 https://github.com/sfackler/r2d2-postgres: r2d2-postgres\n\u27e88\u27e9 https://github.com/mitsuhiko/redis-rs: redis-rs\n\u27e89\u27e9 https://github.com/aisk/rust-memcache: rust-memcache\n\u27e810\u27e9 https://github.com/megumish/r2d2-memcache: r2d2-memcache\n\u27e811\u27e9 https://github.com/blackbeam/rust-mysql-simple: rust-mysql-simple\n\u27e812\u27e9 https://github.com/outersky/r2d2-mysql: r2d2-mysql\n\u27e813\u27e9 https://github.com/jgallagher/rusqlite: rusqlite\n\u27e814\u27e9 https://github.com/ivanceras/r2d2-sqlite: r2d2-sqlite\n\u27e815\u27e9 https://github.com/fernandobatels/rsfbclient: rsfbclient\n\u27e816\u27e9 https://lib.rs/crates/r2d2_firebird: r2d2-firebird\n\u27e817\u27e9 https://github.com/livioribeiro/rusted-cypher: rusted-cypher\n\u27e818\u27e9 https://github.com/flosse/r2d2-cypher: r2d2-cypher\n\u27e819\u27e9 https://github.com/sgrif/diesel: diesel\n\u27e820\u27e9 https://github.com/diesel-rs/diesel/blob/master/diesel/src/r2d2.rs: diesel::r2d2\n\u27e821\u27e9 https://docs.diesel.rs/diesel/r2d2/: docs\n\u27e822\u27e9 https://github.com/chill-rs/chill: couchdb\n\u27e823\u27e9 https://github.com/scorphus/r2d2-couchdb: r2d2-couchdb\n\u27e824\u27e9 https://github.com/mongodb-labs/mongo-rust-driver-prototype: mongodb (archived)\n\u27e825\u27e9 https://github.com/mongodb/mongo-rust-driver: mongodb\n\u27e826\u27e9 https://gitlab.com/petoknm/r2d2-mongodb: r2d2-mongodb\n\u27e827\u27e9 https://github.com/Koka/odbc-rs: odbc\n\u27e828\u27e9 https://github.com/Koka/r2d2-odbc: r2d2-odbc\n\u27e829\u27e9 https://github.com/flosse/rust-json-file-store: jfs\n\u27e830\u27e9 https://github.com/flosse/r2d2-jfs: r2d2-jfs\n\u27e831\u27e9 https://github.com/kubo/rust-oracle: oracle\n\u27e832\u27e9 https://github.com/rursprung/r2d2-oracle: r2d2-oracle\n\u27e833\u27e9 https://github.com/inejge/ldap3: ldap3\n\u27e834\u27e9 https://github.com/c0dearm/r2d2-ldap: r2d2-ldap\n\u27e835\u27e9 https://github.com/wangfenjin/duckdb-rs: duckdb-rs\n\u27e836\u27e9 https://github.com/sfackler/r2d2/blob/111835f6f4c4e8a8b84b8c298369d90c252fddfc/LICENSE-APACHE: LICENSE-APACHE\n\u27e837\u27e9 https://github.com/sfackler/r2d2/blob/111835f6f4c4e8a8b84b8c298369d90c252fddfc/LICENSE-MIT: LICENSE-MIT\n\u27e838\u27e9 https://lib.rs/crates/log: 0.4 - log\n\u27e839\u27e9 https://lib.rs/crates/parking_lot: 0.12 - parking_lot\n\u27e840\u27e9 https://lib.rs/crates/scheduled-thread-pool: 0.2 - scheduled-thread-pool\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 5138,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "116172.6797475"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libcfg_if-0416b600f5de43de.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "scopeguard",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libscopeguard-b3036dac4c63d524.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\liblog-1786323f854c511b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libsmallvec-6a440c251b58272a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\build\\parking_lot_core-fda95fe9f127d56b\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\build\\parking_lot_core-fda95fe9f127d56b\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.5.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libautocfg-ff5884693664d457.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libautocfg-ff5884693664d457.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\build\\parking_lot_core-9928602ef8bb032d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\build\\lock_api-d2343c0fe6ff07ff\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\build\\lock_api-d2343c0fe6ff07ff\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libparking_lot_core-371fd459e255aab1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_const_fn_trait_bound"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\build\\lock_api-26a72cfa18e2caea\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lock_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\liblock_api-9c180e8e0f8b9e04.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot-0.12.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot-0.12.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libparking_lot-9292917706b43cc2.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#scheduled-thread-pool@0.2.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scheduled-thread-pool-0.2.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "scheduled_thread_pool",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scheduled-thread-pool-0.2.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libscheduled_thread_pool-c2807eff1864dbf3.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxqndwz6v/r2d2-0.8.10#r2d2@0.8.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "r2d2",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: use of deprecated method `std::error::Error::description`: use the Display impl or to_string()\n   --> src\\lib.rs:559:37\n    |\n559 |         fmt.write_str(error::Error::description(self))?;\n    |                                     ^^^^^^^^^^^\n    |\n    = note: `#[warn(deprecated)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(deprecated)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "deprecated",
                  "explanation": null
                },
                "level": "warning",
                "message": "use of deprecated method `std::error::Error::description`: use the Display impl or to_string()",
                "spans": [
                  {
                    "byte_end": 17338,
                    "byte_start": 17327,
                    "column_end": 48,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 559,
                    "line_start": 559,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 37,
                        "text": "        fmt.write_str(error::Error::description(self))?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxqndwz6v/r2d2-0.8.10#r2d2@0.8.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "r2d2",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: use of deprecated associated function `scheduled_thread_pool::ScheduledThreadPool::with_name`: use ScheduledThreadPool::builder\n   --> src\\config.rs:250:51\n    |\n250 |             None => Arc::new(ScheduledThreadPool::with_name(\"r2d2-worker-{}\", 3)),\n    |                                                   ^^^^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": {
                  "code": "deprecated",
                  "explanation": null
                },
                "level": "warning",
                "message": "use of deprecated associated function `scheduled_thread_pool::ScheduledThreadPool::with_name`: use ScheduledThreadPool::builder",
                "spans": [
                  {
                    "byte_end": 8099,
                    "byte_start": 8090,
                    "column_end": 60,
                    "column_start": 51,
                    "expansion": null,
                    "file_name": "src\\config.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 250,
                    "line_start": 250,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 51,
                        "text": "            None => Arc::new(ScheduledThreadPool::with_name(\"r2d2-worker-{}\", 3)),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxqndwz6v/r2d2-0.8.10#r2d2@0.8.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "r2d2",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libr2d2-96f214520ceed7b8.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.5.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libautocfg-ff5884693664d457.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libautocfg-ff5884693664d457.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\build\\parking_lot_core-fda95fe9f127d56b\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\build\\parking_lot_core-fda95fe9f127d56b\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libsmallvec-6a440c251b58272a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "scopeguard",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libscopeguard-b3036dac4c63d524.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libcfg_if-0416b600f5de43de.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\liblog-1786323f854c511b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\build\\lock_api-d2343c0fe6ff07ff\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\build\\lock_api-d2343c0fe6ff07ff\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\build\\parking_lot_core-9928602ef8bb032d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_const_fn_trait_bound"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\build\\lock_api-26a72cfa18e2caea\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lock_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\liblock_api-9c180e8e0f8b9e04.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libparking_lot_core-371fd459e255aab1.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot-0.12.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot-0.12.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libparking_lot-9292917706b43cc2.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#scheduled-thread-pool@0.2.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scheduled-thread-pool-0.2.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "scheduled_thread_pool",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scheduled-thread-pool-0.2.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libscheduled_thread_pool-c2807eff1864dbf3.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxqndwz6v/r2d2-0.8.10#r2d2@0.8.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "r2d2",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: use of deprecated method `std::error::Error::description`: use the Display impl or to_string()\n   --> src\\lib.rs:559:37\n    |\n559 |         fmt.write_str(error::Error::description(self))?;\n    |                                     ^^^^^^^^^^^\n    |\n    = note: `#[warn(deprecated)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(deprecated)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "deprecated",
                  "explanation": null
                },
                "level": "warning",
                "message": "use of deprecated method `std::error::Error::description`: use the Display impl or to_string()",
                "spans": [
                  {
                    "byte_end": 17338,
                    "byte_start": 17327,
                    "column_end": 48,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 559,
                    "line_start": 559,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 37,
                        "text": "        fmt.write_str(error::Error::description(self))?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxqndwz6v/r2d2-0.8.10#r2d2@0.8.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "r2d2",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: use of deprecated associated function `scheduled_thread_pool::ScheduledThreadPool::with_name`: use ScheduledThreadPool::builder\n   --> src\\config.rs:250:51\n    |\n250 |             None => Arc::new(ScheduledThreadPool::with_name(\"r2d2-worker-{}\", 3)),\n    |                                                   ^^^^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": {
                  "code": "deprecated",
                  "explanation": null
                },
                "level": "warning",
                "message": "use of deprecated associated function `scheduled_thread_pool::ScheduledThreadPool::with_name`: use ScheduledThreadPool::builder",
                "spans": [
                  {
                    "byte_end": 8099,
                    "byte_start": 8090,
                    "column_end": 60,
                    "column_start": 51,
                    "expansion": null,
                    "file_name": "src\\config.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 250,
                    "line_start": 250,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 51,
                        "text": "            None => Arc::new(ScheduledThreadPool::with_name(\"r2d2-worker-{}\", 3)),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxqndwz6v/r2d2-0.8.10#r2d2@0.8.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "r2d2",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\lib.rs:121:9\n    |\n121 |         error!(\"{}\", error);\n    |         ^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n    = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n    |\n121 -         error!(\"{}\", error);\n121 +         error!(\"{error}\");\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::uninlined_format_args)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3772,
                        "byte_start": 3772,
                        "column_end": 18,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 121,
                        "line_start": 121,
                        "suggested_replacement": "error",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 18,
                            "highlight_start": 18,
                            "text": "        error!(\"{}\", error);"
                          }
                        ]
                      },
                      {
                        "byte_end": 3781,
                        "byte_start": 3774,
                        "column_end": 27,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 121,
                        "line_start": 121,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 20,
                            "text": "        error!(\"{}\", error);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 3782,
                    "byte_start": 3763,
                    "column_end": 28,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 121,
                    "line_start": 121,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 9,
                        "text": "        error!(\"{}\", error);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxqndwz6v/r2d2-0.8.10#r2d2@0.8.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "r2d2",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\lib.rs:561:13\n    |\n561 |             write!(fmt, \": {}\", err)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n561 -             write!(fmt, \": {}\", err)?;\n561 +             write!(fmt, \": {err}\")?;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 17416,
                        "byte_start": 17416,
                        "column_end": 29,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 561,
                        "line_start": 561,
                        "suggested_replacement": "err",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 29,
                            "text": "            write!(fmt, \": {}\", err)?;"
                          }
                        ]
                      },
                      {
                        "byte_end": 17423,
                        "byte_start": 17418,
                        "column_end": 36,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 561,
                        "line_start": 561,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 31,
                            "text": "            write!(fmt, \": {}\", err)?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 17424,
                    "byte_start": 17400,
                    "column_end": 37,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 561,
                    "line_start": 561,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 13,
                        "text": "            write!(fmt, \": {}\", err)?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxqndwz6v/r2d2-0.8.10#r2d2@0.8.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "r2d2",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this seems like a manual implementation of the non-exhaustive pattern\n   --> src\\lib.rs:574:1\n    |\n574 | / pub struct State {\n575 | |     /// The number of connections currently being managed by the pool.\n576 | |     pub connections: u32,\n577 | |     /// The number of idle connections.\n578 | |     pub idle_connections: u32,\n579 | |     _p: (),\n580 | | }\n    | |_^\n    |\nhelp: remove this field\n   --> src\\lib.rs:579:5\n    |\n579 |     _p: (),\n    |     ^^^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_non_exhaustive\n    = note: `#[warn(clippy::manual_non_exhaustive)]` on by default\nhelp: use the `#[non_exhaustive]` attribute instead\n    |\n574 + #[non_exhaustive]\n575 | pub struct State {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "remove this field",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 17821,
                        "byte_start": 17815,
                        "column_end": 11,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 579,
                        "line_start": 579,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 11,
                            "highlight_start": 5,
                            "text": "    _p: (),"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_non_exhaustive",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::manual_non_exhaustive)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the `#[non_exhaustive]` attribute instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 17624,
                        "byte_start": 17624,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 574,
                        "line_start": 574,
                        "suggested_replacement": "#[non_exhaustive]\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub struct State {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_non_exhaustive",
                  "explanation": null
                },
                "level": "warning",
                "message": "this seems like a manual implementation of the non-exhaustive pattern",
                "spans": [
                  {
                    "byte_end": 17824,
                    "byte_start": 17624,
                    "column_end": 2,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 580,
                    "line_start": 574,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "pub struct State {"
                      },
                      {
                        "highlight_end": 71,
                        "highlight_start": 1,
                        "text": "    /// The number of connections currently being managed by the pool."
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "    pub connections: u32,"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "    /// The number of idle connections."
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "    pub idle_connections: u32,"
                      },
                      {
                        "highlight_end": 12,
                        "highlight_start": 1,
                        "text": "    _p: (),"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxqndwz6v/r2d2-0.8.10#r2d2@0.8.10",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "r2d2",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxqndwz6v\\r2d2-0.8.10\\target\\debug\\deps\\libr2d2-dd71f4164465884f.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 22
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {}
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "r2d2",
          "version": "0.8.10",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/r2d2/latest/r2d2/all.html \"show sidebar\")\n# Crate r2d2Copy item path\n[Settings](https://docs.rs/r2d2/latest/settings.html)\n[Help](https://docs.rs/r2d2/latest/help.html)\nSummary[Source](https://docs.rs/r2d2/latest/src/r2d2/lib.rs.html#1-653)\nExpand description\nA generic connection pool.\nOpening a new database connection every time one is needed is both inefficient and can lead to resource exhaustion under high traffic conditions. A connection pool maintains a set of open connections to a database, handing them out for repeated use.\nr2d2 is agnostic to the connection type it is managing. Implementors of the `ManageConnection` trait provide the database-specific logic to create and check the health of connections.\n## [\u00a7](https://docs.rs/r2d2/latest/r2d2/#example)Example\nUsing an imaginary \u201cfoodb\u201d database.\n[\u24d8](https://docs.rs/r2d2/latest/r2d2/ \"This example is not tested\")```\nuse std::thread;\nextern crate r2d2;\nextern crate r2d2_foodb;\nfn main() {\n  let manager = r2d2_foodb::FooConnectionManager::new(\"localhost:1234\");\n  let pool = r2d2::Pool::builder()\n    .max_size(15)\n    .build(manager)\n    .unwrap();\n  for _ in 0..20 {\n    let pool = pool.clone();\n    thread::spawn(move || {\n      let conn = pool.get().unwrap();\n      // use the connection\n      // it will be returned to the pool when it falls out of scope.\n    })\n  }\n}\n```\n\n## Re-exports[\u00a7](https://docs.rs/r2d2/latest/r2d2/#reexports)\n\n`pub use crate::event::HandleEvent[](https://docs.rs/r2d2/latest/r2d2/event/trait.HandleEvent.html \"trait r2d2::event::HandleEvent\");`\n\n\n`pub use crate::event::NopEventHandler[](https://docs.rs/r2d2/latest/r2d2/event/struct.NopEventHandler.html \"struct r2d2::event::NopEventHandler\");`\n\n## Modules[\u00a7](https://docs.rs/r2d2/latest/r2d2/#modules)\n\n[event](https://docs.rs/r2d2/latest/r2d2/event/index.html \"mod r2d2::event\")\n    Event subscriptions.\n## Structs[\u00a7](https://docs.rs/r2d2/latest/r2d2/#structs)\n\n[Builder](https://docs.rs/r2d2/latest/r2d2/struct.Builder.html \"struct r2d2::Builder\")\n    A builder for a connection pool.\n\n[Error](https://docs.rs/r2d2/latest/r2d2/struct.Error.html \"struct r2d2::Error\")\n    The error type returned by methods in this crate.\n\n[Extensions](https://docs.rs/r2d2/latest/r2d2/struct.Extensions.html \"struct r2d2::Extensions\")\n    A \u201ctype map\u201d used to associate data with pooled connections.\n\n[LoggingErrorHandler](https://docs.rs/r2d2/latest/r2d2/struct.LoggingErrorHandler.html \"struct r2d2::LoggingErrorHandler\")\n    A `HandleError` implementation which logs at the error level.\n\n[NopConnectionCustomizer](https://docs.rs/r2d2/latest/r2d2/struct.NopConnectionCustomizer.html \"struct r2d2::NopConnectionCustomizer\")\n    A `CustomizeConnection` which does nothing.\n\n[NopErrorHandler](https://docs.rs/r2d2/latest/r2d2/struct.NopErrorHandler.html \"struct r2d2::NopErrorHandler\")\n    A `HandleError` implementation which does nothing.\n\n[Pool](https://docs.rs/r2d2/latest/r2d2/struct.Pool.html \"struct r2d2::Pool\")\n    A generic connection pool.\n\n[PooledConnection](https://docs.rs/r2d2/latest/r2d2/struct.PooledConnection.html \"struct r2d2::PooledConnection\")\n    A smart pointer wrapping a connection.\n\n[State](https://docs.rs/r2d2/latest/r2d2/struct.State.html \"struct r2d2::State\")\n    Information about the state of a `Pool`.\n## Traits[\u00a7](https://docs.rs/r2d2/latest/r2d2/#traits)\n\n[CustomizeConnection](https://docs.rs/r2d2/latest/r2d2/trait.CustomizeConnection.html \"trait r2d2::CustomizeConnection\")\n    A trait which allows for customization of connections.\n\n[HandleError](https://docs.rs/r2d2/latest/r2d2/trait.HandleError.html \"trait r2d2::HandleError\")\n    A trait which handles errors reported by the `ManageConnection`.\n\n[ManageConnection](https://docs.rs/r2d2/latest/r2d2/trait.ManageConnection.html \"trait r2d2::ManageConnection\")\n    A trait which provides connection-specific functionality.\n",
            "markdown_with_citations": "[](https://docs.rs/r2d2/latest/r2d2/all.html \"show sidebar\")\n# Crate r2d2Copy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA generic connection pool.\nOpening a new database connection every time one is needed is both inefficient and can lead to resource exhaustion under high traffic conditions. A connection pool maintains a set of open connections to a database, handing them out for repeated use.\nr2d2 is agnostic to the connection type it is managing. Implementors of the `ManageConnection` trait provide the database-specific logic to create and check the health of connections.\n## \u00a7\u27e84\u27e9Example\nUsing an imaginary \u201cfoodb\u201d database.\n\u24d8\u27e85\u27e9```\nuse std::thread;\nextern crate r2d2;\nextern crate r2d2_foodb;\nfn main() {\n  let manager = r2d2_foodb::FooConnectionManager::new(\"localhost:1234\");\n  let pool = r2d2::Pool::builder()\n    .max_size(15)\n    .build(manager)\n    .unwrap();\n  for _ in 0..20 {\n    let pool = pool.clone();\n    thread::spawn(move || {\n      let conn = pool.get().unwrap();\n      // use the connection\n      // it will be returned to the pool when it falls out of scope.\n    })\n  }\n}\n```\n\n## Re-exports\u00a7\u27e86\u27e9\n\n`pub use crate::event::HandleEvent[](https://docs.rs/r2d2/latest/r2d2/event/trait.HandleEvent.html \"trait r2d2::event::HandleEvent\");`\n\n\n`pub use crate::event::NopEventHandler[](https://docs.rs/r2d2/latest/r2d2/event/struct.NopEventHandler.html \"struct r2d2::event::NopEventHandler\");`\n\n## Modules\u00a7\u27e87\u27e9\n\nevent\u27e88\u27e9\n    Event subscriptions.\n## Structs\u00a7\u27e89\u27e9\n\nBuilder\u27e810\u27e9\n    A builder for a connection pool.\n\nError\u27e811\u27e9\n    The error type returned by methods in this crate.\n\nExtensions\u27e812\u27e9\n    A \u201ctype map\u201d used to associate data with pooled connections.\n\nLoggingErrorHandler\u27e813\u27e9\n    A `HandleError` implementation which logs at the error level.\n\nNopConnectionCustomizer\u27e814\u27e9\n    A `CustomizeConnection` which does nothing.\n\nNopErrorHandler\u27e815\u27e9\n    A `HandleError` implementation which does nothing.\n\nPool\u27e816\u27e9\n    A generic connection pool.\n\nPooledConnection\u27e817\u27e9\n    A smart pointer wrapping a connection.\n\nState\u27e818\u27e9\n    Information about the state of a `Pool`.\n## Traits\u00a7\u27e819\u27e9\n\nCustomizeConnection\u27e820\u27e9\n    A trait which allows for customization of connections.\n\nHandleError\u27e821\u27e9\n    A trait which handles errors reported by the `ManageConnection`.\n\nManageConnection\u27e822\u27e9\n    A trait which provides connection-specific functionality.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/r2d2/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/r2d2/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/r2d2/latest/src/r2d2/lib.rs.html#1-653: Source\n\u27e84\u27e9 https://docs.rs/r2d2/latest/r2d2/#example: \u00a7\n\u27e85\u27e9 https://docs.rs/r2d2/latest/r2d2/: This example is not tested - \u24d8\n\u27e86\u27e9 https://docs.rs/r2d2/latest/r2d2/#reexports: \u00a7\n\u27e87\u27e9 https://docs.rs/r2d2/latest/r2d2/#modules: \u00a7\n\u27e88\u27e9 https://docs.rs/r2d2/latest/r2d2/event/index.html: mod r2d2::event - event\n\u27e89\u27e9 https://docs.rs/r2d2/latest/r2d2/#structs: \u00a7\n\u27e810\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.Builder.html: struct r2d2::Builder - Builder\n\u27e811\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.Error.html: struct r2d2::Error - Error\n\u27e812\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.Extensions.html: struct r2d2::Extensions - Extensions\n\u27e813\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.LoggingErrorHandler.html: struct r2d2::LoggingErrorHandler - LoggingErrorHandler\n\u27e814\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.NopConnectionCustomizer.html: struct r2d2::NopConnectionCustomizer - NopConnectionCustomizer\n\u27e815\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.NopErrorHandler.html: struct r2d2::NopErrorHandler - NopErrorHandler\n\u27e816\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.Pool.html: struct r2d2::Pool - Pool\n\u27e817\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.PooledConnection.html: struct r2d2::PooledConnection - PooledConnection\n\u27e818\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.State.html: struct r2d2::State - State\n\u27e819\u27e9 https://docs.rs/r2d2/latest/r2d2/#traits: \u00a7\n\u27e820\u27e9 https://docs.rs/r2d2/latest/r2d2/trait.CustomizeConnection.html: trait r2d2::CustomizeConnection - CustomizeConnection\n\u27e821\u27e9 https://docs.rs/r2d2/latest/r2d2/trait.HandleError.html: trait r2d2::HandleError - HandleError\n\u27e822\u27e9 https://docs.rs/r2d2/latest/r2d2/trait.ManageConnection.html: trait r2d2::ManageConnection - ManageConnection\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "r2d2",
          "version": "0.8.10",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/r2d2/latest/r2d2/all.html \"show sidebar\")\n# Crate r2d2Copy item path\n[Settings](https://docs.rs/r2d2/latest/settings.html)\n[Help](https://docs.rs/r2d2/latest/help.html)\nSummary[Source](https://docs.rs/r2d2/latest/src/r2d2/lib.rs.html#1-653)\nExpand description\nA generic connection pool.\nOpening a new database connection every time one is needed is both inefficient and can lead to resource exhaustion under high traffic conditions. A connection pool maintains a set of open connections to a database, handing them out for repeated use.\nr2d2 is agnostic to the connection type it is managing. Implementors of the `ManageConnection` trait provide the database-specific logic to create and check the health of connections.\n## [\u00a7](https://docs.rs/r2d2/latest/r2d2/#example)Example\nUsing an imaginary \u201cfoodb\u201d database.\n[\u24d8](https://docs.rs/r2d2/latest/r2d2/ \"This example is not tested\")```\nuse std::thread;\nextern crate r2d2;\nextern crate r2d2_foodb;\nfn main() {\n  let manager = r2d2_foodb::FooConnectionManager::new(\"localhost:1234\");\n  let pool = r2d2::Pool::builder()\n    .max_size(15)\n    .build(manager)\n    .unwrap();\n  for _ in 0..20 {\n    let pool = pool.clone();\n    thread::spawn(move || {\n      let conn = pool.get().unwrap();\n      // use the connection\n      // it will be returned to the pool when it falls out of scope.\n    })\n  }\n}\n```\n\n## Re-exports[\u00a7](https://docs.rs/r2d2/latest/r2d2/#reexports)\n\n`pub use crate::event::HandleEvent[](https://docs.rs/r2d2/latest/r2d2/event/trait.HandleEvent.html \"trait r2d2::event::HandleEvent\");`\n\n\n`pub use crate::event::NopEventHandler[](https://docs.rs/r2d2/latest/r2d2/event/struct.NopEventHandler.html \"struct r2d2::event::NopEventHandler\");`\n\n## Modules[\u00a7](https://docs.rs/r2d2/latest/r2d2/#modules)\n\n[event](https://docs.rs/r2d2/latest/r2d2/event/index.html \"mod r2d2::event\")\n    Event subscriptions.\n## Structs[\u00a7](https://docs.rs/r2d2/latest/r2d2/#structs)\n\n[Builder](https://docs.rs/r2d2/latest/r2d2/struct.Builder.html \"struct r2d2::Builder\")\n    A builder for a connection pool.\n\n[Error](https://docs.rs/r2d2/latest/r2d2/struct.Error.html \"struct r2d2::Error\")\n    The error type returned by methods in this crate.\n\n[Extensions](https://docs.rs/r2d2/latest/r2d2/struct.Extensions.html \"struct r2d2::Extensions\")\n    A \u201ctype map\u201d used to associate data with pooled connections.\n\n[LoggingErrorHandler](https://docs.rs/r2d2/latest/r2d2/struct.LoggingErrorHandler.html \"struct r2d2::LoggingErrorHandler\")\n    A `HandleError` implementation which logs at the error level.\n\n[NopConnectionCustomizer](https://docs.rs/r2d2/latest/r2d2/struct.NopConnectionCustomizer.html \"struct r2d2::NopConnectionCustomizer\")\n    A `CustomizeConnection` which does nothing.\n\n[NopErrorHandler](https://docs.rs/r2d2/latest/r2d2/struct.NopErrorHandler.html \"struct r2d2::NopErrorHandler\")\n    A `HandleError` implementation which does nothing.\n\n[Pool](https://docs.rs/r2d2/latest/r2d2/struct.Pool.html \"struct r2d2::Pool\")\n    A generic connection pool.\n\n[PooledConnection](https://docs.rs/r2d2/latest/r2d2/struct.PooledConnection.html \"struct r2d2::PooledConnection\")\n    A smart pointer wrapping a connection.\n\n[State](https://docs.rs/r2d2/latest/r2d2/struct.State.html \"struct r2d2::State\")\n    Information about the state of a `Pool`.\n## Traits[\u00a7](https://docs.rs/r2d2/latest/r2d2/#traits)\n\n[CustomizeConnection](https://docs.rs/r2d2/latest/r2d2/trait.CustomizeConnection.html \"trait r2d2::CustomizeConnection\")\n    A trait which allows for customization of connections.\n\n[HandleError](https://docs.rs/r2d2/latest/r2d2/trait.HandleError.html \"trait r2d2::HandleError\")\n    A trait which handles errors reported by the `ManageConnection`.\n\n[ManageConnection](https://docs.rs/r2d2/latest/r2d2/trait.ManageConnection.html \"trait r2d2::ManageConnection\")\n    A trait which provides connection-specific functionality.\n",
            "markdown_with_citations": "[](https://docs.rs/r2d2/latest/r2d2/all.html \"show sidebar\")\n# Crate r2d2Copy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA generic connection pool.\nOpening a new database connection every time one is needed is both inefficient and can lead to resource exhaustion under high traffic conditions. A connection pool maintains a set of open connections to a database, handing them out for repeated use.\nr2d2 is agnostic to the connection type it is managing. Implementors of the `ManageConnection` trait provide the database-specific logic to create and check the health of connections.\n## \u00a7\u27e84\u27e9Example\nUsing an imaginary \u201cfoodb\u201d database.\n\u24d8\u27e85\u27e9```\nuse std::thread;\nextern crate r2d2;\nextern crate r2d2_foodb;\nfn main() {\n  let manager = r2d2_foodb::FooConnectionManager::new(\"localhost:1234\");\n  let pool = r2d2::Pool::builder()\n    .max_size(15)\n    .build(manager)\n    .unwrap();\n  for _ in 0..20 {\n    let pool = pool.clone();\n    thread::spawn(move || {\n      let conn = pool.get().unwrap();\n      // use the connection\n      // it will be returned to the pool when it falls out of scope.\n    })\n  }\n}\n```\n\n## Re-exports\u00a7\u27e86\u27e9\n\n`pub use crate::event::HandleEvent[](https://docs.rs/r2d2/latest/r2d2/event/trait.HandleEvent.html \"trait r2d2::event::HandleEvent\");`\n\n\n`pub use crate::event::NopEventHandler[](https://docs.rs/r2d2/latest/r2d2/event/struct.NopEventHandler.html \"struct r2d2::event::NopEventHandler\");`\n\n## Modules\u00a7\u27e87\u27e9\n\nevent\u27e88\u27e9\n    Event subscriptions.\n## Structs\u00a7\u27e89\u27e9\n\nBuilder\u27e810\u27e9\n    A builder for a connection pool.\n\nError\u27e811\u27e9\n    The error type returned by methods in this crate.\n\nExtensions\u27e812\u27e9\n    A \u201ctype map\u201d used to associate data with pooled connections.\n\nLoggingErrorHandler\u27e813\u27e9\n    A `HandleError` implementation which logs at the error level.\n\nNopConnectionCustomizer\u27e814\u27e9\n    A `CustomizeConnection` which does nothing.\n\nNopErrorHandler\u27e815\u27e9\n    A `HandleError` implementation which does nothing.\n\nPool\u27e816\u27e9\n    A generic connection pool.\n\nPooledConnection\u27e817\u27e9\n    A smart pointer wrapping a connection.\n\nState\u27e818\u27e9\n    Information about the state of a `Pool`.\n## Traits\u00a7\u27e819\u27e9\n\nCustomizeConnection\u27e820\u27e9\n    A trait which allows for customization of connections.\n\nHandleError\u27e821\u27e9\n    A trait which handles errors reported by the `ManageConnection`.\n\nManageConnection\u27e822\u27e9\n    A trait which provides connection-specific functionality.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/r2d2/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/r2d2/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/r2d2/latest/src/r2d2/lib.rs.html#1-653: Source\n\u27e84\u27e9 https://docs.rs/r2d2/latest/r2d2/#example: \u00a7\n\u27e85\u27e9 https://docs.rs/r2d2/latest/r2d2/: This example is not tested - \u24d8\n\u27e86\u27e9 https://docs.rs/r2d2/latest/r2d2/#reexports: \u00a7\n\u27e87\u27e9 https://docs.rs/r2d2/latest/r2d2/#modules: \u00a7\n\u27e88\u27e9 https://docs.rs/r2d2/latest/r2d2/event/index.html: mod r2d2::event - event\n\u27e89\u27e9 https://docs.rs/r2d2/latest/r2d2/#structs: \u00a7\n\u27e810\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.Builder.html: struct r2d2::Builder - Builder\n\u27e811\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.Error.html: struct r2d2::Error - Error\n\u27e812\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.Extensions.html: struct r2d2::Extensions - Extensions\n\u27e813\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.LoggingErrorHandler.html: struct r2d2::LoggingErrorHandler - LoggingErrorHandler\n\u27e814\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.NopConnectionCustomizer.html: struct r2d2::NopConnectionCustomizer - NopConnectionCustomizer\n\u27e815\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.NopErrorHandler.html: struct r2d2::NopErrorHandler - NopErrorHandler\n\u27e816\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.Pool.html: struct r2d2::Pool - Pool\n\u27e817\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.PooledConnection.html: struct r2d2::PooledConnection - PooledConnection\n\u27e818\u27e9 https://docs.rs/r2d2/latest/r2d2/struct.State.html: struct r2d2::State - State\n\u27e819\u27e9 https://docs.rs/r2d2/latest/r2d2/#traits: \u00a7\n\u27e820\u27e9 https://docs.rs/r2d2/latest/r2d2/trait.CustomizeConnection.html: trait r2d2::CustomizeConnection - CustomizeConnection\n\u27e821\u27e9 https://docs.rs/r2d2/latest/r2d2/trait.HandleError.html: trait r2d2::HandleError - HandleError\n\u27e822\u27e9 https://docs.rs/r2d2/latest/r2d2/trait.ManageConnection.html: trait r2d2::ManageConnection - ManageConnection\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `r2d2` crate is a generic connection pool designed to efficiently manage database connections, reducing overhead and preventing resource exhaustion under high traffic. It is connection-type agnostic, relying on the `ManageConnection` trait for database-specific logic. Key features include customizable connection handling, error management, event subscriptions, and a builder for configuring pool properties like maximum size.",
          "feature_summary": null,
          "use_case": "Database",
          "score": 7.0,
          "factual_counterfactual": "### Pair 1: Connection Pooling  \n\u2705 Factual: The `r2d2` crate provides a generic connection pool implementation that can manage connections to various types of databases via the `ManageConnection` trait.  \n\u274c Counterfactual: The `r2d2` crate is specifically designed to work only with PostgreSQL connections and does not support other database types.  \n\n---\n\n### Pair 2: Pool Size Configuration  \n\u2705 Factual: The `r2d2::Pool::builder` allows developers to configure the maximum size of the connection pool, such as setting `max_size` to limit the number of concurrent connections.  \n\u274c Counterfactual: The `r2d2` crate automatically determines the optimal pool size based on system resources and does not allow manual configuration of pool size.  \n\n---\n\n### Pair 3: Error Handling  \n\u2705 Factual: The `r2d2` crate includes customizable error handling mechanisms, such as the `LoggingErrorHandler` and `NopErrorHandler`, which allow developers to define how connection errors are managed.  \n\u274c Counterfactual: The `r2d2` crate does not provide any built-in error handling mechanisms, requiring developers to implement their own error handling logic from scratch.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-8adce0a3-19537463-1751262381",
      "timestamp": "2025-06-30T05:46:21.585788+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]