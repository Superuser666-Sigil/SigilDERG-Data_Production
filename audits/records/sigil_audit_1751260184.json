[
  {
    "execution_id": "exec-0c6736ed-9c3b67ae-1751260175",
    "timestamp": "2025-06-30T05:09:35.999782+00:00",
    "sacred_chain": {
      "input_data": "termion",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'termion' -> 'termion'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "termion",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/termion",
            "title": "termion v4.0.5",
            "content": {
              "raw_markdown": "#  termion v4.0.5\nA bindless library for manipulating terminals. \n  * [ #color ](https://crates.io/keywords/color)\n  * [ #password ](https://crates.io/keywords/password)\n  * [ #terminal ](https://crates.io/keywords/terminal)\n  * [ #tty ](https://crates.io/keywords/tty)\n  * [ #tui ](https://crates.io/keywords/tui)\n\n\n  * [ Readme ](https://crates.io/crates/termion)\n  * [ 36 Versions ](https://crates.io/crates/termion/versions)\n  * [ Dependencies ](https://crates.io/crates/termion/dependencies)\n  * [ Dependents ](https://crates.io/crates/termion/reverse_dependencies)\n\n\n## Metadata\n3 months ago \n[ MIT ](https://choosealicense.com/licenses/mit)\n24.2 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add termion\nOr add the following line to your Cargo.toml:\ntermion = \"4.0.5\"\n## Documentation\n[ docs.rs/termion ](https://docs.rs/termion)\n## Repository\n[ gitlab.redox-os.org/redox-os/termion ](https://gitlab.redox-os.org/redox-os/termion)\n## Owners\n[ Report crate ](https://crates.io/support?crate=termion&inquire=crate-violation)\n### Stats Overview\n7,780,076 Downloads all time\n36 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  termion v4.0.5\nA bindless library for manipulating terminals. \n  *  #color \u27e81\u27e9\n  *  #password \u27e82\u27e9\n  *  #terminal \u27e83\u27e9\n  *  #tty \u27e84\u27e9\n  *  #tui \u27e85\u27e9\n\n\n  *  Readme \u27e86\u27e9\n  *  36 Versions \u27e87\u27e9\n  *  Dependencies \u27e88\u27e9\n  *  Dependents \u27e89\u27e9\n\n\n## Metadata\n3 months ago \n MIT \u27e810\u27e9\n24.2 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add termion\nOr add the following line to your Cargo.toml:\ntermion = \"4.0.5\"\n## Documentation\n docs.rs/termion \u27e811\u27e9\n## Repository\n gitlab.redox-os.org/redox-os/termion \u27e812\u27e9\n## Owners\n Report crate \u27e813\u27e9\n### Stats Overview\n7,780,076 Downloads all time\n36 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/color:  #color \n\u27e82\u27e9 https://crates.io/keywords/password:  #password \n\u27e83\u27e9 https://crates.io/keywords/terminal:  #terminal \n\u27e84\u27e9 https://crates.io/keywords/tty:  #tty \n\u27e85\u27e9 https://crates.io/keywords/tui:  #tui \n\u27e86\u27e9 https://crates.io/crates/termion:  Readme \n\u27e87\u27e9 https://crates.io/crates/termion/versions:  36 Versions \n\u27e88\u27e9 https://crates.io/crates/termion/dependencies:  Dependencies \n\u27e89\u27e9 https://crates.io/crates/termion/reverse_dependencies:  Dependents \n\u27e810\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e811\u27e9 https://docs.rs/termion:  docs.rs/termion \n\u27e812\u27e9 https://gitlab.redox-os.org/redox-os/termion:  gitlab.redox-os.org/redox-os/termion \n\u27e813\u27e9 https://crates.io/support?crate=termion&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1232,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "113965.9496663"
          },
          "docs_rs": {
            "url": "https://docs.rs/termion",
            "title": "Crate termionCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/termion/latest/termion/all.html \"show sidebar\")\n# Crate termionCopy item path\n[Settings](https://docs.rs/termion/latest/settings.html)\n[Help](https://docs.rs/termion/latest/help.html)\nSummary[Source](https://docs.rs/termion/latest/src/termion/lib.rs.html#1-71)\nExpand description\nTermion is a pure Rust, bindless library for low-level handling, manipulating and reading information about terminals. This provides a full-featured alternative to Termbox.\nTermion aims to be simple and yet expressive. It is bindless, meaning that it is not a front-end to some other library (e.g., ncurses or termbox), but a standalone library directly talking to the TTY.\nSupports Redox, Mac OS X, and Linux (or, in general, ANSI terminals).\nFor more information refer to the [README](https://github.com/redox-os/termion).\n## Modules[\u00a7](https://docs.rs/termion/latest/termion/#modules)\n\n[clear](https://docs.rs/termion/latest/termion/clear/index.html \"mod termion::clear\")\n    Clearing the screen.\n\n[color](https://docs.rs/termion/latest/termion/color/index.html \"mod termion::color\")\n    Color managemement.\n\n[cursor](https://docs.rs/termion/latest/termion/cursor/index.html \"mod termion::cursor\")\n    Cursor movement.\n\n[event](https://docs.rs/termion/latest/termion/event/index.html \"mod termion::event\")\n    Mouse and key events.\n\n[input](https://docs.rs/termion/latest/termion/input/index.html \"mod termion::input\")\n    User input.\n\n[raw](https://docs.rs/termion/latest/termion/raw/index.html \"mod termion::raw\")\n    Managing raw mode.\n\n[screen](https://docs.rs/termion/latest/termion/screen/index.html \"mod termion::screen\")\n    Managing switching between main and alternate screen buffers.\n\n[scroll](https://docs.rs/termion/latest/termion/scroll/index.html \"mod termion::scroll\")\n    Scrolling.\n\n[style](https://docs.rs/termion/latest/termion/style/index.html \"mod termion::style\")\n    Text styling management.\n## Structs[\u00a7](https://docs.rs/termion/latest/termion/#structs)\n\n[AsyncReader](https://docs.rs/termion/latest/termion/struct.AsyncReader.html \"struct termion::AsyncReader\")\n    An asynchronous reader.\n## Functions[\u00a7](https://docs.rs/termion/latest/termion/#functions)\n\n[async_stdin](https://docs.rs/termion/latest/termion/fn.async_stdin.html \"fn termion::async_stdin\")\n    Construct an asynchronous handle to the TTY standard input.\n\n[get_tty](https://docs.rs/termion/latest/termion/fn.get_tty.html \"fn termion::get_tty\")\n    Get the TTY device.\n\n[is_tty](https://docs.rs/termion/latest/termion/fn.is_tty.html \"fn termion::is_tty\")\n    Is this stream a TTY?\n\n[terminal_size](https://docs.rs/termion/latest/termion/fn.terminal_size.html \"fn termion::terminal_size\")\n    Get the size (columns, rows) of the terminal.\n\n[terminal_size_fd](https://docs.rs/termion/latest/termion/fn.terminal_size_fd.html \"fn termion::terminal_size_fd\")\n    Get the size (columns, rows) of the terminal from descriptor object.\n\n[terminal_size_pixels](https://docs.rs/termion/latest/termion/fn.terminal_size_pixels.html \"fn termion::terminal_size_pixels\")\n    Get the size of the terminal in pixels.\n\n[terminal_size_pixels_fd](https://docs.rs/termion/latest/termion/fn.terminal_size_pixels_fd.html \"fn termion::terminal_size_pixels_fd\")\n    Get the size of the terminal in pixels from descriptor object.\n",
              "markdown_with_citations": "[](https://docs.rs/termion/latest/termion/all.html \"show sidebar\")\n# Crate termionCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nTermion is a pure Rust, bindless library for low-level handling, manipulating and reading information about terminals. This provides a full-featured alternative to Termbox.\nTermion aims to be simple and yet expressive. It is bindless, meaning that it is not a front-end to some other library (e.g., ncurses or termbox), but a standalone library directly talking to the TTY.\nSupports Redox, Mac OS X, and Linux (or, in general, ANSI terminals).\nFor more information refer to the README\u27e84\u27e9.\n## Modules\u00a7\u27e85\u27e9\n\nclear\u27e86\u27e9\n    Clearing the screen.\n\ncolor\u27e87\u27e9\n    Color managemement.\n\ncursor\u27e88\u27e9\n    Cursor movement.\n\nevent\u27e89\u27e9\n    Mouse and key events.\n\ninput\u27e810\u27e9\n    User input.\n\nraw\u27e811\u27e9\n    Managing raw mode.\n\nscreen\u27e812\u27e9\n    Managing switching between main and alternate screen buffers.\n\nscroll\u27e813\u27e9\n    Scrolling.\n\nstyle\u27e814\u27e9\n    Text styling management.\n## Structs\u00a7\u27e815\u27e9\n\nAsyncReader\u27e816\u27e9\n    An asynchronous reader.\n## Functions\u00a7\u27e817\u27e9\n\nasync_stdin\u27e818\u27e9\n    Construct an asynchronous handle to the TTY standard input.\n\nget_tty\u27e819\u27e9\n    Get the TTY device.\n\nis_tty\u27e820\u27e9\n    Is this stream a TTY?\n\nterminal_size\u27e821\u27e9\n    Get the size (columns, rows) of the terminal.\n\nterminal_size_fd\u27e822\u27e9\n    Get the size (columns, rows) of the terminal from descriptor object.\n\nterminal_size_pixels\u27e823\u27e9\n    Get the size of the terminal in pixels.\n\nterminal_size_pixels_fd\u27e824\u27e9\n    Get the size of the terminal in pixels from descriptor object.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/termion/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/termion/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/termion/latest/src/termion/lib.rs.html#1-71: Source\n\u27e84\u27e9 https://github.com/redox-os/termion: README\n\u27e85\u27e9 https://docs.rs/termion/latest/termion/#modules: \u00a7\n\u27e86\u27e9 https://docs.rs/termion/latest/termion/clear/index.html: mod termion::clear - clear\n\u27e87\u27e9 https://docs.rs/termion/latest/termion/color/index.html: mod termion::color - color\n\u27e88\u27e9 https://docs.rs/termion/latest/termion/cursor/index.html: mod termion::cursor - cursor\n\u27e89\u27e9 https://docs.rs/termion/latest/termion/event/index.html: mod termion::event - event\n\u27e810\u27e9 https://docs.rs/termion/latest/termion/input/index.html: mod termion::input - input\n\u27e811\u27e9 https://docs.rs/termion/latest/termion/raw/index.html: mod termion::raw - raw\n\u27e812\u27e9 https://docs.rs/termion/latest/termion/screen/index.html: mod termion::screen - screen\n\u27e813\u27e9 https://docs.rs/termion/latest/termion/scroll/index.html: mod termion::scroll - scroll\n\u27e814\u27e9 https://docs.rs/termion/latest/termion/style/index.html: mod termion::style - style\n\u27e815\u27e9 https://docs.rs/termion/latest/termion/#structs: \u00a7\n\u27e816\u27e9 https://docs.rs/termion/latest/termion/struct.AsyncReader.html: struct termion::AsyncReader - AsyncReader\n\u27e817\u27e9 https://docs.rs/termion/latest/termion/#functions: \u00a7\n\u27e818\u27e9 https://docs.rs/termion/latest/termion/fn.async_stdin.html: fn termion::async_stdin - async_stdin\n\u27e819\u27e9 https://docs.rs/termion/latest/termion/fn.get_tty.html: fn termion::get_tty - get_tty\n\u27e820\u27e9 https://docs.rs/termion/latest/termion/fn.is_tty.html: fn termion::is_tty - is_tty\n\u27e821\u27e9 https://docs.rs/termion/latest/termion/fn.terminal_size.html: fn termion::terminal_size - terminal_size\n\u27e822\u27e9 https://docs.rs/termion/latest/termion/fn.terminal_size_fd.html: fn termion::terminal_size_fd - terminal_size_fd\n\u27e823\u27e9 https://docs.rs/termion/latest/termion/fn.terminal_size_pixels.html: fn termion::terminal_size_pixels - terminal_size_pixels\n\u27e824\u27e9 https://docs.rs/termion/latest/termion/fn.terminal_size_pixels_fd.html: fn termion::terminal_size_pixels_fd - terminal_size_pixels_fd\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 3297,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "113966.6399249"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/termion",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [35 stable releases](https://lib.rs/crates/termion/versions) (3 major)\nUses old Rust 2015\n4.0.5 |  Mar 31, 2025   \n---|---  \n4.0.3 |  Oct 6, 2024   \n4.0.2 |  Jun 12, 2024   \n3.0.0 |  Jan 5, 2024   \n1.0.4 |  Jul 29, 2016   \n#**201** in [Command-line interface](https://lib.rs/command-line-interface \"Crates to help create command line interfaces, such as argument parsers, line-editing, or output coloring and formatting.\")\nDownload history 25856/week @ 2025-03-07 33738/week @ 2025-03-14 27600/week @ 2025-03-21 27503/week @ 2025-03-28 32963/week @ 2025-04-04 45819/week @ 2025-04-11 37025/week @ 2025-04-18 34439/week @ 2025-04-25 27973/week @ 2025-05-02 25768/week @ 2025-05-09 23996/week @ 2025-05-16 20400/week @ 2025-05-23 16923/week @ 2025-05-30 18972/week @ 2025-06-06 24253/week @ 2025-06-13 28824/week @ 2025-06-20\n**91,832** downloads per month Used in [fewer than **567** crates](https://lib.rs/crates/termion/rev)\n**MIT** license \n75KB  1.5K  SLoC\n![Termion logo](https://img.gs/czjpqfbdkz/full/https://rawgit.com/redox-os/termion/master/logo.svg)\n[![Build Status](https://img.gs/czjpqfbdkz/full/https://travis-ci.org/redox-os/termion.svg?branch=master)](https://travis-ci.org/redox-os/termion) [![Latest Version](https://img.shields.io/crates/v/termion.svg)](https://crates.io/crates/termion) | [Documentation](https://docs.rs/termion) | [Examples](https://github.com/redox-os/termion/tree/master/examples) | [Changelog](https://github.com/redox-os/termion/tree/master/CHANGELOG.md) | [Tutorial](http://ticki.github.io/blog/making-terminal-applications-in-rust-with-termion/)  \n---|---|---|---|---  \n**Termion** is a pure Rust, bindless library for low-level handling, manipulating and reading information about terminals. This provides a full-featured alternative to Termbox.\nTermion aims to be simple and yet expressive. It is bindless, meaning that it is not a front-end to some other library (e.g., ncurses or termbox), but a standalone library directly talking to the TTY.\nTermion is quite convenient, due to its complete coverage of essential TTY features, providing one consistent API. Termion is rather low-level containing only abstraction aligned with what actually happens behind the scenes. For something more high-level, refer to inquirer-rs, which uses Termion as backend.\nTermion generates escapes and API calls for the user. This makes it a whole lot cleaner to use escapes.\nSupports Redox, Mac OS X, BSD, and Linux (or, in general, ANSI terminals).\n## A note on stability\nThis crate is stable.\n## Cargo.toml\n```\n```[``dependencies``]`\n`termion ``=` ``\"`*`\"``\n``\n```\n\n## 3.0.0 to 4.0.0 guide\nA change is only necessary if you were matching on all variants of the ``MouseEvent`` enum without a wildcard. In this case, you need to either handle the two new variants, ``MouseLeft`` and ``MouseRight``, or add a wildcard.\n## 2.0.0 to 3.0.0 guide\nChanges are only required if you were using ``IntoRawMode`` on generic terminals ``W`:` Write``. Now, terminal is also required to implement [``AsFd`` trait](https://doc.rust-lang.org/std/os/fd/trait.AsFd.html). So replacing generic bounds with ``W`:` Write `+` AsFd`` should be sufficient.\n## 1.0.0 to 2.0.0 guide\n1.0.0 | 2.0.0  \n---|---  \n```AlternativeScreen`::``from`(`x`)``` | ``x`.``into_alternative_screen``(``)```  \n## 0.1.0 to 1.0.0 guide\nThis sample table gives an idea of how to go about converting to the new major version of Termion.\n0.1.0 | 1.0.0  \n---|---  \n```use` `termion`::``IntoRawMode`` | ```use` `termion`::```raw`::``IntoRawMode``  \n```use` `termion`::``TermRead`` | ```use` `termion`::```input`::``TermRead``  \n``stdout`.``color``(``color`::``Red`)``;``` | ```write!``(`stdout, ``\"``{}``\"```,` `color`::``Fg`(``color`::``Red`)``)``;```  \n``stdout`.``color_bg``(``color`::``Red`)``;``` | ```write!``(`stdout, ``\"``{}``\"```,` `color`::``Bg`(``color`::``Red`)``)``;```  \n``stdout`.``goto``(`x`,` y`)``;``` | ```write!``(`stdout, ``\"``{}``\"```,` `cursor`::``Goto`(`x`,` y`)``)``;```  \n```color`::``rgb`(`r`,` g`,` b`)``;``` | ```color`::``Rgb`(`r`,` g`,` b`)``` (truecolor)  \n``x`.``with_mouse``(``)``` | ```MouseTerminal`::``from`(`x`)```  \n## Features\n  * Raw mode.\n  * TrueColor.\n  * 256-color mode.\n  * Cursor movement.\n  * Text formatting.\n  * Console size.\n  * TTY-only stream.\n  * Control sequences.\n  * Termios control.\n  * Password input.\n  * Redox support.\n  * Safe ``isatty`` wrapper.\n  * Panic-free error handling.\n  * Special keys events (modifiers, special keys, etc.).\n  * Allocation-free.\n  * Asynchronous key events.\n  * Mouse input.\n  * Carefully tested.\n  * Detailed documentation on every item.\n\n\nand much more.\n## Examples\n### Style and colors.\n```\n``extern` `crate` termion`;`\n`use` `termion`::````{`color`,` style```}```;`\n`use` `std`::``io`;`\n``fn` `main`````(````)``````{`\n  `println!``(```\"``{}`Red`\"```,` `color`::``Fg`(``color`::``Red`)``)``;`\n  `println!``(```\"``{}`Blue`\"```,` `color`::``Fg`(``color`::``Blue`)``)``;`\n  `println!``(```\"``{}`Blue'n'Bold`{}``\"```,` `style`::``Bold`,` `style`::``Reset`)``;`\n  `println!``(```\"``{}`Just plain italic`\"```,` `style`::``Italic`)``;`\n```}```\n`\n```\n\n### Moving the cursor\n```\n``extern` `crate` termion`;`\n``fn` `main`````(````)``````{`\n  `print!``(```\"``{}``{}`Stuff`\"```,` `termion`::```clear`::``All`,` `termion`::```cursor`::``Goto`(``1``,` `1``)``)``;`\n```}```\n`\n```\n\n### Mouse\n```\n``extern` `crate` termion`;`\n`use` `termion`::```event`::````{`Key`,` Event`,` MouseEvent```}```;`\n`use` `termion`::```input`::````{`TermRead`,` MouseTerminal```}```;`\n`use` `termion`::```raw`::``IntoRawMode`;`\n`use` `std`::```io`::````{`Write`,` stdout`,` stdin```}```;`\n``fn` `main`````(````)``````{`\n  `let` stdin `=` `stdin``(``)``;`\n  `let` `mut` stdout `=` `MouseTerminal`::``from`(``stdout``(``)``.``into_raw_mode``(``)``.``unwrap``(``)``)``;`\n  `write!``(`stdout, ``\"``{}``{}`q to exit. Click, click, click!`\"```,` `termion`::```clear`::``All`,` `termion`::```cursor`::``Goto`(``1``,` `1``)``)``.``unwrap``(``)``;`\n  stdout`.``flush``(``)``.``unwrap``(``)``;`\n  `for` c `in` stdin`.``events``(``)` `{`\n    `let` evt `=` c`.``unwrap``(``)``;`\n    `match` evt `{`\n      `Event`::``Key`(``Key`::``Char`(```'`q`'```)``)` `=>` `break``,`\n      `Event`::``Mouse`(`me`)` `=>` `{`\n        `match` me `{`\n          `MouseEvent`::``Press`(``_``,` x`,` y`)` `=>` `{`\n            `write!``(`stdout, ``\"``{}`x`\"```,` `termion`::```cursor`::``Goto`(`x`,` y`)``)``.``unwrap``(``)``;`\n          `}``,`\n          `_` `=>` `(``)``,`\n        `}`\n      `}`\n      `_` `=>` `{``}`\n    `}`\n    stdout`.``flush``(``)``.``unwrap``(``)``;`\n  `}`\n```}```\n`\n```\n\n### Read a password\n```\n``extern` `crate` termion`;`\n`use` `termion`::```input`::``TermRead`;`\n`use` `std`::```io`::````{`Write`,` stdout`,` stdin```}```;`\n``fn` `main`````(````)``````{`\n  `let` stdout `=` `stdout``(``)``;`\n  `let` `mut` stdout `=` stdout`.``lock``(``)``;`\n  `let` stdin `=` `stdin``(``)``;`\n  `let` `mut` stdin `=` stdin`.``lock``(``)``;`\n  stdout`.``write_all``(```b``\"`password: `\"```)``.``unwrap``(``)``;`\n  stdout`.``flush``(``)``.``unwrap``(``)``;`\n  `let` pass `=` stdin`.``read_passwd``(``&``mut` stdout`)``;`\n  `if` `let` `Ok``(``Some``(`pass`)``)` `=` pass `{`\n    stdout`.``write_all``(`pass`.``as_bytes``(``)``)``.``unwrap``(``)``;`\n    stdout`.``write_all``(```b``\"``\\n``\"```)``.``unwrap``(``)``;`\n  `}` `else` `{`\n    stdout`.``write_all``(```b``\"`Error`\\n``\"```)``.``unwrap``(``)``;`\n  `}`\n```}```\n`\n```\n\n## Usage\nSee ``examples/``, and the documentation, which can be rendered using ````cargo``` doc```.\nFor a more complete example, see [a minesweeper implementation](https://github.com/redox-os/games-for-redox/blob/master/src/minesweeper/main.rs), that I made for Redox using termion.\n![](https://img.gs/czjpqfbdkz/200,2x/https://gitlab.redox-os.org/redox-os/image.png)\n## License\nMIT/X11.\n#### Dependencies\n~29\u2013255KB \n  * [libc](https://lib.rs/crates/libc \"0.2\") not redox\n  * [libredox](https://lib.rs/crates/libredox \"0.1.3\") redox\n  * [numtoa](https://lib.rs/crates/numtoa \"obsolete\") 0.2.4\n  * [redox_termios](https://lib.rs/crates/redox_termios \"0.1.3\") redox\n  * [ optional ](https://lib.rs/crates/termion/features#feature-serde \"serde is optional feature\") [serde](https://lib.rs/crates/serde \"1.0\")[+derive](https://lib.rs/crates/serde/features#feature-derive)\n\n\n  *[SLoC]: Lines of code, excluding comments\n",
              "markdown_with_citations": "###  35 stable releases\u27e81\u27e9 (3 major)\nUses old Rust 2015\n4.0.5 |  Mar 31, 2025   \n---|---  \n4.0.3 |  Oct 6, 2024   \n4.0.2 |  Jun 12, 2024   \n3.0.0 |  Jan 5, 2024   \n1.0.4 |  Jul 29, 2016   \n#**201** in Command-line interface\u27e82\u27e9\nDownload history 25856/week @ 2025-03-07 33738/week @ 2025-03-14 27600/week @ 2025-03-21 27503/week @ 2025-03-28 32963/week @ 2025-04-04 45819/week @ 2025-04-11 37025/week @ 2025-04-18 34439/week @ 2025-04-25 27973/week @ 2025-05-02 25768/week @ 2025-05-09 23996/week @ 2025-05-16 20400/week @ 2025-05-23 16923/week @ 2025-05-30 18972/week @ 2025-06-06 24253/week @ 2025-06-13 28824/week @ 2025-06-20\n**91,832** downloads per month Used in fewer than **567** crates\u27e83\u27e9\n**MIT** license \n75KB  1.5K  SLoC\n![Termion logo\u27e84\u27e9]\n![Build Status\u27e85\u27e9](https://travis-ci.org/redox-os/termion) ![Latest Version\u27e86\u27e9](https://crates.io/crates/termion) | Documentation\u27e87\u27e9 | Examples\u27e88\u27e9 | Changelog\u27e89\u27e9 | Tutorial\u27e810\u27e9  \n---|---|---|---|---  \n**Termion** is a pure Rust, bindless library for low-level handling, manipulating and reading information about terminals. This provides a full-featured alternative to Termbox.\nTermion aims to be simple and yet expressive. It is bindless, meaning that it is not a front-end to some other library (e.g., ncurses or termbox), but a standalone library directly talking to the TTY.\nTermion is quite convenient, due to its complete coverage of essential TTY features, providing one consistent API. Termion is rather low-level containing only abstraction aligned with what actually happens behind the scenes. For something more high-level, refer to inquirer-rs, which uses Termion as backend.\nTermion generates escapes and API calls for the user. This makes it a whole lot cleaner to use escapes.\nSupports Redox, Mac OS X, BSD, and Linux (or, in general, ANSI terminals).\n## A note on stability\nThis crate is stable.\n## Cargo.toml\n```\n```[``dependencies``]`\n`termion ``=` ``\"`*`\"``\n``\n```\n\n## 3.0.0 to 4.0.0 guide\nA change is only necessary if you were matching on all variants of the ``MouseEvent`` enum without a wildcard. In this case, you need to either handle the two new variants, ``MouseLeft`` and ``MouseRight``, or add a wildcard.\n## 2.0.0 to 3.0.0 guide\nChanges are only required if you were using ``IntoRawMode`` on generic terminals ``W`:` Write``. Now, terminal is also required to implement ``AsFd`` trait\u27e811\u27e9. So replacing generic bounds with ``W`:` Write `+` AsFd`` should be sufficient.\n## 1.0.0 to 2.0.0 guide\n1.0.0 | 2.0.0  \n---|---  \n```AlternativeScreen`::``from`(`x`)``` | ``x`.``into_alternative_screen``(``)```  \n## 0.1.0 to 1.0.0 guide\nThis sample table gives an idea of how to go about converting to the new major version of Termion.\n0.1.0 | 1.0.0  \n---|---  \n```use` `termion`::``IntoRawMode`` | ```use` `termion`::```raw`::``IntoRawMode``  \n```use` `termion`::``TermRead`` | ```use` `termion`::```input`::``TermRead``  \n``stdout`.``color``(``color`::``Red`)``;``` | ```write!``(`stdout, ``\"``{}``\"```,` `color`::``Fg`(``color`::``Red`)``)``;```  \n``stdout`.``color_bg``(``color`::``Red`)``;``` | ```write!``(`stdout, ``\"``{}``\"```,` `color`::``Bg`(``color`::``Red`)``)``;```  \n``stdout`.``goto``(`x`,` y`)``;``` | ```write!``(`stdout, ``\"``{}``\"```,` `cursor`::``Goto`(`x`,` y`)``)``;```  \n```color`::``rgb`(`r`,` g`,` b`)``;``` | ```color`::``Rgb`(`r`,` g`,` b`)``` (truecolor)  \n``x`.``with_mouse``(``)``` | ```MouseTerminal`::``from`(`x`)```  \n## Features\n  * Raw mode.\n  * TrueColor.\n  * 256-color mode.\n  * Cursor movement.\n  * Text formatting.\n  * Console size.\n  * TTY-only stream.\n  * Control sequences.\n  * Termios control.\n  * Password input.\n  * Redox support.\n  * Safe ``isatty`` wrapper.\n  * Panic-free error handling.\n  * Special keys events (modifiers, special keys, etc.).\n  * Allocation-free.\n  * Asynchronous key events.\n  * Mouse input.\n  * Carefully tested.\n  * Detailed documentation on every item.\n\n\nand much more.\n## Examples\n### Style and colors.\n```\n``extern` `crate` termion`;`\n`use` `termion`::````{`color`,` style```}```;`\n`use` `std`::``io`;`\n``fn` `main`````(````)``````{`\n  `println!``(```\"``{}`Red`\"```,` `color`::``Fg`(``color`::``Red`)``)``;`\n  `println!``(```\"``{}`Blue`\"```,` `color`::``Fg`(``color`::``Blue`)``)``;`\n  `println!``(```\"``{}`Blue'n'Bold`{}``\"```,` `style`::``Bold`,` `style`::``Reset`)``;`\n  `println!``(```\"``{}`Just plain italic`\"```,` `style`::``Italic`)``;`\n```}```\n`\n```\n\n### Moving the cursor\n```\n``extern` `crate` termion`;`\n``fn` `main`````(````)``````{`\n  `print!``(```\"``{}``{}`Stuff`\"```,` `termion`::```clear`::``All`,` `termion`::```cursor`::``Goto`(``1``,` `1``)``)``;`\n```}```\n`\n```\n\n### Mouse\n```\n``extern` `crate` termion`;`\n`use` `termion`::```event`::````{`Key`,` Event`,` MouseEvent```}```;`\n`use` `termion`::```input`::````{`TermRead`,` MouseTerminal```}```;`\n`use` `termion`::```raw`::``IntoRawMode`;`\n`use` `std`::```io`::````{`Write`,` stdout`,` stdin```}```;`\n``fn` `main`````(````)``````{`\n  `let` stdin `=` `stdin``(``)``;`\n  `let` `mut` stdout `=` `MouseTerminal`::``from`(``stdout``(``)``.``into_raw_mode``(``)``.``unwrap``(``)``)``;`\n  `write!``(`stdout, ``\"``{}``{}`q to exit. Click, click, click!`\"```,` `termion`::```clear`::``All`,` `termion`::```cursor`::``Goto`(``1``,` `1``)``)``.``unwrap``(``)``;`\n  stdout`.``flush``(``)``.``unwrap``(``)``;`\n  `for` c `in` stdin`.``events``(``)` `{`\n    `let` evt `=` c`.``unwrap``(``)``;`\n    `match` evt `{`\n      `Event`::``Key`(``Key`::``Char`(```'`q`'```)``)` `=>` `break``,`\n      `Event`::``Mouse`(`me`)` `=>` `{`\n        `match` me `{`\n          `MouseEvent`::``Press`(``_``,` x`,` y`)` `=>` `{`\n            `write!``(`stdout, ``\"``{}`x`\"```,` `termion`::```cursor`::``Goto`(`x`,` y`)``)``.``unwrap``(``)``;`\n          `}``,`\n          `_` `=>` `(``)``,`\n        `}`\n      `}`\n      `_` `=>` `{``}`\n    `}`\n    stdout`.``flush``(``)``.``unwrap``(``)``;`\n  `}`\n```}```\n`\n```\n\n### Read a password\n```\n``extern` `crate` termion`;`\n`use` `termion`::```input`::``TermRead`;`\n`use` `std`::```io`::````{`Write`,` stdout`,` stdin```}```;`\n``fn` `main`````(````)``````{`\n  `let` stdout `=` `stdout``(``)``;`\n  `let` `mut` stdout `=` stdout`.``lock``(``)``;`\n  `let` stdin `=` `stdin``(``)``;`\n  `let` `mut` stdin `=` stdin`.``lock``(``)``;`\n  stdout`.``write_all``(```b``\"`password: `\"```)``.``unwrap``(``)``;`\n  stdout`.``flush``(``)``.``unwrap``(``)``;`\n  `let` pass `=` stdin`.``read_passwd``(``&``mut` stdout`)``;`\n  `if` `let` `Ok``(``Some``(`pass`)``)` `=` pass `{`\n    stdout`.``write_all``(`pass`.``as_bytes``(``)``)``.``unwrap``(``)``;`\n    stdout`.``write_all``(```b``\"``\\n``\"```)``.``unwrap``(``)``;`\n  `}` `else` `{`\n    stdout`.``write_all``(```b``\"`Error`\\n``\"```)``.``unwrap``(``)``;`\n  `}`\n```}```\n`\n```\n\n## Usage\nSee ``examples/``, and the documentation, which can be rendered using ````cargo``` doc```.\nFor a more complete example, see a minesweeper implementation\u27e812\u27e9, that I made for Redox using termion.\n![](https://img.gs/czjpqfbdkz/200,2x/https://gitlab.redox-os.org/redox-os/image.png)\n## License\nMIT/X11.\n#### Dependencies\n~29\u2013255KB \n  * libc\u27e813\u27e9 not redox\n  * libredox\u27e814\u27e9 redox\n  * numtoa\u27e815\u27e9 0.2.4\n  * redox_termios\u27e816\u27e9 redox\n  *  optional \u27e817\u27e9 serde\u27e818\u27e9+derive\u27e819\u27e9\n\n\n  *[SLoC]: Lines of code, excluding comments\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/termion/versions: 35 stable releases\n\u27e82\u27e9 https://lib.rs/command-line-interface: Crates to help create command line interfaces, such as argument parsers, line-editing, or output coloring and formatting. - Command-line interface\n\u27e83\u27e9 https://lib.rs/crates/termion/rev: fewer than **567** crates\n\u27e84\u27e9 https://img.gs/czjpqfbdkz/full/https://rawgit.com/redox-os/termion/master/logo.svg: Termion logo\n\u27e85\u27e9 https://img.gs/czjpqfbdkz/full/https://travis-ci.org/redox-os/termion.svg?branch=master: ![Build Status\n\u27e86\u27e9 https://img.shields.io/crates/v/termion.svg: ![Latest Version\n\u27e87\u27e9 https://docs.rs/termion: Documentation\n\u27e88\u27e9 https://github.com/redox-os/termion/tree/master/examples: Examples\n\u27e89\u27e9 https://github.com/redox-os/termion/tree/master/CHANGELOG.md: Changelog\n\u27e810\u27e9 http://ticki.github.io/blog/making-terminal-applications-in-rust-with-termion/: Tutorial\n\u27e811\u27e9 https://doc.rust-lang.org/std/os/fd/trait.AsFd.html: ``AsFd`` trait\n\u27e812\u27e9 https://github.com/redox-os/games-for-redox/blob/master/src/minesweeper/main.rs: a minesweeper implementation\n\u27e813\u27e9 https://lib.rs/crates/libc: 0.2 - libc\n\u27e814\u27e9 https://lib.rs/crates/libredox: 0.1.3 - libredox\n\u27e815\u27e9 https://lib.rs/crates/numtoa: obsolete - numtoa\n\u27e816\u27e9 https://lib.rs/crates/redox_termios: 0.1.3 - redox_termios\n\u27e817\u27e9 https://lib.rs/crates/termion/features#feature-serde: serde is optional feature -  optional \n\u27e818\u27e9 https://lib.rs/crates/serde: 1.0 - serde\n\u27e819\u27e9 https://lib.rs/crates/serde/features#feature-derive: +derive\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 8350,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "113967.0701012"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#numtoa@0.2.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\numtoa-0.2.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "numtoa",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\numtoa-0.2.4\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\target\\debug\\deps\\libnumtoa-24b3a121945cf2a2.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.171",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\target\\debug\\build\\libc-6e895cdbcd5e4ab4\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\target\\debug\\build\\libc-6e895cdbcd5e4ab4\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.171",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "freebsd11",
                "libc_const_extern_fn"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\target\\debug\\build\\libc-21243236bad9ad17\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.171",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\target\\debug\\deps\\liblibc-380a503941dbe08d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0433]: failed to resolve: use of unresolved module or unlinked crate `sys`\n  --> src\\lib.rs:26:9\n   |\n26 | pub use sys::size::terminal_size;\n   |         ^^^ use of unresolved module or unlinked crate `sys`\n   |\nnote: found an item that was configured out\n  --> src\\lib.rs:20:5\n   |\n20 | mod sys;\n   |     ^^^\nnote: the item is gated behind the `redox` feature\n  --> src\\lib.rs:18:7\n   |\n18 | #[cfg(target_os = \"redox\")]\n   |       ^^^^^^^^^^^^^^^^^^^\nnote: found an item that was configured out\n  --> src\\lib.rs:24:5\n   |\n24 | mod sys;\n   |     ^^^\nnote: the item is gated here\n  --> src\\lib.rs:22:1\n   |\n22 | #[cfg(all(unix, not(target_os = \"redox\")))]\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nhelp: if you wanted to use a crate named `sys`, use `cargo add sys` to add it to your `Cargo.toml` and import it in your code\n   |\n14 + extern crate sys;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 725,
                        "byte_start": 722,
                        "column_end": 8,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 20,
                        "line_start": 20,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 8,
                            "highlight_start": 5,
                            "text": "mod sys;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated behind the `redox` feature",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 667,
                        "column_end": 26,
                        "column_start": 7,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 18,
                        "line_start": 18,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 7,
                            "text": "#[cfg(target_os = \"redox\")]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 807,
                        "byte_start": 804,
                        "column_end": 8,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 24,
                        "line_start": 24,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 8,
                            "highlight_start": 5,
                            "text": "mod sys;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 771,
                        "byte_start": 728,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 22,
                        "line_start": 22,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "#[cfg(all(unix, not(target_os = \"redox\")))]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you wanted to use a crate named `sys`, use `cargo add sys` to add it to your `Cargo.toml` and import it in your code",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 593,
                        "byte_start": 593,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "extern crate sys;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "extern crate numtoa;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0433",
                  "explanation": "An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"
                },
                "level": "error",
                "message": "failed to resolve: use of unresolved module or unlinked crate `sys`",
                "spans": [
                  {
                    "byte_end": 821,
                    "byte_start": 818,
                    "column_end": 12,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": "use of unresolved module or unlinked crate `sys`",
                    "line_end": 26,
                    "line_start": 26,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 9,
                        "text": "pub use sys::size::terminal_size;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0433]: failed to resolve: use of unresolved module or unlinked crate `sys`\n  --> src\\lib.rs:29:9\n   |\n29 | pub use sys::tty::{get_tty, is_tty};\n   |         ^^^ use of unresolved module or unlinked crate `sys`\n   |\nnote: found an item that was configured out\n  --> src\\lib.rs:20:5\n   |\n20 | mod sys;\n   |     ^^^\nnote: the item is gated behind the `redox` feature\n  --> src\\lib.rs:18:7\n   |\n18 | #[cfg(target_os = \"redox\")]\n   |       ^^^^^^^^^^^^^^^^^^^\nnote: found an item that was configured out\n  --> src\\lib.rs:24:5\n   |\n24 | mod sys;\n   |     ^^^\nnote: the item is gated here\n  --> src\\lib.rs:22:1\n   |\n22 | #[cfg(all(unix, not(target_os = \"redox\")))]\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nhelp: if you wanted to use a crate named `sys`, use `cargo add sys` to add it to your `Cargo.toml` and import it in your code\n   |\n14 + extern crate sys;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 725,
                        "byte_start": 722,
                        "column_end": 8,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 20,
                        "line_start": 20,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 8,
                            "highlight_start": 5,
                            "text": "mod sys;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated behind the `redox` feature",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 667,
                        "column_end": 26,
                        "column_start": 7,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 18,
                        "line_start": 18,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 7,
                            "text": "#[cfg(target_os = \"redox\")]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 807,
                        "byte_start": 804,
                        "column_end": 8,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 24,
                        "line_start": 24,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 8,
                            "highlight_start": 5,
                            "text": "mod sys;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 771,
                        "byte_start": 728,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 22,
                        "line_start": 22,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "#[cfg(all(unix, not(target_os = \"redox\")))]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you wanted to use a crate named `sys`, use `cargo add sys` to add it to your `Cargo.toml` and import it in your code",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 593,
                        "byte_start": 593,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "extern crate sys;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "extern crate numtoa;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0433",
                  "explanation": "An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"
                },
                "level": "error",
                "message": "failed to resolve: use of unresolved module or unlinked crate `sys`",
                "spans": [
                  {
                    "byte_end": 985,
                    "byte_start": 982,
                    "column_end": 12,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": "use of unresolved module or unlinked crate `sys`",
                    "line_end": 29,
                    "line_start": 29,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 9,
                        "text": "pub use sys::tty::{get_tty, is_tty};"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0433]: failed to resolve: use of unresolved module or unlinked crate `sys`\n  --> src\\async.rs:5:5\n   |\n5  | use sys::tty::get_tty;\n   |     ^^^ use of unresolved module or unlinked crate `sys`\n   |\nnote: found an item that was configured out\n  --> src\\lib.rs:20:5\n   |\n20 | mod sys;\n   |     ^^^\nnote: the item is gated behind the `redox` feature\n  --> src\\lib.rs:18:7\n   |\n18 | #[cfg(target_os = \"redox\")]\n   |       ^^^^^^^^^^^^^^^^^^^\nnote: found an item that was configured out\n  --> src\\lib.rs:24:5\n   |\n24 | mod sys;\n   |     ^^^\nnote: the item is gated here\n  --> src\\lib.rs:22:1\n   |\n22 | #[cfg(all(unix, not(target_os = \"redox\")))]\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nhelp: if you wanted to use a crate named `sys`, use `cargo add sys` to add it to your `Cargo.toml` and import it in your code\n  --> src\\lib.rs:14:1\n   |\n14 + extern crate sys;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 725,
                        "byte_start": 722,
                        "column_end": 8,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 20,
                        "line_start": 20,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 8,
                            "highlight_start": 5,
                            "text": "mod sys;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated behind the `redox` feature",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 667,
                        "column_end": 26,
                        "column_start": 7,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 18,
                        "line_start": 18,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 7,
                            "text": "#[cfg(target_os = \"redox\")]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 807,
                        "byte_start": 804,
                        "column_end": 8,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 24,
                        "line_start": 24,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 8,
                            "highlight_start": 5,
                            "text": "mod sys;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 771,
                        "byte_start": 728,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 22,
                        "line_start": 22,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "#[cfg(all(unix, not(target_os = \"redox\")))]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you wanted to use a crate named `sys`, use `cargo add sys` to add it to your `Cargo.toml` and import it in your code",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 593,
                        "byte_start": 593,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "extern crate sys;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "extern crate numtoa;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0433",
                  "explanation": "An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"
                },
                "level": "error",
                "message": "failed to resolve: use of unresolved module or unlinked crate `sys`",
                "spans": [
                  {
                    "byte_end": 73,
                    "byte_start": 70,
                    "column_end": 8,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\async.rs",
                    "is_primary": true,
                    "label": "use of unresolved module or unlinked crate `sys`",
                    "line_end": 5,
                    "line_start": 5,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 5,
                        "text": "use sys::tty::get_tty;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0432]: unresolved import `std::os::fd`\n   --> src\\input.rs:5:14\n    |\n5   | use std::os::fd::AsFd;\n    |              ^^ could not find `fd` in `os`\n    |\nnote: found an item that was configured out\n   --> C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\os\\mod.rs:186:9\n    |\n186 | pub mod fd;\n    |         ^^\nnote: the item is gated here\n   --> C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\os\\mod.rs:185:1\n    |\n185 | #[cfg(any(unix, target_os = \"hermit\", target_os = \"trusty\", target_os = \"wasi\", doc))]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4701,
                        "byte_start": 4699,
                        "column_end": 11,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\os\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 186,
                        "line_start": 186,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 11,
                            "highlight_start": 9,
                            "text": "pub mod fd;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4690,
                        "byte_start": 4604,
                        "column_end": 87,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\os\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 185,
                        "line_start": 185,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 87,
                            "highlight_start": 1,
                            "text": "#[cfg(any(unix, target_os = \"hermit\", target_os = \"trusty\", target_os = \"wasi\", doc))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0432",
                  "explanation": "An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"
                },
                "level": "error",
                "message": "unresolved import `std::os::fd`",
                "spans": [
                  {
                    "byte_end": 80,
                    "byte_start": 78,
                    "column_end": 16,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "src\\input.rs",
                    "is_primary": true,
                    "label": "could not find `fd` in `os`",
                    "line_end": 5,
                    "line_start": 5,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 14,
                        "text": "use std::os::fd::AsFd;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0433]: failed to resolve: use of unresolved module or unlinked crate `sys`\n  --> src\\raw.rs:29:5\n   |\n29 | use sys::attr::{get_terminal_attr, raw_terminal_attr, set_terminal_attr};\n   |     ^^^ use of unresolved module or unlinked crate `sys`\n   |\nnote: found an item that was configured out\n  --> src\\lib.rs:20:5\n   |\n20 | mod sys;\n   |     ^^^\nnote: the item is gated behind the `redox` feature\n  --> src\\lib.rs:18:7\n   |\n18 | #[cfg(target_os = \"redox\")]\n   |       ^^^^^^^^^^^^^^^^^^^\nnote: found an item that was configured out\n  --> src\\lib.rs:24:5\n   |\n24 | mod sys;\n   |     ^^^\nnote: the item is gated here\n  --> src\\lib.rs:22:1\n   |\n22 | #[cfg(all(unix, not(target_os = \"redox\")))]\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nhelp: if you wanted to use a crate named `sys`, use `cargo add sys` to add it to your `Cargo.toml` and import it in your code\n  --> src\\lib.rs:14:1\n   |\n14 + extern crate sys;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 725,
                        "byte_start": 722,
                        "column_end": 8,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 20,
                        "line_start": 20,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 8,
                            "highlight_start": 5,
                            "text": "mod sys;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated behind the `redox` feature",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 667,
                        "column_end": 26,
                        "column_start": 7,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 18,
                        "line_start": 18,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 7,
                            "text": "#[cfg(target_os = \"redox\")]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 807,
                        "byte_start": 804,
                        "column_end": 8,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 24,
                        "line_start": 24,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 8,
                            "highlight_start": 5,
                            "text": "mod sys;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 771,
                        "byte_start": 728,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 22,
                        "line_start": 22,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "#[cfg(all(unix, not(target_os = \"redox\")))]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you wanted to use a crate named `sys`, use `cargo add sys` to add it to your `Cargo.toml` and import it in your code",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 593,
                        "byte_start": 593,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "extern crate sys;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "extern crate numtoa;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0433",
                  "explanation": "An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"
                },
                "level": "error",
                "message": "failed to resolve: use of unresolved module or unlinked crate `sys`",
                "spans": [
                  {
                    "byte_end": 731,
                    "byte_start": 728,
                    "column_end": 8,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\raw.rs",
                    "is_primary": true,
                    "label": "use of unresolved module or unlinked crate `sys`",
                    "line_end": 29,
                    "line_start": 29,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 5,
                        "text": "use sys::attr::{get_terminal_attr, raw_terminal_attr, set_terminal_attr};"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0432]: unresolved import `std::os::fd`\n   --> src\\raw.rs:26:9\n    |\n26  |     os::fd::AsFd,\n    |         ^^ could not find `fd` in `os`\n    |\nnote: found an item that was configured out\n   --> C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\os\\mod.rs:186:9\n    |\n186 | pub mod fd;\n    |         ^^\nnote: the item is gated here\n   --> C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\os\\mod.rs:185:1\n    |\n185 | #[cfg(any(unix, target_os = \"hermit\", target_os = \"trusty\", target_os = \"wasi\", doc))]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4701,
                        "byte_start": 4699,
                        "column_end": 11,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\os\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 186,
                        "line_start": 186,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 11,
                            "highlight_start": 9,
                            "text": "pub mod fd;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4690,
                        "byte_start": 4604,
                        "column_end": 87,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\os\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 185,
                        "line_start": 185,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 87,
                            "highlight_start": 1,
                            "text": "#[cfg(any(unix, target_os = \"hermit\", target_os = \"trusty\", target_os = \"wasi\", doc))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0432",
                  "explanation": "An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"
                },
                "level": "error",
                "message": "unresolved import `std::os::fd`",
                "spans": [
                  {
                    "byte_end": 712,
                    "byte_start": 710,
                    "column_end": 11,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\raw.rs",
                    "is_primary": true,
                    "label": "could not find `fd` in `os`",
                    "line_end": 26,
                    "line_start": 26,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 11,
                        "highlight_start": 9,
                        "text": "    os::fd::AsFd,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0432]: unresolved import `sys`\n  --> src\\raw.rs:30:5\n   |\n30 | use sys::Termios;\n   |     ^^^ use of unresolved module or unlinked crate `sys`\n   |\nnote: found an item that was configured out\n  --> src\\lib.rs:20:5\n   |\n20 | mod sys;\n   |     ^^^\nnote: the item is gated behind the `redox` feature\n  --> src\\lib.rs:18:7\n   |\n18 | #[cfg(target_os = \"redox\")]\n   |       ^^^^^^^^^^^^^^^^^^^\nnote: found an item that was configured out\n  --> src\\lib.rs:24:5\n   |\n24 | mod sys;\n   |     ^^^\nnote: the item is gated here\n  --> src\\lib.rs:22:1\n   |\n22 | #[cfg(all(unix, not(target_os = \"redox\")))]\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nhelp: if you wanted to use a crate named `sys`, use `cargo add sys` to add it to your `Cargo.toml` and import it in your code\n  --> src\\lib.rs:14:1\n   |\n14 + extern crate sys;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 725,
                        "byte_start": 722,
                        "column_end": 8,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 20,
                        "line_start": 20,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 8,
                            "highlight_start": 5,
                            "text": "mod sys;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated behind the `redox` feature",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 667,
                        "column_end": 26,
                        "column_start": 7,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 18,
                        "line_start": 18,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 7,
                            "text": "#[cfg(target_os = \"redox\")]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 807,
                        "byte_start": 804,
                        "column_end": 8,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 24,
                        "line_start": 24,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 8,
                            "highlight_start": 5,
                            "text": "mod sys;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 771,
                        "byte_start": 728,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 22,
                        "line_start": 22,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "#[cfg(all(unix, not(target_os = \"redox\")))]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you wanted to use a crate named `sys`, use `cargo add sys` to add it to your `Cargo.toml` and import it in your code",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 593,
                        "byte_start": 593,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "extern crate sys;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "extern crate numtoa;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0432",
                  "explanation": "An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"
                },
                "level": "error",
                "message": "unresolved import `sys`",
                "spans": [
                  {
                    "byte_end": 805,
                    "byte_start": 802,
                    "column_end": 8,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\raw.rs",
                    "is_primary": true,
                    "label": "use of unresolved module or unlinked crate `sys`",
                    "line_end": 30,
                    "line_start": 30,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 5,
                        "text": "use sys::Termios;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "Some errors have detailed explanations: E0432, E0433.\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "failure-note",
                "message": "Some errors have detailed explanations: E0432, E0433.",
                "spans": []
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "For more information about an error, try `rustc --explain E0432`.\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "failure-note",
                "message": "For more information about an error, try `rustc --explain E0432`.",
                "spans": []
              }
            },
            {
              "reason": "build-finished",
              "success": false
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.171",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\target\\debug\\build\\libc-6e895cdbcd5e4ab4\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\target\\debug\\build\\libc-6e895cdbcd5e4ab4\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.171",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "freebsd11",
                "libc_const_extern_fn"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\target\\debug\\build\\libc-21243236bad9ad17\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#numtoa@0.2.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\numtoa-0.2.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "numtoa",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\numtoa-0.2.4\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\target\\debug\\deps\\libnumtoa-24b3a121945cf2a2.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.171",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\target\\debug\\deps\\liblibc-380a503941dbe08d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0433]: failed to resolve: use of unresolved module or unlinked crate `sys`\n  --> src\\lib.rs:26:9\n   |\n26 | pub use sys::size::terminal_size;\n   |         ^^^ use of unresolved module or unlinked crate `sys`\n   |\nnote: found an item that was configured out\n  --> src\\lib.rs:20:5\n   |\n20 | mod sys;\n   |     ^^^\nnote: the item is gated behind the `redox` feature\n  --> src\\lib.rs:18:7\n   |\n18 | #[cfg(target_os = \"redox\")]\n   |       ^^^^^^^^^^^^^^^^^^^\nnote: found an item that was configured out\n  --> src\\lib.rs:24:5\n   |\n24 | mod sys;\n   |     ^^^\nnote: the item is gated here\n  --> src\\lib.rs:22:1\n   |\n22 | #[cfg(all(unix, not(target_os = \"redox\")))]\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nhelp: if you wanted to use a crate named `sys`, use `cargo add sys` to add it to your `Cargo.toml` and import it in your code\n   |\n14 + extern crate sys;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 725,
                        "byte_start": 722,
                        "column_end": 8,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 20,
                        "line_start": 20,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 8,
                            "highlight_start": 5,
                            "text": "mod sys;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated behind the `redox` feature",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 667,
                        "column_end": 26,
                        "column_start": 7,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 18,
                        "line_start": 18,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 7,
                            "text": "#[cfg(target_os = \"redox\")]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 807,
                        "byte_start": 804,
                        "column_end": 8,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 24,
                        "line_start": 24,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 8,
                            "highlight_start": 5,
                            "text": "mod sys;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 771,
                        "byte_start": 728,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 22,
                        "line_start": 22,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "#[cfg(all(unix, not(target_os = \"redox\")))]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you wanted to use a crate named `sys`, use `cargo add sys` to add it to your `Cargo.toml` and import it in your code",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 593,
                        "byte_start": 593,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "extern crate sys;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "extern crate numtoa;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0433",
                  "explanation": "An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"
                },
                "level": "error",
                "message": "failed to resolve: use of unresolved module or unlinked crate `sys`",
                "spans": [
                  {
                    "byte_end": 821,
                    "byte_start": 818,
                    "column_end": 12,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": "use of unresolved module or unlinked crate `sys`",
                    "line_end": 26,
                    "line_start": 26,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 9,
                        "text": "pub use sys::size::terminal_size;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0433]: failed to resolve: use of unresolved module or unlinked crate `sys`\n  --> src\\lib.rs:29:9\n   |\n29 | pub use sys::tty::{get_tty, is_tty};\n   |         ^^^ use of unresolved module or unlinked crate `sys`\n   |\nnote: found an item that was configured out\n  --> src\\lib.rs:20:5\n   |\n20 | mod sys;\n   |     ^^^\nnote: the item is gated behind the `redox` feature\n  --> src\\lib.rs:18:7\n   |\n18 | #[cfg(target_os = \"redox\")]\n   |       ^^^^^^^^^^^^^^^^^^^\nnote: found an item that was configured out\n  --> src\\lib.rs:24:5\n   |\n24 | mod sys;\n   |     ^^^\nnote: the item is gated here\n  --> src\\lib.rs:22:1\n   |\n22 | #[cfg(all(unix, not(target_os = \"redox\")))]\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nhelp: if you wanted to use a crate named `sys`, use `cargo add sys` to add it to your `Cargo.toml` and import it in your code\n   |\n14 + extern crate sys;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 725,
                        "byte_start": 722,
                        "column_end": 8,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 20,
                        "line_start": 20,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 8,
                            "highlight_start": 5,
                            "text": "mod sys;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated behind the `redox` feature",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 667,
                        "column_end": 26,
                        "column_start": 7,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 18,
                        "line_start": 18,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 7,
                            "text": "#[cfg(target_os = \"redox\")]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 807,
                        "byte_start": 804,
                        "column_end": 8,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 24,
                        "line_start": 24,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 8,
                            "highlight_start": 5,
                            "text": "mod sys;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 771,
                        "byte_start": 728,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 22,
                        "line_start": 22,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "#[cfg(all(unix, not(target_os = \"redox\")))]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you wanted to use a crate named `sys`, use `cargo add sys` to add it to your `Cargo.toml` and import it in your code",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 593,
                        "byte_start": 593,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "extern crate sys;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "extern crate numtoa;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0433",
                  "explanation": "An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"
                },
                "level": "error",
                "message": "failed to resolve: use of unresolved module or unlinked crate `sys`",
                "spans": [
                  {
                    "byte_end": 985,
                    "byte_start": 982,
                    "column_end": 12,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": "use of unresolved module or unlinked crate `sys`",
                    "line_end": 29,
                    "line_start": 29,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 9,
                        "text": "pub use sys::tty::{get_tty, is_tty};"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0433]: failed to resolve: use of unresolved module or unlinked crate `sys`\n  --> src\\async.rs:5:5\n   |\n5  | use sys::tty::get_tty;\n   |     ^^^ use of unresolved module or unlinked crate `sys`\n   |\nnote: found an item that was configured out\n  --> src\\lib.rs:20:5\n   |\n20 | mod sys;\n   |     ^^^\nnote: the item is gated behind the `redox` feature\n  --> src\\lib.rs:18:7\n   |\n18 | #[cfg(target_os = \"redox\")]\n   |       ^^^^^^^^^^^^^^^^^^^\nnote: found an item that was configured out\n  --> src\\lib.rs:24:5\n   |\n24 | mod sys;\n   |     ^^^\nnote: the item is gated here\n  --> src\\lib.rs:22:1\n   |\n22 | #[cfg(all(unix, not(target_os = \"redox\")))]\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nhelp: if you wanted to use a crate named `sys`, use `cargo add sys` to add it to your `Cargo.toml` and import it in your code\n  --> src\\lib.rs:14:1\n   |\n14 + extern crate sys;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 725,
                        "byte_start": 722,
                        "column_end": 8,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 20,
                        "line_start": 20,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 8,
                            "highlight_start": 5,
                            "text": "mod sys;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated behind the `redox` feature",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 667,
                        "column_end": 26,
                        "column_start": 7,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 18,
                        "line_start": 18,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 7,
                            "text": "#[cfg(target_os = \"redox\")]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 807,
                        "byte_start": 804,
                        "column_end": 8,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 24,
                        "line_start": 24,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 8,
                            "highlight_start": 5,
                            "text": "mod sys;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 771,
                        "byte_start": 728,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 22,
                        "line_start": 22,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "#[cfg(all(unix, not(target_os = \"redox\")))]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you wanted to use a crate named `sys`, use `cargo add sys` to add it to your `Cargo.toml` and import it in your code",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 593,
                        "byte_start": 593,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "extern crate sys;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "extern crate numtoa;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0433",
                  "explanation": "An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"
                },
                "level": "error",
                "message": "failed to resolve: use of unresolved module or unlinked crate `sys`",
                "spans": [
                  {
                    "byte_end": 73,
                    "byte_start": 70,
                    "column_end": 8,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\async.rs",
                    "is_primary": true,
                    "label": "use of unresolved module or unlinked crate `sys`",
                    "line_end": 5,
                    "line_start": 5,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 5,
                        "text": "use sys::tty::get_tty;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0432]: unresolved import `std::os::fd`\n   --> src\\input.rs:5:14\n    |\n5   | use std::os::fd::AsFd;\n    |              ^^ could not find `fd` in `os`\n    |\nnote: found an item that was configured out\n   --> C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\os\\mod.rs:186:9\n    |\n186 | pub mod fd;\n    |         ^^\nnote: the item is gated here\n   --> C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\os\\mod.rs:185:1\n    |\n185 | #[cfg(any(unix, target_os = \"hermit\", target_os = \"trusty\", target_os = \"wasi\", doc))]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4701,
                        "byte_start": 4699,
                        "column_end": 11,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\os\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 186,
                        "line_start": 186,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 11,
                            "highlight_start": 9,
                            "text": "pub mod fd;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4690,
                        "byte_start": 4604,
                        "column_end": 87,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\os\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 185,
                        "line_start": 185,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 87,
                            "highlight_start": 1,
                            "text": "#[cfg(any(unix, target_os = \"hermit\", target_os = \"trusty\", target_os = \"wasi\", doc))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0432",
                  "explanation": "An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"
                },
                "level": "error",
                "message": "unresolved import `std::os::fd`",
                "spans": [
                  {
                    "byte_end": 80,
                    "byte_start": 78,
                    "column_end": 16,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "src\\input.rs",
                    "is_primary": true,
                    "label": "could not find `fd` in `os`",
                    "line_end": 5,
                    "line_start": 5,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 14,
                        "text": "use std::os::fd::AsFd;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0433]: failed to resolve: use of unresolved module or unlinked crate `sys`\n  --> src\\raw.rs:29:5\n   |\n29 | use sys::attr::{get_terminal_attr, raw_terminal_attr, set_terminal_attr};\n   |     ^^^ use of unresolved module or unlinked crate `sys`\n   |\nnote: found an item that was configured out\n  --> src\\lib.rs:20:5\n   |\n20 | mod sys;\n   |     ^^^\nnote: the item is gated behind the `redox` feature\n  --> src\\lib.rs:18:7\n   |\n18 | #[cfg(target_os = \"redox\")]\n   |       ^^^^^^^^^^^^^^^^^^^\nnote: found an item that was configured out\n  --> src\\lib.rs:24:5\n   |\n24 | mod sys;\n   |     ^^^\nnote: the item is gated here\n  --> src\\lib.rs:22:1\n   |\n22 | #[cfg(all(unix, not(target_os = \"redox\")))]\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nhelp: if you wanted to use a crate named `sys`, use `cargo add sys` to add it to your `Cargo.toml` and import it in your code\n  --> src\\lib.rs:14:1\n   |\n14 + extern crate sys;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 725,
                        "byte_start": 722,
                        "column_end": 8,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 20,
                        "line_start": 20,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 8,
                            "highlight_start": 5,
                            "text": "mod sys;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated behind the `redox` feature",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 667,
                        "column_end": 26,
                        "column_start": 7,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 18,
                        "line_start": 18,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 7,
                            "text": "#[cfg(target_os = \"redox\")]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 807,
                        "byte_start": 804,
                        "column_end": 8,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 24,
                        "line_start": 24,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 8,
                            "highlight_start": 5,
                            "text": "mod sys;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 771,
                        "byte_start": 728,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 22,
                        "line_start": 22,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "#[cfg(all(unix, not(target_os = \"redox\")))]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you wanted to use a crate named `sys`, use `cargo add sys` to add it to your `Cargo.toml` and import it in your code",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 593,
                        "byte_start": 593,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "extern crate sys;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "extern crate numtoa;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0433",
                  "explanation": "An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"
                },
                "level": "error",
                "message": "failed to resolve: use of unresolved module or unlinked crate `sys`",
                "spans": [
                  {
                    "byte_end": 731,
                    "byte_start": 728,
                    "column_end": 8,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\raw.rs",
                    "is_primary": true,
                    "label": "use of unresolved module or unlinked crate `sys`",
                    "line_end": 29,
                    "line_start": 29,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 5,
                        "text": "use sys::attr::{get_terminal_attr, raw_terminal_attr, set_terminal_attr};"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0432]: unresolved import `std::os::fd`\n   --> src\\raw.rs:26:9\n    |\n26  |     os::fd::AsFd,\n    |         ^^ could not find `fd` in `os`\n    |\nnote: found an item that was configured out\n   --> C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\os\\mod.rs:186:9\n    |\n186 | pub mod fd;\n    |         ^^\nnote: the item is gated here\n   --> C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\os\\mod.rs:185:1\n    |\n185 | #[cfg(any(unix, target_os = \"hermit\", target_os = \"trusty\", target_os = \"wasi\", doc))]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4701,
                        "byte_start": 4699,
                        "column_end": 11,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\os\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 186,
                        "line_start": 186,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 11,
                            "highlight_start": 9,
                            "text": "pub mod fd;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4690,
                        "byte_start": 4604,
                        "column_end": 87,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\os\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 185,
                        "line_start": 185,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 87,
                            "highlight_start": 1,
                            "text": "#[cfg(any(unix, target_os = \"hermit\", target_os = \"trusty\", target_os = \"wasi\", doc))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0432",
                  "explanation": "An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"
                },
                "level": "error",
                "message": "unresolved import `std::os::fd`",
                "spans": [
                  {
                    "byte_end": 712,
                    "byte_start": 710,
                    "column_end": 11,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\raw.rs",
                    "is_primary": true,
                    "label": "could not find `fd` in `os`",
                    "line_end": 26,
                    "line_start": 26,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 11,
                        "highlight_start": 9,
                        "text": "    os::fd::AsFd,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0432]: unresolved import `sys`\n  --> src\\raw.rs:30:5\n   |\n30 | use sys::Termios;\n   |     ^^^ use of unresolved module or unlinked crate `sys`\n   |\nnote: found an item that was configured out\n  --> src\\lib.rs:20:5\n   |\n20 | mod sys;\n   |     ^^^\nnote: the item is gated behind the `redox` feature\n  --> src\\lib.rs:18:7\n   |\n18 | #[cfg(target_os = \"redox\")]\n   |       ^^^^^^^^^^^^^^^^^^^\nnote: found an item that was configured out\n  --> src\\lib.rs:24:5\n   |\n24 | mod sys;\n   |     ^^^\nnote: the item is gated here\n  --> src\\lib.rs:22:1\n   |\n22 | #[cfg(all(unix, not(target_os = \"redox\")))]\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nhelp: if you wanted to use a crate named `sys`, use `cargo add sys` to add it to your `Cargo.toml` and import it in your code\n  --> src\\lib.rs:14:1\n   |\n14 + extern crate sys;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 725,
                        "byte_start": 722,
                        "column_end": 8,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 20,
                        "line_start": 20,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 8,
                            "highlight_start": 5,
                            "text": "mod sys;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated behind the `redox` feature",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 667,
                        "column_end": 26,
                        "column_start": 7,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 18,
                        "line_start": 18,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 7,
                            "text": "#[cfg(target_os = \"redox\")]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "found an item that was configured out",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 807,
                        "byte_start": 804,
                        "column_end": 8,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 24,
                        "line_start": 24,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 8,
                            "highlight_start": 5,
                            "text": "mod sys;"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the item is gated here",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 771,
                        "byte_start": 728,
                        "column_end": 44,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 22,
                        "line_start": 22,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 1,
                            "text": "#[cfg(all(unix, not(target_os = \"redox\")))]"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you wanted to use a crate named `sys`, use `cargo add sys` to add it to your `Cargo.toml` and import it in your code",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 593,
                        "byte_start": 593,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "extern crate sys;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "extern crate numtoa;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0432",
                  "explanation": "An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"
                },
                "level": "error",
                "message": "unresolved import `sys`",
                "spans": [
                  {
                    "byte_end": 805,
                    "byte_start": 802,
                    "column_end": 8,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\raw.rs",
                    "is_primary": true,
                    "label": "use of unresolved module or unlinked crate `sys`",
                    "line_end": 30,
                    "line_start": 30,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 8,
                        "highlight_start": 5,
                        "text": "use sys::Termios;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: redundant field names in struct initialization\n  --> src\\async.rs:32:19\n   |\n32 |     AsyncReader { recv: recv }\n   |                   ^^^^^^^^^^ help: replace it with: `recv`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n   = note: `#[warn(clippy::redundant_field_names)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::redundant_field_names)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace it with",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 959,
                        "byte_start": 949,
                        "column_end": 29,
                        "column_start": 19,
                        "expansion": null,
                        "file_name": "src\\async.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 32,
                        "line_start": 32,
                        "suggested_replacement": "recv",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 19,
                            "text": "    AsyncReader { recv: recv }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_field_names",
                  "explanation": null
                },
                "level": "warning",
                "message": "redundant field names in struct initialization",
                "spans": [
                  {
                    "byte_end": 959,
                    "byte_start": 949,
                    "column_end": 29,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "src\\async.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 32,
                    "line_start": 32,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 19,
                        "text": "    AsyncReader { recv: recv }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: redundant field names in struct initialization\n  --> src\\async.rs:56:19\n   |\n56 |     AsyncReader { recv: recv }\n   |                   ^^^^^^^^^^ help: replace it with: `recv`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace it with",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1951,
                        "byte_start": 1941,
                        "column_end": 29,
                        "column_start": 19,
                        "expansion": null,
                        "file_name": "src\\async.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 56,
                        "line_start": 56,
                        "suggested_replacement": "recv",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 19,
                            "text": "    AsyncReader { recv: recv }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_field_names",
                  "explanation": null
                },
                "level": "warning",
                "message": "redundant field names in struct initialization",
                "spans": [
                  {
                    "byte_end": 1951,
                    "byte_start": 1941,
                    "column_end": 29,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "src\\async.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 56,
                    "line_start": 56,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 19,
                        "text": "    AsyncReader { recv: recv }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: redundant field names in struct initialization\n   --> src\\cursor.rs:221:22\n    |\n221 |         HideCursor { output: output }\n    |                      ^^^^^^^^^^^^^^ help: replace it with: `output`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace it with",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5842,
                        "byte_start": 5828,
                        "column_end": 36,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\cursor.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 221,
                        "line_start": 221,
                        "suggested_replacement": "output",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 22,
                            "text": "        HideCursor { output: output }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_field_names",
                  "explanation": null
                },
                "level": "warning",
                "message": "redundant field names in struct initialization",
                "spans": [
                  {
                    "byte_end": 5842,
                    "byte_start": 5828,
                    "column_end": 36,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\cursor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 221,
                    "line_start": 221,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 22,
                        "text": "        HideCursor { output: output }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: constants have by default a `'static` lifetime\n   --> src\\input.rs:189:30\n    |\n189 | const ENTER_MOUSE_SEQUENCE: &'static str = csi!(\"?1000h\\x1b[?1002h\\x1b[?1015h\\x1b[?1006h\");\n    |                             -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n    = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::redundant_static_lifetimes)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing `'static`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5442,
                        "byte_start": 5430,
                        "column_end": 41,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\input.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 189,
                        "line_start": 189,
                        "suggested_replacement": "&str",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 29,
                            "text": "const ENTER_MOUSE_SEQUENCE: &'static str = csi!(\"?1000h\\x1b[?1002h\\x1b[?1015h\\x1b[?1006h\");"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_static_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "constants have by default a `'static` lifetime",
                "spans": [
                  {
                    "byte_end": 5438,
                    "byte_start": 5431,
                    "column_end": 37,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\input.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 189,
                    "line_start": 189,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 30,
                        "text": "const ENTER_MOUSE_SEQUENCE: &'static str = csi!(\"?1000h\\x1b[?1002h\\x1b[?1015h\\x1b[?1006h\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: constants have by default a `'static` lifetime\n   --> src\\input.rs:192:29\n    |\n192 | const EXIT_MOUSE_SEQUENCE: &'static str = csi!(\"?1006l\\x1b[?1015l\\x1b[?1002l\\x1b[?1000l\");\n    |                            -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing `'static`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5600,
                        "byte_start": 5588,
                        "column_end": 40,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "src\\input.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 192,
                        "line_start": 192,
                        "suggested_replacement": "&str",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 28,
                            "text": "const EXIT_MOUSE_SEQUENCE: &'static str = csi!(\"?1006l\\x1b[?1015l\\x1b[?1002l\\x1b[?1000l\");"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_static_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "constants have by default a `'static` lifetime",
                "spans": [
                  {
                    "byte_end": 5596,
                    "byte_start": 5589,
                    "column_end": 36,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\input.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 192,
                    "line_start": 192,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 29,
                        "text": "const EXIT_MOUSE_SEQUENCE: &'static str = csi!(\"?1006l\\x1b[?1015l\\x1b[?1002l\\x1b[?1000l\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "Some errors have detailed explanations: E0432, E0433.\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "failure-note",
                "message": "Some errors have detailed explanations: E0432, E0433.",
                "spans": []
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpzhphium8/termion-4.0.5#termion@4.0.5",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termion",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpzhphium8\\termion-4.0.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "For more information about an error, try `rustc --explain E0432`.\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "failure-note",
                "message": "For more information about an error, try `rustc --explain E0432`.",
                "spans": []
              }
            },
            {
              "reason": "build-finished",
              "success": false
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 13
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {}
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "termion",
          "version": "4.0.5",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/termion/latest/termion/all.html \"show sidebar\")\n# Crate termionCopy item path\n[Settings](https://docs.rs/termion/latest/settings.html)\n[Help](https://docs.rs/termion/latest/help.html)\nSummary[Source](https://docs.rs/termion/latest/src/termion/lib.rs.html#1-71)\nExpand description\nTermion is a pure Rust, bindless library for low-level handling, manipulating and reading information about terminals. This provides a full-featured alternative to Termbox.\nTermion aims to be simple and yet expressive. It is bindless, meaning that it is not a front-end to some other library (e.g., ncurses or termbox), but a standalone library directly talking to the TTY.\nSupports Redox, Mac OS X, and Linux (or, in general, ANSI terminals).\nFor more information refer to the [README](https://github.com/redox-os/termion).\n## Modules[\u00a7](https://docs.rs/termion/latest/termion/#modules)\n\n[clear](https://docs.rs/termion/latest/termion/clear/index.html \"mod termion::clear\")\n    Clearing the screen.\n\n[color](https://docs.rs/termion/latest/termion/color/index.html \"mod termion::color\")\n    Color managemement.\n\n[cursor](https://docs.rs/termion/latest/termion/cursor/index.html \"mod termion::cursor\")\n    Cursor movement.\n\n[event](https://docs.rs/termion/latest/termion/event/index.html \"mod termion::event\")\n    Mouse and key events.\n\n[input](https://docs.rs/termion/latest/termion/input/index.html \"mod termion::input\")\n    User input.\n\n[raw](https://docs.rs/termion/latest/termion/raw/index.html \"mod termion::raw\")\n    Managing raw mode.\n\n[screen](https://docs.rs/termion/latest/termion/screen/index.html \"mod termion::screen\")\n    Managing switching between main and alternate screen buffers.\n\n[scroll](https://docs.rs/termion/latest/termion/scroll/index.html \"mod termion::scroll\")\n    Scrolling.\n\n[style](https://docs.rs/termion/latest/termion/style/index.html \"mod termion::style\")\n    Text styling management.\n## Structs[\u00a7](https://docs.rs/termion/latest/termion/#structs)\n\n[AsyncReader](https://docs.rs/termion/latest/termion/struct.AsyncReader.html \"struct termion::AsyncReader\")\n    An asynchronous reader.\n## Functions[\u00a7](https://docs.rs/termion/latest/termion/#functions)\n\n[async_stdin](https://docs.rs/termion/latest/termion/fn.async_stdin.html \"fn termion::async_stdin\")\n    Construct an asynchronous handle to the TTY standard input.\n\n[get_tty](https://docs.rs/termion/latest/termion/fn.get_tty.html \"fn termion::get_tty\")\n    Get the TTY device.\n\n[is_tty](https://docs.rs/termion/latest/termion/fn.is_tty.html \"fn termion::is_tty\")\n    Is this stream a TTY?\n\n[terminal_size](https://docs.rs/termion/latest/termion/fn.terminal_size.html \"fn termion::terminal_size\")\n    Get the size (columns, rows) of the terminal.\n\n[terminal_size_fd](https://docs.rs/termion/latest/termion/fn.terminal_size_fd.html \"fn termion::terminal_size_fd\")\n    Get the size (columns, rows) of the terminal from descriptor object.\n\n[terminal_size_pixels](https://docs.rs/termion/latest/termion/fn.terminal_size_pixels.html \"fn termion::terminal_size_pixels\")\n    Get the size of the terminal in pixels.\n\n[terminal_size_pixels_fd](https://docs.rs/termion/latest/termion/fn.terminal_size_pixels_fd.html \"fn termion::terminal_size_pixels_fd\")\n    Get the size of the terminal in pixels from descriptor object.\n",
            "markdown_with_citations": "[](https://docs.rs/termion/latest/termion/all.html \"show sidebar\")\n# Crate termionCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nTermion is a pure Rust, bindless library for low-level handling, manipulating and reading information about terminals. This provides a full-featured alternative to Termbox.\nTermion aims to be simple and yet expressive. It is bindless, meaning that it is not a front-end to some other library (e.g., ncurses or termbox), but a standalone library directly talking to the TTY.\nSupports Redox, Mac OS X, and Linux (or, in general, ANSI terminals).\nFor more information refer to the README\u27e84\u27e9.\n## Modules\u00a7\u27e85\u27e9\n\nclear\u27e86\u27e9\n    Clearing the screen.\n\ncolor\u27e87\u27e9\n    Color managemement.\n\ncursor\u27e88\u27e9\n    Cursor movement.\n\nevent\u27e89\u27e9\n    Mouse and key events.\n\ninput\u27e810\u27e9\n    User input.\n\nraw\u27e811\u27e9\n    Managing raw mode.\n\nscreen\u27e812\u27e9\n    Managing switching between main and alternate screen buffers.\n\nscroll\u27e813\u27e9\n    Scrolling.\n\nstyle\u27e814\u27e9\n    Text styling management.\n## Structs\u00a7\u27e815\u27e9\n\nAsyncReader\u27e816\u27e9\n    An asynchronous reader.\n## Functions\u00a7\u27e817\u27e9\n\nasync_stdin\u27e818\u27e9\n    Construct an asynchronous handle to the TTY standard input.\n\nget_tty\u27e819\u27e9\n    Get the TTY device.\n\nis_tty\u27e820\u27e9\n    Is this stream a TTY?\n\nterminal_size\u27e821\u27e9\n    Get the size (columns, rows) of the terminal.\n\nterminal_size_fd\u27e822\u27e9\n    Get the size (columns, rows) of the terminal from descriptor object.\n\nterminal_size_pixels\u27e823\u27e9\n    Get the size of the terminal in pixels.\n\nterminal_size_pixels_fd\u27e824\u27e9\n    Get the size of the terminal in pixels from descriptor object.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/termion/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/termion/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/termion/latest/src/termion/lib.rs.html#1-71: Source\n\u27e84\u27e9 https://github.com/redox-os/termion: README\n\u27e85\u27e9 https://docs.rs/termion/latest/termion/#modules: \u00a7\n\u27e86\u27e9 https://docs.rs/termion/latest/termion/clear/index.html: mod termion::clear - clear\n\u27e87\u27e9 https://docs.rs/termion/latest/termion/color/index.html: mod termion::color - color\n\u27e88\u27e9 https://docs.rs/termion/latest/termion/cursor/index.html: mod termion::cursor - cursor\n\u27e89\u27e9 https://docs.rs/termion/latest/termion/event/index.html: mod termion::event - event\n\u27e810\u27e9 https://docs.rs/termion/latest/termion/input/index.html: mod termion::input - input\n\u27e811\u27e9 https://docs.rs/termion/latest/termion/raw/index.html: mod termion::raw - raw\n\u27e812\u27e9 https://docs.rs/termion/latest/termion/screen/index.html: mod termion::screen - screen\n\u27e813\u27e9 https://docs.rs/termion/latest/termion/scroll/index.html: mod termion::scroll - scroll\n\u27e814\u27e9 https://docs.rs/termion/latest/termion/style/index.html: mod termion::style - style\n\u27e815\u27e9 https://docs.rs/termion/latest/termion/#structs: \u00a7\n\u27e816\u27e9 https://docs.rs/termion/latest/termion/struct.AsyncReader.html: struct termion::AsyncReader - AsyncReader\n\u27e817\u27e9 https://docs.rs/termion/latest/termion/#functions: \u00a7\n\u27e818\u27e9 https://docs.rs/termion/latest/termion/fn.async_stdin.html: fn termion::async_stdin - async_stdin\n\u27e819\u27e9 https://docs.rs/termion/latest/termion/fn.get_tty.html: fn termion::get_tty - get_tty\n\u27e820\u27e9 https://docs.rs/termion/latest/termion/fn.is_tty.html: fn termion::is_tty - is_tty\n\u27e821\u27e9 https://docs.rs/termion/latest/termion/fn.terminal_size.html: fn termion::terminal_size - terminal_size\n\u27e822\u27e9 https://docs.rs/termion/latest/termion/fn.terminal_size_fd.html: fn termion::terminal_size_fd - terminal_size_fd\n\u27e823\u27e9 https://docs.rs/termion/latest/termion/fn.terminal_size_pixels.html: fn termion::terminal_size_pixels - terminal_size_pixels\n\u27e824\u27e9 https://docs.rs/termion/latest/termion/fn.terminal_size_pixels_fd.html: fn termion::terminal_size_pixels_fd - terminal_size_pixels_fd\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "termion",
          "version": "4.0.5",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/termion/latest/termion/all.html \"show sidebar\")\n# Crate termionCopy item path\n[Settings](https://docs.rs/termion/latest/settings.html)\n[Help](https://docs.rs/termion/latest/help.html)\nSummary[Source](https://docs.rs/termion/latest/src/termion/lib.rs.html#1-71)\nExpand description\nTermion is a pure Rust, bindless library for low-level handling, manipulating and reading information about terminals. This provides a full-featured alternative to Termbox.\nTermion aims to be simple and yet expressive. It is bindless, meaning that it is not a front-end to some other library (e.g., ncurses or termbox), but a standalone library directly talking to the TTY.\nSupports Redox, Mac OS X, and Linux (or, in general, ANSI terminals).\nFor more information refer to the [README](https://github.com/redox-os/termion).\n## Modules[\u00a7](https://docs.rs/termion/latest/termion/#modules)\n\n[clear](https://docs.rs/termion/latest/termion/clear/index.html \"mod termion::clear\")\n    Clearing the screen.\n\n[color](https://docs.rs/termion/latest/termion/color/index.html \"mod termion::color\")\n    Color managemement.\n\n[cursor](https://docs.rs/termion/latest/termion/cursor/index.html \"mod termion::cursor\")\n    Cursor movement.\n\n[event](https://docs.rs/termion/latest/termion/event/index.html \"mod termion::event\")\n    Mouse and key events.\n\n[input](https://docs.rs/termion/latest/termion/input/index.html \"mod termion::input\")\n    User input.\n\n[raw](https://docs.rs/termion/latest/termion/raw/index.html \"mod termion::raw\")\n    Managing raw mode.\n\n[screen](https://docs.rs/termion/latest/termion/screen/index.html \"mod termion::screen\")\n    Managing switching between main and alternate screen buffers.\n\n[scroll](https://docs.rs/termion/latest/termion/scroll/index.html \"mod termion::scroll\")\n    Scrolling.\n\n[style](https://docs.rs/termion/latest/termion/style/index.html \"mod termion::style\")\n    Text styling management.\n## Structs[\u00a7](https://docs.rs/termion/latest/termion/#structs)\n\n[AsyncReader](https://docs.rs/termion/latest/termion/struct.AsyncReader.html \"struct termion::AsyncReader\")\n    An asynchronous reader.\n## Functions[\u00a7](https://docs.rs/termion/latest/termion/#functions)\n\n[async_stdin](https://docs.rs/termion/latest/termion/fn.async_stdin.html \"fn termion::async_stdin\")\n    Construct an asynchronous handle to the TTY standard input.\n\n[get_tty](https://docs.rs/termion/latest/termion/fn.get_tty.html \"fn termion::get_tty\")\n    Get the TTY device.\n\n[is_tty](https://docs.rs/termion/latest/termion/fn.is_tty.html \"fn termion::is_tty\")\n    Is this stream a TTY?\n\n[terminal_size](https://docs.rs/termion/latest/termion/fn.terminal_size.html \"fn termion::terminal_size\")\n    Get the size (columns, rows) of the terminal.\n\n[terminal_size_fd](https://docs.rs/termion/latest/termion/fn.terminal_size_fd.html \"fn termion::terminal_size_fd\")\n    Get the size (columns, rows) of the terminal from descriptor object.\n\n[terminal_size_pixels](https://docs.rs/termion/latest/termion/fn.terminal_size_pixels.html \"fn termion::terminal_size_pixels\")\n    Get the size of the terminal in pixels.\n\n[terminal_size_pixels_fd](https://docs.rs/termion/latest/termion/fn.terminal_size_pixels_fd.html \"fn termion::terminal_size_pixels_fd\")\n    Get the size of the terminal in pixels from descriptor object.\n",
            "markdown_with_citations": "[](https://docs.rs/termion/latest/termion/all.html \"show sidebar\")\n# Crate termionCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nTermion is a pure Rust, bindless library for low-level handling, manipulating and reading information about terminals. This provides a full-featured alternative to Termbox.\nTermion aims to be simple and yet expressive. It is bindless, meaning that it is not a front-end to some other library (e.g., ncurses or termbox), but a standalone library directly talking to the TTY.\nSupports Redox, Mac OS X, and Linux (or, in general, ANSI terminals).\nFor more information refer to the README\u27e84\u27e9.\n## Modules\u00a7\u27e85\u27e9\n\nclear\u27e86\u27e9\n    Clearing the screen.\n\ncolor\u27e87\u27e9\n    Color managemement.\n\ncursor\u27e88\u27e9\n    Cursor movement.\n\nevent\u27e89\u27e9\n    Mouse and key events.\n\ninput\u27e810\u27e9\n    User input.\n\nraw\u27e811\u27e9\n    Managing raw mode.\n\nscreen\u27e812\u27e9\n    Managing switching between main and alternate screen buffers.\n\nscroll\u27e813\u27e9\n    Scrolling.\n\nstyle\u27e814\u27e9\n    Text styling management.\n## Structs\u00a7\u27e815\u27e9\n\nAsyncReader\u27e816\u27e9\n    An asynchronous reader.\n## Functions\u00a7\u27e817\u27e9\n\nasync_stdin\u27e818\u27e9\n    Construct an asynchronous handle to the TTY standard input.\n\nget_tty\u27e819\u27e9\n    Get the TTY device.\n\nis_tty\u27e820\u27e9\n    Is this stream a TTY?\n\nterminal_size\u27e821\u27e9\n    Get the size (columns, rows) of the terminal.\n\nterminal_size_fd\u27e822\u27e9\n    Get the size (columns, rows) of the terminal from descriptor object.\n\nterminal_size_pixels\u27e823\u27e9\n    Get the size of the terminal in pixels.\n\nterminal_size_pixels_fd\u27e824\u27e9\n    Get the size of the terminal in pixels from descriptor object.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/termion/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/termion/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/termion/latest/src/termion/lib.rs.html#1-71: Source\n\u27e84\u27e9 https://github.com/redox-os/termion: README\n\u27e85\u27e9 https://docs.rs/termion/latest/termion/#modules: \u00a7\n\u27e86\u27e9 https://docs.rs/termion/latest/termion/clear/index.html: mod termion::clear - clear\n\u27e87\u27e9 https://docs.rs/termion/latest/termion/color/index.html: mod termion::color - color\n\u27e88\u27e9 https://docs.rs/termion/latest/termion/cursor/index.html: mod termion::cursor - cursor\n\u27e89\u27e9 https://docs.rs/termion/latest/termion/event/index.html: mod termion::event - event\n\u27e810\u27e9 https://docs.rs/termion/latest/termion/input/index.html: mod termion::input - input\n\u27e811\u27e9 https://docs.rs/termion/latest/termion/raw/index.html: mod termion::raw - raw\n\u27e812\u27e9 https://docs.rs/termion/latest/termion/screen/index.html: mod termion::screen - screen\n\u27e813\u27e9 https://docs.rs/termion/latest/termion/scroll/index.html: mod termion::scroll - scroll\n\u27e814\u27e9 https://docs.rs/termion/latest/termion/style/index.html: mod termion::style - style\n\u27e815\u27e9 https://docs.rs/termion/latest/termion/#structs: \u00a7\n\u27e816\u27e9 https://docs.rs/termion/latest/termion/struct.AsyncReader.html: struct termion::AsyncReader - AsyncReader\n\u27e817\u27e9 https://docs.rs/termion/latest/termion/#functions: \u00a7\n\u27e818\u27e9 https://docs.rs/termion/latest/termion/fn.async_stdin.html: fn termion::async_stdin - async_stdin\n\u27e819\u27e9 https://docs.rs/termion/latest/termion/fn.get_tty.html: fn termion::get_tty - get_tty\n\u27e820\u27e9 https://docs.rs/termion/latest/termion/fn.is_tty.html: fn termion::is_tty - is_tty\n\u27e821\u27e9 https://docs.rs/termion/latest/termion/fn.terminal_size.html: fn termion::terminal_size - terminal_size\n\u27e822\u27e9 https://docs.rs/termion/latest/termion/fn.terminal_size_fd.html: fn termion::terminal_size_fd - terminal_size_fd\n\u27e823\u27e9 https://docs.rs/termion/latest/termion/fn.terminal_size_pixels.html: fn termion::terminal_size_pixels - terminal_size_pixels\n\u27e824\u27e9 https://docs.rs/termion/latest/termion/fn.terminal_size_pixels_fd.html: fn termion::terminal_size_pixels_fd - terminal_size_pixels_fd\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `termion` crate is a pure Rust library for low-level terminal manipulation, offering features like cursor movement, text styling, color management, screen clearing, and handling raw mode. It supports ANSI terminals across platforms like Linux, macOS, and Redox, and provides utilities for asynchronous input, terminal size detection, and event handling without relying on external bindings. Designed to be simple yet expressive, it serves as a standalone alternative to libraries like Termbox.",
          "feature_summary": null,
          "use_case": "Utilities",
          "score": 7.0,
          "factual_counterfactual": "### Pair 1: Terminal Interaction  \n\u2705 Factual: Termion provides a function `terminal_size` that allows developers to retrieve the terminal's dimensions in terms of columns and rows.  \n\u274c Counterfactual: Termion requires an external library, such as `ncurses`, to retrieve the terminal's dimensions.  \n\n---\n\n### Pair 2: Raw Mode Handling  \n\u2705 Factual: Termion includes a `raw` module that enables developers to manage raw mode, which disables input buffering and line editing for direct terminal interaction.  \n\u274c Counterfactual: Termion's `raw` mode automatically enables line buffering to improve input processing.  \n\n---\n\n### Pair 3: Cross-Platform Support  \n\u2705 Factual: Termion supports ANSI terminals across platforms, including Linux, macOS, and Redox OS.  \n\u274c Counterfactual: Termion is limited to Linux-based systems and does not support macOS or Redox OS.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-0c6736ed-9c3b67ae-1751260175",
      "timestamp": "2025-06-30T05:09:35.999782+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]