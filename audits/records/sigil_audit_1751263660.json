[
  {
    "execution_id": "exec-afc309d6-d1192cc3-1751263638",
    "timestamp": "2025-06-30T06:07:18.825830+00:00",
    "sacred_chain": {
      "input_data": "rumqttc",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'rumqttc' -> 'rumqttc'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "rumqttc",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/rumqttc",
            "title": "rumqttc v0.24.0",
            "content": {
              "raw_markdown": "#  rumqttc v0.24.0\nAn efficient and robust mqtt client for your connected devices \n  * [ #iot ](https://crates.io/keywords/iot)\n  * [ #mqtt ](https://crates.io/keywords/mqtt)\n  * [ #coap ](https://crates.io/keywords/coap)\n  * [ #http ](https://crates.io/keywords/http)\n\n\n  * [ Readme ](https://crates.io/crates/rumqttc)\n  * [ 33 Versions ](https://crates.io/crates/rumqttc/versions)\n  * [ Dependencies ](https://crates.io/crates/rumqttc/dependencies)\n  * [ Dependents ](https://crates.io/crates/rumqttc/reverse_dependencies)\n\n\n## Metadata\nover 1 year ago \nv1.64.0 \n[ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0)\n104 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add rumqttc\nOr add the following line to your Cargo.toml:\nrumqttc = \"0.24.0\"\n## Repository\n[ github.com/bytebeamio/rumqtt ](https://github.com/bytebeamio/rumqtt)\n## Owners\n## Categories\n  * [Network programming](https://crates.io/categories/network-programming)\n\n\n[ Report crate ](https://crates.io/support?crate=rumqttc&inquire=crate-violation)\n### Stats Overview\n2,953,580 Downloads all time\n33 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  rumqttc v0.24.0\nAn efficient and robust mqtt client for your connected devices \n  *  #iot \u27e81\u27e9\n  *  #mqtt \u27e82\u27e9\n  *  #coap \u27e83\u27e9\n  *  #http \u27e84\u27e9\n\n\n  *  Readme \u27e85\u27e9\n  *  33 Versions \u27e86\u27e9\n  *  Dependencies \u27e87\u27e9\n  *  Dependents \u27e88\u27e9\n\n\n## Metadata\nover 1 year ago \nv1.64.0 \n Apache-2.0 \u27e89\u27e9\n104 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add rumqttc\nOr add the following line to your Cargo.toml:\nrumqttc = \"0.24.0\"\n## Repository\n github.com/bytebeamio/rumqtt \u27e810\u27e9\n## Owners\n## Categories\n  * Network programming\u27e811\u27e9\n\n\n Report crate \u27e812\u27e9\n### Stats Overview\n2,953,580 Downloads all time\n33 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/iot:  #iot \n\u27e82\u27e9 https://crates.io/keywords/mqtt:  #mqtt \n\u27e83\u27e9 https://crates.io/keywords/coap:  #coap \n\u27e84\u27e9 https://crates.io/keywords/http:  #http \n\u27e85\u27e9 https://crates.io/crates/rumqttc:  Readme \n\u27e86\u27e9 https://crates.io/crates/rumqttc/versions:  33 Versions \n\u27e87\u27e9 https://crates.io/crates/rumqttc/dependencies:  Dependencies \n\u27e88\u27e9 https://crates.io/crates/rumqttc/reverse_dependencies:  Dependents \n\u27e89\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e810\u27e9 https://github.com/bytebeamio/rumqtt:  github.com/bytebeamio/rumqtt \n\u27e811\u27e9 https://crates.io/categories/network-programming: Network programming\n\u27e812\u27e9 https://crates.io/support?crate=rumqttc&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1226,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "117428.7254451"
          },
          "docs_rs": {
            "url": "https://docs.rs/rumqttc",
            "title": "Crate rumqttcCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/rumqttc/latest/rumqttc/all.html \"show sidebar\")\n# Crate rumqttcCopy item path\n[Settings](https://docs.rs/rumqttc/latest/settings.html)\n[Help](https://docs.rs/rumqttc/latest/help.html)\nSummary[Source](https://docs.rs/rumqttc/latest/src/rumqttc/lib.rs.html#1-1016)\nExpand description\nA pure rust MQTT client which strives to be robust, efficient and easy to use. This library is backed by an async (tokio) eventloop which handles all the robustness and and efficiency parts of MQTT but naturally fits into both sync and async worlds as we\u2019ll see\nLet\u2019s jump into examples right away\n### [\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#a-simple-synchronous-publish-and-subscribe)A simple synchronous publish and subscribe\n```\nuse rumqttc::{MqttOptions, Client, QoS};\nuse std::time::Duration;\nuse std::thread;\nlet mut mqttoptions = MqttOptions::new(\"rumqtt-sync\", \"test.mosquitto.org\", 1883);\nmqttoptions.set_keep_alive(Duration::from_secs(5));\nlet (mut client, mut connection) = Client::new(mqttoptions, 10);\nclient.subscribe(\"hello/rumqtt\", QoS::AtMostOnce).unwrap();\nthread::spawn(move || for i in 0..10 {\n  client.publish(\"hello/rumqtt\", QoS::AtLeastOnce, false, vec![i; i as usize]).unwrap();\n  thread::sleep(Duration::from_millis(100));\n});\n// Iterate to poll the eventloop for connection progress\nfor (i, notification) in connection.iter().enumerate() {\n  println!(\"Notification = {:?}\", notification);\n}\n```\n\n### [\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#a-simple-asynchronous-publish-and-subscribe)A simple asynchronous publish and subscribe\n```\nuse rumqttc::{MqttOptions, AsyncClient, QoS};\nuse tokio::{task, time};\nuse std::time::Duration;\nuse std::error::Error;\nlet mut mqttoptions = MqttOptions::new(\"rumqtt-async\", \"test.mosquitto.org\", 1883);\nmqttoptions.set_keep_alive(Duration::from_secs(5));\nlet (mut client, mut eventloop) = AsyncClient::new(mqttoptions, 10);\nclient.subscribe(\"hello/rumqtt\", QoS::AtMostOnce).await.unwrap();\ntask::spawn(async move {\n  for i in 0..10 {\n    client.publish(\"hello/rumqtt\", QoS::AtLeastOnce, false, vec![i; i as usize]).await.unwrap();\n    time::sleep(Duration::from_millis(100)).await;\n  }\n});\nloop {\n  let notification = eventloop.poll().await.unwrap();\n  println!(\"Received = {:?}\", notification);\n}\n```\n\nQuick overview of features\n  * Eventloop orchestrates outgoing/incoming packets concurrently and handles the state\n  * Pings the broker when necessary and detects client side half open connections as well\n  * Throttling of outgoing packets (todo)\n  * Queue size based flow control on outgoing packets\n  * Automatic reconnections by just continuing the `eventloop.poll()`/`connection.iter()` loop\n  * Natural backpressure to client APIs during bad network\n\n\nIn short, everything necessary to maintain a robust connection\nSince the eventloop is externally polled (with `iter()/poll()` in a loop) out side the library and `Eventloop` is accessible, users can\n  * Distribute incoming messages based on topics\n  * Stop it when required\n  * Access internal state for use cases like graceful shutdown or to modify options before reconnection\n\n\n### [\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#important-notes)Important notes\n  * Looping on `connection.iter()`/`eventloop.poll()` is necessary to run the event loop and make progress. It yields incoming and outgoing activity notifications which allows customization as you see fit.\n  * Blocking inside the `connection.iter()`/`eventloop.poll()` loop will block connection progress.\n\n\n### [\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#faq)FAQ\n**Connecting to a broker using raw ip doesn\u2019t work**\nYou cannot create a TLS connection to a bare IP address with a self-signed certificate. This is a [limitation of rustls](https://github.com/ctz/rustls/issues/184). One workaround, which only works under *nix/BSD-like systems, is to add an entry to wherever your DNS resolver looks (e.g. `/etc/hosts`) for the bare IP address and use that name in your code.\n## Re-exports[\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#reexports)\n\n`pub use tokio_rustls[](https://docs.rs/tokio-rustls/0.25.0/x86_64-unknown-linux-gnu/tokio_rustls/index.html \"mod tokio_rustls\");`\n\n\n`pub use mqttbytes::v4[](https://docs.rs/rumqttc/latest/rumqttc/mqttbytes/v4/index.html \"mod rumqttc::mqttbytes::v4\")::*;`\n\n\n`pub use mqttbytes[](https://docs.rs/rumqttc/latest/rumqttc/mqttbytes/index.html \"mod rumqttc::mqttbytes\")::*;`\n\n## Modules[\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#modules)\n\n[mqttbytes](https://docs.rs/rumqttc/latest/rumqttc/mqttbytes/index.html \"mod rumqttc::mqttbytes\")\n    mqttbytes\n\n[v5](https://docs.rs/rumqttc/latest/rumqttc/v5/index.html \"mod rumqttc::v5\")\n\n## Structs[\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#structs)\n\n[AsyncClient](https://docs.rs/rumqttc/latest/rumqttc/struct.AsyncClient.html \"struct rumqttc::AsyncClient\")\n    An asynchronous client, communicates with MQTT `EventLoop`.\n\n[Client](https://docs.rs/rumqttc/latest/rumqttc/struct.Client.html \"struct rumqttc::Client\")\n    A synchronous client, communicates with MQTT `EventLoop`.\n\n[Connection](https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html \"struct rumqttc::Connection\")\n    MQTT connection. Maintains all the necessary state\n\n[EventLoop](https://docs.rs/rumqttc/latest/rumqttc/struct.EventLoop.html \"struct rumqttc::EventLoop\")\n    Eventloop with all the state of a connection\n\n[Iter](https://docs.rs/rumqttc/latest/rumqttc/struct.Iter.html \"struct rumqttc::Iter\")\n    Iterator which polls the `EventLoop` for connection progress\n\n[MqttOptions](https://docs.rs/rumqttc/latest/rumqttc/struct.MqttOptions.html \"struct rumqttc::MqttOptions\")\n    Options to configure the behaviour of MQTT connection\n\n[MqttState](https://docs.rs/rumqttc/latest/rumqttc/struct.MqttState.html \"struct rumqttc::MqttState\")\n    State of the mqtt connection.\n\n[NetworkOptions](https://docs.rs/rumqttc/latest/rumqttc/struct.NetworkOptions.html \"struct rumqttc::NetworkOptions\")\n    Provides a way to configure low level network connection configurations\n\n[Proxy](https://docs.rs/rumqttc/latest/rumqttc/struct.Proxy.html \"struct rumqttc::Proxy\")\n\n\n[RecvError](https://docs.rs/rumqttc/latest/rumqttc/struct.RecvError.html \"struct rumqttc::RecvError\")\n    Error type returned by [`Connection::recv`](https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html#method.recv \"method rumqttc::Connection::recv\")\n## Enums[\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#enums)\n\n[ClientError](https://docs.rs/rumqttc/latest/rumqttc/enum.ClientError.html \"enum rumqttc::ClientError\")\n    Client Error\n\n[ConnectionError](https://docs.rs/rumqttc/latest/rumqttc/enum.ConnectionError.html \"enum rumqttc::ConnectionError\")\n    Critical errors during eventloop polling\n\n[Event](https://docs.rs/rumqttc/latest/rumqttc/enum.Event.html \"enum rumqttc::Event\")\n    Events which can be yielded by the event loop\n\n[OptionError](https://docs.rs/rumqttc/latest/rumqttc/enum.OptionError.html \"enum rumqttc::OptionError\")\n\n\n[Outgoing](https://docs.rs/rumqttc/latest/rumqttc/enum.Outgoing.html \"enum rumqttc::Outgoing\")\n    Current outgoing activity on the eventloop\n\n[ProxyAuth](https://docs.rs/rumqttc/latest/rumqttc/enum.ProxyAuth.html \"enum rumqttc::ProxyAuth\")\n\n\n[ProxyType](https://docs.rs/rumqttc/latest/rumqttc/enum.ProxyType.html \"enum rumqttc::ProxyType\")\n\n\n[RecvTimeoutError](https://docs.rs/rumqttc/latest/rumqttc/enum.RecvTimeoutError.html \"enum rumqttc::RecvTimeoutError\")\n    Error type returned by [`Connection::recv_timeout`](https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html#method.recv_timeout \"method rumqttc::Connection::recv_timeout\")\n\n[Request](https://docs.rs/rumqttc/latest/rumqttc/enum.Request.html \"enum rumqttc::Request\")\n    Requests by the client to mqtt event loop. Request are handled one by one.\n\n[StateError](https://docs.rs/rumqttc/latest/rumqttc/enum.StateError.html \"enum rumqttc::StateError\")\n    Errors during state handling\n\n[TlsConfiguration](https://docs.rs/rumqttc/latest/rumqttc/enum.TlsConfiguration.html \"enum rumqttc::TlsConfiguration\")\n    TLS configuration method\n\n[TlsError](https://docs.rs/rumqttc/latest/rumqttc/enum.TlsError.html \"enum rumqttc::TlsError\")\n\n\n[Transport](https://docs.rs/rumqttc/latest/rumqttc/enum.Transport.html \"enum rumqttc::Transport\")\n    Transport methods. Defaults to TCP.\n\n[TryRecvError](https://docs.rs/rumqttc/latest/rumqttc/enum.TryRecvError.html \"enum rumqttc::TryRecvError\")\n    Error type returned by [`Connection::try_recv`](https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html#method.try_recv \"method rumqttc::Connection::try_recv\")\n## Type Aliases[\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#types)\n\n[Incoming](https://docs.rs/rumqttc/latest/rumqttc/type.Incoming.html \"type rumqttc::Incoming\")\n\n",
              "markdown_with_citations": "[](https://docs.rs/rumqttc/latest/rumqttc/all.html \"show sidebar\")\n# Crate rumqttcCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA pure rust MQTT client which strives to be robust, efficient and easy to use. This library is backed by an async (tokio) eventloop which handles all the robustness and and efficiency parts of MQTT but naturally fits into both sync and async worlds as we\u2019ll see\nLet\u2019s jump into examples right away\n### \u00a7\u27e84\u27e9A simple synchronous publish and subscribe\n```\nuse rumqttc::{MqttOptions, Client, QoS};\nuse std::time::Duration;\nuse std::thread;\nlet mut mqttoptions = MqttOptions::new(\"rumqtt-sync\", \"test.mosquitto.org\", 1883);\nmqttoptions.set_keep_alive(Duration::from_secs(5));\nlet (mut client, mut connection) = Client::new(mqttoptions, 10);\nclient.subscribe(\"hello/rumqtt\", QoS::AtMostOnce).unwrap();\nthread::spawn(move || for i in 0..10 {\n  client.publish(\"hello/rumqtt\", QoS::AtLeastOnce, false, vec![i; i as usize]).unwrap();\n  thread::sleep(Duration::from_millis(100));\n});\n// Iterate to poll the eventloop for connection progress\nfor (i, notification) in connection.iter().enumerate() {\n  println!(\"Notification = {:?}\", notification);\n}\n```\n\n### \u00a7\u27e85\u27e9A simple asynchronous publish and subscribe\n```\nuse rumqttc::{MqttOptions, AsyncClient, QoS};\nuse tokio::{task, time};\nuse std::time::Duration;\nuse std::error::Error;\nlet mut mqttoptions = MqttOptions::new(\"rumqtt-async\", \"test.mosquitto.org\", 1883);\nmqttoptions.set_keep_alive(Duration::from_secs(5));\nlet (mut client, mut eventloop) = AsyncClient::new(mqttoptions, 10);\nclient.subscribe(\"hello/rumqtt\", QoS::AtMostOnce).await.unwrap();\ntask::spawn(async move {\n  for i in 0..10 {\n    client.publish(\"hello/rumqtt\", QoS::AtLeastOnce, false, vec![i; i as usize]).await.unwrap();\n    time::sleep(Duration::from_millis(100)).await;\n  }\n});\nloop {\n  let notification = eventloop.poll().await.unwrap();\n  println!(\"Received = {:?}\", notification);\n}\n```\n\nQuick overview of features\n  * Eventloop orchestrates outgoing/incoming packets concurrently and handles the state\n  * Pings the broker when necessary and detects client side half open connections as well\n  * Throttling of outgoing packets (todo)\n  * Queue size based flow control on outgoing packets\n  * Automatic reconnections by just continuing the `eventloop.poll()`/`connection.iter()` loop\n  * Natural backpressure to client APIs during bad network\n\n\nIn short, everything necessary to maintain a robust connection\nSince the eventloop is externally polled (with `iter()/poll()` in a loop) out side the library and `Eventloop` is accessible, users can\n  * Distribute incoming messages based on topics\n  * Stop it when required\n  * Access internal state for use cases like graceful shutdown or to modify options before reconnection\n\n\n### \u00a7\u27e86\u27e9Important notes\n  * Looping on `connection.iter()`/`eventloop.poll()` is necessary to run the event loop and make progress. It yields incoming and outgoing activity notifications which allows customization as you see fit.\n  * Blocking inside the `connection.iter()`/`eventloop.poll()` loop will block connection progress.\n\n\n### \u00a7\u27e87\u27e9FAQ\n**Connecting to a broker using raw ip doesn\u2019t work**\nYou cannot create a TLS connection to a bare IP address with a self-signed certificate. This is a limitation of rustls\u27e88\u27e9. One workaround, which only works under *nix/BSD-like systems, is to add an entry to wherever your DNS resolver looks (e.g. `/etc/hosts`) for the bare IP address and use that name in your code.\n## Re-exports\u00a7\u27e89\u27e9\n\n`pub use tokio_rustls[](https://docs.rs/tokio-rustls/0.25.0/x86_64-unknown-linux-gnu/tokio_rustls/index.html \"mod tokio_rustls\");`\n\n\n`pub use mqttbytes::v4[](https://docs.rs/rumqttc/latest/rumqttc/mqttbytes/v4/index.html \"mod rumqttc::mqttbytes::v4\")::*;`\n\n\n`pub use mqttbytes[](https://docs.rs/rumqttc/latest/rumqttc/mqttbytes/index.html \"mod rumqttc::mqttbytes\")::*;`\n\n## Modules\u00a7\u27e810\u27e9\n\nmqttbytes\u27e811\u27e9\n    mqttbytes\n\nv5\u27e812\u27e9\n\n## Structs\u00a7\u27e813\u27e9\n\nAsyncClient\u27e814\u27e9\n    An asynchronous client, communicates with MQTT `EventLoop`.\n\nClient\u27e815\u27e9\n    A synchronous client, communicates with MQTT `EventLoop`.\n\nConnection\u27e816\u27e9\n    MQTT connection. Maintains all the necessary state\n\nEventLoop\u27e817\u27e9\n    Eventloop with all the state of a connection\n\nIter\u27e818\u27e9\n    Iterator which polls the `EventLoop` for connection progress\n\nMqttOptions\u27e819\u27e9\n    Options to configure the behaviour of MQTT connection\n\nMqttState\u27e820\u27e9\n    State of the mqtt connection.\n\nNetworkOptions\u27e821\u27e9\n    Provides a way to configure low level network connection configurations\n\nProxy\u27e822\u27e9\n\n\nRecvError\u27e823\u27e9\n    Error type returned by `Connection::recv`\u27e824\u27e9\n## Enums\u00a7\u27e825\u27e9\n\nClientError\u27e826\u27e9\n    Client Error\n\nConnectionError\u27e827\u27e9\n    Critical errors during eventloop polling\n\nEvent\u27e828\u27e9\n    Events which can be yielded by the event loop\n\nOptionError\u27e829\u27e9\n\n\nOutgoing\u27e830\u27e9\n    Current outgoing activity on the eventloop\n\nProxyAuth\u27e831\u27e9\n\n\nProxyType\u27e832\u27e9\n\n\nRecvTimeoutError\u27e833\u27e9\n    Error type returned by `Connection::recv_timeout`\u27e834\u27e9\n\nRequest\u27e835\u27e9\n    Requests by the client to mqtt event loop. Request are handled one by one.\n\nStateError\u27e836\u27e9\n    Errors during state handling\n\nTlsConfiguration\u27e837\u27e9\n    TLS configuration method\n\nTlsError\u27e838\u27e9\n\n\nTransport\u27e839\u27e9\n    Transport methods. Defaults to TCP.\n\nTryRecvError\u27e840\u27e9\n    Error type returned by `Connection::try_recv`\u27e841\u27e9\n## Type Aliases\u00a7\u27e842\u27e9\n\nIncoming\u27e843\u27e9\n\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/rumqttc/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/rumqttc/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/rumqttc/latest/src/rumqttc/lib.rs.html#1-1016: Source\n\u27e84\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#a-simple-synchronous-publish-and-subscribe: \u00a7\n\u27e85\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#a-simple-asynchronous-publish-and-subscribe: \u00a7\n\u27e86\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#important-notes: \u00a7\n\u27e87\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#faq: \u00a7\n\u27e88\u27e9 https://github.com/ctz/rustls/issues/184: limitation of rustls\n\u27e89\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#reexports: \u00a7\n\u27e810\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#modules: \u00a7\n\u27e811\u27e9 https://docs.rs/rumqttc/latest/rumqttc/mqttbytes/index.html: mod rumqttc::mqttbytes - mqttbytes\n\u27e812\u27e9 https://docs.rs/rumqttc/latest/rumqttc/v5/index.html: mod rumqttc::v5 - v5\n\u27e813\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#structs: \u00a7\n\u27e814\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.AsyncClient.html: struct rumqttc::AsyncClient - AsyncClient\n\u27e815\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.Client.html: struct rumqttc::Client - Client\n\u27e816\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html: struct rumqttc::Connection - Connection\n\u27e817\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.EventLoop.html: struct rumqttc::EventLoop - EventLoop\n\u27e818\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.Iter.html: struct rumqttc::Iter - Iter\n\u27e819\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.MqttOptions.html: struct rumqttc::MqttOptions - MqttOptions\n\u27e820\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.MqttState.html: struct rumqttc::MqttState - MqttState\n\u27e821\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.NetworkOptions.html: struct rumqttc::NetworkOptions - NetworkOptions\n\u27e822\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.Proxy.html: struct rumqttc::Proxy - Proxy\n\u27e823\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.RecvError.html: struct rumqttc::RecvError - RecvError\n\u27e824\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html#method.recv: method rumqttc::Connection::recv - `Connection::recv`\n\u27e825\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#enums: \u00a7\n\u27e826\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.ClientError.html: enum rumqttc::ClientError - ClientError\n\u27e827\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.ConnectionError.html: enum rumqttc::ConnectionError - ConnectionError\n\u27e828\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.Event.html: enum rumqttc::Event - Event\n\u27e829\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.OptionError.html: enum rumqttc::OptionError - OptionError\n\u27e830\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.Outgoing.html: enum rumqttc::Outgoing - Outgoing\n\u27e831\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.ProxyAuth.html: enum rumqttc::ProxyAuth - ProxyAuth\n\u27e832\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.ProxyType.html: enum rumqttc::ProxyType - ProxyType\n\u27e833\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.RecvTimeoutError.html: enum rumqttc::RecvTimeoutError - RecvTimeoutError\n\u27e834\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html#method.recv_timeout: method rumqttc::Connection::recv_timeout - `Connection::recv_timeout`\n\u27e835\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.Request.html: enum rumqttc::Request - Request\n\u27e836\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.StateError.html: enum rumqttc::StateError - StateError\n\u27e837\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.TlsConfiguration.html: enum rumqttc::TlsConfiguration - TlsConfiguration\n\u27e838\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.TlsError.html: enum rumqttc::TlsError - TlsError\n\u27e839\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.Transport.html: enum rumqttc::Transport - Transport\n\u27e840\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.TryRecvError.html: enum rumqttc::TryRecvError - TryRecvError\n\u27e841\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html#method.try_recv: method rumqttc::Connection::try_recv - `Connection::try_recv`\n\u27e842\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#types: \u00a7\n\u27e843\u27e9 https://docs.rs/rumqttc/latest/rumqttc/type.Incoming.html: type rumqttc::Incoming - Incoming\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 8729,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "117429.5174978"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/rumqttc",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [33 releases](https://lib.rs/crates/rumqttc/versions) (breaking)\n0.24.0 |  Feb 27, 2024   \n---|---  \n0.23.0 |  Oct 10, 2023   \n0.22.0 |  Jun 7, 2023   \n0.20.0 |  Jan 17, 2023   \n0.0.5 |  Jul 26, 2020   \n#**24** in [Network programming](https://lib.rs/network-programming \"Crates dealing with higher-level network protocols such as FTP, HTTP, or SSH, or lower-level network protocols such as TCP or UDP.\")\nDownload history 30735/week @ 2025-01-28 34295/week @ 2025-02-04 32697/week @ 2025-02-11 34504/week @ 2025-02-18 33525/week @ 2025-02-25 33239/week @ 2025-03-04 34159/week @ 2025-03-11 33337/week @ 2025-03-18 29835/week @ 2025-03-25 28675/week @ 2025-04-01 28838/week @ 2025-04-08 22131/week @ 2025-04-15 27685/week @ 2025-04-22 23697/week @ 2025-04-29 28617/week @ 2025-05-06 27904/week @ 2025-05-13\n**110,786** downloads per month Used in [**124** crates (87 directly)](https://lib.rs/crates/rumqttc/rev)\n**Apache-2.0**\n450KB  10K  SLoC\n# rumqttc\n[![crates.io page](https://img.shields.io/crates/v/rumqttc.svg)](https://crates.io/crates/rumqttc) [![docs.rs page](https://img.gs/czjpqfbdkz/full/https://docs.rs/rumqttc/badge.svg)](https://docs.rs/rumqttc)\nA pure rust MQTT client which strives to be robust, efficient and easy to use. This library is backed by an async(using tokio) eventloop which enables users to send and receive MQTT messages in correspondence with a broker.\n## Examples\n## A simple synchronous publish and subscribe\n```\n``use` `rumqttc`::````{`MqttOptions`,` Client`,` QoS```}```;`\n`use` `std`::```time`::``Duration`;`\n`use` `std`::``thread`;`\n`let` `mut` mqttoptions `=` `MqttOptions`::``new`(```\"`rumqtt-sync`\"```,` ``\"`test.mosquitto.org`\"```,` `1883``)``;`\nmqttoptions`.``set_keep_alive``(``Duration`::``from_secs`(``5``)``)``;`\n`let` `(``mut` client`,` `mut` connection`)` `=` `Client`::``new`(`mqttoptions`,` `10``)``;`\nclient`.``subscribe``(```\"`hello/rumqtt`\"```,` `QoS`::``AtMostOnce`)``.``unwrap``(``)``;`\n`thread`::``spawn`(``move` `||` `for` i `in` `0``..``10` ``{`\n  client`.``publish``(```\"`hello/rumqtt`\"```,` `QoS`::``AtLeastOnce`,` `false``,` `vec!``[`i`;` i `as` `usize``]``)``.``unwrap``(``)``;`\n  `thread`::``sleep`(``Duration`::``from_millis`(``100``)``)``;`\n```}```)``;`\n``//` Iterate to poll the eventloop for connection progress`\n`for` `(`i`,` notification`)` `in` connection`.``iter``(``)``.``enumerate``(``)` ``{`\n  `println!``(```\"`Notification = `{:?}``\"```,` notification`)``;`\n```}``\n`\n```\n\n## A simple asynchronous publish and subscribe\n```\n``use` `rumqttc`::````{`MqttOptions`,` AsyncClient`,` QoS```}```;`\n`use` `tokio`::````{`task`,` time```}```;`\n`use` `std`::```time`::``Duration`;`\n`use` `std`::```error`::``Error`;`\n`let` `mut` mqttoptions `=` `MqttOptions`::``new`(```\"`rumqtt-async`\"```,` ``\"`test.mosquitto.org`\"```,` `1883``)``;`\nmqttoptions`.``set_keep_alive``(``Duration`::``from_secs`(``5``)``)``;`\n`let` `(``mut` client`,` `mut` eventloop`)` `=` `AsyncClient`::``new`(`mqttoptions`,` `10``)``;`\nclient`.``subscribe``(```\"`hello/rumqtt`\"```,` `QoS`::``AtMostOnce`)``.`await`.``unwrap``(``)``;`\n`task`::``spawn`(`async `move` ``{`\n  `for` i `in` `0``..``10` `{`\n    client`.``publish``(```\"`hello/rumqtt`\"```,` `QoS`::``AtLeastOnce`,` `false``,` `vec!``[`i`;` i `as` `usize``]``)``.`await`.``unwrap``(``)``;`\n    `time`::``sleep`(``Duration`::``from_millis`(``100``)``)``.`await`;`\n  `}`\n```}```)``;`\n`while` `let` `Ok``(`notification`)` `=` eventloop`.``poll``(``)``.`await ``{`\n  `println!``(```\"`Received = `{:?}``\"```,` notification`)``;`\n```}``\n`\n```\n\nQuick overview of features\n  * Eventloop orchestrates outgoing/incoming packets concurrently and handles the state\n  * Pings the broker when necessary and detects client side half open connections as well\n  * Throttling of outgoing packets (todo)\n  * Queue size based flow control on outgoing packets\n  * Automatic reconnections by just continuing the ``eventloop`.``poll``(``)``/`connection`.``iter``(``)``` loop\n  * Natural backpressure to client APIs during bad network\n  * Support for WebSockets\n  * Secure transport using TLS\n\n\nIn short, everything necessary to maintain a robust connection\nSince the eventloop is externally polled (with ```iter``(``)``/``poll``(``)``` in a loop) out side the library and ``Eventloop`` is accessible, users can\n  * Distribute incoming messages based on topics\n  * Stop it when required\n  * Access internal state for use cases like graceful shutdown or to modify options before reconnection\n\n\n### Important notes\n  * Looping on ``connection`.``iter``(``)```/``eventloop`.``poll``(``)``` is necessary to run the event loop and make progress. It yields incoming and outgoing activity notifications which allows customization as you see fit.\n  * Blocking inside the ``connection`.``iter``(``)```/``eventloop`.``poll``(``)``` loop will block connection progress.\n\n\n#### Dependencies\n~3\u201316MB  ~235K SLoC\n  * [bytes](https://lib.rs/crates/bytes \"1.5\")\n  * [flume](https://lib.rs/crates/flume \"new\") 0.11[+async](https://lib.rs/crates/flume/features#feature-async)\n  * [futures-util](https://lib.rs/crates/futures-util \"0.3\")[+std](https://lib.rs/crates/futures-util/features#feature-std)\n  * [log](https://lib.rs/crates/log \"0.4\")\n  * [use-rustls](https://lib.rs/crates/rumqttc/features#feature-use-rustls \"default feature\") [rustls-native-certs](https://lib.rs/crates/rustls-native-certs \"obsolete\") 0.7\n  * [use-rustls](https://lib.rs/crates/rumqttc/features#feature-use-rustls \"default feature\") [rustls-pemfile](https://lib.rs/crates/rustls-pemfile \"new\") 2.1\n  * [use-rustls](https://lib.rs/crates/rumqttc/features#feature-use-rustls \"default feature\") [rustls-webpki](https://lib.rs/crates/rustls-webpki \"obsolete\") 0.102.2\n  * [use-rustls](https://lib.rs/crates/rumqttc/features#feature-use-rustls \"default feature\") [tokio-rustls](https://lib.rs/crates/tokio-rustls \"obsolete\") 0.25\n  * [thiserror](https://lib.rs/crates/thiserror \"1\")\n  * [tokio](https://lib.rs/crates/tokio \"1.36\")[+rt](https://lib.rs/crates/tokio/features#feature-rt)[+macros](https://lib.rs/crates/tokio/features#feature-macros)[+io-util](https://lib.rs/crates/tokio/features#feature-io-util)[+net](https://lib.rs/crates/tokio/features#feature-net)[+time](https://lib.rs/crates/tokio/features#feature-time)\n  * [proxy?](https://lib.rs/crates/rumqttc/features#feature-proxy \"optional feature\") [async-http-proxy](https://lib.rs/crates/async-http-proxy \"1.2.5\")[+runtime-tokio](https://lib.rs/crates/async-http-proxy/features#feature-runtime-tokio)[+basic-auth](https://lib.rs/crates/async-http-proxy/features#feature-basic-auth)\n  * [websocket?](https://lib.rs/crates/rumqttc/features#feature-websocket \"optional feature\") [async-tungstenite](https://lib.rs/crates/async-tungstenite \"obsolete\") 0.25[+tokio-rustls-native-certs](https://lib.rs/crates/async-tungstenite/features#feature-tokio-rustls-native-certs)\n  * [websocket?](https://lib.rs/crates/rumqttc/features#feature-websocket \"optional feature\") [http](https://lib.rs/crates/http \"new\") 1.0\n  * [websocket?](https://lib.rs/crates/rumqttc/features#feature-websocket \"optional feature\") [ws_stream_tungstenite](https://lib.rs/crates/ws_stream_tungstenite \"outdated\") 0.13[+tokio_io](https://lib.rs/crates/ws_stream_tungstenite/features#feature-tokio_io)\n  * [use-native-tls?](https://lib.rs/crates/rumqttc/features#feature-use-native-tls \"optional feature\") [native-tls](https://lib.rs/crates/native-tls \"0.2.11\")\n  * [use-native-tls?](https://lib.rs/crates/rumqttc/features#feature-use-native-tls \"optional feature\") [tokio-native-tls](https://lib.rs/crates/tokio-native-tls \"0.3.1\")\n  * [ optional ](https://lib.rs/crates/rumqttc/features#feature-url \"url is optional feature\") [url](https://lib.rs/crates/url \"2\")\n\n\n  * dev  [bincode](https://lib.rs/crates/bincode \"1.3.3\")\n  * dev  [color-backtrace](https://lib.rs/crates/color-backtrace \"outdated\") 0.5\n  * dev  [matches](https://lib.rs/crates/matches \"deprecated\") 0.1\n  * dev  [pretty_assertions](https://lib.rs/crates/pretty_assertions \"1\")\n  * dev  [pretty_env_logger](https://lib.rs/crates/pretty_env_logger \"new\") 0.5\n  * dev  [serde](https://lib.rs/crates/serde \"1\")[+derive](https://lib.rs/crates/serde/features#feature-derive)\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  33 releases\u27e81\u27e9 (breaking)\n0.24.0 |  Feb 27, 2024   \n---|---  \n0.23.0 |  Oct 10, 2023   \n0.22.0 |  Jun 7, 2023   \n0.20.0 |  Jan 17, 2023   \n0.0.5 |  Jul 26, 2020   \n#**24** in Network programming\u27e82\u27e9\nDownload history 30735/week @ 2025-01-28 34295/week @ 2025-02-04 32697/week @ 2025-02-11 34504/week @ 2025-02-18 33525/week @ 2025-02-25 33239/week @ 2025-03-04 34159/week @ 2025-03-11 33337/week @ 2025-03-18 29835/week @ 2025-03-25 28675/week @ 2025-04-01 28838/week @ 2025-04-08 22131/week @ 2025-04-15 27685/week @ 2025-04-22 23697/week @ 2025-04-29 28617/week @ 2025-05-06 27904/week @ 2025-05-13\n**110,786** downloads per month Used in **124** crates (87 directly)\u27e83\u27e9\n**Apache-2.0**\n450KB  10K  SLoC\n# rumqttc\n![crates.io page\u27e84\u27e9](https://crates.io/crates/rumqttc) ![docs.rs page\u27e85\u27e9](https://docs.rs/rumqttc)\nA pure rust MQTT client which strives to be robust, efficient and easy to use. This library is backed by an async(using tokio) eventloop which enables users to send and receive MQTT messages in correspondence with a broker.\n## Examples\n## A simple synchronous publish and subscribe\n```\n``use` `rumqttc`::````{`MqttOptions`,` Client`,` QoS```}```;`\n`use` `std`::```time`::``Duration`;`\n`use` `std`::``thread`;`\n`let` `mut` mqttoptions `=` `MqttOptions`::``new`(```\"`rumqtt-sync`\"```,` ``\"`test.mosquitto.org`\"```,` `1883``)``;`\nmqttoptions`.``set_keep_alive``(``Duration`::``from_secs`(``5``)``)``;`\n`let` `(``mut` client`,` `mut` connection`)` `=` `Client`::``new`(`mqttoptions`,` `10``)``;`\nclient`.``subscribe``(```\"`hello/rumqtt`\"```,` `QoS`::``AtMostOnce`)``.``unwrap``(``)``;`\n`thread`::``spawn`(``move` `||` `for` i `in` `0``..``10` ``{`\n  client`.``publish``(```\"`hello/rumqtt`\"```,` `QoS`::``AtLeastOnce`,` `false``,` `vec!``[`i`;` i `as` `usize``]``)``.``unwrap``(``)``;`\n  `thread`::``sleep`(``Duration`::``from_millis`(``100``)``)``;`\n```}```)``;`\n``//` Iterate to poll the eventloop for connection progress`\n`for` `(`i`,` notification`)` `in` connection`.``iter``(``)``.``enumerate``(``)` ``{`\n  `println!``(```\"`Notification = `{:?}``\"```,` notification`)``;`\n```}``\n`\n```\n\n## A simple asynchronous publish and subscribe\n```\n``use` `rumqttc`::````{`MqttOptions`,` AsyncClient`,` QoS```}```;`\n`use` `tokio`::````{`task`,` time```}```;`\n`use` `std`::```time`::``Duration`;`\n`use` `std`::```error`::``Error`;`\n`let` `mut` mqttoptions `=` `MqttOptions`::``new`(```\"`rumqtt-async`\"```,` ``\"`test.mosquitto.org`\"```,` `1883``)``;`\nmqttoptions`.``set_keep_alive``(``Duration`::``from_secs`(``5``)``)``;`\n`let` `(``mut` client`,` `mut` eventloop`)` `=` `AsyncClient`::``new`(`mqttoptions`,` `10``)``;`\nclient`.``subscribe``(```\"`hello/rumqtt`\"```,` `QoS`::``AtMostOnce`)``.`await`.``unwrap``(``)``;`\n`task`::``spawn`(`async `move` ``{`\n  `for` i `in` `0``..``10` `{`\n    client`.``publish``(```\"`hello/rumqtt`\"```,` `QoS`::``AtLeastOnce`,` `false``,` `vec!``[`i`;` i `as` `usize``]``)``.`await`.``unwrap``(``)``;`\n    `time`::``sleep`(``Duration`::``from_millis`(``100``)``)``.`await`;`\n  `}`\n```}```)``;`\n`while` `let` `Ok``(`notification`)` `=` eventloop`.``poll``(``)``.`await ``{`\n  `println!``(```\"`Received = `{:?}``\"```,` notification`)``;`\n```}``\n`\n```\n\nQuick overview of features\n  * Eventloop orchestrates outgoing/incoming packets concurrently and handles the state\n  * Pings the broker when necessary and detects client side half open connections as well\n  * Throttling of outgoing packets (todo)\n  * Queue size based flow control on outgoing packets\n  * Automatic reconnections by just continuing the ``eventloop`.``poll``(``)``/`connection`.``iter``(``)``` loop\n  * Natural backpressure to client APIs during bad network\n  * Support for WebSockets\n  * Secure transport using TLS\n\n\nIn short, everything necessary to maintain a robust connection\nSince the eventloop is externally polled (with ```iter``(``)``/``poll``(``)``` in a loop) out side the library and ``Eventloop`` is accessible, users can\n  * Distribute incoming messages based on topics\n  * Stop it when required\n  * Access internal state for use cases like graceful shutdown or to modify options before reconnection\n\n\n### Important notes\n  * Looping on ``connection`.``iter``(``)```/``eventloop`.``poll``(``)``` is necessary to run the event loop and make progress. It yields incoming and outgoing activity notifications which allows customization as you see fit.\n  * Blocking inside the ``connection`.``iter``(``)```/``eventloop`.``poll``(``)``` loop will block connection progress.\n\n\n#### Dependencies\n~3\u201316MB  ~235K SLoC\n  * bytes\u27e86\u27e9\n  * flume\u27e87\u27e9 0.11+async\u27e88\u27e9\n  * futures-util\u27e89\u27e9+std\u27e810\u27e9\n  * log\u27e811\u27e9\n  * use-rustls\u27e812\u27e9 rustls-native-certs\u27e813\u27e9 0.7\n  * use-rustls\u27e812\u27e9 rustls-pemfile\u27e814\u27e9 2.1\n  * use-rustls\u27e812\u27e9 rustls-webpki\u27e815\u27e9 0.102.2\n  * use-rustls\u27e812\u27e9 tokio-rustls\u27e816\u27e9 0.25\n  * thiserror\u27e817\u27e9\n  * tokio\u27e818\u27e9+rt\u27e819\u27e9+macros\u27e820\u27e9+io-util\u27e821\u27e9+net\u27e822\u27e9+time\u27e823\u27e9\n  * proxy?\u27e824\u27e9 async-http-proxy\u27e825\u27e9+runtime-tokio\u27e826\u27e9+basic-auth\u27e827\u27e9\n  * websocket?\u27e828\u27e9 async-tungstenite\u27e829\u27e9 0.25+tokio-rustls-native-certs\u27e830\u27e9\n  * websocket?\u27e828\u27e9 http\u27e831\u27e9 1.0\n  * websocket?\u27e828\u27e9 ws_stream_tungstenite\u27e832\u27e9 0.13+tokio_io\u27e833\u27e9\n  * use-native-tls?\u27e834\u27e9 native-tls\u27e835\u27e9\n  * use-native-tls?\u27e834\u27e9 tokio-native-tls\u27e836\u27e9\n  *  optional \u27e837\u27e9 url\u27e838\u27e9\n\n\n  * dev  bincode\u27e839\u27e9\n  * dev  color-backtrace\u27e840\u27e9 0.5\n  * dev  matches\u27e841\u27e9 0.1\n  * dev  pretty_assertions\u27e842\u27e9\n  * dev  pretty_env_logger\u27e843\u27e9 0.5\n  * dev  serde\u27e844\u27e9+derive\u27e845\u27e9\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/rumqttc/versions: 33 releases\n\u27e82\u27e9 https://lib.rs/network-programming: Crates dealing with higher-level network protocols such as FTP, HTTP, or SSH, or lower-level network protocols such as TCP or UDP. - Network programming\n\u27e83\u27e9 https://lib.rs/crates/rumqttc/rev: **124** crates (87 directly)\n\u27e84\u27e9 https://img.shields.io/crates/v/rumqttc.svg: ![crates.io page\n\u27e85\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/rumqttc/badge.svg: ![docs.rs page\n\u27e86\u27e9 https://lib.rs/crates/bytes: 1.5 - bytes\n\u27e87\u27e9 https://lib.rs/crates/flume: new - flume\n\u27e88\u27e9 https://lib.rs/crates/flume/features#feature-async: +async\n\u27e89\u27e9 https://lib.rs/crates/futures-util: 0.3 - futures-util\n\u27e810\u27e9 https://lib.rs/crates/futures-util/features#feature-std: +std\n\u27e811\u27e9 https://lib.rs/crates/log: 0.4 - log\n\u27e812\u27e9 https://lib.rs/crates/rumqttc/features#feature-use-rustls: default feature - use-rustls\n\u27e813\u27e9 https://lib.rs/crates/rustls-native-certs: obsolete - rustls-native-certs\n\u27e814\u27e9 https://lib.rs/crates/rustls-pemfile: new - rustls-pemfile\n\u27e815\u27e9 https://lib.rs/crates/rustls-webpki: obsolete - rustls-webpki\n\u27e816\u27e9 https://lib.rs/crates/tokio-rustls: obsolete - tokio-rustls\n\u27e817\u27e9 https://lib.rs/crates/thiserror: 1 - thiserror\n\u27e818\u27e9 https://lib.rs/crates/tokio: 1.36 - tokio\n\u27e819\u27e9 https://lib.rs/crates/tokio/features#feature-rt: +rt\n\u27e820\u27e9 https://lib.rs/crates/tokio/features#feature-macros: +macros\n\u27e821\u27e9 https://lib.rs/crates/tokio/features#feature-io-util: +io-util\n\u27e822\u27e9 https://lib.rs/crates/tokio/features#feature-net: +net\n\u27e823\u27e9 https://lib.rs/crates/tokio/features#feature-time: +time\n\u27e824\u27e9 https://lib.rs/crates/rumqttc/features#feature-proxy: optional feature - proxy?\n\u27e825\u27e9 https://lib.rs/crates/async-http-proxy: 1.2.5 - async-http-proxy\n\u27e826\u27e9 https://lib.rs/crates/async-http-proxy/features#feature-runtime-tokio: +runtime-tokio\n\u27e827\u27e9 https://lib.rs/crates/async-http-proxy/features#feature-basic-auth: +basic-auth\n\u27e828\u27e9 https://lib.rs/crates/rumqttc/features#feature-websocket: optional feature - websocket?\n\u27e829\u27e9 https://lib.rs/crates/async-tungstenite: obsolete - async-tungstenite\n\u27e830\u27e9 https://lib.rs/crates/async-tungstenite/features#feature-tokio-rustls-native-certs: +tokio-rustls-native-certs\n\u27e831\u27e9 https://lib.rs/crates/http: new - http\n\u27e832\u27e9 https://lib.rs/crates/ws_stream_tungstenite: outdated - ws_stream_tungstenite\n\u27e833\u27e9 https://lib.rs/crates/ws_stream_tungstenite/features#feature-tokio_io: +tokio_io\n\u27e834\u27e9 https://lib.rs/crates/rumqttc/features#feature-use-native-tls: optional feature - use-native-tls?\n\u27e835\u27e9 https://lib.rs/crates/native-tls: 0.2.11 - native-tls\n\u27e836\u27e9 https://lib.rs/crates/tokio-native-tls: 0.3.1 - tokio-native-tls\n\u27e837\u27e9 https://lib.rs/crates/rumqttc/features#feature-url: url is optional feature -  optional \n\u27e838\u27e9 https://lib.rs/crates/url: 2 - url\n\u27e839\u27e9 https://lib.rs/crates/bincode: 1.3.3 - bincode\n\u27e840\u27e9 https://lib.rs/crates/color-backtrace: outdated - color-backtrace\n\u27e841\u27e9 https://lib.rs/crates/matches: deprecated - matches\n\u27e842\u27e9 https://lib.rs/crates/pretty_assertions: 1 - pretty_assertions\n\u27e843\u27e9 https://lib.rs/crates/pretty_env_logger: new - pretty_env_logger\n\u27e844\u27e9 https://lib.rs/crates/serde: 1 - serde\n\u27e845\u27e9 https://lib.rs/crates/serde/features#feature-derive: +derive\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 8239,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "117429.9330769"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "scopeguard",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libscopeguard-b3036dac4c63d524.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#untrusted@0.9.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\untrusted-0.9.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "untrusted",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\untrusted-0.9.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libuntrusted-6452109ac6963ab5.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pin_project_lite",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.13\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libpin_project_lite-4dd5ab2ce21e5adf.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.12\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.12\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libunicode_ident-bf7f156b09e9f547.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libunicode_ident-bf7f156b09e9f547.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.30",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-core-0.3.30\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-core-0.3.30\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libfutures_core-b1db1451e60bad49.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#subtle@2.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\subtle-2.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "subtle",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\subtle-2.5.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libsubtle-e9ec77b56c4dae22.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.7.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zeroize-1.7.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zeroize",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zeroize-1.7.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libzeroize-901f76e8a9a6cc53.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.2.12\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "getrandom",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.2.12\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libgetrandom-b8d4ea89546e3bbb.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.30",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-sink-0.3.30\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_sink",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-sink-0.3.30\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libfutures_sink-103d75d0b2b332bf.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustls-pki-types@1.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-pki-types-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rustls_pki_types",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-pki-types-1.3.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\librustls_pki_types-f5dd043b17102d36.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pin-utils@0.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-utils-0.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pin_utils",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-utils-0.1.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libpin_utils-9d9a9e5e1b2c045c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustls@0.22.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-0.22.2\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-0.22.2\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "log",
                "logging",
                "ring",
                "tls12"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\rustls-ec62c73f9a5a3e82\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\rustls-ec62c73f9a5a3e82\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.30",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-task-0.3.30\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_task",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-task-0.3.30\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libfutures_task-9bc9d4bbb1a0b4a4.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#base64@0.21.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64-0.21.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "base64",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64-0.21.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libbase64-a2b9d8898ef1d04a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.3\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.3\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\windows_x86_64_msvc-08b2dbdc4dcf043a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\windows_x86_64_msvc-08b2dbdc4dcf043a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.20",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.20\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.20\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\liblog-8cf7092aa24f72c2.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.48.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.48.5\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.48.5\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\windows_x86_64_msvc-c891fe87d5045004\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\windows_x86_64_msvc-c891fe87d5045004\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libautocfg-bc3c1568e43c163b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libautocfg-bc3c1568e43c163b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.3",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.3\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\windows_x86_64_msvc-caa98bc71b96c288\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.78",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.78\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.78\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\proc-macro2-ff4a6618277f6cb8\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\proc-macro2-ff4a6618277f6cb8\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.48.5",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.48.5\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\windows_x86_64_msvc-6b8f76506c86e015\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustls-pemfile@2.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-pemfile-2.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rustls_pemfile",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-pemfile-2.1.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\librustls_pemfile-5bdd8bc2ed15c7fa.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libwindows_x86_64_msvc-9b1a874eb5531e03.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.57",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.57\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.57\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\thiserror-ba6593c529913ff7\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\thiserror-ba6593c529913ff7\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.48.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.48.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.48.5\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libwindows_x86_64_msvc-0ea20938a44bbe52.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libwindows_targets-23972895771e3229.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.78",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\proc-macro2-f94166a2758d4cea\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.48.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.48.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.48.5\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libwindows_targets-190fe36ef27a1046.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.57",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\thiserror-5cf9edb0b0158ddd\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bytes@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytes-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytes",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytes-1.5.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libbytes-0c9a341ee58c240b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\slab-9a5b9a832999ed1f\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\slab-9a5b9a832999ed1f\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.11\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.11\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\lock_api-c00659de313746b7\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\lock_api-c00659de313746b7\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\slab-c0dc3ddbdda7012f\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.11",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_const_fn_trait_bound"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\lock_api-9727c8dcd870e60b\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "slab",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libslab-fbece453fa7637dd.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lock_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.11\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\liblock_api-5712fd87ef75578d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.78",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.78\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.78\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libproc_macro2-2d559294c4d00c7d.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libproc_macro2-2d559294c4d00c7d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#spin@0.9.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\spin-0.9.8\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "spin",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\spin-0.9.8\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "barrier",
                "default",
                "lazy",
                "lock_api",
                "lock_api_crate",
                "mutex",
                "once",
                "rwlock",
                "spin_mutex"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libspin-71be28b73d45affa.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cc@1.0.88",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cc-1.0.88\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cc-1.0.88\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libcc-a8171b7c12d1a893.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libcc-a8171b7c12d1a893.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.35",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.35\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.35\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libquote-72705389363a4684.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libquote-72705389363a4684.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#flume@0.11.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\flume-0.11.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flume",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\flume-0.11.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "async",
                "futures-core",
                "futures-sink"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libflume-2a95bbc6466b191d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ring@0.17.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ring-0.17.8\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ring-0.17.8\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "dev_urandom_fallback"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\ring-9c819a0da3d0696a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\ring-9c819a0da3d0696a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.48.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.48.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.48.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_Networking",
                "Win32_Networking_WinSock",
                "Win32_Security",
                "Win32_Storage",
                "Win32_Storage_FileSystem",
                "Win32_System",
                "Win32_System_IO",
                "Win32_System_Pipes",
                "Win32_System_SystemServices",
                "Win32_System_WindowsProgramming",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libwindows_sys-d7b589561a578118.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#mio@0.8.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\mio-0.8.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "mio",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\mio-0.8.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "net",
                "os-ext",
                "os-poll"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libmio-ca7fbaff21ffd14c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.30",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-util-0.3.30\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_util",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-util-0.3.30\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "slab",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libfutures_util-b913a3943943bc60.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.51",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.51\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.51\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "full",
                "parsing",
                "printing",
                "proc-macro",
                "quote"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libsyn-2ce5f57af0402a71.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libsyn-2ce5f57af0402a71.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ring@0.17.8",
              "linked_libs": [
                "static=ring_core_0_17_8_",
                "static=ring_core_0_17_8_test"
              ],
              "linked_paths": [
                "native=C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\ring-a31a32a9177090e6\\out"
              ],
              "cfgs": [],
              "env": [
                [
                  "RING_CORE_PREFIX",
                  "ring_core_0_17_8_"
                ]
              ],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\ring-a31a32a9177090e6\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustls@0.22.2",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\rustls-1b06968ebd6b3dfb\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.52.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_Networking",
                "Win32_Networking_WinSock",
                "Win32_Security",
                "Win32_Security_Authentication",
                "Win32_Security_Authentication_Identity",
                "Win32_Security_Credentials",
                "Win32_Security_Cryptography",
                "Win32_System",
                "Win32_System_IO",
                "Win32_System_Memory",
                "Win32_System_Threading",
                "Win32_System_WindowsProgramming",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libwindows_sys-51afd5a396d43595.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tokio-macros@2.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-macros-2.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "tokio_macros",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-macros-2.2.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\tokio_macros-1ce4eb01a34cb636.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\tokio_macros-1ce4eb01a34cb636.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\tokio_macros-1ce4eb01a34cb636.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\tokio_macros-1ce4eb01a34cb636.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#socket2@0.5.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\socket2-0.5.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "socket2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\socket2-0.5.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "all"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libsocket2-3c2682057f673b33.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#schannel@0.1.23",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\schannel-0.1.23\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "schannel",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\schannel-0.1.23\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libschannel-6401286531d8626b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustls-native-certs@0.7.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-native-certs-0.7.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rustls_native_certs",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-native-certs-0.7.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\librustls_native_certs-0e2d850a59b6d08b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@1.0.57",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-1.0.57\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "thiserror_impl",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-1.0.57\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\thiserror_impl-5f6deb44e44a89d7.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\thiserror_impl-5f6deb44e44a89d7.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\thiserror_impl-5f6deb44e44a89d7.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\thiserror_impl-5f6deb44e44a89d7.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ring@0.17.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ring-0.17.8\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ring",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ring-0.17.8\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "dev_urandom_fallback"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libring-eaba2789019f76fc.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.57",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.57\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "thiserror",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.57\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libthiserror-c41c8d30d5384fca.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustls-webpki@0.102.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-webpki-0.102.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "webpki",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-webpki-0.102.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "ring",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libwebpki-36624a104b75b9c8.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustls@0.22.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-0.22.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rustls",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-0.22.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "log",
                "logging",
                "ring",
                "tls12"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\librustls-11f4862ce8a21a0f.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tokio@1.36.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-1.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tokio",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-1.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "bytes",
                "default",
                "io-util",
                "libc",
                "macros",
                "mio",
                "net",
                "rt",
                "socket2",
                "time",
                "tokio-macros",
                "windows-sys"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libtokio-c9b958aee995caad.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tokio-rustls@0.25.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-rustls-0.25.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tokio_rustls",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-rustls-0.25.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "logging",
                "ring",
                "tls12"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libtokio_rustls-2c0be82b6d3160b2.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "use-rustls"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\librumqttc-3540aa994d59b3b1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libautocfg-bc3c1568e43c163b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libautocfg-bc3c1568e43c163b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.3\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.3\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\windows_x86_64_msvc-08b2dbdc4dcf043a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\windows_x86_64_msvc-08b2dbdc4dcf043a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.78",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.78\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.78\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\proc-macro2-ff4a6618277f6cb8\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\proc-macro2-ff4a6618277f6cb8\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.11\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.11\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\lock_api-c00659de313746b7\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\lock_api-c00659de313746b7\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.12\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.12\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libunicode_ident-bf7f156b09e9f547.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libunicode_ident-bf7f156b09e9f547.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "scopeguard",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libscopeguard-b3036dac4c63d524.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cc@1.0.88",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cc-1.0.88\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cc-1.0.88\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libcc-a8171b7c12d1a893.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libcc-a8171b7c12d1a893.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.48.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.48.5\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.48.5\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\windows_x86_64_msvc-c891fe87d5045004\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\windows_x86_64_msvc-c891fe87d5045004\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustls-pki-types@1.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-pki-types-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rustls_pki_types",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-pki-types-1.3.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\librustls_pki_types-f5dd043b17102d36.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#untrusted@0.9.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\untrusted-0.9.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "untrusted",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\untrusted-0.9.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libuntrusted-6452109ac6963ab5.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\slab-9a5b9a832999ed1f\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\slab-9a5b9a832999ed1f\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustls@0.22.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-0.22.2\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-0.22.2\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "log",
                "logging",
                "ring",
                "tls12"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\rustls-ec62c73f9a5a3e82\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\rustls-ec62c73f9a5a3e82\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pin_project_lite",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.13\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libpin_project_lite-4dd5ab2ce21e5adf.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.20",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.20\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.20\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\liblog-8cf7092aa24f72c2.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.30",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-core-0.3.30\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-core-0.3.30\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libfutures_core-b1db1451e60bad49.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#base64@0.21.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64-0.21.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "base64",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64-0.21.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libbase64-a2b9d8898ef1d04a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.78",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\proc-macro2-f94166a2758d4cea\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.3",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.3\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\windows_x86_64_msvc-caa98bc71b96c288\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.11",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_const_fn_trait_bound"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\lock_api-9727c8dcd870e60b\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ring@0.17.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ring-0.17.8\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ring-0.17.8\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "dev_urandom_fallback"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\ring-9c819a0da3d0696a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\ring-9c819a0da3d0696a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.48.5",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.48.5\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\windows_x86_64_msvc-6b8f76506c86e015\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.2.12\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "getrandom",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.2.12\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libgetrandom-b8d4ea89546e3bbb.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\slab-c0dc3ddbdda7012f\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.57",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.57\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.57\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\thiserror-ba6593c529913ff7\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\thiserror-ba6593c529913ff7\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.7.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zeroize-1.7.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zeroize",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zeroize-1.7.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libzeroize-901f76e8a9a6cc53.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bytes@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytes-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytes",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytes-1.5.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libbytes-0c9a341ee58c240b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#subtle@2.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\subtle-2.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "subtle",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\subtle-2.5.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libsubtle-e9ec77b56c4dae22.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustls-pemfile@2.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-pemfile-2.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rustls_pemfile",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-pemfile-2.1.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\librustls_pemfile-5bdd8bc2ed15c7fa.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.30",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-sink-0.3.30\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_sink",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-sink-0.3.30\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libfutures_sink-103d75d0b2b332bf.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pin-utils@0.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-utils-0.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pin_utils",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-utils-0.1.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libpin_utils-9d9a9e5e1b2c045c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.30",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-task-0.3.30\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_task",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-task-0.3.30\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libfutures_task-9bc9d4bbb1a0b4a4.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libwindows_x86_64_msvc-9b1a874eb5531e03.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.78",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.78\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.78\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libproc_macro2-2d559294c4d00c7d.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libproc_macro2-2d559294c4d00c7d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lock_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.11\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\liblock_api-5712fd87ef75578d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.48.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.48.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.48.5\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libwindows_x86_64_msvc-0ea20938a44bbe52.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ring@0.17.8",
              "linked_libs": [
                "static=ring_core_0_17_8_",
                "static=ring_core_0_17_8_test"
              ],
              "linked_paths": [
                "native=C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\ring-a31a32a9177090e6\\out"
              ],
              "cfgs": [],
              "env": [
                [
                  "RING_CORE_PREFIX",
                  "ring_core_0_17_8_"
                ]
              ],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\ring-a31a32a9177090e6\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "slab",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.9\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libslab-fbece453fa7637dd.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.57",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\thiserror-5cf9edb0b0158ddd\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libwindows_targets-23972895771e3229.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.35",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.35\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.35\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libquote-72705389363a4684.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libquote-72705389363a4684.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#spin@0.9.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\spin-0.9.8\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "spin",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\spin-0.9.8\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "barrier",
                "default",
                "lazy",
                "lock_api",
                "lock_api_crate",
                "mutex",
                "once",
                "rwlock",
                "spin_mutex"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libspin-71be28b73d45affa.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.48.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.48.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.48.5\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libwindows_targets-190fe36ef27a1046.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustls@0.22.2",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\build\\rustls-1b06968ebd6b3dfb\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.30",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-util-0.3.30\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_util",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-util-0.3.30\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "slab",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libfutures_util-b913a3943943bc60.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.52.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_Networking",
                "Win32_Networking_WinSock",
                "Win32_Security",
                "Win32_Security_Authentication",
                "Win32_Security_Authentication_Identity",
                "Win32_Security_Credentials",
                "Win32_Security_Cryptography",
                "Win32_System",
                "Win32_System_IO",
                "Win32_System_Memory",
                "Win32_System_Threading",
                "Win32_System_WindowsProgramming",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libwindows_sys-51afd5a396d43595.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.51",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.51\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.51\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "full",
                "parsing",
                "printing",
                "proc-macro",
                "quote"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libsyn-2ce5f57af0402a71.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libsyn-2ce5f57af0402a71.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.48.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.48.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.48.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_Networking",
                "Win32_Networking_WinSock",
                "Win32_Security",
                "Win32_Storage",
                "Win32_Storage_FileSystem",
                "Win32_System",
                "Win32_System_IO",
                "Win32_System_Pipes",
                "Win32_System_SystemServices",
                "Win32_System_WindowsProgramming",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libwindows_sys-d7b589561a578118.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ring@0.17.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ring-0.17.8\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ring",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ring-0.17.8\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "dev_urandom_fallback"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libring-eaba2789019f76fc.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#flume@0.11.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\flume-0.11.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flume",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\flume-0.11.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "async",
                "futures-core",
                "futures-sink"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libflume-2a95bbc6466b191d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustls-webpki@0.102.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-webpki-0.102.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "webpki",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-webpki-0.102.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "ring",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libwebpki-36624a104b75b9c8.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#mio@0.8.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\mio-0.8.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "mio",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\mio-0.8.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "net",
                "os-ext",
                "os-poll"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libmio-ca7fbaff21ffd14c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tokio-macros@2.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-macros-2.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "tokio_macros",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-macros-2.2.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\tokio_macros-1ce4eb01a34cb636.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\tokio_macros-1ce4eb01a34cb636.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\tokio_macros-1ce4eb01a34cb636.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\tokio_macros-1ce4eb01a34cb636.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#socket2@0.5.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\socket2-0.5.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "socket2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\socket2-0.5.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "all"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libsocket2-3c2682057f673b33.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@1.0.57",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-1.0.57\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "thiserror_impl",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-1.0.57\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\thiserror_impl-5f6deb44e44a89d7.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\thiserror_impl-5f6deb44e44a89d7.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\thiserror_impl-5f6deb44e44a89d7.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\thiserror_impl-5f6deb44e44a89d7.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#schannel@0.1.23",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\schannel-0.1.23\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "schannel",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\schannel-0.1.23\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libschannel-6401286531d8626b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustls@0.22.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-0.22.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rustls",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-0.22.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "log",
                "logging",
                "ring",
                "tls12"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\librustls-11f4862ce8a21a0f.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tokio@1.36.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-1.36.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tokio",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-1.36.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "bytes",
                "default",
                "io-util",
                "libc",
                "macros",
                "mio",
                "net",
                "rt",
                "socket2",
                "time",
                "tokio-macros",
                "windows-sys"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libtokio-c9b958aee995caad.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustls-native-certs@0.7.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-native-certs-0.7.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rustls_native_certs",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustls-native-certs-0.7.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\librustls_native_certs-0e2d850a59b6d08b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.57",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.57\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "thiserror",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.57\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libthiserror-c41c8d30d5384fca.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tokio-rustls@0.25.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-rustls-0.25.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tokio_rustls",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-rustls-0.25.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "logging",
                "ring",
                "tls12"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\libtokio_rustls-2c0be82b6d3160b2.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric constant\n  --> src\\state.rs:98:38\n   |\n98 |             incoming_pub: vec![None; std::u16::MAX as usize + 1],\n   |                                      ^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: `#[warn(clippy::legacy_numeric_constants)]` on by default\nhelp: use the associated constant instead\n   |\n98 -             incoming_pub: vec![None; std::u16::MAX as usize + 1],\n98 +             incoming_pub: vec![None; u16::MAX as usize + 1],\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::legacy_numeric_constants)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4016,
                        "byte_start": 4003,
                        "column_end": 51,
                        "column_start": 38,
                        "expansion": null,
                        "file_name": "src\\state.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 98,
                        "line_start": 98,
                        "suggested_replacement": "u16::MAX",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 38,
                            "text": "            incoming_pub: vec![None; std::u16::MAX as usize + 1],"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric constant",
                "spans": [
                  {
                    "byte_end": 4016,
                    "byte_start": 4003,
                    "column_end": 51,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\state.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 98,
                    "line_start": 98,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 38,
                        "text": "            incoming_pub: vec![None; std::u16::MAX as usize + 1],"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:135:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n135 |     ) -> Result<(), ClientError>\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n    = note: `#[warn(clippy::result_large_err)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::result_large_err)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 3919,
                    "byte_start": 3896,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 135,
                    "line_start": 135,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:158:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n158 |     ) -> Result<(), ClientError>\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 4553,
                    "byte_start": 4530,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 158,
                    "line_start": 158,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:172:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n172 |     ) -> Result<(), ClientError>\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 4860,
                    "byte_start": 4837,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 172,
                    "line_start": 172,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:191:49\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n191 |     pub fn try_ack(&self, publish: &Publish) -> Result<(), ClientError> {\n    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 5502,
                    "byte_start": 5479,
                    "column_end": 72,
                    "column_start": 49,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 191,
                    "line_start": 191,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 49,
                        "text": "    pub fn try_ack(&self, publish: &Publish) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:284:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n284 |     ) -> Result<(), ClientError> {\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 8129,
                    "byte_start": 8106,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 284,
                    "line_start": 284,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:297:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n297 |     ) -> Result<(), ClientError> {\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 8540,
                    "byte_start": 8517,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 297,
                    "line_start": 297,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:301:73\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n301 |     pub fn try_subscribe<S: Into<String>>(&self, topic: S, qos: QoS) -> Result<(), ClientError> {\n    |                                                                         ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 8709,
                    "byte_start": 8686,
                    "column_end": 96,
                    "column_start": 73,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 301,
                    "line_start": 301,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 96,
                        "highlight_start": 73,
                        "text": "    pub fn try_subscribe<S: Into<String>>(&self, topic: S, qos: QoS) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:343:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n343 |     ) -> Result<(), ClientError>\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 9965,
                    "byte_start": 9942,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 343,
                    "line_start": 343,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:357:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n357 |     ) -> Result<(), ClientError>\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 10363,
                    "byte_start": 10340,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 357,
                    "line_start": 357,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:364:55\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n364 |     pub fn try_subscribe_many<T>(&self, topics: T) -> Result<(), ClientError>\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 10569,
                    "byte_start": 10546,
                    "column_end": 78,
                    "column_start": 55,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 364,
                    "line_start": 364,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 78,
                        "highlight_start": 55,
                        "text": "    pub fn try_subscribe_many<T>(&self, topics: T) -> Result<(), ClientError>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:400:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n400 |     ) -> Result<(), ClientError> {\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 11722,
                    "byte_start": 11699,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 400,
                    "line_start": 400,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:411:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n411 |     ) -> Result<(), ClientError> {\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 12080,
                    "byte_start": 12057,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 411,
                    "line_start": 411,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:415:65\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n415 |     pub fn try_unsubscribe<S: Into<String>>(&self, topic: S) -> Result<(), ClientError> {\n    |                                                                 ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 12238,
                    "byte_start": 12215,
                    "column_end": 88,
                    "column_start": 65,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 415,
                    "line_start": 415,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 88,
                        "highlight_start": 65,
                        "text": "    pub fn try_unsubscribe<S: Into<String>>(&self, topic: S) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:427:37\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n427 |     pub fn try_disconnect(&self) -> Result<(), ClientError> {\n    |                                     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 12650,
                    "byte_start": 12627,
                    "column_end": 60,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 427,
                    "line_start": 427,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 37,
                        "text": "    pub fn try_disconnect(&self) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:493:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n493 |     ) -> Result<(), ClientError>\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 14904,
                    "byte_start": 14881,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 493,
                    "line_start": 493,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:516:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n516 |     ) -> Result<(), ClientError>\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 15534,
                    "byte_start": 15511,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 516,
                    "line_start": 516,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:530:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n530 |     ) -> Result<(), ClientError>\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 15833,
                    "byte_start": 15810,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 530,
                    "line_start": 530,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:545:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n545 |     ) -> Result<(), ClientError>\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 16179,
                    "byte_start": 16156,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 545,
                    "line_start": 545,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:560:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n560 |     ) -> Result<(), ClientError>\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 16509,
                    "byte_start": 16486,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 560,
                    "line_start": 560,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:569:45\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n569 |     pub fn ack(&self, publish: &Publish) -> Result<(), ClientError> {\n    |                                             ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 16803,
                    "byte_start": 16780,
                    "column_end": 68,
                    "column_start": 45,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 569,
                    "line_start": 569,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 68,
                        "highlight_start": 45,
                        "text": "    pub fn ack(&self, publish: &Publish) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:579:49\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n579 |     pub fn try_ack(&self, publish: &Publish) -> Result<(), ClientError> {\n    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 17123,
                    "byte_start": 17100,
                    "column_end": 72,
                    "column_start": 49,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 579,
                    "line_start": 579,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 49,
                        "text": "    pub fn try_ack(&self, publish: &Publish) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:590:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n590 |     ) -> Result<(), ClientError> {\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 17411,
                    "byte_start": 17388,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 590,
                    "line_start": 590,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:603:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n603 |     ) -> Result<(), ClientError> {\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 17821,
                    "byte_start": 17798,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 603,
                    "line_start": 603,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:607:69\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n607 |     pub fn subscribe<S: Into<String>>(&self, topic: S, qos: QoS) -> Result<(), ClientError> {\n    |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 17982,
                    "byte_start": 17959,
                    "column_end": 92,
                    "column_start": 69,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 607,
                    "line_start": 607,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 92,
                        "highlight_start": 69,
                        "text": "    pub fn subscribe<S: Into<String>>(&self, topic: S, qos: QoS) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:617:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n617 |     ) -> Result<(), ClientError> {\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 18273,
                    "byte_start": 18250,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 617,
                    "line_start": 617,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:622:73\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n622 |     pub fn try_subscribe<S: Into<String>>(&self, topic: S, qos: QoS) -> Result<(), ClientError> {\n    |                                                                         ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 18465,
                    "byte_start": 18442,
                    "column_end": 96,
                    "column_start": 73,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 622,
                    "line_start": 622,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 96,
                        "highlight_start": 73,
                        "text": "    pub fn try_subscribe<S: Into<String>>(&self, topic: S, qos: QoS) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:631:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n631 |     ) -> Result<(), ClientError>\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 18739,
                    "byte_start": 18716,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 631,
                    "line_start": 631,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:645:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n645 |     ) -> Result<(), ClientError>\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 19136,
                    "byte_start": 19113,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 645,
                    "line_start": 645,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:652:51\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n652 |     pub fn subscribe_many<T>(&self, topics: T) -> Result<(), ClientError>\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 19334,
                    "byte_start": 19311,
                    "column_end": 74,
                    "column_start": 51,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 652,
                    "line_start": 652,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 74,
                        "highlight_start": 51,
                        "text": "    pub fn subscribe_many<T>(&self, topics: T) -> Result<(), ClientError>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:663:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n663 |     ) -> Result<(), ClientError>\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 19604,
                    "byte_start": 19581,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 663,
                    "line_start": 663,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:671:55\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n671 |     pub fn try_subscribe_many<T>(&self, topics: T) -> Result<(), ClientError>\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 19833,
                    "byte_start": 19810,
                    "column_end": 78,
                    "column_start": 55,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 671,
                    "line_start": 671,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 78,
                        "highlight_start": 55,
                        "text": "    pub fn try_subscribe_many<T>(&self, topics: T) -> Result<(), ClientError>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:683:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n683 |     ) -> Result<(), ClientError> {\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 20156,
                    "byte_start": 20133,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 683,
                    "line_start": 683,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:694:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n694 |     ) -> Result<(), ClientError> {\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 20513,
                    "byte_start": 20490,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 694,
                    "line_start": 694,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:698:61\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n698 |     pub fn unsubscribe<S: Into<String>>(&self, topic: S) -> Result<(), ClientError> {\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 20663,
                    "byte_start": 20640,
                    "column_end": 84,
                    "column_start": 61,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 698,
                    "line_start": 698,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 84,
                        "highlight_start": 61,
                        "text": "    pub fn unsubscribe<S: Into<String>>(&self, topic: S) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:707:10\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n707 |     ) -> Result<(), ClientError> {\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 20939,
                    "byte_start": 20916,
                    "column_end": 33,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 707,
                    "line_start": 707,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 10,
                        "text": "    ) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:712:65\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n712 |     pub fn try_unsubscribe<S: Into<String>>(&self, topic: S) -> Result<(), ClientError> {\n    |                                                                 ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 21120,
                    "byte_start": 21097,
                    "column_end": 88,
                    "column_start": 65,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 712,
                    "line_start": 712,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 88,
                        "highlight_start": 65,
                        "text": "    pub fn try_unsubscribe<S: Into<String>>(&self, topic: S) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:717:33\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n717 |     pub fn disconnect(&self) -> Result<(), ClientError> {\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 21279,
                    "byte_start": 21256,
                    "column_end": 56,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 717,
                    "line_start": 717,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 33,
                        "text": "    pub fn disconnect(&self) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the `Err`-variant returned from this function is very large\n   --> src\\v5\\client.rs:724:37\n    |\n23  |     Request(Request),\n    |     ---------------- the largest variant contains at least 216 bytes\n24  |     #[error(\"Failed to send mqtt requests to eventloop\")]\n25  |     TryRequest(Request),\n    |     ------------------- the variant `TryRequest` contains at least 216 bytes\n...\n724 |     pub fn try_disconnect(&self) -> Result<(), ClientError> {\n    |                                     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try reducing the size of `v5::client::ClientError`, for example by boxing large elements or replacing it with `Box<v5::client::ClientError>`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::result_large_err",
                  "explanation": null
                },
                "level": "warning",
                "message": "the `Err`-variant returned from this function is very large",
                "spans": [
                  {
                    "byte_end": 718,
                    "byte_start": 702,
                    "column_end": 21,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 216 bytes",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 5,
                        "text": "    Request(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 801,
                    "byte_start": 782,
                    "column_end": 24,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": false,
                    "label": "the variant `TryRequest` contains at least 216 bytes",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 5,
                        "text": "    TryRequest(Request),"
                      }
                    ]
                  },
                  {
                    "byte_end": 21504,
                    "byte_start": 21481,
                    "column_end": 60,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\v5\\client.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 724,
                    "line_start": 724,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 37,
                        "text": "    pub fn try_disconnect(&self) -> Result<(), ClientError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: large size difference between variants\n  --> src\\v5\\eventloop.rs:90:1\n   |\n90 | / pub enum Event {\n91 | |     Incoming(Incoming),\n   | |     ------------------ the largest variant contains at least 392 bytes\n92 | |     Outgoing(Outgoing),\n   | |     ------------------ the second-largest variant contains at least 4 bytes\n93 | | }\n   | |_^ the entire enum is at least 392 bytes\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n   = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n   |\n91 -     Incoming(Incoming),\n91 +     Incoming(Box<Incoming>),\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::large_enum_variant)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider boxing the large fields to reduce the total size of the enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2844,
                        "byte_start": 2836,
                        "column_end": 22,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\v5\\eventloop.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 91,
                        "line_start": 91,
                        "suggested_replacement": "Box<Incoming>",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 22,
                            "highlight_start": 14,
                            "text": "    Incoming(Incoming),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::large_enum_variant",
                  "explanation": null
                },
                "level": "warning",
                "message": "large size difference between variants",
                "spans": [
                  {
                    "byte_end": 2872,
                    "byte_start": 2806,
                    "column_end": 2,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\v5\\eventloop.rs",
                    "is_primary": true,
                    "label": "the entire enum is at least 392 bytes",
                    "line_end": 93,
                    "line_start": 90,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 1,
                        "text": "pub enum Event {"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "    Incoming(Incoming),"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "    Outgoing(Outgoing),"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "}"
                      }
                    ]
                  },
                  {
                    "byte_end": 2845,
                    "byte_start": 2827,
                    "column_end": 23,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\eventloop.rs",
                    "is_primary": false,
                    "label": "the largest variant contains at least 392 bytes",
                    "line_end": 91,
                    "line_start": 91,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 5,
                        "text": "    Incoming(Incoming),"
                      }
                    ]
                  },
                  {
                    "byte_end": 2869,
                    "byte_start": 2851,
                    "column_end": 23,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\v5\\eventloop.rs",
                    "is_primary": false,
                    "label": "the second-largest variant contains at least 4 bytes",
                    "line_end": 92,
                    "line_start": 92,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 5,
                        "text": "    Outgoing(Outgoing),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric constant\n   --> src\\v5\\state.rs:133:38\n    |\n133 |             incoming_pub: vec![None; std::u16::MAX as usize + 1],\n    |                                      ^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\nhelp: use the associated constant instead\n    |\n133 -             incoming_pub: vec![None; std::u16::MAX as usize + 1],\n133 +             incoming_pub: vec![None; u16::MAX as usize + 1],\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5897,
                        "byte_start": 5884,
                        "column_end": 51,
                        "column_start": 38,
                        "expansion": null,
                        "file_name": "src\\v5\\state.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 133,
                        "line_start": 133,
                        "suggested_replacement": "u16::MAX",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 38,
                            "text": "            incoming_pub: vec![None; std::u16::MAX as usize + 1],"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric constant",
                "spans": [
                  {
                    "byte_end": 5897,
                    "byte_start": 5884,
                    "column_end": 51,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\v5\\state.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 133,
                    "line_start": 133,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 38,
                        "text": "            incoming_pub: vec![None; std::u16::MAX as usize + 1],"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmp2ha3xufy/rumqttc-0.24.0#rumqttc@0.24.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rumqttc",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "use-rustls"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmp2ha3xufy\\rumqttc-0.24.0\\target\\debug\\deps\\librumqttc-2cd1baaa8b373b25.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 159
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": true,
              "count": 7,
              "list": [
                {
                  "advisory": {
                    "id": "RUSTSEC-2024-0421",
                    "package": "idna",
                    "title": "`idna` accepts Punycode labels that do not produce any non-ASCII when decoded",
                    "description": "`idna` 0.5.0 and earlier accepts Punycode labels that do not produce any non-ASCII output, which means that either ASCII labels or the empty root label can be masked such that they appear unequal without IDNA processing or when processed with a different implementation and equal when processed with `idna` 0.5.0 or earlier.\n\nConcretely, `example.org` and `xn--example-.org` become equal after processing by `idna` 0.5.0 or earlier. Also, `example.org.xn--` and `example.org.` become equal after processing by `idna` 0.5.0 or earlier.\n\nIn applications using `idna` (but not in `idna` itself) this may be able to lead to privilege escalation when host name comparison is part of a privilege check and the behavior is combined with a client that resolves domains with such labels instead of treating them as errors that preclude DNS resolution / URL fetching and with the attacker managing to introduce a DNS entry (and TLS certificate) for an `xn--`-masked name that turns into the name of the target when processed by `idna` 0.5.0 or earlier.\n\n## Remedy\n\nUpgrade to `idna` 1.0.3 or later, if depending on `idna` directly, or to `url` 2.5.4 or later, if depending on `idna` via `url`. (This issue was fixed in `idna` 1.0.0, but versions earlier than 1.0.3 are not recommended for other reasons.)\n\nWhen upgrading, please take a moment to read about [alternative Unicode back ends for `idna`](https://docs.rs/crate/idna_adapter/latest).\n\nIf you are using Rust earlier than 1.81 in combination with SQLx 0.8.2 or earlier, please also read an [issue](https://github.com/servo/rust-url/issues/992) about combining them with `url` 2.5.4 and `idna` 1.0.3.\n\n## Additional information\n\nThis issue resulted from `idna` 0.5.0 and earlier implementing the UTS 46 specification literally on this point and the specification having this bug. The specification bug has been fixed in [revision 33 of UTS 46](https://www.unicode.org/reports/tr46/tr46-33.html#Modifications).\n\n## Acknowledgements\n\nThanks to kageshiron for recognizing the security implications of this behavior.",
                    "date": "2024-12-09",
                    "aliases": [
                      "CVE-2024-12224"
                    ],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "privilege-escalation"
                    ],
                    "keywords": [
                      "idna",
                      "punycode",
                      "same-origin",
                      "domain-name"
                    ],
                    "cvss": null,
                    "informational": null,
                    "references": [],
                    "source": null,
                    "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1887898",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=1.0.0"
                    ],
                    "unaffected": []
                  },
                  "affected": null,
                  "package": {
                    "name": "idna",
                    "version": "0.5.0",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "634d9b1461af396cad843f47fdba5597a4f9e6ddd4bfb6ff5d85028c25cb12f6",
                    "dependencies": [
                      {
                        "name": "unicode-bidi",
                        "version": "0.3.15",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "unicode-normalization",
                        "version": "0.1.23",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  }
                },
                {
                  "advisory": {
                    "id": "RUSTSEC-2024-0019",
                    "package": "mio",
                    "title": "Tokens for named pipes may be delivered after deregistration",
                    "description": "## Impact\n\nWhen using named pipes on Windows, mio will under some circumstances return invalid tokens that correspond to named pipes that have already been deregistered from the mio registry. The impact of this vulnerability depends on how mio is used. For some applications, invalid tokens may be ignored or cause a warning or a crash. On the other hand, for applications that store pointers in the tokens, this vulnerability may result in a use-after-free.\n\nFor users of Tokio, this vulnerability is serious and can result in a use-after-free in Tokio.\n\nThe vulnerability is Windows-specific, and can only happen if you are using named pipes. Other IO resources are not affected.\n\n## Affected versions\n\nThis vulnerability has been fixed in mio v0.8.11.\n\nAll versions of mio between v0.7.2 and v0.8.10 are vulnerable.\n\nTokio is vulnerable when you are using a vulnerable version of mio AND you are using at least Tokio v1.30.0. Versions of Tokio prior to v1.30.0 will ignore invalid tokens, so they are not vulnerable.\n\n## Workarounds\n\nVulnerable libraries that use mio can work around this issue by detecting and ignoring invalid tokens.\n\n## Technical details\n\nWhen an IO resource registered with mio has a readiness event, mio delivers that readiness event to the user using a user-specified token. Mio guarantees that when an IO resource is [deregistered](https://docs.rs/mio/latest/mio/struct.Registry.html#method.deregister), then it will never return the token for that IO resource again. However, for named pipes on windows, mio may sometimes deliver the token for a named pipe even though the named pipe has been previously deregistered.\n\nThis vulnerability was originally reported in the Tokio issue tracker: [tokio-rs/tokio#6369](https://github.com/tokio-rs/tokio/issues/6369)  \nThis vulnerability was fixed in: [tokio-rs/mio#1760](https://github.com/tokio-rs/mio/pull/1760)\n\nThank you to [@rofoun](https://github.com/rofoun) and [@radekvit](https://github.com/radekvit) for discovering and reporting this issue.",
                    "date": "2024-03-04",
                    "aliases": [
                      "CVE-2024-27308",
                      "GHSA-r8w9-5wcg-vfj7"
                    ],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": null,
                    "references": [],
                    "source": null,
                    "url": "https://github.com/tokio-rs/mio/security/advisories/GHSA-r8w9-5wcg-vfj7",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=0.8.11"
                    ],
                    "unaffected": [
                      "<0.7.2"
                    ]
                  },
                  "affected": {
                    "arch": [],
                    "os": [
                      "windows"
                    ],
                    "functions": {
                      "mio::windows::NamedPipe::new": [
                        ">=0.7.2, <=0.8.10"
                      ]
                    }
                  },
                  "package": {
                    "name": "mio",
                    "version": "0.8.10",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "8f3d0b296e374a4e6f3c7b0a1f5a51d748a0d34c85e7dc48fc3fa9a87657fe09",
                    "dependencies": [
                      {
                        "name": "libc",
                        "version": "0.2.153",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "wasi",
                        "version": "0.11.0+wasi-snapshot-preview1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "windows-sys",
                        "version": "0.48.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  }
                },
                {
                  "advisory": {
                    "id": "RUSTSEC-2024-0357",
                    "package": "openssl",
                    "title": "`MemBio::get_buf` has undefined behavior with empty buffers",
                    "description": "Previously, `MemBio::get_buf` called `slice::from_raw_parts` with a null-pointer, which violates the functions invariants, leading to undefined behavior. In debug builds this would produce an assertion failure. This is now fixed.",
                    "date": "2024-07-21",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": null,
                    "references": [],
                    "source": null,
                    "url": "https://github.com/sfackler/rust-openssl/pull/2266",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=0.10.66"
                    ],
                    "unaffected": []
                  },
                  "affected": {
                    "arch": [],
                    "os": [],
                    "functions": {
                      "openssl::bio::MemBio::get_buf": [
                        "<0.10.66, >=0.8.0"
                      ]
                    }
                  },
                  "package": {
                    "name": "openssl",
                    "version": "0.10.64",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "95a0481286a310808298130d22dd1fef0fa571e05a8f44ec801801e84b216b1f",
                    "dependencies": [
                      {
                        "name": "bitflags",
                        "version": "2.4.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "cfg-if",
                        "version": "1.0.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "foreign-types",
                        "version": "0.3.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.153",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "once_cell",
                        "version": "1.19.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "openssl-macros",
                        "version": "0.1.1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "openssl-sys",
                        "version": "0.9.101",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  }
                },
                {
                  "advisory": {
                    "id": "RUSTSEC-2025-0004",
                    "package": "openssl",
                    "title": "ssl::select_next_proto use after free",
                    "description": "In `openssl` versions before `0.10.70`, `ssl::select_next_proto` can return a slice pointing into the `server` argument's buffer but with a lifetime bound to the `client` argument. In situations where the `server` buffer's lifetime is shorter than the `client` buffer's, this can cause a use after free. This could cause the server to crash or to return arbitrary memory contents to the client.\n\n`openssl` 0.10.70 fixes the signature of `ssl::select_next_proto` to properly constrain the output buffer's lifetime to that of both input buffers.\n\nIn standard usage of `ssl::select_next_proto` in the callback passed to `SslContextBuilder::set_alpn_select_callback`, code is only affected if the `server` buffer is constructed *within* the callback. For example:\n\nNot vulnerable - the server buffer has a `'static` lifetime:\n```rust\nbuilder.set_alpn_select_callback(|_, client_protos| {\n    ssl::select_next_proto(b\"\\x02h2\", client_protos).ok_or_else(AlpnError::NOACK)\n});\n```\n\nNot vulnerable - the server buffer outlives the handshake:\n```rust\nlet server_protos = b\"\\x02h2\".to_vec();\nbuilder.set_alpn_select_callback(|_, client_protos| {\n    ssl::select_next_proto(&server_protos, client_protos).ok_or_else(AlpnError::NOACK)\n});\n```\n\nVulnerable - the server buffer is freed when the callback returns:\n```rust\nbuilder.set_alpn_select_callback(|_, client_protos| {\n    let server_protos = b\"\\x02h2\".to_vec();\n    ssl::select_next_proto(&server_protos, client_protos).ok_or_else(AlpnError::NOACK)\n});\n```",
                    "date": "2025-02-02",
                    "aliases": [
                      "GHSA-rpmj-rpgj-qmpm"
                    ],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "memory-exposure"
                    ],
                    "keywords": [
                      "ssl",
                      "tls",
                      "alpn"
                    ],
                    "cvss": null,
                    "informational": null,
                    "references": [
                      "https://github.com/sfackler/rust-openssl/pull/2360"
                    ],
                    "source": null,
                    "url": "https://github.com/sfackler/rust-openssl/security/advisories/GHSA-rpmj-rpgj-qmpm",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=0.10.70"
                    ],
                    "unaffected": []
                  },
                  "affected": {
                    "arch": [],
                    "os": [],
                    "functions": {
                      "openssl::ssl::select_next_proto": [
                        ">=0.10.0, <0.10.70"
                      ]
                    }
                  },
                  "package": {
                    "name": "openssl",
                    "version": "0.10.64",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "95a0481286a310808298130d22dd1fef0fa571e05a8f44ec801801e84b216b1f",
                    "dependencies": [
                      {
                        "name": "bitflags",
                        "version": "2.4.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "cfg-if",
                        "version": "1.0.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "foreign-types",
                        "version": "0.3.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.153",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "once_cell",
                        "version": "1.19.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "openssl-macros",
                        "version": "0.1.1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "openssl-sys",
                        "version": "0.9.101",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  }
                },
                {
                  "advisory": {
                    "id": "RUSTSEC-2025-0022",
                    "package": "openssl",
                    "title": "Use-After-Free in `Md::fetch` and `Cipher::fetch`",
                    "description": "When a `Some(...)` value was passed to the `properties` argument of either of these functions, a use-after-free would result.\n\nIn practice this would nearly always result in OpenSSL treating the properties as an empty string (due to `CString::drop`'s behavior).\n\nThe maintainers thank [quitbug](https://github.com/quitbug/) for reporting this vulnerability to us.",
                    "date": "2025-04-04",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "memory-corruption"
                    ],
                    "keywords": [],
                    "cvss": null,
                    "informational": null,
                    "references": [],
                    "source": null,
                    "url": "https://github.com/sfackler/rust-openssl/pull/2390",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=0.10.72"
                    ],
                    "unaffected": [
                      "<0.10.39"
                    ]
                  },
                  "affected": {
                    "arch": [],
                    "os": [],
                    "functions": {
                      "openssl::cipher::Cipher::fetch": [
                        ">=0.10.39, <0.10.72"
                      ],
                      "openssl::md::Md::fetch": [
                        ">=0.10.39, <0.10.72"
                      ]
                    }
                  },
                  "package": {
                    "name": "openssl",
                    "version": "0.10.64",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "95a0481286a310808298130d22dd1fef0fa571e05a8f44ec801801e84b216b1f",
                    "dependencies": [
                      {
                        "name": "bitflags",
                        "version": "2.4.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "cfg-if",
                        "version": "1.0.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "foreign-types",
                        "version": "0.3.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.153",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "once_cell",
                        "version": "1.19.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "openssl-macros",
                        "version": "0.1.1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "openssl-sys",
                        "version": "0.9.101",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  }
                },
                {
                  "advisory": {
                    "id": "RUSTSEC-2025-0009",
                    "package": "ring",
                    "title": "Some AES functions may panic when overflow checking is enabled.",
                    "description": "`ring::aead::quic::HeaderProtectionKey::new_mask()` may panic when overflow\nchecking is enabled. In the QUIC protocol, an attacker can induce this panic by\nsending a specially-crafted packet. Even unintentionally it is likely to occur\nin 1 out of every 2**32 packets sent and/or received.\n\nOn 64-bit targets operations using `ring::aead::{AES_128_GCM, AES_256_GCM}` may\npanic when overflow checking is enabled, when encrypting/decrypting approximately\n68,719,476,700 bytes (about 64 gigabytes) of data in a single chunk. Protocols\nlike TLS and SSH are not affected by this because those protocols break large\namounts of data into small chunks. Similarly, most applications will not\nattempt to encrypt/decrypt 64GB of data in one chunk.\n\nOverflow checking is not enabled in release mode by default, but\n`RUSTFLAGS=\"-C overflow-checks\"` or `overflow-checks = true` in the Cargo.toml\nprofile can override this. Overflow checking is usually enabled by default in\ndebug mode.",
                    "date": "2025-03-06",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "denial-of-service"
                    ],
                    "keywords": [],
                    "cvss": null,
                    "informational": null,
                    "references": [],
                    "source": null,
                    "url": "https://github.com/briansmith/ring/blob/main/RELEASES.md#version-01712-2025-03-05",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=0.17.12"
                    ],
                    "unaffected": []
                  },
                  "affected": null,
                  "package": {
                    "name": "ring",
                    "version": "0.17.8",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d",
                    "dependencies": [
                      {
                        "name": "cc",
                        "version": "1.0.88",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "cfg-if",
                        "version": "1.0.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "getrandom",
                        "version": "0.2.12",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.153",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "spin",
                        "version": "0.9.8",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "untrusted",
                        "version": "0.9.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "windows-sys",
                        "version": "0.52.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  }
                },
                {
                  "advisory": {
                    "id": "RUSTSEC-2024-0336",
                    "package": "rustls",
                    "title": "`rustls::ConnectionCommon::complete_io` could fall into an infinite loop based on network input",
                    "description": "If a `close_notify` alert is received during a handshake, `complete_io`\ndoes not terminate.\n\nCallers which do not call `complete_io` are not affected.\n\n`rustls-tokio` and `rustls-ffi` do not call `complete_io`\nand are not affected.\n\n`rustls::Stream` and `rustls::StreamOwned` types use\n`complete_io` and are affected.",
                    "date": "2024-04-19",
                    "aliases": [
                      "CVE-2024-32650",
                      "GHSA-6g7w-8wpp-frhj"
                    ],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "denial-of-service"
                    ],
                    "keywords": [],
                    "cvss": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                    "informational": null,
                    "references": [],
                    "source": null,
                    "url": "https://github.com/rustls/rustls/security/advisories/GHSA-6g7w-8wpp-frhj",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=0.23.5",
                      ">=0.22.4, <0.23.0",
                      ">=0.21.11, <0.22.0"
                    ],
                    "unaffected": []
                  },
                  "affected": {
                    "arch": [],
                    "os": [],
                    "functions": {
                      "rustls::ConnectionCommon::complete_io": [
                        "<=0.23.4",
                        "<=0.22.3",
                        "<=0.21.10",
                        "^0.20"
                      ]
                    }
                  },
                  "package": {
                    "name": "rustls",
                    "version": "0.22.2",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "e87c9956bd9807afa1f77e0f7594af32566e830e088a5576d27c5b6f30f49d41",
                    "dependencies": [
                      {
                        "name": "log",
                        "version": "0.4.20",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "ring",
                        "version": "0.17.8",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "rustls-pki-types",
                        "version": "1.3.1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "rustls-webpki",
                        "version": "0.102.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "subtle",
                        "version": "2.5.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "zeroize",
                        "version": "1.7.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  }
                }
              ]
            },
            "warnings": {
              "unmaintained": [
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "atty",
                    "version": "0.2.14",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8",
                    "dependencies": [
                      {
                        "name": "hermit-abi",
                        "version": "0.1.19",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.153",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "winapi",
                        "version": "0.3.9",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2024-0375",
                    "package": "atty",
                    "title": "`atty` is unmaintained",
                    "description": "The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\n\n## Alternative(s)\n\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0",
                    "date": "2024-09-25",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/softprops/atty/issues/57",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                }
              ],
              "unsound": [
                {
                  "kind": "unsound",
                  "package": {
                    "name": "atty",
                    "version": "0.2.14",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8",
                    "dependencies": [
                      {
                        "name": "hermit-abi",
                        "version": "0.1.19",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.153",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "winapi",
                        "version": "0.3.9",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2021-0145",
                    "package": "atty",
                    "title": "Potential unaligned read",
                    "description": "On windows, `atty` dereferences a potentially unaligned pointer.\n\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\n\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\n\n# atty is Unmaintained\n\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\n\nLast release of `atty` was almost 3 years ago.\n\n## Possible Alternative(s)\n\nThe below list has not been vetted in any way and may or may not contain alternatives;\n\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0",
                    "date": "2021-07-04",
                    "aliases": [
                      "GHSA-g98v-hv3f-hcfr"
                    ],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [
                      "unaligned-read"
                    ],
                    "cvss": null,
                    "informational": "unsound",
                    "references": [
                      "https://github.com/softprops/atty/pull/51",
                      "https://github.com/softprops/atty/issues/57"
                    ],
                    "source": null,
                    "url": "https://github.com/softprops/atty/issues/50",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": {
                    "arch": [],
                    "os": [
                      "windows"
                    ],
                    "functions": {}
                  },
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                },
                {
                  "kind": "unsound",
                  "package": {
                    "name": "tokio",
                    "version": "1.36.0",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "61285f6515fa018fb2d1e46eb21223fff441ee8db5d0f1435e8ab4f5cdb80931",
                    "dependencies": [
                      {
                        "name": "backtrace",
                        "version": "0.3.69",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "bytes",
                        "version": "1.5.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "libc",
                        "version": "0.2.153",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "mio",
                        "version": "0.8.10",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "pin-project-lite",
                        "version": "0.2.13",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "socket2",
                        "version": "0.5.6",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "tokio-macros",
                        "version": "2.2.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "windows-sys",
                        "version": "0.48.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2025-0023",
                    "package": "tokio",
                    "title": "Broadcast channel calls clone in parallel, but does not require `Sync`",
                    "description": "The broadcast channel internally calls `clone` on the stored value when\nreceiving it, and only requires `T:Send`. This means that using the broadcast\nchannel with values that are `Send` but not `Sync` can trigger unsoundness if\nthe `clone` implementation makes use of the value being `!Sync`.\n\nThank you to Austin Bonander for finding and reporting this issue.",
                    "date": "2025-04-07",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "memory-corruption"
                    ],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unsound",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/tokio-rs/tokio/pull/7232",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [
                      ">=1.38.2, <1.39.0",
                      ">=1.42.1, <1.43.0",
                      ">=1.43.1, <1.44.0",
                      ">=1.44.2"
                    ],
                    "unaffected": [
                      "<0.2.5"
                    ]
                  }
                }
              ],
              "yanked": [
                {
                  "kind": "yanked",
                  "package": {
                    "name": "futures-util",
                    "version": "0.3.30",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48",
                    "dependencies": [
                      {
                        "name": "futures-channel",
                        "version": "0.3.30",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "futures-core",
                        "version": "0.3.30",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "futures-io",
                        "version": "0.3.30",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "futures-macro",
                        "version": "0.3.30",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "futures-sink",
                        "version": "0.3.30",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "futures-task",
                        "version": "0.3.30",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "memchr",
                        "version": "2.7.1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "pin-project-lite",
                        "version": "0.2.13",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "pin-utils",
                        "version": "0.1.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "slab",
                        "version": "0.4.9",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": null,
                  "affected": null,
                  "versions": null
                }
              ]
            }
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "rumqttc",
          "version": "0.24.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/rumqttc/latest/rumqttc/all.html \"show sidebar\")\n# Crate rumqttcCopy item path\n[Settings](https://docs.rs/rumqttc/latest/settings.html)\n[Help](https://docs.rs/rumqttc/latest/help.html)\nSummary[Source](https://docs.rs/rumqttc/latest/src/rumqttc/lib.rs.html#1-1016)\nExpand description\nA pure rust MQTT client which strives to be robust, efficient and easy to use. This library is backed by an async (tokio) eventloop which handles all the robustness and and efficiency parts of MQTT but naturally fits into both sync and async worlds as we\u2019ll see\nLet\u2019s jump into examples right away\n### [\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#a-simple-synchronous-publish-and-subscribe)A simple synchronous publish and subscribe\n```\nuse rumqttc::{MqttOptions, Client, QoS};\nuse std::time::Duration;\nuse std::thread;\nlet mut mqttoptions = MqttOptions::new(\"rumqtt-sync\", \"test.mosquitto.org\", 1883);\nmqttoptions.set_keep_alive(Duration::from_secs(5));\nlet (mut client, mut connection) = Client::new(mqttoptions, 10);\nclient.subscribe(\"hello/rumqtt\", QoS::AtMostOnce).unwrap();\nthread::spawn(move || for i in 0..10 {\n  client.publish(\"hello/rumqtt\", QoS::AtLeastOnce, false, vec![i; i as usize]).unwrap();\n  thread::sleep(Duration::from_millis(100));\n});\n// Iterate to poll the eventloop for connection progress\nfor (i, notification) in connection.iter().enumerate() {\n  println!(\"Notification = {:?}\", notification);\n}\n```\n\n### [\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#a-simple-asynchronous-publish-and-subscribe)A simple asynchronous publish and subscribe\n```\nuse rumqttc::{MqttOptions, AsyncClient, QoS};\nuse tokio::{task, time};\nuse std::time::Duration;\nuse std::error::Error;\nlet mut mqttoptions = MqttOptions::new(\"rumqtt-async\", \"test.mosquitto.org\", 1883);\nmqttoptions.set_keep_alive(Duration::from_secs(5));\nlet (mut client, mut eventloop) = AsyncClient::new(mqttoptions, 10);\nclient.subscribe(\"hello/rumqtt\", QoS::AtMostOnce).await.unwrap();\ntask::spawn(async move {\n  for i in 0..10 {\n    client.publish(\"hello/rumqtt\", QoS::AtLeastOnce, false, vec![i; i as usize]).await.unwrap();\n    time::sleep(Duration::from_millis(100)).await;\n  }\n});\nloop {\n  let notification = eventloop.poll().await.unwrap();\n  println!(\"Received = {:?}\", notification);\n}\n```\n\nQuick overview of features\n  * Eventloop orchestrates outgoing/incoming packets concurrently and handles the state\n  * Pings the broker when necessary and detects client side half open connections as well\n  * Throttling of outgoing packets (todo)\n  * Queue size based flow control on outgoing packets\n  * Automatic reconnections by just continuing the `eventloop.poll()`/`connection.iter()` loop\n  * Natural backpressure to client APIs during bad network\n\n\nIn short, everything necessary to maintain a robust connection\nSince the eventloop is externally polled (with `iter()/poll()` in a loop) out side the library and `Eventloop` is accessible, users can\n  * Distribute incoming messages based on topics\n  * Stop it when required\n  * Access internal state for use cases like graceful shutdown or to modify options before reconnection\n\n\n### [\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#important-notes)Important notes\n  * Looping on `connection.iter()`/`eventloop.poll()` is necessary to run the event loop and make progress. It yields incoming and outgoing activity notifications which allows customization as you see fit.\n  * Blocking inside the `connection.iter()`/`eventloop.poll()` loop will block connection progress.\n\n\n### [\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#faq)FAQ\n**Connecting to a broker using raw ip doesn\u2019t work**\nYou cannot create a TLS connection to a bare IP address with a self-signed certificate. This is a [limitation of rustls](https://github.com/ctz/rustls/issues/184). One workaround, which only works under *nix/BSD-like systems, is to add an entry to wherever your DNS resolver looks (e.g. `/etc/hosts`) for the bare IP address and use that name in your code.\n## Re-exports[\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#reexports)\n\n`pub use tokio_rustls[](https://docs.rs/tokio-rustls/0.25.0/x86_64-unknown-linux-gnu/tokio_rustls/index.html \"mod tokio_rustls\");`\n\n\n`pub use mqttbytes::v4[](https://docs.rs/rumqttc/latest/rumqttc/mqttbytes/v4/index.html \"mod rumqttc::mqttbytes::v4\")::*;`\n\n\n`pub use mqttbytes[](https://docs.rs/rumqttc/latest/rumqttc/mqttbytes/index.html \"mod rumqttc::mqttbytes\")::*;`\n\n## Modules[\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#modules)\n\n[mqttbytes](https://docs.rs/rumqttc/latest/rumqttc/mqttbytes/index.html \"mod rumqttc::mqttbytes\")\n    mqttbytes\n\n[v5](https://docs.rs/rumqttc/latest/rumqttc/v5/index.html \"mod rumqttc::v5\")\n\n## Structs[\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#structs)\n\n[AsyncClient](https://docs.rs/rumqttc/latest/rumqttc/struct.AsyncClient.html \"struct rumqttc::AsyncClient\")\n    An asynchronous client, communicates with MQTT `EventLoop`.\n\n[Client](https://docs.rs/rumqttc/latest/rumqttc/struct.Client.html \"struct rumqttc::Client\")\n    A synchronous client, communicates with MQTT `EventLoop`.\n\n[Connection](https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html \"struct rumqttc::Connection\")\n    MQTT connection. Maintains all the necessary state\n\n[EventLoop](https://docs.rs/rumqttc/latest/rumqttc/struct.EventLoop.html \"struct rumqttc::EventLoop\")\n    Eventloop with all the state of a connection\n\n[Iter](https://docs.rs/rumqttc/latest/rumqttc/struct.Iter.html \"struct rumqttc::Iter\")\n    Iterator which polls the `EventLoop` for connection progress\n\n[MqttOptions](https://docs.rs/rumqttc/latest/rumqttc/struct.MqttOptions.html \"struct rumqttc::MqttOptions\")\n    Options to configure the behaviour of MQTT connection\n\n[MqttState](https://docs.rs/rumqttc/latest/rumqttc/struct.MqttState.html \"struct rumqttc::MqttState\")\n    State of the mqtt connection.\n\n[NetworkOptions](https://docs.rs/rumqttc/latest/rumqttc/struct.NetworkOptions.html \"struct rumqttc::NetworkOptions\")\n    Provides a way to configure low level network connection configurations\n\n[Proxy](https://docs.rs/rumqttc/latest/rumqttc/struct.Proxy.html \"struct rumqttc::Proxy\")\n\n\n[RecvError](https://docs.rs/rumqttc/latest/rumqttc/struct.RecvError.html \"struct rumqttc::RecvError\")\n    Error type returned by [`Connection::recv`](https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html#method.recv \"method rumqttc::Connection::recv\")\n## Enums[\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#enums)\n\n[ClientError](https://docs.rs/rumqttc/latest/rumqttc/enum.ClientError.html \"enum rumqttc::ClientError\")\n    Client Error\n\n[ConnectionError](https://docs.rs/rumqttc/latest/rumqttc/enum.ConnectionError.html \"enum rumqttc::ConnectionError\")\n    Critical errors during eventloop polling\n\n[Event](https://docs.rs/rumqttc/latest/rumqttc/enum.Event.html \"enum rumqttc::Event\")\n    Events which can be yielded by the event loop\n\n[OptionError](https://docs.rs/rumqttc/latest/rumqttc/enum.OptionError.html \"enum rumqttc::OptionError\")\n\n\n[Outgoing](https://docs.rs/rumqttc/latest/rumqttc/enum.Outgoing.html \"enum rumqttc::Outgoing\")\n    Current outgoing activity on the eventloop\n\n[ProxyAuth](https://docs.rs/rumqttc/latest/rumqttc/enum.ProxyAuth.html \"enum rumqttc::ProxyAuth\")\n\n\n[ProxyType](https://docs.rs/rumqttc/latest/rumqttc/enum.ProxyType.html \"enum rumqttc::ProxyType\")\n\n\n[RecvTimeoutError](https://docs.rs/rumqttc/latest/rumqttc/enum.RecvTimeoutError.html \"enum rumqttc::RecvTimeoutError\")\n    Error type returned by [`Connection::recv_timeout`](https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html#method.recv_timeout \"method rumqttc::Connection::recv_timeout\")\n\n[Request](https://docs.rs/rumqttc/latest/rumqttc/enum.Request.html \"enum rumqttc::Request\")\n    Requests by the client to mqtt event loop. Request are handled one by one.\n\n[StateError](https://docs.rs/rumqttc/latest/rumqttc/enum.StateError.html \"enum rumqttc::StateError\")\n    Errors during state handling\n\n[TlsConfiguration](https://docs.rs/rumqttc/latest/rumqttc/enum.TlsConfiguration.html \"enum rumqttc::TlsConfiguration\")\n    TLS configuration method\n\n[TlsError](https://docs.rs/rumqttc/latest/rumqttc/enum.TlsError.html \"enum rumqttc::TlsError\")\n\n\n[Transport](https://docs.rs/rumqttc/latest/rumqttc/enum.Transport.html \"enum rumqttc::Transport\")\n    Transport methods. Defaults to TCP.\n\n[TryRecvError](https://docs.rs/rumqttc/latest/rumqttc/enum.TryRecvError.html \"enum rumqttc::TryRecvError\")\n    Error type returned by [`Connection::try_recv`](https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html#method.try_recv \"method rumqttc::Connection::try_recv\")\n## Type Aliases[\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#types)\n\n[Incoming](https://docs.rs/rumqttc/latest/rumqttc/type.Incoming.html \"type rumqttc::Incoming\")\n\n",
            "markdown_with_citations": "[](https://docs.rs/rumqttc/latest/rumqttc/all.html \"show sidebar\")\n# Crate rumqttcCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA pure rust MQTT client which strives to be robust, efficient and easy to use. This library is backed by an async (tokio) eventloop which handles all the robustness and and efficiency parts of MQTT but naturally fits into both sync and async worlds as we\u2019ll see\nLet\u2019s jump into examples right away\n### \u00a7\u27e84\u27e9A simple synchronous publish and subscribe\n```\nuse rumqttc::{MqttOptions, Client, QoS};\nuse std::time::Duration;\nuse std::thread;\nlet mut mqttoptions = MqttOptions::new(\"rumqtt-sync\", \"test.mosquitto.org\", 1883);\nmqttoptions.set_keep_alive(Duration::from_secs(5));\nlet (mut client, mut connection) = Client::new(mqttoptions, 10);\nclient.subscribe(\"hello/rumqtt\", QoS::AtMostOnce).unwrap();\nthread::spawn(move || for i in 0..10 {\n  client.publish(\"hello/rumqtt\", QoS::AtLeastOnce, false, vec![i; i as usize]).unwrap();\n  thread::sleep(Duration::from_millis(100));\n});\n// Iterate to poll the eventloop for connection progress\nfor (i, notification) in connection.iter().enumerate() {\n  println!(\"Notification = {:?}\", notification);\n}\n```\n\n### \u00a7\u27e85\u27e9A simple asynchronous publish and subscribe\n```\nuse rumqttc::{MqttOptions, AsyncClient, QoS};\nuse tokio::{task, time};\nuse std::time::Duration;\nuse std::error::Error;\nlet mut mqttoptions = MqttOptions::new(\"rumqtt-async\", \"test.mosquitto.org\", 1883);\nmqttoptions.set_keep_alive(Duration::from_secs(5));\nlet (mut client, mut eventloop) = AsyncClient::new(mqttoptions, 10);\nclient.subscribe(\"hello/rumqtt\", QoS::AtMostOnce).await.unwrap();\ntask::spawn(async move {\n  for i in 0..10 {\n    client.publish(\"hello/rumqtt\", QoS::AtLeastOnce, false, vec![i; i as usize]).await.unwrap();\n    time::sleep(Duration::from_millis(100)).await;\n  }\n});\nloop {\n  let notification = eventloop.poll().await.unwrap();\n  println!(\"Received = {:?}\", notification);\n}\n```\n\nQuick overview of features\n  * Eventloop orchestrates outgoing/incoming packets concurrently and handles the state\n  * Pings the broker when necessary and detects client side half open connections as well\n  * Throttling of outgoing packets (todo)\n  * Queue size based flow control on outgoing packets\n  * Automatic reconnections by just continuing the `eventloop.poll()`/`connection.iter()` loop\n  * Natural backpressure to client APIs during bad network\n\n\nIn short, everything necessary to maintain a robust connection\nSince the eventloop is externally polled (with `iter()/poll()` in a loop) out side the library and `Eventloop` is accessible, users can\n  * Distribute incoming messages based on topics\n  * Stop it when required\n  * Access internal state for use cases like graceful shutdown or to modify options before reconnection\n\n\n### \u00a7\u27e86\u27e9Important notes\n  * Looping on `connection.iter()`/`eventloop.poll()` is necessary to run the event loop and make progress. It yields incoming and outgoing activity notifications which allows customization as you see fit.\n  * Blocking inside the `connection.iter()`/`eventloop.poll()` loop will block connection progress.\n\n\n### \u00a7\u27e87\u27e9FAQ\n**Connecting to a broker using raw ip doesn\u2019t work**\nYou cannot create a TLS connection to a bare IP address with a self-signed certificate. This is a limitation of rustls\u27e88\u27e9. One workaround, which only works under *nix/BSD-like systems, is to add an entry to wherever your DNS resolver looks (e.g. `/etc/hosts`) for the bare IP address and use that name in your code.\n## Re-exports\u00a7\u27e89\u27e9\n\n`pub use tokio_rustls[](https://docs.rs/tokio-rustls/0.25.0/x86_64-unknown-linux-gnu/tokio_rustls/index.html \"mod tokio_rustls\");`\n\n\n`pub use mqttbytes::v4[](https://docs.rs/rumqttc/latest/rumqttc/mqttbytes/v4/index.html \"mod rumqttc::mqttbytes::v4\")::*;`\n\n\n`pub use mqttbytes[](https://docs.rs/rumqttc/latest/rumqttc/mqttbytes/index.html \"mod rumqttc::mqttbytes\")::*;`\n\n## Modules\u00a7\u27e810\u27e9\n\nmqttbytes\u27e811\u27e9\n    mqttbytes\n\nv5\u27e812\u27e9\n\n## Structs\u00a7\u27e813\u27e9\n\nAsyncClient\u27e814\u27e9\n    An asynchronous client, communicates with MQTT `EventLoop`.\n\nClient\u27e815\u27e9\n    A synchronous client, communicates with MQTT `EventLoop`.\n\nConnection\u27e816\u27e9\n    MQTT connection. Maintains all the necessary state\n\nEventLoop\u27e817\u27e9\n    Eventloop with all the state of a connection\n\nIter\u27e818\u27e9\n    Iterator which polls the `EventLoop` for connection progress\n\nMqttOptions\u27e819\u27e9\n    Options to configure the behaviour of MQTT connection\n\nMqttState\u27e820\u27e9\n    State of the mqtt connection.\n\nNetworkOptions\u27e821\u27e9\n    Provides a way to configure low level network connection configurations\n\nProxy\u27e822\u27e9\n\n\nRecvError\u27e823\u27e9\n    Error type returned by `Connection::recv`\u27e824\u27e9\n## Enums\u00a7\u27e825\u27e9\n\nClientError\u27e826\u27e9\n    Client Error\n\nConnectionError\u27e827\u27e9\n    Critical errors during eventloop polling\n\nEvent\u27e828\u27e9\n    Events which can be yielded by the event loop\n\nOptionError\u27e829\u27e9\n\n\nOutgoing\u27e830\u27e9\n    Current outgoing activity on the eventloop\n\nProxyAuth\u27e831\u27e9\n\n\nProxyType\u27e832\u27e9\n\n\nRecvTimeoutError\u27e833\u27e9\n    Error type returned by `Connection::recv_timeout`\u27e834\u27e9\n\nRequest\u27e835\u27e9\n    Requests by the client to mqtt event loop. Request are handled one by one.\n\nStateError\u27e836\u27e9\n    Errors during state handling\n\nTlsConfiguration\u27e837\u27e9\n    TLS configuration method\n\nTlsError\u27e838\u27e9\n\n\nTransport\u27e839\u27e9\n    Transport methods. Defaults to TCP.\n\nTryRecvError\u27e840\u27e9\n    Error type returned by `Connection::try_recv`\u27e841\u27e9\n## Type Aliases\u00a7\u27e842\u27e9\n\nIncoming\u27e843\u27e9\n\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/rumqttc/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/rumqttc/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/rumqttc/latest/src/rumqttc/lib.rs.html#1-1016: Source\n\u27e84\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#a-simple-synchronous-publish-and-subscribe: \u00a7\n\u27e85\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#a-simple-asynchronous-publish-and-subscribe: \u00a7\n\u27e86\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#important-notes: \u00a7\n\u27e87\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#faq: \u00a7\n\u27e88\u27e9 https://github.com/ctz/rustls/issues/184: limitation of rustls\n\u27e89\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#reexports: \u00a7\n\u27e810\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#modules: \u00a7\n\u27e811\u27e9 https://docs.rs/rumqttc/latest/rumqttc/mqttbytes/index.html: mod rumqttc::mqttbytes - mqttbytes\n\u27e812\u27e9 https://docs.rs/rumqttc/latest/rumqttc/v5/index.html: mod rumqttc::v5 - v5\n\u27e813\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#structs: \u00a7\n\u27e814\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.AsyncClient.html: struct rumqttc::AsyncClient - AsyncClient\n\u27e815\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.Client.html: struct rumqttc::Client - Client\n\u27e816\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html: struct rumqttc::Connection - Connection\n\u27e817\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.EventLoop.html: struct rumqttc::EventLoop - EventLoop\n\u27e818\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.Iter.html: struct rumqttc::Iter - Iter\n\u27e819\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.MqttOptions.html: struct rumqttc::MqttOptions - MqttOptions\n\u27e820\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.MqttState.html: struct rumqttc::MqttState - MqttState\n\u27e821\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.NetworkOptions.html: struct rumqttc::NetworkOptions - NetworkOptions\n\u27e822\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.Proxy.html: struct rumqttc::Proxy - Proxy\n\u27e823\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.RecvError.html: struct rumqttc::RecvError - RecvError\n\u27e824\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html#method.recv: method rumqttc::Connection::recv - `Connection::recv`\n\u27e825\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#enums: \u00a7\n\u27e826\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.ClientError.html: enum rumqttc::ClientError - ClientError\n\u27e827\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.ConnectionError.html: enum rumqttc::ConnectionError - ConnectionError\n\u27e828\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.Event.html: enum rumqttc::Event - Event\n\u27e829\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.OptionError.html: enum rumqttc::OptionError - OptionError\n\u27e830\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.Outgoing.html: enum rumqttc::Outgoing - Outgoing\n\u27e831\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.ProxyAuth.html: enum rumqttc::ProxyAuth - ProxyAuth\n\u27e832\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.ProxyType.html: enum rumqttc::ProxyType - ProxyType\n\u27e833\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.RecvTimeoutError.html: enum rumqttc::RecvTimeoutError - RecvTimeoutError\n\u27e834\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html#method.recv_timeout: method rumqttc::Connection::recv_timeout - `Connection::recv_timeout`\n\u27e835\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.Request.html: enum rumqttc::Request - Request\n\u27e836\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.StateError.html: enum rumqttc::StateError - StateError\n\u27e837\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.TlsConfiguration.html: enum rumqttc::TlsConfiguration - TlsConfiguration\n\u27e838\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.TlsError.html: enum rumqttc::TlsError - TlsError\n\u27e839\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.Transport.html: enum rumqttc::Transport - Transport\n\u27e840\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.TryRecvError.html: enum rumqttc::TryRecvError - TryRecvError\n\u27e841\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html#method.try_recv: method rumqttc::Connection::try_recv - `Connection::try_recv`\n\u27e842\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#types: \u00a7\n\u27e843\u27e9 https://docs.rs/rumqttc/latest/rumqttc/type.Incoming.html: type rumqttc::Incoming - Incoming\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "rumqttc",
          "version": "0.24.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/rumqttc/latest/rumqttc/all.html \"show sidebar\")\n# Crate rumqttcCopy item path\n[Settings](https://docs.rs/rumqttc/latest/settings.html)\n[Help](https://docs.rs/rumqttc/latest/help.html)\nSummary[Source](https://docs.rs/rumqttc/latest/src/rumqttc/lib.rs.html#1-1016)\nExpand description\nA pure rust MQTT client which strives to be robust, efficient and easy to use. This library is backed by an async (tokio) eventloop which handles all the robustness and and efficiency parts of MQTT but naturally fits into both sync and async worlds as we\u2019ll see\nLet\u2019s jump into examples right away\n### [\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#a-simple-synchronous-publish-and-subscribe)A simple synchronous publish and subscribe\n```\nuse rumqttc::{MqttOptions, Client, QoS};\nuse std::time::Duration;\nuse std::thread;\nlet mut mqttoptions = MqttOptions::new(\"rumqtt-sync\", \"test.mosquitto.org\", 1883);\nmqttoptions.set_keep_alive(Duration::from_secs(5));\nlet (mut client, mut connection) = Client::new(mqttoptions, 10);\nclient.subscribe(\"hello/rumqtt\", QoS::AtMostOnce).unwrap();\nthread::spawn(move || for i in 0..10 {\n  client.publish(\"hello/rumqtt\", QoS::AtLeastOnce, false, vec![i; i as usize]).unwrap();\n  thread::sleep(Duration::from_millis(100));\n});\n// Iterate to poll the eventloop for connection progress\nfor (i, notification) in connection.iter().enumerate() {\n  println!(\"Notification = {:?}\", notification);\n}\n```\n\n### [\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#a-simple-asynchronous-publish-and-subscribe)A simple asynchronous publish and subscribe\n```\nuse rumqttc::{MqttOptions, AsyncClient, QoS};\nuse tokio::{task, time};\nuse std::time::Duration;\nuse std::error::Error;\nlet mut mqttoptions = MqttOptions::new(\"rumqtt-async\", \"test.mosquitto.org\", 1883);\nmqttoptions.set_keep_alive(Duration::from_secs(5));\nlet (mut client, mut eventloop) = AsyncClient::new(mqttoptions, 10);\nclient.subscribe(\"hello/rumqtt\", QoS::AtMostOnce).await.unwrap();\ntask::spawn(async move {\n  for i in 0..10 {\n    client.publish(\"hello/rumqtt\", QoS::AtLeastOnce, false, vec![i; i as usize]).await.unwrap();\n    time::sleep(Duration::from_millis(100)).await;\n  }\n});\nloop {\n  let notification = eventloop.poll().await.unwrap();\n  println!(\"Received = {:?}\", notification);\n}\n```\n\nQuick overview of features\n  * Eventloop orchestrates outgoing/incoming packets concurrently and handles the state\n  * Pings the broker when necessary and detects client side half open connections as well\n  * Throttling of outgoing packets (todo)\n  * Queue size based flow control on outgoing packets\n  * Automatic reconnections by just continuing the `eventloop.poll()`/`connection.iter()` loop\n  * Natural backpressure to client APIs during bad network\n\n\nIn short, everything necessary to maintain a robust connection\nSince the eventloop is externally polled (with `iter()/poll()` in a loop) out side the library and `Eventloop` is accessible, users can\n  * Distribute incoming messages based on topics\n  * Stop it when required\n  * Access internal state for use cases like graceful shutdown or to modify options before reconnection\n\n\n### [\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#important-notes)Important notes\n  * Looping on `connection.iter()`/`eventloop.poll()` is necessary to run the event loop and make progress. It yields incoming and outgoing activity notifications which allows customization as you see fit.\n  * Blocking inside the `connection.iter()`/`eventloop.poll()` loop will block connection progress.\n\n\n### [\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#faq)FAQ\n**Connecting to a broker using raw ip doesn\u2019t work**\nYou cannot create a TLS connection to a bare IP address with a self-signed certificate. This is a [limitation of rustls](https://github.com/ctz/rustls/issues/184). One workaround, which only works under *nix/BSD-like systems, is to add an entry to wherever your DNS resolver looks (e.g. `/etc/hosts`) for the bare IP address and use that name in your code.\n## Re-exports[\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#reexports)\n\n`pub use tokio_rustls[](https://docs.rs/tokio-rustls/0.25.0/x86_64-unknown-linux-gnu/tokio_rustls/index.html \"mod tokio_rustls\");`\n\n\n`pub use mqttbytes::v4[](https://docs.rs/rumqttc/latest/rumqttc/mqttbytes/v4/index.html \"mod rumqttc::mqttbytes::v4\")::*;`\n\n\n`pub use mqttbytes[](https://docs.rs/rumqttc/latest/rumqttc/mqttbytes/index.html \"mod rumqttc::mqttbytes\")::*;`\n\n## Modules[\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#modules)\n\n[mqttbytes](https://docs.rs/rumqttc/latest/rumqttc/mqttbytes/index.html \"mod rumqttc::mqttbytes\")\n    mqttbytes\n\n[v5](https://docs.rs/rumqttc/latest/rumqttc/v5/index.html \"mod rumqttc::v5\")\n\n## Structs[\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#structs)\n\n[AsyncClient](https://docs.rs/rumqttc/latest/rumqttc/struct.AsyncClient.html \"struct rumqttc::AsyncClient\")\n    An asynchronous client, communicates with MQTT `EventLoop`.\n\n[Client](https://docs.rs/rumqttc/latest/rumqttc/struct.Client.html \"struct rumqttc::Client\")\n    A synchronous client, communicates with MQTT `EventLoop`.\n\n[Connection](https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html \"struct rumqttc::Connection\")\n    MQTT connection. Maintains all the necessary state\n\n[EventLoop](https://docs.rs/rumqttc/latest/rumqttc/struct.EventLoop.html \"struct rumqttc::EventLoop\")\n    Eventloop with all the state of a connection\n\n[Iter](https://docs.rs/rumqttc/latest/rumqttc/struct.Iter.html \"struct rumqttc::Iter\")\n    Iterator which polls the `EventLoop` for connection progress\n\n[MqttOptions](https://docs.rs/rumqttc/latest/rumqttc/struct.MqttOptions.html \"struct rumqttc::MqttOptions\")\n    Options to configure the behaviour of MQTT connection\n\n[MqttState](https://docs.rs/rumqttc/latest/rumqttc/struct.MqttState.html \"struct rumqttc::MqttState\")\n    State of the mqtt connection.\n\n[NetworkOptions](https://docs.rs/rumqttc/latest/rumqttc/struct.NetworkOptions.html \"struct rumqttc::NetworkOptions\")\n    Provides a way to configure low level network connection configurations\n\n[Proxy](https://docs.rs/rumqttc/latest/rumqttc/struct.Proxy.html \"struct rumqttc::Proxy\")\n\n\n[RecvError](https://docs.rs/rumqttc/latest/rumqttc/struct.RecvError.html \"struct rumqttc::RecvError\")\n    Error type returned by [`Connection::recv`](https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html#method.recv \"method rumqttc::Connection::recv\")\n## Enums[\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#enums)\n\n[ClientError](https://docs.rs/rumqttc/latest/rumqttc/enum.ClientError.html \"enum rumqttc::ClientError\")\n    Client Error\n\n[ConnectionError](https://docs.rs/rumqttc/latest/rumqttc/enum.ConnectionError.html \"enum rumqttc::ConnectionError\")\n    Critical errors during eventloop polling\n\n[Event](https://docs.rs/rumqttc/latest/rumqttc/enum.Event.html \"enum rumqttc::Event\")\n    Events which can be yielded by the event loop\n\n[OptionError](https://docs.rs/rumqttc/latest/rumqttc/enum.OptionError.html \"enum rumqttc::OptionError\")\n\n\n[Outgoing](https://docs.rs/rumqttc/latest/rumqttc/enum.Outgoing.html \"enum rumqttc::Outgoing\")\n    Current outgoing activity on the eventloop\n\n[ProxyAuth](https://docs.rs/rumqttc/latest/rumqttc/enum.ProxyAuth.html \"enum rumqttc::ProxyAuth\")\n\n\n[ProxyType](https://docs.rs/rumqttc/latest/rumqttc/enum.ProxyType.html \"enum rumqttc::ProxyType\")\n\n\n[RecvTimeoutError](https://docs.rs/rumqttc/latest/rumqttc/enum.RecvTimeoutError.html \"enum rumqttc::RecvTimeoutError\")\n    Error type returned by [`Connection::recv_timeout`](https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html#method.recv_timeout \"method rumqttc::Connection::recv_timeout\")\n\n[Request](https://docs.rs/rumqttc/latest/rumqttc/enum.Request.html \"enum rumqttc::Request\")\n    Requests by the client to mqtt event loop. Request are handled one by one.\n\n[StateError](https://docs.rs/rumqttc/latest/rumqttc/enum.StateError.html \"enum rumqttc::StateError\")\n    Errors during state handling\n\n[TlsConfiguration](https://docs.rs/rumqttc/latest/rumqttc/enum.TlsConfiguration.html \"enum rumqttc::TlsConfiguration\")\n    TLS configuration method\n\n[TlsError](https://docs.rs/rumqttc/latest/rumqttc/enum.TlsError.html \"enum rumqttc::TlsError\")\n\n\n[Transport](https://docs.rs/rumqttc/latest/rumqttc/enum.Transport.html \"enum rumqttc::Transport\")\n    Transport methods. Defaults to TCP.\n\n[TryRecvError](https://docs.rs/rumqttc/latest/rumqttc/enum.TryRecvError.html \"enum rumqttc::TryRecvError\")\n    Error type returned by [`Connection::try_recv`](https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html#method.try_recv \"method rumqttc::Connection::try_recv\")\n## Type Aliases[\u00a7](https://docs.rs/rumqttc/latest/rumqttc/#types)\n\n[Incoming](https://docs.rs/rumqttc/latest/rumqttc/type.Incoming.html \"type rumqttc::Incoming\")\n\n",
            "markdown_with_citations": "[](https://docs.rs/rumqttc/latest/rumqttc/all.html \"show sidebar\")\n# Crate rumqttcCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA pure rust MQTT client which strives to be robust, efficient and easy to use. This library is backed by an async (tokio) eventloop which handles all the robustness and and efficiency parts of MQTT but naturally fits into both sync and async worlds as we\u2019ll see\nLet\u2019s jump into examples right away\n### \u00a7\u27e84\u27e9A simple synchronous publish and subscribe\n```\nuse rumqttc::{MqttOptions, Client, QoS};\nuse std::time::Duration;\nuse std::thread;\nlet mut mqttoptions = MqttOptions::new(\"rumqtt-sync\", \"test.mosquitto.org\", 1883);\nmqttoptions.set_keep_alive(Duration::from_secs(5));\nlet (mut client, mut connection) = Client::new(mqttoptions, 10);\nclient.subscribe(\"hello/rumqtt\", QoS::AtMostOnce).unwrap();\nthread::spawn(move || for i in 0..10 {\n  client.publish(\"hello/rumqtt\", QoS::AtLeastOnce, false, vec![i; i as usize]).unwrap();\n  thread::sleep(Duration::from_millis(100));\n});\n// Iterate to poll the eventloop for connection progress\nfor (i, notification) in connection.iter().enumerate() {\n  println!(\"Notification = {:?}\", notification);\n}\n```\n\n### \u00a7\u27e85\u27e9A simple asynchronous publish and subscribe\n```\nuse rumqttc::{MqttOptions, AsyncClient, QoS};\nuse tokio::{task, time};\nuse std::time::Duration;\nuse std::error::Error;\nlet mut mqttoptions = MqttOptions::new(\"rumqtt-async\", \"test.mosquitto.org\", 1883);\nmqttoptions.set_keep_alive(Duration::from_secs(5));\nlet (mut client, mut eventloop) = AsyncClient::new(mqttoptions, 10);\nclient.subscribe(\"hello/rumqtt\", QoS::AtMostOnce).await.unwrap();\ntask::spawn(async move {\n  for i in 0..10 {\n    client.publish(\"hello/rumqtt\", QoS::AtLeastOnce, false, vec![i; i as usize]).await.unwrap();\n    time::sleep(Duration::from_millis(100)).await;\n  }\n});\nloop {\n  let notification = eventloop.poll().await.unwrap();\n  println!(\"Received = {:?}\", notification);\n}\n```\n\nQuick overview of features\n  * Eventloop orchestrates outgoing/incoming packets concurrently and handles the state\n  * Pings the broker when necessary and detects client side half open connections as well\n  * Throttling of outgoing packets (todo)\n  * Queue size based flow control on outgoing packets\n  * Automatic reconnections by just continuing the `eventloop.poll()`/`connection.iter()` loop\n  * Natural backpressure to client APIs during bad network\n\n\nIn short, everything necessary to maintain a robust connection\nSince the eventloop is externally polled (with `iter()/poll()` in a loop) out side the library and `Eventloop` is accessible, users can\n  * Distribute incoming messages based on topics\n  * Stop it when required\n  * Access internal state for use cases like graceful shutdown or to modify options before reconnection\n\n\n### \u00a7\u27e86\u27e9Important notes\n  * Looping on `connection.iter()`/`eventloop.poll()` is necessary to run the event loop and make progress. It yields incoming and outgoing activity notifications which allows customization as you see fit.\n  * Blocking inside the `connection.iter()`/`eventloop.poll()` loop will block connection progress.\n\n\n### \u00a7\u27e87\u27e9FAQ\n**Connecting to a broker using raw ip doesn\u2019t work**\nYou cannot create a TLS connection to a bare IP address with a self-signed certificate. This is a limitation of rustls\u27e88\u27e9. One workaround, which only works under *nix/BSD-like systems, is to add an entry to wherever your DNS resolver looks (e.g. `/etc/hosts`) for the bare IP address and use that name in your code.\n## Re-exports\u00a7\u27e89\u27e9\n\n`pub use tokio_rustls[](https://docs.rs/tokio-rustls/0.25.0/x86_64-unknown-linux-gnu/tokio_rustls/index.html \"mod tokio_rustls\");`\n\n\n`pub use mqttbytes::v4[](https://docs.rs/rumqttc/latest/rumqttc/mqttbytes/v4/index.html \"mod rumqttc::mqttbytes::v4\")::*;`\n\n\n`pub use mqttbytes[](https://docs.rs/rumqttc/latest/rumqttc/mqttbytes/index.html \"mod rumqttc::mqttbytes\")::*;`\n\n## Modules\u00a7\u27e810\u27e9\n\nmqttbytes\u27e811\u27e9\n    mqttbytes\n\nv5\u27e812\u27e9\n\n## Structs\u00a7\u27e813\u27e9\n\nAsyncClient\u27e814\u27e9\n    An asynchronous client, communicates with MQTT `EventLoop`.\n\nClient\u27e815\u27e9\n    A synchronous client, communicates with MQTT `EventLoop`.\n\nConnection\u27e816\u27e9\n    MQTT connection. Maintains all the necessary state\n\nEventLoop\u27e817\u27e9\n    Eventloop with all the state of a connection\n\nIter\u27e818\u27e9\n    Iterator which polls the `EventLoop` for connection progress\n\nMqttOptions\u27e819\u27e9\n    Options to configure the behaviour of MQTT connection\n\nMqttState\u27e820\u27e9\n    State of the mqtt connection.\n\nNetworkOptions\u27e821\u27e9\n    Provides a way to configure low level network connection configurations\n\nProxy\u27e822\u27e9\n\n\nRecvError\u27e823\u27e9\n    Error type returned by `Connection::recv`\u27e824\u27e9\n## Enums\u00a7\u27e825\u27e9\n\nClientError\u27e826\u27e9\n    Client Error\n\nConnectionError\u27e827\u27e9\n    Critical errors during eventloop polling\n\nEvent\u27e828\u27e9\n    Events which can be yielded by the event loop\n\nOptionError\u27e829\u27e9\n\n\nOutgoing\u27e830\u27e9\n    Current outgoing activity on the eventloop\n\nProxyAuth\u27e831\u27e9\n\n\nProxyType\u27e832\u27e9\n\n\nRecvTimeoutError\u27e833\u27e9\n    Error type returned by `Connection::recv_timeout`\u27e834\u27e9\n\nRequest\u27e835\u27e9\n    Requests by the client to mqtt event loop. Request are handled one by one.\n\nStateError\u27e836\u27e9\n    Errors during state handling\n\nTlsConfiguration\u27e837\u27e9\n    TLS configuration method\n\nTlsError\u27e838\u27e9\n\n\nTransport\u27e839\u27e9\n    Transport methods. Defaults to TCP.\n\nTryRecvError\u27e840\u27e9\n    Error type returned by `Connection::try_recv`\u27e841\u27e9\n## Type Aliases\u00a7\u27e842\u27e9\n\nIncoming\u27e843\u27e9\n\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/rumqttc/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/rumqttc/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/rumqttc/latest/src/rumqttc/lib.rs.html#1-1016: Source\n\u27e84\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#a-simple-synchronous-publish-and-subscribe: \u00a7\n\u27e85\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#a-simple-asynchronous-publish-and-subscribe: \u00a7\n\u27e86\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#important-notes: \u00a7\n\u27e87\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#faq: \u00a7\n\u27e88\u27e9 https://github.com/ctz/rustls/issues/184: limitation of rustls\n\u27e89\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#reexports: \u00a7\n\u27e810\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#modules: \u00a7\n\u27e811\u27e9 https://docs.rs/rumqttc/latest/rumqttc/mqttbytes/index.html: mod rumqttc::mqttbytes - mqttbytes\n\u27e812\u27e9 https://docs.rs/rumqttc/latest/rumqttc/v5/index.html: mod rumqttc::v5 - v5\n\u27e813\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#structs: \u00a7\n\u27e814\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.AsyncClient.html: struct rumqttc::AsyncClient - AsyncClient\n\u27e815\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.Client.html: struct rumqttc::Client - Client\n\u27e816\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html: struct rumqttc::Connection - Connection\n\u27e817\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.EventLoop.html: struct rumqttc::EventLoop - EventLoop\n\u27e818\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.Iter.html: struct rumqttc::Iter - Iter\n\u27e819\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.MqttOptions.html: struct rumqttc::MqttOptions - MqttOptions\n\u27e820\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.MqttState.html: struct rumqttc::MqttState - MqttState\n\u27e821\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.NetworkOptions.html: struct rumqttc::NetworkOptions - NetworkOptions\n\u27e822\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.Proxy.html: struct rumqttc::Proxy - Proxy\n\u27e823\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.RecvError.html: struct rumqttc::RecvError - RecvError\n\u27e824\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html#method.recv: method rumqttc::Connection::recv - `Connection::recv`\n\u27e825\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#enums: \u00a7\n\u27e826\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.ClientError.html: enum rumqttc::ClientError - ClientError\n\u27e827\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.ConnectionError.html: enum rumqttc::ConnectionError - ConnectionError\n\u27e828\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.Event.html: enum rumqttc::Event - Event\n\u27e829\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.OptionError.html: enum rumqttc::OptionError - OptionError\n\u27e830\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.Outgoing.html: enum rumqttc::Outgoing - Outgoing\n\u27e831\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.ProxyAuth.html: enum rumqttc::ProxyAuth - ProxyAuth\n\u27e832\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.ProxyType.html: enum rumqttc::ProxyType - ProxyType\n\u27e833\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.RecvTimeoutError.html: enum rumqttc::RecvTimeoutError - RecvTimeoutError\n\u27e834\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html#method.recv_timeout: method rumqttc::Connection::recv_timeout - `Connection::recv_timeout`\n\u27e835\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.Request.html: enum rumqttc::Request - Request\n\u27e836\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.StateError.html: enum rumqttc::StateError - StateError\n\u27e837\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.TlsConfiguration.html: enum rumqttc::TlsConfiguration - TlsConfiguration\n\u27e838\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.TlsError.html: enum rumqttc::TlsError - TlsError\n\u27e839\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.Transport.html: enum rumqttc::Transport - Transport\n\u27e840\u27e9 https://docs.rs/rumqttc/latest/rumqttc/enum.TryRecvError.html: enum rumqttc::TryRecvError - TryRecvError\n\u27e841\u27e9 https://docs.rs/rumqttc/latest/rumqttc/struct.Connection.html#method.try_recv: method rumqttc::Connection::try_recv - `Connection::try_recv`\n\u27e842\u27e9 https://docs.rs/rumqttc/latest/rumqttc/#types: \u00a7\n\u27e843\u27e9 https://docs.rs/rumqttc/latest/rumqttc/type.Incoming.html: type rumqttc::Incoming - Incoming\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `rumqttc` crate is a robust and efficient MQTT client implemented in pure Rust, designed to work seamlessly in both synchronous and asynchronous environments using a `tokio`-based event loop. It supports features like automatic reconnections, backpressure handling, flow control, and customizable message distribution. The crate provides tools for managing MQTT connections, including options for graceful shutdown and connection state inspection.",
          "feature_summary": null,
          "use_case": "Networking",
          "score": 6.0,
          "factual_counterfactual": "### Pair 1: Eventloop and Connection Handling  \n\u2705 Factual: The `rumqttc` crate uses an async `EventLoop` to manage MQTT connections, ensuring robustness by handling outgoing/incoming packets concurrently and detecting half-open connections.  \n\u274c Counterfactual: The `rumqttc` crate automatically handles incoming MQTT messages without requiring users to poll the `EventLoop` or `Connection` iteratively.  \n\n---\n\n### Pair 2: Synchronous and Asynchronous APIs  \n\u2705 Factual: The `rumqttc` crate provides both synchronous (`Client`) and asynchronous (`AsyncClient`) APIs, allowing developers to choose the model that best fits their application's architecture.  \n\u274c Counterfactual: The `rumqttc` crate exclusively supports asynchronous APIs and does not provide synchronous alternatives for applications requiring blocking operations.  \n\n---\n\n### Pair 3: TLS and Broker Connection  \n\u2705 Factual: The `rumqttc` crate supports TLS connections to MQTT brokers but cannot establish TLS connections to bare IP addresses with self-signed certificates due to limitations in the `rustls` library.  \n\u274c Counterfactual: The `rumqttc` crate supports TLS connections to bare IP addresses with self-signed certificates without any additional configuration or workarounds.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-afc309d6-d1192cc3-1751263638",
      "timestamp": "2025-06-30T06:07:18.825830+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]